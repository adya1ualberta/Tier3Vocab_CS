BUSINESS
INTELLIGENCE
AND
ANALYTICS
BI
A
HAS
EMERGED
AS
AN
IMPORTANT
AREA
OF
STUDY
FOR
BOTH
PRACTITIONERS
AND
RESEARCHERS
REFLECTING
THE
MAGNITUDE
AND
IMPACT
OF
DATA
RELATED
PROBLEMS
TO
BE
SOLVED
IN
CONTEMPORARY
BUSINESS
ORGANIZATIONS
THIS
INTRODUCTION
TO
THE
MIS
QUARTERLY
SPECIAL
ISSUE
ON
BUSINESS
INTELLIGENCE
RESEARCH
FIRST
PROVIDES
A
FRAMEWORK
THAT
IDENTIFIES
THE
EVOLUTION
APPLICATIONS
AND
EMERGING
RESEARCH
AREAS
OF
BI
A
BI
A
BI
A
AND
BI
A
ARE
DEFINED
AND
DESCRIBED
IN
TERMS
OF
THEIR
KEY
CHARACTERISTICS
AND
CAPABILITIES
CURRENT
RESEARCH
IN
BI
A
IS
ANALYZED
AND
CHALLENGES
AND
OPPORTUNITIES
ASSOCIATED
WITH
BI
A
RESEARCH
AND
EDUCATION
ARE
IDENTIFIED
WE
ALSO
REPORT
A
BIBLIOMETRIC
STUDY
OF
CRITICAL
BI
A
PUBLICATIONS
RESEARCHERS
AND
RESEARCH
TOPICS
BASED
ON
MORE
THAN
A
DECADE
OF
RELATED
ACADEMIC
AND
INDUSTRY
PUBLICATIONS
FINALLY
THE
SIX
ARTICLES
THAT
COMPRISE
THIS
SPECIAL
ISSUE
ARE
INTRODUCED
AND
CHARACTERIZED
IN
TERMS
OF
THE
PROPOSED
BI
A
RESEARCH
FRAMEWORK
KEYWORDS
BUSINESS
INTELLIGENCE
AND
ANALYTICS
BIG
DATA
ANALYTICS
WEB
INTRODUCTION
I
PERCENT
OF
COMPANIES
WITH
REVENUES
EXCEEDING
MILLION
WERE
FOUND
TO
USE
SOME
FORM
OF
BUSINESS
ANALYTICS
A
REPORT
BUSINESS
INTELLIGENCE
BY
AND
THE
MCKINSEY
ANALYTICS
GLOBAL
INSTITUTE
MANYIKA
BI
A
ET
AL
PRE
AND
THE
FIELD
OF
BIG
DATA
ANALYTICS
DICTED
THAT
HAVE
BY
THE
BECOME
UNITED
STATES
ALONE
WILL
INCREASINGLY
FACE
A
SHORT
IM
IN
BOTH
THE
ACADEMIC
AND
THE
BUSINESS
COMMUNITIES
OVER
THE
AGE
OF
TO
PEOPLE
WITH
DEEP
ANALYTICAL
SKILLS
PAST
TWO
DECADES
INDUSTRY
STUDIES
HAVE
HIGHLIGHTED
THIS
AS
WELL
AS
A
SHORTFALL
OF
MILLION
DATA
SAWY
MANAGERS
WITH
SIGNIFICANT
DEVELOPMENT
FOR
EXAMPLE
BASED
ON
A
SURVEY
OF
THE
KNOW
HOW
TO
ANALYZE
BIG
DATA
TO
MAKE
EFFECTIVE
DECISIONS
OVER
INFORMATION
TECHNOLOGY
IT
PROFESSIONALS
FROM
COUNTRIES
AND
INDUSTRIES
THE
IBM
TECH
TRENDS
REPORT
HAL
VARÍAN
CHIEF
ECONOMIST
AT
GOOGLE
AND
EMERITUS
PROFES
IDENTIFIED
BUSINESS
ANALYTICS
AS
ONE
OF
THE
FOUR
MAJOR
SOR
AT
THE
UNIVERSITY
OF
CALIFORNIA
BERKELEY
COMMENTED
ON
TECHNOLOGY
TRENDS
IN
THE
IN
A
SURVEY
OF
THE
STATE
OF
THE
EMERGING
OPPORTUNITIES
FOR
IT
PROFESSIONALS
AND
STUDENTS
BUSINESS
ANALYTICS
BY
BLOOMBERG
BUSINESSWEEK
IN
DATA
ANALYSIS
AS
FOLLOWS
MIS
QUARTERLY
VOL
NO
PP
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AI
INTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
SO
WHAT
GETTING
UBIQUITOUS
AND
CHEAP
DATA
AND
WHAT
IS
COMPLEMENTARY
TO
DATA
ANALYSIS
SO
MY
RECOMMENDATION
IS
TO
TAKE
LOTS
OF
COURSES
ABOUT
HOW
TO
MANIPULATE
AND
ANALYZE
DATA
DATABASES
MACHINE
LEARNING
ECONOMETRICS
STATISTICS
VISUALIZATION
AND
SO
ON
THE
OPPORTUNITIES
ASSOCIATED
WITH
DATA
AND
ANALYSIS
IN
DIF
FERENT
ORGANIZATIONS
HAVE
HELPED
GENERATE
SIGNIFICANT
INTEREST
IN
BI
A
WHICH
IS
OFTEN
REFERRED
TO
AS
THE
TECHNIQUES
TECH
NOLOGIES
SYSTEMS
PRACTICES
METHODOLOGIES
AND
APPLICATIONS
THAT
ANALYZE
CRITICAL
BUSINESS
DATA
TO
HELP
AN
ENTERPRISE
BETTER
UNDERSTAND
ITS
BUSINESS
AND
MARKET
AND
MAKE
TIMELY
BUSINESS
DECISIONS
IN
ADDITION
TO
THE
UNDERLYING
DATA
PROCESSING
AND
ANALYTICAL
TECHNOLOGIES
BI
A
INCLUDES
BUSINESS
CENTRIC
PRACTICES
AND
METHODOLOGIES
THAT
CAN
BE
APPLIED
TO
VARIOUS
HIGH
IMPACT
APPLICATIONS
SUCH
AS
E
COMMERCE
MARKET
INTELLI
GENCE
E
GOVERNMENT
HEALTHCARE
AND
SECURITY
THIS
INTRODUCTION
TO
THE
MIS
QUARTERLY
SPECIAL
ISSUE
ON
BUSINESS
INTELLIGENCE
RESEARCH
PROVIDES
AN
OVERVIEW
OF
THIS
EXCITING
AND
HIGH
IMPACT
FIELD
HIGHLIGHTING
ITS
MANY
CHAL
LENGES
AND
OPPORTUNITIES
FIGURE
SHOWS
THE
KEY
SECTIONS
OF
THIS
PAPER
INCLUDING
BI
A
EVOLUTION
APPLICATIONS
AND
EMERGING
ANALYTICS
RESEARCH
OPPORTUNITIES
WE
THEN
REPORT
ON
A
BIBLIOMETRIC
STUDY
OF
CRITICAL
BI
A
PUBLICATIONS
RESEARCHERS
AND
RESEARCH
TOPICS
BASED
ON
MORE
THAN
A
DECADE
OF
RELATED
BI
A
ACADEMIC
AND
INDUSTRY
PUBLICATIONS
EDUCA
TION
AND
PROGRAM
DEVELOPMENT
OPPORTUNITIES
IN
BI
A
ARE
PRESENTED
FOLLOWED
BY
A
SUMMARY
OF
THE
SIX
ARTICLES
THAT
APPEAR
IN
THIS
SPECIAL
ISSUE
USING
OUR
RESEARCH
FRAMEWORK
THE
FINAL
SECTION
CONCLUDES
THE
PAPER
BI
A
EVOLUTION
KEY
CHARACTERISTICS
AND
CAPABILITIES
THE
TERM
INTELLIGENCE
HAS
BEEN
USED
BY
RESEARCHERS
IN
ARTIFICIAL
INTELLIGENCE
SINCE
THE
BUSINESS
INTELLIGENCE
BECAME
A
POPULAR
TERM
IN
THE
BUSINESS
AND
IT
COMMUNITIES
ONLY
IN
THE
IN
THE
LATE
BUSINESS
ANALYTICS
WAS
INTRODUCED
TO
REPRESENT
THE
KEY
ANALYTICAL
COMPONENT
IN
BI
DAVENPORT
MORE
RECENTLY
BIG
DATA
AND
BIG
DATA
ANALYTICS
HAVE
BEEN
USED
TO
DESCRIBE
THE
DATA
SETS
AND
ANA
LYTICAL
TECHNIQUES
IN
APPLICATIONS
THAT
ARE
SO
LARGE
FROM
TERABYTES
TO
EXABYTES
AND
COMPLEX
FROM
SENSOR
TO
SOCIAL
MEDIA
DATA
THAT
THEY
REQUIRE
ADVANCED
AND
UNIQUE
DATA
STORAGE
MANAGEMENT
ANALYSIS
AND
VISUALIZATION
TECHNOL
OGIES
IN
THIS
ARTICLE
WE
USE
BUSINESS
INTELLIGENCE
AND
ANA
LYTICS
BI
A
AS
A
UNIFIED
TERM
AND
TREAT
BIG
DATA
ANALYTICS
AS
A
RELATED
FIELD
THAT
OFFERS
NEW
DIRECTIONS
FOR
BI
A
RESEARCH
BI
A
AS
A
DATA
CENTRIC
APPROACH
BI
A
HAS
ITS
ROOTS
IN
THE
LONG
STANDING
DATABASE
MANAGEMENT
FIELD
IT
RELIES
HEAVILY
ON
VARIOUS
DATA
COLLECTION
EXTRACTION
AND
ANALYSIS
TECHNOLOGIES
CHAUDHURI
ET
AL
TURBAN
ET
AL
WATSON
AND
WIXOM
THE
BI
A
TECHNOLOGIES
AND
APPLICATIONS
CURRENTLY
ADOPTED
IN
INDUSTRY
CAN
BE
CONSIDERED
AS
BI
A
WHERE
DATA
ARE
MOSTLY
STRUCTURED
COLLECTED
BY
COMPANIES
THROUGH
VARIOUS
LEGACY
SYSTEMS
AND
OFTEN
STORED
IN
COMMER
CIAL
RELATIONAL
DATABASE
MANAGEMENT
SYSTEMS
RDBMS
THE
ANALYTICAL
TECHNIQUES
COMMONLY
USED
IN
THESE
SYSTEMS
POPULARIZED
IN
THE
ARE
GROUNDED
MAINLY
IN
STATISTICAL
METHODS
DEVELOPED
IN
THE
AND
DATA
MINING
TECHNIQUES
DEVELOPED
IN
THE
DATA
MANAGEMENT
AND
WAREHOUSING
IS
CONSIDERED
THE
FOUN
DATION
OF
BI
A
DESIGN
OF
DATA
MARTS
AND
TOOLS
FOR
EXTRACTION
TRANSFORMATION
AND
LOAD
ETL
ARE
ESSENTIAL
FOR
CONVERTING
AND
INTEGRATING
ENTERPRISE
SPECIFIC
DATA
DATABASE
QUERY
ONLINE
ANALYTICAL
PROCESSING
OLAP
AND
REPORTING
TOOLS
BASED
ON
INTUITIVE
BUT
SIMPLE
GRAPHICS
ARE
USED
TO
EXPLORE
IMPORTANT
DATA
CHARACTERISTICS
BUSINESS
PERFORMANCE
MANAGEMENT
BPM
USING
SCORECARDS
AND
DASHBOARDS
HELP
ANALYZE
AND
VISUALIZE
A
VARIETY
OF
PERFORMANCE
METRICS
IN
ADDITION
TO
THESE
WELL
ESTABLISHED
BUSINESS
REPORTING
FUNC
TIONS
STATISTICAL
ANALYSIS
AND
DATA
MINING
TECHNIQUES
ARE
ADOPTED
FOR
ASSOCIATION
ANALYSIS
DATA
SEGMENTATION
AND
CLUSTERING
CLASSIFICATION
AND
REGRESSION
ANALYSIS
ANOMALY
DETECTION
AND
PREDICTIVE
MODELING
IN
VARIOUS
BUSINESS
APPLI
CATIONS
MOST
OF
THESE
DATA
PROCESSING
AND
ANALYTICAL
TECH
NOLOGIES
HAVE
ALREADY
BEEN
INCORPORATED
INTO
THE
LEADING
COM
MERCIAL
BI
PLATFORMS
OFFERED
BY
MAJOR
IT
VENDORS
INCLUDING
MICROSOFT
IBM
ORACLE
AND
SAP
SALLAM
ET
AL
AMONG
THE
CAPABILITIES
CONSIDERED
ESSENTIAL
FOR
BI
PLAT
FORMS
ACCORDING
TO
THE
GARTNER
REPORT
BY
SALLAM
ET
AL
THE
FOLLOWING
EIGHT
ARE
CONSIDERED
BI
A
REPORTING
DASHBOARDS
AD
HOC
QUERY
SEARCH
BASED
BI
OLAP
INTERACTIVE
VISUALIZATION
SCORECARDS
PREDICTIVE
MODELING
AND
DATA
MINING
A
FEW
BI
A
AREAS
ARE
STILL
UNDER
ACTIVE
DEVEL
OPMENT
BASED
ON
THE
GARTNER
BI
HYPE
CYCLE
ANALYSIS
FOR
EMERGING
BI
TECHNOLOGIES
WHICH
INCLUDE
DATA
MINING
WORK
BENCHS
COLUMN
BASED
DBMS
IN
MEMORY
DBMS
AND
REAL
HAL
VARÍAN
ANSWERS
YOUR
QUESTIONS
FEBRUARY
HTTP
TIME
DECISION
TOOLS
BITTERER
ACADEMIC
CURRICULA
IN
WWW
FREAKONOMICS
COM
HAL
VARIAN
ANSWERS
YOUR
QUESTIONS
INFORMATION
SYSTEMS
IS
AND
COMPUTER
SCIENCE
CS
OFTEN
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AL
INTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
INCLUDE
WELL
STRUCTURED
COURSES
SUCH
AS
DATABASE
MANAGEMENT
WEB
ANALYTICS
TOOLS
SUCH
AS
GOOGLE
ANALYTICS
CAN
PROVIDE
A
SYSTEMS
DATA
MINING
AND
MULTIVARIATE
STATISTICS
TRAIL
OF
THE
USER
ONLINE
ACTIVITIES
AND
REVEAL
THE
USER
BROWSING
AND
PURCHASING
PATTERNS
WEB
SITE
DESIGN
PRODUCT
PLACEMENT
OPTIMIZATION
CUSTOMER
TRANSACTION
ANALYSIS
MARKET
BI
A
STRUCTURE
ANALYSIS
AND
PRODUCT
RECOMMENDATIONS
CAN
BE
ACCOMPLISHED
THROUGH
WEB
ANALYTICS
THE
MANY
WEB
SINCE
THE
EARLY
THE
INTERNET
AND
THE
WEB
BEGAN
TO
OFFER
APPLICATIONS
DEVELOPED
AFTER
HAVE
ALSO
CREATED
AN
ABUN
UNIQUE
DATA
COLLECTION
AND
ANALYTICAL
RESEARCH
AND
DEVELOP
DANCE
OF
USER
GENERATED
CONTENT
FROM
VARIOUS
ONLINE
SOCIAL
MENT
OPPORTUNITIES
THE
HTTP
BASED
WEB
SYSTEMS
MEDIA
SUCH
AS
FORUMS
ONLINE
GROUPS
WEB
BLOGS
SOCIAL
NET
CHARACTERIZED
BY
WEB
SEARCH
ENGINES
SUCH
AS
GOOGLE
WORKING
AND
SITES
SOCIAL
MULTIMEDIA
SITES
FOR
PHOTOS
AND
VIDEOS
YAHOO
AND
E
COMMERCE
BUSINESSES
SUCH
AS
AMAZON
AND
AND
EVEN
VIRTUAL
WORLDS
AND
SOCIAL
GAMES
O
REILLY
IN
EBAY
ALLOW
ORGANIZATIONS
TO
PRESENT
THEIR
BUSINESSES
ONLINE
ADDITION
TO
CAPTURING
CELEBRITY
CHATTER
REFERENCES
TO
EVERYDAY
AND
INTERACT
WITH
THEIR
CUSTOMERS
DIRECTLY
IN
ADDITION
EVENTS
TO
AND
SOCIO
POLITICAL
SENTIMENTS
EXPRESSED
IN
THESE
PORTING
THEIR
TRADITIONAL
RDBMS
BASED
PRODUCT
INFORMATION
MEDIA
WEB
APPLICATIONS
CAN
EFFICIENTLY
GATHER
A
LARGE
AND
BUSINESS
CONTENTS
ONLINE
DETAILED
AND
IP
SPECIFIC
USER
VOLUME
OF
TIMELY
FEEDBACK
AND
OPINIONS
FROM
A
DIVERSE
SEARCH
AND
INTERACTION
LOGS
THAT
ARE
COLLECTED
SEAMLESSLY
CUSTOMER
POPULATION
FOR
DIFFERENT
TYPES
OF
BUSINESSES
THROUGH
COOKIES
AND
SERVER
LOGS
HAVE
BECOME
A
NEW
GOLD
MINE
FOR
UNDERSTANDING
CUSTOMERS
NEEDS
AND
IDENTIFYING
MANY
NEW
MARKETING
RESEARCHERS
BELIEVE
THAT
SOCIAL
MEDIA
BUSINESS
OPPORTUNITIES
WEB
INTELLIGENCE
WEB
ANALYTICS
ANALYTICS
AND
PRESENTS
A
UNIQUE
OPPORTUNITY
FOR
BUSINESSES
TO
TREAT
THE
USER
GENERATED
CONTENT
COLLECTED
THROUGH
WEB
BASED
THE
MARKET
AS
A
CONVERSATION
BETWEEN
BUSINESSES
AND
SOCIAL
AND
CROWD
SOURCING
SYSTEMS
DOAN
ET
AL
CUSTOMERS
INSTEAD
OF
THE
TRADITIONAL
BUSINESS
TO
CUSTOMER
O
REILLY
HAVE
USHERED
IN
A
NEW
AND
EXCITING
ERA
ONE
WAY
OF
MARKETING
LUSCH
ET
AL
UNLIKE
BI
A
BI
A
RESEARCH
IN
THE
CENTERED
ON
TEXT
AND
WEB
TECHNOLOGIES
THAT
ARE
ALREADY
INTEGRATED
INTO
COMMERCIAL
ANALYTICS
FOR
UNSTRUCTURED
WEB
CONTENTS
ENTERPRISE
IT
SYSTEMS
FUTURE
BI
A
SYSTEMS
WILL
REQUIRE
THE
INTEGRATION
OF
MATURE
AND
SCALABLE
TECHNIQUES
IN
TEXT
AN
IMMENSE
AMOUNT
OF
COMPANY
INDUSTRY
PRODUCT
AND
MINING
E
G
INFORMATION
EXTRACTION
TOPIC
IDENTIFICATION
CUSTOMER
INFORMATION
CAN
BE
GATHERED
FROM
THE
WEB
AND
OPINION
MINING
QUESTION
ANSWERING
WEB
MINING
SOCIAL
ORGANIZED
AND
VISUALIZED
THROUGH
VARIOUS
TEXT
AND
WEB
MINING
NETWORK
ANALYSIS
AND
SPATIAL
TEMPORAL
ANALYSIS
WITH
EXISTING
TECHNIQUES
BY
ANALYZING
CUSTOMER
CLICKSTREAM
DATA
LOGS
DBMS
BASED
BI
A
SYSTEMS
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AL
INTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
EXCEPT
FOR
BASIC
QUERY
AND
SEARCH
CAPABILITIES
NO
ADVANCED
TEXT
ANALYTICS
FOR
UNSTRUCTURED
CONTENT
ARE
CURRENTLY
CON
SIDERED
IN
THE
CAPABILITIES
OF
THE
GARTNER
BI
PLATFORMS
SEVERAL
HOWEVER
ARE
LISTED
IN
THE
GARTNER
BI
HYPE
CYCLE
INCLUDING
INFORMATION
SEMANTIC
SERVICES
NATURAL
LANGUAGE
QUESTION
ANSWERING
AND
CONTENT
TEXT
ANALYTICS
BITTERER
NEW
IS
AND
CS
COURSES
IN
TEXT
MINING
AND
WEB
MINING
HAVE
EMERGED
TO
ADDRESS
NEEDED
TECHNICAL
TRAINING
BI
A
WHEREAS
WEB
BASED
BI
A
HAS
ATTRACTED
ACTIVE
RESEARCH
FROM
ACADEMIA
AND
INDUSTRY
A
NEW
RESEARCH
OPPORTUNITY
IN
BI
A
IS
EMERGING
AS
REPORTED
PROMINENTLY
IN
AN
OCTOBER
ARTICLE
IN
THE
ECONOMIST
THE
NUMBER
OF
MOBILE
PHONES
AND
TABLETS
ABOUT
MILLION
UNITS
SURPASSED
THE
NUMBER
OF
LAPTOPS
AND
PCS
ABOUT
MILLION
UNITS
FOR
THE
FIRST
TIME
IN
ALTHOUGH
THE
NUMBER
OF
PCS
IN
USE
SURPASSED
BILLION
IN
THE
SAME
ARTICLE
PROJECTED
THAT
THE
NUMBER
OF
MOBILE
CONNECTED
DEVICES
WOULD
REACH
BILLION
IN
MOBILE
DEVICES
SUCH
AS
THE
IPAD
IPHONE
AND
OTHER
SMART
PHONES
AND
THEIR
COMPLETE
ECOSYSTEMS
OF
DOWNLOADABLE
APPLICATIONSS
FROM
TRAVEL
ADVISORIES
TO
MULTI
PLAYER
GAMES
ARE
TRANSFORMING
DIFFERENT
FACETS
OF
SOCIETY
FROM
EDUCATION
TO
HEALTHCARE
AND
FROM
ENTERTAINMENT
TO
GOVERNMENTS
OTHER
SENSOR
BASED
INTERNET
ENABLED
DEVICES
EQUIPPED
WITH
RFID
BARCODES
AND
RADIO
TAGS
THE
INTERNET
OF
THINGS
ARE
OPENING
UP
EXCITING
NEW
STEAMS
OF
INNOVATIVE
APPLICATIONS
THE
ABILITY
OF
SUCH
MOBILE
AND
INTERNET
ENABLED
DEVICES
TO
SUPPORT
HIGHLY
MOBILE
LOCATION
AWARE
PERSON
CENTERED
AND
CONTEXT
RELEVANT
OPERATIONS
AND
TRANSACTIONS
WILL
CONTINUE
TO
OFFER
UNIQUE
RESEARCH
CHALLENGES
AND
OPPORTUNITIES
THROUGHOUT
THE
MOBILE
INTERFACE
VISUALIZATION
AND
HCL
HUMAN
COMPUTER
INTERACTION
DESIGN
ARE
ALSO
PROMISING
RESEARCH
AREAS
ALTHOUGH
THE
COMING
OF
THE
WEB
MOBILE
AND
SENSOR
BASED
ERA
SEEMS
CERTAIN
THE
UNDERLYING
MOBILE
ANALYTICS
AND
LOCATION
AND
CONTEXT
AWARE
TECHNIQUES
FOR
COLLECTING
PROCESSING
ANALYZING
AND
VISUALIZING
SUCH
LARGE
SCALE
AND
FLUID
MOBILE
AND
SENSOR
DATA
ARE
STILL
UNKNOWN
NO
INTEGRATED
COMMERCIAL
BI
A
SYSTEMS
ARE
FORESEEN
FOR
THE
NEAR
FUTURE
MOST
OF
THE
ACADEMIC
RESEARCH
ON
MOBILE
BI
IS
STILL
IN
AN
EMBRYONIC
STAGE
ALTHOUGH
NOT
INCLUDED
IN
THE
CURRENT
BI
PLATFORM
CORE
CAPABILITIES
MOBILE
BI
HAS
BEEN
INCLUDED
IN
THE
GARTNER
BI
HYPE
CYCLE
ANALYSIS
AS
ONE
OF
THE
NEW
TECHNOLOGIES
THAT
HAS
THE
POTENTIAL
TO
DISRUPT
THE
BI
MARKET
SIGNIFICANTLY
BITTERER
THE
UNCERTAINTY
ASSO
CIATED
WITH
BI
A
PRESENTS
ANOTHER
UNIQUE
RESEARCH
DIRECTION
FOR
THE
IS
COMMUNITY
TABLE
SUMMARIZES
THE
KEY
CHARACTERISTICS
OF
BI
A
AND
IN
RELATION
TO
THE
GARTNER
BI
PLATFORMS
CORE
CAPA
BILITIES
AND
HYPE
CYCLE
THE
DECADE
OF
THE
PROMISES
TO
BE
AN
EXCITING
ONE
FOR
HIGH
IMPACT
BI
A
RESEARCH
AND
DEVELOPMENT
FOR
BOTH
INDUS
TRY
AND
ACADEMIA
THE
BUSINESS
COMMUNITY
AND
INDUSTRY
HAVE
ALREADY
TAKEN
IMPORTANT
STEPS
TO
ADOPT
BI
A
FOR
THEIR
NEEDS
THE
IS
COMMUNITY
FACES
UNIQUE
CHALLENGES
AND
OPPORTUNITIES
IN
MAKING
SCIENTIFIC
AND
SOCIETAL
IMPACTS
THAT
ARE
RELEVANT
AND
LONG
LASTING
CHEN
LA
IS
RESEARCH
AND
EDUCATION
PRO
GRAMS
NEED
TO
CAREFULLY
EVALUATE
FUTURE
DIRECTIONS
CURRICULA
AND
ACTION
PLANS
FROM
BI
A
TO
BI
A
APPLICATIONS
FROM
BIG
DATA
TO
BIG
IMPACT
SEVERAL
GLOBAL
BUSINESS
AND
IT
TRENDS
HAVE
HELPED
SHAPE
PAST
AND
PRESENT
BI
A
RESEARCH
DIRECTIONS
INTERNATIONAL
TRAVEL
HIGH
SPEED
NETWORK
CONNECTIONS
GLOBAL
SUPPLY
CHAIN
AND
OUTSOURCING
HAVE
CREATED
A
TREMENDOUS
OPPORTUNITY
FOR
IT
ADVANCEMENT
AS
PREDICTED
BY
THOMAS
FREEMAN
IN
HIS
SEMINAL
BOOK
THE
WORLD
IS
FLAT
IN
ADDITION
TO
ULTRA
FAST
GLOBAL
IT
CONNECTIONS
THE
DEVELOPMENT
AND
DEPLOYMENT
OF
BUSINESS
RELATED
DATA
STANDARDS
ELECTRONIC
DATA
INTERCHANGE
EDI
FORMATS
AND
BUSINESS
DATABASES
AND
INFORMATION
SYSTEMS
HAVE
GREATLY
FACILITATED
BUSINESS
DATA
CREATION
AND
UTILIZATION
THE
DEVELOPMENT
OF
THE
INTERNET
IN
THE
AND
THE
SUBSEQUENT
LARGE
SCALE
ADOPTION
OF
THE
WORLD
WIDE
WEB
SINCE
THE
HAVE
INCREASED
BUSINESS
DATA
GENERATION
AND
COLLECTION
SPEEDS
EXPONENTIALLY
RECENTLY
THE
BIG
DATA
ERA
HAS
QUIETLY
DESCENDED
ON
MANY
COMMUNITIES
FROM
GOVERN
MENTS
AND
E
COMMERCE
TO
HEALTH
ORGANIZATIONS
WITH
AN
OVERWHELMING
AMOUNT
OF
WEB
BASED
MOBILE
AND
SENSOR
GENERATED
DATA
ARRIVING
AT
A
TERABYTE
AND
EVEN
EXABYTE
SCALE
THE
ECONOMIST
NEW
SCIENCE
DISCOVERY
AND
INSIGHTS
CAN
BE
OBTAINED
FROM
THE
HIGHLY
DETAILED
CONTEX
TUALIZED
AND
RICH
CONTENTS
OF
RELEVANCE
TO
ANY
BUSINESS
OR
ORGANIZATION
IN
ADDITION
TO
BEING
DATA
DRIVEN
BI
A
IS
HIGHLY
APPLIED
AND
CAN
LEVERAGE
OPPORTUNITIES
PRESENTED
BY
THE
ABUNDANT
DATA
AND
DOMAIN
SPECIFIC
ANALYTICS
NEEDED
IN
MANY
CRITICAL
AND
HIGH
IMPACT
APPLICATION
AREAS
SEVERAL
OF
THESE
PROMISING
AND
HIGH
IMPACT
BI
A
APPLICATIONS
ARE
PRESENTED
BELOW
WITH
A
DISCUSSION
OF
THE
DATA
AND
ANALYTICS
CHARACTERISTICS
POTENTIAL
IMPACTS
AND
SELECTED
ILLUSTRATIVE
EXAMPLES
OR
STUDIES
E
COMMERCE
AND
MARKET
INTELLIGENCE
E
GOVERNMENT
AND
POLITICS
SCIENCE
AND
TECHNOLOGY
SMART
HEALTH
AND
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AL
LNTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
GARTNER
BL
PLATFORMS
CORE
KEY
CHARACTERISTICS
CAPABILITIES
GARTNER
HYPE
CYCLE
BI
A
DBMS
BASED
STRUCTURED
CONTENT
AD
HOC
QUERY
SEARCH
BASED
BL
COLUMN
BASED
DBMS
RDBMS
DATA
WAREHOUSING
REPORTING
DASHBOARDS
SCORECARDS
LN
MEMORY
DBMS
ETL
OLAP
OLAP
REAL
TIME
DECISION
DASHBOARDS
SCORECARDS
INTERACTIVE
VISUALIZATION
DATA
MINING
WORKBENCHES
DATA
MINING
STATISTICAL
ANALYSIS
PREDICTIVE
MODELING
DATA
MINING
BI
A
WEB
BASED
UNSTRUCTURED
CONTENT
INFORMATION
SEMANTIC
INFORMATION
RETRIEVAL
AND
EXTRACTION
SERVICES
OPINION
MINING
NATURAL
LANGUAGE
QUESTION
QUESTION
ANSWERING
ANSWERING
WEB
ANALYTICS
AND
WEB
CONTENT
TEXT
ANALYTICS
INTELLIGENCE
SOCIAL
MEDIA
ANALYTICS
SOCIAL
NETWORK
ANALYSIS
SPATIAL
TEMPORAL
ANALYSIS
BI
A
MOBILE
AND
SENSOR
BASED
CONTENT
MOBILE
BL
LOCATION
AWARE
ANALYSIS
PERSON
CENTERED
ANALYSIS
CONTEXT
RELEVANT
ANALYSIS
MOBILE
VISUALIZATION
HCL
WELL
BEING
AND
SECURITY
AND
PUBLIC
SAFETY
BY
CAREFULLY
ANALYZING
THE
APPLICATION
AND
DATA
CHARACTERISTICS
RESEARCHERS
AND
PRACTITIONERS
CAN
THEN
ADOPT
OR
DEVELOP
THE
APPROPRIATE
ANALYTICAL
TECHNIQUES
TO
DERIVE
THE
INTENDED
IMPACT
IN
ADDI
TION
TO
TECHNICAL
SYSTEM
IMPLEMENTATION
SIGNIFICANT
BUSINESS
OR
DOMAIN
KNOWLEDGE
AS
WELL
AS
EFFECTIVE
COMMUNICATION
SKILLS
ARE
NEEDED
FOR
THE
SUCCESSFUL
COMPLETION
OF
SUCH
BI
A
PROJECTS
IS
DEPARTMENTS
THUS
FACE
UNIQUE
OPPORTUNITIES
AND
CHALLENGES
IN
DEVELOPING
INTEGRATED
BI
A
RESEARCH
AND
EDUCATION
PROGRAMS
FOR
THE
NEW
GENERATION
OF
DATA
ANALYTICS
SAWY
AND
BUSINESS
RELEVANT
STUDENTS
AND
PROFESSIONALS
CHEN
E
COMMERCE
AND
MARKET
INTELLIGENCE
THE
EXCITEMENT
SURROUNDING
BI
A
AND
BIG
DATA
HAS
ARGUABLY
BEEN
GENERATED
PRIMARILY
FROM
THE
WEB
AND
E
COMMERCE
COMMUNITIES
SIGNIFICANT
MARKET
TRANSFORMATION
HAS
BEEN
ACCOMPLISHED
BY
LEADING
E
COMMERCE
VENDORS
SUCH
AMAZON
AND
EBAY
THROUGH
THEIR
INNOVATIVE
AND
HIGHLY
SCALABLE
E
COMMERCE
PLATFORMS
AND
PRODUCT
RECOMMENDER
SYSTEMS
MAJOR
INTERNET
FIRMS
SUCH
AS
GOOGLE
AMAZON
AND
FACEBOOK
CONTINUE
TO
LEAD
THE
DEVELOPMENT
OF
WEB
ANALYTICS
CLOUD
COMPUTING
AND
SOCIAL
MEDIA
PLATFORMS
THE
EMERGENCE
OF
CUSTOMER
GENERATED
WEB
CONTENT
ON
VARIOUS
FORUMS
NEWSGROUPS
SOCIAL
MEDIA
PLATFORMS
AND
CROWD
SOURCING
SYSTEMS
OFFERS
ANOTHER
OPPORTUNITY
FOR
RESEARCHERS
AND
PRAC
TITIONERS
TO
LISTEN
TO
THE
VOICE
OF
THE
MARKET
FROM
A
VAST
NUMBER
OF
BUSINESS
CONSTITUENTS
THAT
INCLUDES
CUSTOMERS
EM
PLOYEES
INVESTORS
AND
THE
MEDIA
DOAN
ET
AL
O
RIELLY
UNLIKE
TRADITIONAL
TRANSACTION
RECORDS
COLLECTED
FROM
VARIOUS
LEGACY
SYSTEMS
OF
THE
THE
DATA
THAT
E
COMMERCE
SYSTEMS
COLLECT
FROM
THE
WEB
ARE
LESS
STRUCTURED
AND
OFTEN
CONTAIN
RICH
CUSTOMER
OPINION
AND
BEHAVIORAL
INFORMATION
FOR
SOCIAL
MEDIA
ANALYTICS
OF
CUSTOMER
OPINIONS
TEXT
ANALYSIS
AND
SENTIMENT
ANALYSIS
TECHNIQUES
ARE
FREQUENTLY
ADOPTED
PANG
AND
LEE
VARIOUS
ANALYTICAL
TECHNIQUES
HAVE
ALSO
BEEN
DEVELOPED
FOR
PRODUCT
RECOMMENDER
SYSTEMS
SUCH
AS
ASSOCIATION
RULE
MINING
DATABASE
SEGMENTATION
AND
CLUSTERING
ANOMALY
DETECTION
AND
GRAPH
MINING
ADOMAVICIUS
AND
TUZHILIN
LONG
TAIL
MARKETING
ACCOMPLISHED
BY
REACHING
THE
MILLIONS
OF
NICHE
MARKETS
AT
THE
SHALLOW
END
OF
THE
PRODUCT
BITSTREAM
HAS
BECOME
POSSIBLE
VIA
HIGHLY
TARGETED
SEARCHES
AND
PERSONALIZED
RECOMMENDATIONS
ANDERSON
THE
NETFIX
PRIZE
FOR
THE
BEST
COLLABORATIVE
FILTERING
ALGORITHM
TO
PREDICT
USER
MOVIE
RATINGS
HELPED
GENER
ATE
SIGNIFICANT
ACADEMIC
AND
INDUSTRY
INTEREST
IN
RECOMMENDER
SYSTEMS
DEVELOPMENT
AND
RESULTED
IN
AWARDING
THE
GRAND
PRIZE
OF
MILLION
TO
THE
BELLKOR
PRAGMATIC
CHAOS
TEAM
WHICH
PRIZE
HTTP
WWW
NETFLIXPRIZE
EOM
COMMUNITY
VIEWTOPIC
PHP
ID
ACCESSED
JULY
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AL
INTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
SURPASSED
NETFLIX
OWN
ALGORITHM
FOR
PREDICTING
RATINGS
BY
ASTROPHYSICS
AND
OCEANOGRAPHY
TO
GENOMICS
AND
ENVIRON
PERCENT
HOWEVER
THE
PUBLICITY
ASSOCIATED
WITH
THE
MENTAL
RESEARCH
TO
FACILITATE
INFORMATION
SHARING
AND
DATA
COMPETITION
ALSO
RAISED
MAJOR
UNINTENDED
CUSTOMER
PRIVACY
ANALYTICS
THE
NATIONAL
SCIENCE
FOUNDATION
NSF
RECENTLY
CONCERNS
MANDATED
THAT
EVERY
PROJECT
IS
REQUIRED
TO
PROVIDE
A
DATA
MANAGEMENT
PLAN
CYBER
INFRASTRUCTURE
IN
PARTICULAR
HAS
MUCH
BI
A
RELATED
E
COMMERCE
RESEARCH
AND
BECOME
DEVELOPMENT
CRITICAL
FOR
SUPPORTING
SUCH
DATA
SHARING
INITIATIVES
INFORMATION
IS
APPEARING
IN
ACADEMIC
IS
AND
CS
PAPERS
AS
WELL
AS
IN
POPULAR
IT
MAGAZINES
THE
NSF
PROGRAM
SOLICITATION
IS
AN
OBVIOUS
EXAMPLE
OF
THE
U
GOVERNMENT
FUNDING
AGENCY
CONCERTED
EFFORTS
TO
PROMOTE
BIG
DATA
ANALYTICS
THE
PROGRAM
E
GOVERNMENT
AND
POLITICS
AIMS
TO
ADVANCE
THE
CORE
SCIENTIFIC
AND
TECHNOLOGICAL
THE
ADVENT
OF
WEB
HAS
GENERATED
MUCH
EXCITEMENT
MEANS
FOR
OF
MANAGING
ANALYZING
VISUALIZING
AND
EX
REINVENTING
GOVERNMENTS
THE
U
HOUSE
SENATE
TRACTING
AND
USEFUL
INFORMATION
FROM
LARGE
DIVERSE
DIS
PRESIDENTIAL
ELECTIONS
PROVIDED
THE
FIRST
SIGNS
OF
SUCCESS
TRIBUTED
FOR
AND
HETEROGENEOUS
DATA
SETS
SO
AS
TO
ACCEL
ONLINE
CAMPAIGNING
AND
POLITICAL
PARTICIPATION
DUBBED
ERATE
THE
PROGRESS
OF
SCIENTIFIC
DISCOVERY
AND
INNOVA
POLITICS
POLITICIANS
USE
THE
HIGHLY
PARTICIPATORY
AND
TION
LEAD
TO
NEW
FIELDS
OF
INQUIRY
THAT
WOULD
NOT
MULTIMEDIA
WEB
PLATFORMS
FOR
SUCCESSFUL
POLICY
DISCUSSIONS
OTHERWISE
BE
POSSIBLE
ENCOURAGE
THE
DEVELOPMENT
OF
CAMPAIGN
ADVERTISING
VOTER
MOBILIZATION
EVENT
ANNOUNCE
NEW
DATA
ANALYTIC
TOOLS
AND
ALGORITHMS
FACILITATE
MENTS
AND
ONLINE
DONATIONS
AS
GOVERNMENT
AND
POLITICAL
SCALABLE
ACCESSIBLE
AND
SUSTAINABLE
DATA
INFRASTRUC
PROCESSES
BECOME
MORE
TRANSPARENT
PARTICIPATORY
ONLINE
TURE
AND
INCREASE
UNDERSTANDING
OF
HUMAN
AND
SOCIAL
MULTIMEDIA
RICH
THERE
IS
A
GREAT
OPPORTUNITY
FOR
ADOPTING
PROCESSES
AND
INTERACTIONS
AND
PROMOTE
ECONOMIC
BI
A
RESEARCH
IN
E
GOVERNMENT
AND
POLITICS
APPLICATIONS
GROWTH
AND
IMPROVED
HEALTH
AND
QUALITY
OF
LIFE
SELECTED
OPINION
MINING
SOCIAL
NETWORK
ANALYSIS
AND
SOCIAL
MEDIA
ANALYTICS
TECHNIQUES
CAN
BE
USED
TO
SUPPORT
SEVERAL
ONLINE
T
DISCIPLINES
HAVE
ALREADY
BEGUN
THEIR
JOURNEY
POLITICAL
PARTICIPATION
E
DEMOCRACY
POLITICAL
BLOGS
TOWARD
AND
BIG
DATA
ANALYTICS
FOR
EXAMPLE
IN
BIOLOGY
THE
NSF
FORUMS
ANALYSIS
E
GOVERNMENT
SERVICE
DELIVERY
AND
FUNDED
PROCESS
IPLANT
IS
USING
CYBERINFRASTRUCTURE
TO
TRANSPARENCY
AND
ACCOUNTABILITY
CHEN
CHEN
SUPPORT
ET
AL
A
COMMUNITY
OF
RESEARCHERS
EDUCATORS
AND
STUDENTS
FOR
E
GOVERNMENT
APPLICATIONS
SEMANTIC
INFORMATION
WORKING
IN
PLANT
SCIENCES
IPLANT
IS
INTENDED
TO
FOSTER
A
NEW
DIRECTORY
AND
ONTOLOGICAL
DEVELOPMENT
AS
EXEMPLIFIED
GENERATION
BELOW
OF
BIOLOGISTS
EQUIPPED
TO
HARNESS
RAPIDLY
EX
CAN
ALSO
BE
DEVELOPED
TO
BETTER
SERVE
THEIR
TARGET
CITIZENS
PANDING
COMPUTATIONAL
TECHNIQUES
AND
GROWING
DATA
SETS
TO
ADDRESS
THE
GRAND
CHALLENGES
OF
PLANT
BIOLOGY
THE
IPLANT
DATA
DESPITE
THE
SIGNIFICANT
TRANSFORMATIONAL
POTENTIAL
FOR
BI
A
SET
IS
IN
DIVERSE
AND
INCLUDES
CANONICAL
OR
REFERENCE
DATA
E
GOVERNMENT
RESEARCH
THERE
HAS
BEEN
LESS
ACADEMIC
EXPERIMENTAL
RESEARCH
DATA
SIMULATION
AND
MODEL
DATA
OBSERVATIONAL
THAN
FOR
EXAMPLE
E
COMMERCE
RELATED
BI
A
RESEARCH
DATA
E
AND
OTHER
DERIVED
DATA
IT
ALSO
OFFERS
VARIOUS
OPEN
GOVERNMENT
RESEARCH
OFTEN
INVOLVES
RESEARCHERS
FROM
POLITICAL
SOURCE
DATA
PROCESSING
AND
ANALYTICS
TOOLS
SCIENCE
AND
PUBLIC
POLICY
FOR
EXAMPLE
KARPF
ANA
LYZED
THE
GROWTH
OF
THE
POLITICAL
BLOGOSPHERE
IN
THE
IN
UNITED
ASTRONOMY
THE
SLOAN
DIGITAL
SKY
SURVEY
SDSS
SHOWS
STATES
AND
FOUND
SIGNIFICANT
INNOVATION
OF
EXISTING
POLITICAL
HOW
COMPUTATIONAL
METHODS
AND
BIG
DATA
CAN
SUPPORT
AND
INSTITUTIONS
IN
ADOPTING
BLOGGING
PLATFORMS
INTO
THEIR
FACILITATE
WEB
SENSE
MAKING
AND
DECISION
MAKING
AT
BOTH
THE
OFFERINGS
IN
HIS
RESEARCH
BLOGSPACE
MAPPING
WITH
MACROSCOPIC
COM
AND
THE
MICROSCOPIC
LEVEL
IN
A
RAPIDLY
GROWING
POSITE
RANKINGS
HELPED
REVEAL
THE
PARTISAN
MAKEUP
OF
AND
THE
GLOBALIZED
RESEARCH
FIELD
THE
SDSS
IS
ONE
OF
THE
MOST
AMERICAN
POLITICAL
BLOGSPHERE
YANG
AND
CALLAN
AMBITIOUS
AND
INFLUENTIAL
SURVEYS
IN
THE
HISTORY
OF
ASTRONOMY
DEMONSTRATED
THE
VALUE
FOR
ONTOLOGY
DEVELOPMENT
FOR
GOVERN
MENT
SERVICES
THROUGH
THEIR
DEVELOPMENT
OF
THE
ONTOCOP
SYSTEM
WHICH
WORKS
INTERACTIVELY
WITH
A
USER
TO
ORGANIZE
CORE
AND
TECHNIQUES
AND
TECHNOLOGIES
FOR
ADVANCING
BIG
DATA
SCIENCE
SUMMARIZE
ONLINE
PUBLIC
COMMENTS
FROM
CITIZENS
ENGINEERING
BIGDATA
PROGRAM
SOLICITATION
NSF
HTTP
WWW
NSF
GOV
PUBS
NSFL
HTM
ACCESSED
AUGUST
SCIENCE
AND
TECHNOLOGY
COLLABORATIVE
HTTP
WWW
IPLANTCOLLABORATIVE
ORG
ABOUT
ACCESSED
AUGUST
MANY
AREAS
OF
SCIENCE
AND
TECHNOLOGY
T
ARE
REAPING
SLOAN
THE
DIGITAL
SKY
SURVEY
MAPPING
THE
UNIVERSE
HTTP
WWW
SDSS
ORG
BENEFITS
OF
HIGH
THROUGHPUT
SENSORS
AND
INSTRUMENTS
ACCESSED
FROM
AUGUST
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AL
INTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
OVER
ITS
EIGHT
YEARS
OF
OPERATION
IT
HAS
OBTAINED
DEEP
MULTI
COLOR
IMAGES
COVERING
MORE
THAN
A
QUARTER
OF
THE
SKY
AND
CREATED
THREE
DIMENSIONAL
MAPS
CONTAINING
MORE
THAN
GALAXIES
AND
OVER
QUASARS
CONTINUING
TO
GATHER
DATA
AT
A
RATE
OF
GIGABYTES
PER
NIGHT
SDSS
HAS
AMASSED
MORE
THAN
TERABYTES
OF
DATA
THE
INTERNATIONAL
LARGE
HADRON
COLLIDER
LHC
EFFORT
FOR
HIGH
ENERGY
PHYSICS
IS
ANOTHER
EXAMPLE
OF
BIG
DATA
PRODUCING
ABOUT
PETABYTES
OF
DATA
IN
A
YEAR
BRUMFIEL
SMART
HEALTH
AND
WELLBEING
MUCH
LIKE
THE
BIG
DATA
OPPORTUNITIES
FACING
THE
E
COMMERCE
AND
T
COMMUNITIES
THE
HEALTH
COMMUNITY
IS
FACING
A
TSUNAMI
OF
HEALTH
AND
HEALTHCARE
RELATED
CONTENT
GENERATED
FROM
NUMEROUS
PATIENT
CARE
POINTS
OF
CONTACT
SOPHISTICATED
MEDICAL
INSTRUMENTS
AND
WEB
BASED
HEALTH
COMMUNITIES
TWO
MAIN
SOURCES
OF
HEALTH
BIG
DATA
ARE
GENOMICS
DRIVEN
BIG
DATA
GENOTYPING
GENE
EXPRESSION
SEQUENCING
DATA
AND
PAYER
PROVIDER
BIG
DATA
ELECTRONIC
HEALTH
RECORDS
INSURANCE
RECORDS
PHARMACY
PRESCRIPTION
PATIENT
FEEDBACK
AND
RESPONSES
MILLER
THE
EXPECTED
RAW
SEQUENCING
DATA
FROM
EACH
PERSON
IS
APPROXIMATELY
FOUR
TERABYTES
FROM
THE
PAYER
PROVIDER
SIDE
A
DATA
MATRIX
MIGHT
HAVE
HUNDREDS
OF
THOUSANDS
OF
PATIENTS
WITH
MANY
RECORDS
AND
PARAMETERS
DEMOGRAPHICS
MEDICATIONS
OUTCOMES
COLLECTED
OVER
A
LONG
PERIOD
OF
TIME
EXTRACTING
KNOWLEDGE
FROM
HEALTH
BIG
DATA
POSES
SIGNIFICANT
RESEARCH
AND
PRACTICAL
CHALLENGES
ESPECIALLY
CONSIDERING
THE
HIPAA
HEALTH
INSURANCE
PORTABILITY
AND
ACCOUNTABILITY
ACT
AND
IRB
INSTITUTIONAL
REVIEW
BOARD
REQUIREMENTS
FOR
BUILDING
A
PRIVACY
PRESERVING
AND
TRUST
WORTHY
HEALTH
INFRASTRUCTURE
AND
CONDUCTING
ETHICAL
HEALTH
RELATED
RESEARCH
GELFAND
HEALTH
BIG
DATA
ANA
LYTICS
IN
GENERAL
LAGS
BEHIND
E
COMMERCE
BI
A
APPLICATIONS
BECAUSE
IT
HAS
RARELY
TAKEN
ADVANTAGE
OF
SCALABLE
ANALYTICAL
METHODS
OR
COMPUTATIONAL
PLATFORMS
MILLER
OVER
THE
PAST
DECADE
ELECTRONIC
HEALTH
RECORDS
EHR
HAVE
BEEN
WIDELY
ADOPTED
IN
HOSPITALS
AND
CLINICS
WORLDWIDE
SIGNIFICANT
CLINICAL
KNOWLEDGE
AND
A
DEEPER
UNDERSTANDING
OF
PATIENT
DISEASE
PATTERNS
CAN
BE
GLEANDED
FROM
SUCH
COLLECTIONS
HANAUER
ET
AL
HANAUER
ET
AL
LIN
ET
AL
HANAUER
ET
AL
FOR
EXAMPLE
USED
LARGE
SCALE
LONGI
TUDINAL
EHR
TO
RESEARCH
ASSOCIATIONS
IN
MEDICAL
DIAGNOSES
AND
CONSIDER
TEMPORAL
RELATIONS
BETWEEN
EVENTS
TO
BETTER
ELUCIDATE
PATTERNS
OF
DISEASE
PROGRESSION
LIN
ET
AL
USED
SYMPTOM
DISEASE
TREATMENT
SDT
ASSOCIATION
RULE
MINING
ON
A
COMPREHENSIVE
EHR
OF
APPROXIMATELY
MILLION
RECORDS
FROM
A
MAJOR
HOSPITAL
BASED
ON
SELECTED
INTERNATIONAL
CLASSIFICATION
OF
DISEASES
ICD
CODES
THEY
WERE
ABLE
TO
IDENTIFY
CLINICALLY
RELEVANT
AND
ACCURATE
SDT
ASSOCIATIONS
FROM
PATIENT
RECORDS
IN
SEVEN
DISTINCT
DISEASES
RANGING
FROM
CANCERS
TO
CHRONIC
AND
INFECTIOUS
DISEASES
IN
ADDITION
TO
EHR
HEALTH
SOCIAL
MEDIA
SITES
SUCH
AS
DAILY
STRENGTH
AND
PATIENTSLIKEME
PROVIDE
UNIQUE
RESEARCH
OPPOR
TUNITIES
IN
HEALTHCARE
DECISION
SUPPORT
AND
PATIENT
EMPOWER
MENT
MILLER
ESPECIALLY
FOR
CHRONIC
DISEASES
SUCH
AS
DIABETES
PARKINSON
ALZHEIMER
AND
CANCER
ASSOCIATION
RULE
MINING
AND
CLUSTERING
HEALTH
SOCIAL
MEDIA
MONITORING
AND
ANALYSIS
HEALTH
TEXT
ANALYTICS
HEALTH
ONTOLOGIES
PATIENT
NETWORK
ANALYSIS
AND
ADVERSE
DRUG
SIDE
EFFECT
ANALYSIS
ARE
PROMISING
AREAS
OF
RESEARCH
IN
HEALTH
RELATED
BI
A
DUE
TO
THE
IMPORTANCE
OF
HIPAA
REGULATIONS
PRIVACY
PRESERVING
HEALTH
DATA
MINING
IS
ALSO
GAINING
ATTENTION
GELFAND
PARTIALLY
FUNDED
BY
THE
NATIONAL
INSTITUTES
OF
HEALTH
NIH
THE
NSF
BIGDATA
PROGRAM
SOLICITATION
INCLUDES
COMMON
INTERESTS
IN
BIG
DATA
ACROSS
NSF
AND
NIH
CLINICAL
DECISION
MAKING
PATIENT
CENTERED
THERAPY
AND
KNOWLEDGE
BASES
FOR
HEALTH
DISEASE
GENOME
AND
ENVIRONMENT
ARE
SOME
OF
THE
AREAS
IN
WHICH
BI
A
TECHNIQUES
CAN
CONTRIBUTE
CHEN
LB
WACTLAR
ET
AL
ANOTHER
RECENT
MAJOR
NSF
INITIATIVE
RELATED
TO
HEALTH
BIG
DATA
ANALYTICS
IS
THE
NSF
SMART
HEALTH
AND
WELLBEING
SHB
PROGRAM
WHICH
SEEKS
TO
ADDRESS
FUNDAMENTAL
TECHNICAL
AND
SCIENTIFIC
ISSUES
THAT
WOULD
SUPPORT
A
MUCH
NEEDED
TRANSFORMATION
OF
HEALTHCARE
FROM
REACTIVE
AND
HOSPITAL
CENTERED
TO
PREVENTIVE
PROACTIVE
EVIDENCE
BASED
PERSON
CENTERED
AND
FOCUSED
ON
WELLBEING
RATHER
THAN
DISEASE
CONTROL
THE
SHB
RESEARCH
TOPICS
INCLUDE
SENSOR
TECHNOLOGY
NETWORKING
INFORMATION
AND
MACHINE
LEARNING
TECHNOLOGY
MODELING
COGNITIVE
PROCESSES
SYSTEM
AND
PROCESS
MODELING
AND
SOCIAL
AND
ECONOMIC
ISSUES
WACTLAR
ET
AL
MOST
OF
WHICH
ARE
RELEVANT
TO
HEALTHCARE
BI
A
SECURITY
AND
PUBLIC
SAFETY
SINCE
THE
TRAGIC
EVENTS
OF
SEPTEMBER
SECURITY
RESEARCH
HAS
GAINED
MUCH
ATTENTION
ESPECIALLY
GIVEN
THE
INCREASING
DEPENDENCY
OF
BUSINESS
AND
OUR
GLOBAL
SOCIETY
ON
DIGITAL
ENABLEMENT
RESEARCHERS
IN
COMPUTATIONAL
SCIENCE
INFORMATION
SYSTEMS
SOCIAL
SCIENCES
ENGINEERING
MEDICINE
AND
MANY
OTHER
FIELDS
HAVE
BEEN
CALLED
UPON
TO
HELP
ENHANCE
OUR
ABILITY
TO
FIGHT
VIOLENCE
TERRORISM
CYBER
CRIMES
AND
OTHER
CYBER
SECURITY
CONCERNS
CRITICAL
MISSION
AREAS
HAVE
BEEN
IDENTIFIED
WHERE
INFORMATION
TECHNOLOGY
CAN
CONTRIBUTE
AS
SUGGESTED
IN
THE
U
OFFICE
OF
HOMELAND
SECURITY
REPORT
NATIONAL
STRATEGY
FOR
HOMELAND
SECURITY
RELEASED
IN
INCLUDING
INTELLIGENCE
AND
WARNING
BORDER
AND
TRANSPORTATION
SMART
HEALTH
AND
WELLBEING
SBH
PROGRAM
SOLICITATION
NSF
HTTP
WWW
NSF
GOV
PUBS
NSFL
NSFL
HTM
ACCESSED
AUGUST
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AL
LNTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
SECURITY
DOMESTIC
COUNTER
TERRORISM
PROTECTING
CRITICAL
INFRA
STRUCTURE
INCLUDING
CYBERSPACE
DEFENDING
AGAINST
CATASTRO
PHIC
TERRORISM
AND
EMERGENCY
PREPAREDNESS
AND
RESPONSE
FACING
THE
CRITICAL
MISSIONS
OF
INTERNATIONAL
SECURITY
AND
VARIOUS
DATA
AND
TECHNICAL
CHALLENGES
THE
NEED
TO
DEVELOP
THE
SCIENCE
OF
SECURITY
INFORMATICS
WAS
RECOGNIZED
WITH
ITS
MAIN
OBJECTIVE
BEING
THE
DEVELOPMENT
OF
ADVANCED
INFORMATION
TECHNOLOGIES
SYSTEMS
ALGORITHMS
AND
DATABASES
FOR
SECURITY
RELATED
APPLICATIONS
THROUGH
AN
INTEGRATED
TECHNO
LOGICAL
ORGANIZATIONAL
AND
POLICY
BASED
APPROACH
CHEN
P
BI
A
HAS
MUCH
TO
CONTRIBUTE
TO
THE
EMERGING
FIELD
OF
SECURITY
INFORMATICS
SECURITY
ISSUES
ARE
A
MAJOR
CONCERN
FOR
MOST
ORGANIZATIONS
ACCORDING
TO
THE
RESEARCH
FIRM
INTERNATIONAL
DATA
CORPORA
TION
LARGE
COMPANIES
ARE
EXPECTED
TO
SPEND
BILLION
IN
COMPUTER
SECURITY
IN
AND
SMALL
AND
MEDIUM
SIZE
COMPANIES
WILL
SPEND
MORE
ON
SECURITY
THAN
ON
OTHER
IT
PURCHASES
OVER
THE
NEXT
THREE
YEARS
PERLROTH
AND
RUSLI
IN
ACADEMIA
SEVERAL
SECURITY
RELATED
DISCIPLINES
SUCH
AS
COMPUTER
SECURITY
COMPUTATIONAL
CRIMINOLOGY
AND
TERRORISM
INFORMATICS
ARE
ALSO
FLOURISHING
BRANTINGHAM
CHEN
ET
AL
INTELLIGENCE
SECURITY
AND
PUBLIC
SAFETY
AGENCIES
ARE
GATHERING
LARGE
AMOUNTS
OF
DATA
FROM
MULTIPLE
SOURCES
FROM
CRIMINAL
RECORDS
OF
TERRORISM
INCIDENTS
AND
FROM
CYBER
SECURITY
THREATS
TO
MULTILINGUAL
OPEN
SOURCE
INTELLIGENCE
COMPANIES
OF
DIF
FERENT
SIZES
ARE
FACING
THE
DAUNTING
TASK
OF
DEFENDING
AGAINST
CYBERSECURITY
THREATS
AND
PROTECTING
THEIR
INTELLECTUAL
ASSETS
AND
INFRASTRUCTURE
PROCESSING
AND
ANALYZING
SECURITY
RELATED
DATA
HOWEVER
IS
INCREASINGLY
DIFFICULT
A
SIGNIFICANT
CHAL
LENGE
IN
SECURITY
IT
RESEARCH
IS
THE
INFORMATION
STOVEPIPE
AND
OVERLOAD
RESULTING
FROM
DIVERSE
DATA
SOURCES
MULTIPLE
DATA
FORMATS
AND
LARGE
DATA
VOLUMES
CURRENT
RESEARCH
ON
TECH
NOLOGIES
FOR
CYBERSECURITY
COUNTER
TERRORISM
AND
CRIME
FIGHTING
APPLICATIONS
LACKS
A
CONSISTENT
FRAMEWORK
FOR
ADDRESSING
THESE
DATA
CHALLENGES
SELECTED
BI
A
TECHNOL
OGIES
SUCH
AS
CRIMINAL
ASSOCIATION
RULE
MINING
AND
CLUSTERING
CRIMINAL
NETWORK
ANALYSIS
SPATIAL
TEMPORAL
ANALYSIS
AND
VISUALIZATION
MULTILINGUAL
TEXT
ANALYTICS
SENTIMENT
AND
AFFECT
ANALYSIS
AND
CYBER
ATTACKS
ANALYSIS
AND
ATTRIBUTION
SHOULD
BE
CONSIDERED
FOR
SECURITY
INFORMATICS
RESEARCH
THE
UNIVERSITY
OF
ARIZONA
COPLINK
AND
DARK
WEB
RESEARCH
PROGRAMS
OFFER
SIGNIFICANT
EXAMPLES
OF
CRIME
DATA
MINING
AND
TERRORISM
INFORMATICS
WITHIN
THE
IS
COMMUNITY
CHEN
THE
COPLINK
INFORMATION
SHARING
AND
CRIME
DATA
MINING
SYSTEM
INITIALLY
DEVELOPED
WITH
FUNDING
FROM
NSF
AND
THE
DEPARTMENT
OF
JUSTICE
IS
CURRENTLY
IN
USE
BY
MORE
THAN
POLICE
AGENCIES
IN
THE
UNITED
STATES
AND
BY
NATO
COUNTRIES
AND
WAS
ACQUIRED
BY
IBM
IN
THE
DARK
WEB
RESEARCH
FUNDED
BY
NSF
AND
THE
DEPARTMENT
OF
DEFENSE
DOD
HAS
GENERATED
ONE
OF
THE
LARGEST
KNOWN
ACADEMIC
TERRORISM
RESEARCH
DATABASES
ABOUT
TERABYTES
OF
TERRORIST
WEB
SITES
AND
SOCIAL
MEDIA
CONTENT
AND
GENERATED
ADVANCED
MULTILINGUAL
SOCIAL
MEDIA
ANALYTICS
TECHNIQUES
RECOGNIZING
THE
CHALLENGES
PRESENTED
BY
THE
VOLUME
AND
COMPLEXITY
OF
DEFENSE
RELATED
BIG
DATA
THE
U
DEFENSE
ADVANCED
RESEARCH
PROJECT
AGENCY
DARPA
WITHIN
DOD
INITIATED
THE
XDATA
PROGRAM
IN
TO
HELP
DEVELOP
COM
PUTATIONAL
TECHNIQUES
AND
SOFTWARE
TOOLS
FOR
PROCESSING
AND
ANALYZING
THE
VAST
AMOUNT
OF
MISSION
ORIENTED
INFORMATION
FOR
DEFENSE
ACTIVITIES
XDATA
AIMS
TO
ADDRESS
THE
NEED
FOR
SCALABLE
ALGORITHMS
FOR
PROCESSING
AND
VISUALIZATION
OF
IMPERFECT
AND
INCOMPLETE
DATA
THE
PROGRAM
ENGAGES
APPLIED
MATHEMATICS
COMPUTER
SCIENCE
AND
DATA
VISUALIZATION
COM
MUNITIES
TO
DEVELOP
BIG
DATA
ANALYTICS
AND
USABILITY
SOLUTIONS
FOR
WARFIGHTERS
BI
A
RESEARCHERS
COULD
CONTRIBUTE
SIGNIFI
CANTLY
IN
THIS
AREA
TABLE
SUMMARIZES
THESE
PROMISING
BI
A
APPLICATIONS
DATA
CHARACTERISTICS
ANALYTICS
TECHNIQUES
AND
POTENTIAL
IMPACTS
BI
A
RESEARCH
FRAMEWORK
FOUNDATIONAL
TECHNOLOGIES
AND
EMERGING
RESEARCH
IN
ANALYTICS
THE
OPPORTUNITIES
WITH
THE
ABOVEMENTIONED
EMERGING
AND
HIGH
IMPACT
APPLICATIONS
HAVE
GENERATED
A
GREAT
DEAL
OF
EXCITEMENT
WITHIN
BOTH
THE
BI
A
INDUSTRY
AND
THE
RESEARCH
COMMUNITY
WHEREAS
INDUSTRY
FOCUSES
ON
SCALABLE
AND
INTE
GRATED
SYSTEMS
AND
IMPLEMENTATIONS
FOR
APPLICATIONS
IN
DIF
FERENT
ORGANIZATIONS
THE
ACADEMIC
COMMUNITY
NEEDS
TO
CONTINUE
TO
ADVANCE
THE
KEY
TECHNOLOGIES
IN
ANALYTICS
EMERGING
ANALYTICS
RESEARCH
OPPORTUNITIES
CAN
BE
CLASSIFIED
INTO
FIVE
CRITICAL
TECHNICAL
AREAS
BIG
DATA
ANALYTICS
TEXT
ANALYTICS
WEB
ANALYTICS
NETWORK
ANALYTICS
AND
MOBILE
ANALYTICS
ALL
OF
WHICH
CAN
CONTRIBUTE
TO
TO
BI
A
AND
THE
CLASSIFICATION
OF
THESE
FIVE
TOPIC
AREAS
IS
INTENDED
DARPA
CALLS
FOR
ADVANCES
IN
BIG
DATA
TO
HELP
THE
WARFIGHTER
MARCH
HTTP
WWW
DARPA
MIL
NEWSEVENTS
RELEASES
ASPX
ACCESSED
AUGUST
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AL
LNTRODUCTIORI
BUSINESS
INTELLIGENCE
RESEARCH
E
COMMERCE
AND
E
GOVERNMENT
AND
SCIENCE
SMART
HEALTH
AND
SECURITY
AND
MARKET
INTELLIGENCE
POLITICS
TECHNOLOGY
WELLBEING
PUBLIC
SAFETY
APPLICATIONS
RECOMMENDER
UBIQUITOUS
T
INNOVATION
HUMAN
AND
PLANT
CRIME
ANALYSIS
SYSTEMS
GOVERNMENT
SERVICES
HYPOTHESIS
TESTING
GENOMICS
COMPUTATIONAL
SOCIAL
MEDIA
EQUAL
ACCESS
AND
KNOWLEDGE
HEALTHCARE
CRIMINOLOGY
MONITORING
AND
PUBLIC
SERVICES
DISCOVERY
DECISION
SUPPORT
TERRORISM
ANALYSIS
CITIZEN
ENGAGEMENT
PATIENT
COMMUNITY
INFORMATICS
CROWD
SOURCING
AND
PARTICIPATION
ANALYSIS
OPEN
SOURCE
SYSTEMS
POLITICAL
CAMPAIGN
INTELLIGENCE
SOCIAL
AND
VIRTUAL
AND
E
POLLING
CYBER
SECURITY
GAMES
DATA
SEARCH
AND
USER
GOVERNMENT
INFORMA
T
INSTRUMENTS
GENOMICS
AND
CRIMINAL
RECORDS
LOGS
TION
AND
SERVICES
AND
SYSTEM
SEQUENCE
DATA
CRIME
MAPS
CUSTOMER
TRANSAC
RULES
AND
REGULA
GENERATED
DATA
ELECTRONIC
HEALTH
CRIMINAL
NETWORKS
TION
RECORDS
TIONS
SENSOR
AND
RECORDS
EHR
NEWS
AND
WEB
CUSTOMER
CITIZEN
FEEDBACK
AND
NETWORK
CONTENT
HEALTH
AND
PATIENT
CONTENTS
GENERATED
CONTENT
COMMENTS
SOCIAL
MEDIA
TERRORISM
INCIDENT
DATABASES
VIRUSES
CYBER
ATTACKS
AND
BOTNETS
CHARACTERISTICS
CHARACTERISTICS
CHARACTERISTICS
CHARACTERISTICS
CHARACTERISTICS
STRUCTURED
WEB
FRAGMENTED
INFORMA
HIGH
THROUGHPUT
DISPARATE
BUT
HIGHLY
PERSONAL
IDENTITY
BASED
USER
TION
SOURCES
AND
INSTRUMENT
BASED
LINKED
CONTENT
INFORMATION
INCOM
GENERATED
CONTENT
LEGACY
SYSTEMS
RICH
DATA
COLLECTION
FINE
PERSON
SPECIFIC
PLETE
AND
DECEPTIVE
RICH
NETWORK
INFORMA
TEXTUAL
CONTENT
GRAINED
MULTIPLE
CONTENT
HIPAA
IRB
CONTENT
RICH
GROUP
TION
UNSTRUCTURED
UNSTRUCTURED
INFORMAL
MODALITY
AND
LARGE
AND
ETHICS
ISSUES
AND
NETWORK
INFOR
INFORMAL
CUSTOMER
CITIZEN
CONVERSATIONS
SCALE
RECORDS
T
MATION
MULTILINGUAL
OPINIONS
SPECIFIC
DATA
FORMATS
CONTENT
ANALYTICS
ASSOCIATION
RULE
INFORMATION
INTEGRA
T
BASED
GENOMICS
AND
CRIMINAL
MINING
TION
DOMAIN
SPECIFIC
SEQUENCE
ANALYSIS
ASSOCIATION
RULE
DATABASE
SEGMEN
CONTENT
AND
TEXT
MATHEMATICAL
AND
AND
VISUALIZATION
MINING
AND
TATION
AND
ANALYTICS
ANALYTICAL
MODELS
EHR
ASSOCIATION
CLUSTERING
CLUSTERING
GOVERNMENT
INFORMA
MINING
AND
CRIMINAL
NETWORK
ANOMALY
DETECTION
TION
SEMANTIC
SER
CLUSTERING
ANALYSIS
GRAPH
MINING
VICES
AND
ONTOLOGIES
HEALTH
SOCIAL
SPATIAL
TEMPORAL
SOCIAL
NETWORK
SOCIAL
MEDIA
MONI
MEDIA
MONITORING
ANALYSIS
AND
ANALYSIS
TORING
AND
ANALYSIS
AND
ANALYSIS
VISUALIZATION
TEXT
AND
WEB
SOCIAL
NETWORK
HEALTH
TEXT
MULTILINGUAL
TEXT
ANALYTICS
ANALYSIS
ANALYTICS
ANALYTICS
SENTIMENT
AND
SENTIMENT
AND
AFFECT
HEALTH
ONTOLOGIES
SENTIMENT
AND
AFFECT
ANALYSIS
ANALYSIS
PATIENT
NETWORK
AFFECT
ANALYSIS
ANALYSIS
CYBER
ATTACKS
ADVERSE
DRUG
ANALYSIS
AND
SIDE
EFFECT
ATTRIBUTION
ANALYSIS
PRIVACY
PRESERVING
DATA
MINING
IMPACTS
LONG
TAIL
MARKETING
TRANSFORMING
GOVERN
T
ADVANCES
IMPROVED
HEALTHCARE
IMPROVED
PUBLIC
TARGETED
AND
PERSON
MENTS
EMPOWERING
SCIENTIFIC
IMPACT
QUALITY
IMPROVED
SAFETY
AND
SECURITY
ALIZED
RECOMMENDA
CITIZENS
IMPROVING
LONG
TERM
CARE
TION
INCREASED
SALE
TRANSPARENCY
PARTICI
PATIENT
EMPOWER
AND
CUSTOMER
PATION
AND
EQUALITY
MENT
SATISFACTION
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AL
LNTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
BIG
DATA
ANALYTICS
TEXT
ANALYTICS
WEB
ANALYTICS
NETWORK
ANALYTICS
MOBILE
ANALYTICS
FOUNDATIONAL
RDBMS
INFORMATION
INFORMATION
BIBLIOMETRIC
WEB
SERVICES
TECHNOLOGIES
DATA
WAREHOUSING
RETRIEVAL
RETRIEVAL
ANALYSIS
SMARTPHONE
ETL
DOCUMENT
COMPUTATIONAL
CITATION
NETWORK
PLATFORMS
OLAP
REPRESENTATION
LINGUISTICS
COAUTHORSHIP
BPM
QUERY
PROCESSING
SEARCH
ENGINES
NETWORK
DATA
MINING
RELEVANCE
FEEDBACK
WEB
CRAWLING
SOCIAL
NETWORK
CLUSTERING
USER
MODELS
WEB
SITE
RANKING
THEORIES
REGRESSION
SEARCH
ENGINES
SEARCH
LOG
ANALYSIS
NETWORK
METRICS
CLASSIFICATION
ENTERPRISE
SEARCH
RECOMMENDER
AND
TOPOLOGY
ASSOCIATION
SYSTEMS
SYSTEMS
MATHEMATICAL
ANALYSIS
WEB
SERVICES
NETWORK
MODELS
ANOMALY
DETECTION
MASHUPS
NETWORK
NEURAL
NETWORKS
VISUALIZATION
GENETIC
ALGORITHMS
MULTIVARIATE
STATISTICAL
ANALYSIS
OPTIMIZATION
HEURISTIC
SEARCH
EMERGING
STATISTICAL
MACHINE
STATISTICAL
NLP
CLOUD
SERVICES
LINK
MINING
MOBILE
WEB
RESEARCH
LEARNING
INFORMATION
CLOUD
COMPUTING
COMMUNITY
SERVICES
SEQUENTIAL
AND
EXTRACTION
SOCIAL
SEARCH
AND
DETECTION
MOBILE
PERVASIVE
TEMPORAL
MINING
TOPIC
MODELS
MINING
DYNAMIC
NETWORK
APPS
SPATIAL
MINING
QUESTION
ANSWERING
REPUTATION
SYSTEMS
MODELING
MOBILE
SENSING
MINING
HIGH
SPEED
SYSTEMS
SOCIAL
MEDIA
AGENT
BASED
APPS
DATA
STREAMS
AND
OPINION
MINING
ANALYTICS
MODELING
MOBILE
SOCIAL
SENSOR
DATA
SENTIMENT
AFFECT
WEB
VISUALIZATION
SOCIAL
INFLUENCE
INNOVATION
PROCESS
MINING
ANALYSIS
WEB
BASED
AND
INFORMATION
MOBILE
SOCIAL
PRIVACY
PRESERVING
WEB
STYLOMETRIC
AUCTIONS
DIFFUSION
MODELS
NETWORKING
DATA
MINING
ANALYSIS
INTERNET
ERGMS
MOBILE
VISUALIZA
NETWORK
MINING
MULTILINGUAL
MONETIZATION
VIRTUAL
COMMUNITIES
TION
HCI
WEB
MINING
ANALYSIS
SOCIAL
MARKETING
CRIMINAL
DARK
PERSONALIZATION
AND
COLUMN
BASED
TEXT
VISUALIZATION
WEB
PRIVACY
NETWORKS
BEHAVIORAL
DBMS
MULTIMEDIA
IR
SECURITY
SOCIAL
POLITICAL
MODELING
IN
MEMORY
DBMS
MOBILE
IR
ANALYSIS
GAMIFICATION
PARALLEL
DBMS
HADOOP
TRUST
AND
REPUTATION
MOBILE
ADVERTISING
CLOUD
COMPUTING
MAPREDUCE
AND
MARKETING
HADOOP
MAPREDUCE
TO
HIGHLIGHT
THE
KEY
CHARACTERISTICS
OF
EACH
AREA
HOWEVER
A
FEW
OF
THESE
AREAS
MAY
LEVERAGE
SIMILAR
UNDERLYING
TECH
NOLOGIES
IN
EACH
ANALYTICS
AREA
WE
PRESENT
THE
FOUNDATIONAL
TECHNOLOGIES
THAT
ARE
MATURE
AND
WELL
DEVELOPED
AND
SUGGEST
SELECTED
EMERGING
RESEARCH
AREAS
SEE
TABLE
BIG
DATA
ANALYTICS
DATA
ANALYTICS
REFERS
TO
THE
BI
A
TECHNOLOGIES
THAT
ARE
GROUNDED
MOSTLY
IN
DATA
MINING
AND
STATISTICAL
ANALYSIS
AS
MENTIONED
PREVIOUSLY
MOST
OF
THESE
TECHNIQUES
RELY
ON
THE
MATURE
COMMERCIAL
TECHNOLOGIES
OF
RELATIONAL
DBMS
DATA
WAREHOUSING
ETL
OLAP
AND
BPM
CHAUDHURI
ET
AL
SINCE
THE
LATE
VARIOUS
DATA
MINING
ALGORITHMS
HAVE
BEEN
DEVELOPED
BY
RESEARCHERS
FROM
THE
ARTIFICIAL
INTELLIGENCE
ALGORITHM
AND
DATABASE
COMMUNITIES
IN
THE
IEEE
INTERNATIONAL
CONFERENCE
ON
DATA
MINING
ICDM
THE
MOST
INFLUENTIAL
DATA
MINING
ALGORITHMS
WERE
IDENTIFIED
BASED
ON
EXPERT
NOMINATIONS
CITATION
COUNTS
AND
A
COMMUNITY
SURVEY
IN
RANKED
ORDER
THEY
ARE
K
MEANS
SVM
SUPPORT
VECTOR
MACHINE
APRIORI
EM
EXPECTATION
MAXIMI
ZATION
PAGERANK
ADABOOST
KNN
K
NEAREST
NEIGHBORS
NAÏVE
BAYES
AND
CART
WU
ET
AL
THESE
ALGORITHMS
COVER
CLASSIFICATION
CLUSTERING
REGRESSION
ASSOCIATION
ANALY
SIS
AND
NETWORK
ANALYSIS
MOST
OF
THESE
POPULAR
DATA
MINING
ALGORITHMS
HAVE
BEEN
INCORPORATED
IN
COMMERCIAL
AND
OPEN
SOURCE
DATA
MINING
SYSTEMS
WITTEN
ET
AL
OTHER
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AL
INTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
ADVANCES
SUCH
AS
NEURAL
NETWORKS
FOR
CLASSIFICATION
PREDICTION
AND
CLUSTERING
AND
GENETIC
ALGORITHMS
FOR
OPTIMIZATION
AND
MACHINE
LEARNING
HAVE
ALL
CONTRIBUTED
TO
THE
SUCCESS
OF
DATA
MINING
IN
DIFFERENT
APPLICATIONS
TWO
OTHER
DATA
ANALYTICS
APPROACHES
COMMONLY
TAUGHT
IN
BUSINESS
SCHOOL
ARE
ALSO
CRITICAL
FOR
BI
A
GROUNDED
IN
STATISTICAL
THEORIES
AND
MODELS
MULTIVARIATE
STATISTICAL
ANALYSIS
COVERS
ANALYTICAL
TECHNIQUES
SUCH
AS
REGRESSION
FACTOR
ANALY
SIS
CLUSTERING
AND
DISCRIMINANT
ANALYSIS
THAT
HAVE
BEEN
USED
SUCCESSFULLY
IN
VARIOUS
BUSINESS
APPLICATIONS
DEVELOPED
IN
THE
MANAGEMENT
SCIENCE
COMMUNITY
OPTIMIZATION
TECHNIQUES
AND
HEURISTIC
SEARCH
ARE
ALSO
SUITABLE
FOR
SELECTED
BI
A
PROB
LEMS
SUCH
AS
DATABASE
FEATURE
SELECTION
AND
WEB
CRAWLING
SPIDERING
MOST
OF
THESE
TECHNIQUES
CAN
BE
FOUND
IN
BUSINESS
SCHOOL
CURRICULA
DUE
TO
THE
SUCCESS
ACHIEVED
COLLECTIVELY
BY
THE
DATA
MINING
AND
STATISTICAL
ANALYSIS
COMMUNITY
DATA
ANALYTICS
CONTINUES
TO
BE
AN
ACTIVE
AREA
OF
RESEARCH
STATISTICAL
MACHINE
LEARNING
OFTEN
BASED
ON
WELL
GROUNDED
MATHEMATICAL
MODELS
AND
POWERFUL
ALGORITHMS
TECHNIQUES
SUCH
AS
BAYESIAN
NETWORKS
HIDDEN
MARKOV
MODELS
SUPPORT
VECTOR
MACHINE
REINFORCE
MENT
LEARNING
AND
ENSEMBLE
MODELS
HAVE
BEEN
APPLIED
TO
DATA
TEXT
AND
WEB
ANALYTICS
APPLICATIONS
OTHER
NEW
DATA
ANALYTICS
TECHNIQUES
EXPLORE
AND
LEVERAGE
UNIQUE
DATA
CHARAC
TERISTICS
FROM
SEQUENTIAL
TEMPORAL
MINING
AND
SPATIAL
MINING
TO
DATA
MINING
FOR
HIGH
SPEED
DATA
STREAMS
AND
SENSOR
DATA
INCREASED
PRIVACY
CONCERNS
IN
VARIOUS
E
COMMERCE
E
GOVERNMENT
AND
HEALTHCARE
APPLICATIONS
HAVE
CAUSED
PRIVACY
PRESERVING
DATA
MINING
TO
BECOME
AN
EMERGING
AREA
OF
RESEARCH
MANY
OF
THESE
METHODS
ARE
DATA
DRIVEN
RELYING
ON
VARIOUS
ANONYMIZATION
TECHNIQUES
WHILE
OTHERS
ARE
PROCESS
DRIVEN
DEFINING
HOW
DATA
CAN
BE
ACCESSED
AND
USED
GELFAND
OVER
THE
PAST
DECADE
PROCESS
MINING
HAS
ALSO
EMERGED
AS
A
NEW
RESEARCH
FIELD
THAT
FOCUSES
ON
THE
ANALYSIS
OF
PROCESSES
USING
EVENT
DATA
PROCESS
MINING
HAS
BECOME
POSSIBLE
DUE
TO
THE
AVAILABILITY
OF
EVENT
LOGS
IN
VARIOUS
INDUSTRIES
E
G
HEALTHCARE
SUPPLY
CHAINS
AND
NEW
PROCESS
DISCOVERY
AND
CONFORMANCE
CHECKING
TECHNIQUES
VAN
DER
AALST
FURTHERMORE
NETWORK
DATA
AND
WEB
CONTENT
HAVE
HELPED
GENERATE
EXCITING
RESEARCH
IN
NETWORK
ANALYTICS
AND
WEB
ANALYTICS
WHICH
ARE
PRESENTED
BELOW
IN
ADDITION
TO
ACTIVE
ACADEMIC
RESEARCH
ON
DATA
ANALYTICS
INDUSTRY
RESEARCH
AND
DEVELOPMENT
HAS
ALSO
GENERATED
MUCH
EXCITEMENT
ESPECIALLY
WITH
RESPECT
TO
BIG
DATA
ANALYTICS
FOR
SEMI
STRUCTURED
CONTENT
UNLIKE
THE
STRUCTURED
DATA
THAT
CAN
BE
HANDLED
REPEATEDLY
THROUGH
A
RDBMS
SEMI
STRUCTURED
DATA
MAY
CALL
FOR
AD
HOC
AND
ONE
TIME
EXTRACTION
PARSING
PROCESSING
INDEXING
AND
ANALYTICS
IN
A
SCALABLE
AND
DIS
TRIBUTED
MAPREDUCE
OR
HADOOP
ENVIRONMENT
MAPREDUCE
HAS
BEEN
HAILED
AS
A
REVOLUTIONARY
NEW
PLATFORM
FOR
LARGE
SCALE
MASSIVELY
PARALLEL
DATA
ACCESS
PATTERSON
INSPIRED
IN
PART
BY
MAPREDUCE
HADOOP
PROVIDES
A
JAVA
BASED
SOFTWARE
FRAMEWORK
FOR
DISTRIBUTED
PROCESSING
OF
DATA
INTENSIVE
TRANSFORMATION
AND
ANALYTICS
THE
TOP
THREE
COM
MERCIAL
DATABASE
SUPPLIERS
ORACLE
IBM
AND
MICROSOFT
HAVE
ALL
ADOPTED
HADOOP
SOME
WITHIN
A
CLOUD
INFRASTRUCTURE
THE
OPEN
SOURCE
APACHE
HADOOP
HAS
ALSO
GAINED
SIGNIFICANT
TRACTION
FOR
BUSINESS
ANALYTICS
INCLUDING
CHUKWA
FOR
DATA
COLLECTION
HBASE
FOR
DISTRIBUTED
DATA
STORAGE
HIVE
FOR
DATA
SUMMARIZATION
AND
AD
HOC
QUERYING
AND
MAHOUT
FOR
DATA
MINING
HENSCHEN
IN
THEIR
PERSPECTIVE
PAPER
STONE
BRAKER
ET
AL
COMPARED
MAPREDUCE
WITH
THE
PARALLEL
DBMS
THE
COMMERCIAL
PARALLEL
DBMS
SHOWED
CLEAR
ADVAN
TAGES
IN
EFFICIENT
QUERY
PROCESSING
AND
HIGH
LEVEL
QUERY
LANGUAGE
AND
INTERFACE
WHEREAS
MAPREDUCE
EXCELLED
IN
ETL
AND
ANALYTICS
FOR
READ
ONLY
SEMI
STRUCTURED
DATA
SETS
NEW
HADOOP
AND
MAPREDUCE
BASED
SYSTEMS
HAVE
BECOME
ANOTHER
VIABLE
OPTION
FOR
BIG
DATA
ANALYTICS
IN
ADDITION
TO
THE
COMMERCIAL
SYSTEMS
DEVELOPED
FOR
RDBMS
COLUMN
BASED
DBMS
IN
MEMORY
DBMS
AND
PARALLEL
DBMS
CHAUDHURI
ET
AL
TEXT
ANALYTICS
A
SIGNIFICANT
PORTION
OF
THE
UNSTRUCTURED
CONTENT
COLLECTED
BY
AN
ORGANIZATION
IS
IN
TEXTUAL
FORMAT
FROM
E
MAIL
COMMU
NICATION
AND
CORPORATE
DOCUMENTS
TO
WEB
PAGES
AND
SOCIAL
MEDIA
CONTENT
TEXT
ANALYTICS
HAS
ITS
ACADEMIC
ROOTS
IN
INFORMATION
RETRIEVAL
AND
COMPUTATIONAL
LINGUISTICS
IN
INFOR
MATION
RETRIEVAL
DOCUMENT
REPRESENTATION
AND
QUERY
PRO
CESSING
ARE
THE
FOUNDATIONS
FOR
DEVELOPING
THE
VECTOR
SPACE
MODEL
BOOLEAN
RETRIEVAL
MODEL
AND
PROBABILISTIC
RETRIEVAL
MODEL
WHICH
IN
TURN
BECAME
THE
BASIS
FOR
THE
MODERN
DIGITAL
LIBRARIES
SEARCH
ENGINES
AND
ENTERPRISE
SEARCH
SYSTEMS
SALTÓN
IN
COMPUTATIONAL
LINGUISTICS
STATISTICAL
NATURAL
LANGUAGE
PROCESSING
NLP
TECHNIQUES
FOR
LEXICAL
ACQUISITION
WORD
SENSE
DISAMBIGUATION
PART
OF
SPEECH
TAGGING
POST
AND
PROBABILISTIC
CONTEXT
FREE
GRAMMARS
HAVE
ALSO
BECOME
IMPORTANT
FOR
REPRESENTING
TEXT
MANNING
AND
SCHÜTZE
IN
ADDITION
TO
DOCUMENT
AND
QUERY
REPRESENTATIONS
USER
MODELS
AND
RELEVANCE
FEEDBACK
ARE
ALSO
IMPORTANT
IN
ENHANCING
SEARCH
PERFORMANCE
SINCE
THE
EARLY
SEARCH
ENGINES
HAVE
EVOLVED
INTO
MATURE
COMMERCIAL
SYSTEMS
CONSISTING
OF
FAST
DISTRIBUTED
CRAWLING
EFFICIENT
INVERTED
INDEXING
INLINK
BASED
PAGE
RANKING
AND
SEARCH
LOGS
ANALYTICS
MANY
OF
THESE
FOUNDA
TIONAL
TEXT
PROCESSING
AND
INDEXING
TECHNIQUES
HAVE
BEEN
DEPLOYED
IN
TEXT
BASED
ENTERPRISE
SEARCH
AND
DOCUMENT
MANAGEMENT
SYSTEMS
IN
BI
A
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AL
L
INTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
LEVERAGING
THE
POWER
OF
BIG
DATA
FOR
TRAINING
AND
STATISTICAL
NLP
FOR
BUILDING
LANGUAGE
MODELS
TEXT
ANALYTICS
TECHNIQUES
HAVE
BEEN
ACTIVELY
PURSUED
IN
SEVERAL
EMERGING
AREAS
INCLUDING
INFORMATION
EXTRACTION
TOPIC
MODELS
QUESTION
ANSWERING
Q
A
AND
OPINION
MINING
INFORMATION
EXTRACTION
IS
AN
AREA
OF
RESEARCH
THAT
AIMS
TO
AUTOMATICALLY
EXTRACT
SPECIFIC
KINDS
OF
STRUCTURED
INFORMATION
FROM
DOCUMENTS
AS
A
BUILDING
BLOCK
OF
INFORMATION
EXTRACTION
NER
NAMED
ENTITY
RECOGNITION
ALSO
KNOWN
AS
ENTITY
EXTRACTION
IS
A
PROCESS
THAT
IDENTIFIES
ATOMIC
ELEMENTS
IN
TEXT
AND
CLASSIFIES
THEM
INTO
PREDEFINED
CATEGORIES
E
G
NAMES
PLACES
DATES
NER
TECHNIQUES
HAVE
BEEN
SUCCESSFULLY
DEVELOPED
FOR
NEWS
ANALYSIS
AND
BIOMEDICAL
APPLICATIONS
TOPIC
MODELS
ARE
ALGO
RITHMS
FOR
DISCOVERING
THE
MAIN
THEMES
THAT
PERVADE
A
LARGE
AND
OTHERWISE
UNSTRUCTURED
COLLECTION
OF
DOCUMENTS
NEW
TOPIC
MODELING
ALGORITHMS
SUCH
AS
LDA
LATENT
DIRICHLET
ALLOCATION
AND
OTHER
PROBABILISTIC
MODELS
HAVE
ATTRACTED
RECENT
RESEARCH
BLEI
QUESTION
ANSWERING
Q
A
SYS
TEMS
RELY
ON
TECHNIQUES
FROM
NLP
INFORMATION
RETRIEVAL
AND
HUMAN
COMPUTER
INTERACTION
PRIMARILY
DESIGNED
TO
ANSWER
FACTUAL
QUESTIONS
I
E
WHO
WHAT
WHEN
AND
WHERE
KINDS
OF
QUESTIONS
Q
A
SYSTEMS
INVOLVE
DIFFERENT
TECHNIQUES
FOR
QUESTION
ANALYSIS
SOURCE
RETRIEVAL
ANSWER
EXTRACTION
AND
ANSWER
PRESENTATION
MAYBURY
THE
RECENT
SUCCESSES
OF
IBM
WATSON
AND
APPLE
SIRI
HAVE
HIGHLIGHTED
Q
A
RESEARCH
AND
COMMERCIALIZATION
OPPORTUNITIES
MANY
PRO
MISING
Q
A
SYSTEM
APPLICATION
AREAS
HAVE
BEEN
IDENTIFIED
INCLUDING
EDUCATION
HEALTH
AND
DEFENSE
OPINION
MINING
REFERS
TO
THE
COMPUTATIONAL
TECHNIQUES
FOR
EXTRACTING
CLASSI
FYING
UNDERSTANDING
AND
ASSESSING
THE
OPINIONS
EXPRESSED
IN
VARIOUS
ONLINE
NEWS
SOURCES
SOCIAL
MEDIA
COMMENTS
AND
OTHER
USER
GENERATED
CONTENTS
SENTIMENT
ANALYSIS
IS
OFTEN
USED
IN
OPINION
MINING
TO
IDENTIFY
SENTIMENT
AFFECT
SUBJEC
TIVITY
AND
OTHER
EMOTIONAL
STATES
IN
ONLINE
TEXT
WEB
AND
SOCIAL
MEDIA
CONTENT
HAVE
CREATED
ABUNDANT
AND
EXCITING
OPPORTUNITIES
FOR
UNDERSTANDING
THE
OPINIONS
OF
THE
GENERAL
PUBLIC
AND
CONSUMERS
REGARDING
SOCIAL
EVENTS
POLITICAL
MOVE
MENTS
COMPANY
STRATEGIES
MARKETING
CAMPAIGNS
AND
PRODUCT
PREFERENCES
PANG
AND
LEE
IN
ADDITION
TO
THE
ABOVE
RESEARCH
DIRECTIONS
TEXT
ANALYTICS
ALSO
OFFERS
SIGNIFICANT
RESEARCH
OPPORTUNITIES
AND
CHALLENGES
IN
SEVERAL
MORE
FOCUSED
AREAS
INCLUDING
WEB
STYLOMETRIC
ANALYSIS
FOR
AUTHORSHIP
ATTRIBUTION
MULTILINGUAL
ANALYSIS
FOR
WEB
DOCUMENTS
AND
LARGE
SCALE
TEXT
VISUALIZATION
MULTI
MEDIA
INFORMATION
RETRIEVAL
AND
MOBILE
INFORMATION
RETRIEVAL
ARE
TWO
OTHER
RELATED
AREAS
THAT
REQUIRE
SUPPORT
OF
TEXT
ANALYTICS
TECHNIQUES
IN
ADDITION
TO
THE
CORE
MULTIMEDIA
AND
MOBILE
TECHNOLOGIES
SIMILAR
TO
BIG
DATA
ANALYTICS
TEXT
ANALYTICS
USING
MAPREDUCE
HADOOP
AND
CLOUD
SERVICES
WILL
CONTINUE
TO
FOSTER
ACTIVE
RESEARCH
DIRECTIONS
IN
BOTH
ACADEMIA
AND
INDUSTRY
WEB
ANALYTICS
OVER
THE
PAST
DECADE
WEB
ANALYTICS
HAS
EMERGED
AS
AN
ACTIVE
FIELD
OF
RESEARCH
WITHIN
BI
A
BUILDING
ON
THE
DATA
MINING
AND
STATISTICAL
ANALYSIS
FOUNDATIONS
OF
DATA
ANALYTICS
AND
ON
THE
INFORMATION
RETRIEVAL
AND
NLP
MODELS
IN
TEXT
ANALYTICS
WEB
ANALYTICS
OFFERS
UNIQUE
ANALYTICAL
CHALLENGES
AND
OPPORTUNITIES
HTTP
HTML
BASED
HYPERLINKED
WEB
SITES
AND
ASSOCIATED
WEB
SEARCH
ENGINES
AND
DIRECTORY
SYSTEMS
FOR
LOCATING
WEB
CONTENT
HAVE
HELPED
DEVELOP
UNIQUE
INTERNET
BASED
TECHNOLOGIES
FOR
WEB
SITE
CRAWLING
SPIDERING
WEB
PAGE
UPDATING
WEB
SITE
RANKING
AND
SEARCH
LOG
ANALYSIS
WEB
LOG
ANALYSIS
BASED
ON
CUSTOMER
TRANSACTIONS
HAS
SUBSEQUENTLY
TURNED
INTO
ACTIVE
RESEARCH
IN
RECOMMENDER
SYSTEMS
HOW
EVER
WEB
ANALYTICS
HAS
BECOME
EVEN
MORE
EXCITING
WITH
THE
MATURITY
AND
POPULARITY
OF
WEB
SERVICES
AND
WEB
SYSTEMS
IN
THE
MID
O
REILLY
BASED
ON
XML
AND
INTERNET
PROTOCOLS
HTTP
SMTP
WEB
SERVICES
OFFER
A
NEW
WAY
OF
REUSING
AND
INTEGRATING
THIRD
PARTY
OR
LEGACY
SYSTEMS
NEW
TYPES
OF
WEB
SERVICES
AND
THEIR
ASSOCIATED
APIS
APPLICATION
PROGRAMMING
INTERFACE
ALLOW
DEVELOPERS
TO
EASILY
INTEGRATE
DIVERSE
CONTENT
FROM
DIFFERENT
WEB
ENABLED
SYSTEM
FOR
EXAMPLE
REST
REPRESENTATIONAL
STATE
TRANSFER
FOR
INVOKING
REMOTE
SERVICES
RS
REALLY
SIMPLE
SYNDICATION
FOR
NEWS
PUSHING
JSON
JAVASCRIPT
OBJECT
NOTATION
FOR
LIGHTWEIGHT
DATA
INTERCHANGE
AND
AJAX
ASYNCHRONOUS
JAVASCRIPT
XML
FOR
DATA
INTERCHANGE
AND
DYNAMIC
DISPLAY
SUCH
LIGHTWEIGHT
PROGRAMMING
MODELS
SUPPORT
DATA
SYNDICATION
AND
NOTIFICATION
AND
MASHUPS
OF
MULTIMEDIA
CONTENT
E
G
FLICKR
YOUTUBE
GOOGLE
MAPS
FROM
DIFFERENT
WEB
SOURCES
A
PROCESS
SOMEWHAT
SIMILAR
TO
ETL
EXTRACTION
TRANSFORMATION
AND
LOAD
IN
BI
A
MOST
OF
THE
E
COMMERCE
VENDORS
HAVE
PROVIDED
MATURE
APIS
FOR
ACCESSING
THEIR
PRODUCT
AND
CUSTOMER
CONTENT
SCHONFELD
FOR
EXAMPLE
THROUGH
AMAZON
WEB
SERVICES
DEVEL
OPERS
CAN
ACCESS
PRODUCT
CATALOG
CUSTOMER
REVIEWS
SITE
RANKING
HISTORICAL
PRICING
AND
THE
AMAZON
ELASTIC
COMPUTE
CLOUD
FOR
COMPUTING
CAPACITY
SIMILARLY
GOOGLE
WEB
APIS
SUPPORT
AJAX
SEARCH
MAP
API
GDATA
API
FOR
CALENDAR
GMAIL
ETC
GOOGLE
TRANSLATE
AND
GOOGLE
APP
ENGINE
FOR
CLOUD
COMPUTING
RESOURCES
WEB
SERVICES
AND
APIS
CONTINUE
TO
PROVIDE
AN
EXCITING
STREAM
OF
NEW
DATA
SOURCES
FOR
BI
A
RESEARCH
A
MAJOR
EMERGING
COMPONENT
IN
WEB
ANALYTICS
RESEARCH
IS
THE
DEVELOPMENT
OF
CLOUD
COMPUTING
PLATFORMS
AND
SERVICES
WHICH
INCLUDE
APPLICATIONS
SYSTEM
SOFTWARE
AND
HARDWARE
DELIVERED
AS
SERVICES
OVER
THE
INTERNET
BASED
ON
SERVICE
ORIENTED
ARCHITECTURE
SOA
SERVER
VIRTUALIZATION
AND
UTILITY
COMPUTING
CLOUD
COMPUTING
CAN
BE
OFFERED
AS
SOFTWARE
AS
A
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AL
INTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
SERVICE
SAAS
INFRASTRUCTURE
AS
A
SERVICE
IAAS
OR
PLATFORM
AS
A
SERVICE
PAAS
ONLY
A
FEW
LEADING
IT
VENDORS
ARE
CUR
RENTLY
POSITIONED
TO
SUPPORT
HIGH
END
HIGH
THROUGHPUT
BI
A
APPLICATIONS
USING
CLOUD
COMPUTING
FOR
EXAMPLE
AMAZON
ELASTIC
COMPUTE
CLOUD
ENABLES
USERS
TO
RENT
VIRTUAL
COMPUTERS
ON
WHICH
TO
RUN
THEIR
OWN
COMPUTER
APPLICATIONS
ITS
SIMPLE
STORAGE
SERVICE
PROVIDES
ONLINE
STORAGE
WEB
SERVICE
GOOGLE
APP
ENGINE
PROVIDES
A
PLATFORM
FOR
DEVEL
OPING
AND
HOSTING
JAVA
OR
PYTHON
BASED
WEB
APPLICATIONS
GOOGLE
BIGTABLE
IS
USED
FOR
BACKEND
DATA
STORAGE
MICROSOFT
WINDOWS
AZURE
PLATFORM
PROVIDES
CLOUD
SERVICES
SUCH
AS
SQL
AZURE
AND
SHAREPOINT
AND
ALLOWS
NET
FRAMEWORK
APPLICATIONS
TO
RUN
ON
THE
PLATFORM
THE
INDUSTRY
LED
WEB
AND
CLOUD
SERVICES
OFFER
UNIQUE
DATA
COLLECTION
PROCESSING
AND
ANALYTICS
CHALLENGES
FOR
BI
A
RESEARCHERS
IN
ACADEMIA
CURRENT
WEB
ANALYTICS
RELATED
RESEARCH
ENCOM
PASSES
SOCIAL
SEARCH
AND
MINING
REPUTATION
SYSTEMS
SOCIAL
MEDIA
ANALYTICS
AND
WEB
VISUALIZATION
IN
ADDITION
WEB
BASED
AUCTIONS
INTERNET
MONETIZATION
SOCIAL
MARKETING
AND
WEB
PRIVACY
SECURITY
ARE
SOME
OF
THE
PROMISING
RESEARCH
DIRECTIONS
RELATED
TO
WEB
ANALYTICS
MANY
OF
THESE
EMERGING
RESEARCH
AREAS
MAY
RELY
ON
ADVANCES
IN
SOCIAL
NETWORK
ANALY
SIS
TEXT
ANALYTICS
AND
EVEN
ECONOMICS
MODELING
RESEARCH
NETWORK
ANALYTICS
NETWORK
ANALYTICS
IS
A
NASCENT
RESEARCH
AREA
THAT
HAS
EVOLVED
FROM
THE
EARLIER
CITATION
BASED
BIBLIOMETRIC
ANALYSIS
TO
INCLUDE
NEW
COMPUTATIONAL
MODELS
FOR
ONLINE
COMMUNITY
AND
SOCIAL
NETWORK
ANALYSIS
GROUNDED
IN
BIBLIOMETRIC
ANALYSIS
CITATION
NETWORKS
AND
COAUTHORSHIP
NETWORKS
HAVE
LONG
BEEN
ADOPTED
TO
EXAMINE
SCIENTIFIC
IMPACT
AND
KNOWLEDGE
DIFFUSION
THE
H
INDEX
IS
A
GOOD
EXAMPLE
OF
A
CITATION
METRIC
THAT
AIMS
TO
MEASURE
THE
PRODUCTIVITY
AND
IMPACT
OF
THE
PUBLISHED
WORK
OF
A
SCIENTIST
OR
SCHOLAR
HIRSCH
SINCE
THE
EARLY
NETWORK
SCIENCE
HAS
BEGUN
TO
ADVANCE
RAPIDLY
WITH
CONTRI
BUTIONS
FROM
SOCIOLOGISTS
MATHEMATICIANS
AND
COMPUTER
SCIENTISTS
VARIOUS
SOCIAL
NETWORK
THEORIES
NETWORK
METRICS
TOPOLOGY
AND
MATHEMATICAL
MODELS
HAVE
BEEN
DEVELOPED
THAT
HELP
UNDERSTAND
NETWORK
PROPERTIES
AND
RELATIONSHIPS
E
G
CENTRALITY
BETWEENNESS
CLIQUES
PATHS
TIES
STRUCTURAL
HOLES
STRUCTURAL
BALANCE
RANDOM
NETWORK
SMALL
WORLD
NETWORK
SCALE
FREE
NETWORK
BARABÁSI
WATTS
RECENT
NETWORK
ANALYTICS
RESEARCH
HAS
FOCUSED
ON
AREAS
SUCH
AS
LINK
MINING
AND
COMMUNITY
DETECTION
IN
LINK
MINING
ONE
SEEKS
TO
DISCOVER
OR
PREDICT
LINKS
BETWEEN
NODES
OF
A
NETWORK
WITHIN
A
NETWORK
NODES
MAY
REPRESENT
CUSTOMERS
END
USERS
PRODUCTS
AND
OR
SERVICES
AND
THE
LINKS
BETWEEN
NODES
MAY
REPRESENT
SOCIAL
RELATIONSHIPS
COLLABORATION
E
MAIL
EXCHANGES
OR
PRODUCT
ADOPTIONS
ONE
CAN
CONDUCT
LINK
MINING
USING
ONLY
THE
TOPOLOGY
INFORMATION
LIBEN
NOWELL
AND
KLEINBERG
TECHNIQUES
SUCH
AS
COMMON
NEIGHBORS
JACCARD
COEFFICIENT
ADAMIC
ADAR
MEASURE
AND
KATZ
MEASURE
ARE
POPULAR
FOR
PREDICTING
MISSING
OR
FUTURE
LINKS
THE
LINK
MINING
ACCURACY
CAN
BE
FURTHER
IMPROVED
WHEN
THE
NODE
AND
LINK
ATTRIBUTES
ARE
CONSIDERED
COMMUNITY
DETECTION
IS
ALSO
AN
ACTIVE
RESEARCH
AREA
OF
RELEVANCE
TO
BI
A
FORTUNATO
BY
REPRESENTING
NETWORKS
AS
GRAPHS
ONE
CAN
APPLY
GRAPH
PARTITIONING
ALGORITHMS
TO
FIND
A
MINIMAL
CUT
TO
OBTAIN
DENSE
SUBGRAPHS
REPRESENTING
USER
COMMUNITIES
MANY
TECHNIQUES
HAVE
BEEN
DEVELOPED
TO
HELP
STUDY
THE
DYNAMIC
NATURE
OF
SOCIAL
NETWORKS
FOR
EXAMPLE
AGENT
BASED
MODELS
SOMETIMES
REFERRED
TO
AS
MULTI
AGENT
SYSTEMS
HAVE
BEEN
USED
TO
STUDY
DISEASE
CONTACT
NETWORKS
AND
CRIMINAL
OR
TERRORIST
NETWORKS
NATIONAL
RESEARCH
COUNCIL
SUCH
MODELS
SIMULATE
THE
ACTIONS
AND
INTERACTIONS
OF
AUTONOMOUS
AGENTS
OF
EITHER
INDIVIDUAL
OR
COLLECTIVE
ENTITIES
SUCH
AS
ORGANIZATIONS
OR
GROUPS
WITH
THE
INTENT
OF
ASSESSING
THEIR
EFFECTS
ON
THE
SYSTEM
AS
A
WHOLE
SOCIAL
INFLUENCE
AND
INFOR
MATION
DIFFUSION
MODELS
ARE
ALSO
VIABLE
TECHNIQUES
FOR
STUDYING
EVOLVING
NETWORKS
SOME
RESEARCH
IS
PARTICULARLY
RELEVANT
TO
OPINION
AND
INFORMATION
DYNAMICS
OF
A
SOCIETY
SUCH
DYNAMICS
HOLD
MANY
QUALITATIVE
SIMILARITIES
TO
DISEASE
INFECTIONS
BETTENCOURT
ET
AL
ANOTHER
NETWORK
ANALYTICS
TECHNIQUE
THAT
HAS
DRAWN
ATTENTION
IN
RECENT
YEARS
IS
THE
USE
OF
EXPONENTIAL
RANDOM
GRAPH
MODELS
FRANK
AND
STRAUSS
ROBINS
ET
AL
ERGMS
ARE
A
FAMILY
OF
STATISTICAL
MODELS
FOR
ANALYZING
DATA
ABOUT
SOCIAL
AND
OTHER
NETWORKS
TO
SUPPORT
STATISTICAL
INFERENCE
ON
THE
PROCESSES
INFLUENCING
THE
FORMATION
OF
NETWORK
STRUCTURE
ERGMS
CONSIDER
THE
SET
OF
ALL
POSSIBLE
ALTERNATIVE
NETWORKS
WEIGHTED
ON
THEIR
SIMILARITY
TO
AN
OBSERVED
NETWORK
IN
ADDITION
TO
STUDYING
TRADITIONAL
FRIENDSHIP
OR
DISEASE
NETWORKS
ERGMS
ARE
PROMISING
FOR
UNDERSTANDING
THE
UNDERLYING
NETWORK
PROPERTITIES
THAT
CAUSE
THE
FORMATION
AND
EVOLUTION
OF
CUSTOMER
CITIZEN
OR
PATIENT
NETWORKS
FOR
BI
A
MOST
OF
THE
ABOVEMENTIONED
NETWORK
ANALYTICS
TECHNIQUES
ARE
NOT
PART
OF
THE
EXISTING
COMMERCIAL
BI
A
PLATFORMS
SIGNIFI
CANT
OPEN
SOURCE
DEVELOPMENT
EFFORTS
ARE
UNDERWAY
FROM
THE
SOCIAL
NETWORK
ANALYSIS
COMMUNITY
TOOLS
SUCH
AS
UCINET
BORGATTI
ET
AL
AND
PAJEK
BATAGELJ
AND
MRVAR
HAVE
BEEN
DEVELOPED
AND
ARE
WIDELY
USED
FOR
LARGE
SCALE
NETWORK
ANALYSIS
AND
VISUALIZATION
NEW
NETWORK
ANALYTICS
TOOLS
SUCH
AS
ERGM
HAVE
ALSO
BEEN
MADE
AVAILABLE
TO
THE
ACADEMIC
COMMUNITY
HUNTER
ET
AL
ONLINE
VIRTUAL
COMMUNITIES
CRIMINAL
AND
TERRORIST
NETWORKS
SOCIAL
AND
POLITICAL
NETWORKS
AND
TRUST
AND
REPUTATION
NETWORKS
ARE
SOME
OF
THE
PROMISING
NEW
APPLICATIONS
FOR
NETWORK
ANALYTICS
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
ALJINTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
MOBILE
ANALYTICS
AS
AN
EFFECTIVE
CHANNEL
FOR
REACHING
MANY
USERS
AND
AS
A
MEANS
OF
INCREASING
THE
PRODUCTIVITY
AND
EFFICIENCY
OF
AN
ORGANIZATION
WORKFORCE
MOBILE
COMPUTING
IS
VIEWED
BY
RESPONDENTS
OF
THE
RECENT
IBM
TECHNOLOGY
TRENDS
SURVEY
IBM
AS
THE
SECOND
MOST
IN
DEMAND
AREA
FOR
SOFTWARE
DEVELOPMENT
MOBILE
BI
WAS
ALSO
CONSIDERED
BY
THE
GARTNER
BI
HYPE
CYCLE
ANALYSIS
AS
ONE
OF
THE
NEW
TECHNOLOGIES
THAT
HAVE
THE
POTENTIAL
TO
DRASTICALLY
DISRUPT
THE
BI
MARKET
BITTERER
ACCORDING
TO
EMARKETER
THE
MARKET
FOR
MOBILE
ADS
IS
EXPECTED
TO
EXPLODE
SOARING
FROM
AN
ESTIMATED
BILLION
IN
TO
BILLION
IN
SNIDER
MOBILE
COMPUTING
OFFERS
A
MEANS
FOR
IT
PROFESSIONAL
GROWTH
AS
MORE
AND
MORE
ORGANIZATIONS
BUILD
APPLICATIONS
WITH
ITS
LARGE
AND
GROWING
GLOBAL
INSTALL
BASE
ANDROID
HAS
BEEN
RANKED
AS
THE
TOP
MOBILE
PLATFORM
SINCE
THIS
OPEN
SOURCE
PLATFORM
BASED
ON
JAVA
AND
XML
OFFERS
A
MUCH
SHORTER
LEARNING
CURVE
AND
THIS
CONTRIBUTES
TO
ITS
POPULARITY
WITH
IT
PROFESSIONALS
PERCENT
OF
THE
IBM
SURVEY
RESPONDENTS
PLANNED
TO
USE
ANDROID
AS
THEIR
MOBILE
DEVELOP
MENT
PLATFORM
WHILE
PERCENT
PLANNED
TO
USE
IOS
AND
PERCENT
PLANNED
TO
USE
WINDOWS
THE
ABILITY
TO
COLLECT
FINE
GRAINED
LOCATION
SPECIFIC
CONTEXT
AWARE
HIGHLY
PERSONALIZED
CONTENT
THROUGH
THESE
SMART
DEVICES
HAS
OPENED
NEW
POSSI
BILITIES
FOR
ADVANCED
AND
INNOVATIVE
BI
A
OPPORTUNITIES
IN
ADDITION
TO
THE
HARDWARE
AND
CONTENT
ADVANTAGES
THE
UNIQUE
APPS
ECOSYSTEM
DEVELOPED
THROUGH
THE
VOLUNTEER
COMMUNITY
OF
MOBILE
APP
DEVELOPERS
OFFERS
A
NEW
AVENUE
FOR
BI
A
RESEARCH
THE
APPLE
APP
STORE
ALONE
OFFERS
MORE
THAN
APPS
IN
ALMOST
ANY
CONCEIVABLE
CATEGORY
AS
OF
AUGUST
THE
NUMBER
OF
ANDROID
APPS
ALSO
REACHED
IN
AUGUST
MANY
DIFFERENT
REVENUE
MODELS
HAVE
BEGUN
TO
EMERGE
FOR
MOBILE
APPS
FROM
PAID
OR
FREE
BUT
AD
SUPPORTED
APPS
TO
MOBILE
GAMIFICATION
WHICH
INCENTIVIZES
PARTICIPANTS
E
G
USERS
OR
EMPLOYEES
BY
GIVING
REWARDS
FOR
CONTRIBUTIONS
SNIDER
FOR
MOBILE
BI
COMPANIES
ARE
CONSIDERING
ENTERPRISE
APPS
INDUSTRY
SPECIFIC
APPS
E
COMMERCE
APPS
AND
SOCIAL
APPS
IN
RANKED
ORDER
ACCORDING
TO
THE
IBM
SURVEY
THE
LIGHTWEIGHT
PROGRAMMING
MODELS
OF
THE
CURRENT
WEB
SERVICES
E
G
HTML
XML
CSS
AJAX
FLASH
AND
THE
MATURING
MOBILE
DEVELOPMENT
PLATFORMS
SUCH
AS
ANDROID
AND
IOS
HAVE
CONTRIBUTED
TO
THE
RAPID
DEVELOPMENT
OF
MOBILE
WEB
SERVICES
E
G
MOBILE
AJAX
MOBILE
FLASH
IN
VARIOUS
MOBILE
PERVASIVE
APPLICATIONS
FROM
DISASTER
MANAGE
MENT
TO
HEALTHCARE
SUPPORT
NEW
MOBILE
ANALYTICS
RESEARCH
IS
EMERGING
IN
DIFFERENT
AREAS
E
G
MOBILE
SENSING
APPS
THAT
ARE
LOCATION
AWARE
AND
ACTIVITY
SENSITIVE
MOBILE
SOCIAL
INNOVA
TION
FOR
M
HEALTH
AND
M
LEARNING
MOBILE
SOCIAL
NETWORKING
AND
CROWD
SOURCING
MOBILE
VISUALIZATION
HCI
AND
PERSONALI
ZATION
AND
BEHAVIORAL
MODELING
FOR
MOBILE
APPS
IN
ADDITION
SOCIAL
BEHAVIORAL
AND
ECONOMIC
MODELS
FOR
GAMIFICATION
MOBILE
ADVERTISING
AND
SOCIAL
MARKETING
ARE
UNDER
WAY
AND
MAY
CONTRIBUTE
TO
THE
DEVELOPMENT
OF
FUTURE
BI
A
SYSTEMS
MAPPING
THE
BI
A
KNOWLEDGE
LANDSCAPE
A
BIBLIOMETRIC
STUDY
OF
ACADEMIC
AND
INDUSTRY
PUBLICATIONS
IN
AN
EFFORT
TO
BETTER
UNDERSTAND
THE
CURRENT
STATE
OF
BI
A
RELATED
RESEARCH
AND
IDENTIFY
FUTURE
SOURCES
OF
KNOWLEDGE
WE
CONDUCTED
A
BIBLIOMETRIC
STUDY
ANALYZING
RELEVANT
LITERATURE
MAJOR
BI
A
SCHOLARS
DISCIPLINES
AND
PUBLICATIONS
AND
KEY
RESEARCH
TOPICS
A
COLLECTION
TRANSFORMATION
AND
ANALYTICS
PROCESS
WAS
FOLLOWED
IN
THE
STUDY
MUCH
LIKE
A
TYPICAL
BI
A
PROCESS
ADOPTED
IN
OTHER
APPLICATIONS
TO
DISCERN
RESEARCH
TRENDS
IN
BI
A
RELATED
LITERATURE
FROM
THE
PAST
DECADE
WAS
COLLECTED
RELEVANT
IT
PUBLICATIONS
WERE
IDENTIFIED
FROM
SEVERAL
LARGE
SCALE
AND
REPUTABLE
DIGITAL
LIBRARIES
WEB
OF
SCIENCE
THOMSON
REUTERS
COVERING
MORE
THAN
OF
THE
HIGHEST
IMPACT
JOURNALS
IN
SCIENCES
ENGINEERING
AND
HUMANITIES
BUSINESS
SOURCE
COMPLETE
EBSCO
COVERING
PEER
REVIEWED
BUSINESS
JOURNALS
AS
WELL
AS
NON
JOURNAL
CONTENT
SUCH
AS
INDUSTRY
TRADE
MAGAZINES
IEEE
XPLORE
INSTITUTE
OF
ELECTRICAL
AND
ELEC
TRONICS
ENGINEERS
PROVIDING
ACCESS
TO
THE
IEEE
DIGITAL
LIBRARY
SCIENCEDIRECT
ELSEVIER
COVERING
OVER
JOURNALS
FROM
THE
SCIENTIFIC
TECHNICAL
AND
MEDICAL
LITERATURE
AND
ENGINEERING
VILLAGE
ELSEVIER
USED
TO
RETRIEVE
SELECTED
ACM
CONFERENCE
PAPERS
BECAUSE
THE
ACM
DIGITAL
LIBRARY
INTERFACE
DOES
NOT
SUPPORT
AUTOMATED
DOWNLOADING
THESE
SOURCES
CONTAIN
HIGH
QUALITY
BIBLIOMETRIC
METADATA
INCLUDING
JOURNAL
NAME
AND
DATE
AUTHOR
NAME
AND
INSTITUTION
AND
ARTICLE
TITLE
AND
ABSTRACT
TO
ENSURE
DATA
CONSISTENCY
AND
RELEVANCE
ACROSS
OUR
COLLEC
TION
WE
RETRIEVED
ONLY
THOSE
PUBLICATIONS
THAT
CONTAINED
THE
IPHONE
LEARN
ABOUT
APPS
FROM
THE
APP
STORE
HTTP
WWW
APPLE
COM
IPHONE
BUILT
IN
APPS
APP
STORE
HTML
ACCESSED
AUGUST
KEYWORDS
BUSINESS
INTELLIGENCE
BUSINESS
ANALYTICS
OR
BIG
DATA
WITHIN
THEIR
TITLE
ABSTRACT
OR
SUBJECT
INDEXING
WHEN
APPLICABLE
THE
CHOICE
OF
THESE
THREE
KEYWORDS
WAS
INTENDED
ANDROID
STATISTICS
HTTP
WWW
APPBRAIN
COM
STATS
NUMBER
OF
TO
FOCUS
OUR
SEARCH
AND
ANALYSIS
ON
PUBLICATIONS
OF
DIRECT
RELE
ANDROID
APPS
ACCESSED
AUGUST
VANCE
TO
OUR
INTEREST
HOWEVER
THIS
SEARCH
PROCEDURE
MAY
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AL
INTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
ALSO
OMIT
ARTICLES
THAT
USE
OTHER
BI
A
RELEVANT
TERMS
E
G
OVERALL
THE
LARGEST
SOURCE
OF
ACADEMIC
BUSINESS
INTELLIGENCE
DATA
WAREHOUSING
DATA
MINING
BUT
NOT
THE
THREE
SPECIFIC
PUBLICATIONS
WAS
ACADEMIC
CONFERENCES
THE
CONFERENCE
ON
KEYWORDS
IN
THE
TITLE
OR
ABSTRACT
THIS
KIND
OF
LIMITATION
IS
BUSINESS
INTELLIGENCE
AND
FINANCIAL
ENGINEERING
AND
COMMON
IN
BIBLIOMETRIC
STUDIES
THE
COLLECTED
DATA
WAS
CONFERENCE
ON
ELECTRONIC
COMMERCE
AND
BUSINESS
INTELLI
EXPORTED
AS
XML
RECORDS
AND
PARSED
INTO
A
RELATIONAL
DATA
GENCE
ARE
SPECIALIZED
ACADEMIC
CONFERENCES
DEVOTED
TO
BASE
SQL
SERVER
FOR
ANALYSIS
THE
NUMBER
OF
RECORDS
BUSINESS
INTELLIGENCE
ONE
IS
CONFERENCE
RANKS
IN
THE
TOP
INITIALLY
RETRIEVED
TOTALED
PAPERS
AFTER
REMOVING
DUPLI
LIST
HAWAII
INTERNATIONAL
CONFERENCE
ON
SYSTEMS
SCIENCES
CATES
THE
NUMBER
OF
UNIQUE
RECORDS
TOTALED
HICSS
WITH
PUBLICATIONS
IEEE
HOLDS
THE
MAJORITY
OF
CONFERENCES
ON
THE
LIST
THROUGH
VARIOUS
OUTLETS
SEVERAL
ARE
FIGURE
SHOWS
THE
STATISTICS
AND
GROWTH
TRENDS
OF
PUBLICATIONS
RELATED
TO
EMERGING
TECHNICAL
AREAS
SUCH
AS
DATA
MINING
RELATING
TO
THE
THREE
SEARCH
KEYWORDS
OVERALL
BUSINESS
INTEL
INTERNET
COMPUTING
AND
CLOUD
COMPUTING
THE
IEEE
INTER
LIGENCE
HAD
THE
LARGEST
COVERAGE
AND
THE
LONGEST
HISTORY
THIS
NATIONAL
CONFERENCE
ON
DATA
MINING
ICDM
IS
HIGHLY
IS
CONSISTENT
WITH
THE
EVOLUTION
OF
BI
A
AS
THE
TERM
REGARDED
BI
AND
RANKS
ACM
HAS
TWO
PUBLICATIONS
IN
THE
TOP
APPEARED
FIRST
IN
THE
EARLY
IN
OUR
COLLECTION
BUSINESS
LIST
COMMUNICATIONS
OF
THE
ACM
AND
THE
ACM
SIGKDD
ANALYTICS
AND
BIG
DATA
BEGAN
TO
APPEAR
IN
THE
LITERATURE
IN
INTERNATIONAL
CONFERENCE
ON
KNOWLEDGE
DISCOVERY
AND
DATA
BUT
ONLY
GAINED
MUCH
ATTENTION
AFTER
ABOUT
THE
MINING
BOTH
ARE
WELL
KNOWN
IN
CS
AGAIN
THE
DATA
MINING
BUSINESS
INTELLIGENCE
RELATED
PUBLICATIONS
NUMBERED
COMMUNITY
HAS
CONTRIBUTED
SIGNIFICANTLY
TO
BI
A
OTHER
WHEREAS
BUSINESS
ANALYTICS
AND
BIG
DATA
PUBLICATIONS
EACH
TECHNICAL
CONFERENCES
IN
CS
ARE
ALSO
CONTRIBUTING
TO
BI
A
IN
NUMBERED
ONLY
AND
RESPECTIVELY
WHILE
THE
OVERALL
AREAS
SUCH
AS
COMPUTATIONAL
INTELLIGENCE
WEB
INTELLIGENCE
PUBLICATION
TREND
FOR
BUSINESS
INTELLIGENCE
REMAINS
STABLE
EVOLUTIONARY
COMPUTATION
AND
NATURAL
LANGUAGE
PROCESSING
BUSINESS
ANALYTICS
AND
BIG
DATA
PUBLICATIONS
HAVE
SEEN
A
FASTER
ALL
OF
WHICH
ARE
CRITICAL
FOR
DEVELOPING
FUTURE
DATA
TEXT
AND
GROWTH
PATTERN
IN
RECENT
YEARS
WEB
ANALYTICS
TECHNIQUES
DISCUSSED
IN
OUR
RESEARCH
FRAME
KNOWLEDGE
OF
THE
MOST
POPULAR
PUBLICATIONS
AS
WELL
AS
PRO
LIFIC
AUTHORS
IS
BENEFICIAL
FOR
UNDERSTANDING
AN
EMERGING
MAJOR
IS
CONFERENCES
ICIS
INTERNATIONAL
CONFERENCE
ON
INFORMATION
CONFERENCES
RESEARCH
DISCIPLINE
AND
INDUSTRY
TABLE
MAGAZINES
SUMMARIZES
WITH
THE
BI
A
TOP
PUBLICATIONS
JOURNALS
MAY
TIONS
SYSTEMS
HAVE
ARE
NOT
AND
ALSO
COVERED
WITS
PUBLISHED
WORKSHOP
IN
SIGNIFICANT
THE
FIVE
ON
MAJOR
INFORMATION
BI
A
DIGITAL
RESEARCH
LIBRARIES
TECHNOLOGIES
HOWEVER
TO
WHICH
AND
THEIR
SYSTEMS
WE
COLLEC
HAVE
THE
TOP
ACADEMIC
BI
A
AUTHORS
ARE
IDENTIFIED
IN
TABLE
ACCESS
AND
THUS
ARE
NOT
INCLUDED
IN
THIS
ANALYSIS
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AL
INTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
TOP
TOP
ACADEMIC
PUBLICATION
PUBLICATIONS
INDUSTRY
PUBLICATION
PUBLICATIONS
CONF
ON
BUSINESS
INTELLIGENCE
AND
FINANCIAL
ENGINEERING
COMPUTERWORLD
HAWAII
INTERNATIONAL
CONF
ON
SYSTEMS
SCIENCES
INFORMATION
TODAY
CONF
ON
ELECTRONIC
COMMERCE
AND
BUSINESS
INTELLIGENCE
INFORMATIONWEEK
INTERNATIONAL
TECHNOLOGY
CONF
ON
COMPUTER
WEB
WORKSHOPS
INTELLIGENCE
AND
INTELLIGENT
WEEKLY
AGENT
IEEE
INTERNATIONAL
CONF
ON
DATA
MINING
MICROSOFT
DATA
MINING
IEEE
INTERNATIONAL
CONF
ON
E
TECHNOLOGY
E
COMMERCE
AND
G
INFOWORLD
E
SERVICE
IEEE
INTELLIGENT
SYSTEMS
CIO
IEEE
CLOUD
COMPUTING
KM
WORLD
DECISION
SUPPORT
VARBUSINESS
SYSTEMS
CRN
FORMERLY
IEEE
CONGRESS
ON
EVOLUTIONARY
COMPUTATION
STORES
MAGAZINE
JOURNAL
OF
BUSINESS
ETHICS
FORBES
COMMUNICATIONS
OF
THE
ACM
CRM
MAGAZINE
EUROPEAN
JOURNAL
OF
MARKETING
NETWORK
WORLD
IEEE
ACM
INTERNATIONAL
FINANCIAL
SYMPOSIUM
ON
CLUSTER
CLOUD
AND
EXECUTIVE
GRID
COMPUTING
INTERNATIONAL
JOURNAL
OF
TECHNOLOGY
MANAGEMENT
HEALTHCARE
MANAGEMENT
FINANCIAL
A
A
ACM
AND
SIGKDD
DATA
INTERNATIONAL
CHAIN
MINING
CONF
ON
STORE
KNOWLEDGE
DISCOVERY
AGE
INTERNATIONAL
SYMPOSIUM
ON
NATURAL
LANGUAGE
PROCESSING
STRATEGIC
FINANCE
IEEE
INTERNET
COMPUTING
TRAFFIC
WORLD
INTERNATIONAL
ENGINEERING
CONF
DATA
ON
COMPUTATIONAL
STRATEGY
INTELLIGENCE
AND
SOFTWARE
IEEE
SOFTWARE
CFP
WORK
JOURNALS
TABLE
ARE
SUMMA
SOMEW
CATION
VOLUME
PUBLICATIONS
ALTHOUGH
MO
DECISION
SUPPORT
SEVERAL
SYSTEMS
OTHERS
M
F
BUSINESS
SCHOOL
MENT
JOURNALS
COMMU
ALS
IN
AREAS
SUCH
AUTHORS
AS
BUSINESS
ARE
CLOS
ET
MANAGEMENT
OTHER
JAY
MAJO
F
N
BUSINESS
INTELLIGENCE
WINGYAN
RELATED
CHUN
THE
AFOREMENTIONED
CONNECTION
SOURCE
FROM
INDUSTRY
WATSON
TEND
TO
BE
TH
SPECIFIC
BI
FOCUS
WE
ALSO
E
G
REPORT
COM
TODAY
AT
POPULAR
AND
INFORM
METRIC
TABLE
HOWEVER
AUTHORS
THERE
BASED
AR
SUCH
AS
MICROSOFT
PUBLICATIONS
DATA
MIN
A
CRM
MAGAZINE
PROPENSITY
THAT
TO
C
RELATED
TOPICS
OF
DATA
MINI
CUSTOMER
RELATION
HEADERS
MANAGEM
ARE
WELCO
TIONALLY
BEEN
AND
TOPICS
RESULTS
OF
OR
INTE
FOR
MIS
QUARTERLY
VOL
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AL
INTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
ACADEMIC
PUBLICATION
PUBLICATIONS
DECISION
SUPPORT
SYSTEMS
COMMUNICATIONS
OF
THE
AIS
JOURNAL
OF
MANAGEMENT
INFORMATION
SYSTEMS
MANAGEMENT
SCIENCE
INFORMATION
SYSTEMS
RESEARCH
JOURNAL
OF
THE
ASSOCIATION
FOR
INFORMATION
SYSTEMS
INFORMS
JOURNAL
ON
COMPUTING
MANAGEMENT
INFORMATION
SYSTEMS
QUARTERLY
RANK
NAME
AFFILIATION
DISCIPLINE
REGION
TOTAL
PAGERANK
HSINCHUN
CHEN
UNIVERSITY
OF
ARIZONA
U
IS
NORTH
AMERICA
SHENGHONG
LI
ZHEJIANG
UNIVERSITY
CHINA
MATH
ASIA
YONG
SHI
UNIVERSITY
OF
NEBRASKA
U
CS
NORTH
AMERICA
KIN
KEUNG
LAI
CITY
UNIVERSITY
OF
HONG
KONG
CHINA
IS
ASIA
BARBARA
H
WIXOM
UNIVERSITY
OF
VIRGINIA
U
IS
NORTH
AMERICA
HUGH
J
WATSON
UNIVERSITY
OF
GEORGIA
U
IS
NORTH
AMERICA
ELIZABETH
CHANG
CURTIN
UNIVERSITY
AUSTRALIA
IS
AUSTRALIA
SHEILA
WRIGHT
DE
MONTFORT
UNIVERSITY
U
K
MARKETING
EUROPE
MATTEO
GOLFARELLI
UNIVERSITY
OF
BOLOGNA
ITALY
CS
EUROPE
FAROOKH
HUSSAIN
UNIVERSITY
OF
TECHNOLOGY
SYDNEY
AUSTRALIA
CS
AUSTRALIA
MICHAELCHAU
HONG
KONG
UNIVERSITY
CHINA
IS
ASIA
JOSEF
SCHIEFER
VIENNA
UNIVERSITY
OF
TECHNOLOGY
AUSTRIA
CS
EUROPE
CRAIG
FLEISHER
COLLEGE
OF
COSTAL
GEORGIA
U
MANAGEMENT
NORTH
AMERICA
LINGLING
ZHANG
TOWSON
UNIVERSITY
U
COMMUNICATION
NORTH
AMERICA
OLIVERA
MARJANOVIC
UNIVERSITY
OF
SYDNEY
AUSTRALIA
IS
AUSTRALIA
XIAOFENG
ZHANG
CHANGSHA
UNIVERSITY
OF
SCIENCE
AND
IS
ASIA
TECHNOLOGY
CHINA
STEFANO
RIZZI
UNIVERSITY
OF
BOLOGNA
ITALY
CS
EUROPE
JAY
F
NUNAMAKER
UNIVERSITY
OF
ARIZONA
U
IS
NORTH
AMERICA
WINGYAN
CHUNG
SANTA
CLARA
UNIVERSITY
U
IS
NORTH
AMERICA
ZAHIR
URABU
BRUNEI
UNIVERSITY
U
K
MANAGEMENT
EUROPE
ANALYSIS
REVEALS
BROAD
AND
EVEN
CONTRIBUTION
RELATED
TRIGRAMS
OF
AUTHORS
SUCH
FROM
AS
CUSTOMER
RELATION
MAN
NORTH
AMERICA
ASIA
EUROPE
AND
AUSTRALIA
ENTERPRISE
REFLECTING
RESOURCE
THE
PLANNING
THESE
KEYWORD
DIVERSITY
AND
INTERNATIONAL
INTEREST
IN
RANKED
THE
FIELD
BASED
OF
ON
BI
A
THEIR
FREQUENCY
AND
THE
TOP
DISPLAYED
USING
THE
TAGCLOUD
VISUALIZATION
MOR
THE
LAST
SET
OF
ANALYSES
INVESTIGATED
KEYWORDS
THE
CONTENT
ARE
OF
HIGHLIGHTED
BI
A
WITH
LARGER
FONTS
PUBLICATIONS
FROM
MALLET
FIGURE
MCCALLUM
FOR
EXAMPLE
A
COMPETITIVE
ADVANTAGE
B
JAVA
BASED
OPEN
SOURCE
NLP
TEXT
ANALYTICS
WAREHOUSING
TOOL
WAS
AND
USED
DECISION
TO
SUPPORT
EMERGED
AS
EXTRACT
THE
TOP
BIGRAMS
TWO
WORD
PHRASES
TOPICS
IN
FOR
THE
EACH
BI
A
YEAR
LITERATURE
A
OTHER
BI
A
RELATE
FEW
BI
GRAMS
WERE
COMBINED
TO
FORM
AS
MORE
CUSTOMER
MEANINGFUL
RELATION
BI
MANAGEMENT
DATA
MINING
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AI
INTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
INTELLIGENCE
ENTERPRISE
RESOURCE
PLANNING
AND
KNOWLEDGE
MANAGEMENT
WERE
ALSO
HIGHLY
RANKED
OVERALL
THE
TOPICS
EXTRACTED
WERE
HIGHLY
RELEVANT
TO
BI
A
ESPECIALLY
FOR
ITS
MANAGERIAL
AND
APPLICATION
VALUES
ALTHOUGH
MOST
OF
THE
DETAILED
TECHNICAL
TERMS
AS
DESCRIBED
IN
THE
PREVIOUS
RESEARCH
FRAMEWORK
SECTIONS
WERE
NOT
PRESENT
THIS
COULD
BE
ATTRI
BUTED
TO
THE
TENDENCY
OF
AUTHORS
TO
USE
BROAD
TERMINOLOGIES
IN
ARTICLE
TITLES
AND
ABSTRACTS
BI
A
EDUCATION
AND
PROGRAM
DEVELOPMENT
BI
A
PROVIDES
OPPORTUNITIES
NOT
ONLY
FOR
THE
RESEARCH
COM
MUNITY
BUT
ALSO
FOR
EDUCATION
AND
PROGRAM
DEVELOPMENT
IN
JULY
COLUMBIA
UNIVERSITY
AND
NEW
YORK
CITY
ANNOUNCED
PLANS
TO
INVEST
OVER
MILLION
DOLLARS
IN
A
NEW
CENTER
FOR
DATA
SCIENCE
WHICH
IS
EXPECTED
TO
GENERATE
THOUSANDS
OF
JOBS
AND
MILLIONS
OF
DOLLARS
IN
TAX
REVENUES
FROM
STARTUP
COMPANIES
OVER
THE
NEXT
YEARS
ASSOCIATED
PRESS
BI
A
IS
DATA
SCIENCE
IN
BUSINESS
JOB
POSTINGS
SEEKING
DATA
SCIENTISTS
AND
BUSINESS
ANALYTICS
SPECIALISTS
ABOUND
THESE
DAYS
THERE
IS
A
CLEAR
SHORTAGE
OF
PROFESSIONALS
WITH
THE
DEEP
KNOWLEDGE
REQUIRED
TO
MANAGE
THE
THREE
V
OF
BIG
DATA
VOLUME
VELOCITY
AND
VARIETY
RUSSOM
THERE
IS
ALSO
AN
INCREASING
DEMAND
FOR
INDIVIDUALS
WITH
THE
DEEP
KNOWLEDGE
NEEDED
TO
MANAGE
THE
THREE
PERSPECTIVES
OF
BUSINESS
DECISION
MAKING
DESCRIPTIVE
PREDICTIVE
AND
PRE
SCRIPTIVE
ANALYTICS
IN
THIS
SECTION
WE
DESCRIBE
BI
A
EDUCA
TION
IN
BUSINESS
SCHOOLS
PRESENT
THE
CHALLENGES
FACING
IS
DEPARTMENTS
AND
DISCUSS
BI
A
PROGRAM
DEVELOPMENT
OPPOR
TUNITIES
WE
ALSO
PROVIDE
SOME
SUGGESTIONS
FOR
THE
IS
DISCI
PLINE
IN
ADDRESSING
THESE
CHALLENGES
CHIANG
ET
AL
EDUCATION
CHALLENGES
BI
A
FOCUSES
ON
UNDERSTANDING
INTERPRETATION
STRATEGIZING
AND
TAKING
ACTION
TO
FURTHER
ORGANIZATIONAL
INTERESTS
SEVERAL
ACADEMIC
DISCIPLINES
HAVE
CONTRIBUTED
TO
BI
A
INCLUDING
IS
CS
STATISTICS
MANAGEMENT
AND
MARKETING
AS
SHOWN
IN
OUR
BIBLIOMETRIC
STUDY
IS
PROGRAMS
IN
PARTICULAR
ARE
UNIQUELY
POSITIONED
TO
TRAIN
A
NEW
GENERATION
OF
SCHOLARS
AND
STUDENTS
DUE
TO
THEIR
EMPHASIS
ON
KEY
DATA
MANAGEMENT
AND
INFOR
MATION
TECHNOLOGIES
BUSINESS
ORIENTED
STATISTICAL
ANALYSIS
AND
MANAGEMENT
SCIENCE
TECHNIQUES
AND
BROAD
BUSINESS
DISCI
PLINE
EXPOSURE
E
G
FINANCE
ACCOUNTING
MARKETING
AND
ECONOMICS
SINCE
ITS
INCEPTION
APPROXIMATELY
YEARS
AGO
IS
AS
AN
ACADEMIC
DISCIPLINE
HAS
PRIMARILY
FOCUSED
ON
BUSINESS
NEEDS
IN
AN
ERA
WHEN
THE
MAJOR
CHALLENGES
INVOLVED
THE
MANAGEMENT
OF
INTERNAL
BUSINESS
AND
TRANSACTION
DATA
IN
THE
AGE
OF
BIG
DATA
THESE
PROBLEMS
REMAIN
BUT
THE
EMPHASIS
IN
INDUSTRY
HAS
SHIFTED
TO
DATA
ANALYSIS
AND
RAPID
BUSINESS
DECISION
MAKING
BASED
ON
HUGE
VOLUMES
OF
INFORMATION
SUCH
TIME
CRITICAL
DECISION
MAKING
LARGELY
TAKES
PLACE
OUTSIDE
OF
THE
IS
FUNCTION
I
E
IN
BUSINESS
UNITS
SUCH
AS
MARKETING
FINANCE
AND
LOGISTICS
CAN
IS
PROGRAMS
SERVE
THE
NEEDS
OF
THESE
BUSINESS
DECISION
MAKERS
CAN
WE
PROVIDE
COURSES
IN
DATA
MINING
TEXT
MINING
OPINION
MINING
SOCIAL
MEDIA
NETWORK
ANALYTICS
WEB
MINING
AND
PREDICTIVE
ANALYTICS
THAT
ARE
REQUIRED
FOR
MARKETING
AND
FINANCE
MAJORS
WE
SHOULD
ALSO
ASK
OURSELVES
ABOUT
THE
SKILL
SETS
NEEDED
BY
STUDENTS
SHOULD
WE
RECRUIT
STUDENTS
WITH
STRONG
MATH
AND
STATISTICAL
SKILLS
FOR
EXAMPLE
WE
CONTEND
THAT
A
NEW
VISION
FOR
IS
OR
AT
LEAST
FOR
SOME
IS
PROGRAMS
SHOULD
ADDRESS
THESE
QUESTIONS
BI
A
PRESENTS
A
UNIQUE
OPPORTUNITY
FOR
IS
UNITS
IN
BUSINESS
SCHOOLS
TO
POSITION
THEMSELVES
AS
A
VIABLE
OPTION
FOR
EDU
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AL
INTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
EATING
PROFESSIONALS
WITH
THE
NECESSARY
DEPTH
AND
ACADEMIC
RIGOR
TO
TACKLE
THE
INCREASED
COMPLEXITY
OF
BI
A
ISSUES
IS
PROGRAMS
HOUSED
WITHIN
BUSINESS
SCHOOLS
HAVE
ACCESS
TO
A
VARIETY
OF
BUSINESS
COURSES
AS
WELL
AS
COURSES
INTENDED
TO
IMPROVE
COMMUNICATION
AND
PRESENTATION
SKILLS
IT
IS
ALSO
COMMON
FOR
BUSINESS
SCHOOLS
TO
HOUSE
MANAGEMENT
SCIENCE
AND
STATISTICS
FACULTY
IN
THE
SAME
IS
UNIT
BI
A
KNOWLEDGE
AND
SKILLS
BI
A
EDUCATION
SHOULD
BE
INTERDISCIPLINARY
AND
COVER
CRITICAL
ANALYTICAL
AND
IT
SKILLS
BUSINESS
AND
DOMAIN
KNOWLEDGE
AND
COMMUNICATION
SKILLS
REQUIRED
IN
A
COMPLEX
DATA
CENTRIC
BUSINESS
ENVIRONMENT
ANALYTICAL
AND
IT
SKILLS
INCLUDE
A
VARIETY
OF
EVOLVING
TOPICS
THEY
ARE
DRAWN
FROM
DISCIPLINES
SUCH
AS
STATISTICS
AND
COMPUTER
SCIENCE
FOR
MANAGING
AND
ANALYZING
BOTH
STRUCTURED
DATA
AND
UNSTRUCTURED
TEXT
COVERAGE
OF
THESE
TOPICS
RANGES
FROM
BI
A
TO
BI
A
THE
ACADEMIC
PROGRAMS
INTENDED
TO
PRODUCE
BI
A
PROFESSIONALS
SHOULD
CONSIDER
THESE
ANALYTICAL
AND
IT
SKILLS
AS
SUGGESTED
IN
TABLE
OF
OUR
RESEARCH
FRAMEWORK
TO
PROVIDE
USEFUL
INSIGHTS
AND
DECISION
MAKING
SUPPORT
THE
BI
A
PROFESSIONALS
MUST
BE
CAPABLE
OF
UNDERSTANDING
THE
BUSINESS
ISSUES
AND
FRAMING
THE
APPROPRIATE
ANALYTICAL
SOLU
TIONS
THE
NECESSARY
BUSINESS
KNOWLEDGE
FOR
BI
A
PROFES
SIONALS
RANGES
FROM
GENERAL
FAMILIARITY
WITH
THE
AREAS
OF
ACCOUNTING
FINANCE
MANAGEMENT
MARKETING
LOGISTICS
AND
OPERATION
MANAGEMENT
TO
THE
DOMAIN
KNOWLEDGE
REQUIRED
IN
SPECIFIC
BI
A
APPLICATIONS
SOME
OF
WHICH
ARE
DISCUSSED
EARLIER
AND
SUMMARIZED
IN
TABLE
THE
IMPORTANCE
OF
AN
ORGANIZATION
WIDE
CULTURE
FOR
INFORMED
FACT
BASED
DECISION
MAKING
FOR
BUSINESS
ANALYTICS
IS
EMPHA
SIZED
BY
DAVENPORT
TO
SUPPORT
SUCH
A
CULTURE
BI
A
PROFESSIONALS
NEED
TO
KNOW
NOT
ONLY
HOW
TO
TURN
RAW
DATA
AND
INFORMATION
THROUGH
ANALYTICS
INTO
MEANINGFUL
AND
ACTION
ABLE
KNOWLEDGE
FOR
AN
ORGANIZATION
BUT
ALSO
HOW
TO
PROPERLY
INTERACT
WITH
AND
COMMUNICATE
THIS
KNOWLEDGE
TO
THE
BUSINESS
AND
DOMAIN
EXPERTS
OF
THE
ORGANIZATION
PROGRAM
DEVELOPMENT
BI
A
PROVIDES
A
UNIQUE
OPPORTUNITY
FOR
IS
UNITS
IN
BUSINESS
SCHOOLS
TO
DEVELOP
NEW
COURSES
CERTIFICATE
PROGRAMS
AND
DEGREE
PROGRAMS
CHARGED
WITH
PREPARING
THE
NEXT
GENERATION
OF
ANALYTICAL
THINKERS
THERE
ARE
MANY
OPTIONS
FOR
DELIVERING
BI
A
EDUCATION
BECAUSE
OF
THE
DEPTH
OF
KNOWLEDGE
REQUIRED
GRADUATE
PROGRAMS
ARE
THE
OBVIOUS
CHOICE
VIABLE
PROGRAM
DEVELOPMENT
OPTIONS
IN
DELIVERING
BI
A
EDUCATION
INCLUDE
CREATING
A
MASTER
OF
SCIENCE
MS
DEGREE
IN
BI
A
CREATING
A
BI
A
CONCENTRATION
IN
EXISTING
MS
IS
PROGRAMS
OFFERING
A
GRADUATE
BI
A
CERTIFICATE
PROGRAM
THE
FIRST
OPTION
REQUIRES
THE
EFFORT
OF
DEVELOPING
A
NEW
PROGRAM
A
FEW
UNIVERSITIES
HAVE
EMBARKED
ON
THIS
ENDEAVOR
A
NONEXHAUSTIVE
LIST
INCLUDES
NORTH
CAROLINA
STATE
UNIVER
SITY
SAINT
JOSEPH
UNIVERSITY
NORTHWESTERN
UNIVERSITY
THE
UNIVERSITY
OF
DENVER
STEVENS
INSTITUTE
OF
TECHNOLOGY
AND
FORDHAM
UNIVERSITY
NEW
YORK
UNIVERSITY
WILL
LAUNCH
ITS
NEW
PROGRAM
IN
MAY
NEW
MS
DEGREE
PROGRAMS
CAN
BE
DESIGNED
EXPLICITLY
TO
ATTRACT
ANALYTICALLY
STRONG
STUDENTS
WITH
UNDERGRADUATE
DEGREES
IN
AREAS
SUCH
AS
MATHEMATICS
SCIENCE
AND
COMPUTER
SCIENCE
AND
TO
PREPARE
THESE
STUDENTS
FOR
CAREERS
NOT
ONLY
IN
THE
IS
OR
IT
GROUPS
IN
INDUSTRY
BUT
ALSO
IN
FUNCTIONAL
AREAS
SUCH
AS
RESEARCH
AND
DEVELOPMENT
MARKETING
MEDIA
LOGISTICS
AND
FINANCE
THE
SECOND
OPTION
LEVERAGES
EXISTING
MS
IS
PROGRAMS
WITH
A
BI
A
CONCENTRATION
THAT
WOULD
SUPPLEMENT
THE
ALREADY
EXISTING
CURRICULUM
IN
IT
DATA
MANAGEMENT
AND
BUSINESS
AND
COMMUNICATION
COURSES
WITH
ADDITIONAL
ANALYTICS
COVERAGE
THIS
OPTION
HAS
BEEN
ADOPTED
BY
A
NUMBER
OF
SCHOOLS
INCLUDING
THE
IS
DEPARTMENTS
AT
CARNEGIE
MELLON
UNIVERSITY
AND
THE
UNIVERSITY
OF
ARIZONA
THIS
OPTION
PROVIDES
BI
A
KNOWLEDGE
AND
SKILLS
FOR
STUDENTS
WHO
WILL
PRIMARILY
FIND
CAREERS
IN
IS
GROUPS
IN
INDUSTRY
FOR
WORKING
IT
PROFESSIONALS
WHO
WISH
TO
EXPAND
INTO
BI
A
A
PART
TIME
MS
OR
CERTIFICATE
PROGRAM
THE
THIRD
OPTION
OFFER
PRACTICAL
AND
VALID
ALTERNATIVES
THESE
CERTIFICATE
PROGRAMS
CAN
BE
DELIVERED
ONLINE
OR
ON
SITE
AND
NEED
TO
PROVIDE
THE
SKILLS
THAT
WILL
COMPLEMENT
THE
CURRENT
IT
OR
BUSINESS
EXPERI
ENCE
OF
IT
PROFESSIONALS
AND
OR
PROVIDE
TECHNICAL
AND
ANALY
TICAL
SKILLS
TO
BUSINESS
PROFESSIONALS
IN
NON
IT
AREAS
ONLINE
PROGRAMS
THAT
ARE
CURRENTLY
AVAILABLE
INCLUDE
NORTHWESTERN
UNIVERSITY
MS
IN
PREDICTIVE
ANALYTICS
AND
STANFORD
UNIVER
SITY
GRADUATE
CERTIFICATE
ON
MINING
BIG
DATA
IN
ADDITION
IS
PROGRAMS
CAN
HELP
DESIGN
A
BI
A
CONCENTRATION
IN
MBA
PROGRAMS
TO
HELP
TRAIN
A
NEW
GENERATION
OF
DATA
AND
ANALYTICS
SAWY
MANAGERS
A
KEY
TO
SUCCESS
FOR
A
BI
A
PROGRAM
IS
TO
INTEGRATE
THE
CONCEPT
OF
LEARNING
BY
DOING
IN
THE
BI
A
CURRICULUM
VIA
HANDS
ON
PROJECTS
INTERNSHIPS
AND
INDUSTRY
GUIDED
PRACTICUM
BIG
DATA
ANALYTICS
REQUIRES
TRIAL
AND
ERROR
AND
EXPERIMEN
TATION
STRONG
RELATIONSHIPS
AND
PARTNERSHIPS
BETWEEN
ACA
DEMIC
PROGRAMS
AND
INDUSTRY
PARTNERS
ARE
CRITICAL
TO
FOSTER
THE
EXPERIENTIAL
LEARNING
ASPECT
OF
THE
BI
A
CURRICULUM
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
AL
INTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
PAPERS
IN
THIS
SPECIAL
ISSUE
THE
IDEA
FOR
THIS
SPECIAL
ISSUE
BEGAN
IN
MAY
WHEN
DETMAR
STRAUB
THE
EDITOR
IN
CHIEF
OF
MIS
QUARTERLY
SOLI
CITED
SUGGESTIONS
FOR
SPECIAL
ISSUES
FROM
THE
EDITORIAL
BOARD
MEMBERS
WE
SUBMITTED
THE
SPECIAL
ISSUE
PROPOSAL
ON
BUSI
NESS
INTELLIGENCE
RESEARCH
IN
AUGUST
WITH
THE
CALL
FOR
PAPERS
APPROVED
AND
DISTRIBUTED
AT
THE
ANNUAL
INTERNA
TIONAL
CONFERENCE
ON
INFORMATION
SYSTEMS
ICIS
IN
DECEM
BER
OF
THAT
YEAR
SUBMISSIONS
TO
THIS
SPECIAL
ISSUE
NEEDED
TO
RELATE
TO
MIS
QUARTERLY
MISSION
WITH
STRONG
MANAGERIAL
ORGANIZATIONAL
AND
SOCIETAL
RELEVANCE
AND
IMPACT
IN
ADDITION
TO
THE
DESIGN
SCIENCE
APPROACH
HEVNER
ET
AL
MARCH
STOREY
RIGOROUS
AND
RELEVANT
BI
RELATED
RESEARCH
USING
MANAGEMENT
SCIENCE
MODELING
OPTIMIZATION
INFORMATION
ECONOMICS
AND
ORGANIZATIONAL
AND
BEHAVIORAL
METHODOLOGIES
CASE
STUDIES
SURVEYS
WAS
ALSO
WELCOMED
A
TOTAL
OF
MANUSCRIPTS
WAS
RECEIVED
BY
OCTOBER
IN
THE
FOLLOWING
MONTHS
SIX
OF
THE
MANUSCRIPTS
WENT
THROUGH
THREE
OR
FOUR
REVIEW
ROUNDS
AND
WERE
THEN
ACCEPTED
FOR
THIS
ISSUE
THE
SIX
PAPERS
ADDRESS
VARIOUS
ASPECTS
OF
THE
BI
A
RESEARCH
FRAMEWORK
PRESENTED
IN
THIS
INTRODUCTION
PAPER
SEE
TABLE
ALL
SIX
PAPERS
ARE
BASED
ON
BI
A
WITH
THREE
ALSO
BASED
ON
BI
A
THE
FIRST
THREE
PAPERS
BY
CHAU
AND
XU
PARK
ET
AL
AND
LAU
ET
AL
FOCUS
ON
BI
A
WITH
APPLICATIONS
ON
E
COMMERCE
AND
MARKET
INTELLIGENCE
USING
TEXT
WEB
AND
NET
WORK
ANALYTICS
IN
THE
NEXT
TWO
PAPERS
BOTH
HU
ET
AL
AND
ABBASI
ET
AL
WORK
IN
THE
CATEGORY
OF
BI
A
WITH
A
FOCUS
ON
SECURITY
BUT
HU
ET
AL
USE
NETWORK
ANALYTICS
WHEREAS
ABBASI
ET
AL
EMPHASIZE
SECURITY
ANALYSIS
AND
DATA
ANALYTICS
FINALLY
SAHOO
ET
AL
ALSO
WORK
IN
BI
A
WITH
DIRECT
APPLI
CATION
TO
E
COMMERCE
AND
MARKET
INTELLIGENCE
USING
WEB
AND
DATA
ANALYTICS
IN
BUSINESS
INTELLIGENCE
IN
BLOGS
UNDERSTANDING
CONSUMER
INTERACTIONS
AND
COMMUNITIES
MICHAEL
CHAU
AND
JENNIFER
XU
RECOGNIZED
THE
POTENTIAL
GOLD
MINE
OF
BLOG
CONTENT
FOR
BUSINESS
INTELLIGENCE
AND
DEVELOPED
A
FRAMEWORK
FOR
GATHERING
BUSINESS
INTELLIGENCE
BY
AUTOMATICALLY
COLLECTING
AND
ANALYZING
BLOG
CONTENT
AND
BLOGGERS
INTERACTION
NET
WORKS
A
SYSTEM
DEVELOPED
USING
THIS
FRAMEWORK
WAS
APPLIED
TO
TWO
CASE
STUDIES
WHICH
REVEALED
NOVEL
PATTERNS
IN
BLOGGER
INTERACTIONS
AND
COMMUNITIES
SUNG
HYUK
PARK
SOON
YOUNG
HUH
WONSEOK
OH
AND
SANG
PIL
HAN
IN
THEIR
PAPER
A
SOCIAL
NETWORK
BASED
INFERENCE
MODEL
FOR
VALIDATING
CUSTOMER
PROFILE
DATA
ARGUE
THAT
BUSI
NESS
INTELLIGENCE
SYSTEMS
ARE
OF
LIMITED
VALUE
WHEN
THEY
DEAL
WITH
INACCURATE
AND
UNRELIABLE
DATA
THE
AUTHORS
PROPOSED
A
SOCIAL
NETWORK
DRIVEN
INFERENCE
FRAMEWORK
TO
DETERMINE
THE
ACCURACY
AND
RELIABILITY
OF
SELF
REPORTED
CUSTOMER
PROFILES
THE
FRAMEWORK
UTILIZED
THE
INDIVIDUALS
SOCIAL
CIRCLES
AND
COMMUNICATION
PATTERNS
WITHIN
THEIR
CIRCLES
TO
CONSTRUCT
THE
SPECIFIC
INFERENCE
AND
VALIDATION
MODEL
A
COMBINATION
OF
METHODS
WAS
USED
INCLUDING
QUERY
PROCESSING
STATISTICAL
INFERENCE
SOCIAL
NETWORK
ANALYSIS
AND
USER
PROFILING
THE
AUTHORS
ANALYZED
OVER
MILLION
ACTUAL
MOBILE
CALL
TRANS
ACTIONS
AND
THEIR
PROPOSED
SOCIAL
NETWORK
BASED
INFERENCE
MODEL
CONSISTENTLY
OUTPERFORMED
THE
ALTERNATIVE
APPROACHES
IN
WEB
ENVIRONMENTAL
SCANNING
AND
ADAPTIVE
DECISION
SUPPORT
FOR
BUSINESS
MERGERS
AND
ACQUISITIONS
RAYMOND
LAU
STEPHEN
LIAO
K
F
WONG
AND
DICKSON
CHIÙ
ANALYZED
COMPANY
MERGERS
AND
ACQUISITIONS
M
A
ONLINE
ENVIRON
MENTAL
SCANNING
WITH
WEB
PROVIDES
TOP
EXECUTIVES
WITH
OPPORTUNITIES
TO
TAP
INTO
COLLECTIVE
WEB
INTELLIGENCE
TO
DEVELOP
BETTER
INSIGHTS
ABOUT
THE
SOCIO
CULTURAL
AND
POLITICAL
ECONOMIC
FACTORS
THAT
CROSS
BORDER
M
AS
FACE
GROUNDED
ON
PORTER
FIVE
FORCES
MODEL
THIS
RESEARCH
DESIGNED
A
DUE
DILIGENCE
SCORECARD
MODEL
THAT
LEVERAGES
COLLECTIVE
WEB
INTELLIGENCE
TO
ENHANCE
M
A
DECISION
MAKING
THE
AUTHORS
ALSO
DEVELOPED
AN
ADAPTIVE
BUSINESS
INTELLIGENCE
BI
SYSTEM
WHICH
THEY
APPLIED
TO
CHINESE
COMPANIES
CROSS
BORDER
M
A
ACTIVITIES
IN
THEIR
PAPER
NETWORK
BASED
MODELING
AND
ANALYSIS
OF
SYSTEMIC
RISK
IN
BANKING
SYSTEMS
DANING
HU
J
LEON
ZHAO
ZHIMIN
HUA
AND
MICHAEL
WONG
ANALYZED
SYSTEMIC
RISK
IN
BANKING
SYSTEMS
BY
TREATING
BANKS
AS
A
NETWORK
LINKED
WITH
FINANCIAL
RELATIONSHIPS
LEADING
TO
A
NETWORK
APPROACH
TO
RISK
MANAGEMENT
NARM
THE
AUTHORS
USED
NARM
TO
ANALYZE
SYSTEMIC
RISK
ATTRIBUTED
TO
EACH
INDIVIDUAL
BANK
VIA
SIMULATION
BASED
ON
REAL
WORLD
DATA
FROM
THE
FEDERAL
DEPOSIT
INSURANCE
CORPORATION
NARM
OFFERED
A
NEW
MEANS
BY
WHICH
CON
TAGIOUS
BANK
FAILURES
COULD
BE
PREDICTED
AND
CAPITAL
INJECTION
PRIORITIES
AT
THE
INDIVIDUAL
BANK
LEVEL
COULD
BE
DETERMINED
IN
THE
WAKE
OF
A
FINANCIAL
CRISIS
A
SIMULATION
STUDY
SHOWED
THAT
UNDER
SIGNIFICANT
MARKET
SHOCKS
THE
INTERBANK
PAYMENT
LINKS
BECAME
MORE
INFLUENTIAL
THAN
THE
CORRELATED
BANK
PORTFOLIO
LINKS
IN
DETERMINING
AN
INDIVIDUAL
BANK
SURVIVAL
AHMED
ABBASI
CONAN
ALBRECHT
ANTHONY
VANCE
AND
JAMES
HANSEN
IN
THEIR
PAPER
METAFRAUD
A
META
LEARNING
FRAME
WORK
FOR
DETECTING
FINANCIAL
FRAUD
EMPLOYED
A
DESIGN
SCIENCE
APPROACH
TO
DEVELOP
METAFRAUD
A
META
LEARNING
FRAMEWORK
FOR
ENHANCED
FINANCIAL
FRAUD
DETECTION
A
SERIES
OF
EXPERIMENTS
WAS
CONDUCTED
ON
THOUSANDS
OF
LEGITIMATE
AND
FRAUDULENT
FIRMS
TO
DEMONSTRATE
THE
EFFECTIVENESS
OF
THE
FRAME
WORK
OVER
EXISTING
BENCHMARK
METHODS
THE
RESEARCH
RESULTS
HAVE
IMPLICATIONS
FOR
COMPLIANCE
OFFICERS
INVESTORS
AUDIT
FIRMS
AND
REGULATORS
THE
PAPER
BY
NACHIKETA
SAHOO
PARAM
VIR
SINGH
AND
TRIDAS
MUKHOPADHYAY
A
HIDDEN
MARKOV
MODEL
FOR
COLLABORATIVE
FILTERING
REPORTS
ON
THE
ANALYSIS
OF
MAKING
PERSONALIZED
RECOMMENDATIONS
WHEN
USER
PREFERENCES
ARE
CHANGING
THE
MIS
QUARTERLY
VOL
NO
DECEMBER
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
CHEN
ET
A
I
INTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
AUTHORS
AND
TITLES
EVOLUTIONS
APPLICATIONS
DATA
ANALYTICS
RESEARCH
IMPACTS
CHAU
AND
XU
BUSINESS
BI
A
ON
MARKET
INTELLIGENCE
USER
GENERATED
TEXT
AND
NETWORK
INCREASED
SALES
INTELLIGENCE
IN
BLOGS
UNDER
SOCIAL
MEDIA
ON
CONSUMERS
AND
CONTENT
EXTRACTED
ANALYTICS
AND
CUSTOMER
STANDING
CONSUMER
INTER
NETWORK
COMMUNITIES
FROM
BLOGS
COMMUNITY
DETECTION
SATISFACTION
ACTIONS
AND
COMMUNITIES
ANALYTICS
NETWORK
VISUALIZATION
PARK
ET
AL
A
SOCIAL
BI
A
MARKET
INTELLIGENCE
SELF
REPORTED
USER
NETWORK
ANALYTICS
PERSONALIZED
NETWORK
BASED
INFERENCE
ON
SOCIAL
IN
PREDICTING
CUS
PROFILES
AND
MOBILE
ANOMALY
DETECTION
RECOMMENDATION
MODEL
FOR
VALIDATING
NETWORK
TOMERS
PROFILES
CALL
RECORDS
PREDICTIVE
ANALYTICS
AND
INCREASED
CUSTOMER
PROFILE
DATA
ANALYSIS
AND
CUSTOMER
STATISTICAL
SATISFACTION
ANALYSIS
LAU
ET
AL
WEB
BI
A
AND
MARKET
INTELLIGENCE
BUSINESS
INFORMATION
TEXT
AND
WEB
ANALYTICS
STRATEGIC
DECISION
ENVIRONMENTAL
SCANNING
AND
ON
ON
ENVIRONMENTAL
EXTRACTED
FROM
SENTIMENT
AND
AFFECT
MAKING
IN
ADAPTIVE
DECISION
SUPPORT
SCORECARDS
SCANNING
INTERNET
AND
ANALYSIS
MERGERS
AND
FOR
BUSINESS
MERGERS
AND
AND
WEB
PROPRIETARY
FINANCIAL
RELATION
MINING
ACQUISITIONS
ACQUISITIONS
ANALYTICS
INFORMATION
HU
ET
AL
NETWORK
BASED
BI
A
ON
SYSTEMIC
RISK
U
BANKING
INFOR
NETWORK
AND
DATA
MONITORING
AND
MODELING
AND
ANALYSIS
OF
STATISTICAL
ANALYSIS
AND
MATION
EXTRACTED
FROM
ANALYTICS
MITIGATING
OF
SYSTEMIC
RISK
IN
BANKING
ANALYSIS
MANAGEMENT
IN
FDIC
AND
FEDERAL
DESCRIPTIVE
AND
CONTAGIOUS
BANK
SYSTEMS
BANKING
SYSTEMS
RESERVE
WIRE
PREDICTIVE
MODELING
FAILURES
NETWORK
DISCRETE
EVENT
SIMULATION
ABBASI
ET
AL
METAFRAUD
A
BI
A
ON
FRAUD
DETECTION
FINANCIAL
RATIOS
AND
DATA
ANALYTICS
FINANCIAL
FRAUD
META
LEARNING
FRAMEWORK
DATA
MINING
ORGANIZATIONAL
AND
CLASSIFICATION
DETECTION
FOR
DETECTING
FINANCIAL
AND
META
INDUSTRIAL
LEVEL
CONTEXT
GENERALIZATION
FRAUD
LEARNING
FEATURES
ADAPTIVE
LEARNING
SAHOO
ET
AL
A
HIDDEN
BI
A
ON
RECOMMENDER
SYS
BLOG
READING
DATA
DATA
AND
WEB
ANALYTICS
PERSONALIZED
MARKOV
MODEL
FOR
COL
STATISTICAL
TERNS
WITH
CHANGING
NETFLIX
PRIZE
DATA
SET
STATISTICAL
DYNAMIC
MODEL
RECOMMENDATIONS
LABORATIVE
FILTERING
ANALYSIS
USER
PREFERENCES
AND
LAST
FM
DATA
COLLABORATIVE
FILTERING
AUTHORS
PROPOSED
A
HIDDEN
MARKOV
MODEL
BASED
ON
WHILE
COLLABO
BI
A
IS
STILL
MATURING
WE
FIND
OURSELVES
POISED
AT
RATIVE
FILTERING
TO
PREDICT
USER
PREFERENCES
AND
MAKE
THE
THE
BRINK
MOST
OF
BI
A
WITH
ALL
THE
ATTENDANT
UNCERTAINTY
THAT
APPROPRIATE
PERSONALIZED
RECOMMENDATIONS
FOR
THE
NEW
PREDICTED
AND
POTENTIALLY
REVOLUTIONARY
TECHNOLOGIES
BRING
PREFERENCE
THE
AUTHORS
EMPLOYED
REAL
WORLD
DATA
SETS
AND
SIMULATIONS
TO
SHOW
THAT
WHEN
USER
PREFERENCES
ARE
CHANGING
THIS
MIS
QUARTERLY
SPECIAL
ISSUE
ON
BUSINESS
INTELLIGENCE
THERE
IS
AN
ADVANTAGE
TO
USING
THE
PROPOSED
ALGORITHM
RESEARCH
OVER
IS
INTENDED
TO
SERVE
IN
PART
AS
A
PLATFORM
AND
EXISTING
ONES
CONVERSATION
GUIDE
FOR
EXAMINING
HOW
THE
IS
DISCIPLINE
CAN
BETTER
SERVE
THE
NEEDS
OF
BUSINESS
DECISION
MAKERS
IN
LIGHT
OF
MATURING
AND
EMERGING
BI
A
TECHNOLOGIES
UBIQUITOUS
BIG
SUMMARY
AND
CONCLUSIONS
DATA
AND
THE
PREDICTED
SHORTAGES
OF
DATA
SAWY
MANAGERS
AND
OF
BUSINESS
PROFESSIONALS
WITH
DEEP
ANALYTICAL
SKILLS
HOW
CAN
ACADEMIC
IS
PROGRAMS
CONTINUE
TO
MEET
THE
NEEDS
OF
THEIR
THROUGH
BI
A
INITIATIVES
BUSINESSES
AND
ORGANIZATIONS
TRADITIONAL
STUDENTS
WHILE
ALSO
REACHING
THE
WORKING
IT
FROM
ALL
SECTORS
BEGAN
TO
GAIN
CRITICAL
INSIGHTS
FROM
PROFESSIONAL
THE
IN
NEED
OF
NEW
ANALYTICAL
SKILLS
A
NEW
VISION
STRUCTURED
DATA
COLLECTED
THROUGH
VARIOUS
ENTERPRISE
FOR
SYSTEMS
IS
MAY
BE
NEEDED
TO
ADDRESS
THIS
AND
OTHER
QUESTIONS
AND
ANALYZED
BY
COMMERCIAL
RELATIONAL
DATABASE
MANAGEMENT
SYSTEMS
OVER
THE
PAST
SEVERAL
YEARS
WEB
INTELLIGENCE
BY
HIGHLIGHTING
WEB
SEVERAL
APPLICATIONS
SUCH
AS
E
COMMERCE
ANALYTICS
WEB
AND
THE
ABILITY
TO
MINE
UNSTRUCTURED
MARKET
USER
INTELLIGENCE
E
GOVERNMENT
HEALTHCARE
AND
SECURITY
GENERATED
CONTENTS
HAVE
USHERED
IN
A
NEW
AND
EXCITING
AND
ERA
BY
OF
MAPPING
IMPORTANT
FACETS
OF
THE
CURRENT
BI
A
BI
A
RESEARCH
LEADING
TO
UNPRECEDENTED
INTELLIGENCE
KNOWLEDGE
ON
LANDSCAPE
WE
HOPE
TO
CONTRIBUTE
TO
FUTURE
SOURCES
CONSUMER
OPINION
CUSTOMER
NEEDS
AND
RECOGNIZING
OF
KNOWLEDGE
NEW
AND
TO
AUGMENT
CURRENT
DISCUSSIONS
ON
THE
BUSINESS
OPPORTUNITIES
NOW
IN
THIS
ERA
OF
BIG
DATA
IMPORTANCE
EVEN
OF
RELEVANT
ACADEMIC
RESEARCH
CHEN
ET
AL
INTRODUCTION
BUSINESS
INTELLIGENCE
RESEARCH
FINALLY
THE
SIX
PAPERS
CHOSEN
FOR
THIS
SPECIAL
ISSUE
ARE
THEM
SELVES
A
MICROCOSM
OF
THE
CURRENT
STATE
OF
BI
A
RESEARCH
THESE
BEST
OF
THE
BEST
RESEARCH
PAPERS
SHOWCASE
HOW
HIGH
QUALITY
ACADEMIC
RESEARCH
CAN
ADDRESS
REAL
WORLD
PROBLEMS
AND
CONTRIBUTE
SOLUTIONS
THAT
ARE
RELEVANT
AND
LONG
LASTING
EXACTLY
THE
CHALLENGE
THAT
OUR
DISCIPLINE
CONTINUES
TO
FACE
LOW
COST
RANGE
SENSORS
ARE
AN
ATTRACTIVE
ALTERNATIVE
TO
EXPENSIVE
LASER
SCANNERS
IN
APPLICATION
AREAS
SUCH
AS
INDOOR
MAPPING
SURVEILLANCE
ROBOTICS
AND
FORENSICS
A
RECENT
DEVELOPMENT
IN
CONSUMER
GRADE
RANGE
SENSING
TECHNOLOGY
IS
MICROSOFT
KINECT
SENSOR
KINECT
WAS
PRIMARILY
DESIGNED
FOR
NATURAL
INTERACTION
IN
A
COMPUTER
GAME
ENVIRONMENT
HOWEVER
THE
CHARACTERISTICS
OF
THE
DATA
CAPTURED
BY
SENSORS
KINECT
HAVE
ATTRACTED
THE
ATTENTION
OF
RESEARCHERS
FROM
OTHER
FIELDS
INCLUDING
MAPPING
AND
MODELING
A
DEMONSTRATION
OF
THE
POTENTIAL
OF
KINECT
FOR
MODELING
OF
INDOOR
ENVIRONMENTS
CAN
BE
SEEN
IN
THE
WORK
OF
HENRY
ET
AL
THE
KINECT
SENSOR
CAPTURES
DEPTH
AND
COLOR
IMAGES
SIMULTANEOUSLY
AT
A
FRAME
RATE
OF
UP
TO
FPS
THE
INTEGRATION
OF
DEPTH
AND
COLOR
DATA
RESULTS
IN
A
COLORED
POINT
CLOUD
THAT
CONTAINS
ABOUT
POINTS
IN
EVERY
FRAME
BY
REGISTERING
THE
CONSECUTIVE
DEPTH
IMAGES
ONE
CAN
OBTAIN
AN
INCREASED
POINT
DENSITY
BUT
ALSO
CREATE
A
COMPLETE
POINT
CLOUD
OF
AN
INDOOR
ENVIRONMENT
POSSIBLY
IN
REAL
TIME
TO
REALIZE
THE
FULL
POTENTIAL
OF
THE
SENSOR
FOR
MAPPING
APPLICATIONS
AN
ANALYSIS
OF
THE
SYSTEMATIC
AND
RANDOM
ERRORS
OF
THE
DATA
IS
NECESSARY
THE
CORRECTION
OF
SYSTEMATIC
ERRORS
IS
A
PREREQUISITE
FOR
THE
ALIGNMENT
OF
THE
DEPTH
AND
COLOR
DATA
AND
RELIES
ON
THE
IDENTIFICATION
OF
THE
MATHEMATICAL
MODEL
OF
DEPTH
MEASUREMENT
AND
THE
CALIBRATION
PARAMETERS
INVOLVED
THE
CHARACTERIZATION
OF
RANDOM
ERRORS
IS
IMPORTANT
AND
USEFUL
IN
FURTHER
PROCESSING
OF
THE
DEPTH
DATA
FOR
EXAMPLE
IN
WEIGHTING
THE
POINT
PAIRS
OR
PLANES
IN
THE
REGISTRATION
ALGORITHM
SINCE
KINECT
IS
A
RECENT
DEVELOPMENT
IT
WAS
RELEASED
IN
NOVEMBER
LITTLE
INFORMATION
ABOUT
THE
GEOMETRIC
QUALITY
OF
ITS
DATA
IS
AVAILABLE
GEOMETRIC
INVESTIGATION
AND
CALIBRATION
OF
SIMILAR
RANGE
SENSORS
SUCH
AS
THE
SWISSRANGER
AND
PMD
HAS
BEEN
THE
TOPIC
OF
SEVERAL
PREVIOUS
WORKS
HOWEVER
THESE
SENSORS
ARE
BASED
ON
THE
TIME
OF
FLIGHT
MEASUREMENT
PRINCIPLE
AND
ARE
FUNDAMENTALLY
DIFFERENT
FROM
THE
KINECT
WHICH
IS
A
TRIANGULATION
SENSOR
IN
THIS
PAPER
OUR
PRIMARY
FOCUS
IS
ON
THE
DEPTH
DATA
THE
OBJECTIVE
OF
THE
PAPER
IS
TO
PROVIDE
AN
INSIGHT
INTO
THE
GEOMETRIC
QUALITY
OF
THE
KINECT
DEPTH
DATA
THROUGH
CALIBRATION
AND
AN
ANALYSIS
OF
THE
ACCURACY
AND
DENSITY
OF
THE
POINTS
WE
PRESENT
A
MATHEMATICAL
MODEL
FOR
OBTAINING
OBJECT
COORDINATES
FROM
THE
RAW
IMAGE
MEASUREMENTS
AND
DISCUSS
THE
CALIBRATION
PARAMETERS
INVOLVED
IN
THE
MODEL
FURTHER
A
THEORETICAL
RANDOM
ERROR
MODEL
IS
DERIVED
AND
VERIFIED
BY
AN
EXPERIMENT
THE
PAPER
PROCEEDS
WITH
A
DESCRIPTION
OF
THE
DEPTH
MEASUREMENT
PRINCIPLE
THE
MATHEMATICAL
MODEL
AND
THE
CALIBRATION
PARAMETERS
IN
SECTION
IN
SECTION
THE
ERROR
SOURCES
ARE
DISCUSSED
AND
A
THEORETICAL
ERROR
MODEL
IS
PRESENTED
IN
SECTION
THE
MODELS
ARE
VERIFIED
THROUGH
A
NUMBER
OF
EXPERIMENTS
AND
THE
RESULTS
ARE
DISCUSSED
THE
PAPER
CONCLUDES
WITH
SOME
REMARKS
IN
SECTION
DEPTH
MEASUREMENT
BY
TRIANGULATION
THE
KINECT
SENSOR
CONSISTS
OF
AN
INFRARED
LASER
EMITTER
AN
INFRARED
CAMERA
AND
AN
RGB
CAMERA
THE
INVENTORS
DESCRIBE
THE
MEASUREMENT
OF
DEPTH
AS
A
TRIANGULATION
PROCESS
THE
LASER
SOURCE
EMITS
A
SINGLE
BEAM
WHICH
IS
SPLIT
INTO
MULTIPLE
BEAMS
BY
A
DIFFRACTION
GRATING
TO
CREATE
A
CONSTANT
PATTERN
OF
SPECKLES
PROJECTED
ONTO
THE
SCENE
THIS
PATTERN
IS
CAPTURED
BY
THE
INFRARED
CAMERA
AND
IS
CORRELATED
AGAINST
A
REFERENCE
PATTERN
THE
REFERENCE
PATTERN
IS
OBTAINED
BY
CAPTURING
A
PLANE
AT
A
KNOWN
DISTANCE
FROM
THE
SENSOR
AND
IS
STORED
IN
THE
MEMORY
OF
THE
SENSOR
WHEN
A
SPECKLE
IS
PROJECTED
ON
AN
OBJECT
WHOSE
DISTANCE
TO
THE
SENSOR
IS
SMALLER
OR
LARGER
THAN
THAT
OF
THE
REFERENCE
PLANE
THE
POSITION
OF
THE
SPECKLE
IN
THE
INFRARED
IMAGE
WILL
BE
SHIFTED
IN
THE
DIRECTION
OF
THE
BASELINE
BETWEEN
THE
LASER
PROJECTOR
AND
THE
PERSPECTIVE
CENTER
OF
THE
INFRARED
CAMERA
THESE
SHIFTS
ARE
MEASURED
FOR
ALL
SPECKLES
BY
A
SIMPLE
IMAGE
CORRELATION
PROCEDURE
WHICH
YIELDS
A
DISPARITY
IMAGE
FOR
EACH
PIXEL
THE
DISTANCE
TO
THE
SENSOR
CAN
THEN
BE
RETRIEVED
FROM
THE
CORRESPONDING
DISPARITY
AS
DESCRIBED
IN
THE
NEXT
SECTION
FIGURE
ILLUSTRATES
THE
DEPTH
MEASUREMENT
FROM
THE
SPECKLE
PATTERN
SENSORS
FIGURE
A
INFRARED
IMAGE
OF
THE
PATTERN
OF
SPECKLES
PROJECTED
ON
A
SAMPLE
SCENE
B
THE
RESULTING
DEPTH
IMAGE
MATHEMATICAL
MODEL
FIGURE
ILLUSTRATES
THE
RELATION
BETWEEN
THE
DISTANCE
OF
AN
OBJECT
POINT
K
TO
THE
SENSOR
RELATIVE
TO
A
REFERENCE
PLANE
AND
THE
MEASURED
DISPARITY
D
TO
EXPRESS
THE
COORDINATES
OF
THE
OBJECT
POINTS
WE
CONSIDER
A
DEPTH
COORDINATE
SYSTEM
WITH
ITS
ORIGIN
AT
THE
PERSPECTIVE
CENTER
OF
THE
INFRARED
CAMERA
THE
Z
AXIS
IS
ORTHOGONAL
TO
THE
IMAGE
PLANE
TOWARDS
THE
OBJECT
THE
X
AXIS
PERPENDICULAR
TO
THE
Z
AXIS
IN
THE
DIRECTION
OF
THE
BASELINE
B
BETWEEN
THE
INFRARED
CAMERA
CENTER
AND
THE
LASER
PROJECTOR
AND
THE
Y
AXIS
ORTHOGONAL
TO
X
AND
Z
MAKING
A
RIGHT
HANDED
COORDINATE
SYSTEM
FIGURE
RELATION
BETWEEN
RELATIVE
DEPTH
AND
MEASURED
DISPARITY
ASSUME
THAT
AN
OBJECT
IS
ON
THE
REFERENCE
PLANE
AT
A
DISTANCE
Z
O
TO
THE
SENSOR
AND
A
SPECKLE
ON
THE
OBJECT
IS
CAPTURED
ON
THE
IMAGE
PLANE
OF
THE
INFRARED
CAMERA
IF
THE
OBJECT
IS
SHIFTED
CLOSER
TO
OR
FURTHER
AWAY
FROM
THE
SENSOR
THE
LOCATION
OF
THE
SPECKLE
ON
THE
IMAGE
PLANE
WILL
BE
DISPLACED
IN
THE
X
A
B
O
K
D
C
IR
CAMERA
L
LASER
PROJECTOR
B
REFERENCE
PLANE
OBJECT
PLANE
Z
O
Z
K
F
D
Z
X
SENSORS
DIRECTION
THIS
IS
MEASURED
IN
IMAGE
SPACE
AS
DISPARITY
D
CORRESPONDING
TO
A
POINT
K
IN
THE
OBJECT
SPACE
FROM
THE
SIMILARITY
OF
TRIANGLES
WE
HAVE
D
B
ZZ
O
Z
O
K
AND
D
F
D
K
WHERE
Z
K
Z
DENOTES
THE
DISTANCE
DEPTH
OF
THE
POINT
K
IN
OBJECT
SPACE
B
IS
THE
BASE
LENGTH
F
IS
THE
FOCAL
LENGTH
OF
THE
INFRARED
CAMERA
D
IS
THE
DISPLACEMENT
OF
THE
POINT
K
IN
OBJECT
SPACE
AND
D
IS
THE
OBSERVED
DISPARITY
IN
IMAGE
SPACE
SUBSTITUTING
D
FROM
EQUATION
INTO
EQUATION
AND
EXPRESSING
Z
K
IN
TERMS
OF
THE
OTHER
VARIABLES
YIELDS
Z
K
Z
O
Z
O
FB
D
EQUATION
IS
THE
BASIC
MATHEMATICAL
MODEL
FOR
THE
DERIVATION
OF
DEPTH
FROM
THE
OBSERVED
DISPARITY
PROVIDED
THAT
THE
CONSTANT
PARAMETERS
Z
O
F
AND
B
CAN
BE
DETERMINED
BY
CALIBRATION
THE
Z
COORDINATE
OF
A
POINT
TOGETHER
WITH
F
DEFINES
THE
IMAGING
SCALE
FOR
THAT
POINT
THE
PLANIMETRIC
OBJECT
COORDINATES
OF
EACH
POINT
CAN
THEN
BE
CALCULATED
FROM
ITS
IMAGE
COORDINATES
AND
THE
SCALE
X
Z
F
XXX
Δ
F
YYY
K
O
WHERE
X
K
K
K
K
O
Y
K
Z
K
Δ
AND
Y
K
ARE
THE
IMAGE
COORDINATES
OF
THE
POINT
X
O
AND
Y
O
ARE
THE
COORDINATES
OF
THE
PRINCIPAL
POINT
AND
ΔX
AND
ΔY
ARE
CORRECTIONS
FOR
LENS
DISTORTION
FOR
WHICH
SEVERAL
MODELS
WITH
DIFFERENT
COEFFICIENTS
EXIST
SEE
FOR
INSTANCE
NOTE
THAT
HERE
WE
ASSUME
THAT
THE
IMAGE
COORDINATE
SYSTEM
IS
PARALLEL
WITH
THE
BASE
LINE
AND
THUS
WITH
THE
DEPTH
COORDINATE
SYSTEM
CALIBRATION
AS
MENTIONED
ABOVE
THE
CALIBRATION
PARAMETERS
INVOLVED
IN
THE
MATHEMATICAL
MODEL
FOR
THE
CALCULATION
OF
COORDINATES
FROM
THE
RAW
IMAGE
MEASUREMENTS
INCLUDE
FOCAL
LENGTH
F
PRINCIPAL
POINT
OFFSETS
X
O
Y
O
LENS
DISTORTION
COEFFICIENTS
IN
ΔX
ΔY
BASE
LENGTH
B
DISTANCE
OF
THE
REFERENCE
PATTERN
Z
O
IN
ADDITION
WE
MAY
CONSIDER
A
MISALIGNMENT
ANGLE
BETWEEN
THE
X
AXIS
OF
THE
IMAGE
COORDINATE
SYSTEM
AND
THE
BASE
LINE
HOWEVER
THIS
DOES
NOT
AFFECT
THE
CALCULATION
OF
THE
OBJECT
COORDINATES
IF
WE
DEFINE
THE
DEPTH
COORDINATE
SYSTEM
TO
BE
PARALLEL
WITH
THE
IMAGE
COORDINATE
SYSTEM
INSTEAD
OF
THE
BASE
LINE
WE
MAY
THEREFORE
IGNORE
THIS
MISALIGNMENT
ANGLE
SENSORS
FROM
THE
CALIBRATION
PARAMETERS
LISTED
ABOVE
THE
FIRST
THREE
CAN
BE
DETERMINED
BY
A
STANDARD
CALIBRATION
OF
THE
INFRARED
CAMERA
IN
PRACTICE
HOWEVER
THE
CALIBRATION
PARAMETERS
OF
THE
INFRARED
CAMERA
DO
NOT
DIRECTLY
CORRESPOND
TO
THE
DISPARITY
IMAGES
BECAUSE
THE
SIZE
OF
THE
DISPARITY
IMAGES
COMPUTED
BY
THE
INTERNAL
PROCESSOR
OF
KINECT
IS
PIXELS
WHICH
IS
SMALLER
THAN
THE
ACTUAL
SIZE
OF
THE
INFRARED
SENSOR
PIXELS
DUE
TO
THE
BANDWIDTH
LIMITATION
OF
THE
USB
CONNECTION
THE
IMAGES
OF
THE
INFRARED
SENSOR
ARE
ALSO
STREAMED
IN
A
REDUCED
SIZE
OF
PIXELS
CORRESPONDING
TO
THE
DISPARITY
IMAGES
THAT
IS
THE
IMAGES
ARE
RESIZED
AND
CROPPED
THEREFORE
A
CONVENIENT
APPROACH
TO
THE
CALIBRATION
IS
TO
ESTIMATE
THE
CALIBRATION
PARAMETERS
FROM
THE
REDUCED
INFRARED
IMAGES
INSTEAD
OF
THE
ACTUAL
SENSOR
PROVIDED
THAT
A
PIXEL
TO
PIXEL
CORRESPONDENCE
EXISTS
BETWEEN
THE
REDUCED
INFRARED
IMAGES
AND
THE
DISPARITY
IMAGES
BY
EXAMINING
THE
IMAGES
WE
OBSERVED
A
SHIFT
OF
PIXELS
IN
THE
X
DIRECTION
BETWEEN
THE
DISPARITY
AND
INFRARED
IMAGES
SUPPOSEDLY
IMPLYING
THE
APPLICATION
OF
A
PIXEL
WIDE
CORRELATION
WINDOW
FOR
CALCULATING
DISPARITIES
ONCE
THIS
SHIFT
IS
CORRECTED
FOR
THE
CALIBRATION
PARAMETERS
ESTIMATED
FROM
THE
REDUCED
INFRARED
IMAGES
CAN
BE
APPLIED
TO
THE
MEASUREMENTS
IN
THE
DISPARITY
IMAGES
THE
DETERMINATION
OF
THE
BASE
LENGTH
AND
THE
REFERENCE
DISTANCE
IS
MORE
COMPLICATED
FOR
THE
FOLLOWING
REASON
IN
PRACTICE
THE
RAW
DISPARITY
MEASUREMENTS
ARE
NORMALIZED
AND
QUANTIZED
BETWEEN
AND
AND
STREAMED
AS
BIT
INTEGERS
THEREFORE
IN
EQUATION
D
SHOULD
BE
REPLACED
WITH
MD
N
WITH
D
THE
NORMALIZED
DISPARITY
AND
M
N
THE
PARAMETERS
OF
A
SUPPOSEDLY
LINEAR
NORMALIZATION
IN
FACT
DENORMALIZATION
INCLUDING
THESE
IN
EQUATION
AND
INVERTING
IT
YIELDS
Z
K
FB
N
M
FB
ZD
O
EQUATION
EXPRESSES
A
LINEAR
RELATION
BETWEEN
THE
INVERSE
DEPTH
OF
A
POINT
AND
ITS
CORRESPONDING
NORMALIZED
DISPARITY
BY
OBSERVING
THE
NORMALIZED
DISPARITY
FOR
A
NUMBER
OF
OBJECT
POINTS
OR
PLANES
AT
KNOWN
DISTANCES
TO
THE
SENSOR
THE
COEFFICIENTS
OF
THIS
LINEAR
RELATION
CAN
BE
ESTIMATED
IN
A
LEAST
SQUARES
FASHION
HOWEVER
THE
INCLUSION
OF
THE
NORMALIZATION
PARAMETERS
DOES
NOT
ALLOW
DETERMINING
B
AND
Z
O
SEPARATELY
THE
CALIBRATION
PARAMETERS
MENTIONED
ABOVE
COMPLETELY
DEFINE
THE
RELATION
BETWEEN
THE
IMAGE
MEASUREMENTS
X
Y
D
AND
OBJECT
COORDINATES
X
Y
Z
OF
EACH
POINT
ONCE
ESTIMATED
THEY
ENABLE
THE
GENERATION
OF
A
POINT
CLOUD
FROM
EACH
DISPARITY
IMAGE
NOTE
THAT
THESE
PARAMETERS
DO
NOT
DESCRIBE
THE
INTERNAL
GEOMETRY
OF
THE
INFRARED
CAMERA
AS
THEY
ARE
ESTIMATED
FROM
THE
RESIZED
AND
CROPPED
IMAGES
ADDING
COLOR
TO
THE
POINT
CLOUD
THE
INTEGRATION
OF
THE
DEPTH
AND
COLOR
DATA
REQUIRES
THE
ORIENTATION
OF
THE
RGB
CAMERA
RELATIVE
TO
THE
DEPTH
COORDINATE
SYSTEM
SINCE
WE
DEFINED
THE
DEPTH
COORDINATE
SYSTEM
AT
THE
PERSPECTIVE
CENTER
OF
THE
INFRARED
CAMERA
WE
CAN
ESTIMATE
THE
ORIENTATION
PARAMETERS
BY
A
STEREO
CALIBRATION
OF
THE
TWO
CAMERAS
THE
PARAMETERS
TO
BE
ESTIMATED
INCLUDE
THREE
ROTATIONS
BETWEEN
THE
CAMERA
COORDINATE
SYSTEM
OF
THE
RGB
CAMERA
AND
THAT
OF
THE
INFRARED
CAMERA
AND
THE
POSITION
OF
THE
PERSPECTIVE
CENTER
OF
THE
RGB
CAMERA
IN
THE
COORDINATE
SYSTEM
OF
THE
INFRARED
CAMERA
IN
ADDITION
THE
INTERIOR
ORIENTATION
PARAMETERS
OF
THE
RGB
CAMERA
I
E
THE
FOCAL
LENGTH
PRINCIPAL
POINT
OFFSETS
AND
THE
LENS
DISTORTION
PARAMETERS
MUST
BE
ESTIMATED
SENSORS
IN
PRACTICE
THE
IMAGES
OF
THE
RGB
CAMERA
ARE
ALSO
STREAMED
IN
A
REDUCED
SIZE
THEREFORE
IT
IS
MORE
CONVENIENT
TO
PERFORM
A
STEREO
CALIBRATION
OF
THE
REDUCED
IMAGES
INSTEAD
OF
THE
PHYSICAL
CAMERAS
THE
RESULTING
PARAMETERS
DESCRIBE
THE
RELATION
BETWEEN
THE
COORDINATES
OF
EACH
POINT
AND
ITS
CORRESPONDING
PIXEL
COORDINATES
IN
THE
REDUCED
RGB
IMAGE
ONCE
THESE
PARAMETERS
ARE
ESTIMATED
WE
CAN
ADD
COLOR
TO
THE
POINT
CLOUD
BY
PROJECTING
EACH
POINT
TO
THE
RGB
IMAGE
AND
INTERPOLATING
THE
COLOR
DEPTH
ACCURACY
AND
RESOLUTION
ACCURACY
AND
POINT
DENSITY
ARE
TWO
IMPORTANT
MEASURES
FOR
EVALUATING
THE
QUALITY
OF
A
POINT
CLOUD
IN
THE
FOLLOWING
SECTIONS
FACTORS
INFLUENCING
THE
ACCURACY
AND
DENSITY
OF
KINECT
DATA
ARE
DISCUSSED
AND
A
THEORETICAL
RANDOM
ERROR
MODEL
IS
PRESENTED
ERROR
SOURCES
ERROR
AND
IMPERFECTION
IN
THE
KINECT
DATA
MAY
ORIGINATE
FROM
THREE
MAIN
SOURCES
THE
SENSOR
MEASUREMENT
SETUP
PROPERTIES
OF
THE
OBJECT
SURFACE
THE
SENSOR
ERRORS
FOR
A
PROPERLY
FUNCTIONING
DEVICE
MAINLY
REFER
TO
INADEQUATE
CALIBRATION
AND
INACCURATE
MEASUREMENT
OF
DISPARITIES
INADEQUATE
CALIBRATION
AND
OR
ERROR
IN
THE
ESTIMATION
OF
THE
CALIBRATION
PARAMETERS
LEAD
TO
SYSTEMATIC
ERROR
IN
THE
OBJECT
COORDINATES
OF
INDIVIDUAL
POINTS
SUCH
SYSTEMATIC
ERRORS
CAN
BE
ELIMINATED
BY
A
PROPER
CALIBRATION
AS
DESCRIBED
IN
THE
PREVIOUS
SECTION
INACCURATE
MEASUREMENT
OF
DISPARITIES
WITHIN
THE
CORRELATION
ALGORITHM
AND
PARTICULARLY
THE
QUANTIZATION
OF
THE
DISPARITIES
ALSO
INFLUENCE
THE
ACCURACY
OF
INDIVIDUAL
POINTS
ERRORS
CAUSED
BY
THE
MEASUREMENT
SETUP
ARE
MAINLY
RELATED
TO
THE
LIGHTING
CONDITION
AND
THE
IMAGING
GEOMETRY
THE
LIGHTING
CONDITION
INFLUENCES
THE
CORRELATION
AND
MEASUREMENT
OF
DISPARITIES
IN
STRONG
LIGHT
THE
LASER
SPECKLES
APPEAR
IN
LOW
CONTRAST
IN
THE
INFRARED
IMAGE
WHICH
CAN
LEAD
TO
OUTLIERS
OR
GAP
IN
THE
RESULTING
POINT
CLOUD
THE
IMAGING
GEOMETRY
INCLUDES
THE
DISTANCE
TO
THE
OBJECT
AND
THE
ORIENTATION
OF
THE
OBJECT
SURFACE
RELATIVE
TO
THE
SENSOR
THE
OPERATING
RANGE
OF
THE
SENSOR
IS
BETWEEN
M
TO
M
ACCORDING
TO
THE
SPECIFICATIONS
AND
AS
WE
WILL
SEE
IN
THE
FOLLOWING
SECTION
THE
RANDOM
ERROR
OF
DEPTH
MEASUREMENT
INCREASES
WITH
INCREASING
DISTANCE
TO
THE
SENSOR
ALSO
DEPENDING
ON
THE
IMAGING
GEOMETRY
PARTS
OF
THE
SCENE
MAY
BE
OCCLUDED
OR
SHADOWED
IN
FIGURE
THE
RIGHT
SIDE
OF
THE
BOX
IS
OCCLUDED
AS
IT
CANNOT
BE
SEEN
BY
THE
INFRARED
CAMERA
THOUGH
IT
MAY
HAVE
BEEN
ILLUMINATED
BY
THE
LASER
PATTERN
THE
LEFT
SIDE
OF
THE
BOX
IS
SHADOWED
BECAUSE
IT
IS
NOT
ILLUMINATED
BY
THE
LASER
BUT
IS
CAPTURED
IN
THE
INFRARED
IMAGE
BOTH
THE
OCCLUDED
AREAS
AND
SHADOWS
APPEAR
AS
GAPS
IN
THE
POINT
CLOUD
THE
PROPERTIES
OF
THE
OBJECT
SURFACE
ALSO
IMPACT
THE
MEASUREMENT
OF
POINTS
AS
IT
CAN
BE
SEEN
IN
FIGURE
SMOOTH
AND
SHINY
SURFACES
THAT
APPEAR
OVEREXPOSED
IN
THE
INFRARED
IMAGE
THE
LOWER
PART
OF
THE
BOX
IMPEDE
THE
MEASUREMENT
OF
DISPARITIES
AND
RESULT
IN
A
GAP
IN
THE
POINT
CLOUD
SENSORS
THEORETICAL
RANDOM
ERROR
MODEL
ASSUMING
THAT
IN
EQUATION
THE
CALIBRATION
PARAMETERS
ARE
DETERMINED
ACCURATELY
AND
THAT
D
IS
A
RANDOM
VARIABLE
WITH
A
NORMAL
DISTRIBUTION
WE
CAN
PROPAGATE
THE
VARIANCE
OF
THE
DISPARITY
MEASUREMENT
TO
OBTAIN
THE
VARIANCE
OF
THE
DEPTH
MEASUREMENT
AS
FOLLOWS
Σ
Z
Z
D
Σ
D
AFTER
SIMPLIFICATION
THIS
YIELDS
THE
FOLLOWING
EXPRESSION
FOR
THE
STANDARD
DEVIATION
OF
DEPTH
Σ
M
Σ
WITH
Σ
D
Z
FB
Z
D
AND
Σ
Z
RESPECTIVELY
THE
STANDARD
DEVIATION
OF
THE
MEASURED
NORMALIZED
DISPARITY
AND
THE
STANDARD
DEVIATION
OF
THE
CALCULATED
DEPTH
EQUATION
BASICALLY
EXPRESSES
THAT
THE
RANDOM
ERROR
OF
DEPTH
MEASUREMENT
IS
PROPORTIONAL
TO
THE
SQUARE
DISTANCE
FROM
THE
SENSOR
TO
THE
OBJECT
SINCE
DEPTH
IS
INVOLVED
IN
THE
CALCULATION
OF
THE
PLANIMETRIC
COORDINATES
SEE
EQUATION
WE
EXPECT
THE
ERROR
IN
X
AND
Y
TO
BE
ALSO
A
SECOND
ORDER
FUNCTION
OF
DEPTH
BY
PROPAGATING
THE
ERRORS
IN
EQUATION
AND
ASSUMING
THAT
THE
RANDOM
ERROR
OF
IMAGE
COORDINATES
X
Y
CAN
BE
IGNORED
WE
OBTAIN
THE
RANDOM
ERROR
OF
X
AND
Y
Σ
BF
MX
Z
Σ
Σ
Y
Σ
D
DEPTH
RESOLUTION
AND
POINT
DENSITY
THE
RESOLUTION
OF
THE
INFRARED
CAMERA
OR
MORE
PRECISELY
THE
PIXEL
SIZE
OF
THE
DISPARITY
IMAGE
DETERMINES
THE
POINT
SPACING
OF
THE
DEPTH
DATA
ON
THE
XY
PLANE
PERPENDICULAR
TO
CAMERA
AXIS
SINCE
EACH
DEPTH
IMAGE
CONTAINS
A
CONSTANT
PIXELS
THE
POINT
DENSITY
WILL
DECREASE
WITH
INCREASING
DISTANCE
OF
THE
OBJECT
SURFACE
FROM
THE
SENSOR
CONSIDERING
THE
POINT
DENSITY
AS
THE
NUMBER
OF
POINTS
PER
UNIT
AREA
WHILE
THE
NUMBER
OF
POINTS
REMAINS
CONSTANT
THE
AREA
IS
PROPORTIONAL
TO
THE
SQUARE
DISTANCE
FROM
THE
SENSOR
THUS
THE
POINT
DENSITY
ON
THE
XY
PLANE
IS
INVERSELY
PROPORTIONAL
TO
SQUARED
DISTANCE
FROM
THE
SENSOR
THE
DEPTH
RESOLUTION
REFERS
TO
THE
MINIMUM
DEPTH
DIFFERENCE
THAT
CAN
BE
MEASURED
AND
IS
DETERMINED
BY
THE
NUMBER
OF
BITS
PER
PIXEL
USED
TO
STORE
THE
DISPARITY
MEASUREMENTS
THE
KINECT
DISPARITY
MEASUREMENTS
ARE
STORED
AS
BIT
INTEGERS
WHERE
ONE
BIT
IS
RESERVED
TO
MARK
THE
PIXELS
FOR
WHICH
NO
DISPARITY
IS
MEASURED
SO
CALLED
NO
DATA
THUS
A
DISPARITY
IMAGE
CONTAINS
LEVELS
OF
DISPARITY
SINCE
DEPTH
IS
INVERSELY
PROPORTIONAL
TO
DISPARITY
THE
RESOLUTION
OF
DEPTH
IS
ALSO
INVERSELY
RELATED
TO
THE
LEVELS
OF
DISPARITY
LET
Z
D
DENOTE
DEPTH
AS
A
FUNCTION
OF
NORMALIZED
DISPARITY
D
THEN
DEPTH
RESOLUTION
IS
SIMPLY
THE
DEPTH
DIFFERENCE
CORRESPONDING
TO
TWO
SUCCESSIVE
LEVELS
OF
DISPARITY
I
E
Δ
Z
X
D
MY
BF
Z
D
Z
D
Z
D
AND
AS
WE
LEARNED
THE
DIFFERENTIAL
YIELDS
Z
M
FB
Z
SENSORS
THUS
THE
DEPTH
RESOLUTION
IS
ALSO
A
QUADRATIC
FUNCTION
OF
DEPTH
AND
DECREASES
WITH
INCREASING
DISTANCE
FROM
THE
SENSOR
EXPERIMENTS
AND
RESULTS
EXPERIMENTS
WERE
CARRIED
OUT
TO
FIRST
DETERMINE
THE
CALIBRATION
PARAMETERS
OF
THE
SENSOR
AND
THEN
INVESTIGATE
THE
SYSTEMATIC
AND
RANDOM
ERRORS
IN
THE
DEPTH
DATA
THE
FOLLOWING
SECTIONS
DESCRIBE
THE
TESTS
AND
DISCUSS
THE
RESULTS
CALIBRATION
RESULTS
A
STANDARD
CAMERA
CALIBRATION
WAS
PERFORMED
USING
THE
REDUCED
IMAGES
OF
BOTH
THE
INFRARED
CAMERA
AND
THE
RGB
CAMERA
TO
ESTIMATE
THE
CALIBRATION
PARAMETERS
IN
THE
PHOTOMODELER
SOFTWARE
A
TOTAL
OF
EIGHT
IMAGES
OF
A
TARGET
PATTERN
WERE
TAKEN
BY
BOTH
CAMERAS
FROM
DIFFERENT
ANGLES
TO
AVOID
THE
DISTURBANCE
OF
THE
LASER
SPECKLES
IN
THE
INFRARED
IMAGES
THE
APERTURE
OF
THE
LASER
EMITTER
WAS
COVERED
BY
A
PIECE
OF
OPAQUE
TAPE
TO
MODEL
THE
LENS
DISTORTION
WE
USED
THE
WELL
KNOWN
MODEL
OF
BROWN
WITH
THREE
RADIAL
DISTORTION
PARAMETERS
AND
TWO
DECENTERING
PARAMETERS
THE
CALIBRATION
WAS
FIRST
PERFORMED
WITH
ALL
LENS
DISTORTION
PARAMETERS
AS
UNKNOWNS
THEN
THOSE
PARAMETERS
WHOSE
STANDARD
DEVIATION
WAS
LARGE
COMPARED
TO
THE
ESTIMATED
PARAMETER
VALUE
WERE
REMOVED
FROM
THE
ESTIMATION
MODEL
AND
THE
REMAINING
PARAMETERS
WERE
ESTIMATED
AGAIN
AS
A
RESULT
PARAMETER
WAS
EXCLUDED
FROM
THE
PARAMETER
SETS
OF
BOTH
CAMERAS
AND
WAS
EXCLUDED
FROM
THE
PARAMETER
SET
OF
THE
RGB
CAMERA
TABLE
SUMMARIZES
THE
RESULTS
OF
THE
CALIBRATION
PROCEDURE
THE
OVERALL
CALIBRATION
ACCURACY
AS
THE
RMS
OF
POINT
MARKING
RESIDUALS
IN
IMAGE
SPACE
WAS
PIXELS
FOR
THE
IR
IMAGES
AND
PIXELS
FOR
THE
RGB
IMAGES
IN
THE
PARAMETERS
OF
THE
RGB
IMAGES
NOTICE
THE
VERY
LARGE
PRINCIPAL
POINT
OFFSET
Y
O
OF
MM
CORRESPONDING
TO
PIXELS
SEE
ALSO
FIGURE
B
THIS
VALUE
IS
CLOSE
TO
PIXELS
WHICH
IS
THE
OFFSET
WE
WOULD
EXPECT
IF
A
REDUCED
IMAGE
WAS
OBTAINED
BY
RESIZING
A
FULL
RESOLUTION
IMAGE
TO
ONE
HALF
AND
CROPPING
IT
AT
THE
TOP
THE
INFRARED
IMAGES
HOWEVER
DO
NOT
HAVE
LARGE
PRINCIPAL
POINT
OFFSETS
MEANING
THAT
THEY
WERE
CROPPED
AT
THE
CENTER
THE
REASON
FOR
THIS
APPARENTLY
INCONSISTENT
CROPPING
AND
THE
LARGE
Y
O
IN
THE
RGB
IMAGES
IS
NOT
KNOWN
TO
THE
AUTHORS
TABLE
CALIBRATION
PARAMETERS
ESTIMATED
FOR
THE
INFRARED
AND
RGB
IMAGES
CALIBRATION
PARAMETER
IR
IMAGES
RGB
IMAGES
FOCAL
LENGTH
F
MM
MM
PRINCIPAL
POINT
OFFSET
X
O
MM
MM
Y
O
MM
MM
FRAME
DIMENSION
W
MM
MM
H
MM
MM
PIXEL
SIZE
P
X
ΜM
ΜM
P
Y
ΜM
ΜM
RADIAL
LENS
DISTORTION
DECENTRING
LENS
DISTORTION
SENSORS
FIGURE
LENS
DISTORTIONS
OF
A
IR
CAMERA
AND
B
RGB
CAMERA
THE
PRINCIPAL
POINTS
ARE
MARKED
BY
X
AND
THE
IMAGE
CENTERS
BY
FIGURE
SHOWS
THE
COMBINED
EFFECT
OF
RADIAL
AND
DECENTERING
DISTORTIONS
FOR
BOTH
THE
IR
AND
THE
RGB
IMAGES
NOTICE
THE
LARGER
EFFECT
OF
DECENTERING
DISTORTIONS
IN
THE
IR
IMAGE
AS
COMPARED
TO
THE
RGB
IMAGE
THE
MAGNITUDE
OF
RADIAL
DISTORTIONS
HOWEVER
IS
LARGER
IN
THE
RGB
IMAGE
PARTICULARLY
IN
THE
UPPER
LEFT
CORNER
WHERE
RADIAL
DISTORTIONS
REACH
PIXELS
MM
THIS
CAN
BE
VERIFIED
BY
EXAMINING
THE
RADIAL
DISTORTION
CURVES
IN
FIGURE
WHICH
SHOW
THAT
RADIAL
DISTORTIONS
OF
THE
RGB
CAMERA
ARE
GENERALLY
LARGER
THAN
THOSE
OF
THE
IR
CAMERA
IN
PRACTICE
RADIAL
DISTORTIONS
IN
THE
RGB
IMAGES
LEAD
TO
MISALIGNMENTS
BETWEEN
THE
COLOR
AND
DEPTH
DATA
IN
THE
POINT
CLOUD
A
DISTORTION
OF
MM
IN
THE
IMAGE
SPACE
CORRESPONDS
TO
A
MISALIGNMENT
OF
CM
AT
THE
MAXIMUM
RANGE
OF
THE
SENSOR
M
FIGURE
RADIAL
DISTORTION
CURVES
FOR
THE
IR
AND
RGB
IMAGES
FOR
THE
STEREO
CALIBRATION
IMAGES
OF
A
CHECKERBOARD
PATTERN
WERE
TAKEN
SIMULTANEOUSLY
BY
THE
TWO
CAMERAS
AND
THE
RELATIVE
ORIENTATION
PARAMETERS
WERE
ESTIMATED
IN
A
BUNDLE
ADJUSTMENT
TABLE
LISTS
THE
RESULTING
PARAMETERS
AS
IT
CAN
BE
SEEN
THE
ROTATIONS
ARE
QUITE
SMALL
AND
THE
RELATIVE
POSITION
A
B
SENSORS
PARAMETERS
INDICATE
THAT
THE
CENTER
OF
THE
RGB
CAMERA
IS
APPROXIMATELY
ON
THE
BASE
LINE
BETWEEN
THE
IR
CAMERA
AND
THE
LASER
EMITTER
TABLE
EXTERIOR
ORIENTATION
PARAMETERS
OF
THE
RGB
CAMERA
RELATIVE
TO
THE
IR
CAMERA
ROTATION
PARAMETERS
DEGREE
POSITION
PARAMETERS
MM
R
X
R
Y
R
Z
T
X
T
Y
T
Z
TO
DETERMINE
THE
PARAMETERS
INVOLVED
IN
THE
DISPARITY
DEPTH
RELATION
EQUATION
DEPTH
VALUES
WERE
MEASURED
AT
EIGHT
DIFFERENT
DISTANCES
TO
THE
SENSOR
USING
A
MEASURING
TAPE
THE
INVERSE
OF
THE
MEASURED
DISTANCES
WERE
THEN
PLOTTED
AGAINST
THE
CORRESPONDING
NORMALIZED
DISPARITIES
OBSERVED
BY
THE
SENSOR
SEE
FIGURE
AS
IT
CAN
BE
SEEN
THE
RELATION
IS
LINEAR
AS
WE
EXPECTED
FROM
THE
MATHEMATICAL
MODEL
IN
EQUATION
THE
PARAMETERS
OF
THE
DISPARITY
DEPTH
RELATION
WERE
OBTAINED
BY
A
SIMPLE
LEAST
SQUARES
LINE
REGRESSION
THESE
WERE
FOUND
TO
BE
AS
THE
SLOPE
AND
AS
THE
INTERCEPT
OF
THE
LINE
USING
THESE
PARAMETERS
WE
CAN
NOW
CALCULATE
DEPTH
VALUES
FROM
THE
OBSERVED
NORMALIZED
DISPARITIES
FIGURE
LINEAR
RELATION
OF
NORMALIZED
DISPARITY
WITH
INVERSE
DEPTH
COMPARISON
OF
KINECT
POINT
CLOUD
WITH
THE
POINT
CLOUD
OF
A
HIGH
END
LASER
SCANNER
TO
INVESTIGATE
THE
SYSTEMATIC
ERRORS
IN
KINECT
DATA
A
COMPARISON
WAS
MADE
WITH
A
POINT
CLOUD
OBTAINED
BY
A
HIGH
END
LASER
SCANNER
THE
KINECT
POINT
CLOUD
WAS
OBTAINED
FROM
THE
DISPARITY
IMAGE
USING
EQUATIONS
AND
AND
THE
CALIBRATION
PARAMETERS
FROM
THE
PREVIOUS
STEP
THE
LASER
SCANNER
POINT
CLOUD
WAS
OBTAINED
OF
THE
SAME
SCENE
BY
A
CALIBRATED
FARO
LS
LASER
SCANNER
THE
NOMINAL
RANGE
ACCURACY
OF
THE
LASER
SCANNER
IS
MM
FOR
A
HIGHLY
REFLECTIVE
TARGET
AT
A
DISTANCE
OF
M
TO
THE
SCANNER
THE
AVERAGE
POINT
SPACING
OF
THE
LASER
SCANNER
POINT
CLOUD
ON
A
SURFACE
PERPENDICULAR
TO
THE
RANGE
DIRECTION
AND
ALSO
THE
OPTICAL
AXIS
OF
THE
INFRARED
CAMERA
OF
KINECT
WAS
MM
IT
WAS
THEREFORE
ASSUMED
THAT
THE
LASER
SCANNER
POINT
CLOUD
IS
SUFFICIENTLY
ACCURATE
AND
DENSE
TO
SERVE
AS
REFERENCE
FOR
THE
ACCURACY
EVALUATION
OF
THE
KINECT
POINT
CLOUD
IN
THE
ABSENCE
OF
ANY
SYSTEMATIC
ERRORS
THE
MEAN
OF
DISCREPANCIES
BETWEEN
THE
TWO
POINT
CLOUDS
IS
EXPECTED
TO
BE
CLOSE
TO
ZERO
TO
ENABLE
THIS
ANALYSIS
FIRST
AN
ACCURATE
REGISTRATION
OF
THE
TWO
POINT
CLOUDS
IS
NECESSARY
THE
REGISTRATION
ACCURACY
IS
IMPORTANT
BECAUSE
ANY
REGISTRATION
ERROR
MAY
BE
MISINTERPRETED
AS
ERROR
IN
THE
SENSORS
KINECT
POINT
CLOUD
TO
ACHIEVE
THE
BEST
ACCURACY
TWO
REGISTRATION
METHODS
WERE
TESTED
THE
FIRST
METHOD
CONSISTED
OF
A
MANUAL
ROUGH
ALIGNMENT
FOLLOWED
BY
A
FINE
REGISTRATION
USING
THE
ITERATIVE
CLOSEST
POINT
ICP
ALGORITHM
TO
MAKE
ICP
MORE
EFFICIENT
A
VARIANT
SUGGESTED
BY
PULLI
WAS
FOLLOWED
IN
WHICH
RANDOMLY
SELECTED
CORRESPONDENCES
CLOSEST
POINTS
WITH
A
REJECTION
RATE
OF
WERE
USED
IN
THE
SECOND
METHOD
THE
TWO
ROUGHLY
ALIGNED
POINT
CLOUDS
WERE
SEGMENTED
INTO
PLANAR
SURFACES
AND
CORRESPONDING
SEGMENTS
WERE
MANUALLY
SELECTED
THEN
A
ROBUST
PLANE
FITTING
USING
RANSAC
WAS
APPLIED
TO
OBTAIN
PLANE
PARAMETERS
AND
THE
INLYING
POINTS
THE
REGISTRATION
WAS
THEN
PERFORMED
BY
MINIMIZING
THE
DISTANCES
FROM
THE
POINTS
IN
ONE
POINT
CLOUD
TO
THEIR
CORRESPONDING
PLANES
IN
THE
OTHER
POINT
CLOUD
IN
BOTH
REGISTRATIONS
THE
ESTIMATED
TRANSFORMATION
PARAMETERS
CONSISTED
OF
A
ROTATION
AND
A
TRANSLATION
TO
REVEAL
A
POSSIBLE
SCALE
DIFFERENCE
BETWEEN
THE
POINT
CLOUDS
A
THIRD
REGISTRATION
WAS
PERFORMED
USING
THE
PLANE
BASED
METHOD
AUGMENTED
WITH
A
SCALE
PARAMETER
TABLE
SUMMARIZES
THE
REGISTRATION
RESIDUALS
PERTAINING
TO
THE
THREE
METHODS
IT
IS
CLEAR
THAT
THE
METHODS
PERFORM
SIMILARLY
ALL
YIELDING
VERY
COMPARABLE
RESIDUALS
FURTHERMORE
THE
SCALE
PARAMETER
OBTAINED
FROM
THE
THIRD
REGISTRATION
WAS
FOUND
TO
BE
THE
LARGEST
EFFECT
OF
SUCH
A
SCALE
ON
THE
FURTHEST
POINT
OF
THE
POINT
CLOUD
IS
CM
WHICH
IS
NOT
LARGER
THAN
THE
RANDOM
ERROR
AND
DEPTH
RESOLUTION
OF
THE
DATA
AS
WILL
BE
SHOWN
LATER
THUS
WE
CAN
CONCLUDE
THAT
THERE
IS
NO
SCALE
DIFFERENCE
BETWEEN
THE
KINECT
POINT
CLOUD
AND
THE
LASER
SCANNER
POINT
CLOUD
TABLE
REGISTRATION
RESULTS
OF
THE
THREE
METHODS
TRANSFORMATION
PARAMETERS
RESIDUALS
R
X
R
Y
R
Z
DEG
T
X
T
Y
T
Z
CM
MIN
CM
MEAN
CM
MED
CM
STD
CM
MAX
CM
POINT
POINT
DISTANCES
ICP
POINT
PLANE
DISTANCES
WITHOUT
SCALE
POINT
PLANE
DISTANCES
WITH
SCALE
FOR
THE
COMPARISON
BETWEEN
THE
TWO
POINT
CLOUDS
THE
RESULT
OF
THE
ICP
REGISTRATION
METHOD
WAS
USED
A
TOTAL
OF
POINTS
WERE
RANDOMLY
SELECTED
FROM
THE
KINECT
POINT
CLOUD
AND
FOR
EACH
POINT
THE
NEAREST
NEIGHBOR
WAS
FOUND
IN
THE
LASER
SCANNER
POINT
CLOUD
THESE
CLOSEST
POINT
PAIRS
WERE
THE
BASIS
FOR
EVALUATING
THE
ACCURACY
OF
THE
KINECT
POINT
CLOUD
HOWEVER
IT
WAS
CONSIDERED
THAT
THE
POINT
PAIRS
MIGHT
CONTAIN
INCORRECT
CORRESPONDENCES
BECAUSE
THE
TWO
SENSORS
HAD
SLIGHTLY
DIFFERENT
VIEWING
ANGLES
AND
THEREFORE
AREAS
THAT
COULD
NOT
BE
SEEN
BY
ONE
SENSOR
MIGHT
BE
CAPTURED
BY
THE
OTHER
AND
VICE
VERSA
FIGURE
SHOWS
THE
TWO
POINT
CLOUDS
AND
THE
CLOSEST
POINT
PAIRS
FIGURE
SHOWS
THE
HISTOGRAMS
OF
DISCREPANCIES
BETWEEN
THE
POINT
PAIRS
IN
X
Y
AND
Z
TABLE
LISTS
THE
STATISTICS
RELATED
TO
THESE
DISCREPANCIES
THE
MEAN
AND
MEDIAN
DISCREPANCIES
ARE
CLOSE
TO
ZERO
WHICH
IS
AN
INDICATION
THAT
THERE
ARE
NO
SYSTEMATIC
SHIFTS
BETWEEN
THE
TWO
POINT
CLOUDS
FOR
COMPARISON
THE
LAST
THREE
ROWS
OF
TABLE
SHOW
THE
DISCREPANCIES
BETWEEN
THE
LASER
SCANNER
POINT
CLOUD
AND
AN
UNCALIBRATED
KINECT
POINT
CLOUD
MEASURED
ON
THE
SAME
NUMBER
OF
SAMPLED
POINT
PAIRS
THE
DISCREPANCIES
ARE
CLEARLY
LARGER
WHEN
THE
UNCALIBRATED
POINT
CLOUD
IS
USED
INDICATING
THE
EFFECT
OF
CALIBRATION
SENSORS
FIGURE
COMPARISON
OF
KINECT
POINT
CLOUD
CYAN
WITH
THE
POINT
CLOUD
OBTAINED
BY
FARO
LASER
SCANNER
WHITE
THE
LARGER
POINTS
ARE
SAMPLES
RANDOMLY
SELECTED
FROM
THE
KINECT
DATA
BLUE
AND
THEIR
CLOSEST
POINT
IN
THE
LASER
SCANNER
DATA
RED
THE
THUMBNAIL
ON
THE
LOWER
RIGHT
IS
A
COLOR
IMAGE
OF
THE
SETUP
FIGURE
SHOWS
THE
DISTRIBUTION
OF
THE
POINT
PAIR
DISTANCES
IN
THE
X
Z
PLANE
IN
GENERAL
POINTS
THAT
ARE
LOCATED
FURTHER
AWAY
FROM
THE
SENSOR
PARTICULARLY
THOSE
AT
THE
SIDES
OF
THE
POINT
CLOUD
SHOW
LARGER
DISCREPANCIES
THIS
IS
WHAT
WE
EXPECTED
BASED
ON
THE
THEORETICAL
RANDOM
ERROR
MODEL
OVERALL
THE
COMPARISON
OF
THE
TWO
POINT
CLOUDS
SHOWS
THAT
ABOUT
OF
THE
POINT
PAIRS
ARE
LESS
THAN
CM
APART
FIGURE
HISTOGRAMS
OF
DISCREPANCIES
BETWEEN
THE
CLOSEST
POINT
PAIRS
IN
X
Y
AND
Z
DIRECTION
SENSORS
TABLE
STATISTICS
OF
DISCREPANCIES
BETWEEN
THE
CLOSEST
POINT
PAIRS
THE
LAST
THREE
ROWS
SHOW
FOR
COMPARISON
THE
SAME
STATISTICS
OBTAINED
FOR
AN
UNCALIBRATED
KINECT
POINT
CLOUD
FIGURE
DISTRIBUTION
OF
POINT
PAIR
DISTANCES
IN
THE
X
Z
PLANE
MEAN
MEDIAN
STANDARD
INTERQUARTILE
PERCENTAGE
IN
PERCENTAGE
IN
PERCENTAGE
IN
CM
CM
DEVIATION
CM
RANGE
CM
CM
CM
CM
CM
CM
CM
DX
DY
DZ
DX
DY
DZ
PLANE
FITTING
TEST
TO
VERIFY
THE
RELATION
BETWEEN
THE
RANDOM
ERROR
AND
THE
DISTANCE
TO
THE
SENSOR
A
PLANE
FITTING
TEST
WAS
CARRIED
OUT
THE
PLANAR
SURFACE
OF
A
DOOR
WAS
MEASURED
AT
VARIOUS
DISTANCES
FROM
M
TO
M
THE
OPERATION
RANGE
OF
THE
SENSOR
WITH
M
INTERVALS
IN
EACH
RESULTING
POINT
CLOUD
A
SAME
PART
OF
THE
DOOR
WAS
SELECTED
AND
A
PLANE
WAS
FITTED
TO
THE
SELECTED
POINTS
THE
RANSAC
PLANE
FITTING
METHOD
WAS
USED
TO
AVOID
THE
INFLUENCE
OF
OUTLIERS
FIGURE
SHOWS
THE
MEASUREMENT
SETUP
FIGURE
THE
PLANAR
SURFACE
OF
A
DOOR
MEASURED
AT
DIFFERENT
DISTANCES
TO
THE
SENSOR
THE
BOXES
SHOW
THE
PLANE
FITTING
AREA
M
M
M
M
M
SENSORS
SINCE
IN
ALL
MEASUREMENTS
THE
SELECTED
PLANAR
SURFACE
WAS
APPROXIMATELY
PERPENDICULAR
TO
THE
OPTICAL
AXIS
OF
THE
SENSOR
THE
RESIDUALS
OF
THE
PLANE
FITTING
PROCEDURE
CAN
BE
SEEN
AS
A
REPRESENTATION
OF
THE
DEPTH
RANDOM
ERROR
TO
EVALUATE
THIS
RANDOM
ERROR
AT
DIFFERENT
DISTANCES
AN
EQUAL
NUMBER
OF
SAMPLES
SAMPLES
WERE
RANDOMLY
SELECTED
FROM
EACH
PLANE
AND
THE
STANDARD
DEVIATION
OF
THE
RESIDUALS
WAS
CALCULATED
OVER
THE
SELECTED
SAMPLES
FIGURE
SHOWS
THE
CALCULATED
STANDARD
DEVIATIONS
PLOTTED
AGAINST
THE
DISTANCE
FROM
THE
PLANE
TO
THE
SENSOR
THE
BLACK
SQUARES
IT
CAN
BE
SEEN
THAT
THE
ERRORS
INCREASE
QUADRATICALLY
FROM
A
FEW
MILLIMETERS
AT
M
DISTANCE
TO
ABOUT
CM
AT
THE
MAXIMUM
RANGE
OF
THE
SENSOR
ALTHOUGH
THE
PLANE
FITTING
RESIDUALS
CAN
BE
SEEN
AS
AN
INDICATION
OF
RANDOM
ERROR
OF
DEPTH
MEASUREMENT
THEY
ARE
ALSO
INFLUENCED
BY
THE
DEPTH
RESOLUTION
AT
EACH
PLANE
HAVING
DETERMINED
THE
CALIBRATION
PARAMETERS
WE
CAN
NOW
EVALUATE
EQUATIONS
AND
TO
OBTAIN
THE
THEORETICAL
RANDOM
ERROR
AND
RESOLUTION
OF
INDIVIDUAL
DEPTH
MEASUREMENTS
AT
DIFFERENT
DISTANCES
FROM
THE
SENSOR
IN
FIGURE
THE
RED
CURVE
SHOWS
THE
THEORETICAL
RANDOM
ERROR
OBTAINED
FROM
EQUATION
WITH
M
FB
FROM
THE
DEPTH
CALIBRATION
RESULT
FIGURE
AND
ASSUMING
A
DISPARITY
MEASUREMENT
ERROR
Σ
D
OF
PIXEL
THE
BLUE
CURVE
IS
A
PLOT
OF
DEPTH
RESOLUTION
OBTAINED
BY
EVALUATING
EQUATION
THE
DISPARITY
ERROR
OF
PIXEL
SEEMS
A
FAIR
ESTIMATE
SINCE
THE
THEORETICAL
RANDOM
ERROR
CURVE
IS
CONSISTENT
WITH
THE
OBSERVED
STANDARD
DEVIATIONS
CONSIDERING
THAT
THE
LOW
DEPTH
RESOLUTION
HAS
A
MINOR
EFFECT
ON
THE
ESTIMATE
OF
THE
STANDARD
DEVIATION
OF
PLANE
FITTING
RESIDUALS
WHEN
A
LARGE
NUMBER
OF
SAMPLES
ARE
USED
FIGURE
STANDARD
DEVIATION
OF
PLANE
FITTING
RESIDUALS
AT
DIFFERENT
DISTANCES
OF
THE
PLANE
TO
THE
SENSOR
THE
CURVES
SHOW
THE
THEORETICAL
RANDOM
ERROR
RED
AND
DEPTH
RESOLUTION
BLUE
ALTHOUGH
DEPTH
RESOLUTION
DOES
NOT
HAVE
A
LARGE
INFLUENCE
ON
THE
STANDARD
DEVIATION
OF
PLANE
FITTING
RESIDUALS
ITS
EFFECT
ON
THE
LEVEL
OF
INDIVIDUAL
POINTS
SHOULD
NOT
BE
UNDERSTATED
THIS
EFFECT
IS
MORE
PRONOUNCED
AT
LARGER
DISTANCES
FROM
THE
SENSOR
SUCH
THAT
AT
THE
MAXIMUM
RANGE
OF
METERS
THE
POINT
SPACING
IN
THE
DEPTH
DIRECTION
IS
CENTIMETERS
THE
COMBINED
EFFECT
OF
THE
RANDOM
ERROR
AND
LOW
DEPTH
RESOLUTION
AT
LARGE
DISTANCES
RESULTS
IN
A
PLANAR
SURFACE
PERPENDICULAR
TO
THE
SENSOR
APPEARING
AS
SEVERAL
LAYERS
OF
POINTS
IN
THE
DATA
WHEN
SEEN
FROM
SIDE
VIEW
FIGURE
SHOWS
THE
POINT
CLOUDS
OF
THE
DOOR
PLANE
AT
THREE
DISTANCES
PROJECTED
ON
THE
Y
Z
PLANE
Z
BEING
THE
DEPTH
DIRECTION
SEE
SECTION
FOR
THE
DEFINITION
OF
THE
COORDINATE
SYSTEM
WHILE
AT
M
THE
POINT
SPACING
IN
THE
DEPTH
DIRECTION
IS
SENSORS
QUITE
SMALL
ABOUT
MM
AT
M
AND
M
THE
POINTS
ARE
CLEARLY
DISTRIBUTED
IN
SEVERAL
LAYERS
AT
INTERVALS
CORRESPONDING
TO
THE
DEPTH
RESOLUTION
WHICH
IS
ABOUT
CM
FOR
THE
PLANE
AT
M
DISTANCE
AND
CLOSE
TO
CM
AT
M
FIGURE
POINT
CLOUD
OF
A
PLANAR
SURFACE
AT
METER
A
METER
B
AND
METER
C
DISTANCE
FROM
THE
SENSOR
PROJECTED
ON
THE
Y
Z
PLANE
COLORS
REPRESENT
DISTANCE
TO
THE
BEST
FIT
PLANE
IN
CENTIMETERS
A
B
C
CONCLUSIONS
THE
PAPER
PRESENTED
A
THEORETICAL
AND
EXPERIMENTAL
ANALYSIS
OF
THE
GEOMETRIC
QUALITY
OF
DEPTH
DATA
ACQUIRED
BY
THE
KINECT
SENSOR
THE
GEOMETRIC
QUALITY
MEASURES
REPRESENT
THE
DEPTH
ACCURACY
AND
RESOLUTION
FOR
INDIVIDUAL
POINTS
INDOOR
MAPPING
APPLICATIONS
ARE
OFTEN
BASED
ON
THE
EXTRACTION
OF
OBJECTS
INSTEAD
OF
AN
IRREGULAR
SET
OF
POINTS
IN
ORDER
TO
DESCRIBE
THE
QUALITY
OF
EXTRACTED
OBJECTS
SOME
BASIC
ERROR
PROPAGATION
WOULD
BE
NEEDED
WHILE
FITTING
GEOMETRIC
OBJECT
MODELS
TO
THE
DATA
CAN
REDUCE
THE
INFLUENCE
OF
RANDOM
ERRORS
AND
LOW
DEPTH
RESOLUTION
THE
EFFECT
OF
SYSTEMATIC
ERRORS
CAN
ONLY
BE
ELIMINATED
THROUGH
A
PROPER
CALIBRATION
PROCEDURE
FROM
THE
RESULTS
OF
CALIBRATION
AND
ERROR
ANALYSIS
THE
FOLLOWING
MAIN
CONCLUSIONS
CAN
BE
DRAWN
TO
ELIMINATE
DISTORTIONS
IN
THE
POINT
CLOUD
AND
MISALIGNMENTS
BETWEEN
THE
COLOUR
AND
DEPTH
DATA
AN
ACCURATE
STEREO
CALIBRATION
OF
THE
IR
CAMERA
AND
THE
RGB
CAMERA
IS
NECESSARY
THE
RANDOM
ERROR
OF
DEPTH
MEASUREMENTS
INCREASES
QUADRATICALLY
WITH
INCREASING
DISTANCE
FROM
THE
SENSOR
AND
REACHES
CM
AT
THE
MAXIMUM
RANGE
OF
METERS
THE
DEPTH
RESOLUTION
ALSO
DECREASES
QUADRATICALLY
WITH
INCREASING
DISTANCE
FROM
THE
SENSOR
THE
POINT
SPACING
IN
THE
DEPTH
DIRECTION
ALONG
THE
OPTICAL
AXIS
OF
THE
SENSOR
IS
AS
LARGE
AS
CM
AT
THE
MAXIMUM
RANGE
OF
METERS
IN
GENERAL
FOR
MAPPING
APPLICATIONS
THE
DATA
SHOULD
BE
ACQUIRED
WITHIN
M
DISTANCE
TO
THE
SENSOR
AT
LARGER
DISTANCES
THE
QUALITY
OF
THE
DATA
IS
DEGRADED
BY
THE
NOISE
AND
LOW
RESOLUTION
OF
THE
DEPTH
MEASUREMENTS
A
BRAIN
COMPUTER
INTERFACE
BCI
IS
A
HARDWARE
AND
SOFTWARE
COMMUNICATIONS
SYSTEM
THAT
PERMITS
CEREBRAL
ACTIVITY
ALONE
TO
CONTROL
COMPUTERS
OR
EXTERNAL
DEVICES
THE
IMMEDIATE
GOAL
OF
BCI
RESEARCH
IS
TO
PROVIDE
COMMUNICATIONS
CAPABILITIES
TO
SEVERELY
DISABLED
PEOPLE
WHO
ARE
TOTALLY
PARALYZED
OR
LOCKED
IN
BY
NEUROLOGICAL
NEUROMUSCULAR
DISORDERS
SUCH
AS
AMYOTROPHIC
LATERAL
SCLEROSIS
BRAIN
STEM
STROKE
OR
SPINAL
CORD
INJURY
HERE
WE
REVIEW
THE
STATE
OF
THE
ART
OF
BCIS
LOOKING
AT
THE
DIFFERENT
STEPS
THAT
FORM
A
STANDARD
BCI
SIGNAL
ACQUISITION
PREPROCESSING
OR
SIGNAL
ENHANCEMENT
FEATURE
EXTRACTION
CLASSIFICATION
AND
THE
CONTROL
INTERFACE
WE
DISCUSS
THEIR
ADVANTAGES
DRAWBACKS
AND
LATEST
ADVANCES
AND
WE
SURVEY
THE
NUMEROUS
TECHNOLOGIES
REPORTED
IN
THE
SCIENTIFIC
LITERATURE
TO
DESIGN
EACH
STEP
OF
A
BCI
FIRST
THE
REVIEW
EXAMINES
THE
NEUROIMAGING
MODALITIES
USED
IN
THE
SIGNAL
ACQUISITION
STEP
EACH
OF
WHICH
MONITORS
A
DIFFERENT
FUNCTIONAL
BRAIN
ACTIVITY
SUCH
AS
ELECTRICAL
MAGNETIC
OR
METABOLIC
ACTIVITY
SECOND
THE
REVIEW
DISCUSSES
DIFFERENT
ELECTROPHYSIOLOGICAL
CONTROL
SIGNALS
THAT
DETERMINE
USER
INTENTIONS
WHICH
CAN
BE
DETECTED
IN
BRAIN
ACTIVITY
THIRD
THE
REVIEW
INCLUDES
SOME
TECHNIQUES
USED
IN
THE
SIGNAL
ENHANCEMENT
STEP
TO
DEAL
WITH
THE
ARTIFACTS
IN
THE
CONTROL
SIGNALS
AND
IMPROVE
THE
PERFORMANCE
FOURTH
THE
REVIEW
STUDIES
SOME
MATHEMATIC
ALGORITHMS
USED
IN
THE
FEATURE
EXTRACTION
AND
CLASSIFICATION
STEPS
WHICH
TRANSLATE
THE
INFORMATION
IN
THE
CONTROL
SIGNALS
INTO
COMMANDS
THAT
OPERATE
A
COMPUTER
OR
OTHER
DEVICE
FINALLY
THE
REVIEW
PROVIDES
AN
OVERVIEW
OF
VARIOUS
BCI
APPLICATIONS
THAT
CONTROL
A
RANGE
OF
DEVICES
KEYWORDS
BRAIN
COMPUTER
INTERFACE
BCI
ELECTROENCEPHALOGRAPHY
EEG
REHABILITATION
ARTIFACT
NEUROIMAGING
BRAIN
MACHINE
INTERFACE
COLLABORATIVE
SENSOR
SYSTEM
OPEN
ACCESS
SENSORS
INTRODUCTION
A
BRAIN
COMPUTER
INTERFACE
BCI
ALSO
REFERRED
TO
AS
A
BRAIN
MACHINE
INTERFACE
BMI
IS
A
HARDWARE
AND
SOFTWARE
COMMUNICATIONS
SYSTEM
THAT
ENABLES
HUMANS
TO
INTERACT
WITH
THEIR
SURROUNDINGS
WITHOUT
THE
INVOLVEMENT
OF
PERIPHERAL
NERVES
AND
MUSCLES
BY
USING
CONTROL
SIGNALS
GENERATED
FROM
ELECTROENCEPHALOGRAPHIC
ACTIVITY
BCI
CREATES
A
NEW
NON
MUSCULAR
CHANNEL
FOR
RELAYING
A
PERSON
INTENTIONS
TO
EXTERNAL
DEVICES
SUCH
AS
COMPUTERS
SPEECH
SYNTHESIZERS
ASSISTIVE
APPLIANCES
AND
NEURAL
PROSTHESES
THAT
IS
PARTICULARLY
ATTRACTIVE
FOR
INDIVIDUALS
WITH
SEVERE
MOTOR
DISABILITIES
SUCH
AN
INTERFACE
WOULD
IMPROVE
THEIR
QUALITY
OF
LIFE
AND
WOULD
AT
THE
SAME
TIME
REDUCE
THE
COST
OF
INTENSIVE
CARE
A
BCI
IS
AN
ARTIFICIAL
INTELLIGENCE
SYSTEM
THAT
CAN
RECOGNIZE
A
CERTAIN
SET
OF
PATTERNS
IN
BRAIN
SIGNALS
FOLLOWING
FIVE
CONSECUTIVE
STAGES
SIGNAL
ACQUISITION
PREPROCESSING
OR
SIGNAL
ENHANCEMENT
FEATURE
EXTRACTION
CLASSIFICATION
AND
THE
CONTROL
INTERFACE
THE
SIGNAL
ACQUISITION
STAGE
CAPTURES
THE
BRAIN
SIGNALS
AND
MAY
ALSO
PERFORM
NOISE
REDUCTION
AND
ARTIFACT
PROCESSING
THE
PREPROCESSING
STAGE
PREPARES
THE
SIGNALS
IN
A
SUITABLE
FORM
FOR
FURTHER
PROCESSING
THE
FEATURE
EXTRACTION
STAGE
IDENTIFIES
DISCRIMINATIVE
INFORMATION
IN
THE
BRAIN
SIGNALS
THAT
HAVE
BEEN
RECORDED
ONCE
MEASURED
THE
SIGNAL
IS
MAPPED
ONTO
A
VECTOR
CONTAINING
EFFECTIVE
AND
DISCRIMINANT
FEATURES
FROM
THE
OBSERVED
SIGNALS
THE
EXTRACTION
OF
THIS
INTERESTING
INFORMATION
IS
A
VERY
CHALLENGING
TASK
BRAIN
SIGNALS
ARE
MIXED
WITH
OTHER
SIGNALS
COMING
FROM
A
FINITE
SET
OF
BRAIN
ACTIVITIES
THAT
OVERLAP
IN
BOTH
TIME
AND
SPACE
MOREOVER
THE
SIGNAL
IS
NOT
USUALLY
STATIONARY
AND
MAY
ALSO
BE
DISTORTED
BY
ARTIFACTS
SUCH
AS
ELECTROMYOGRAPHY
EMG
OR
ELECTROOCULOGRAPHY
EOG
THE
FEATURE
VECTOR
MUST
ALSO
BE
OF
A
LOW
DIMENSION
IN
ORDER
TO
REDUCE
FEATURE
EXTRACTION
STAGE
COMPLEXITY
BUT
WITHOUT
RELEVANT
INFORMATION
LOSS
THE
CLASSIFICATION
STAGE
CLASSIFIES
THE
SIGNALS
TAKING
THE
FEATURE
VECTORS
INTO
ACCOUNT
THE
CHOICE
OF
GOOD
DISCRIMINATIVE
FEATURES
IS
THEREFORE
ESSENTIAL
TO
ACHIEVE
EFFECTIVE
PATTERN
RECOGNITION
IN
ORDER
TO
DECIPHER
THE
USER
INTENTIONS
FINALLY
THE
CONTROL
INTERFACE
STAGE
TRANSLATES
THE
CLASSIFIED
SIGNALS
INTO
MEANINGFUL
COMMANDS
FOR
ANY
CONNECTED
DEVICE
SUCH
AS
A
WHEELCHAIR
OR
A
COMPUTER
BCI
TECHNOLOGY
HAS
TRADITIONALLY
BEEN
UNATTRACTIVE
FOR
SERIOUS
SCIENTIFIC
INVESTIGATION
THE
IDEA
OF
SUCCESSFULLY
DECIPHERING
THOUGHTS
OR
INTENTIONS
BY
MEANS
OF
BRAIN
ACTIVITY
HAS
OFTEN
BEEN
REJECTED
IN
THE
PAST
AS
VERY
STRANGE
AND
REMOTE
HENCE
INVESTIGATION
IN
THE
FIELD
OF
BRAIN
ACTIVITY
HAS
USUALLY
BEEN
LIMITED
TO
THE
ANALYSIS
OF
NEUROLOGICAL
DISORDERS
IN
THE
CLINIC
OR
TO
THE
EXPLORATION
OF
BRAIN
FUNCTIONS
IN
THE
LABORATORY
THE
BCI
DESIGN
WAS
CONSIDERED
TOO
COMPLEX
BECAUSE
OF
THE
LIMITED
RESOLUTION
AND
RELIABILITY
OF
INFORMATION
THAT
WAS
DETECTABLE
IN
THE
BRAIN
AND
ITS
HIGH
VARIABILITY
FURTHERMORE
BCI
SYSTEMS
REQUIRE
REAL
TIME
SIGNAL
PROCESSING
AND
UP
UNTIL
RECENTLY
THE
REQUISITE
TECHNOLOGY
EITHER
DID
NOT
EXIST
OR
WAS
EXTREMELY
EXPENSIVE
HOWEVER
THIS
CONTEXT
HAS
UNDERGONE
RADICAL
CHANGE
OVER
THE
LAST
TWO
DECADES
BCI
RESEARCH
WHICH
WAS
CONFINED
TO
ONLY
THREE
GROUPS
YEARS
AGO
AND
ONLY
SIX
TO
EIGHT
GROUPS
YEARS
AGO
IS
NOW
A
FLOURISHING
FIELD
WITH
MORE
THAN
ACTIVE
RESEARCH
GROUPS
ALL
OVER
THE
WORLD
STUDYING
THE
TOPIC
THE
NUMBER
OF
ARTICLES
PUBLISHED
REGARDING
NEURAL
INTERFACE
TECHNOLOGY
HAS
INCREASED
EXPONENTIALLY
OVER
THE
PAST
DECADE
SUCCESSFUL
STUDIES
ON
BRAIN
SIGNAL
PHENOMENA
HAVE
LENT
FURTHER
WEIGHT
TO
THESE
ADVANCES
THE
DEVELOPMENT
OF
MORE
AND
MORE
INEXPENSIVE
COMPUTER
HARDWARE
AND
SOFTWARE
HAS
ALLOWED
MORE
SOPHISTICATED
ONLINE
ANALYSIS
LIKEWISE
THE
CHANCES
OF
USING
BCIS
AS
AUXILIARY
TECHNOLOGY
THAT
MIGHT
SERVE
SEVERELY
DISABLED
PEOPLE
HAS
INCREASED
SOCIAL
ACCEPTANCE
IN
THIS
FIELD
AND
THE
NEED
TO
ACCELERATE
ITS
PROGRESS
INTEREST
IN
THIS
TECHNOLOGY
IS
NOW
FOUND
OUTSIDE
OF
THE
LABORATORY
OR
SENSORS
THE
CLINIC
SMALL
SPECIALIZED
COMPANIES
SUCH
AS
EMOTIV
OR
NEUROSKY
HAVE
ALREADY
DEVELOPED
SOME
INITIAL
APPLICATIONS
ORIENTED
TOWARDS
THE
GENERAL
PUBLIC
NEVERTHELESS
DESPITE
THESE
ADVANCES
MOST
BCI
BASED
APPLICATIONS
ARE
STILL
LIMITED
TO
THE
LABORATORY
BROADER
APPLICABILITY
OF
BCIS
REQUIRES
GREATER
EASE
OF
USE
WHICH
IN
TURN
MEANS
REDUCING
TIME
SPENT
ON
PREPARATION
TRAINING
AND
CALIBRATION
BCI
RESEARCH
IS
A
RELATIVELY
YOUNG
MULTIDISCIPLINARY
FIELD
INTEGRATING
RESEARCHERS
FROM
NEUROSCIENCE
PHYSIOLOGY
PSYCHOLOGY
ENGINEERING
COMPUTER
SCIENCE
REHABILITATION
AND
OTHER
TECHNICAL
AND
HEALTH
CARE
DISCIPLINES
AS
A
RESULT
IN
SPITE
OF
SOME
NOTABLE
ADVANCES
A
COMMON
LANGUAGE
HAS
YET
TO
EMERGE
AND
EXISTING
BCI
TECHNOLOGIES
VARY
WHICH
MAKES
THEIR
COMPARISON
DIFFICULT
AND
IN
CONSEQUENCE
SLOWS
DOWN
THE
RESEARCH
THE
COMMUNITY
OF
BCI
RESEARCHERS
HAS
THEREFORE
STRESSED
THE
NEED
TO
ESTABLISH
A
GENERAL
FRAMEWORK
FOR
BCI
DESIGN
MASON
ET
AL
FOR
EXAMPLE
PROPOSED
A
NEW
FUNCTIONAL
MODEL
FOR
BCI
SYSTEMS
AND
TAXONOMY
DESIGN
THIS
REVIEW
OF
THE
STATE
OF
THE
ART
OF
BCI
SYSTEMS
IS
ARRANGED
AS
FOLLOWS
SECTION
DISCUSSES
EXISTING
NEUROIMAGING
APPROACHES
TO
BCIS
AND
SECTION
DESCRIBES
THE
MOST
COMMONLY
FOUND
CONTROL
SIGNALS
IN
BCI
SYSTEMS
SECTION
BRIEFLY
EXPLAINS
CERTAIN
TYPES
OF
BCIS
SECTIONS
AND
RESPECTIVELY
COVER
THE
DIFFERENT
SIGNAL
PROCESSING
METHODS
USED
FOR
FEATURE
EXTRACTION
ARTIFACT
REDUCTION
AND
FEATURE
CLASSIFICATION
SECTION
PROVIDES
AN
OVERVIEW
OF
BCI
APPLICATIONS
AND
FINALLY
THE
CONCLUSIONS
ARE
DRAWN
IN
SECTION
NEUROIMAGING
APPROACHES
IN
BCIS
BCIS
USE
BRAIN
SIGNALS
TO
GATHER
INFORMATION
ON
USER
INTENTIONS
TO
THAT
EFFECT
BCIS
RELY
ON
A
RECORDING
STAGE
THAT
MEASURES
BRAIN
ACTIVITY
AND
TRANSLATES
THE
INFORMATION
INTO
TRACTABLE
ELECTRICAL
SIGNALS
TWO
TYPES
OF
BRAIN
ACTIVITIES
MAY
BE
MONITORED
I
ELECTROPHYSIOLOGICAL
AND
II
HEMODYNAMIC
ELECTROPHYSIOLOGICAL
ACTIVITY
IS
GENERATED
BY
ELECTRO
CHEMICAL
TRANSMITTERS
EXCHANGING
INFORMATION
BETWEEN
THE
NEURONS
THE
NEURONS
GENERATE
IONIC
CURRENTS
WHICH
FLOW
WITHIN
AND
ACROSS
NEURONAL
ASSEMBLIES
THE
LARGE
VARIETY
OF
CURRENT
PATHWAYS
CAN
BE
SIMPLIFIED
AS
A
DIPOLE
CONDUCTING
CURRENT
FROM
A
SOURCE
TO
A
SINK
THROUGH
THE
DENDRITIC
TRUNK
THESE
INTRACELLULAR
CURRENTS
ARE
KNOWN
AS
PRIMARY
CURRENTS
CONSERVATION
OF
ELECTRIC
CHARGES
MEANS
THAT
THE
PRIMARY
CURRENTS
ARE
ENCLOSED
BY
EXTRACELLULAR
CURRENT
FLOWS
WHICH
ARE
KNOWN
AS
SECONDARY
CURRENTS
ELECTROPHYSIOLOGICAL
ACTIVITY
IS
MEASURED
BY
ELECTROENCEPHALOGRAPHY
ELECTROCORTICOGRAPHY
MAGNETOENCEPHALOGRAPHY
AND
ELECTRICAL
SIGNAL
ACQUISITION
IN
SINGLE
NEURONS
THE
HEMODYNAMIC
RESPONSE
IS
A
PROCESS
IN
WHICH
THE
BLOOD
RELEASES
GLUCOSE
TO
ACTIVE
NEURONS
AT
A
GREATER
RATE
THAN
IN
THE
AREA
OF
INACTIVE
NEURONS
THE
GLUCOSE
AND
OXYGEN
DELIVERED
THROUGH
THE
BLOOD
STREAM
RESULTS
IN
A
SURPLUS
OF
OXYHEMOGLOBIN
IN
THE
VEINS
OF
THE
ACTIVE
AREA
AND
IN
A
DISTINGUISHABLE
CHANGE
OF
THE
LOCAL
RATIO
OF
OXYHEMOGLOBIN
TO
DEOXYHEMOGLOBIN
THESE
CHANGES
CAN
BE
QUANTIFIED
BY
NEUROIMAGING
METHODS
SUCH
AS
FUNCTIONAL
MAGNETIC
RESONANCE
AND
NEAR
INFRARED
SPECTROSCOPY
THESE
KINDS
OF
METHODS
ARE
CATEGORIZED
AS
INDIRECT
BECAUSE
THEY
MEASURE
THE
HEMODYNAMIC
RESPONSE
WHICH
IN
CONTRAST
TO
ELECTROPHYSIOLOGICAL
ACTIVITY
IS
NOT
DIRECTLY
RELATED
TO
NEURONAL
ACTIVITY
MOST
CURRENT
BCIS
OBTAIN
THE
RELEVANT
INFORMATION
FROM
THE
BRAIN
ACTIVITY
THROUGH
ELECTROENCEPHALOGRAPHY
ELECTROENCEPHALOGRAPHY
IS
BY
FAR
THE
MOST
WIDELY
USED
NEUROIMAGING
MODALITY
OWING
TO
ITS
HIGH
TEMPORAL
RESOLUTION
RELATIVE
LOW
COST
HIGH
PORTABILITY
AND
FEW
RISKS
TO
THE
USERS
BCIS
BASED
ON
ELECTROENCEPHALOGRAPHY
CONSIST
OF
A
SET
OF
SENSORS
THAT
ACQUIRE
ELECTROENCEPHALOGRAPHY
SIGNALS
SENSORS
FROM
DIFFERENT
BRAIN
AREAS
HOWEVER
THE
QUALITY
OF
ELECTROENCEPHALOGRAPHY
SIGNALS
IS
AFFECTED
BY
SCALP
SKULL
AND
MANY
OTHER
LAYERS
AS
WELL
AS
BACKGROUND
NOISE
NOISE
IS
KEY
TO
ELECTROENCEPHALOGRAPHY
AND
TO
OTHER
NEUROIMAGING
METHODS
INSOFAR
AS
IT
REDUCES
THE
SNR
AND
THEREFORE
THE
ABILITY
TO
EXTRACT
MEANINGFUL
INFORMATION
FROM
THE
RECORDED
SIGNALS
NON
INVASIVE
APPROACHES
HAVE
SUCCESSFULLY
BEEN
USED
BY
SEVERELY
AND
PARTIALLY
PARALYZED
PATIENTS
TO
REACQUIRE
BASIC
FORMS
OF
COMMUNICATION
AND
TO
CONTROL
NEUROPROSTHESES
AND
WHEELCHAIRS
DESPITE
THE
OUTSTANDING
UTILITY
OF
NON
INVASIVE
APPROACHES
IN
BCI
APPLICATIONS
MOTOR
RECOVERY
HAS
BEEN
LIMITED
BECAUSE
OF
THE
NEED
FOR
BRAIN
SIGNALS
WITH
A
HIGHER
RESOLUTION
INVASIVE
RECORDING
METHODS
SUCH
AS
ELECTROCORTICOGRAPHY
OR
INTRACORTICAL
NEURON
RECORDING
WERE
INTRODUCED
IN
AN
EFFORT
TO
IMPROVE
THE
QUALITY
OF
BRAIN
SIGNALS
MONITORED
BY
BCIS
MOST
RESEARCHERS
AGREE
THAT
MOVEMENT
RESTORATION
THROUGH
PROSTHESES
WITH
MULTIPLES
DEGREES
OF
FREEDOM
CAN
ONLY
BE
ACHIEVED
THROUGH
INVASIVE
APPROACHES
IT
IS
UNLIKELY
THAT
THE
POWER
OF
NON
INVASIVE
MODALITIES
WILL
BE
ENHANCED
IN
THE
NEAR
FUTURE
ACCORDINGLY
IT
WOULD
APPEAR
THAT
INVASIVE
MODALITIES
ARE
INDISPENSABLE
FOR
ACCURATE
NEUROPROSTHESES
CONTROL
NEVERTHELESS
THIS
ISSUE
IS
NOT
YET
ENTIRELY
CLEAR
AND
SOME
OPINIONS
DISAGREE
WITH
THIS
CONJECTURE
CONTRARY
TO
ESTABLISHED
OPINION
WOLPAW
SUGGESTED
THAT
PERFORMANCE
IN
MULTIDIMENSIONAL
CONTROL
MAY
BE
INDEPENDENT
OF
THE
RECORDING
METHOD
FURTHER
REFINEMENTS
OF
RECORDING
AND
ANALYSIS
TECHNIQUES
WILL
PROBABLY
INCREASE
THE
PERFORMANCE
OF
BOTH
INVASIVE
AND
NON
INVASIVE
MODALITIES
HOWEVER
THE
LATEST
STUDIES
IN
NEUROPROSTHESES
CONTROL
APPEAR
TO
INDICATE
THAT
INVASIVE
MODALITIES
HAVE
INHERENT
ADVANTAGES
IN
NEUROPROSTHESIS
CONTROL
APPLICATIONS
INVASIVE
MODALITIES
NEED
TO
IMPLANT
MICROELECTRODE
ARRAYS
INSIDE
THE
SKULL
THAT
INVOLVES
SIGNIFICANT
HEALTH
RISKS
WHICH
RESTRICTS
THEIR
USE
TO
EXPERIMENTAL
SETTINGS
TWO
INVASIVE
MODALITIES
CAN
BE
FOUND
IN
BCI
RESEARCH
ELECTROCORTICOGRAPHY
WHICH
PLACES
ELECTRODES
ON
THE
SURFACE
OF
THE
CORTEX
EITHER
OUTSIDE
THE
DURA
MATER
EPIDURAL
ELECTROCORTICOGRAPHY
OR
UNDER
THE
DURA
MATER
SUBDURAL
ELECTROCORTICOGRAPHY
AND
INTRACORTICAL
NEURON
RECORDING
WHICH
IMPLANTS
ELECTRODES
INSIDE
THE
CORTEX
SEVERAL
ISSUES
HAD
TO
BE
ADDRESSED
BEFORE
THEY
BECOME
SUITABLE
FOR
LONG
TERM
APPLICATIONS
FIRST
TISSUE
ACCEPTANCE
OF
THE
MICROELECTRODE
HAS
TO
BE
ADDRESSED
FOR
WHICH
REASON
PROPOSALS
EXIST
FOR
ELECTRODES
WITH
NEUROTROPIC
MEDIUMS
THAT
PROMOTE
NEURONAL
GROWTH
TO
IMPROVE
BIOCOMPATIBILITY
PERHAPS
THE
FUTURE
OF
NANOTECHNOLOGIES
THAT
MIGHT
DEVELOP
NANO
DETECTORS
TO
BE
IMPLANTED
INERTLY
IN
THE
BRAIN
MAY
PROVIDE
A
DEFINITE
SOLUTION
TO
THE
PROBLEMS
OF
LONG
TERM
INVASIVE
APPLICATIONS
SECOND
A
LINK
BETWEEN
THE
MICROELECTRODE
AND
EXTERNAL
HARDWARE
THAT
USES
WIRELESS
TECHNOLOGY
IS
NEEDED
TO
REDUCE
THE
RISKS
OF
INFECTION
WIRELESS
TRANSMISSION
OF
NEURONAL
SIGNALS
HAS
ALREADY
BEEN
TESTED
IN
ANIMALS
AND
THIRD
CONTINUOUS
STRESS
CAUSED
BY
PLUGGING
AND
UNPLUGGING
THE
RECORDING
SYSTEM
MAY
LEAD
TO
TISSUE
DAMAGE
OR
SYSTEM
FAILURE
EACH
NEUROIMAGING
MODALITY
IS
EXPLAINED
BELOW
FIRSTLY
ELECTROPHYSIOLOGICAL
METHODS
SUCH
AS
ELECTROENCEPHALOGRAPHY
ELECTROCORTICOGRAPHY
MAGNETOENCEPHALOGRAPHY
AND
ELECTRICAL
SIGNAL
ACQUISITION
IN
SINGLE
NEURONS
WILL
BE
DISCUSSED
SECONDLY
METABOLIC
METHODS
SUCH
AS
FUNCTIONAL
MAGNETIC
RESONANCE
AND
NEAR
INFRARED
SPECTROSCOPY
WILL
BE
DESCRIBED
FINALLY
FUNCTIONAL
IMAGING
MODALITIES
ARE
LISTED
IN
TABLE
ALONG
WITH
INFORMATION
RELATED
TO
ACTIVITY
MEASURED
TEMPORAL
AND
SPATIAL
RESOLUTIONS
SAFETY
AND
PORTABILITY
SENSORS
TABLE
SUMMARY
OF
NEUROIMAGING
METHODS
NEUROIMAGING
METHOD
MEASURED
ACTIVITY
MEASUREMENT
INDIRECT
DIRECT
RESOLUTION
TEMPORAL
SPATIAL
RESOLUTION
RISK
PORTABILITY
EEG
ELECTRICAL
DIRECT
MM
NON
INVASIVE
PORTABLE
MEG
MAGNETIC
DIRECT
MM
NON
INVASIVE
NON
PORTABLE
ECOG
ELECTRICAL
DIRECT
MM
INVASIVE
PORTABLE
INTRACORTICAL
NEURON
RECORDING
MM
LFP
ELECTRICAL
DIRECT
MM
MUA
INVASIVE
PORTABLE
MM
SUA
FMRI
METABOLIC
INDIRECT
MM
NON
INVASIVE
NON
PORTABLE
NIRS
METABOLIC
INDIRECT
MM
NON
INVASIVE
PORTABLE
ELECTROENCEPHALOGRAPHY
EEG
EEG
MEASURES
ELECTRIC
BRAIN
ACTIVITY
CAUSED
BY
THE
FLOW
OF
ELECTRIC
CURRENTS
DURING
SYNAPTIC
EXCITATIONS
OF
THE
DENDRITES
IN
THE
NEURONS
AND
IS
EXTREMELY
SENSITIVE
TO
THE
EFFECTS
OF
SECONDARY
CURRENTS
EEG
SIGNALS
ARE
EASILY
RECORDED
IN
A
NON
INVASIVE
MANNER
THROUGH
ELECTRODES
PLACED
ON
THE
SCALP
FOR
WHICH
THAT
REASON
IT
IS
BY
FAR
THE
MOST
WIDESPREAD
RECORDING
MODALITY
HOWEVER
IT
PROVIDES
VERY
POOR
QUALITY
SIGNALS
AS
THE
SIGNALS
HAVE
TO
CROSS
THE
SCALP
SKULL
AND
MANY
OTHER
LAYERS
THIS
MEANS
THAT
EEG
SIGNALS
IN
THE
ELECTRODES
ARE
WEAK
HARD
TO
ACQUIRE
AND
OF
POOR
QUALITY
THIS
TECHNIQUE
IS
MOREOVER
SEVERELY
AFFECTED
BY
BACKGROUND
NOISE
GENERATED
EITHER
INSIDE
THE
BRAIN
OR
EXTERNALLY
OVER
THE
SCALP
THE
EEG
RECORDING
SYSTEM
CONSISTS
OF
ELECTRODES
AMPLIFIERS
A
D
CONVERTER
AND
A
RECORDING
DEVICE
THE
ELECTRODES
ACQUIRE
THE
SIGNAL
FROM
THE
SCALP
THE
AMPLIFIERS
PROCESS
THE
ANALOG
SIGNAL
TO
ENLARGE
THE
AMPLITUDE
OF
THE
EEG
SIGNALS
SO
THAT
THE
A
D
CONVERTER
CAN
DIGITALIZE
THE
SIGNAL
IN
A
MORE
ACCURATE
WAY
FINALLY
THE
RECORDING
DEVICE
WHICH
MAY
BE
A
PERSONAL
COMPUTER
OR
SIMILAR
STORES
AND
DISPLAYS
THE
DATA
THE
EEG
SIGNAL
IS
MEASURED
AS
THE
POTENTIAL
DIFFERENCE
OVER
TIME
BETWEEN
SIGNAL
OR
ACTIVE
ELECTRODE
AND
REFERENCE
ELECTRODE
AN
EXTRA
THIRD
ELECTRODE
KNOWN
AS
THE
GROUND
ELECTRODE
IS
USED
TO
MEASURE
THE
DIFFERENTIAL
VOLTAGE
BETWEEN
THE
ACTIVE
AND
THE
REFERENCE
POINTS
THE
MINIMAL
CONFIGURATION
FOR
EEG
MEASUREMENT
THEREFORE
CONSISTS
OF
ONE
ACTIVE
ONE
REFERENCE
AND
ONE
GROUND
ELECTRODE
MULTI
CHANNEL
CONFIGURATIONS
CAN
COMPRISE
UP
TO
OR
ACTIVE
ELECTRODES
THESE
ELECTRODES
ARE
USUALLY
MADE
OF
SILVER
CHLORIDE
AGCL
ELECTRODE
SCALP
CONTACT
IMPEDANCE
SHOULD
BE
BETWEEN
KΩ
AND
KΩ
TO
RECORD
AN
ACCURATE
SIGNAL
THE
ELECTRODE
TISSUE
INTERFACE
IS
NOT
ONLY
RESISTIVE
BUT
ALSO
CAPACITIVE
AND
IT
THEREFORE
BEHAVES
AS
A
LOW
PASS
FILTER
THE
IMPEDANCE
DEPENDS
ON
SEVERAL
FACTORS
SUCH
AS
THE
INTERFACE
LAYER
ELECTRODE
SURFACE
AREA
AND
TEMPERATURE
EEG
GEL
CREATES
A
CONDUCTIVE
PATH
BETWEEN
THE
SKIN
AND
EACH
ELECTRODE
THAT
REDUCES
THE
IMPEDANCE
USE
OF
THE
GEL
IS
CUMBERSOME
HOWEVER
AS
CONTINUED
MAINTENANCE
IS
REQUIRED
TO
ASSURE
A
RELATIVELY
GOOD
QUALITY
SIGNAL
ELECTRODES
THAT
DO
NOT
NEED
TO
USE
OF
GELS
CALLED
DRY
ELECTRODES
HAVE
BEEN
MADE
WITH
OTHER
MATERIALS
SUCH
AS
TITANIUM
AND
STAINLESS
STEEL
THESE
KINDS
OF
ELECTRODES
MAY
BE
DRY
ACTIVE
ELECTRODES
WHICH
HAVE
PREAMPLIFICATION
CIRCUITS
FOR
DEALING
WITH
VERY
HIGH
ELECTRODE
SKIN
INTERFACIAL
SENSORS
IMPEDANCES
OR
DRY
PASSIVE
ELECTRODES
WHICH
HAVE
NO
ACTIVE
CIRCUITS
BUT
ARE
LINKED
TO
EEG
RECORDING
SYSTEMS
WITH
ULTRA
HIGH
INPUT
IMPEDANCE
THE
AMPLITUDE
OF
ELECTRICAL
BIO
SIGNALS
IS
IN
THE
ORDER
OF
MICROVOLTS
CONSEQUENTLY
THE
SIGNAL
IS
VERY
SENSITIVE
TO
ELECTRONIC
NOISE
EXTERNAL
SOURCES
SUCH
POWER
LINES
MAY
GENERATE
BACKGROUND
NOISE
AND
THERMAL
SHOT
FLICKER
AND
BURST
NOISES
ARE
GENERATED
BY
INTERNAL
SOURCES
DESIGN
CONSIDERATIONS
SHOULD
BE
ADDRESSED
TO
REDUCE
THE
EFFECTS
OF
THE
NOISE
SUCH
AS
ELECTROMAGNETIC
INTERFERENCE
SHIELDING
OR
REDUCTION
FOR
COMMON
MODE
SIGNAL
AMONGST
OTHERS
EEG
COMPRISES
A
SET
OF
SIGNALS
WHICH
MAY
BE
CLASSIFIED
ACCORDING
TO
THEIR
FREQUENCY
WELL
KNOWN
FREQUENCY
RANGES
HAVE
BEEN
DEFINED
ACCORDING
TO
DISTRIBUTION
OVER
THE
SCALP
OR
BIOLOGICAL
SIGNIFICANCE
THESE
FREQUENCY
BANDS
ARE
REFERRED
TO
AS
DELTA
Δ
THETA
Θ
ALPHA
Α
BETA
Β
AND
GAMMA
Γ
FROM
LOW
TO
HIGH
RESPECTIVELY
RELEVANT
CHARACTERISTICS
OF
THESE
BANDS
ARE
DETAILED
BELOW
THE
DELTA
BAND
LIES
BELOW
HZ
AND
THE
AMPLITUDE
OF
DELTA
SIGNALS
DETECTED
IN
BABIES
DECREASES
AS
THEY
AGE
DELTA
RHYTHMS
ARE
USUALLY
ONLY
OBSERVED
IN
ADULTS
IN
DEEP
SLEEP
STATE
AND
ARE
UNUSUAL
IN
ADULTS
IN
AN
AWAKE
STATE
A
LARGE
AMOUNT
OF
DELTA
ACTIVITY
IN
AWAKE
ADULTS
IS
ABNORMAL
AND
IS
RELATED
TO
NEUROLOGICAL
DISEASES
DUE
TO
LOW
FREQUENCY
IT
IS
EASY
TO
CONFUSE
DELTA
WAVES
WITH
ARTIFACT
SIGNALS
WHICH
ARE
CAUSED
BY
THE
LARGE
MUSCLES
OF
THE
NECK
OR
JAW
THETA
WAVES
LIE
WITHIN
THE
TO
HZ
RANGE
IN
A
NORMAL
AWAKE
ADULT
ONLY
A
SMALL
AMOUNT
OF
THETA
FREQUENCIES
CAN
BE
RECORDED
A
LARGER
AMOUNT
OF
THETA
FREQUENCIES
CAN
BE
SEEN
IN
YOUNG
CHILDREN
OLDER
CHILDREN
AND
ADULTS
IN
DROWSY
MEDITATIVE
OR
SLEEP
STATES
LIKE
DELTA
WAVES
A
LARGE
AMOUNT
OF
THETA
ACTIVITY
IN
AWAKE
ADULTS
IS
RELATED
TO
NEUROLOGICAL
DISEASE
THETA
BAND
HAS
BEEN
ASSOCIATED
WITH
MEDITATIVE
CONCENTRATION
AND
A
WIDE
RANGE
OF
COGNITIVE
PROCESSES
SUCH
AS
MENTAL
CALCULATION
MAZE
TASK
DEMANDS
OR
CONSCIOUS
AWARENESS
ALPHA
RHYTHMS
ARE
FOUND
OVER
THE
OCCIPITAL
REGION
IN
THE
BRAIN
THESE
WAVES
LIE
WITHIN
THE
TO
HZ
RANGE
THEIR
AMPLITUDE
INCREASES
WHEN
THE
EYES
CLOSE
AND
THE
BODY
RELAXES
AND
THEY
ATTENUATE
WHEN
THE
EYES
OPEN
AND
MENTAL
EFFORT
IS
MADE
THESE
RHYTHMS
PRIMARILY
REFLECT
VISUAL
PROCESSING
IN
THE
OCCIPITAL
BRAIN
REGION
AND
MAY
ALSO
BE
RELATED
TO
THE
MEMORY
BRAIN
FUNCTION
THERE
IS
ALSO
EVIDENCE
THAT
ALPHA
ACTIVITY
MAY
BE
ASSOCIATED
WITH
MENTAL
EFFORT
INCREASING
MENTAL
EFFORT
CAUSES
A
SUPPRESSION
OF
ALPHA
ACTIVITY
PARTICULARLY
FROM
THE
FRONTAL
AREAS
CONSEQUENTLY
THESE
RHYTHMS
MIGHT
BE
USEFUL
SIGNALS
TO
MEASURE
MENTAL
EFFORT
MU
RHYTHMS
MAY
BE
FOUND
IN
THE
SAME
RANGE
AS
ALPHA
RHYTHMS
ALTHOUGH
THERE
ARE
IMPORTANT
PHYSIOLOGICAL
DIFFERENCES
BETWEEN
BOTH
IN
CONTRAST
TO
ALPHA
RHYTHMS
MU
RHYTHMS
ARE
STRONGLY
CONNECTED
TO
MOTOR
ACTIVITIES
AND
IN
SOME
CASES
APPEAR
TO
CORRELATE
WITH
BETA
RHYTHMS
BETA
RHYTHMS
WITHIN
THE
TO
HZ
RANGE
ARE
RECORDED
IN
THE
FRONTAL
AND
CENTRAL
REGIONS
OF
THE
BRAIN
AND
ARE
ASSOCIATED
WITH
MOTOR
ACTIVITIES
BETA
RHYTHMS
ARE
DESYNCHRONIZED
DURING
REAL
MOVEMENT
OR
MOTOR
IMAGERY
BETA
WAVES
ARE
CHARACTERIZED
BY
THEIR
SYMMETRICAL
DISTRIBUTION
WHEN
THERE
IS
NO
MOTOR
ACTIVITY
HOWEVER
IN
CASE
OF
ACTIVE
MOVEMENT
THE
BETA
WAVES
ATTENUATE
AND
THEIR
SYMMETRICAL
DISTRIBUTION
CHANGES
GAMMA
RHYTHMS
BELONG
TO
THE
FREQUENCY
RANGE
FROM
TO
HZ
THE
PRESENCE
OF
GAMMA
WAVES
IN
THE
BRAIN
ACTIVITY
OF
A
HEALTHY
ADULT
IS
RELATED
TO
CERTAIN
MOTOR
FUNCTIONS
OR
PERCEPTIONS
AMONG
OTHERS
SOME
EXPERIMENTS
HAVE
REVEALED
A
RELATIONSHIP
IN
NORMAL
HUMANS
BETWEEN
MOTOR
ACTIVITIES
AND
GAMMA
WAVES
DURING
MAXIMAL
MUSCLE
CONTRACTION
THIS
GAMMA
BAND
COHERENCE
IS
REPLACED
BY
A
BETA
BAND
COHERENCE
DURING
WEAK
CONTRACTIONS
SUGGESTING
A
CORRELATION
BETWEEN
GAMMA
OR
BETA
SENSORS
CORTICAL
OSCILLATORY
ACTIVITY
AND
FORCE
ALSO
SEVERAL
STUDIES
HAVE
PROVIDED
EVIDENCE
FOR
THE
ROLE
OF
GAMMA
ACTIVITY
IN
THE
PERCEPTION
OF
BOTH
VISUAL
AND
AUDITORY
STIMULI
GAMMA
RHYTHMS
ARE
LESS
COMMONLY
USED
IN
EEG
BASED
BCI
SYSTEMS
BECAUSE
ARTIFACTS
SUCH
AS
ELECTROMYOGRAPHY
EMG
OR
ELECTROOCULOGRAPHY
EOG
ARE
LIKELY
TO
AFFECT
THEM
NEVERTHELESS
THIS
RANGE
IS
ATTRACTING
GROWING
ATTENTION
IN
BCI
RESEARCH
BECAUSE
COMPARED
TO
TRADITIONAL
BETA
AND
ALPHA
SIGNALS
GAMMA
ACTIVITY
MAY
INCREASE
THE
INFORMATION
TRANSFER
RATE
AND
OFFER
HIGHER
SPATIAL
SPECIFITY
AS
EXPLAINED
ABOVE
EEG
IS
RECORDED
BY
ELECTRODES
THE
ELECTRODES
PLACED
OVER
THE
SCALP
ARE
COMMONLY
BASED
ON
THE
INTERNATIONAL
SYSTEM
WHICH
HAS
BEEN
STANDARDIZED
BY
THE
AMERICAN
ELECTROENCEPHALOGRAPHIC
SOCIETY
THE
SYSTEM
USES
TWO
REFERENCE
POINTS
IN
THE
HEAD
TO
DEFINE
THE
ELECTRODE
LOCATION
ONE
OF
THESE
REFERENCE
POINTS
IS
THE
NASION
LOCATED
AT
THE
TOP
OF
THE
NOSE
AT
THE
SAME
LEVEL
AS
THE
EYES
THE
OTHER
REFERENCE
POINT
IS
THE
INION
WHICH
IS
FOUND
IN
THE
BONY
LUMP
AT
THE
BASE
OF
THE
SKULL
THE
TRANSVERSE
AND
MEDIAN
PLANES
DIVIDE
THE
SKULL
FROM
THESE
TWO
POINTS
THE
ELECTRODE
LOCATIONS
ARE
DETERMINED
BY
MARKING
THESE
PLANES
AT
INTERVALS
OF
AND
FIGURE
THE
LETTERS
IN
EACH
LOCATION
CORRESPONDS
TO
SPECIFIC
BRAIN
REGIONS
IN
SUCH
A
WAY
THAT
A
REPRESENTS
THE
EAR
LOBE
C
THE
CENTRAL
REGION
P
G
THE
NASOPHARYNGEAL
P
THE
PARIETAL
F
THE
FRONTAL
F
P
THE
FRONTAL
POLAR
AND
O
THE
OCCIPITAL
AREA
MEG
IS
A
NON
INVASIVE
IMAGING
TECHNIQUE
THAT
REGISTERS
THE
BRAIN
MAGNETIC
ACTIVITY
BY
MEANS
OF
MAGNETIC
INDUCTION
MEG
MEASURES
THE
INTRACELLULAR
CURRENTS
FLOWING
THROUGH
DENDRITES
WHICH
PRODUCE
MAGNETIC
FIELDS
THAT
ARE
MEASURABLE
OUTSIDE
OF
THE
HEAD
THE
NEUROPHYSIOLOGICAL
PROCESSES
THAT
PRODUCE
MEG
SIGNALS
ARE
IDENTICAL
TO
THOSE
THAT
PRODUCE
EEG
SIGNALS
NEVERTHELESS
WHILE
EEG
IS
EXTREMELY
SENSITIVE
TO
SECONDARY
CURRENT
SOURCES
MEG
IS
MORE
SENSITIVE
TO
THOSE
OF
PRIMARY
AGNETIC
FIELDS
ARE
DETECTED
BY
SUPERCONDUCTING
QUANTUM
INTERFERENCES
DEVICES
WHICH
ARE
EXTREMELY
SENSITIVE
TO
MAGNETIC
DISTURBANCES
PRODUCED
BY
NEURAL
ACTIVITY
THE
ELECTRONIC
EQUIPMENT
THAT
MEASURES
MAGNETIC
BRAIN
ACTIVITY
IS
COOLED
TO
ALMOST
DEGREES
CELSIUS
TO
FACILITATE
SENSOR
SUPERCONDUCTIVITY
MEG
REQUIRES
EFFECTIVE
SHIELDING
FROM
ELECTROMAGNETIC
INTERFERENCES
THE
ELECTRONIC
EQUIPMENT
IS
INSTALLED
INSIDE
A
MAGNETICALLY
SHIELDED
ROOM
WHICH
ATTENUATES
THE
EFFECTS
OF
MAGNETIC
FIELDS
FROM
EXTERNAL
SOURCES
MEG
PROVIDES
SIGNALS
WITH
HIGHER
SPATIOTEMPORAL
RESOLUTION
THAN
EEG
WHICH
REDUCES
THE
TRAINING
TIME
NEEDED
TO
CONTROL
A
BCI
AND
SPEEDS
UP
RELIABLE
COMMUNICATIONS
MEG
HAS
ALSO
BEEN
SUCCESSFULLY
USED
TO
LOCALIZE
ACTIVE
REGIONS
INSIDE
THE
BRAIN
IN
SPITE
OF
THESE
ADVANTAGEOUS
FEATURES
MEG
IS
NOT
OFTEN
USED
IN
BCI
DESIGN
BECAUSE
MEG
TECHNOLOGY
IS
TOO
BULKY
AND
EXPENSIVE
TO
BECOME
AN
ACQUISITION
MODALITY
SUITABLE
FOR
EVERYDAY
USE
IN
LAL
ET
AL
PRESENTED
THE
FIRST
ONLINE
MEG
BASED
BCI
ALTHOUGH
FURTHER
STUDIES
HAVE
FOLLOWED
MEG
BASED
BCIS
AS
COMPARED
TO
EEG
BASED
BCIS
ARE
STILL
AT
AN
EARLY
STAGE
ELECTROCORTICOGRAPHY
ECOG
ECOG
IS
A
TECHNIQUE
THAT
MEASURES
ELECTRICAL
ACTIVITY
IN
THE
CEREBRAL
CORTEX
BY
MEANS
OF
ELECTRODES
PLACED
DIRECTLY
ON
THE
SURFACE
OF
THE
BRAIN
COMPARED
TO
EEG
ECOG
PROVIDES
HIGHER
TEMPORAL
AND
SPATIAL
RESOLUTION
AS
WELL
AS
HIGHER
AMPLITUDES
AND
A
LOWER
VULNERABILITY
TO
ARTIFACTS
SUCH
AS
BLINKS
AND
EYE
MOVEMENT
HOWEVER
ECOG
IS
AN
INVASIVE
RECORDING
MODALITY
WHICH
REQUIRES
A
CRANIOTOMY
TO
IMPLANT
AN
ELECTRODE
GRID
ENTAILING
SIGNIFICANT
HEALTH
HAZARDS
FOR
THAT
REASON
THE
FIRST
STUDIES
ON
ECOG
WERE
WITH
ANIMALS
EARLY
STUDIES
INVOLVING
ANIMALS
EVALUATED
THE
LONG
TERM
STABILITY
OF
THE
SIGNALS
FROM
THE
BRAIN
THAT
ECOG
COULD
ACQUIRE
THE
RESULTS
SHOWED
THAT
SUBDURAL
ELECTRODES
COULD
PROVIDE
STABLE
SIGNALS
OVER
SEVERAL
MONTHS
NEVERTHELESS
THE
LONG
TERM
STABILITY
OF
THE
SIGNALS
ACQUIRED
BY
ECOG
IS
CURRENTLY
UNCLEAR
MORE
RECENT
EXPERIMENTS
WITH
MONKEYS
HAVE
SHOWN
THAT
ECOG
CAN
PERFORM
AT
A
HIGH
LEVEL
FOR
MONTHS
WITHOUT
ANY
DRIFT
IN
ACCURACY
OR
RECALIBRATION
THE
HAND
POSITIONS
AND
ARM
JOINT
ANGLES
COULD
BE
SUCCESSFULLY
DECODED
DURING
ASYNCHRONOUS
MOVEMENTS
THESE
STUDIES
HAVE
ALSO
DEVELOPED
MINIMALLY
INVASIVE
PROTOCOLS
TO
IMPLANT
THE
ECOG
PROBES
IN
HUMANS
ECOG
HAS
BEEN
USED
FOR
THE
ANALYSIS
OF
ALPHA
AND
BETA
WAVES
OR
GAMMA
WAVES
PRODUCED
DURING
VOLUNTARY
MOTOR
ACTION
WITH
REGARD
TO
THE
USE
OF
ECOG
IN
BCIS
SYSTEMS
LEVINE
ET
AL
DESIGNED
A
BCI
WHICH
CLASSIFIED
MOTOR
ACTIONS
ON
THE
BASIS
OF
THE
IDENTIFICATION
OF
THE
EVENT
RELATED
POTENTIALS
ERP
USING
ECOG
LEUTHARDT
ET
AL
SHOWED
FOR
THE
FIRST
TIME
THAT
AN
ECOG
BASED
BCI
COULD
PROVIDE
INFORMATION
TO
CONTROL
A
ONE
DIMENSIONAL
CURSOR
AS
THIS
INFORMATION
IS
MORE
PRECISE
AND
MORE
QUICKLY
ACQUIRED
THAN
BY
EEG
BASED
BCIS
SOME
YEARS
LATER
SCHALK
ET
AL
PRESENTED
A
MORE
ADVANCED
ECOG
BASED
BCI
WHICH
ALLOWED
THE
USER
TO
CONTROL
A
TWO
DIMENSIONAL
CURSOR
THE
RESULTS
OF
ALL
THESE
STUDIES
MIGHT
MAKE
IT
MORE
FEASIBLE
FOR
PEOPLE
WITH
SEVERE
MOTOR
DISABILITIES
TO
USE
ECOG
BASED
BCIS
FOR
THEIR
COMMUNICATION
AND
CONTROL
NEEDS
SENSORS
INTRACORTICAL
NEURON
RECORDING
INTRACORTICAL
NEURON
RECORDING
IS
A
NEUROIMAGING
TECHNIQUE
THAT
MEASURES
ELECTRICAL
ACTIVITY
INSIDE
THE
GRAY
MATTER
OF
THE
BRAIN
IT
IS
AN
INVASIVE
RECORDING
MODALITY
THAT
NEEDS
TO
IMPLANT
MICROELECTRODE
ARRAYS
INSIDE
THE
CORTEX
TO
CAPTURE
SPIKE
SIGNALS
AND
LOCAL
FIELD
POTENTIALS
FROM
NEURONS
THREE
SIGNALS
CAN
BE
OBTAINED
BY
INTRACORTICAL
NEURON
RECORDING
SINGLE
UNIT
ACTIVITY
SUA
MULTI
UNIT
ACTIVITY
MUA
AND
LOCAL
FIELD
POTENTIALS
LFPS
SUA
IS
OBTAINED
BY
HIGH
PASS
FILTERING
HZ
OF
THE
SIGNAL
OF
A
SINGLE
NEURON
MUA
IS
OBTAINED
IN
THE
SAME
WAY
BUT
THE
SIGNALS
MAY
COME
FROM
MULTIPLE
NEURONS
LFPS
ARE
EXTRACTED
BY
LOW
PASS
FILTERING
HZ
OF
THE
NEURON
ACTIVITY
IN
THE
VICINITY
OF
AN
ELECTRODE
TIP
LFPS
ARE
ANALOG
SIGNALS
WHEREAS
SUA
AND
MUA
MEASURE
THE
SPIKING
ACTIVITY
OF
SINGLE
NEURONS
AND
CAN
BE
REDUCED
TO
DISCRETE
EVENTS
IN
TIME
INTRACORTICAL
NEURON
RECORDING
PROVIDES
MUCH
HIGHER
SPATIAL
AND
TEMPORAL
RESOLUTION
THAN
EEG
RECORDING
HENCE
THE
INTRACORTICAL
SIGNALS
MAY
BE
EASIER
TO
USE
THAN
EEG
SIGNALS
HOWEVER
SIGNAL
QUALITY
MAY
BE
AFFECTED
BY
THE
REACTION
OF
CEREBRAL
TISSUE
TO
THE
IMPLANTED
RECORDING
MICROELECTRODE
AND
BY
CHANGES
IN
THE
SENSITIVITY
OF
THE
MICROELECTRODE
WHICH
MAY
BE
PROGRESSIVELY
DAMAGED
OVER
THE
COURSE
OF
DAYS
AND
YEARS
THE
USER
CAN
NATURALLY
ADAPT
TO
THESE
SLOW
CHANGES
IN
THE
RELATIVE
SENSITIVITY
OF
THE
MICROELECTRODE
WITHOUT
THE
NEED
FOR
SPECIFIC
RETRAINING
NEVERTHELESS
PERIODIC
RECALIBRATIONS
OF
ELECTRODE
SENSITIVITY
MAY
BE
NECESSARY
THE
FIRST
ATTEMPTS
IN
THE
INTRACORTICAL
NEURON
RECORDING
FIELD
WERE
MADE
IN
ANIMALS
MULTIELECTRODE
ARRAYS
HAVE
BEEN
USED
TO
RECORD
NEURAL
ACTIVITY
FROM
THE
MOTOR
CORTEX
IN
MONKEYS
OR
RATS
DURING
LEARNED
MOVEMENTS
THESE
INITIAL
STUDIES
HAVE
SHOWN
THAT
INTRACORTICAL
NEURON
RECORDINGS
CAN
INDICATE
THE
NATURE
OF
A
MOVEMENT
AND
ITS
DIRECTION
THESE
STUDIES
DO
NOT
REVEAL
WHETHER
THE
SAME
PATTERNS
WILL
BE
PRESENT
WHEN
THE
REAL
MOVEMENTS
ARE
NOT
MADE
IN
THAT
REGARD
TAYLOR
AND
SCHWARTZ
EXPERIMENTED
WITH
RHESUS
MACAQUES
WHICH
MADE
REAL
AND
VIRTUAL
ARM
MOVEMENTS
IN
A
COMPUTER
THE
RESULTS
SUGGESTED
THAT
THE
SAME
PATTERNS
PERSISTED
THE
MOST
RECENT
STUDIES
WITH
MONKEYS
INVESTIGATED
THE
CONTROL
OF
PROSTHETIC
DEVICES
FOR
DIRECT
REAL
TIME
INTERACTION
WITH
THE
PHYSICAL
ENVIRONMENT
WITH
REGARD
TO
THE
APPLICATION
OF
INTRACORTICAL
NEURON
RECORDING
IN
BCI
SYSTEMS
MICROELECTRODE
ARRAYS
SUCH
AS
THE
UTAH
INTRACORTICAL
ELECTRODE
ARRAY
UIEA
HAVE
BEEN
REPORTED
AS
A
SUITABLE
MEANS
OF
PROVIDING
SIMULTANEOUS
AND
PROPORTIONAL
CONTROL
OF
A
LARGE
NUMBER
OF
EXTERNAL
DEVICES
ALSO
KENNEDY
ET
AL
EMPLOYED
CORTICAL
CONTROL
SIGNALS
TO
DESIGN
A
BCI
THAT
ALLOWED
USERS
TO
CONTROL
CURSOR
MOVEMENT
AND
FLEXION
OF
A
CYBER
DIGIT
FINGER
ON
A
VIRTUAL
HAND
FUNCTIONAL
MAGNETIC
RESONANCE
IMAGING
FMRI
FMRI
IS
A
NON
INVASIVE
NEUROIMAGING
TECHNIQUE
WHICH
DETECTS
CHANGES
IN
LOCAL
CEREBRAL
BLOOD
VOLUME
CEREBRAL
BLOOD
FLOW
AND
OXYGENATION
LEVELS
DURING
NEURAL
ACTIVATION
BY
MEANS
OF
ELECTROMAGNETIC
FIELDS
FMRI
IS
GENERALLY
PERFORMED
USING
MRI
SCANNERS
WHICH
APPLY
ELECTROMAGNETIC
FIELDS
OF
STRENGTH
IN
THE
ORDER
OF
OR
THE
MAIN
ADVANTAGE
OF
THE
USE
OF
FMRI
IS
HIGH
SPACE
RESOLUTION
FOR
THAT
REASON
FMRI
HAVE
BEEN
APPLIED
FOR
LOCALIZING
ACTIVE
REGIONS
INSIDE
THE
BRAIN
HOWEVER
FMRI
HAS
A
LOW
TEMPORAL
RESOLUTION
OF
ABOUT
OR
SECONDS
ADDITIONALLY
THE
HEMODYNAMIC
RESPONSE
INTRODUCES
A
PHYSIOLOGICAL
DELAY
FROM
TO
SECONDS
FMRI
APPEARS
UNSUITABLE
FOR
RAPID
COMMUNICATION
IN
BCI
SYSTEMS
AND
IS
HIGHLY
SUSCEPTIBLE
TO
HEAD
MOTION
ARTIFACTS
SENSORS
IN
BCI
SYSTEMS
FMRI
IS
TYPICALLY
USED
TO
MEASURE
THE
BLOOD
OXYGEN
LEVEL
DEPENDENT
BOLD
DURING
NEURONAL
ACTIVATION
ALTHOUGH
THE
BOLD
SIGNAL
IS
NOT
DIRECTLY
RELATED
TO
NEURONAL
ACTIVITY
A
CORRESPONDENCE
BETWEEN
BOTH
DOES
EXIST
THE
USE
OF
FMRI
IN
BCI
TECHNOLOGY
IS
RELATIVELY
RECENT
BEFORE
THE
EMERGENCE
OF
REAL
TIME
FMRI
BRAIN
ACTIVITY
RECORDING
BY
FMRI
HAS
TRADITIONALLY
TAKEN
A
LONG
TIME
THE
DATA
ACQUIRED
BY
FMRI
TECHNIQUES
WERE
PROCESSED
OFFLINE
AND
THE
RESULTS
ONLY
BECAME
AVAILABLE
AFTER
SEVERAL
HOURS
OR
EVEN
DAYS
FMRI
BASED
BCIS
HAVE
BEEN
MADE
POSSIBLE
THANKS
TO
THE
DEVELOPMENT
OF
REAL
TIME
FMRI
THE
INFORMATION
TRANSFER
RATE
IN
FMRI
BASED
BCIS
IS
BETWEEN
AND
BITS
MIN
NON
CLINICAL
FMRI
APPLICATIONS
ARE
NOT
EXPECTED
BECAUSE
FMRI
REQUIRES
OVERLY
BULKY
AND
EXPENSIVE
HARDWARE
NEAR
INFRARED
SPECTROSCOPY
NIRS
NIRS
IS
AN
OPTICAL
SPECTROSCOPY
METHOD
THAT
EMPLOYS
INFRARED
LIGHT
TO
CHARACTERIZE
NONINVASIVELY
ACQUIRED
FLUCTUATIONS
IN
CEREBRAL
METABOLISM
DURING
NEURAL
ACTIVITY
INFRARED
LIGHT
PENETRATES
THE
SKULL
TO
A
DEPTH
OF
APPROXIMATELY
CM
BELOW
ITS
SURFACE
WHERE
THE
INTENSITY
OF
THE
ATTENUATED
LIGHT
ALLOWS
ALTERATIONS
IN
OXYHEMOGLOBIN
AND
DEOXYHEMOGLOBIN
CONCENTRATIONS
TO
BE
MEASURED
DUE
TO
SHALLOW
LIGHT
PENETRATION
IN
THE
BRAIN
THIS
OPTICAL
NEUROIMAGING
TECHNIQUE
IS
LIMITED
TO
THE
OUTER
CORTICAL
LAYER
IN
A
SIMILAR
WAY
TO
FMRI
ONE
OF
THE
MAJOR
LIMITATIONS
OF
NIRS
IS
THE
NATURE
OF
THE
HEMODYNAMIC
RESPONSE
BECAUSE
VASCULAR
CHANGES
OCCUR
A
CERTAIN
NUMBER
OF
SECONDS
AFTER
ITS
ASSOCIATED
NEURAL
ACTIVITY
THE
SPATIAL
RESOLUTION
OF
NIRS
IS
QUITE
LOW
IN
THE
ORDER
OF
CM
NEVERTHELESS
NIRS
OFFERS
LOW
COST
HIGH
PORTABILITY
AND
AN
ACCEPTABLE
TEMPORAL
RESOLUTION
IN
THE
ORDER
OF
MILLISECONDS
A
NIRS
SYSTEM
CONSISTS
OF
A
LIGHT
SOURCE
A
DRIVING
ELECTRONIC
DEVICE
A
LIGHT
DETECTOR
SIGNAL
PROCESSING
DEVICES
AND
A
RECORDING
DEVICE
THE
LIGHT
SOURCE
IS
AN
INFRARED
EMITTING
DIODE
IRED
PLACED
IN
DIRECT
CONTACT
WITH
THE
SCALP
THE
DRIVING
ELECTRONIC
DEVICE
IS
AN
ELECTRONIC
CIRCUIT
THAT
CONTROLS
THE
IRED
IN
ORDER
TO
MODULATE
THE
LIGHT
THE
LIGHT
DETECTOR
IS
A
PHOTODIODE
PLACED
RIGHT
NEXT
TO
THE
LIGHT
SOURCE
THE
SIGNAL
PROCESSING
DEVICES
ARE
AMPLIFIERS
AND
FILTERS
THAT
PROCESS
THE
ELECTRICAL
SIGNAL
AND
REDUCE
THE
NOISE
DUE
TO
AMBIENT
LIGHT
THE
RECORDING
DEVICE
IS
A
PERSONAL
COMPUTER
OR
ANY
OTHER
DEVICE
THAT
DIGITALIZES
STORES
AND
DISPLAYS
THE
ELECTRICAL
SIGNAL
ENSURING
GOOD
COUPLING
LIGHT
FROM
THE
OPTICAL
SOURCES
AND
DETECTORS
TO
AND
FROM
THE
SUBJECT
HEAD
IS
NOT
A
TRIVIAL
ISSUE
HEAD
MOTIONS
OR
HAIR
OBSTRUCTION
CAN
WORSEN
PERFORMANCE
AND
SIGNAL
QUALITY
GOOD
QUALITY
SIGNALS
AND
NOISE
REDUCTION
ESPECIALLY
BACKGROUND
NOISE
INDUCED
BY
HEAD
MOTIONS
ARE
IMPORTANT
REQUIREMENTS
IN
REAL
TIME
BCI
SYSTEMS
HAIR
OBSTRUCTION
CAN
BE
OVERCOME
BY
COMBING
THE
HAIR
OUT
OF
THE
PHOTONS
PATH
BY
MEANS
OF
HAIR
GEL
AND
HAIR
CLIPS
NOISE
CAN
BE
REDUCED
PARTIALLY
BY
BANDPASS
FILTERING
MOVING
AVERAGING
AND
WIENER
FILTERING
THESE
CLASSES
OF
ALGORITHMS
USUALLY
FAIL
TO
REMOVE
ABRUPT
SPIKE
LIKE
NOISE
PRODUCED
BY
HEAD
MOTION
HEAD
MOTION
ARTIFACTS
CAN
BE
MINIMIZED
BY
ENSURING
RIGID
OPTODE
POSITIONING
SOLUTIONS
HAVE
BEEN
INTRODUCED
THAT
ARE
BASED
ON
HELMETS
THERMOPLASTIC
MOLDED
TO
THE
CONTOURS
OF
EACH
SUBJECT
HEAD
SPRING
LOADED
FIBERS
ATTACHED
TO
SEMI
RIGID
PLASTIC
FORMS
AND
FIBERS
EMBEDDED
IN
NEOPRENE
RUBBER
FORMS
BACKGROUND
NOISE
EFFECTS
CAN
ALSO
BE
ATTENUATED
BY
EXPLOITING
THE
STRONG
STATISTICAL
ASSOCIATION
BETWEEN
OXYGENATED
AND
DEOXYGENATED
HEMOGLOBIN
DYNAMICS
SENSORS
ALTHOUGH
NIRS
IS
RELATIVELY
NEW
MEASUREMENT
MODALITY
NIRS
PROMISES
TO
BE
A
POTENT
NEUROIMAGING
MODALITY
FOR
FUTURE
APPLICABILITY
TO
BCIS
NIRS
PROVIDES
NOW
A
LOW
INFORMATION
TRANSFER
RATE
OF
ABOUT
BITS
MIN
BUT
IT
WOULD
BE
INCREASED
IN
THE
FUTURE
THIS
NEUROIMAGING
MODALITY
MIGHT
BE
A
GOOD
ALTERNATIVE
TO
EEG
AS
NEITHER
CONDUCTIVE
GEL
NOR
CORROSIVE
ELECTRODES
ARE
REQUIRED
NEVERTHELESS
COMMUNICATION
SPEEDS
IN
NIRS
BASED
BCIS
ARE
LIMITED
DUE
TO
THE
INHERENT
DELAYS
OF
THE
HEMODYNAMIC
RESPONSE
SOME
STUDIES
HAVE
ALREADY
DEMONSTRATED
THE
FEASIBILITY
OF
MENTAL
TASK
DETECTION
THROUGH
NIRS
DERIVED
OPTICAL
RESPONSES
CONTROL
SIGNAL
TYPES
IN
BCIS
THE
PURPOSE
OF
A
BCI
IS
TO
INTERPRET
USER
INTENTIONS
BY
MEANS
OF
MONITORING
CEREBRAL
ACTIVITY
BRAIN
SIGNALS
INVOLVE
NUMEROUS
SIMULTANEOUS
PHENOMENA
RELATED
TO
COGNITIVE
TASKS
MOST
OF
THEM
ARE
STILL
INCOMPREHENSIBLE
AND
THEIR
ORIGINS
ARE
UNKNOWN
HOWEVER
THE
PHYSIOLOGICAL
PHENOMENA
OF
SOME
BRAIN
SIGNALS
HAVE
BEEN
DECODED
IN
SUCH
WAY
THAT
PEOPLE
MAY
LEARN
TO
MODULATE
THEM
AT
WILL
TO
ENABLE
THE
BCI
SYSTEMS
TO
INTERPRET
THEIR
INTENTIONS
THESE
SIGNALS
ARE
REGARDED
AS
POSSIBLE
CONTROL
SIGNALS
IN
BCIS
NUMEROUS
STUDIES
HAVE
DESCRIBED
A
VAST
GROUP
OF
BRAIN
SIGNALS
THAT
MIGHT
SERVE
AS
CONTROL
SIGNALS
IN
BCI
SYSTEMS
NEVERTHELESS
ONLY
THOSE
CONTROL
SIGNALS
EMPLOYED
IN
CURRENT
BCI
SYSTEMS
WILL
BE
DISCUSSED
BELOW
VISUAL
EVOKED
POTENTIALS
SLOW
CORTICAL
POTENTIALS
EVOKED
POTENTIALS
AND
SENSORIMOTOR
RHYTHMS
ALL
THE
SIGNAL
CONTROLS
ARE
LISTED
IN
TABLE
ALONG
WITH
SOME
OF
THEIR
MAIN
FEATURES
TABLE
SUMMARY
OF
CONTROL
SIGNALS
SIGNAL
PHYSIOLOGICAL
PHENOMENA
NUMBER
OF
CHOICES
TRAINING
TRANSFER
INFORMATION
RATE
VEP
BRAIN
SIGNAL
MODULATIONS
IN
THE
VISUAL
CORTEX
HIGH
NO
BITS
MIN
SCP
SLOW
VOLTAGES
SHIFT
IN
THE
BRAIN
SIGNALS
LOW
OR
VERY
DIFFICULT
YES
BITS
MIN
POSITIVE
PEAKS
DUE
TO
INFREQUENT
STIMULUS
HIGH
NO
BITS
MIN
SENSORIMOTOR
RHYTHMS
MODULATIONS
IN
SENSORIMOTOR
RHYTHMS
SYNCHRONIZED
TO
MOTOR
ACTIVITIES
LOW
YES
BITS
MIN
VISUAL
EVOKED
POTENTIALS
VEPS
VEPS
ARE
BRAIN
ACTIVITY
MODULATIONS
THAT
OCCUR
IN
THE
VISUAL
CORTEX
AFTER
RECEIVING
A
VISUAL
STIMULUS
THESE
MODULATIONS
ARE
RELATIVELY
EASY
TO
DETECT
SINCE
THE
AMPLITUDE
OF
VEPS
INCREASES
ENORMOUSLY
AS
THE
STIMULUS
IS
MOVED
CLOSER
TO
THE
CENTRAL
VISUAL
FIELD
VEPS
MAY
BE
CLASSIFIED
ACCORDING
TO
THREE
DIFFERENT
CRITERIA
I
BY
THE
MORPHOLOGY
OF
THE
OPTICAL
STIMULI
II
BY
THE
FREQUENCY
OF
VISUAL
STIMULATION
AND
III
BY
FIELD
STIMULATION
ACCORDING
TO
THE
FIRST
CRITERION
VEPS
MAY
BE
CAUSED
BY
USING
FLASH
STIMULATION
OR
USING
GRAPHIC
PATTERNS
SUCH
AS
CHECKERBOARD
LATTICE
GATE
AND
RANDOM
DOT
MAP
ACCORDING
TO
THE
FREQUENCY
VEPS
CAN
ALSO
BE
CLASSIFIED
AS
TRANSIENT
VEPS
TVEPS
AND
AS
STEADY
STATE
VEPS
SSVEPS
TVEPS
OCCUR
WHEN
THE
SENSORS
FREQUENCY
OF
VISUAL
STIMULATION
IS
BELOW
HZ
WHILE
SSVEPS
OCCUR
IN
REACTION
TO
STIMULI
OF
A
HIGHER
FREQUENCY
LASTLY
ACCORDING
TO
THE
THIRD
CRITERION
VEPS
CAN
BE
DIVIDED
INTO
WHOLE
FIELD
VEPS
HALF
FIELD
VEPS
AND
PART
FIELD
VEPS
DEPENDING
ON
THE
AREA
OF
ON
SCREEN
STIMULUS
FOR
INSTANCE
IF
ONLY
HALF
OF
THE
SCREEN
DISPLAYS
GRAPHICS
THE
OTHER
HALF
WILL
NOT
DISPLAY
ANY
VISUAL
STIMULATION
AND
THE
PERSON
WILL
LOOK
AT
THE
CENTRE
OF
THE
SCREEN
WHICH
WILL
INDUCE
A
HALF
FIELD
VEP
TVEPS
CAN
BE
ELICITED
BY
ANY
CHANGE
IN
THE
VISUAL
FIELD
THOSE
USED
MOST
FREQUENTLY
ARE
TVEPS
ARE
I
FLASH
TVEPS
THAT
ARE
CAUSED
BY
FLASHING
LIGHTS
II
PATTERN
ONSET
OFFSET
TVEPS
THAT
ARE
CAUSED
BY
LETTING
A
PATTERN
APPEAR
ABRUPTLY
ON
A
DIFFUSE
BACKGROUND
AND
III
PATTERN
REVERSAL
TVEPS
THAT
ARE
CAUSED
BY
REVERSING
THE
PHASE
OF
A
PATTERN
I
E
A
CHECKERBOARD
LATTICE
THAT
CHANGES
THE
CHECKS
FROM
BLACK
TO
WHITE
AND
FROM
WHITE
TO
BLACK
ABRUPTLY
THE
EVOKED
RESPONSES
VARY
WITH
THE
STIMULUS
PRESENTED
FLASH
TVEPS
PRESENT
A
SERIES
OF
NEGATIVE
AND
POSITIVE
PEAKS
THE
MOST
PROMINENTLY
PEAKS
ARE
NEGATIVE
AND
POSITIVE
PEAKS
AT
AROUND
MS
AND
MS
RESPECTIVELY
PATTERN
ONSET
OFFSET
TVEPS
HAVE
THREE
MAIN
PEAKS
POSITIVE
MS
NEGATIVE
MS
AND
POSITIVE
MS
PATTERN
REVERSAL
TVEPS
USUALLY
PRESENT
ONE
NEGATIVE
PEAK
AT
MS
ONE
POSITIVE
PEAK
AT
MS
AND
ONE
NEGATIVE
PEAK
AT
MS
SSVEPS
ARE
ELICITED
BY
THE
SAME
VISUAL
STIMULUS
IN
THIS
CASE
THE
STIMULUS
CHANGES
AT
A
FREQUENCY
HIGHER
THAN
HZ
IF
THE
STIMULUS
IS
A
FLASH
SSVEP
SHOWS
A
SINUSOIDAL
LIKE
WAVEFORM
THE
FUNDAMENTAL
FREQUENCY
OF
WHICH
IS
THE
SAME
AS
THE
BLINKING
FREQUENCY
OF
THE
STIMULUS
IF
THE
STIMULUS
IS
A
PATTERN
THE
SSVEP
OCCURS
AT
THE
REVERSAL
RATE
AND
AT
THEIR
HARMONICS
IN
CONTRAST
TO
TVEP
CONSTITUENT
DISCRETE
FREQUENCY
COMPONENTS
OF
SSVEPS
REMAIN
CLOSELY
CONSTANT
IN
AMPLITUDE
AND
PHASE
OVER
LONG
PERIODS
OF
TIME
SSVEPS
ARE
LESS
SUSCEPTIBLE
THAN
TVEPS
TO
ARTIFACTS
PRODUCED
BY
BLINKS
AND
EYE
MOVEMENTS
AND
TO
ELECTROMYOGRAPHIC
NOISE
CONTAMINATION
INDEED
TVEPS
NOT
ARE
TYPICALLY
USED
FOR
BCI
SSVEP
BASED
BCIS
ALLOW
USERS
TO
SELECT
A
TARGET
BY
MEANS
OF
AN
EYE
GAZE
THE
USER
VISUALLY
FIXES
ATTENTION
ON
A
TARGET
AND
THE
BCI
IDENTIFIES
THE
TARGET
THROUGH
SSVEP
FEATURES
ANALYSIS
CONSIDERING
A
BCI
AS
A
COMMUNICATIONS
CHANNEL
SSVEP
BASED
BCIS
CAN
BE
CLASSIFIED
INTO
THREE
CATEGORIES
DEPENDING
ON
THE
SPECIFIC
STIMULUS
SEQUENCE
MODULATION
IN
USE
TIME
MODULATED
VEP
T
VEP
BCIS
FREQUENCY
MODULATED
VEP
F
VEP
BCIS
AND
PSEUDORANDOM
CODE
MODULATED
VEP
C
VEP
BCIS
VEPS
THAT
REACT
TO
DIFFERENT
STIMULUS
SEQUENCES
SHOULD
BE
ORTHOGONAL
OR
NEAR
ORTHOGONAL
TO
EACH
OTHER
IN
SOME
DOMAIN
TO
ENSURE
RELIABLE
IDENTIFICATION
OF
THE
TARGET
IN
A
T
VEP
BCI
THE
FLASH
SEQUENCES
OF
DIFFERENT
TARGETS
ARE
ORTHOGONAL
IN
TIME
THAT
IS
THE
FLASH
SEQUENCES
FOR
DIFFERENT
TARGETS
ARE
EITHER
STRICTLY
NON
OVERLAPPING
OR
STOCHASTIC
IN
AN
F
VEP
BCI
EACH
TARGET
IS
FLASHED
AT
A
UNIQUE
FREQUENCY
GENERATING
A
PERIODIC
SEQUENCE
OF
EVOKED
RESPONSES
WITH
THE
SAME
FUNDAMENTAL
FREQUENCY
AS
ITS
HARMONICS
IN
A
C
VEP
BCI
PSEUDO
RANDOM
SEQUENCES
ARE
USED
THE
DURATION
OF
ON
AND
OFF
STATES
OF
EACH
TARGET
FLASH
IS
DETERMINED
BY
A
PSEUDORANDOM
SEQUENCE
SIGNAL
MODULATIONS
CAN
OPTIMIZE
THE
INFORMATION
TRANSFER
RATE
INDEED
CODE
MODULATION
PROVIDES
THE
HIGHEST
COMMUNICATION
SPEED
TABLE
SUMMARIZES
THE
FEATURES
OF
EACH
MODULATION
SENSORS
TABLE
FEATURES
OF
VEP
MODULATIONS
T
VEP
F
VEP
AND
C
VEP
VEP
MODULATION
FEATURES
T
VEP
RELATIVELY
LOW
INFORMATION
TRANSFER
RATE
BITS
MIN
SYNCHRONOUS
SIGNAL
IS
NECESSARY
NO
USER
TRAINING
REQUIRED
F
VEP
HIGH
INFORMATION
TRANSFER
RATE
BITS
MIN
SIMPLE
SYSTEM
CONFIGURATION
NO
USER
TRAINING
REQUIRED
MORE
SUITABLE
FOR
APPLICATION
WITH
FEW
OPTIONS
C
VEP
VERY
HIGH
INFORMATION
TRANSFER
RATE
BITS
MIN
SYNCHRONOUS
SIGNAL
IS
NECESSARY
USER
TRAINING
REQUIRED
MORE
SUITABLE
FOR
APPLICATION
WITH
MANY
OPTIONS
THE
TYPICAL
VEP
BASED
BCI
APPLICATION
DISPLAYS
FLASHING
STIMULI
SUCH
AS
DIGITS
OR
LETTERS
ON
A
SCREEN
TO
INDUCE
SSVEPS
WHILE
THE
USER
STARES
AT
ONE
OF
THE
SYMBOLS
THE
USER
CAN
MOVE
THEIR
GAZE
TO
THE
FLASHING
DIGITS
OR
LETTERS
IN
ORDER
TO
COMMUNICATE
WITH
THE
COMPUTER
THE
ADVANTAGE
OF
THIS
TYPE
OF
CONTROL
SIGNAL
IS
THAT
VERY
LITTLE
TRAINING
IS
REQUIRED
HOWEVER
IT
PRESENTS
THE
DRAWBACK
THAT
THE
USER
HAS
TO
WATCH
THE
SCREEN
AND
KEEP
HIS
EYES
FIXED
ON
ONE
POINT
THIS
TYPE
OF
CONTROL
SIGNAL
CAN
ONLY
BE
USED
FOR
EXOGENOUS
BCIS
SEE
SECTION
THEREFORE
VEPS
ARE
NOT
SUITABLE
FOR
PATIENTS
IN
ADVANCED
STAGES
OF
AMYOTROPHIC
LATERAL
SCLEROSIS
ALS
OR
WITH
UNCONTROLLABLE
EYE
OR
NECK
MOVEMENTS
SOME
INDEPENDENT
SSVEP
BASED
BCIS
THAT
ARE
CONTROLLED
BY
THE
ATTENTION
OF
THE
USER
HAVE
BEEN
INTRODUCED
TO
OVERCOME
THIS
DRAWBACK
SSVEP
ARE
USUALLY
ELICITED
THROUGH
LIGHT
EMITTING
DIODES
LEDS
CATHODE
RAY
TUBE
CRT
MONITORS
OR
LIQUID
CRYSTAL
DISPLAY
LCD
LEDS
OUTPERFORM
LCD
OR
CRT
STIMULATORS
BUT
THEY
NEED
MORE
COMPLEX
HARDWARE
LCD
AND
CRT
MONITORS
MAKE
THE
TARGET
PRESENTATION
EASIER
THAN
LED
STIMULATORS
BECAUSE
BOTH
SYSTEMS
CAN
EASILY
BE
CONNECTED
TO
A
PC
HOWEVER
LED
STIMULATORS
MAY
BE
PREFERABLE
FOR
A
MULTIPLE
TARGET
BCI
BECAUSE
THE
REFRESH
RATE
OF
AN
LCD
OR
CRT
MONITOR
CAN
LIMIT
THE
NUMBER
OF
TARGETS
LED
STIMULATORS
OFFER
MORE
VERSATILITY
BECAUSE
THE
FLICKERING
FREQUENCY
AND
PHASE
OF
EACH
LED
CAN
BE
CONTROLLED
INDEPENDENTLY
BY
A
PROGRAMMABLE
LOGIC
DEVICE
THE
STIMULATION
DECISION
CAN
BE
MADE
ON
THE
BASIS
OF
THE
NUMBER
OF
CHOICES
THAT
THE
BCI
OFFERS
LCD
SCREENS
ARE
OPTIMAL
FOR
LOW
COMPLEXITY
BCI
LESS
THAN
CHOICES
BECAUSE
THEY
INDUCE
LESS
EYE
TIREDNESS
THAN
CRT
SCREENS
FOR
MEDIUM
COMPLEXITY
BCI
CHOICES
LCD
OR
CRT
SCREENS
ARE
OPTIMAL
FOR
HIGH
COMPLEXITY
BCI
MORE
THAN
COMMANDS
LED
ARE
PREFERRED
SLOW
CORTICAL
POTENTIALS
SCPS
SCPS
ARE
SLOW
VOLTAGE
SHIFTS
IN
THE
EEG
THAT
LAST
A
SECOND
TO
SEVERAL
SECONDS
SCPS
BELONG
TO
THE
PART
OF
THE
EEG
SIGNALS
BELOW
HZ
SCPS
ARE
ASSOCIATED
WITH
CHANGES
IN
THE
LEVEL
OF
CORTICAL
ACTIVITY
NEGATIVE
SCPS
CORRELATE
WITH
INCREASED
NEURONAL
ACTIVITY
WHEREAS
POSITIVE
SCPS
COINCIDE
WITH
DECREASED
ACTIVITY
IN
INDIVIDUAL
CELLS
THESE
BRAIN
SIGNALS
CAN
BE
SELF
REGULATED
BY
BOTH
HEALTHY
USERS
AND
PARALYZED
PATIENTS
TO
CONTROL
EXTERNAL
DEVICES
BY
MEANS
OF
A
BCI
SCP
SHIFTS
CAN
BE
USED
TO
MOVE
A
CURSOR
AND
SELECT
THE
TARGETS
PRESENTED
ON
A
COMPUTER
SCREEN
SENSORS
PEOPLE
CAN
BE
TRAINED
TO
GENERATE
VOLUNTARY
SCP
CHANGES
USING
A
THOUGHT
TRANSLATION
DEVICE
THE
THOUGHT
TRANSLATION
DEVICE
IS
A
TOOL
USED
FOR
SELF
REGULATION
SCP
TRAINING
WHICH
SHOWS
VISUAL
AUDITORY
MARKS
SO
THAT
THE
USER
CAN
LEARN
TO
SHIFT
THE
SCP
THE
THOUGHT
TRANSLATION
DEVICE
TYPICALLY
COMPRISES
A
CURSOR
ON
A
SCREEN
IN
SUCH
A
WAY
THAT
THE
VERTICAL
POSITION
OF
THE
CURSOR
CONSTANTLY
REFLECTS
THE
AMPLITUDE
OF
SCP
SHIFTS
ALTHOUGH
MOST
THOUGHT
TRANSLATION
DEVICES
SHOW
CONTINUOUS
FEEDBACK
IT
IS
POSSIBLE
TO
TRAIN
SCP
SELF
MODULATION
IN
THE
ABSENCE
OF
CONTINUOUS
FEEDBACK
SUCCESS
IN
SCP
SELF
REGULATION
TRAINING
DEPENDS
ON
NUMEROUS
FACTORS
SUCH
AS
THE
PATIENT
PSYCHOLOGICAL
AND
PHYSICAL
STATE
MOTIVATION
SOCIAL
CONTEXT
OR
THE
TRAINER
PATIENT
RELATIONSHIP
IT
IS
KNOWN
THAT
THE
LEARNING
CAPABILITY
OF
THE
USER
DRASTICALLY
AFFECTS
SCP
MODULATION
TRAINING
SELF
REGULATION
TRAINING
IS
THEREFORE
STRONGLY
RECOMMENDED
FOR
PATIENTS
AT
THE
EARLY
STAGE
OF
A
PROGRESSIVE
DISEASE
FURTHERMORE
INITIAL
SCP
MODULATION
SKILLS
HAVE
AN
EFFECT
ON
FUTURE
PERFORMANCE
FOLLOWING
TRAINING
THEREFORE
THE
VALUE
OF
SCPS
AS
A
SUITABLE
CONTROL
SIGNAL
FOR
EACH
PATIENT
CAN
ONLY
BE
DETERMINED
ON
THE
BASIS
OF
INITIAL
TRIALS
OTHER
FACTORS
SUCH
AS
SLEEP
QUALITY
PAIN
AND
MOOD
ALSO
HAVE
AN
INFLUENCE
ON
SELF
REGULATION
PERFORMANCE
THEIR
EFFECTS
ARE
NOT
IDENTICAL
FOR
ALL
PATIENTS
AND
FURTHER
INVESTIGATION
IS
CERTAINLY
NEEDED
TO
ESTABLISH
GENERAL
RULES
ON
THIS
MATTER
SELF
REGULATION
OF
SCPS
HAS
BEEN
TESTED
EXTENSIVELY
WITH
PATIENTS
SUFFERING
FROM
ALS
TYPICAL
ACCURACY
RATES
ACHIEVED
FOR
SCP
CLASSIFICATION
ARE
ACCEPTABLE
AND
VARY
BETWEEN
AND
PER
CENT
BUT
THE
RATES
OF
INFORMATION
PROVIDED
BY
SCP
BASED
BCI
ARE
RELATIVELY
LOW
BESIDES
LONGER
TRAINING
IS
REQUIRED
TO
USE
SCP
BASED
BCI
AND
IT
IS
LIKELY
THAT
USERS
WILL
NEED
CONTINUOUS
PRACTICE
FOR
SEVERAL
MONTHS
EVOKED
POTENTIALS
EVOKED
POTENTIALS
ARE
POSITIVE
PEAKS
IN
THE
EEG
DUE
TO
INFREQUENT
AUDITORY
VISUAL
OR
SOMATOSENSORY
STIMULI
THESE
ENDOGENIC
RESPONSES
ARE
ELICITED
ABOUT
MS
AFTER
ATTENDING
TO
AN
ODDBALL
STIMULUS
AMONG
SEVERAL
FREQUENT
STIMULI
SOME
STUDIES
HAVE
PROVEN
THAT
THE
LESS
PROBABLE
THE
STIMULUS
THE
LARGER
THE
AMPLITUDE
OF
THE
RESPONSE
PEAK
THE
USE
OF
BASED
BCIS
DOES
NOT
REQUIRE
TRAINING
HOWEVER
THE
PERFORMANCE
MAY
BE
REDUCED
BECAUSE
THE
USER
GETS
USED
TO
THE
INFREQUENT
STIMULUS
AND
CONSEQUENTLY
AMPLITUDE
IS
DECREASED
A
TYPICAL
APPLICATION
OF
A
BCI
BASED
ON
VISUAL
EVOKED
POTENTIALS
COMPRISES
A
MATRIX
OF
LETTERS
NUMBERS
OR
OTHER
SYMBOLS
OR
COMMANDS
THE
ROWS
OR
COLUMNS
OF
THIS
MATRIX
ARE
FLASHED
AT
RANDOM
WHILE
THE
EEG
IS
MONITORED
THE
USER
GAZES
AT
THE
DESIRED
SYMBOL
AND
COUNTS
HOW
MANY
TIMES
THE
ROW
OR
COLUMN
CONTAINING
THE
DESIRED
CHOICE
FLASHES
IS
ELICITED
ONLY
WHEN
THE
DESIRED
ROW
OR
COLUMN
FLASHES
THUS
THE
BCI
USES
THIS
EFFECT
TO
DETERMINE
THE
TARGET
SYMBOL
DUE
TO
THE
LOW
SIGNAL
TO
NOISE
RATIO
IN
EEG
SIGNALS
THE
DETECTION
OF
TARGET
SYMBOLS
FROM
A
SINGLE
TRIAL
IS
VERY
DIFFICULT
THE
ROWS
OR
COLUMNS
MUST
BE
FLASHED
SEVERAL
TIMES
FOR
EACH
CHOICE
THE
EPOCHS
CORRESPONDING
TO
EACH
ROW
OR
COLUMN
ARE
AVERAGED
OVER
THE
TRIALS
IN
ORDER
TO
IMPROVE
THEIR
ACCURACY
HOWEVER
THESE
REPETITIONS
DECREASE
THE
NUMBER
OF
CHOICES
PER
MINUTE
E
G
WITH
REPETITIONS
ONLY
TWO
CHARACTERS
ARE
SPELLED
PER
MINUTE
ALTHOUGH
MOST
OF
THE
APPLICATIONS
BASED
ON
EVOKED
POTENTIALS
EMPLOY
VISUAL
STIMULI
AUDITORY
STIMULI
HAVE
BEEN
USED
FOR
PEOPLE
WITH
VISUAL
IMPAIRMENT
BASED
BCIS
PROVIDE
A
VERY
LOW
RATE
OF
INFORMATION
TRANSMISSION
BECAUSE
THE
CLASSIFIER
BASED
ON
AN
AVERAGE
IS
TOO
SIMPLE
AND
THE
ACCURACY
OF
POTENTIAL
DETECTION
IS
TOO
LOW
SENSORS
CONSEQUENTLY
TOO
MANY
TRIALS
ARE
REQUIRED
TO
SELECT
A
SINGLE
SYMBOL
IN
THE
MATRIX
ACCURACY
OF
BASED
BCIS
CAN
BE
IMPROVED
WHILE
USING
A
MORE
COMPLICATED
CLASSIFIER
THAN
A
SIMPLE
AVERAGE
TO
ENSURE
THAT
THE
NUMBER
OF
REPETITIONS
REMAIN
UNAFFECTED
OTHER
STUDIES
HAVE
PROVEN
THAT
THE
DETECTION
ACCURACY
OF
VISUAL
EVOKED
POTENTIALS
ALSO
DEPENDS
ON
THE
PROPERTIES
OF
THE
VISUAL
MATRIX
SUCH
AS
THE
DIMENSIONS
OR
COLORS
OF
THE
SYMBOLS
PERFORMANCE
DECREASES
WHEN
MATRICES
WITH
SMALLER
SYMBOLS
ARE
USED
AND
IT
IS
ENHANCED
WHEN
A
GREEN
AND
BLUE
CHROMATIC
FLICKER
MATRIX
IS
USED
RATHER
THAN
A
GRAY
AND
BLACK
ONE
INFORMATION
TRANSMISSION
RATES
PROVIDED
BY
BASED
BCI
CAN
BE
ALSO
IMPROVED
BY
CONSIDERING
THE
BCI
AS
A
NOISY
TRANSMISSION
SYSTEM
BCI
CAN
THEREFORE
BENEFIT
FROM
THE
USE
OF
ERROR
CORRECTING
CODES
HOWEVER
OPTIMIZING
THE
CODE
SOLELY
ACCORDING
TO
THE
MAXIMAL
MINIMUM
HAMMING
DISTANCE
IMPLIES
AN
INCREASE
IN
TARGET
FREQUENCY
OF
TARGET
STIMULI
WHICH
MIGHT
VIOLATE
PHYSIOLOGICAL
CONSTRAINTS
LEADING
TO
DIFFICULTIES
IN
CLASSIFYING
THE
INDIVIDUAL
ERPS
DUE
TO
OVERLAP
AND
REFRACTORY
EFFECTS
FURTHER
OVERLAP
AND
REFRACTORY
EFFECTS
ARE
GENERALLY
THE
MAIN
ERROR
SOURCE
IN
THESE
KINDS
OF
BCIS
SOME
RECENT
NOVEL
APPROACHES
HAVE
TRIED
TO
REDUCE
THEM
BY
SUPERIMPOSING
THE
TARGETS
ON
A
CHECKERBOARD
OR
BY
USING
ALTERNATIVE
STIMULUS
TYPE
METHODS
BASED
ON
MOTION
THE
RESPONSE
IS
NOT
MARKEDLY
AFFECTED
BY
WHETHER
OR
NOT
THE
SUBJECT
GAZES
DIRECTLY
AT
THE
TARGET
IN
CONTRAST
TO
THE
VEP
RESPONSE
WHICH
IS
LARGER
WHEN
THE
TARGET
IS
FOVEATED
THIS
DISTINCTION
IS
IMPORTANT
FOR
CLINICAL
APPLICATIONS
BECAUSE
EYE
MOVEMENTS
ARE
OFTEN
IMPAIRED
OR
LOST
IN
THE
TARGET
POPULATION
NEVERTHELESS
THE
PERFORMANCE
OF
A
BASED
BCI
IS
SUBSTANTIALLY
IMPROVED
WHEN
SUBJECTS
GAZE
AT
THE
DESIRED
ITEM
THEREFORE
THE
PERFORMANCE
OF
THE
VISUAL
BASED
BCIS
DEPENDS
NOT
ONLY
ON
THE
EVOKED
POTENTIAL
BUT
ALSO
ON
THE
VEP
RESPONSE
THAT
IN
TURN
STRONGLY
DEPENDS
ON
EYE
GAZE
DIRECTION
SENSORIMOTOR
RHYTHMS
MU
AND
BETA
RHYTHMS
SENSORIMOTOR
RHYTHMS
COMPRISE
MU
AND
BETA
RHYTHMS
WHICH
ARE
OSCILLATIONS
IN
THE
BRAIN
ACTIVITY
LOCALIZED
IN
THE
MU
BAND
HZ
ALSO
KNOWN
AS
THE
ROLANDIC
BAND
AND
BETA
BAND
HZ
RESPECTIVELY
BOTH
RHYTHMS
ARE
ASSOCIATED
IN
SUCH
A
WAY
THAT
SOME
BETA
RHYTHMS
ARE
HARMONIC
MU
RHYTHMS
ALTHOUGH
SOME
BETA
RHYTHMS
MAY
ALSO
BE
INDEPENDENT
THE
AMPLITUDE
OF
THE
SENSORIMOTOR
RHYTHMS
VARIES
WHEN
CEREBRAL
ACTIVITY
IS
RELATED
TO
ANY
MOTOR
TASK
ALTHOUGH
ACTUAL
MOVEMENT
IS
NOT
REQUIRED
TO
MODULATE
THE
AMPLITUDE
OF
SENSORIMOTOR
RHYTHMS
SIMILAR
MODULATION
PATTERNS
IN
THE
MOTOR
RHYTHMS
ARE
PRODUCED
AS
A
RESULT
OF
MENTAL
REHEARSAL
OF
A
MOTOR
ACT
WITHOUT
ANY
OVERT
MOTOR
OUTPUT
SENSORIMOTOR
RHYTHMS
HAVE
BEEN
USED
TO
CONTROL
BCIS
BECAUSE
PEOPLE
CAN
LEARN
TO
GENERATE
THESE
MODULATIONS
VOLUNTARILY
IN
THE
SENSORIMOTOR
RHYTHMS
SENSORIMOTOR
RHYTHMS
CAN
ENDURE
TWO
KINDS
OF
AMPLITUDE
MODULATIONS
KNOWN
AS
EVENT
RELATED
DESYNCHRONIZATION
ERD
AND
EVENT
RELATED
SYNCHRONIZATION
ERS
THAT
ARE
GENERATED
SENSORY
STIMULATION
MOTOR
BEHAVIOR
AND
MENTAL
IMAGERY
ERD
INVOLVES
AN
AMPLITUDE
SUPPRESSION
OF
THE
RHYTHM
AND
ERS
IMPLIES
AMPLITUDE
ENHANCEMENT
FIGURE
LEFT
PANEL
SHOWS
THE
TEMPORAL
BEHAVIOR
OF
ERD
AND
ERS
DURING
A
VOLUNTARY
MOVEMENT
EXPERIMENT
WHICH
INVOLVES
BRISK
FINGER
LIFTING
THE
MU
BAND
ERD
STARTS
BEFORE
MOVEMENT
ON
SET
REACHES
THE
MAXIMAL
ERD
SHORTLY
AFTER
MOVEMENT
ONSET
AND
RECOVERS
ITS
ORIGINAL
LEVEL
WITHIN
A
FEW
SECONDS
IN
CONTRAST
THE
BETA
RHYTHM
SHOWS
A
SHORT
ERD
DURING
THE
MOVEMENT
INITIATION
OF
MOVEMENT
FOLLOWED
BY
ERS
THAT
REACHES
THE
SENSORS
MAXIMUM
AFTER
MOVEMENT
EXECUTION
THIS
ERS
OCCURS
WHILE
THE
MU
RHYTHM
IS
STILL
ATTENUATED
FIGURE
ALSO
SHOWS
THE
GAMMA
OSCILLATION
HZ
WHICH
IS
ANOTHER
RHYTHM
RELATED
TO
MOTOR
TASKS
AS
WELL
GAMMA
RHYTHMS
REVEAL
AN
ERS
SHORTLY
BEFORE
MOVEMENT
ONSET
FINALLY
THE
RIGHT
PANEL
OF
FIGURE
ILLUSTRATES
THAT
SIMULTANEOUS
ERD
AND
ERS
ARE
POSSIBLE
AT
DIFFERENT
SCALP
LOCATIONS
FIGURE
LEFT
PANEL
SUPERIMPOSED
BAND
POWER
TIME
COURSES
COMPUTED
FOR
THREE
DIFFERENT
FREQUENCY
BANDS
HZ
HZ
AND
HZ
FROM
EEG
TRIALS
RECORDED
FROM
ELECTRODE
POSITION
DURING
RIGHT
INDEX
FINGER
LIFTING
EEG
DATA
TRIGGERED
WITH
RESPECT
TO
MOVEMENT
OFFSET
VERTICAL
LINE
AT
T
RIGHT
PANEL
EXAMPLES
OF
ONGOING
EEG
RECORDED
DURING
RIGHT
FINGER
MOVEMENT
ADAPTED
FROM
SENSORIMOTOR
RHYTHMS
ARE
RELATED
TO
MOTOR
IMAGERY
WITHOUT
ANY
ACTUAL
MOVEMENT
THIS
MAKES
IT
POSSIBLE
TO
USE
SENSORIMOTOR
RHYTHMS
FOR
THE
DESIGN
OF
ENDOGENOUS
BCIS
WHICH
ARE
MORE
USEFUL
THAN
EXOGENOUS
BCIS
NEVERTHELESS
SELF
CONTROL
OF
SENSORIMOTOR
RHYTHMS
IS
NOT
EASY
AND
MOST
PEOPLE
HAVE
DIFFICULTIES
WITH
MOTOR
IMAGERY
PEOPLE
TEND
TO
IMAGINE
VISUAL
IMAGES
OF
RELATED
REAL
MOVEMENTS
WHICH
IS
NOT
SUFFICIENTLY
USEFUL
FOR
A
BCI
SYSTEM
BECAUSE
THE
PATTERNS
OF
THESE
SENSORIMOTOR
RHYTHMS
DIFFER
FROM
ACTUAL
MOTOR
IMAGERY
USER
TRAINING
SHOULD
EMPHASIZE
KINESTHETIC
EXPERIENCES
INSTEAD
OF
VISUAL
REPRESENTATIONS
OF
ACTIONS
MOTOR
IMAGERY
TRAINING
IS
TRADITIONALLY
BASED
ON
VISUAL
OR
AUDITORY
FEEDBACK
THIS
KIND
OF
TRAINING
ASKS
THE
USERS
TO
PERFORM
A
CERTAIN
MOTOR
IMAGERY
TASK
AND
THEN
THE
SENSORIMOTOR
RHYTHMS
ARE
EXTRACTED
AND
CLASSIFIED
BY
COMPARING
THEM
WITH
A
REFERENCE
FINALLY
VISUAL
OR
AUDITORY
FEEDBACK
IS
PROVIDED
TO
THE
PARTICIPANT
ACCORDING
TO
THE
SUCCESS
OF
THE
RESULT
THIS
KIND
OF
TRAINING
HAS
BEEN
WIDELY
USED
ALTHOUGH
USUALLY
ITS
EFFECTIVENESS
WAS
NOT
VERY
HIGH
HWANG
ET
AL
PRESENTED
MORE
EFFECTIVE
MOTOR
IMAGERY
TRAINING
BASED
ON
A
SYSTEM
THAT
DISPLAYED
REAL
TIME
CORTICAL
ACTIVITY
AS
FEEDBACK
WHICH
ALLOWED
THE
USERS
TO
WATCH
THEIR
OWN
CORTICAL
ACTIVITY
THROUGH
A
REAL
TIME
MONITORING
SYSTEM
SENSORIMOTOR
RHYTHMS
HAVE
BEEN
INVESTIGATED
EXTENSIVELY
IN
BCI
RESEARCH
WELL
KNOWN
BCI
SYSTEMS
SUCH
AS
WADSWORTH
BERLIN
OR
GRAZ
BCIS
EMPLOY
SENSORIMOTOR
RHYTHMS
AS
CONTROL
SIGNALS
THE
BCIS
BASED
ON
SENSORIMOTOR
RHYTHMS
CAN
OPERATE
IN
EITHER
SYNCHRONOUS
OR
ASYNCHRONOUS
MODE
THE
LATEST
ADVANCES
IN
THE
FIELD
OF
BCIS
BASED
ON
SENSORIMOTOR
RHYTHMS
HAVE
SHOWN
THAT
IT
IS
POSSIBLE
TO
PREDICT
HUMAN
VOLUNTARY
MOVEMENTS
BEFORE
THEY
OCCUR
BASED
ON
THE
MODULATIONS
IN
SENSORIMOTOR
RHYTHMS
FURTHERMORE
THIS
PREDICTION
COULD
BE
PROVIDED
WITHOUT
THE
USER
MAKING
ANY
MOVEMENTS
AT
ALL
THE
BCIS
CAN
BE
CATEGORIZED
INTO
I
EXOGENOUS
OR
ENDOGENOUS
AND
II
SYNCHRONOUS
CUE
PACED
OR
ASYNCHRONOUS
SELF
PACED
TYPES
OF
BCI
ARE
LISTED
IN
TABLES
AND
ALONG
WITH
INFORMATION
RELATED
TO
BRAIN
SIGNALS
THAT
CAN
BE
MODULATED
TO
CONVEY
INFORMATION
AS
WELL
AS
ADVANTAGES
AND
DISADVANTAGES
ALSO
BCIS
CAN
BE
CLASSIFIED
INTO
DEPENDENT
AND
INDEPENDENT
THIS
DISTINCTION
WILL
NOT
BE
DETAILED
IN
THIS
REVIEW
BECAUSE
IT
IS
VERY
SIMILAR
TO
EXOGENOUS
AND
ENDOGENOUS
DISTINCTION
ADVANTAGES
AND
DISADVANTAGES
IN
BOTH
TAXONOMIES
ARE
ANALOGOUS
TABLE
MAIN
DIFFERENCES
BETWEEN
EXOGENOUS
AND
ENDOGENOUS
BCI
APPROACH
BRAIN
SIGNALS
ADVANTAGES
DISADVANTAGES
EXOGENOUS
BCI
MINIMAL
TRAINING
CONTROL
SIGNAL
SET
UP
EASILY
AND
QUICKLY
HIGH
BIT
RATE
BITS
MIN
ONLY
ONE
EEG
CHANNEL
REQUIRED
PERMANENT
ATTENTION
TO
EXTERNAL
STIMULI
MAY
CAUSE
TIREDNESS
IN
SOME
USERS
ENDOGENOUS
BCI
SSVEP
VERY
TIME
CONSUMING
TRAINING
MONTHS
OR
WEEKS
NOT
ALL
USERS
ARE
ABLE
TO
OBTAIN
CONTROL
MULTICHANNEL
EEG
RECORDINGS
REQUIRED
FOR
GOOD
PERFORMANCE
LOWER
BIT
RATE
BITS
MIN
TABLE
MAIN
DIFFERENCES
BETWEEN
SYNCHRONOUS
AND
ASYNCHRONOUS
BCIS
APPROACH
ADVANTAGES
DISADVANTAGES
SYNCHRONOUS
BCI
INDEPENDENT
OF
ANY
STIMULATION
SCPS
SENSORIMOTOR
RHYTHMS
CAN
BE
OPERATED
AT
FREE
WILL
USEFUL
FOR
USERS
WITH
SENSORY
ORGANS
AFFECTED
SUITABLE
FOR
CURSOR
CONTROL
APPLICATIONS
SIMPLER
DESIGN
AND
PERFORMANCE
EVALUATION
THE
USER
CAN
AVOID
GENERATING
ARTIFACTS
SINCE
THEY
CAN
PERFORM
BLINKS
AND
OTHER
EYE
MOVEMENTS
WHEN
BRAIN
SIGNALS
ARE
NOT
ANALYZED
DOES
NOT
OFFER
A
MORE
NATURAL
MODE
OF
INTERACTION
ASYNCHRONOUS
BCI
NO
REQUIREMENT
TO
WAIT
FOR
EXTERNAL
CUES
OFFERS
A
MORE
NATURAL
MODE
OF
INTERACTION
MUCH
MORE
COMPLICATE
DESIGN
MORE
DIFFICULT
EVALUATION
ACCORDING
TO
THE
NATURE
OF
THE
SIGNALS
USED
AS
INPUT
BCI
SYSTEMS
CAN
BE
CLASSIFIED
AS
EITHER
EXOGENOUS
OR
ENDOGENOUS
EXOGENOUS
BCI
USES
THE
NEURON
ACTIVITY
ELICITED
IN
THE
BRAIN
BY
AN
EXTERNAL
STIMULUS
SUCH
AS
VEPS
OR
AUDITORY
EVOKED
POTENTIALS
EXOGENOUS
SYSTEMS
DO
NOT
REQUIRE
EXTENSIVE
TRAINING
SINCE
THEIR
CONTROL
SIGNALS
SSVEPS
AND
CAN
BE
EASILY
AND
QUICKLY
SET
UP
BESIDES
THE
SIGNAL
CONTROLS
CAN
BE
REALIZED
WITH
ONLY
ONE
EEG
CHANNEL
AND
CAN
ACHIEVE
A
HIGH
INFORMATION
TRANSFER
RATE
OF
UP
TO
BITS
MIN
ON
THE
OTHER
HAND
ENDOGENOUS
BCI
IS
BASED
ON
SELF
REGULATION
OF
BRAIN
RHYTHMS
AND
POTENTIALS
WITHOUT
EXTERNAL
STIMULI
THROUGH
NEUROFEEDBACK
TRAINING
THE
USERS
LEARN
TO
GENERATE
SPECIFIC
BRAIN
PATTERNS
WHICH
MAY
BE
DECODED
BY
THE
BCI
SUCH
AS
MODULATIONS
IN
THE
SENSORIMOTOR
RHYTHMS
OR
THE
SCPS
THE
ADVANTAGE
OF
AN
ENDOGENOUS
BCI
IS
THAT
THE
USER
CAN
OPERATE
THE
BCI
AT
FREE
WILL
AND
MOVE
A
CURSOR
TO
ANY
POINT
IN
A
SENSORS
TWO
DIMENSIONAL
SPACE
WHILE
AN
EXOGENOUS
BCI
MAY
CONSTRAIN
THE
USER
TO
THE
CHOICES
PRESENTED
ALSO
ENDOGENOUS
BCI
ARE
ESPECIALLY
USEFUL
FOR
USERS
WITH
ADVANCED
STAGES
OF
ALS
OR
WHOSE
SENSORY
ORGANS
ARE
AFFECTED
TABLE
SUMMARIZES
THE
DIFFERENCES
BETWEEN
EXOGENOUS
AND
ENDOGENOUS
BCIS
ACCORDING
TO
THE
INPUT
DATA
PROCESSING
MODALITY
BCI
SYSTEMS
CAN
BE
CLASSIFIED
AS
SYNCHRONOUS
OR
ASYNCHRONOUS
SYNCHRONOUS
BCIS
ANALYZE
BRAIN
SIGNALS
DURING
PREDEFINED
TIME
WINDOWS
ANY
BRAIN
SIGNAL
OUTSIDE
THE
PREDEFINED
WINDOW
IS
IGNORED
THEREFORE
THE
USER
IS
ONLY
ALLOWED
TO
SEND
COMMANDS
DURING
SPECIFIC
PERIODS
DETERMINED
BY
THE
BCI
SYSTEM
FOR
EXAMPLE
THE
STANDARD
GRAZ
BCI
REPRESENTS
A
SYNCHRONOUS
BCI
SYSTEM
THE
ADVANTAGE
OF
A
SYNCHRONOUS
BCI
SYSTEM
IS
THAT
THE
ONSET
OF
MENTAL
ACTIVITY
IS
KNOWN
IN
ADVANCE
AND
ASSOCIATED
WITH
A
SPECIFIC
CUE
MOREOVER
THE
PATIENTS
MAY
ALSO
PERFORM
BLINKS
AND
OTHER
EYE
MOVEMENTS
WHICH
WOULD
GENERATE
ARTIFACTS
IF
THE
BCI
DID
NOT
ANALYZE
THE
BRAIN
SIGNALS
TO
AVOID
THEIR
MISLEADING
EFFECTS
THIS
SIMPLIFIES
THE
DESIGN
AND
EVALUATION
OF
SYNCHRONOUS
BCI
ASYNCHRONOUS
BCIS
CONTINUOUSLY
ANALYZE
BRAIN
SIGNALS
NO
MATTER
WHEN
THE
USER
ACTS
THEY
OFFER
A
MORE
NATURAL
MODE
OF
HUMAN
MACHINE
INTERACTION
THAN
SYNCHRONOUS
BCI
HOWEVER
ASYNCHRONOUS
BCIS
ARE
MORE
COMPUTATION
DEMANDING
AND
COMPLEX
TABLE
SUMMARIZES
THE
DIFFERENCES
BETWEEN
SYNCHRONOUS
AND
ASYNCHRONOUS
BCIS
FEATURES
EXTRACTION
AND
SELECTION
DIFFERENT
THINKING
ACTIVITIES
RESULT
IN
DIFFERENT
PATTERNS
OF
BRAIN
SIGNALS
BCI
IS
SEEN
AS
A
PATTERN
RECOGNITION
SYSTEM
THAT
CLASSIFIES
EACH
PATTERN
INTO
A
CLASS
ACCORDING
TO
ITS
FEATURES
BCI
EXTRACTS
SOME
FEATURES
FROM
BRAIN
SIGNALS
THAT
REFLECT
SIMILARITIES
TO
A
CERTAIN
CLASS
AS
WELL
AS
DIFFERENCES
FROM
THE
REST
OF
THE
CLASSES
THE
FEATURES
ARE
MEASURED
OR
DERIVED
FROM
THE
PROPERTIES
OF
THE
SIGNALS
WHICH
CONTAIN
THE
DISCRIMINATIVE
INFORMATION
NEEDED
TO
DISTINGUISH
THEIR
DIFFERENT
TYPES
THE
DESIGN
OF
A
SUITABLE
SET
OF
FEATURES
IS
A
CHALLENGING
ISSUE
THE
INFORMATION
OF
INTEREST
IN
BRAIN
SIGNALS
IS
HIDDEN
IN
A
HIGHLY
NOISY
ENVIRONMENT
AND
BRAIN
SIGNALS
COMPRISE
A
LARGE
NUMBER
OF
SIMULTANEOUS
SOURCES
A
SIGNAL
THAT
MAY
BE
OF
INTEREST
COULD
BE
OVERLAPPED
IN
TIME
AND
SPACE
BY
MULTIPLE
SIGNALS
FROM
DIFFERENT
BRAIN
TASKS
FOR
THAT
REASON
IN
MANY
CASES
IT
IS
NOT
ENOUGH
TO
USE
SIMPLE
METHODS
SUCH
AS
A
BAND
PASS
FILTER
TO
EXTRACT
THE
DESIRED
BAND
POWER
BRAIN
SIGNALS
CAN
BE
MEASURED
THROUGH
MULTIPLES
CHANNELS
NOT
ALL
INFORMATION
PROVIDED
BY
THE
MEASURED
CHANNELS
IS
GENERALLY
RELEVANT
FOR
UNDERSTANDING
THE
UNDERLYING
PHENOMENA
OF
INTEREST
DIMENSION
REDUCTION
TECHNIQUES
SUCH
AS
PRINCIPAL
COMPONENT
ANALYSIS
OR
INDEPENDENT
COMPONENT
ANALYSIS
CAN
BE
APPLIED
TO
REDUCE
THE
DIMENSION
OF
THE
ORIGINAL
DATA
REMOVING
THE
IRRELEVANT
AND
REDUNDANT
INFORMATION
COMPUTATIONAL
COSTS
ARE
THEREBY
REDUCED
BRAIN
SIGNALS
ARE
INHERENTLY
NON
STATIONARY
TIME
INFORMATION
ABOUT
WHEN
A
CERTAIN
FEATURE
OCCURS
SHOULD
BE
OBTAINED
SOME
APPROACHES
DIVIDE
THE
SIGNALS
INTO
SHORT
SEGMENTS
AND
THE
PARAMETERS
CAN
BE
ESTIMATED
FROM
EACH
SEGMENT
HOWEVER
THE
SEGMENT
LENGTH
AFFECTS
THE
ACCURACY
OF
ESTIMATED
FEATURES
FFT
PERFORMS
VERY
POORLY
WITH
SHORT
DATA
SEGMENTS
WAVELET
TRANSFORM
OR
ADAPTIVE
AUTOREGRESSIVE
COMPONENTS
ARE
PREFERRED
TO
REVEAL
THE
NON
STATIONARY
TIME
VARIATIONS
OF
BRAIN
SIGNALS
ALSO
A
NOVEL
TECHNIQUE
CALLED
STATIONARY
SUBSPACE
ANALYSIS
SSA
HAS
RECENTLY
BEEN
INTRODUCED
TO
DEAL
WITH
THE
NON
STATIONARITY
OF
EEG
SIGNALS
SSA
DECOMPOSES
MULTIVARIATE
TIME
SERIES
INTO
STATIONARY
AND
NON
STATIONARY
COMPONENTS
SENSORS
MULTIPLES
FEATURES
CAN
BE
EXTRACTED
FROM
SEVERAL
CHANNELS
AND
FROM
SEVERAL
TIME
SEGMENTS
BEFORE
BEING
CONCATENATED
INTO
A
SINGLE
FEATURE
VECTOR
ONE
OF
THE
MAJOR
DIFFICULTIES
IN
BCI
DESIGN
IS
CHOOSING
RELEVANT
FEATURES
FROM
THE
VAST
NUMBER
OF
POSSIBLE
FEATURES
HIGH
DIMENSIONAL
FEATURE
VECTORS
ARE
NOT
DESIRABLE
DUE
TO
THE
CURSE
OF
DIMENSIONALITY
IN
TRAINING
CLASSIFICATION
ALGORITHMS
SEE
NEXT
SECTION
THE
FEATURE
SELECTION
MAY
BE
ATTEMPTED
EXAMINING
ALL
POSSIBLE
SUBSETS
OF
THE
FEATURES
HOWEVER
THE
NUMBER
OF
POSSIBILITIES
GROWS
EXPONENTIALLY
MAKING
AN
EXHAUSTIVE
SEARCH
IMPRACTICAL
FOR
EVEN
A
MODERATE
NUMBER
OF
FEATURES
SOME
MORE
EFFICIENT
OPTIMIZATION
ALGORITHMS
CAN
BE
APPLIED
WITH
THE
AIM
OF
MINIMIZING
THE
NUMBER
OF
FEATURES
WHILE
MAXIMIZING
THE
CLASSIFICATION
PERFORMANCE
THIS
SECTION
DISCUSSES
METHODS
TO
OBTAIN
THE
RELEVANT
CHARACTERISTICS
OF
BRAIN
SIGNALS
AS
WELL
AS
FEATURE
SELECTION
METHODS
FIRSTLY
DIMENSIONAL
REDUCTION
METHODS
SUCH
AS
PRINCIPAL
COMPONENT
ANALYSIS
OR
INDEPENDENT
COMPONENT
ANALYSIS
ARE
EXPLAINED
SECONDLY
TIME
AND
OR
FREQUENCY
METHODS
SUCH
AS
MATCHED
FILTERING
OR
WAVELET
TRANSFORM
AND
PARAMETRIC
MODELING
SUCH
AS
AUTOREGRESSIVE
COMPONENT
ARE
ALSO
SURVEYED
THIRDLY
AN
EXPLANATION
IS
GIVEN
OF
THE
COMMON
SPATIAL
PATTERN
ALGORITHM
THIS
METHOD
DESIGNS
A
PREPROCESSING
SPATIAL
FILTER
BY
MEANS
OF
SPATIAL
COVARIANCE
FROM
INPUT
DATA
AND
SIGNAL
WHITENING
THAT
ENHANCES
THE
DIFFERENCE
BETWEEN
CLASSES
BEFORE
THE
FEATURE
EXTRACTION
STAGE
AND
FINALLY
FEATURE
SELECTION
METHODS
SUCH
AS
GENETIC
ALGORITHMS
OR
SEQUENTIAL
SELECTION
ARE
INCLUDED
ALL
THESE
METHODS
INCLUDING
FEATURE
EXTRACTION
AND
FEATURE
SELECTION
METHODS
ARE
LISTED
RESPECTIVELY
IN
TABLES
AND
ALONG
WITH
INFORMATION
ON
THEIR
PROPERTIES
AND
BCI
APPLICATIONS
TABLE
SUMMARY
OF
FEATURE
EXTRACTION
METHODS
METHOD
PROPERTIES
APPLICATIONS
DIMENSION
REDUCTION
LINEAR
TRANSFORMATION
SET
OF
POSSIBLY
CORRELATED
OBSERVATIONS
IS
TRANSFORMED
INTO
A
SET
OF
UNCORRELATED
VARIABLES
PCA
OPTIMAL
REPRESENTATION
OF
DATA
IN
TERMS
OF
MINIMAL
MEAN
SQUARE
ERROR
NO
GUARANTEES
ALWAYS
A
GOOD
CLASSIFICATION
VALUABLE
NOISE
AND
DIMENSION
REDUCTION
METHOD
PCA
REQUIRES
THAT
ARTIFACTS
ARE
UNCORRELATED
WITH
THE
EEG
SIGNAL
ICA
SPLITS
A
SET
OF
MIXED
SIGNALS
INTO
ITS
SOURCES
MUTUAL
STATISTICAL
INDEPENDENCE
OF
UNDERLYING
SOURCES
IS
ASSUMED
POWERFUL
AND
ROBUST
TOOL
FOR
ARTIFACT
REMOVAL
ARTIFACTS
ARE
REQUIRED
TO
BE
INDEPENDENT
FROM
THE
EEG
SIGNAL
MAY
CORRUPT
THE
POWER
SPECTRUM
SPACE
CSP
SPATIAL
FILTER
DESIGNED
FOR
CLASS
PROBLEMS
MULTICLASS
EXTENSIONS
EXIST
GOOD
RESULT
FOR
SYNCHRONOUS
BCIS
LESS
EFFECTIVE
FOR
ASYNCHRONOUS
BCIS
ITS
PERFORMANCE
IS
AFFECTED
BY
THE
SPATIAL
RESOLUTION
SOME
ELECTRODE
LOCATIONS
OFFER
MORE
DISCRIMINATIVE
INFORMATION
FOR
SOME
SPECIFIC
BRAIN
ACTIVITIES
THAN
OTHERS
IMPROVED
VERSIONS
OF
CSP
WCSP
CSSP
CSSSP
SENSORS
TABLE
CONT
TIME
FREQUENCY
SPECTRUM
MODEL
AR
HIGH
FREQUENCY
RESOLUTION
FOR
SHORT
TIME
SEGMENTS
NOT
SUITABLE
FOR
NON
STATIONARY
SIGNALS
ADAPTIVE
VERSION
OF
AR
MVAAR
MF
DETECTS
A
SPECIFIC
PATTERN
ON
THE
BASIS
OF
ITS
MATCHES
WITH
PREDETERMINED
KNOWN
SIGNALS
OR
TEMPLATES
SUITABLE
FOR
DETECTION
OF
WAVEFORMS
WITH
CONSISTENT
TEMPORAL
CHARACTERISTICS
CWT
PROVIDES
BOTH
FREQUENCY
AND
TEMPORAL
INFORMATION
SUITABLE
FOR
NON
STATIONARY
SIGNALS
DWT
PROVIDES
BOTH
FREQUENCY
AND
TEMPORAL
INFORMATION
SUITABLE
FOR
NON
STATIONARY
SIGNALS
REDUCES
THE
REDUNDANCY
AND
COMPLEXITY
OF
CWT
TABLE
SUMMARY
OF
FEATURE
EXTRACTION
METHODS
METHOD
PROPERTIES
APPLICATIONS
FEATURES
SELECTION
GA
HIGH
RESOURCE
CONSUMPTION
POSSIBLE
PREMATURE
CONVERGENCE
SFS
SBS
SUBOPTIMAL
METHODS
SFFS
SBFS
MODIFIED
VERSIONS
OF
SFS
SBS
METHODS
BASED
ON
PLUS
L
TAKE
AWAY
R
ALGORITHM
PARTIALLY
OVERCOME
THE
DEFICIENCIES
OF
SFS
SBS
PRINCIPAL
COMPONENT
ANALYSIS
PCA
PCA
IS
A
STATISTICAL
FEATURES
EXTRACTION
METHOD
THAT
USES
A
LINEAR
TRANSFORMATION
TO
CONVERT
A
SET
OF
OBSERVATIONS
POSSIBLY
CORRELATED
INTO
A
SET
OF
UNCORRELATED
VARIABLES
CALLED
PRINCIPAL
COMPONENTS
LINEAR
TRANSFORMATION
GENERATES
A
SET
OF
COMPONENTS
FROM
THE
INPUT
DATA
SORTED
ACCORDING
TO
THEIR
VARIANCE
IN
SUCH
A
WAY
THAT
THE
FIRST
PRINCIPAL
COMPONENT
HAS
THE
HIGHEST
POSSIBLE
VARIANCE
THIS
VARIANCE
ALLOWS
PCA
TO
SEPARATE
THE
BRAIN
SIGNAL
INTO
DIFFERENT
COMPONENTS
PCA
PROJECTS
THE
INPUT
DATA
ON
A
K
DIMENSION
EIGENSPACE
OF
K
EIGENVECTORS
WHICH
ARE
CALCULATED
FROM
THE
COVARIANCE
MATRIX
OF
THE
TRAINING
DATA
P
P
P
P
N
P
I
IS
I
TH
D
DIMENSION
TRAINING
SAMPLE
AND
N
IS
THE
NUMBER
OF
SAMPLES
THE
COVARIANCE
MATRIX
IS
COMPUTED
AS
WHERE
IS
THE
MEAN
VECTOR
OF
THE
TRAINING
SAMPLES
P
I
THE
COVARIANCE
MATRIX
IS
A
REAL
AND
SYMMETRIC
MATRIX
THEREFORE
HAS
D
DIFFERENT
EIGENVECTORS
AND
EIGENVALUES
BY
MEANS
OF
THE
EIGENVALUES
IT
IS
POSSIBLE
TO
KNOW
WHICH
EIGENVECTORS
REPRESENT
THE
MOST
SIGNIFICANT
INFORMATION
CONTAINED
IN
THE
DATASET
THE
EIGENVECTORS
WITH
THE
HIGHEST
SENSORS
EIGENVALUE
REPRESENT
THE
PRINCIPAL
COMPONENTS
OF
THE
TRAINING
DATASET
P
PCA
SELECTS
THAT
K
WITH
K
D
EIGENVECTORS
HAVING
THE
LARGEST
EIGENVALUES
THESE
SELECTED
EIGENVECTORS
SERVE
TO
BUILD
A
PROJECTION
MATRIX
A
THAT
WILL
BE
USED
TO
EXTRACT
THE
FEATURE
VECTOR
FROM
THE
TEST
DATA
Q
THE
K
EIGENVECTORS
ARE
SORTED
INTO
COLUMNS
IN
MATRIX
A
SUCH
THAT
THE
FIRST
COLUMN
OF
A
CORRESPONDS
TO
THE
LARGEST
EIGENVALUE
FINALLY
PCA
COMPUTES
THE
FEATURE
VECTOR
V
FROM
THE
DATA
IN
MATRIX
A
BY
PROJECTING
THE
TEST
DATA
Q
ONTO
THE
NEW
SUBSPACE
SUCH
THAT
WHERE
REPRESENTS
THE
MEAN
VECTOR
OF
TRAINING
SAMPLES
P
I
PCA
IS
ALSO
A
PROCEDURE
TO
REDUCE
THE
DIMENSION
OF
THE
FEATURE
SINCE
THE
NUMBER
OF
COLUMNS
IS
LESS
THAN
THE
NUMBER
OF
EIGENVECTORS
THE
DIMENSION
OF
THE
OUTPUT
PROJECTED
DATA
IS
LESS
THAN
THE
DIMENSION
OF
THE
INPUT
DATA
THIS
DECREASE
IN
DIMENSIONALITY
CAN
REDUCE
THE
COMPLEXITY
OF
THE
SUBSEQUENT
CLASSIFYING
STEP
IN
A
BCI
SYSTEM
PCA
DOES
NOT
ALWAYS
GUARANTEE
A
GOOD
CLASSIFICATION
SINCE
THE
BEST
DISCRIMINATING
COMPONENTS
MAY
NOT
FIGURE
AMONG
THE
LARGEST
PRINCIPAL
COMPONENTS
PCA
REDUCES
DATA
DIMENSION
BY
SEEKING
A
NEW
OPTIMAL
REPRESENTATION
OF
DATA
IN
TERMS
OF
MINIMAL
MEAN
SQUARE
ERROR
BETWEEN
THE
REPRESENTATION
AND
THE
ORIGINAL
DATA
IT
WILL
NOT
GUARANTEE
THAT
THE
DISCRIMINATIVE
FEATURES
ARE
OPTIMAL
FOR
CLASSIFICATION
DESPITE
THIS
SHORTCOMING
IT
HAS
BEEN
PROVEN
THAT
PCA
IS
A
RELIABLE
NOISE
REDUCTION
METHOD
WITH
REGARD
TO
THE
APPLICATIONS
OF
PCA
IN
BCI
SYSTEMS
PCA
HAS
BEEN
USED
TO
IDENTIFY
THE
ARTIFACTUAL
COMPONENTS
IN
A
REASONABLY
SUCCESSFUL
WAY
IN
EEG
SIGNALS
AND
TO
RECONSTRUCT
THE
SIGNALS
WITHOUT
THE
ARTIFACTUAL
COMPONENTS
NEVERTHELESS
THE
ARTIFACTS
MUST
NOT
BE
CORRELATED
WITH
THE
EEG
SIGNAL
FOR
PCA
TO
FUNCTION
IN
THIS
WAY
PCA
HAS
ALSO
BEEN
EMPLOYED
IN
ORDER
TO
REDUCE
FEATURE
SPACE
DIMENSIONALITY
INDEPENDENT
COMPONENT
ANALYSIS
ICA
ICA
IS
A
STATISTICAL
PROCEDURE
THAT
SPLITS
A
SET
OF
MIXED
SIGNALS
INTO
ITS
SOURCES
WITH
NO
PREVIOUS
INFORMATION
ON
THE
NATURE
OF
THE
SIGNAL
THE
ONLY
ASSUMPTION
INVOLVED
IN
ICA
IS
THAT
THE
UNKNOWN
UNDERLYING
SOURCES
ARE
MUTUALLY
INDEPENDENT
IN
STATISTICAL
TERMS
ICA
ASSUMES
THAT
THE
OBSERVED
EEG
SIGNAL
IS
A
MIXTURE
OF
SEVERAL
INDEPENDENT
SOURCE
SIGNALS
COMING
FROM
MULTIPLE
COGNITIVE
ACTIVITIES
OR
ARTIFACTS
ICA
THEREFORE
EXPRESSES
THE
RESULTING
EEG
SIGNAL
X
T
IN
RELATION
TO
THEIR
SOURCES
T
AS
WHERE
F
IS
ANY
UNKNOWN
MIXER
FUNCTION
AND
N
T
IS
AN
ADDITIVE
RANDOM
NOISY
VECTOR
THE
DIMENSION
OF
THE
INPUT
VECTOR
T
DEPENDS
ON
THE
NUMBER
OF
SOURCES
THE
DIMENSION
OF
OUTPUT
VECTOR
X
T
IS
EQUAL
TO
THE
NUMBER
OF
MEASURED
DATA
CHANNELS
THE
NUMBER
OF
SOURCES
IS
USUALLY
ASSUMED
TO
BE
LESS
THAN
OR
EQUAL
TO
THE
NUMBER
OF
CHANNELS
ALTHOUGH
MORE
GENERALIZED
ICA
METHODS
ARE
POSSIBLE
THE
WHOLE
ICA
PROBLEM
CONSISTS
IN
THE
CALCULATION
OF
THE
UNMIXING
FUNCTION
BY
INVERTING
F
AND
OBTAINING
AN
ESTIMATION
OF
T
BY
MAPPING
X
T
TO
THE
SOURCE
SPACE
TO
SOLVE
THE
PROBLEM
ICA
CAN
FALL
INTO
TWO
DIFFERENT
MODELS
ON
THE
BASIS
OF
F
WHICH
MAY
BE
EITHER
A
LINEAR
OR
NONLINEAR
FUNCTION
THE
NONLINEAR
ASSUMPTION
IS
SUITABLE
IN
THOSE
CASES
WHERE
THE
LINEAR
MODEL
MIGHT
BE
TOO
SIMPLE
TO
DESCRIBE
THE
OBSERVED
DATA
X
T
HOWEVER
THE
NONLINEAR
PROBLEM
IS
USUALLY
TOO
COMPLEX
AND
GENERALLY
INTRACTABLE
DUE
TO
ITS
HIGH
NUMBER
OF
INDETERMINATIONS
THE
ASSUMPTION
OF
A
LINEAR
MIXING
FUNCTION
SENSORS
SIMPLIFIES
EQUATION
IT
IS
POSSIBLE
TO
REWRITE
IT
AS
A
MATRIX
MULTIPLICATION
WHERE
A
IS
THE
MIXING
MATRIX
THE
EQUATION
GIVES
THE
MATHEMATICAL
EXPRESSION
OF
THE
LINEAR
ICA
MODEL
ALTHOUGH
THE
APPROXIMATION
GIVEN
BY
EQUATION
CAN
BE
CONSIDERED
TOO
SIMPLE
IT
WORKS
REASONABLY
WELL
IN
BRAIN
SIGNAL
PROCESSING
APPLICATIONS
FURTHERMORE
IT
IS
POSSIBLE
TO
REMOVE
THE
NOISE
TERM
N
T
FROM
EQUATION
BY
ASSUMING
THAT
THE
OBSERVED
DATA
IS
NOISELESS
OR
THAT
THE
NOISE
IS
TOO
WEAK
FOR
CONSIDERATION
FINALLY
T
AND
A
ARE
OBTAINED
FROM
X
T
BY
MEANS
OF
CERTAIN
ALGORITHMS
SUCH
AS
INFOMAX
OR
FURTHER
MODIFICATION
OF
THE
INFOMAX
ICA
HAS
TRADITIONALLY
BEEN
USED
AS
A
PREPROCESSING
TOOL
BEFORE
THE
FEATURE
EXTRACTION
STEP
IN
ORDER
TO
REMOVE
OCULAR
ARTIFACTS
IN
BCI
SYSTEMS
ALTHOUGH
ICA
HAS
BEEN
PROVEN
TO
BE
A
POWERFUL
AND
ROBUST
TOOL
FOR
ARTIFACT
REMOVAL
IN
SIGNAL
ANALYSIS
SOME
STUDIES
HAVE
INDICATED
THAT
ARTIFACT
SUPPRESSION
MAY
ALSO
CORRUPT
THE
POWER
SPECTRUM
OF
THE
UNDERLYING
NEURAL
ACTIVITY
IN
ADDITION
ICA
REQUIRES
THAT
THE
ARTIFACTS
ARE
INDEPENDENT
IN
RELATION
TO
THE
EEG
SIGNAL
IT
IS
ALSO
POSSIBLE
TO
FIND
AUTHORS
THAT
HAVE
EMPLOYED
ICA
AS
A
CLASSIFIER
ICA
CAN
BE
MODIFIED
TO
CLASSIFY
EEG
SIGNALS
BY
FITTING
THE
GENERATIVE
ICA
MODEL
TO
EACH
TASK
AND
EMPLOYING
BAYES
RULE
TO
CREATE
THE
CLASSIFIER
AUTOREGRESSIVE
COMPONENTS
AR
AR
SPECTRAL
ESTIMATION
IS
A
METHOD
FOR
MODELING
SIGNALS
AR
MODELS
THE
EEG
SIGNAL
AS
THE
OUTPUT
RANDOM
SIGNAL
OF
A
LINEAR
TIME
INVARIANT
FILTER
WHERE
THE
INPUT
IS
WHITE
NOISE
WITH
A
MEAN
OF
ZERO
AND
A
CERTAIN
VARIANCE
OF
THE
AIM
OF
THE
AR
PROCEDURE
IS
TO
OBTAIN
THE
FILTER
COEFFICIENTS
SINCE
IT
IS
ASSUMED
THAT
DIFFERENT
THINKING
ACTIVITIES
WILL
PRODUCE
DIFFERENT
FILTER
COEFFICIENTS
THE
FILTER
COEFFICIENTS
WILL
BE
USED
AS
THE
FEATURES
OF
THE
SIGNAL
AR
ASSUMES
THAT
THE
TRANSFER
FUNCTION
OF
THE
FILTER
WILL
ONLY
CONTAIN
POLES
IN
THE
DENOMINATOR
THE
NUMBER
OF
POLES
IN
THE
DENOMINATOR
CORRESPONDS
TO
THE
ORDER
OF
THE
AUTOREGRESSIVE
MODEL
THE
ASSUMPTION
OF
AN
ALL
POLE
FILTER
MAKES
THE
FILTER
COEFFICIENTS
COMPUTATION
EASIER
BECAUSE
IT
IS
ONLY
NECESSARY
TO
SOLVE
LINEAR
EQUATIONS
MATHEMATICALLY
THE
AR
MODEL
OF
ORDER
P
DESCRIBES
THE
EEG
SIGNAL
Y
T
AS
WHERE
A
I
IS
THE
I
TH
FILTER
COEFFICIENT
AND
N
T
IS
THE
NOISE
THERE
ARE
SEVERAL
METHODS
THAT
COMPUTE
THE
FILTER
COEFFICIENTS
SUCH
AS
THE
YULE
WALKER
BURG
COVARIANCE
AND
FORWARD
BACKWARD
ALGORITHMS
THE
RESULTING
COEFFICIENTS
CAN
BE
USED
TO
ESTIMATE
THE
POWER
SPECTRUM
OF
THE
EEG
SIGNAL
Y
Ω
SUCH
THAT
WHERE
A
K
ARE
THE
ESTIMATED
FILTER
COEFFICIENTS
AND
P
IS
THE
AR
MODEL
ORDER
IN
OTHER
WORDS
THE
NUMBER
OF
POLES
IN
THE
AR
MODEL
THE
DETERMINATION
OF
AN
APPROPRIATE
ORDER
P
FOR
A
GIVEN
INPUT
SIGNAL
IS
A
TRADE
OFF
ISSUE
IF
THE
ORDER
IS
TOO
LOW
TO
MODEL
THE
INPUT
SIGNAL
THE
RESULT
WILL
NOT
FAITHFULLY
REPRESENT
THE
SIGNAL
SENSORS
BECAUSE
THE
SPECTRUM
IS
TOO
SMOOTH
IN
CONTRAST
IF
THE
ORDER
IS
TOO
HIGH
THE
SPECTRUM
MAY
EXHIBIT
SPURIOUS
PEAKS
AR
SPECTRAL
ESTIMATION
IS
PREFERRED
TO
FOURIER
TRANSFORM
BECAUSE
OF
ITS
SUPERIOR
RESOLUTION
FOR
SHORT
TIME
SEGMENTS
NEVERTHELESS
AR
PERFORMS
POORLY
WHEN
THE
SIGNAL
IS
NOT
STATIONARY
DUE
TO
THE
NON
STATIONARY
NATURE
OF
EEG
SIGNALS
A
MULTIVARIATE
ADAPTIVE
AR
MVAAR
MODEL
HAS
BEEN
PROPOSED
TO
DESIGN
MORE
EFFECTIVE
ON
LINE
BCI
SYSTEMS
JIANG
ET
AL
APPLIED
MVAAR
FOR
THE
CLASSIFICATION
OF
MOTOR
IMAGERY
SHOWING
THAT
MVAAR
IS
A
VALUABLE
ADAPTIVE
METHOD
FOR
FEATURE
EXTRACTION
THE
COMPUTATION
ALGORITHM
WAS
VERY
SIMILAR
TO
THE
ORIGINAL
AR
MODEL
IN
A
BCI
WITH
M
CHANNELS
THE
VECTOR
OF
M
EEG
VALUES
AT
EACH
POINT
IN
TIME
K
WAS
REPRESENTED
AS
AS
IN
THE
AR
CASE
THE
MVAAR
MODEL
WAS
EXPRESSED
AS
WHERE
WAS
THE
VECTOR
OF
WHITE
NOISE
VALUES
WERE
THE
ADAPTIVE
COEFFICIENTS
AND
P
WAS
THE
MODEL
ORDER
THE
RECURSIVE
LEAST
SQUARES
ALGORITHM
A
SPECIAL
VARIANT
OF
THE
KALMAN
FILTER
WERE
USED
TO
UPDATE
COEFFICIENTS
AT
EVERY
POINT
K
MATCHED
FILTERING
MF
MF
IS
A
FEATURE
EXTRACTION
METHOD
THAT
ATTEMPTS
TO
DETECT
A
SPECIFIC
PATTERN
ON
THE
BASIS
OF
ITS
MATCHES
WITH
PREDETERMINED
KNOWN
SIGNALS
OR
TEMPLATES
THE
INTENTION
OF
THE
USER
IS
REVEALED
BY
MEANS
OF
THE
CORRELATION
BETWEEN
THE
UNKNOWN
EEG
SIGNALS
AND
THE
SET
OF
TEMPLATES
EACH
TEMPLATE
REPRESENTS
AN
INTENTION
OF
THE
USER
A
HIGHER
CORRELATION
WOULD
IMPLY
BETTER
MATCHING
BETWEEN
THE
TEMPLATE
AND
THE
USER
INTENTION
EACH
MATCHED
FILTER
CAN
SIMPLY
BE
MODELED
AS
A
SUM
OF
THE
HARMONICALLY
RELATED
SINUSOIDAL
COMPONENTS
COS
WHERE
N
IS
THE
TEMPLATE
SAMPLE
NUMBER
F
IS
THE
SAMPLING
FREQUENCY
F
F
IS
THE
FUNDAMENTAL
FREQUENCY
OF
THE
RHYTHM
TEMPLATE
N
IS
THE
NUMBER
OF
HARMONICS
AND
A
T
AND
ARE
THE
AMPLITUDE
AND
PHASE
OF
THE
INDIVIDUAL
HARMONICS
RESPECTIVELY
THE
MODEL
PARAMETERS
A
T
AND
CAN
BE
OBTAINED
FROM
THE
FFT
SPECTRUM
MF
HAS
BEEN
PROVEN
ESPECIALLY
EFFECTIVE
FOR
THE
DETECTION
OF
WAVEFORMS
WITH
CONSISTENT
TEMPORAL
CHARACTERISTICS
KRUSIENSKI
ET
AL
USED
MF
FOR
THE
IDENTIFICATION
OF
USER
INTENTIONS
THROUGH
Μ
RHYTHMS
AND
BRUNNER
ET
AL
ALSO
USED
IT
FOR
SSVEP
FEATURE
EXTRACTION
WAVELET
TRANSFORM
WT
WT
IS
A
MATHEMATICAL
TOOL
WIDELY
USED
FOR
EXTRACTING
INFORMATION
FROM
MANY
DIFFERENT
KINDS
OF
DATA
SUCH
AS
AUDIO
OR
IMAGE
DATA
AMONG
OTHERS
WT
IS
PARTICULARLY
SUITABLE
WHEN
SIGNALS
ARE
NOT
STATIONARY
BECAUSE
IT
PROVIDES
A
FLEXIBLE
WAY
OF
REPRESENTING
THE
TIME
FREQUENCY
OF
A
SIGNAL
SENSORS
WAVELETS
ARE
FUNCTIONS
OF
VARYING
FREQUENCY
AND
LIMITED
DURATION
THAT
ALLOW
SIMULTANEOUS
STUDY
OF
THE
SIGNAL
IN
BOTH
THE
TIME
AND
THE
FREQUENCY
DOMAIN
IN
CONTRAST
TO
OTHER
MODALITIES
OF
SIGNAL
ANALYSIS
SUCH
AS
FOURIER
TRANSFORM
FT
FT
PROVIDES
ONLY
AN
ANALYSIS
OF
THE
SIGNAL
ACTIVITY
IN
THE
FREQUENCY
DOMAIN
FT
GIVES
INFORMATION
ABOUT
THE
FREQUENCY
CONTENT
BUT
IT
IS
NOT
ACCOMPANIED
BY
INFORMATION
ON
WHEN
THOSE
FREQUENCIES
OCCUR
SHORT
TERM
FOURIER
TRANSFORM
STFT
WAS
PROPOSED
TO
OVERCOME
THIS
SHORTCOMING
OF
THE
FOURIER
ANALYSIS
THE
STFT
DIVIDES
THE
SIGNAL
INTO
SUCCESSIVE
TIME
WINDOWS
AND
APPLIES
THE
FT
IN
EACH
EPOCH
OF
THE
SIGNAL
IN
TIME
IN
THIS
APPROACH
THE
DESIGN
OF
WINDOW
LENGTH
IS
A
TRADE
OFF
BECAUSE
SMALLER
WINDOWS
LEAD
TO
HIGHER
TEMPORAL
RESOLUTION
BUT
ALSO
TO
LOWER
FREQUENCY
RESOLUTION
AT
THE
SAME
TIME
THE
WT
OVERCOMES
THIS
DRAWBACK
BY
DECOMPOSING
THE
SIGNAL
IN
BOTH
THE
TIME
AND
THE
FREQUENCY
DOMAIN
AT
MULTIPLE
RESOLUTIONS
BY
USING
A
MODULATED
WINDOW
THAT
IS
SHIFTED
ALONG
THE
SIGNAL
AT
VARIOUS
SCALES
CONTINUOUS
WAVELET
TRANSFORM
CWT
IS
DEFINED
AS
THE
CONVOLUTION
OF
THE
SIGNAL
WITH
THE
WAVELET
FUNCTION
IS
THE
WAVELET
COEFFICIENT
THAT
CORRESPONDS
TO
THE
FREQUENCY
ASSOCIATED
WITH
THE
SCALE
AND
THE
TIME
Τ
OF
THE
WAVELET
FUNCTION
AND
THE
SYMBOL
EXPRESSES
THE
COMPLEX
CONJUGATION
THE
WAVELET
FUNCTION
IS
A
DILATED
AND
SHIFTED
VERSION
OF
A
MOTHER
WAVELET
A
MOTHER
WAVELET
CAN
TAKE
MULTIPLES
SHAPES
BUT
IT
ALWAYS
SATISFIES
THE
NEXT
CONDITION
THE
CWT
DEFINED
IN
THE
EQUATION
IS
ACTUALLY
A
KIND
OF
TEMPLATE
MATCHING
SIMILAR
TO
A
MATCHED
FILTER
IN
WHICH
THE
CROSS
VARIANCE
BETWEEN
THE
SIGNAL
AND
A
PREDEFINED
WAVEFORM
IS
CALCULATED
THE
ADVANTAGE
OF
THE
CWT
OVER
CLASSIC
TEMPLATE
MATCHING
METHODS
ARISES
FROM
THE
SPECIAL
PROPERTIES
OF
THE
WAVELET
TEMPLATE
THE
WAVELETS
ARE
SUITABLE
FOR
TRANSIENT
SIGNAL
ANALYSIS
IN
WHICH
THE
SPECTRAL
PROPERTIES
OF
THE
SIGNAL
VARY
OVER
TIME
WT
IS
A
POWERFUL
TOOL
FOR
THE
DECOMPOSITION
OF
TRANSIENT
BRAIN
SIGNALS
INTO
THEIR
CONSTITUENT
PARTS
BASED
ON
A
COMBINATION
OF
CRITERIA
SUCH
AS
FREQUENCY
AND
TEMPORAL
POSITION
SIGNALS
OF
IDENTICAL
FREQUENCY
RANGES
CAN
BE
DISTINGUISHED
BY
MEANS
OF
THE
TEMPORAL
POSITION
LIKEWISE
IT
IS
POSSIBLE
TO
SEPARATE
TEMPORALLY
OVERLAPPING
PROCESSES
THANKS
TO
THE
DIFFERENT
FREQUENCY
CONTENT
THE
CWT
INTRODUCES
A
LOT
OF
REDUNDANCY
AND
COMPLEXITY
SINCE
IT
INVOLVES
THE
ANALYSIS
OF
A
SIGNAL
AT
A
VERY
HIGH
NUMBER
OF
FREQUENCIES
USING
MULTIPLE
DILATIONS
AND
SHIFTING
OF
THE
MOTHER
WAVELET
DISCRETE
WAVELET
TRANSFORM
DWT
WAS
INTRODUCED
TO
REDUCE
THIS
REDUNDANCY
AND
COMPLEXITY
THE
DWT
TRANSLATES
AND
DILATES
THE
MOTHER
WAVELET
IN
CERTAIN
DISCRETE
VALUES
ONLY
FARINA
ET
AL
SHOWED
A
PATTERN
RECOGNITION
APPROACH
FOR
THE
CLASSIFICATION
OF
SINGLE
TRIAL
MOVEMENT
RELATED
CORTICAL
POTENTIALS
WHERE
THE
FEATURE
SPACE
IS
BUILT
FROM
COEFFICIENTS
OF
A
DISCRETE
WAVELET
TRANSFORMATION
ALTHOUGH
DWT
IS
LESS
REDUNDANT
AND
LESS
COMPLEX
THAN
CWT
CWT
IS
STILL
EMPLOYED
TO
EXTRACT
SENSORS
FEATURES
FROM
AND
SCP
BECAUSE
IT
CAN
CLARIFY
SUBTLE
INFORMATION
THAT
DWT
IS
UNABLE
TO
EXTRACT
THE
USE
OF
WT
REQUIRES
THE
SELECTION
OF
A
MOTHER
WAVELET
MANY
DIFFERENT
MOTHER
WAVELETS
CAN
BE
FOUND
IN
BCI
APPLICATIONS
AND
THE
SELECTION
OF
ANY
ONE
DEPENDS
ON
WHAT
TYPES
OF
FEATURES
NEED
TO
BE
EXTRACTED
FROM
THE
SIGNAL
THE
MEXICAN
HAT
WAVELET
IS
WELL
LOCALIZED
IN
THE
TIME
DOMAIN
AND
IS
EMPLOYED
FOR
THE
LOCALIZATION
OF
ERP
COMPONENTS
IN
TIME
THE
MORLET
WAVELET
IS
WELL
LOCALIZED
IN
THE
FREQUENCY
DOMAIN
AND
HAS
BEEN
USED
FOR
THE
ANALYSIS
OF
GAMMA
ACTIVITY
THE
BI
SCALE
WAVELET
HAS
BEEN
EMPLOYED
SUCCESSFULLY
FOR
DESIGNING
AN
ASYNCHRONOUS
BCI
BASED
ON
DETECTION
OF
IMAGINARY
MOVEMENT
IN
THE
HZ
FREQUENCY
RANGE
ALSO
THE
DAUBECHIES
WAVELET
A
VERY
WELL
KNOWN
MOTHER
WAVELET
HAS
BEEN
USED
FOR
THE
CLASSIFICATION
OF
SCPS
COMMON
SPATIAL
PATTERN
CSP
CSP
IS
A
FEATURE
EXTRACTION
METHOD
THAT
PROJECTS
MULTICHANNEL
EEG
SIGNALS
INTO
A
SUBSPACE
WHERE
THE
DIFFERENCES
BETWEEN
CLASSES
ARE
HIGHLIGHTED
AND
THE
SIMILARITIES
ARE
MINIMIZED
IT
AIMS
TO
MAKE
THE
SUBSEQUENT
CLASSIFICATION
MUCH
MORE
EFFECTIVE
BY
DESIGNING
A
SPATIAL
FILTER
THAT
TRANSFORMS
THE
INPUT
DATA
INTO
OUTPUT
DATA
WITH
AN
OPTIMAL
VARIANCE
FOR
THE
SUBSEQUENT
DISCRIMINATION
CSP
HAS
BEEN
DESIGNED
FOR
THE
ANALYSIS
OF
MULTICHANNEL
DATA
BELONGING
TO
CLASS
PROBLEMS
NEVERTHELESS
SOME
EXTENSIONS
FOR
MULTICLASS
BCIS
HAVE
ALSO
BEEN
PROPOSED
CSP
CALCULATES
THE
NORMALIZED
SPATIAL
COVARIANCE
C
FROM
THE
INPUT
DATA
E
WHICH
REPRESENTS
THE
RAW
DATA
OF
A
SINGLE
TRIAL
BY
MEANS
OF
WHERE
E
IS
AN
MATRIX
IN
WHICH
T
IS
THE
NUMBER
OF
CHANNELS
I
E
RECORDING
ELECTRODES
AND
N
THE
NUMBER
OF
SAMPLES
PER
CHANNEL
THE
APOSTROPHE
DENOTES
THE
TRANSPOSE
OPERATOR
WHILE
TRACE
X
IS
THE
SUM
OF
THE
DIAGONAL
ELEMENTS
OF
X
ASSUMING
CSP
IS
USED
TO
CLASSIFY
TWO
CLASSES
E
G
LEFT
AND
RIGHT
MOTOR
IMAGERY
CSP
CALCULATES
THE
SPATIAL
COVARIANCES
AND
FOR
EACH
OF
THE
TWO
CLASSES
BY
AVERAGING
THE
COVARIANCES
OVER
THE
SUCCESSIVE
TRAINING
TRIALS
OF
EACH
CLASS
OVER
TIME
THE
COMPOSITE
SPATIAL
COVARIANCE
IS
COMPUTED
AS
SINCE
IS
REAL
AND
SYMMETRIC
IT
CAN
BE
FACTORED
AS
WHERE
IS
THE
MATRIX
OF
EIGENVECTORS
AND
IS
THE
DIAGONAL
MATRIX
OF
EIGENVALUES
BY
MEANS
OF
THE
WHITENING
TRANSFORM
THE
VARIANCES
ARE
EQUALIZED
IN
THE
SPACE
SPANNED
BY
AND
ALL
EIGENVALUES
OF
ARE
EQUAL
TO
ONE
IF
AND
ARE
TRANSFORMED
AS
THEN
AND
WILL
SHARE
COMMON
EIGENVECTORS
IF
THEN
AND
WHERE
IS
THE
IDENTITY
MATRIX
AS
A
RESULT
OF
THE
SUM
OF
TWO
CORRESPONDING
EIGENVALUES
BEING
ALWAYS
SENSORS
ONE
THE
EIGENVECTORS
WITH
THE
LARGEST
EIGENVALUES
FOR
CORRESPOND
TO
THE
SMALLEST
EIGENVALUE
FOR
AND
VICE
VERSA
THIS
PROPERTY
IS
VERY
USEFUL
FOR
SUBSEQUENT
CLASSIFICATION
BECAUSE
THE
VARIANCE
OF
THE
SIGNAL
IS
MAXIMIZED
FOR
ONE
CLASS
WHILE
MINIMIZED
FOR
THE
OTHER
CLASS
FINALLY
THE
FEATURE
VECTOR
Z
IS
OBTAINED
FROM
THE
TRIAL
E
AS
WHERE
IS
THE
SPATIAL
FILTER
MATRIX
BUILT
BY
THE
CSP
PROCEDURE
CSP
INCREASES
THE
ACCURACY
OF
SYNCHRONOUS
BCIS
WHERE
IT
IS
ALLOWED
TO
SEND
SIGNALS
ONLY
DURING
CERTAIN
PREDEFINED
TIME
PERIODS
HOWEVER
CSP
DOES
NOT
OFFER
THE
SAME
IMPROVEMENT
IN
ASYNCHRONOUS
BCIS
THIS
IS
MAINLY
DUE
TO
THE
NONSTATIONARY
PROPERTIES
OF
EEG
SIGNALS
ALSO
THE
PERFORMANCE
OF
CSP
IS
AFFECTED
BY
THE
SPATIAL
RESOLUTION
AND
IT
HAS
BEEN
PROVEN
THAT
SOME
ELECTRODE
LOCATIONS
OFFER
MORE
DISCRIMINATIVE
INFORMATION
FOR
SOME
SPECIFIC
BRAIN
ACTIVITIES
THAN
OTHERS
FOR
THESE
REASONS
SEVERAL
METHODS
IMPROVING
THE
ORIGINAL
CSP
METHOD
HAVE
BEEN
PROPOSED
TO
INCREASE
THE
PERFORMANCE
WAVELET
COMMON
SPATIAL
PATTERN
WCSP
COMMON
SPATIO
SPECTRAL
PATTERN
CSSP
AND
COMMON
SPARSE
SPECTRAL
SPATIAL
PATTERN
CSSSP
GENETIC
ALGORITHM
GA
GA
IS
AN
OPTIMIZATION
PROCEDURE
TO
ESTABLISH
WHETHER
A
CERTAIN
SET
OF
FEATURES
IS
THE
MOST
EFFICIENT
GA
HAS
BEEN
USED
IN
VERY
DIVERSE
FIELDS
TO
SOLVE
OPTIMIZATION
PROBLEMS
IN
BCI
RESEARCH
GA
HAS
BEEN
USED
AS
AN
AUTOMATIC
METHOD
TO
EXTRACT
AN
OPTIMAL
SET
OF
RELEVANT
FEATURES
THE
BASELINE
OF
THE
ALGORITHM
IS
A
POPULATION
OF
CANDIDATE
SOLUTIONS
CALLED
INDIVIDUALS
CREATURES
OR
PHENOTYPES
WHICH
ARE
ENCODED
BY
STRINGS
NAMED
CHROMOSOMES
OR
THE
GENOTYPE
OF
THE
GENOME
THESE
STRINGS
ARE
CODED
EITHER
BY
BINARY
INFORMATION
OR
NO
BINARY
INFORMATION
THE
STANDARD
STEPS
OF
THE
GA
CAN
BE
EXPLAINED
BRIEFLY
AS
FOLLOWS
FIGURE
GA
BEGINS
WITH
AN
INITIAL
POPULATION
WHICH
IS
RANDOMLY
GENERATED
UNLESS
THE
ALGORITHM
HAS
PREVIOUS
OF
THE
FINAL
SOLUTION
IN
THE
CASE
OF
HAVING
INITIAL
INFORMATION
THE
INITIAL
POPULATION
MAY
BE
DIRECTED
TOWARDS
AREAS
WHERE
OPTIMAL
SOLUTIONS
ARE
MORE
LIKELY
TO
REDUCE
THE
NUMBER
OF
ITERATIONS
THE
FITNESS
OF
EVERY
INDIVIDUAL
POPULATION
IS
EVALUATED
ACCORDING
TO
THEIR
FITNESS
SOME
REPRESENTATIVES
OF
THE
POPULATION
MAY
BE
DISCARDED
TO
VACATE
SPACE
FOR
NEWLY
GENERATED
INDIVIDUALS
OTHER
INDIVIDUALS
MAY
BE
SELECTED
AS
PARENTS
IN
ORDER
TO
BREED
NEW
INDIVIDUALS
ALSO
SOME
INDIVIDUALS
MAY
BE
STOCHASTICALLY
SELECTED
TO
KEEP
DIVERSITY
IN
THE
POPULATION
PREVENTING
PREMATURE
CONVERGENCE
AFTER
THE
SELECTION
STEP
THE
INDIVIDUALS
ARE
CROSSED
WITH
EACH
OTHER
IN
THE
CROSSOVER
STEP
MATING
IS
PERFORMED
AMONG
THE
SELECTED
PARENTS
TO
GENERATE
ONE
OR
MORE
OFFSPRING
TO
KEEP
A
FIXED
POPULATION
SIZE
THE
NUMBER
OF
OFFSPRING
IS
USUALLY
THE
SAME
AS
THE
NUMBER
OF
DISCARDED
INDIVIDUALS
THE
PARENTS
GENES
ARE
SPLIT
INTO
PIECES
AND
THEN
COMBINED
TO
FORM
NEW
OFFSPRING
FOLLOWING
THE
CROSSOVER
STEP
MUTATIONS
ARE
INTRODUCED
TO
ALTER
THE
POPULATION
IN
ORDER
TO
AVOID
CONVERGING
TOWARDS
A
LOCAL
SUBOPTIMUM
SOLUTION
BEFORE
EXPLORING
THE
ENTIRE
SEARCH
SPACE
AS
A
RESULT
OF
THE
MUTATION
IT
IS
POSSIBLE
TO
DISCOVER
AREAS
THAT
CANNOT
BE
EXPLORED
BY
CROSSOVER
FINALLY
THE
FITNESS
OF
THE
NEW
POPULATION
IS
EVALUATED
WHEN
AN
ACCEPTABLE
SOLUTION
IS
REACHED
OR
THE
MAXIMUM
NUMBER
OF
GENERATIONS
HAS
BEEN
PRODUCED
THE
ALGORITHM
IS
TERMINATED
OTHERWISE
ANOTHER
ITERATION
OF
THE
ALGORITHM
IS
PRODUCED
SENSORS
FIGURE
GENETIC
ALGORITHM
START
INITIAL
POPULATION
SELECTION
EVALUATION
CROSSOVER
OPTIMUM
POPULATION
MUTATION
OR
MAXIMUM
NUMBER
OF
ITERATIONS
YES
END
SEQUENTIAL
SELECTION
SEQUENTIAL
SELECTION
IS
AN
OPTIMIZATION
APPROACH
THAT
AIMS
AT
FINDING
THE
OPTIMAL
SUBSET
OF
FEATURES
BY
ADDING
OR
REMOVING
FEATURES
SEQUENTIALLY
THERE
ARE
TWO
ALGORITHMS
THAT
PERFORM
SEQUENTIAL
SELECTION
SEQUENTIAL
FORWARD
SELECTION
AND
SEQUENTIAL
BACKWARD
SELECTION
SEQUENTIAL
FORWARD
SELECTION
SFS
IS
A
BOTTOM
UP
ALGORITHM
FIRSTLY
THE
BEST
INDIVIDUAL
FEATURE
IS
FOUND
AS
THE
FIRST
FEATURE
IN
THE
SUBSET
NEXT
FOR
EACH
SUBSEQUENT
STEP
THE
ALGORITHM
CHOOSES
THE
FEATURE
FROM
THE
REMAINING
SET
WHICH
IN
COMBINATION
WITH
THE
PREVIOUSLY
SELECTED
FEATURES
YIELDS
THE
BEST
SUBSET
OF
FEATURES
FINALLY
THE
ALGORITHM
FINISHES
WHEN
THE
REQUIRED
NUMBER
OF
FEATURES
IS
REACHED
THE
SHORTCOMING
OF
THIS
ALGORITHM
IS
THAT
THE
SUPERFLUOUS
FEATURES
ARE
NOT
REMOVED
ONCE
OTHER
FEATURES
ARE
ADDED
SEQUENTIAL
BACKWARD
SELECTION
SBS
IN
CONTRAST
TO
SFS
IS
A
TOP
DOWN
PROCESS
THE
PROCESS
STARTS
WITH
THE
ENTIRE
SET
OF
FEATURES
AND
REMOVES
STEP
BY
STEP
FEATURES
IN
SUCH
A
WAY
THAT
THE
ERROR
IS
AS
LOW
AS
POSSIBLE
THIS
ALGORITHM
IS
ALSO
SUBOPTIMAL
BECAUSE
IT
DISCARDS
SOME
FEATURES
THAT
MAY
BE
HELPFUL
AFTER
DISCARDING
OTHER
FEATURES
SFS
HAS
BEEN
USED
WITH
SUCCESS
IN
THE
FIELD
OF
BCIS
ANOTHER
REFINED
METHOD
IS
INTRODUCED
TO
PARTIALLY
OVERCOME
THE
AFOREMENTIONED
DEFICIENCIES
THIS
METHOD
KNOWN
AS
PLUS
L
TAKE
AWAY
R
METHOD
L
R
ADDS
L
FEATURES
AND
REMOVE
R
FEATURES
THAT
IS
NOT
WORKING
WELL
WITH
OTHER
SELECTED
FEATURES
SEQUENTIAL
FORWARD
FLOATING
SEARCH
SFFS
OR
SEQUENTIAL
BACKWARD
FLOATING
SEARCH
SBFS
ARE
BASED
ON
THE
PLUS
L
TAKE
AWAY
R
METHOD
SFFS
STARTS
WITH
A
NULL
FEATURE
SET
AND
FOR
EACH
STEP
THE
R
BEST
FEATURES
ARE
INCLUDED
IN
THE
CURRENT
FEATURE
SET
IN
OTHER
WORDS
R
STEPS
OF
SFS
ARE
PERFORMED
NEXT
THE
ALGORITHM
VERIFIES
THE
POSSIBILITY
THAT
SOME
FEATURE
MAY
BE
EXCLUDED
THEN
L
WORST
FEATURES
ARE
ELIMINATED
FROM
THE
SET
IN
OTHER
WORDS
L
STEPS
OF
SBS
SFFS
INCREASES
AND
DECREASES
THE
NUMBER
OF
FEATURES
UNTIL
THE
DESIRED
NUMBER
OF
FEATURES
IS
REACHED
SBFS
WORKS
ANALOGOUSLY
BUT
STARTING
WITH
THE
FULL
FEATURE
SET
AND
PERFORMING
THE
SEARCH
UNTIL
THE
DESIRED
DIMENSION
IS
REACHED
USING
SBS
AND
SFS
STEPS
IN
BCI
RESEARCH
SFFS
HAS
BEEN
USED
TO
REDUCE
THE
DIMENSIONALITY
OF
THE
FEATURE
SPACE
TO
AN
APPROPRIATE
SIZE
FOR
THE
AVAILABLE
TRAINING
DATA
NO
SENSORS
ARTIFACTS
IN
BCIS
ARTIFACTS
ARE
UNDESIRABLE
SIGNALS
THAT
CONTAMINATE
BRAIN
ACTIVITY
AND
ARE
MOSTLY
OF
NON
CEREBRAL
ORIGIN
SINCE
THE
SHAPE
OF
NEUROLOGICAL
PHENOMENON
IS
AFFECTED
ARTIFACTS
MAY
REDUCE
THE
PERFORMANCE
OF
BCI
BASED
SYSTEMS
ARTIFACTS
MAY
BE
CLASSIFIED
INTO
TWO
MAJOR
CATEGORIES
PHYSIOLOGICAL
ARTIFACTS
AND
NON
PHYSIOLOGICAL
OR
TECHNICAL
ARTIFACTS
PHYSIOLOGICAL
ARTIFACTS
ARE
USUALLY
DUE
TO
MUSCULAR
OCULAR
AND
HEART
ACTIVITY
KNOWN
AS
ELECTROMYOGRAPHY
EMG
ELECTROOCULOGRAPHY
EOG
AND
ELECTROCARDIOGRAPHY
ECG
ARTIFACTS
RESPECTIVELY
EMG
ARTIFACTS
WHICH
IMPLY
TYPICALLY
LARGE
DISTURBANCES
IN
BRAIN
SIGNALS
COME
FROM
ELECTRICAL
ACTIVITY
CAUSED
BY
MUSCLE
CONTRACTIONS
WHICH
OCCUR
WHEN
PATIENTS
ARE
TALKING
CHEWING
OR
SWALLOWING
EOG
ARTIFACTS
ARE
PRODUCED
BY
BLINKING
AND
OTHER
EYE
MOVEMENTS
BLINKING
MAKES
GENERALLY
HIGH
AMPLITUDE
PATTERNS
OVER
BRAIN
SIGNALS
IN
CONTRAST
TO
EYE
MOVEMENTS
WHICH
PRODUCE
LOW
FREQUENCY
PATTERNS
THESE
ELECTRICAL
PATTERNS
ARE
DUE
TO
THE
POTENTIAL
DIFFERENCE
BETWEEN
THE
CORNEA
AND
THE
RETINA
AS
THEIR
RESPECTIVE
CHARGES
ARE
POSITIVE
AND
NEGATIVE
FOR
THAT
REASON
THE
ELECTRIC
FIELD
AROUND
THE
EYE
CHANGES
WHEN
THIS
DIPOLE
MOVES
EOG
ARTIFACTS
MOSTLY
AFFECT
THE
FRONTAL
AREA
BECAUSE
THEY
ARE
APPROXIMATELY
ATTENUATED
ACCORDING
TO
THE
SQUARE
OF
THE
DISTANCE
FINALLY
ECG
ARTIFACTS
WHICH
REFLECT
HEART
ACTIVITY
INTRODUCE
A
RHYTHMIC
SIGNAL
INTO
BRAIN
ACTIVITY
TECHNICAL
ARTIFACTS
ARE
MAINLY
ATTRIBUTED
TO
POWER
LINE
NOISES
OR
CHANGES
IN
ELECTRODE
IMPEDANCES
WHICH
CAN
USUALLY
BE
AVOIDED
BY
PROPER
FILTERING
OR
SHIELDING
THEREFORE
THE
BCI
COMMUNITY
FOCUSES
PRINCIPALLY
ON
PHYSIOLOGICAL
ARTIFACTS
GIVEN
THAT
THEIR
REDUCTION
DURING
BRAIN
ACTIVITY
ACQUISITION
IS
A
MUCH
MORE
CHALLENGING
ISSUE
THAN
NON
PHYSIOLOGICAL
ARTIFACT
HANDLING
SEVERAL
WAYS
OF
HANDLING
PHYSIOLOGICAL
ARTIFACTS
CAN
BE
FOUND
IN
THE
LITERATURE
ARTIFACTS
MAY
BE
AVOIDED
REJECTED
OR
REMOVED
FROM
RECORDINGS
OF
BRAIN
SIGNALS
ARTIFACT
AVOIDANCE
INVOLVES
ASKING
PATIENTS
TO
AVOID
BLINKING
OR
MOVING
THEIR
BODY
DURING
THE
EXPERIMENTS
THIS
APPROACH
TO
ARTIFACT
HANDLING
IS
VERY
SIMPLE
BECAUSE
IT
DOES
NOT
REQUIRE
ANY
COMPUTATION
AS
BRAIN
SIGNALS
ARE
NOT
ASSUMED
TO
HAVE
ARTIFACTS
HOWEVER
THIS
ASSUMPTION
IS
NOT
ALWAYS
FEASIBLE
GIVEN
THAT
SOME
ARTIFACTS
INVOLUNTARY
HEART
BEATS
EYE
AND
BODILY
TWITCHES
ARE
NOT
EASILY
AVOIDABLE
DURING
DATA
RECORDING
ESPECIALLY
IN
CASES
OF
STRONG
NEUROLOGICAL
DISORDERS
ARTIFACT
REJECTION
APPROACHES
SUGGEST
DISCARDING
THE
EPOCHS
CONTAMINATED
BY
THE
ARTIFACTS
MANUAL
ARTIFACT
REJECTION
IS
AN
OPTION
TO
REMOVE
ARTIFACTS
IN
BRAIN
SIGNALS
AND
AN
EXPERT
COULD
IDENTIFY
AND
ELIMINATE
ALL
ARTIFACT
CONTAMINATED
EPOCHS
THE
MAIN
DISADVANTAGE
IN
USING
MANUAL
REJECTION
IS
THAT
IT
REQUIRES
INTENSIVE
HUMAN
LABOR
SO
THIS
APPROACH
IS
NOT
SUITABLE
FOR
ON
LINE
BCI
SYSTEMS
NEVERTHELESS
THIS
TASK
CAN
BE
PERFORMED
AUTOMATICALLY
BY
EMG
AND
EOG
ARTIFACT
DETECTION
IF
EMG
AND
EOG
SIGNALS
ARE
MONITORED
THE
BRAIN
SIGNAL
SAMPLES
MAY
BE
REMOVED
WHENEVER
OCULAR
OR
MUSCULAR
ACTIVITY
OF
THE
ARMS
IS
DETECTED
AUTOMATIC
REJECTION
IS
AN
EFFECTIVE
WAY
OF
ARTIFACT
HANDLING
BUT
IT
MAY
FAIL
WHEN
EOG
AMPLITUDES
ARE
TOO
SMALL
BESIDES
REJECTION
METHODOLOGY
MEANS
THAT
THE
USER
LOSES
DEVICE
CONTROL
WHEN
ARTIFACT
CONTAMINATED
SIGNALS
ARE
DISCARDED
INSTEAD
OF
REJECTING
SAMPLES
THE
ARTIFACT
REMOVAL
APPROACH
ATTEMPTS
TO
IDENTIFY
AND
REMOVE
ARTIFACTS
WHILE
KEEPING
THE
NEUROLOGICAL
PHENOMENON
INTACT
COMMON
METHODS
FOR
REMOVING
ARTIFACTS
IN
EEG
ARE
LINEAR
FILTERING
LINEAR
COMBINATION
AND
REGRESSION
BSS
AND
PCA
SOME
OF
WHICH
WERE
DISCUSSED
IN
SECTION
INSTEAD
OF
AVOIDED
REJECTED
OR
REMOVED
ARTIFACTS
FROM
RECORDINGS
OF
BRAIN
SIGNALS
SOME
SYSTEMS
ACQUIRE
AND
PROCESS
ARTIFACTS
TO
OFFER
A
COMMUNICATION
PATH
THAT
EITHER
DISABLED
OR
HEALTHY
PEOPLE
CAN
SENSORS
USE
IN
MANY
TASKS
AND
IN
DIFFERENT
ENVIRONMENTS
THIS
KIND
OF
SYSTEM
IS
NOT
CONSIDERED
A
BCI
BECAUSE
COMMUNICATION
IS
NOT
INDEPENDENT
OF
PERIPHERAL
NERVES
AND
MUSCLES
EMG
COMPUTER
INTERFACE
HUMAN
COMPUTER
INTERFACE
HCI
EMG
BASED
HUMAN
COMPUTER
INTERFACE
EMG
BASED
HUMAN
MACHINE
INTERFACE
EMG
BASED
HUMAN
ROBOT
INTERFACE
MUSCLE
COMPUTER
INTERFACE
MUCI
MAN
MACHINE
INTERFACE
MMI
AND
BIOCONTROLLER
INTERFACE
ARE
DIFFERENT
TERMS
USED
TO
NAME
COMMUNICATION
INTERFACES
IN
THE
SCIENTIFIC
LITERATURE
THAT
CAN
EMPLOY
ARTIFACT
SIGNALS
AMONG
OTHERS
THESE
SYSTEMS
USUALLY
HAVE
GREATER
RELIABILITY
THAN
BCIS
BUT
THEY
CANNOT
BE
USED
BY
SEVERELY
DISABLED
PEOPLE
WITH
STRONG
CONSTRAINTS
IN
VOLUNTARY
MOVEMENTS
CLASSIFICATION
ALGORITHMS
THE
AIM
OF
THE
CLASSIFICATION
STEP
IN
A
BCI
SYSTEM
IS
RECOGNITION
OF
A
USER
INTENTIONS
ON
THE
BASIS
OF
A
FEATURE
VECTOR
THAT
CHARACTERIZES
THE
BRAIN
ACTIVITY
PROVIDED
BY
THE
FEATURE
STEP
EITHER
REGRESSION
OR
CLASSIFICATION
ALGORITHMS
CAN
BE
USED
TO
ACHIEVE
THIS
GOAL
BUT
USING
CLASSIFICATION
ALGORITHMS
IS
CURRENTLY
THE
MOST
POPULAR
APPROACH
REGRESSION
ALGORITHMS
EMPLOY
THE
FEATURES
EXTRACTED
FROM
EEG
SIGNALS
AS
INDEPENDENT
VARIABLES
TO
PREDICT
USER
INTENTIONS
IN
CONTRAST
CLASSIFICATION
ALGORITHMS
USE
THE
FEATURES
EXTRACTED
AS
INDEPENDENT
VARIABLES
TO
DEFINE
BOUNDARIES
BETWEEN
THE
DIFFERENT
TARGETS
IN
FEATURE
SPACE
MCFARLAND
ET
AL
ILLUSTRATED
THE
DIFFERENCES
BETWEEN
THE
TWO
ALTERNATIVES
FOR
A
TWO
TARGET
CASE
BOTH
THE
REGRESSION
APPROACH
AND
THE
CLASSIFICATION
APPROACH
REQUIRE
THE
PARAMETERS
OF
A
SINGLE
FUNCTION
TO
BE
DETERMINED
IN
A
FOUR
TARGET
CASE
ASSUMING
THAT
THE
TARGETS
ARE
DISTRIBUTED
LINEARLY
THE
REGRESSION
APPROACH
STILL
REQUIRES
ONLY
A
SINGLE
FUNCTION
IN
CONTRAST
THE
CLASSIFICATION
APPROACH
REQUIRES
THE
DETERMINATION
OF
THREE
FUNCTIONS
ONE
FOR
EACH
OF
THE
THREE
BOUNDARIES
BETWEEN
THE
FOUR
TARGETS
THEREFORE
THE
CLASSIFICATION
APPROACH
MIGHT
BE
MORE
USEFUL
FOR
TWO
TARGET
APPLICATIONS
AND
THE
REGRESSION
APPROACH
MAY
BE
PREFERABLE
FOR
GREATER
NUMBERS
OF
TARGETS
WHEN
THESE
TARGETS
CAN
BE
ORDERED
ALONG
ONE
OR
MORE
DIMENSIONS
MOREOVER
THE
REGRESSION
APPROACH
IS
BETTER
FOR
CONTINUOUS
FEEDBACK
E
G
APPLICATIONS
WHICH
INVOLVE
CONTINUOUS
CONTROL
OF
CURSOR
MOVEMENT
FIGURE
ILLUSTRATES
THE
DIFFERENCES
BETWEEN
CLASSIFICATION
AND
REGRESSION
APPROACHES
FIGURE
CLASSIFICATION
AND
REGRESSION
APPROACHES
TO
BCI
CONTROL
OF
TWO
TARGETS
ADAPTED
FROM
THE
REGRESSION
ALGORITHMS
EMPLOY
THE
FEATURES
EXTRACTED
FROM
EEG
SIGNALS
AS
INDEPENDENT
VARIABLES
TO
PREDICT
USER
INTENTIONS
IN
CONTRAST
THE
CLASSIFICATION
APPROACH
USES
THE
FEATURES
EXTRACTED
AS
INDEPENDENT
VARIABLES
TO
DEFINE
BOUNDARIES
BETWEEN
THE
DIFFERENT
TARGETS
IN
FEATURE
SPACE
CLASSIFICATION
REGRESSION
SENSORS
CLASSIFICATION
ALGORITHMS
CAN
BE
DEVELOPED
VIA
EITHER
OFFLINE
ONLINE
OR
BOTH
KINDS
OF
SESSIONS
THE
OFFLINE
SESSION
INVOLVES
THE
EXAMINATION
OF
DATA
SETS
SUCH
AS
BCI
COMPETITIONS
DATA
SETS
WHICH
ARE
COLLECTED
FROM
AN
ADAPTIVE
OR
CLOSED
LOOP
SYSTEM
THE
STATISTICS
OF
THE
DATA
MAY
BE
ESTIMATED
FROM
OBSERVATIONS
ACROSS
ENTIRE
SESSIONS
AND
LONG
TERM
COMPUTATIONS
MAY
BE
PERFORMED
THE
RESULTS
CAN
BE
REVIEWED
BY
THE
ANALYST
WITH
THE
AIM
OF
FINE
TUNING
THE
ALGORITHMS
OFFLINE
DATA
ANALYSIS
IS
VALUABLE
BUT
IT
DOES
NOT
ADDRESS
REAL
TIME
ISSUES
IN
CONTRAST
ONLINE
SESSIONS
PROVIDE
A
MEANS
OF
BCI
SYSTEM
EVALUATION
IN
A
REAL
WORLD
ENVIRONMENT
THE
DATA
ARE
PROCESSED
IN
A
CAUSAL
MANNER
AND
THE
ALGORITHMS
ARE
TESTED
IN
AN
ENVIRONMENT
IN
WHICH
THE
USERS
CHANGE
OVER
THE
TIME
AS
A
RESULT
OF
E
G
CHANGES
IN
MOTIVATION
OR
FATIGUE
ALTHOUGH
SOME
RESEARCHERS
TEST
NEW
ALGORITHMS
WITH
ONLY
OFFLINE
DATA
BOTH
OFFLINE
SIMULATION
AND
ONLINE
EXPERIMENTS
ARE
NECESSARY
FOR
EFFECTIVE
ALGORITHM
DESIGN
IN
CLOSED
LOOP
SYSTEMS
IN
OTHER
WORDS
OFFLINE
SIMULATION
AND
CROSS
VALIDATION
CAN
BE
VALUABLE
METHODS
TO
DEVELOP
AND
TEST
NEW
ALGORITHMS
BUT
ONLY
ONLINE
ANALYSIS
CAN
YIELD
SOLID
EVIDENCE
OF
BCI
SYSTEM
PERFORMANCE
CLASSIFICATION
ALGORITHMS
HAVE
TRADITIONALLY
BEEN
CALIBRATED
BY
USERS
THROUGH
SUPERVISED
LEARNING
USING
A
LABELED
DATA
SET
IT
IS
ASSUMED
THAT
THE
CLASSIFIER
IS
ABLE
TO
DETECT
THE
PATTERNS
OF
THE
BRAIN
SIGNAL
RECORDED
IN
ONLINE
SESSIONS
WITH
FEEDBACK
HOWEVER
THIS
ASSUMPTION
RESULTS
IN
A
REDUCTION
IN
THE
PERFORMANCE
OF
BCI
SYSTEMS
BECAUSE
THE
BRAIN
SIGNALS
ARE
INHERENTLY
NON
STATIONARY
IN
THIS
REGARD
SHENOY
ET
AL
DESCRIBED
TWO
MAIN
SOURCES
OF
NON
STATIONARITY
ON
THE
ONE
HAND
THE
PATTERNS
OBSERVED
IN
THE
EXPERIMENTAL
SAMPLES
DURING
CALIBRATION
SESSIONS
MAY
BE
DIFFERENT
FROM
THOSE
RECORDED
DURING
THE
ONLINE
SESSION
ON
THE
OTHER
HAND
PROGRESSIVE
MENTAL
TRAINING
OF
THE
USERS
OR
EVEN
CHANGES
IN
CONCENTRATION
ATTENTIVENESS
OR
MOTIVATION
MAY
AFFECT
THE
BRAIN
SIGNALS
THEREFORE
ADAPTIVE
ALGORITHMS
ARE
ESSENTIAL
FOR
IMPROVING
BCI
ACCURACY
ADAPTATION
TO
NON
STATIONARY
SIGNALS
IS
PARTICULARLY
NECESSARY
IN
ASYNCHRONOUS
AND
NON
INVASIVE
BCIS
APART
FROM
THE
FACT
THAT
SUPERVISED
LEARNING
IS
NOT
OPTIMAL
FOR
NON
STATIONARY
SIGNALS
CLASSIFICATION
LARGE
DATA
SETS
AND
THUS
LONG
INITIAL
CALIBRATION
SESSIONS
ARE
USUALLY
REQUIRED
TO
ACHIEVE
ACCEPTABLE
ACCURACY
SEMI
SUPERVISED
LEARNING
HAS
BEEN
SUGGESTED
TO
REDUCE
TRAINING
TIME
AND
TO
UPDATE
THE
CLASSIFIER
IN
THE
ONLINE
SESSION
ON
A
CONTINUOUS
BASIS
IN
SEMI
SUPERVISED
LEARNING
THE
CLASSIFIER
IS
INITIALLY
TRAINED
USING
A
SMALL
LABELED
DATA
SET
AFTER
WHICH
THE
CLASSIFIER
IS
UPDATED
WITH
ON
LINE
TEST
DATA
IN
A
REALISTIC
BCI
SCENARIO
THE
SIGNAL
ASSOCIATED
WITH
THE
SUBJECT
INTENTIONS
IS
NOT
USUALLY
KNOWN
AND
THE
LABELS
ARE
NOT
AVAILABLE
EITHER
UNSUPERVISED
LEARNING
OR
REINFORCEMENT
LEARNING
CAN
BE
APPLIED
FOR
BCI
ADAPTATION
WHEN
THE
LABELED
DATA
SET
IS
NOT
AVAILABLE
UNSUPERVISED
METHODS
ATTEMPT
TO
FIND
HIDDEN
STRUCTURES
IN
UNLABELED
DATA
IN
ORDER
TO
CLASSIFY
THEM
SOME
UNSUPERVISED
METHODS
RELY
ON
TECHNIQUES
FOR
CO
ADAPTIVE
LEARNING
OF
USER
AND
MACHINE
OR
COVARIATE
SHIFT
ADAPTATION
REINFORCEMENT
LEARNING
METHODS
ARE
BASED
ON
THE
FACT
THAT
DISTINGUISHING
EEG
POTENTIALS
ARE
ELICITED
WHEN
A
SUBJECT
IS
AWARE
OF
AN
ERRONEOUS
DECISION
THESE
POTENTIALS
ARE
USED
AS
LEARNING
SIGNALS
TO
PREVENT
THAT
ERROR
FROM
BEING
REPEATED
IN
THE
FUTURE
THE
ADAPTATION
GENERALLY
RESULTS
IN
ENHANCED
PERFORMANCE
NEVERTHELESS
IT
IS
WORTH
HIGHLIGHTING
THAT
INHERENT
RISKS
EXIST
IN
AN
ADAPTIVE
BCI
A
BCI
THAT
LEARNS
TOO
FAST
MAY
CONFUSE
THE
USER
BECAUSE
TRAINING
WILL
TAKE
PLACE
IN
A
CHANGING
ENVIRONMENT
IN
ADDITION
ADAPTIVE
PROCEDURES
CAN
HIDE
SOME
RELEVANT
SIGNAL
FEATURES
ACCORDINGLY
THERE
IS
A
TRADEOFF
BETWEEN
HIGHLY
SENSITIVE
ADAPTATION
AND
FEATURE
EXTRACTION
SENSORS
CLASSIFIERS
ALSO
HAVE
TO
FACE
TWO
MAIN
PROBLEMS
RELATED
TO
THE
PATTERN
RECOGNITION
TASK
THE
CURSE
OF
DIMENSIONALITY
AND
THE
BIAS
VARIANCE
TRADEOFF
THE
CURSE
OF
DIMENSIONALITY
MEANS
THAT
THE
NUMBER
OF
TRAINING
DATA
NEEDED
TO
OFFER
GOOD
RESULTS
INCREASES
EXPONENTIALLY
WITH
THE
DIMENSIONALITY
OF
THE
FEATURE
VECTOR
UNFORTUNATELY
THE
AVAILABLE
TRAINING
SETS
ARE
USUALLY
SMALL
IN
BCI
RESEARCH
BECAUSE
TRAINING
PROCESS
TAKES
A
LONG
TIME
AND
IS
A
TIRING
PROCESS
FOR
USERS
THE
BIAS
VARIANCE
TRADEOFF
REPRESENTS
THE
NATURAL
TREND
OF
THE
CLASSIFIERS
TOWARDS
A
HIGH
BIAS
WITH
LOW
VARIANCE
AND
VICE
VERSA
STABLE
CLASSIFIERS
ARE
CHARACTERIZED
BY
HIGH
BIAS
WITH
LOW
VARIANCE
WHILE
UNSTABLE
CLASSIFIERS
SHOW
HIGH
VARIANCE
WITH
LOW
BIAS
TO
ACHIEVE
THE
LOWEST
CLASSIFICATION
ERROR
BIAS
AND
VARIANCE
SHOULD
BE
LOW
SIMULTANEOUSLY
A
SET
OF
STABILIZATION
TECHNIQUES
SUCH
AS
THE
COMBINATION
OF
CLASSIFIERS
OR
REGULARIZATION
CAN
BE
USED
TO
REDUCE
THE
VARIANCE
THE
DESIGN
OF
THE
CLASSIFICATION
STEP
INVOLVES
THE
CHOICE
OF
ONE
OR
SEVERAL
CLASSIFICATION
ALGORITHMS
FROM
MANY
ALTERNATIVES
SEVERAL
CLASSIFICATION
ALGORITHMS
HAVE
BEEN
PROPOSED
SUCH
AS
K
NEAREST
NEIGHBOR
CLASSIFIERS
LINEAR
CLASSIFIERS
SUPPORT
VECTOR
MACHINES
AND
NEURAL
NETWORKS
AMONG
OTHERS
THE
GENERAL
TREND
PREFERS
SIMPLE
ALGORITHMS
TO
COMPLEX
ALTERNATIVES
SIMPLE
ALGORITHMS
HAVE
AN
INHERENT
ADVANTAGE
BECAUSE
THEIR
ADAPTATION
TO
THE
FEATURES
OF
THE
BRAIN
SIGNAL
IS
INHERENTLY
SIMPLER
AND
MORE
EFFECTIVE
THAN
FOR
MORE
COMPLEX
ALGORITHMS
NEVERTHELESS
SIMPLE
ALGORITHMS
WHENEVER
OUTPERFORMED
IN
ONLINE
AND
OFFLINE
EVALUATIONS
SHOULD
BE
REPLACED
BY
MORE
COMPLEX
ALTERNATIVES
TABLE
SUMMARY
OF
CLASSIFICATION
METHODS
APPROACH
PROPERTIES
APPLICATIONS
GENERATIVE
MODEL
ASSIGNS
THE
OBSERVED
FEATURE
VECTOR
TO
THE
LABELED
CLASS
TO
WHICH
IT
HAS
BAYESIAN
THE
HIGHEST
PROBABILITY
OF
BELONGING
ANALYSIS
PRODUCES
NONLINEAR
DECISION
BOUNDARIES
NOT
VERY
POPULAR
IN
THE
BCI
SYSTEMS
LINEAR
SIMPLE
CLASSIFIER
WITH
ACCEPTABLE
ACCURACY
LDA
LOW
COMPUTATION
REQUIREMENTS
FAILS
IN
THE
PRESENCE
OF
OUTLIERS
OR
STRONG
NOISE
REGULARIZATION
REQUIRED
USUALLY
TWO
CLASS
EXTENDED
MULTICLASS
VERSION
EXITS
IMPROVED
LDA
VERSIONS
BLDA
FLDA
SVM
LINEAR
AND
NON
LINEAR
GAUSSIAN
MODALITIES
BINARY
OR
MULTICLASS
METHOD
MAXIMIZES
THE
DISTANCE
BETWEEN
THE
NEAREST
TRAINING
SAMPLES
AND
THE
HYPERPLANES
FAILS
IN
THE
PRESENCE
OF
OUTLIERS
OR
STRONG
NOISE
REGULARIZATION
REQUIRED
SPEEDY
CLASSIFIER
NON
LINEAR
USES
METRIC
DISTANCES
BETWEEN
THE
TEST
FEATURE
AND
THEIR
NEIGHBORS
K
NNC
MULTICLASS
EFFICIENT
WITH
LOW
DIMENSIONAL
FEATURE
VECTORS
VERY
SENSITIVE
TO
THE
DIMENSIONALITY
OF
THE
FEATURE
VECTORS
ANN
VERY
FLEXIBLE
CLASSIFIER
MULTICLASS
MULTIPLE
ARCHITECTURES
PNN
FUZZY
ARTMAP
ANN
FIRNN
PEGNC
SENSORS
FINALLY
CERTAIN
INHERENT
DANGERS
OF
CLASSIFICATION
ALGORITHM
USAGE
SHOULD
BE
POINTED
OUT
ALTHOUGH
CLASSIFICATION
ALGORITHMS
HAVE
CLEARLY
HELPED
TO
CHARACTERIZE
TASK
RELEVANT
BRAIN
STATES
SEVERAL
PITFALLS
MAY
OCCUR
WHEN
THESE
ALGORITHMS
ARE
USED
BY
NON
EXPERTS
BIAS
AND
VARIANCE
OF
THE
ESTIMATED
ERROR
OF
THE
ALGORITHMS
AND
THEIR
OVERFITTING
ARE
THE
MAIN
SOURCE
OF
DIFFICULTIES
IF
A
CLASSIFIER
IS
OVERFITTED
THEN
IT
WILL
ONLY
BE
ABLE
TO
CLASSIFY
THE
TRAINING
DATA
OR
SIMILAR
DATA
OVERFITTING
CAN
BE
AVOIDED
BY
RESTRICTING
THE
COMPLEXITY
OF
THE
CLASSIFICATION
PROCEDURE
CLASSIFICATION
ERROR
IS
ESTIMATED
BY
MEANS
OF
CROSS
VALIDATION
ONCE
A
CLASSIFICATION
ALGORITHM
IS
TRAINED
THE
ALGORITHM
IS
VALIDATED
ON
A
VALIDATION
DATA
SET
WHICH
SHOULD
BE
INDEPENDENT
OF
THE
TRAINING
DATA
SET
THIS
PROCEDURE
IS
USUALLY
REPEATED
SEVERAL
TIMES
USING
DIFFERENT
PARTITIONS
OF
THE
SAMPLE
DATA
THE
RESULTING
VALIDATION
ERRORS
ARE
AVERAGED
ACROSS
MULTIPLE
ROUNDS
THIS
APPROACH
PRESENTS
SOME
INHERENT
DANGERS
THAT
MUST
BE
PREVENTED
BECAUSE
SOME
ELEMENTS
OF
THE
PARTITION
MAY
NOT
BE
INDEPENDENT
OF
EACH
OTHER
OR
MAY
NOT
BE
IDENTICALLY
DISTRIBUTED
AMONG
OTHER
REASONS
NEXT
THIS
SECTION
PRESENTS
THE
PROPERTIES
OF
A
SET
OF
CLASSIFIERS
IN
ORDER
TO
MAKE
IT
EASIER
TO
CHOOSE
AN
APPROPRIATE
CLASSIFIER
FOR
A
GIVEN
TYPE
OF
BCI
ALL
CLASSIFIER
METHODS
ARE
LISTED
IN
TABLE
ALONG
WITH
THEIR
MAIN
PROPERTIES
K
NEAREST
NEIGHBOR
CLASSIFIER
K
NNC
K
NEAREST
NEIGHBOR
CLASSIFIERS
K
NNC
ARE
BASED
ON
THE
PRINCIPLE
THAT
THE
FEATURES
CORRESPONDING
TO
THE
DIFFERENT
CLASSES
WILL
USUALLY
FORM
SEPARATE
CLUSTERS
IN
THE
FEATURE
SPACE
WHILE
THE
CLOSE
NEIGHBORS
BELONG
TO
THE
SAME
CLASS
THIS
CLASSIFIER
TAKES
K
METRIC
DISTANCES
INTO
ACCOUNT
BETWEEN
THE
TEST
SAMPLES
FEATURES
AND
THOSE
OF
THE
NEAREST
CLASSES
IN
ORDER
TO
CLASSIFY
A
TEST
FEATURE
VECTOR
THE
METRIC
DISTANCES
ARE
A
MEASURE
OF
THE
SIMILARITIES
BETWEEN
THE
FEATURES
OF
THE
TEST
VECTOR
AND
THE
FEATURES
OF
EACH
CLASS
THE
ADVANTAGE
OF
TAKING
K
NEIGHBORS
INTO
ACCOUNT
IN
THE
CLASSIFICATION
IS
THAT
ERROR
PROBABILITY
IN
THE
DECISION
IS
DECREASED
SOME
TRAINING
SAMPLES
MAY
BE
AFFECTED
BY
NOISE
AND
ARTIFACTS
WHICH
MAY
SERIOUSLY
INFLUENCE
THE
CLASSIFICATION
RESULTS
IF
A
DECISION
INVOLVING
SEVERAL
NEIGHBORS
IS
MADE
THEN
IT
IS
LESS
LIKELY
THAT
AN
ERROR
WILL
OCCUR
BECAUSE
THE
PROBABILITY
OF
SEVERAL
SIMULTANEOUS
ERRONEOUS
DATUM
IS
MUCH
LOWER
RATHER
THAN
ONLY
THE
CLOSEST
SAMPLE
IF
SEVERAL
K
CLOSEST
CLASSES
ARE
CONSIDERED
THEN
A
VOTING
SCHEME
IS
REQUIRED
TO
DECIDE
BETWEEN
COMPETING
CHOICES
SINCE
THERE
ARE
NO
REASONS
TO
ASSUME
THAT
THE
DISTRIBUTIONS
OF
THOSE
NEIGHBORS
ARE
HOMOGENOUS
IT
IS
CLEAR
TO
SEE
THAT
THE
K
NNC
HAS
TO
ASSIGN
DIFFERENT
RANKS
TO
THE
NEAREST
NEIGHBORS
ACCORDING
TO
THEIR
DISTANCES
FROM
THE
TEST
EXAMPLE
THEREFORE
K
NNC
NEEDS
TO
DEFINE
A
WEIGHTING
FUNCTION
WHICH
VARIES
WITH
THE
DISTANCE
IN
SUCH
A
WAY
THAT
THE
OUTPUT
VALUE
DECREASES
AS
THE
DISTANCE
BETWEEN
THE
TEST
FEATURE
VECTOR
AND
THE
NEIGHBOR
INCREASES
THE
FUNCTION
DEFINED
BY
EQUATION
MEETS
THIS
REQUIREMENT
WHERE
DENOTES
THE
DISTANCE
OF
THE
I
TH
NEAREST
NEIGHBOR
FROM
A
TEST
EXAMPLE
THAT
IS
CORRESPONDS
TO
THE
NEAREST
NEIGHBOR
AND
TO
THE
FURTHEST
THE
DECISION
RULE
OF
K
NNC
ASSIGNS
THE
UNKNOWN
EXAMPLES
TO
THE
CLASS
WITH
THE
GREATEST
SUM
OF
WEIGHTS
AMONG
ITS
K
NEAREST
NEIGHBORS
K
NNC
IS
NOT
VERY
COMMON
IN
BCI
RESEARCH
BECAUSE
THIS
CLASSIFIER
IS
VERY
SENSITIVE
TO
THE
DIMENSIONALITY
OF
THE
FEATURE
VECTOR
NEVERTHELESS
K
NNC
HAS
BEEN
PROVEN
TO
BE
EFFICIENT
WITH
SENSORS
LOW
DIMENSION
FEATURE
VECTORS
ALSO
K
NNC
HAS
BEEN
TESTED
IN
A
MULTICLASS
ENVIRONMENT
AND
APPLIED
TO
CURSOR
MOVEMENTS
ON
A
VERTICAL
AXIS
WHEN
CLASSIFYING
SCPS
LINEAR
DISCRIMINANT
ANALYSIS
LDA
LDA
IS
A
VERY
SIMPLE
CLASSIFIER
THAT
PROVIDES
ACCEPTABLE
ACCURACY
WITHOUT
HIGH
COMPUTATION
REQUIREMENTS
LDA
IS
VERY
COMMON
IN
THE
BCI
COMMUNITY
AND
IS
A
GOOD
CHOICE
FOR
DESIGNING
ONLINE
BCI
SYSTEMS
WITH
A
RAPID
RESPONSE
BUT
LIMITED
COMPUTATIONAL
RESOURCES
LDA
PROVIDES
RELATIVELY
ACCEPTABLE
ACCURACY
AND
HAS
BEEN
USED
SUCCESSFULLY
IN
NUMEROUS
BCI
SYSTEMS
SUCH
AS
SPELLER
MULTICLASS
OR
SYNCHRONOUS
BCIS
NEVERTHELESS
IT
CAN
LEAD
TO
COMPLETELY
ERRONEOUS
CLASSIFICATIONS
IN
THE
PRESENCE
OF
OUTLIERS
OR
STRONG
NOISE
LDA
IS
USUALLY
APPLIED
TO
CLASSIFY
PATTERNS
INTO
TWO
CLASSES
ALTHOUGH
IT
IS
POSSIBLE
TO
EXTEND
THE
METHOD
TO
MULTIPLES
CLASSES
FOR
A
TWO
CLASS
PROBLEM
LDA
ASSUMES
THAT
THE
TWO
CLASSES
ARE
LINEARLY
SEPARABLE
ACCORDING
TO
THIS
ASSUMPTION
LDA
DEFINES
A
LINEAR
DISCRIMINATION
FUNCTION
WHICH
REPRESENTS
A
HYPERPLANE
IN
THE
FEATURE
SPACE
IN
ORDER
TO
DISTINGUISH
THE
CLASSES
THE
CLASS
TO
WHICH
THE
FEATURE
VECTOR
BELONGS
WILL
DEPEND
ON
THE
SIDE
OF
THE
PLANE
WHERE
THE
VECTOR
IS
FOUND
FIGURE
IN
THE
CASE
OF
AN
N
CLASS
PROBLEM
N
SEVERAL
HYPERPLANES
ARE
USED
THE
DECISION
PLANE
CAN
BE
REPRESENTED
MATHEMATICALLY
AS
WHERE
W
IS
KNOWN
AS
THE
WEIGHT
VECTOR
X
IS
THE
INPUT
FEATURE
VECTOR
AND
W
IS
A
THRESHOLD
THE
INPUT
FEATURE
VECTOR
IS
ASSIGNED
TO
ONE
CLASS
OR
THE
OTHER
ON
THE
BASIS
OF
THE
SIGN
OF
FIGURE
LINEAR
CLASSIFIER
AND
MARGINS
THE
DECISION
BOUNDARY
IS
THE
THICK
LINE
ADAPTED
FROM
THERE
ARE
MANY
METHODS
TO
COMPUTE
W
FOR
EXAMPLE
W
MAY
BE
CALCULATED
AS
Μ
Μ
WHERE
Μ
I
IS
THE
ESTIMATED
MEAN
OF
CLASS
I
AND
IS
THE
ESTIMATED
COMMON
COVARIANCE
MATRIX
THE
AVERAGE
OF
THE
TWO
CLASS
EMPIRICAL
COVARIANCE
MATRICES
THE
ESTIMATORS
OF
THE
COVARIANCE
MATRIX
AND
OF
THE
MEAN
ARE
CALCULATED
AS
Μ
Μ
SENSORS
Μ
WHERE
IS
A
MATRIX
CONTAINING
N
FEATURE
VECTORS
FIGURE
EIGENVALUE
SPECTRUM
OF
A
GIVEN
COVARIANCE
MATRIX
BOLD
LINE
AND
EIGENVALUE
SPECTRA
OF
COVARIANCE
MATRICES
ESTIMATED
FROM
A
FINITE
NUMBER
OF
SAMPLES
N
NOTE
THAT
ACCURACY
INCREASES
AS
THE
NUMBER
OF
TRIALS
INCREASE
ADAPTED
FROM
REAL
N
N
N
R
O
T
C
E
V
N
E
IG
E
N
INDEX
OF
EIGENVALUE
THE
ESTIMATION
OF
THE
COVARIANCE
DEFINED
IN
EQUATION
IS
UNBIASED
AND
HAS
GOOD
PROPERTIES
UNDER
USUAL
CONDITIONS
NEVERTHELESS
IT
MAY
BECOME
IMPRECISE
IN
SOME
CASES
WHERE
THE
DIMENSIONALITY
OF
THE
FEATURES
IS
TOO
HIGH
COMPARED
TO
THE
NUMBER
OF
AVAILABLE
TRIALS
THE
ESTIMATED
COVARIANCE
MATRIX
IS
DIFFERENT
FROM
THE
TRUE
COVARIANCE
MATRIX
BECAUSE
THE
LARGE
EIGENVALUES
OF
THE
ORIGINAL
COVARIANCE
MATRIX
ARE
OVER
ESTIMATED
AND
THE
SMALL
EIGENVALUES
ARE
UNDER
ESTIMATED
FIGURE
IT
LEADS
TO
A
SYSTEMATIC
ERROR
WHICH
DEGRADES
LDA
PERFORMANCE
FOR
THIS
REASON
A
NEW
PROCEDURE
HAS
BEEN
PROPOSED
TO
ESTIMATE
THE
COVARIANCE
IMPROVING
THE
STANDARD
ESTIMATOR
DEFINED
IN
THE
EQUATION
THE
NEW
STANDARD
ESTIMATOR
OF
THE
COVARIANCE
MATRIX
IS
GIVEN
BY
THE
Γ
VALUE
IS
REFERRED
TO
AS
A
SHRINKAGE
PARAMETER
AND
IS
TUNABLE
BETWEEN
AND
Ν
IS
DEFINED
AS
WITH
D
BEING
THE
DIMENSIONALITY
OF
THE
FEATURES
SPACE
THE
SELECTION
OF
A
SHRINKAGE
PARAMETER
IMPLIES
A
TRADE
OFF
AND
IS
ESTIMATED
ON
THE
BASIS
OF
THE
INPUT
DATA
SOME
IMPROVED
ALGORITHMS
HAVE
BEEN
INTRODUCED
BASED
ON
LDA
SUCH
AS
FISHER
LDA
FLDA
AND
BAYESIAN
LDA
BLDA
IN
THE
FIRST
EXAMPLE
PERFORMANCE
WAS
IMPROVED
BY
PROJECTING
THE
DATA
TO
A
LOWER
DIMENSIONAL
SPACE
IN
ORDER
TO
ACHIEVE
LARGER
INTERVALS
BETWEEN
THE
PROJECTED
CLASSES
AND
SIMULTANEOUSLY
TO
REDUCE
THE
VARIABILITY
OF
THE
DATA
IN
EACH
CLASS
HOWEVER
FLDA
DOES
NOT
WORK
WELL
SENSORS
WHEN
THE
NUMBER
OF
FEATURES
BECOMES
TOO
LARGE
IN
RELATION
TO
THE
NUMBER
OF
TRAINING
EXAMPLES
THIS
IS
KNOWN
AS
THE
SMALL
SAMPLE
SIZE
PROBLEM
THE
SECOND
MODIFICATION
CAN
BE
SEEN
AS
AN
EXTENSION
OF
FLDA
BLDA
SOLVES
THE
SMALL
SAMPLE
SIZE
PROBLEM
BY
INTRODUCING
A
STATISTICAL
METHOD
KNOWN
AS
REGULARIZATION
THE
REGULARIZATION
IS
ESTIMATED
THROUGH
BAYESIAN
ANALYSIS
OF
TRAINING
DATA
AND
IS
USED
TO
PREVENT
OVERFITTING
OF
HIGH
DIMENSIONAL
AND
POSSIBLY
NOISY
DATASETS
OVERFITTING
MEANS
THE
CLASSIFIER
HAS
LOST
GENERALITY
AND
IS
THEREFORE
UNDESIRABLE
IN
A
CLASSIFIER
IF
A
CLASSIFIER
IS
OVERFITTED
THEN
IT
IS
ONLY
ABLE
TO
CLASSIFY
THE
TRAINING
DATA
OR
SIMILAR
DATA
IN
COMPARISON
TO
FLDA
THE
BLDA
ALGORITHM
PROVIDES
HIGHER
CLASSIFICATION
ACCURACY
AND
BITRATES
ESPECIALLY
IN
THOSE
CASES
WHERE
THE
NUMBER
OF
FEATURES
IS
LARGE
ADDITIONALLY
BLDA
REQUIRES
ONLY
SLIGHTLY
MORE
COMPUTATION
TIME
WHICH
IS
A
CRUCIAL
REQUIREMENT
IN
REAL
BCI
SYSTEMS
SUPPORT
VECTOR
MACHINE
SVM
SVM
IS
A
CLASSIFIER
THAT
IN
A
SIMILAR
WAY
TO
LDA
CLASSIFIERS
CONSTRUCTS
A
HYPERPLANE
OR
SET
OF
HYPERPLANES
IN
ORDER
TO
SEPARATE
THE
FEATURE
VECTORS
INTO
SEVERAL
CLASSES
HOWEVER
IN
CONTRAST
TO
LDA
SVM
SELECTS
THE
HYPERPLANES
THAT
MAXIMIZE
THE
MARGINS
THAT
IS
THE
DISTANCE
BETWEEN
THE
NEAREST
TRAINING
SAMPLES
AND
THE
HYPERPLANES
THE
BASIS
OF
SVM
IS
TO
MAP
DATA
INTO
A
HIGH
DIMENSIONAL
SPACE
AND
FIND
A
SEPARATING
HYPERPLANE
WITH
THE
MAXIMAL
MARGIN
ACCORDING
TO
COVER
THEOREM
ON
THE
SEPARABILITY
OF
PATTERNS
COVER
THEOREM
STATES
THAT
A
COMPLEX
CLASSIFICATION
PROBLEM
CAST
IN
A
HIGH
DIMENSIONAL
NONLINEAR
SPACE
IS
MORE
LIKELY
TO
BE
LINEARLY
SEPARABLE
THAN
IN
A
LOW
DIMENSIONAL
NONLINEAR
SPACE
ALSO
AS
FOR
LINEAR
ANALYSIS
CLASSIFIER
AN
SVM
USES
REGULARIZATION
IN
ORDER
TO
PREVENT
THE
CLASSIFIER
FROM
ACCOMMODATING
POSSIBLY
NOISY
DATASETS
SVM
HAS
BEEN
USED
TO
CLASSIFY
FEATURE
VECTORS
FOR
BINARY
AND
MULTICLASS
PROBLEMS
IT
HAS
ALSO
BEEN
SUCCESSFULLY
USED
IN
A
LARGE
NUMBER
OF
SYNCHRONOUS
BCIS
SUCH
A
CLASSIFIER
IS
REGARDED
AS
A
LINEAR
CLASSIFIER
SINCE
IT
USES
ONE
OR
SEVERAL
HYPERPLANES
NEVERTHELESS
IT
IS
ALSO
POSSIBLE
TO
CREATE
A
SVM
WITH
NON
LINEAR
DECISION
BOUNDARY
BY
MEANS
OF
A
KERNEL
FUNCTION
K
X
Y
NON
LINEAR
SVM
LEADS
TO
A
MORE
FLEXIBLE
DECISION
BOUNDARY
IN
THE
DATA
SPACE
WHICH
MAY
INCREASE
CLASSIFICATION
ACCURACY
THE
KERNEL
THAT
IS
USUALLY
USED
IN
THE
BCI
FIELD
IS
THE
GAUSSIAN
OR
RADIAL
BASIS
FUNCTION
RBF
EXP
THE
GAUSSIAN
SVM
HAS
BEEN
APPLIED
IN
BCIS
TO
CLASSIFY
EVOKED
POTENTIALS
SVM
HAS
BEEN
WIDELY
USED
IN
BCI
BECAUSE
IT
IS
A
SIMPLE
CLASSIFIER
THAT
PERFORMS
WELL
AND
IS
ROBUST
WITH
REGARD
TO
THE
CURSE
OF
DIMENSIONALITY
WHICH
MEANS
A
LARGE
TRAINING
SET
IS
NOT
REQUIRED
FOR
GOOD
RESULTS
EVEN
WITH
VERY
HIGH
DIMENSIONAL
FEATURE
VECTORS
THESE
ADVANTAGES
COME
AT
THE
EXPENSE
OF
EXECUTION
SPEED
NEVERTHELESS
SVM
IS
SPEEDY
ENOUGH
FOR
REAL
TIME
BCIS
BAYESIAN
STATISTICAL
CLASSIFIER
BAYESIAN
STATISTICAL
CLASSIFIER
IS
A
CLASSIFIER
WHICH
AIMS
TO
ASSIGN
WITH
THE
HIGHEST
PROBABILITY
AN
OBSERVED
FEATURE
VECTOR
X
FROM
ITS
CLASS
Y
THE
BAYES
RULE
IS
USED
TO
OBTAIN
THE
A
POSTERIORI
PROBABILITY
THAT
A
FEATURE
VECTOR
HAS
OF
BELONGING
TO
A
GIVEN
CLASS
ASSUMING
FOR
EXAMPLE
TWO
CLASSES
L
SENSORS
AND
R
CORRESPONDING
TO
IMAGINARY
LEFT
AND
RIGHT
MOVEMENTS
OF
THE
HAND
THE
A
POSTERIORI
PROBABILITIES
OF
EACH
CLASS
ARE
COMPUTED
USING
THE
BAYES
RULE
AS
TYPICALLY
IT
IS
ASSUMED
THAT
THE
A
PRIORI
PROBABILITIES
ARE
EQUAL
P
Y
P
L
P
R
SINCE
IT
IS
SUPPOSED
THE
USER
HAS
NO
PREDILECTION
FOR
ANY
MOVEMENT
IN
ORDER
TO
CALCULATE
THE
PROBABILITIES
IT
IS
USUALLY
SUPPOSED
THAT
A
GAUSSIAN
STATISTICAL
DISTRIBUTION
APPLIES
TO
THE
FEATURES
FOR
EACH
CLASS
ALTHOUGH
IT
MAY
ALSO
BE
ASSUMED
THAT
THE
DISTRIBUTION
IS
A
WEIGHTED
MIXTURE
OF
GAUSSIAN
DISTRIBUTIONS
WHERE
W
I
IS
THE
WEIGHT
OF
EACH
GAUSSIAN
PROTOTYPE
AND
M
IS
THE
NUMBER
OF
PROTOTYPES
TWO
WAYS
ARE
FEASIBLE
TO
ESTIMATE
THE
GAUSSIAN
PROTOTYPES
MIXTURE
THE
FIRST
IS
TO
DIVIDE
THE
FEATURE
SPACE
IN
SEVERAL
EQUALLY
SIZED
REGIONS
AND
CALCULATE
THE
MEAN
AND
VARIANCE
OF
THE
GAUSSIAN
PROTOTYPES
IN
EACH
AREA
FROM
TRAINING
DATA
THE
SET
OF
GAUSSIAN
PROTOTYPES
IS
EQUALLY
WEIGHTED
AND
THE
WEIGHTS
W
I
ARE
EQUAL
TO
THE
SECOND
USES
A
GAUSSIAN
MIXTURE
MODELS
GMM
THE
DIFFERENT
WEIGHTS
W
I
AND
THE
MEAN
VARIANCE
AND
COVARIANCE
MATRICES
THAT
DEFINE
EACH
GAUSSIAN
PROTOTYPE
ARE
CALCULATED
BY
THE
EXPECTATION
MAXIMIZATION
EM
ALGORITHM
EM
ALGORITHM
IS
AN
ITERATIVE
PROCEDURE
WHICH
GUARANTEES
THE
MAXIMUM
LIKELIHOOD
OR
MAXIMUM
A
POSTERIORI
MAP
ESTIMATES
OF
THE
PARAMETERS
IN
THE
STATISTICAL
MODEL
LUI
ET
AL
MADE
GMM
ADAPTIVE
TO
SIGNIFICANT
CHANGES
IN
THE
STATISTICAL
DISTRIBUTION
OF
THE
DATA
DURING
LONG
TERM
USE
IN
THESE
IMPROVEMENTS
THE
INITIAL
MEAN
VARIANCE
AND
COVARIANCE
OF
EACH
CLASS
IS
UPDATED
OVER
TIME
USING
A
SPECIFIC
NUMBER
OF
RECENT
TRIALS
BAYESIAN
STATISTICAL
CLASSIFIERS
ARE
NOT
VERY
POPULAR
IN
THE
BCI
COMMUNITY
NEVERTHELESS
THEY
HAVE
BEEN
USED
FOR
CLASSIFYING
MOTOR
IMAGERY
OR
VISUAL
EVOKED
POTENTIALS
ARTIFICIAL
NEURAL
NETWORK
ANN
ANNS
ARE
NON
LINEAR
CLASSIFIERS
THAT
HAVE
BEEN
USED
IN
MANY
APPLICATIONS
IN
A
WIDE
VARIETY
OF
DISCIPLINES
SUCH
AS
COMPUTER
SCIENCE
PHYSICS
AND
NEUROSCIENCE
THE
IDEA
OF
ANNS
IS
INSPIRED
IN
HOW
THE
BRAIN
PROCESSES
THE
INFORMATION
THE
PURPOSE
IS
TO
MIMIC
BRAIN
ACTIVITY
THAT
IMMEDIATELY
SOLVES
CERTAIN
PROBLEMS
WHICH
A
CONVENTIONAL
COMPUTER
PROGRAM
PROCESSES
POORLY
FOR
EXAMPLE
ANNS
ARE
WIDELY
USED
IN
PATTERN
RECOGNITION
BECAUSE
THEY
ARE
CAPABLE
OF
LEARNING
FROM
TRAINING
DATA
THE
ABILITY
TO
LEARN
FROM
EXAMPLES
IS
ONE
OF
MOST
IMPORTANT
PROPERTIES
OF
ANNS
ONCE
TRAINED
THE
ANNS
ARE
CAPABLE
OF
RECOGNIZING
A
SET
OF
TRAINING
DATA
RELATED
PATTERNS
ANNS
ARE
THEREFORE
ASSOCIATED
WITH
BCI
APPLICATIONS
SINCE
PATTERN
RECOGNITION
IS
PERFORMED
TO
ASCERTAIN
USER
INTENTIONS
AN
ANN
COMPRISES
A
SET
OF
NODES
AND
CONNECTIONS
THAT
ARE
MODIFIED
DURING
THE
TRAINING
PROCESS
THE
ANN
IS
FED
ON
A
SET
OF
TRAINING
EXAMPLES
AND
THE
OUTPUT
IS
OBSERVED
IF
THE
OUTPUT
IS
INCORRECT
THEN
THE
INTERNAL
WEIGHTS
ARE
MODIFIED
BY
THE
TRAINING
ALGORITHM
TO
MINIMIZE
THE
DIFFERENCE
BETWEEN
DESIRED
AND
ACTUAL
OUTPUT
THIS
TRAINING
CONTINUES
UNTIL
THE
NETWORK
REACHES
A
STEADY
STATE
WHERE
NO
FURTHER
SENSORS
SIGNIFICANT
IMPROVEMENT
IS
ACHIEVED
IN
THIS
STATE
NOT
ONLY
SHOULD
THE
ANN
PRODUCE
CORRECT
OUTPUTS
FOR
ALL
EXAMPLES
OF
THE
TRAINING
SET
BUT
ALSO
FOR
INPUTS
THAT
WERE
NOT
ENCOUNTERED
DURING
TRAINING
FROM
A
MATHEMATICAL
POINT
OF
VIEW
ANNS
DEFINE
A
MAPPING
FROM
AN
INPUT
SPACE
TO
AN
OUTPUT
SPACE
THAT
CAN
BE
DESCRIBED
AS
A
VECTOR
VALUED
FUNCTION
WHERE
BOTH
X
AND
Y
MAY
BE
OF
ANY
DIMENSIONALITY
THE
MAPPING
FUNCTION
F
IS
A
COMBINATION
OF
MAPPINGS
WHICH
ARE
INDIVIDUALLY
PERFORMED
BY
SINGLE
NODES
OR
NEURONS
EACH
NEURON
PROCESSES
THE
INFORMATION
NON
LINEARLY
AND
THE
RESULTING
MAPPING
IS
THEREFORE
NON
LINEAR
THIS
PROPERTY
IS
IMPORTANT
ESPECIALLY
IN
THOSE
CASES
WHERE
THE
PHYSICAL
MECHANISM
THAT
GENERATES
THE
INPUT
SIGNAL
IS
NON
LINEAL
ONE
OF
THE
MOST
WELL
KNOWN
ANN
STRUCTURES
IS
THE
MULTILAYER
PERCEPTRON
MLP
INTRODUCED
BY
RUMELHART
AND
MCCLELLAND
IN
MLPS
ARE
VERY
FLEXIBLE
CLASSIFIERS
THAT
CAN
CLASSIFY
ANY
NUMBER
OF
CLASSES
AND
ADAPT
TO
NUMEROUS
KINDS
OF
PROBLEMS
IN
THE
FIELD
OF
BCIS
MLP
HAVE
BEEN
APPLIED
TO
CLASSIFY
TWO
THREE
AND
FIVE
DIFFERENT
TASKS
AND
TO
DESIGN
SYNCHRONOUS
AND
ASYNCHRONOUS
BCIS
MOREOVER
MLP
HAS
BEEN
USED
FOR
PREPROCESSING
EEG
SIGNALS
BEFORE
THE
FEATURE
EXTRACTION
STEP
RATHER
THAN
THE
CLASSIFICATION
STEP
IN
ORDER
TO
IMPROVE
THE
SEPARABILITY
OF
EEG
FEATURES
BESIDES
MLP
DIFFERENT
TYPES
OF
ANN
ARCHITECTURE
HAVE
BEEN
USED
IN
THE
DESIGN
OF
BCI
SYSTEMS
SUCH
AS
PROBABILISTIC
NEURAL
NETWORKS
PNN
FUZZY
ARTMAP
NEURAL
NETWORKS
FINITE
IMPULSE
RESPONSE
NEURAL
NETWORKS
FIRNN
OR
PROBABILITY
ESTIMATING
GUARDED
NEURAL
CLASSIFIERS
PEGNC
BCI
APPLICATIONS
BCIS
OFFER
THEIR
USERS
NEW
COMMUNICATION
AND
CONTROL
CHANNELS
WITHOUT
ANY
INTERVENTION
OF
PERIPHERAL
NERVES
AND
MUSCLES
HENCE
MANY
RESEARCHERS
FOCUS
ON
BUILDING
BCI
APPLICATIONS
IN
THE
HOPE
THAT
THIS
TECHNOLOGY
COULD
BE
HELPFUL
FOR
THOSE
WITH
SEVERE
MOTOR
DISABILITIES
VARIOUS
BCI
APPLICATIONS
HAVE
VERY
RECENTLY
BEEN
DEVELOPED
THANKS
TO
SIGNIFICANT
ADVANCES
IN
THE
FIELD
OF
EEG
BASED
BCI
EEG
SIGNALS
ARE
USED
BY
MOST
BCI
APPLICATIONS
BECAUSE
THEY
OFFER
AN
ACCEPTABLE
SIGNAL
QUALITY
THAT
COMBINES
LOW
COST
AND
EASY
TO
USE
EQUIPMENT
THANKS
TO
BCI
APPLICATIONS
IT
IS
HOPED
THAT
THE
QUALITY
OF
LIFE
OF
SEVERELY
DISABLED
PEOPLE
CAN
BE
IMPROVED
LIKEWISE
THE
ATTENTION
GIVEN
BY
CAREGIVERS
WILL
BE
LESS
INTENSIVE
REDUCING
ITS
COSTS
AND
MAKING
THE
LIFE
OF
RELATIVES
LESS
ONEROUS
MOREOVER
BCI
APPLICATIONS
POTENTIALLY
REPRESENT
A
POWERFUL
TOOL
FOR
REVEALING
HIDDEN
INFORMATION
IN
THE
USER
BRAIN
THAT
CANNOT
BE
EXPRESSED
THE
MAIN
TARGET
POPULATIONS
FOR
BCI
APPLICATIONS
FALL
INTO
THREE
CLASSES
THE
FIRST
GROUP
INCLUDES
COMPLETE
LOCKED
IN
STATE
CLIS
PATIENTS
WHO
HAVE
LOST
ALL
MOTOR
CONTROL
BECAUSE
THEY
MAY
BE
AT
A
TERMINAL
STAGE
OF
ALS
OR
SUFFER
SEVERE
CEREBRAL
PALSY
THE
SECOND
GROUP
COMPRISES
LOCKED
IN
STATE
LIS
PATIENTS
WHO
ARE
ALMOST
COMPLETELY
PARALYZED
BUT
WITH
RESIDUAL
VOLUNTARY
MOVEMENT
SUCH
AS
EYE
MOVEMENT
EYE
BLINKS
OR
TWITCHES
WITH
THE
LIP
THE
THIRD
GROUP
OF
POTENTIAL
BCI
USERS
INCLUDES
ABLED
BODIED
PEOPLE
AND
THOSE
WITH
SUBSTANTIAL
NEUROMUSCULAR
CONTROL
PARTICULARLY
SPEECH
AND
OR
HAND
CONTROL
BCI
HAVE
LITTLE
TO
OFFER
TO
THE
THIRD
GROUP
BECAUSE
THEY
CAN
SEND
THE
SAME
INFORMATION
MUCH
MORE
QUICKLY
AND
EASILY
VIA
OTHER
INTERFACES
RATHER
THAN
A
BCI
DESPITE
THIS
BCIS
ARE
INCREASINGLY
USED
BY
HEALTHY
PEOPLE
IN
NEUROMARKETING
AND
VIDEO
GAMES
AS
A
TOOL
TO
REVEAL
AFFECTIVE
INFORMATION
OF
SENSORS
THE
USERS
WHICH
CANNOT
BE
SO
EASILY
REPORTED
THROUGH
CONVENTIONAL
INTERFACES
LIKEWISE
BCI
CAN
BE
USED
FOR
SOME
PEOPLE
THAT
SUFFER
FROM
NEUROLOGICAL
DISORDERS
SUCH
AS
SCHIZOPHRENIA
OR
DEPRESSION
THE
LEVEL
OF
IMPAIRMENT
OF
THE
POTENTIAL
TARGET
POPULATION
IS
RELATED
TO
THE
PERFORMANCE
OF
A
BCI
SYSTEM
KÜBLER
ET
AL
REPORTED
A
STRONG
CORRELATION
BETWEEN
PHYSICAL
IMPAIRMENT
AND
BCI
PERFORMANCE
CLIS
PATIENTS
WERE
UNABLE
TO
CONTROL
A
BCI
VOLUNTARY
BRAIN
REGULATION
FOR
COMMUNICATION
WAS
ONLY
POSSIBLE
IN
LIS
PATIENTS
HOWEVER
CONSIDERING
ONLY
LIS
PATIENTS
THIS
RELATIONSHIP
BETWEEN
PHYSICAL
IMPAIRMENT
AND
BCI
PERFORMANCE
DISAPPEARED
FIGURE
SHOWS
THE
RELATIONSHIP
BETWEEN
BCI
APPLICATION
AREAS
AND
BCI
INFORMATION
TRANSFER
RATES
AND
USER
CAPABILITIES
FIGURE
RELATIONSHIP
BETWEEN
BCI
APPLICATION
AREAS
BCI
INFORMATION
TRANSFER
RATES
AND
USER
CAPABILITIES
HORIZONTAL
AXIS
INFORMATION
TRANSFER
RATE
THAT
WOULD
MAKE
THE
APPLICATION
CONTROLLABLE
VERTICAL
AXIS
THE
DEGREE
OF
CAPABILITY
E
I
T
I
HEALTHY
USERS
AND
NON
SEVERELY
DISABLED
L
I
B
A
P
PEOPLE
ENTERTAINMENT
A
C
LIS
PATIENTS
NEUROPROSTHESIS
R
E
U
LOCOMOTION
ENVIRONMENTAL
COMMUNICATION
CONTROL
CLIS
PATIENTS
INFORMATION
TRANSFER
RATE
BCI
IT
IS
CURRENTLY
UNCLEAR
WHETHER
BCI
TECHNOLOGY
WILL
EVER
OUTPERFORM
OTHER
ESTABLISHED
TECHNOLOGIES
THAT
INCLUDE
EYE
OR
MUSCLE
BASED
DEVICES
CURRENTLY
THE
LATTER
DEVICES
TEND
TO
BE
EASIER
TO
USE
AND
OFFER
BETTER
BENEFIT
COST
RATIOS
FOR
EXAMPLE
THE
DETECTION
OF
EYE
MOVEMENT
IS
QUICKER
EASIER
AND
MORE
ACCURATE
THAN
THE
DETECTION
OF
ERP
MODULATIONS
A
SPELLING
RATE
OF
WORDS
PER
MINUTE
CAN
BE
OBTAINED
WITH
UNIMPAIRED
EYE
MOVEMENT
BY
MEANS
OF
AN
EYETRACKER
IN
THAT
REGARD
HYBRID
BCI
SYSTEMS
HAVE
BEEN
PROPOSED
TO
IMPROVE
PERFORMANCE
THEY
ARE
THE
COMBINATION
OF
TWO
DIFFERENT
KINDS
OF
BCIS
OR
THE
COMBINATION
A
BCI
WITH
OTHER
EXISTING
ASSISTIVE
TECHNOLOGY
UNLESS
THE
PERFORMANCE
OF
BCI
SYSTEMS
IMPROVES
CONSIDERABLY
BCI
AS
ASSISTIVE
TECHNOLOGY
MAY
ONLY
BE
ESPECIALLY
ATTRACTIVE
FOR
SEVERELY
DISABLED
PEOPLE
WHEN
OTHER
TECHNOLOGIES
ARE
UNSUITABLE
AT
PRESENT
LIS
PATIENTS
AND
THOSE
LIKELY
TO
DEVELOP
CLIS
CONSTITUTE
THE
PRINCIPAL
CANDIDATES
FOR
BCI
DESPITE
THE
LOW
INFORMATION
TRANSFER
RATES
PROVIDED
BY
BCI
THE
HIGH
GRADE
OF
DISABILITY
AMONG
LIS
PATIENTS
FORCE
THEM
TO
USE
A
BCI
RATHER
THAN
MORE
RELIABLE
CONVENTIONAL
INTERFACES
SUCH
AS
MUSCLE
OR
EYE
GAZE
BASED
SYSTEM
EYE
GAZE
CONTROL
CONSTRAINTS
IN
SOME
LIS
PATIENTS
ARE
AN
IMPORTANT
ISSUE
BECAUSE
THEY
ARE
OBLIGED
TO
USE
BCIS
THAT
DOES
NOT
DEPEND
ON
EYE
GAZE
CONTROL
ALSO
EYE
GAZE
CONTROL
CONSTRAINTS
MAKE
SOME
BCI
APPLICATIONS
MORE
DIFFICULT
SUCH
AS
STEERING
A
WHEELCHAIR
NOWADAYS
THERE
ARE
A
VAST
NUMBER
OF
VERY
DIFFERENT
BCI
APPLICATIONS
SUCH
AS
WORD
PROCESSORS
ADAPTED
WEB
BROWSERS
BRAIN
CONTROL
OF
A
WHEELCHAIR
OR
NEUROPROSTHESES
AND
GAMES
AMONG
OTHERS
HOWEVER
MOST
APPLICATIONS
HAVE
SOLELY
BEEN
DESIGNED
FOR
TRAINING
OR
DEMONSTRATION
PURPOSES
DESPITE
THE
MOST
RECENT
SIGNIFICANT
ADVANCES
IN
BCI
TECHNOLOGY
THERE
ARE
STILL
MANY
CHALLENGES
TO
EMPLOYING
BCI
CONTROL
FOR
REAL
WORLD
TASKS
I
THE
INFORMATION
TRANSFER
RATE
PROVIDED
BY
BCIS
IS
TOO
LOW
FOR
SENSORS
NATURAL
INTERACTIVE
CONVERSATION
EVEN
FOR
EXPERIENCED
SUBJECTS
AND
WELL
TUNED
BCI
SYSTEMS
II
THE
HIGH
ERROR
RATE
FURTHER
COMPLICATES
THE
INTERACTION
III
BCI
SYSTEMS
CANNOT
BE
USED
AUTONOMOUSLY
BY
DISABLED
PEOPLE
BECAUSE
BCI
SYSTEMS
REQUIRE
ASSISTANTS
TO
APPLY
ELECTRODES
OR
SIGNAL
RECEIVING
DEVICES
BEFORE
THE
DISABLED
PERSON
CAN
COMMUNICATE
IV
A
BCI
USER
MAY
BE
ABLE
TO
TURN
THE
BCI
SYSTEM
OFF
BY
MEANS
OF
BRAIN
ACTIVITY
AS
INPUT
BUT
USUALLY
CANNOT
TURN
IT
BACK
ON
AGAIN
WHICH
IS
TERMED
THE
MIDAS
TOUCH
PROBLEM
AND
V
HANDLING
BCI
APPLICATIONS
DEMANDS
A
HIGH
COGNITIVE
LOAD
THAT
CAN
USUALLY
BE
ACHIEVED
BY
USERS
IN
QUIET
LABORATORY
ENVIRONMENT
BUT
NOT
IN
THE
REAL
WORLD
NEVERTHELESS
DESPITE
ALL
THESE
CHALLENGING
DIFFICULTIES
THE
FIRST
STEPS
ON
THE
PATH
TO
LONG
TERM
INDEPENDENT
HOME
USE
OF
BCIS
HAVE
ALREADY
BEEN
TAKEN
BEFORE
DESCRIBING
THE
PRACTICAL
USAGE
OF
BCI
APPLICATIONS
IT
IS
WORTH
CONSIDERING
THE
DISTINCTION
BETWEEN
BCIS
AND
THEIR
APPLICATIONS
AS
A
TOOL
THAT
EXECUTES
A
SPECIFIC
FUNCTION
PARTICULAR
BCI
SPECIFICATIONS
CORRESPOND
TO
THE
WAY
IT
PERFORMS
THAT
FUNCTION
THESE
SPECIFICATIONS
CAN
THEREFORE
BE
APPLIED
TO
WIDE
VARIETY
OF
APPLICATIONS
EVEN
THOUGH
THE
FUNCTION
REMAINS
UNCHANGED
THE
IMPORTANT
THING
IN
BCI
EVALUATION
IS
ITS
PERFORMANCE
WHEN
EXECUTING
ITS
SPECIFIC
FUNCTION
IN
CONTRAST
APPLICATIONS
ARE
DESCRIBED
IN
TERMS
OF
THE
TOOLS
THEY
EMPLOY
AND
THE
PURPOSES
THEY
SERVE
THEREFORE
BCI
EVALUATION
FOCUSES
ON
HOW
WELL
IT
PERFORMS
ITS
PURPOSE
IN
OTHER
WORDS
THE
TERM
BCI
REFERS
TO
THE
SYSTEM
THAT
RECORDS
ANALYSES
AND
TRANSLATES
THE
INPUT
INTO
COMMANDS
AND
THE
TERM
APPLICATION
DENOTES
THE
ENVIRONMENT
IN
WHICH
THE
BCI
ESTIMATED
OUTPUT
COMMANDS
ARE
APPLIED
CONSEQUENTLY
THE
EVALUATION
PROCEDURES
FOR
BCI
SYSTEMS
AND
THEIR
APPLICATIONS
DIFFER
IN
EACH
CASE
THE
FOLLOWING
SUB
SECTIONS
BRIEFLY
DESCRIBE
BCI
APPLICATIONS
CLASSIFIED
INTO
FIVE
MAIN
AREAS
COMMUNICATION
MOTOR
RESTORATION
ENVIRONMENTAL
CONTROL
LOCOMOTION
AND
ENTERTAINMENT
COMMUNICATION
BCI
APPLICATIONS
FOR
COMMUNICATION
DEAL
WITH
SEVERE
COMMUNICATION
DISABILITIES
RESULTING
FROM
NEUROLOGICAL
DISEASES
THIS
KIND
OF
APPLICATION
PROBABLY
REPRESENTS
THE
MOST
PRESSING
RESEARCH
IN
THE
FIELD
OF
BCI
BECAUSE
COMMUNICATION
ACTIVITY
IS
ESSENTIAL
FOR
HUMANS
APPLICATIONS
FOR
COMMUNICATION
PURPOSES
OUTLINE
AN
OPERATION
THAT
TYPICALLY
DISPLAYS
A
VIRTUAL
KEYBOARD
ON
SCREEN
WHERE
THE
USER
SELECTS
A
LETTER
FROM
THE
ALPHABET
BY
MEANS
OF
A
BCI
THE
DISTINGUISHING
ELEMENT
IN
EACH
APPROACH
IS
USUALLY
THE
BCI
AND
THE
TYPE
OF
CONTROL
SIGNAL
VOLUNTARY
CONTROL
OF
SCPS
MAY
BE
USED
FOR
LETTER
SELECTION
WITH
EXTENSIVE
TRAINING
COMPLETELY
PARALYZED
PATIENTS
ARE
ABLE
TO
PRODUCE
POSITIVE
AND
NEGATIVE
CHANGES
IN
THEIR
SCP
TO
DRIVE
THE
VERTICAL
MOVEMENT
OF
A
CURSOR
BASED
ON
THIS
KIND
OF
CONTROL
SIGNAL
BIRBAUMER
ET
AL
DEVELOPED
A
SPELLING
DEVICE
WITH
AN
ON
SCREEN
DISPLAY
WHICH
USED
A
CURSOR
TO
SELECT
LETTERS
OF
THE
ALPHABET
TRIALS
INVOLVING
TWO
PATIENTS
AT
ADVANCED
STAGES
OF
ALS
SHOWED
THAT
THEY
ACHIEVED
A
RATE
OF
ABOUT
CHARACTERS
PER
MINUTE
WHEN
WRITING
TEXT
MESSAGES
OTHER
TYPES
OF
CONTROL
SIGNALS
SUCH
AS
DETECTION
OF
EYE
BLINKS
WHICH
NORMALLY
REPRESENT
AN
ARTIFACT
IN
EEG
SIGNALS
OR
CLASSIFICATION
OF
THREE
MENTAL
TASKS
ARE
ALSO
USED
TO
SELECT
THE
BLOCKS
OR
CHARACTERS
IN
A
VIRTUAL
KEYBOARD
BOTH
APPROACHES
ARE
NEARLY
THE
SAME
APART
FROM
THE
CONTROL
SIGNAL
IN
BOTH
CASES
THE
VIRTUAL
KEYBOARD
CONSISTED
OF
A
TOTAL
OF
SYMBOLS
ENGLISH
LETTERS
PLUS
THE
SPACE
TO
SEPARATE
WORDS
ORGANIZED
IN
A
THREE
ROW
BY
NINE
COLUMN
MATRIX
LIKEWISE
BOTH
APPLICATIONS
WERE
BASED
ON
THE
SAME
PROTOCOL
OF
WRITING
A
SINGLE
LETTER
WHICH
REQUIRED
THREE
STEPS
FIRSTLY
THE
WHOLE
KEYBOARD
WAS
DIVIDED
INTO
THREE
SENSORS
BLOCKS
EACH
WITH
NINE
LETTERS
EACH
THEN
THE
USER
COULD
SELECT
A
SET
OF
NINE
LETTERS
BY
PRODUCING
A
SINGLE
TWO
OR
THREE
EYE
BLINKS
OR
IMAGINING
ONE
OF
THREE
AVAILABLE
TASKS
DEPENDING
ON
THE
CASE
AFTER
THE
FIRST
SELECTION
THE
SET
OF
NINE
LETTERS
WAS
DISTRIBUTED
INTO
THREE
SUBSETS
EACH
WITH
THREE
LETTERS
AND
ONCE
AGAIN
THE
USER
AGAIN
SELECTED
ONE
OF
THEM
FINALLY
AT
THE
THIRD
LEVEL
THE
USER
CHOSE
A
SINGLE
LETTER
AMONGST
THE
THREE
REMAINING
SYMBOLS
THE
CORRECT
SPELLING
RATE
OF
EACH
SPELLER
WAS
ONE
CHARACTER
PER
MINUTE
USING
BLINKS
AND
CHARACTERS
PER
MINUTE
FOR
THREE
MENTAL
TASKS
OBERMAIER
ET
AL
ALSO
DESIGNED
A
LETTER
SPELLING
BASED
ON
STANDARD
GRAZ
BCI
WHICH
ALSO
INCLUDED
A
VIRTUAL
KEYBOARD
THE
LETTER
SELECTION
PROTOCOL
IS
VERY
SIMILAR
TO
THE
APPROACHES
DISCUSSED
ABOVE
EXCEPT
THAT
THE
ENTIRE
ALPHABET
CONSISTED
OF
LETTERS
AND
WAS
DIVIDED
INTO
TWO
HALVES
AT
EACH
STEP
IN
THIS
CASE
THE
USER
CHOOSES
EITHER
SUBSET
OF
LETTERS
BY
EEG
MODULATION
THROUGH
MENTAL
HAND
AND
LEG
MOTOR
IMAGERY
THE
SPELLING
RATE
ACHIEVED
BY
THREE
HEALTHY
USERS
VARIED
BETWEEN
AND
LETTERS
PER
MINUTE
THIS
IS
A
LOWER
RATE
THAN
IN
PREVIOUS
CASES
NEVERTHELESS
IT
APPEARS
EASY
TO
INCREASE
THE
NUMBER
OF
LETTERS
SPELLED
PER
MINUTE
JUST
BY
EXPANDING
THE
NUMBER
OF
CLASSES
TO
MORE
THAN
TWO
EVENT
RELATED
BRAIN
POTENTIALS
ARE
ALSO
VERY
POPULAR
IN
BCI
LETTER
SPELLING
APPLICATIONS
BASED
BCIS
HAVE
BEEN
PROVEN
SUFFICIENTLY
SUITABLE
FOR
ALS
PATIENTS
IN
THE
EARLY
AND
MIDDLE
STAGES
OF
THE
DISEASE
BESIDES
THIS
KIND
OF
BCI
IS
VERY
HANDY
BECAUSE
THE
RESPONSE
OCCURS
SPONTANEOUSLY
AND
CONSEQUENTLY
DOES
NOT
REQUIRE
SUBSTANTIAL
TRAINING
FURTHERMORE
RECENT
PROGRESS
WITH
BASED
SPELLERS
HAVE
ALLOWED
THE
DEVELOPMENT
OF
COMMERCIAL
APPLICATIONS
AVAILABLE
TO
THE
GENERAL
PUBLIC
ONE
OF
THE
BEST
KNOWN
SPELLERS
WAS
DESIGNED
BY
FARWELL
AND
DONCHIN
IN
IN
THIS
SPELLER
THE
LETTERS
OF
THE
ALPHABET
TOGETHER
WITH
SEVERAL
OTHER
SYMBOLS
AND
COMMANDS
ARE
DISPLAYED
ON
SCREEN
IN
A
MATRIX
FIGURE
WITH
RANDOMLY
FLASHING
ROWS
AND
COLUMNS
THEN
THE
USER
FOCUSES
ATTENTION
ON
THE
SCREEN
AND
CONCENTRATES
SUCCESSIVELY
ON
THE
CHARACTERS
TO
BE
WRITTEN
WHILE
THE
EEG
RESPONSE
IS
MONITORED
TWO
ARE
ELICITED
FOR
EACH
LOOKED
FOR
ELEMENT
ON
THE
MATRIX
WHEN
THE
DESIRED
ROW
OR
COLUMN
FLASHED
THEREBY
ALLOWING
THE
SYSTEM
TO
IDENTIFY
THE
DESIRED
SYMBOL
THE
RESULTS
OF
THE
FARWELL
DONCHIN
SPELLER
TRIALS
INVOLVING
HEALTHY
PEOPLE
YIELDED
AN
ACCEPTABLE
SPELLING
RATE
OF
ABOUT
CHARACTERS
PER
MINUTE
FIGURE
ORIGINAL
SPELLER
MATRIX
OF
SYMBOLS
DISPLAYED
ON
A
SCREEN
COMPUTER
WHICH
SERVES
AS
THE
KEYBOARD
OR
PROSTHETIC
DEVICE
ADAPTED
FROM
THE
FARWELL
DONCHIN
SPELLER
PROVIDES
A
RELATIVELY
HIGH
RATE
AND
ACCURACY
BUT
ITS
PRECISION
CAN
BE
IMPROVED
BY
REDUCING
PERCEPTUAL
ERRORS
IN
THE
FARWELL
DONCHIN
PARADIGM
PERCEPTUAL
ERROR
HAPPENS
WHEN
A
RESPONSE
IS
ELICITED
DUE
TO
FLASHING
ROWS
OR
COLUMNS
ADJACENT
TO
THE
TARGET
SYMBOL
AN
ISSUE
WHICH
IS
ITS
MAJOR
SOURCE
OF
ERROR
HENCE
A
NEW
LETTER
DISTRIBUTION
WAS
PRESENTED
TO
SENSORS
OVERCOME
THIS
PROBLEM
FIGURE
THE
IDEA
IS
TO
HAVE
SEVERAL
REGIONS
FLASHING
INSTEAD
OF
USING
ROWS
AND
COLUMNS
THE
CHARACTERS
ARE
PLACED
INTO
A
TWO
LEVEL
DISTRIBUTION
AT
THE
FIRST
LEVEL
THE
CHARACTERS
ARE
DISTRIBUTED
INTO
SEVEN
GROUPS
EACH
WITH
SEVEN
CHARACTERS
WHICH
ARE
ALSO
FLASHING
RANDOMLY
THE
GROUP
CONTAINING
THE
TARGET
CHARACTER
IS
FOUND
BY
DETECTION
AT
THE
SECOND
LEVEL
THE
CHARACTERS
IN
THE
DETECTED
GROUP
ARE
REPOSITIONED
AND
THE
LEVEL
ONE
PROCEDURE
IS
REPEATED
AND
SO
ON
UNTIL
THE
TARGET
CHARACTER
IS
FINALLY
SELECTED
FIGURE
THE
PROPOSED
REGION
BASED
PARADIGM
FOR
THE
IMPROVED
SPELLER
A
THE
FIRST
LEVEL
OF
INTENSIFICATION
WHERE
EACH
GROUP
CONTAINS
UP
TO
SEVEN
CHARACTERS
AND
B
ONE
REGION
IS
EXPANDED
AT
THE
SECOND
LEVEL
ADAPTED
FROM
A
B
TOWNSEND
ET
AL
PRESENTED
A
NEWLY
ENHANCED
BCI
BASED
ON
A
CHECKERBOARD
PARADIGM
INSTEAD
OF
THE
STANDARD
ROW
COLUMN
PARADIGM
INTRODUCED
BY
FARWELL
AND
DONCHIN
IN
THIS
NEW
APPROACH
THE
STANDARD
MATRIX
CONTAINING
THE
TARGETS
WAS
SUPERIMPOSED
ON
A
CHECKERBOARD
TRIALS
WITH
ADVANCED
ALS
PATIENTS
AND
HEALTHY
PEOPLE
SHOWED
A
SIGNIFICANTLY
HIGHER
MEAN
ACCURACY
FOR
THE
CHECKERBOARD
PARADIGM
THAN
FOR
THE
ROW
COLUMN
PARADIGM
AHI
ET
AL
ALSO
RECENTLY
IMPROVED
THE
FARWELL
DONCHIN
SPELLER
BY
INTRODUCING
A
DICTIONARY
TO
DECREASE
THE
NUMBER
OF
MISCLASSIFICATIONS
IN
THE
SPELLING
THE
DICTIONARY
WAS
USED
FOR
CHECKING
THE
CANDIDATE
WORD
PROPOSED
BY
THE
CLASSIFIER
OF
RESPONSES
IN
CASE
OF
MISSPELLING
THE
DICTIONARY
GAVE
A
CERTAIN
NUMBER
OF
SUGGESTIONS
FROM
WHICH
THE
SYSTEM
COULD
SELECT
ADDITIONALLY
IN
ORDER
TO
REDUCE
THE
PROBABILITY
OF
MISSPELLING
DUE
TO
PERCEPTUAL
ERRORS
THE
USUAL
LETTER
POSITION
IN
THE
MATRIX
WAS
CHANGED
ACCORDING
TO
THE
ANALYSIS
OF
WORD
SIMILARITIES
IN
THE
CONSTRUCTED
DICTIONARY
ALL
PREVIOUS
SPELLERS
ARE
BASED
ON
THE
RECORDING
OF
VISUAL
EVENT
RELATED
BRAIN
POTENTIALS
HOWEVER
THERE
IS
NO
SENSE
IN
USING
VISUAL
STIMULI
IN
CASES
OF
SEVERELY
PARALYZED
PATIENTS
WITH
IMPAIRED
VISION
OR
POOR
CONTROL
OVER
EYE
MOVEMENTS
IN
THESE
CASES
AUDITORY
STIMULATION
IS
USED
IN
ORDER
TO
MAKE
SPELLERS
SUITABLE
FOR
THIS
GROUP
OF
PATIENTS
OTHER
IMPORTANT
APPLICATIONS
OF
COMMUNICATION
RELATED
BCIS
ARE
INTERNET
BROWSERS
ADAPTED
TO
USERS
WITH
SEVERE
DISABILITIES
BECAUSE
OVER
THE
LAST
DECADE
THE
INTERNET
HAS
BECOME
A
VERY
IMPORTANT
PART
OF
DAILY
LIFE
IN
THIS
AREA
DESCARTES
IS
ONE
OF
THE
FIRST
EEG
CONTROLLED
WEB
BROWSERS
WHICH
CAN
BE
OPERATED
BY
SCPS
ITS
BROWSER
INTERFACE
IS
BASED
ON
ARRANGING
THE
LINKS
ALPHABETICALLY
IN
A
DICHOTOMOUS
DECISION
TREE
WHERE
THE
USER
SELECTS
OR
REJECTS
EACH
ITEM
PRODUCING
POSITIVE
OR
NEGATIVE
SCP
SHIFTS
DESCARTES
PRESENTS
THE
SHORTCOMING
THAT
ONLY
A
LIMITED
NUMBER
OF
WEB
PAGES
CAN
BE
O
Q
T
R
U
P
A
C
F
D
G
B
E
H
J
M
K
N
I
L
X
V
Y
W
Z
SENSORS
BROWSED
BECAUSE
THE
USER
RECEIVES
A
NUMBER
OF
PREDEFINED
LINKS
ARRANGED
IN
A
TREE
AT
THE
START
OF
THE
WEB
SURFING
BESIDES
GRAPHICAL
LINKS
CANNOT
BE
CHOSEN
SINCE
THE
TEXTUAL
LABEL
IS
USED
TO
IDENTIFY
THE
LINK
A
MORE
ADVANCED
PROTOTYPE
CALLED
NESSI
OVERCOMES
THESE
SHORTCOMINGS
THANKS
TO
A
BETTER
USER
INTERFACE
COLORED
FRAMES
ARE
PLACED
AROUND
LINKS
OR
SELECTABLE
ITEMS
ON
THE
WEB
PAGE
INSTEAD
OF
ARRANGING
THE
LINKS
IN
A
TREE
MORE
RECENTLY
EVOKED
POTENTIALS
ARE
ALSO
USED
TO
ENHANCE
BROWSER
FUNCTIONALITY
MUGLER
ET
AL
BUILT
AN
INTERNET
BROWSER
WITH
CONTROL
WHERE
THE
OPTIONS
ARE
ALL
PRESENTED
AS
ICONS
IN
AN
MATRIX
JINGHAI
ET
AL
DEVELOPED
A
BROWSER
BASED
ON
VEPS
ONE
OF
THE
ADVANTAGES
OF
ERPS
IS
THAT
THEY
OCCUR
QUICKLY
AND
CAN
LEAD
TO
RELATIVELY
HIGH
WEB
SURFING
SPEEDS
MOTOR
RESTORATION
SPINAL
CORD
INJURY
SCI
OR
OTHER
NEUROLOGICAL
DISEASES
WITH
ASSOCIATED
LOSS
OF
SENSORY
AND
MOTOR
FUNCTIONS
DRAMATICALLY
DECREASE
THE
PATIENT
QUALITY
OF
LIFE
AND
CREATE
LIFE
LONG
DEPENDENCY
ON
HOME
CARE
SERVICES
MOTOR
RESTORATION
MAY
ALLEVIATE
THEIR
PSYCHOLOGICAL
AND
SOCIAL
SUFFERING
RESTORING
MOVEMENT
SUCH
AS
GRASPING
IS
FEASIBLE
IN
QUADRIPLEGIC
PATIENTS
THROUGH
NEUROPROSTHESES
GUIDED
BY
FUNCTIONAL
ELECTRICAL
STIMULATION
FES
FES
COMPENSATES
FOR
THE
LOSS
OF
VOLUNTARY
FUNCTIONS
BY
ELICITING
ARTIFICIAL
MUSCLE
CONTRACTIONS
ELECTRICAL
CURRENTS
GENERATE
ARTIFICIAL
ACTION
POTENTIAL
BY
DEPOLARIZING
INTACT
PERIPHERAL
MOTOR
NERVES
THAT
INNERVATE
THE
TARGETED
MUSCLE
AND
CAUSE
A
MUSCLE
CONTRACTION
SEE
FOR
A
REVIEW
EEG
BASED
BCI
CAN
BE
USED
TO
GENERATE
A
CONTROL
SIGNAL
FOR
THE
OPERATION
OF
FES
BECAUSE
EEG
SIGNALS
ARE
UNAFFECTED
BY
ELECTRICAL
ACTIVATION
OF
UPPER
EXTREMITY
MUSCLES
THANKS
TO
THEIR
MERGING
OF
BCI
AND
FES
PFURTSCHELLER
ET
AL
DEVELOPED
AN
APPLICATION
WHERE
A
TETRAPLEGIC
PATIENT
SUFFERING
FROM
A
TRAUMATIC
SPINAL
CORD
INJURY
WAS
ABLE
TO
CONTROL
PARALYZED
HANDS
TO
GRASP
A
CYLINDER
IN
THAT
APPLICATION
THE
PATIENT
GENERATED
BETA
OSCILLATIONS
IN
THE
EEG
BY
FOOT
MOVEMENT
IMAGERY
THEN
THE
BCI
ANALYZED
AND
CLASSIFIED
THE
BETA
BURST
AND
THE
OUTPUT
SIGNAL
WAS
USED
TO
CONTROL
THE
FES
DEVICE
THAT
ACTIVATED
THE
EXTREMITY
ALSO
FES
HAS
BEEN
USED
FOR
REHABILITATION
TRAINING
AFTER
A
STROKE
HU
ET
AL
DEVELOPED
A
COMBINED
FES
ROBOT
SYSTEM
WHICH
WAS
CONTINUOUSLY
DRIVEN
BY
THE
USER
RESIDUAL
ELECTROMYOGRAPHY
ON
THE
AFFECTED
SIDE
FOR
WRIST
JOINT
TRAINING
AFTER
A
STROKE
IN
ORDER
TO
INVOLVE
THE
USER
OWN
NEUROMUSCULAR
EFFORT
DURING
THE
TRAINING
FES
HAS
BEEN
PROVEN
TO
BE
AN
EFFECTIVE
WAY
TO
RESTORE
MOVEMENT
NEVERTHELESS
FES
REQUIRES
THE
USE
OF
RESIDUAL
MOVEMENTS
WHICH
ARE
NOT
POSSIBLE
IN
SEVERELY
INJURED
PATIENTS
FOR
THIS
REASON
SOME
GROUPS
HAVE
STARTED
TO
EXPLORE
APPROACHES
THAT
COUPLE
NEUROPROSTHESES
AND
BCI
WITHOUT
FES
INTERVENTION
PFURTSCHELLER
ET
AL
DEMONSTRATED
THAT
A
TETRAPLEGIC
PATIENT
WHOSE
RESIDUAL
UPPER
LIMB
MUSCLE
ACTIVITY
WAS
RESTRICTED
TO
THE
LEFT
BICEPS
DUE
TO
AN
UPPER
SPINAL
CORD
INJURY
COULD
EFFECTIVELY
CONTROL
A
HAND
ORTHOSIS
USING
CHANGES
IN
ROLANDIC
OSCILLATIONS
WHICH
WERE
PRODUCED
BY
MOTOR
IMAGERY
A
LENGTHY
TRAINING
PERIOD
WAS
REQUIRED
TO
USE
THIS
APPLICATION
HOWEVER
THE
PATIENT
WAS
FINALLY
ABLE
TO
OPEN
AND
CLOSE
THE
HAND
ORTHOSIS
ALMOST
WITHOUT
ANY
ERRORS
SOME
YEARS
LATER
THE
SAME
GROUP
VALIDATED
THE
COUPLING
OF
EEG
BASED
BCIS
AND
AN
IMPLANTED
NEUROPROSTHESIS
GIVING
FURTHER
EVIDENCE
THAT
BCI
IS
A
FEASIBLE
OPTION
FOR
THE
CONTROL
OF
A
NEUROPROSTHESES
IN
THIS
STUDY
BCI
CLASSIFIED
DISTINCTIVE
EEG
PATTERNS
THAT
INVOLVED
POWER
DECREASES
IN
CERTAIN
SPECIFIC
FREQUENCY
BANDS
THESE
PATTERNS
WERE
GENERATED
BY
THE
USER
FROM
MENTAL
IMAGERY
OF
HIS
PARALYZED
LEFT
HAND
IN
MOTION
MORE
RECENTLY
ERPS
ARE
ALSO
USED
TO
PROVIDE
MOTOR
RESTORATION
MULLER
ET
AL
PRESENTED
A
NOVEL
NEUROPROSTHETIC
DEVICE
FOR
THE
RESTORATION
OF
THE
GRASP
FUNCTION
FOR
PEOPLE
SPINAL
CORD
INJURIES
THIS
SENSORS
NEUROPROSTHETIC
DEVICE
CONSISTED
OF
A
DUAL
AXIS
ELECTRICAL
HAND
PROSTHESIS
CONTROLLED
BY
BCI
BASED
ON
FOUR
CLASS
SSVEPS
HENCE
IT
IS
POSSIBLE
TO
SELECT
ONLY
FOUR
MOVEMENTS
ACCORDING
TO
THE
FOUR
LEDS
FLICKERING
IN
DIFFERENT
FREQUENCIES
THE
USER
GAZE
SHIFTED
BETWEEN
THE
DIFFERENT
LEDS
IN
ORDER
TO
SELECT
A
MOVEMENT
ONE
LIGHT
ON
THE
FINGER
INDEX
FLICKERING
AT
HZ
AND
ANOTHER
LIGHT
ON
THE
PINKY
FINGER
FLICKERING
AT
HZ
SERVED
TO
TURN
THE
HAND
IN
SUPINATION
OR
PRONATION
THE
TWO
REMAINING
LIGHTS
ON
THE
WRIST
FLICKERING
AT
HZ
AND
HZ
REPRESENTED
THE
ORDERS
TO
OPEN
AND
CLOSE
EACH
HAND
WITHIN
THE
FIELD
OF
BCI
APPLICATION
IN
MOTOR
RESTORATION
BCI
SYSTEMS
HAVE
BEEN
ALSO
APPLIED
FOR
MOVEMENT
RECONSTRUCTION
IN
PATIENTS
WITH
SEVERE
POST
STROKE
MOTOR
DISABILITY
BCI
TRAINING
IS
HYPOTHESIZED
TO
PROVIDE
FEEDBACK
TO
SENSORIMOTOR
CORTEX
AND
BY
DOING
SO
MOVEMENT
IS
RESTORED
AS
CEREBRAL
PATHWAYS
REORGANIZE
TO
LINK
UP
MOTOR
COMMANDS
WITH
MOTOR
MOVEMENTS
BUCH
ET
AL
DEVELOPED
A
BCI
SYSTEM
THAT
USED
MEG
ACTIVITY
EVOKED
BY
PATIENT
INTENT
TO
MOVE
A
COMPLETELY
PARALYZED
HAND
IN
ORDER
TO
CONTROL
GRASPING
MOTIONS
OF
A
MECHANICAL
ORTHOSIS
ATTACHED
TO
THE
AFFECTED
HAND
THANKS
TO
THE
HAND
PROSTHESIS
ATTACHED
TO
THE
PARALYZED
HAND
AND
USING
VISUAL
FEEDBACK
THE
PATIENT
COULD
LEARN
TO
OPEN
A
HAND
BY
INCREASING
SMR
OVER
THE
INJURED
HEMISPHERE
AND
TO
CLOSE
THE
HAND
BY
DECREASING
IT
MEG
PROVIDES
A
MUCH
LARGER
AND
MORE
LOCALIZED
SMR
RESPONSE
WHICH
MEANS
THAT
EVEN
A
DIGIT
FINGER
MAY
BE
CONTROLLED
MEG
BASED
BCI
IS
TOO
EXPENSIVE
FOR
WIDESPREAD
APPLICATIONS
FOR
THAT
REASON
BROETZ
ET
AL
PROPOSED
A
COMBINATION
OF
MEG
AND
EEG
BASED
BCIS
INITIALLY
THE
MEG
BASED
BCI
WAS
USED
TO
BOOST
REHABILITATION
TRAINING
SUCCESS
LATER
THE
USER
CONTINUED
REHABILITATION
TRAINING
WITH
AN
EEG
BASED
BCI
A
MORE
AFFORDABLE
TECHNOLOGY
THAN
MEG
FINALLY
THE
PATIENT
PRACTICED
PHYSIOTHERAPY
TRAINING
THE
RESULTS
OF
THIS
STUDY
SUGGEST
THAT
THE
COMBINATION
OF
BCI
TRAINING
WITH
GOAL
DIRECTED
ACTIVE
PHYSICAL
THERAPY
IMPROVES
THE
MOTOR
ABILITIES
OF
CHRONIC
STROKE
PATIENTS
IN
SIMILAR
EXPERIMENTS
CARIA
ET
AL
REAFFIRMED
THE
SUCCESS
OF
A
COMBINATION
OF
BCI
TRAINING
AND
PHYSIOTHERAPY
THIS
STUDY
ENCOURAGES
FURTHER
RESEARCH
ON
THE
ROLE
OF
BCIS
IN
BRAIN
PLASTICITY
AND
POST
STROKE
RECOVERY
ENVIRONMENTAL
CONTROL
ONE
OF
THE
MAIN
GOALS
OF
BCI
BASED
APPLICATIONS
IS
TO
ACHIEVE
MAXIMUM
INDEPENDENCE
FOR
THE
PATIENT
DESPITE
ANY
MOTOR
DISABILITY
PEOPLE
WHO
SUFFER
SEVERE
MOTOR
DISABILITIES
ARE
OFTEN
HOMEBOUND
AND
FOR
THIS
REASON
ENVIRONMENTAL
CONTROL
APPLICATIONS
FOCUS
ON
THE
CONTROL
OF
DOMESTIC
DEVICES
SUCH
AS
TV
LIGHTS
OR
AMBIENT
TEMPERATURES
APART
FROM
IMPROVING
THE
QUALITY
OF
LIFE
OF
SEVERELY
DISABLED
PEOPLE
ASSISTIVE
DEVICES
MEAN
THAT
THE
TASKS
OF
THE
CAREGIVER
ARE
LESS
INTENSIVE
COSTS
ARE
REDUCED
AND
THE
LIFE
OF
RELATIVES
IS
LESS
ONEROUS
CINCOTTI
ET
AL
PRESENTED
A
PILOT
STUDY
DEALING
WITH
THE
INTEGRATION
OF
BCI
TECHNOLOGY
INTO
THE
DOMESTIC
ENVIRONMENT
IN
THIS
STUDY
FOURTEEN
PATIENTS
WITH
SEVERE
MOTOR
DISABILITIES
DUE
TO
PROGRESSIVE
NEURODEGENERATIVE
DISORDERS
TESTED
A
DEVICE
THAT
PROVIDED
ENVIRONMENTAL
CONTROL
THROUGH
AN
INTERFACE
DESIGNED
TO
SUPPORT
DIFFERENT
LEVELS
OF
MOTOR
CAPACITIES
FOR
EACH
USER
TYPICAL
PERIPHERALS
SUCH
AS
KEYBOARD
MOUSE
OR
JOYSTICK
WERE
OFFERED
TO
ALLOW
THE
DEVICE
CONTROL
THROUGH
UPPER
LIMB
RESIDUAL
MOTOR
ABILITIES
HEAD
TRACKERS
AND
MICROPHONES
FOR
VOICE
RECOGNITION
WERE
ALSO
AVAILABLE
IN
CASES
OF
PEOPLE
WITH
IMPAIRED
LIMBS
BUT
INTACT
NECK
MUSCLES
AND
COMPREHENSIVE
SPEECH
LASTLY
IN
CASES
OF
TOTALLY
DISABLED
PEOPLE
THE
SYSTEM
COULD
BE
CONTROLLED
BY
VOLUNTARY
MODULATIONS
OF
SENSORIMOTOR
RHYTHMS
RECORDED
BY
THE
EEG
BASED
BCI
THEREBY
THE
APPLICATION
OFFERED
THE
PATIENT
SENSORS
DIFFERENT
ACCESS
MODALITIES
THAT
MATCHED
THEIR
GRADUAL
LOSS
OF
MOTOR
ABILITIES
DUE
TO
PROGRESSIVE
NEURODEGENERATIVE
DISEASES
AS
OUTPUT
DEVICES
THE
SYSTEM
ALLOWED
THE
USE
OF
A
BASIC
GROUP
OF
DOMESTIC
APPLIANCES
SUCH
AS
LIGHTS
TV
AND
STEREO
SETS
A
MOTORIZED
BED
AN
ACOUSTIC
ALARM
A
FRONT
DOOR
OPENER
AND
A
TELEPHONE
AS
WELL
AS
WIRELESS
CAMERAS
TO
MONITOR
THE
SURROUNDING
ENVIRONMENT
INVASIVE
TECHNIQUES
HAVE
ALSO
BEEN
PROPOSED
IN
ENVIRONMENTAL
CONTROL
APPLICATIONS
HOCHBERG
ET
AL
IMPLANTED
BRAINGATE
SENSORS
IN
THE
PRIMARY
MOTOR
CORTEX
OF
A
TETRAPLEGIC
PATIENT
TO
CONTROL
A
CURSOR
THE
INITIAL
TRIALS
YIELDED
PROMISING
RESULTS
WHERE
THE
PATIENT
COULD
HANDLE
E
MAIL
APPLICATIONS
OR
OPERATE
DEVICES
SUCH
AS
A
TELEVISION
BY
IMAGINING
LIMB
MOTIONS
EVEN
WHILE
CONVERSING
LOCOMOTION
BCI
APPLICATIONS
THAT
ALLOW
DISABLED
PEOPLE
TO
CONTROL
A
MEANS
OF
TRANSPORTATION
REPRESENT
AN
IMPORTANT
FIELD
IN
THEIR
USE
THANKS
TO
THESE
APPLICATIONS
PEOPLE
SUFFERING
FROM
PARAPLEGIA
OR
WITH
OTHER
PHYSICAL
IMPAIRMENTS
CAN
AUTONOMOUSLY
DRIVE
A
WHEELCHAIR
MAKING
THEM
MORE
AUTONOMOUS
AND
IMPROVING
THEIR
LIFE
QUALITY
PORTABILITY
IS
A
NECESSITY
FOR
THESE
KINDS
OF
APPLICATIONS
HENCE
THE
USE
OF
A
BCI
BASED
ON
EEG
RECORDING
IS
ENFORCED
EEG
SIGNALS
ARE
TYPICALLY
VERY
NOISY
AND
ARE
HIGHLY
VARIABLE
WHICH
MEANS
A
RELATIVELY
LONG
TIME
BETWEEN
COMMANDS
THAT
WILL
BE
OF
HIGH
UNCERTAINTY
THEREFORE
THE
MAIN
CHALLENGE
IS
TO
ACHIEVE
SUFFICIENT
ACCURACY
IN
DRIVING
AS
WELL
AS
REACHING
REAL
TIME
CONTROL
IN
SPITE
OF
THE
ULTRA
LOW
INFORMATION
TRANSFER
RATES
PROVIDED
BY
BCI
FOR
THIS
REASON
SOME
STUDIES
ON
BCIS
PROPOSED
INVASIVE
TECHNIQUES
TO
RECORD
EEG
SIGNALS
BECAUSE
THEY
ACHIEVED
MORE
SPATIAL
RESOLUTION
AND
REDUCED
NOISE
SERRUYA
ET
AL
EXPERIMENTED
WITH
MONKEYS
IMPLANTING
AN
ELECTRODE
ARRAY
IN
THE
MOTOR
CORTEX
THESE
INITIAL
EXPERIMENTS
SHOWED
THAT
THE
MONKEYS
WERE
ABLE
TO
MOVE
A
COMPUTER
CURSOR
TO
ANY
POSITION
OPENING
UP
NEW
HUMAN
APPLICATIONS
HOWEVER
THE
RISKS
RELATED
TO
INVASIVE
BCIS
LEAD
RESEARCH
TOWARDS
BUILDING
NON
INVASIVE
APPLICATIONS
FOR
HUMAN
USE
SOME
PILOT
EXPERIMENTS
CONCERNED
WITH
LOCOMOTION
ILLUSTRATE
THE
FEASIBILITY
OF
USING
EEG
SIGNALS
FOR
CONTINUOUS
CONTROL
OF
A
MOBILE
ROBOT
IN
AN
INDOOR
ENVIRONMENT
WITH
SEVERAL
ROOMS
CORRIDORS
AND
DOORWAYS
THE
RESULTS
OF
THESE
EXPERIMENTS
OPENED
THE
POSSIBILITY
FOR
PHYSICALLY
DISABLED
PEOPLE
TO
USE
A
PORTABLE
EEG
BASED
BCI
FOR
CONTROLLING
WHEELCHAIRS
TO
THE
BEST
OF
OUR
KNOWLEDGE
IN
TANAKA
ET
AL
PRESENTED
THE
FIRST
APPLICATION
OF
WHEELCHAIR
CONTROL
USING
ONLY
EEG
IN
THIS
STUDY
THE
SURROUNDING
FLOOR
WAS
DIVIDED
INTO
SQUARES
BETWEEN
WHICH
THE
USER
DECIDED
TO
MOVE
BY
IMAGINING
LEFT
OR
RIGHT
LIMB
MOVEMENTS
DRIVEN
BY
USER
DECISIONS
THE
WHEELCHAIR
THEREFORE
MOVED
FROM
ONE
SQUARE
TO
ANOTHER
TESTS
WITH
SIX
HEALTHY
SUBJECTS
WERE
QUITE
ENCOURAGING
AND
DEMONSTRATED
THE
VIABILITY
OF
WHEELCHAIRS
CONTROL
SOLELY
THROUGH
THE
USE
OF
EEG
SIGNALS
IN
WHEELCHAIR
CONTROL
BY
BCI
BASED
SYSTEMS
THE
USUAL
PROBLEMS
ARE
THE
INFREQUENT
CONTROL
SIGNAL
AND
THE
LOW
INFORMATION
TRANSFER
RATE
AND
ACCURACY
PROVIDED
BY
A
BCI
IN
THAT
RESPECT
SOME
IMPROVEMENTS
HAVE
BEEN
PRESENTED
OVER
THE
PAST
FEW
YEARS
SYNCHRONOUS
BASED
BCIS
HAVE
BEEN
INTRODUCED
IN
ORDER
TO
ASSURE
BETTER
ACCURACY
LIKEWISE
TO
OVERCOME
THE
USUAL
LOW
BIT
RATE
IN
BCIS
THE
SYSTEMS
HAVE
BEEN
ENDOWED
WITH
CERTAIN
AUTONOMY
DECREASING
THE
NUMBER
OF
INTERACTIONS
REQUIRED
REBSAMEN
ET
AL
DESIGNED
A
SIMPLIFIED
WHEELCHAIR
CONTROL
BY
CONSTRAINING
THE
MOVEMENTS
TO
GUIDEPATHS
DEFINED
BY
THE
PATIENT
OR
A
HELPER
THESE
GUIDEPATHS
WERE
ATTACHED
TO
A
SPECIFIC
POINT
IN
THE
ENVIRONMENT
AND
STORED
BY
THE
SYSTEM
THE
USER
SELECTED
THE
DESTINATION
THROUGH
A
BASED
BCI
AND
THE
WHEELCHAIR
AUTOMATICALLY
FOLLOWED
THE
PATH
THE
USER
ONLY
HAD
TO
DECIDE
WHEN
THE
WHEELCHAIR
SENSORS
WOULD
STOP
FOR
PATH
GUIDANCE
THE
SYSTEM
STEERING
THE
WHEELCHAIR
HAD
TO
BE
KEPT
INFORMED
OF
ITS
LOCALIZATION
UNINTERRUPTEDLY
TO
THAT
EFFECT
THE
WHEELCHAIR
RELIED
ON
AN
ODOMETER
AND
A
BAR
CODE
SCANNER
TO
READ
BAR
CODE
PATTERNS
PREVIOUSLY
PLACED
ON
THE
FLOOR
ALONG
THE
PATHS
SOME
YEARS
LATER
THE
SYSTEM
WAS
IMPROVED
TO
ENSURE
SAFER
CONTROL
TWO
FASTER
BCIS
BASED
ON
AND
THE
Μ
Β
RHYTHM
WERE
EMPLOYED
ALLOWING
THE
USER
TO
STOP
THE
WHEELCHAIR
MORE
QUICKLY
BOTH
APPLICATIONS
WERE
TESTED
WITH
HEALTHY
PEOPLE
THE
MAIN
DISADVANTAGE
FOUND
IN
THE
PRECEDING
APPROACHES
IS
THAT
THE
CONTROL
ASSISTANCE
HAS
LITTLE
FLEXIBILITY
AND
IS
NOT
CAPABLE
OF
DEALING
WITH
UNKNOWN
AND
POPULATED
SCENARIOS
ITURRATE
ET
AL
OVERCAME
THIS
SHORTCOMING
BY
MAKING
THE
SYSTEM
CREATE
A
DYNAMIC
RECONSTRUCTION
OF
THE
SURROUNDING
SCENARIO
OTHER
STUDIES
SUGGESTED
THAT
HELP
SHOULD
ONLY
BE
AVAILABLE
IN
THOSE
CASES
WHERE
THE
USER
EXPERIENCED
MORE
DIFFICULTIES
DRIVING
THE
WHEELCHAIR
E
G
IN
A
NARROW
CORRIDOR
THREE
LEVELS
OF
ASSISTANCE
MAY
BE
POSSIBLE
IN
THE
SHARED
CONTROL
COLLISION
AVOIDANCE
OBSTACLE
AVOIDANCE
AND
ORIENTATION
RECOVERY
WHICH
ARE
ONLY
ACTIVATED
AS
REQUIRED
BY
THE
USER
BEFORE
EXECUTING
THE
USER
STEERING
COMMANDS
THE
SHARE
CONTROL
EVALUATES
THE
SITUATION
FROM
THE
DATA
PROVIDED
BY
A
SET
OF
LASER
SCANNERS
SCANNERS
INSPECT
THE
ENVIRONMENT
AND
DETECT
POTENTIAL
OBSTACLES
OR
WALLS
ENTERTAINMENT
ENTERTAINMENT
ORIENTATED
BCI
APPLICATIONS
HAVE
TYPICALLY
HAD
A
LOWER
PRIORITY
IN
THIS
FIELD
UNTIL
NOW
RESEARCH
INTO
BCI
TECHNOLOGY
HAS
USUALLY
FOCUSED
ON
ASSISTIVE
APPLICATIONS
SUCH
AS
SPELLING
DEVICES
WHEELCHAIR
CONTROL
OR
NEUROPROSTHESES
RATHER
THAN
APPLICATIONS
WITH
ENTERTAINMENT
PURPOSES
HOWEVER
INTEREST
IN
ENTERTAINMENT
APPLICATIONS
HAS
ARISEN
OVER
THE
RECENT
YEARS
DUE
TO
THE
SIGNIFICANT
ADVANCES
IN
THIS
TECHNOLOGY
IN
FACT
IMPROVEMENTS
IN
ITS
PERFORMANCE
HAVE
OPENED
THE
WAY
TO
EXTENDING
BCI
USE
TO
NON
DISABLED
PEOPLE
BCIS
CREATE
A
NEW
INTERACTION
MODALITY
WHICH
MAY
TURN
VIDEO
GAMES
INTO
EVEN
MORE
CHALLENGING
AND
ATTRACTIVE
EXPERIENCES
ADDITIONALLY
BCI
MAY
PROVIDE
A
WAY
OF
ACCESSING
KNOWLEDGE
ON
THE
USER
EXPERIENCES
THEREBY
IMPROVING
GAMES
THROUGH
INFORMATION
FROM
BRAIN
ACTIVITY
BCIS
CAN
REPORT
WHEN
THE
GAMER
IS
BORED
ANXIOUS
OR
FRUSTRATED
WITH
THE
AIM
OF
USING
THIS
KNOWLEDGE
FOR
DESIGNING
FUTURE
GAMES
FIGURE
PACMAN
GAME
THE
GAMER
HAS
TO
MOVE
THROUGH
THE
MAZE
TO
REACH
THE
EXIT
IN
THE
RIGHT
WALL
THE
SHORTEST
PATH
IS
MARKED
WITH
GRAY
TRACK
MARKS
BUT
THE
GAMER
CAN
DECIDE
TO
RUN
THE
REST
OF
MAZE
TO
RECEIVE
ADDITIONAL
CREDITS
ADAPTED
FROM
NOSE
DIRECTION
OF
NEXT
MOVE
DISCRIMINATION
LINE
INDICATION
OF
COMPETING
LATERALITY
INTENTIONS
SENSORS
ENTERTAIN
P
PACMAN
PON
IL
LLUSTRATION
W
WITH
THE
AIM
F
FILLED
WITH
R
N
NOSE
POINTS
G
GAME
WAS
D
R
RECORDING
TE
EXTERNAL
D
DESIGNED
A
SSVER
T
C
COULD
BE
MO
O
ON
THE
ONE
SSVERS
A
SSVER
TH
B
BECAUSE
IT
RE
L
LALOR
ET
AL
TI
IGHT
ROPE
W
TO
O
PHASE
REV
IM
MPLEMENTED
U
USEFUL
TOOL
F
ALL
PREVI
C
CONTEXT
HO
E
EMOTIV
SPIRIT
MOUN
ELECTRODE
A
AN
APPLICATI
A
APPLICATIONS
NMENT
ORIENT
NG
AND
SIMI
FIGURE
M
OF
GIVING
RED
AND
GRE
TO
THE
DIREC
DEVELOPED
CHNIQUES
FO
EVOKED
POT
SIMPLE
FLIGH
THIS
SIMULAT
OVED
TO
THE
HAND
THE
C
AND
ON
THE
E
RESULTS
OF
EQUIRED
LITTL
PRESE
WALKER
IN
B
VERSING
CHE
D
THE
MIN
FOR
ATTENTION
FIGURE
OUS
EXAMPL
WEVER
THER
HAS
ALREADY
NTAIN
DEMO
ES
THE
SO
CA
ION
PROGRAM
IS
MADE
TED
BCI
AP
ILAR
GAMES
SHOWS
A
SCRE
THE
GAMER
EN
COLOR
FRO
CTION
IN
WH
IN
ORDER
T
OR
COMPLEX
C
TENTIALS
HAVE
HT
SIMULATOR
TOR
WAS
VER
LEFT
OR
THE
R
CONTROL
COM
OTHER
HAND
F
THE
TRIALS
W
E
OR
NO
TRAIN
ENTED
THE
BALANCE
TH
ECKERBOARD
NDGAME
BA
N
TRAINING
B
A
EMOTIV
A
LES
INVOLVED
RE
ARE
SOME
Y
DEVELOPED
O
GAME
AM
ALLED
EPOC
MMING
INTER
MUCH
SIM
PPLICATIONS
SO
THAT
THEY
EENSHOT
OF
A
ENOUGH
TIM
OM
BOTTOM
HICH
THE
USE
O
ILLUSTRATE
CONTROL
TASK
E
BEEN
ALSO
CONTROLLED
RY
MODEST
A
RIGHT
ONLY
T
MMAND
RIGH
THE
SELECT
WITH
ABLE
BO
NING
SINCE
T
MINDBALAN
HE
APPLICATI
PATTERNS
B
ASED
ON
ECAUSE
THE
P
V
EPOC
NEU
D
EXPERIMEN
E
COMPANIE
D
A
NUMERO
MONG
OTHERS
C
NEUROHEAD
RFACE
API
MPLER
THE
HAVE
ADAP
Y
MAY
BE
PLA
A
PACMAN
GA
ME
TO
PERFOR
UP
AS
THE
P
R
INTENDS
TO
THAT
IT
IS
KS
USED
FOR
GA
BY
A
BCI
BA
AND
ONLY
TW
TWO
METHO
HT
OR
LEFT
W
TION
WAS
IDE
ODIED
PARTIC
THE
SYSTEM
C
NCE
GAME
W
ION
WAS
AL
BY
MEANS
O
EVENTS
POTENT
UROHEADSET
NTAL
GAMES
T
ES
PREPARING
US
SET
OF
B
FURTHERM
DSET
FIGURE
THANKS
TO
COMPANY
PTED
VERY
W
AYED
THROUG
AME
THE
PA
RM
A
CONTRO
PLAYER
INTE
O
TAKE
THE
P
POSSIBLE
TO
AME
IMPLEM
ASED
ON
STE
WO
CONTROL
A
ODS
WERE
TES
WAS
DETECTE
ENTIFIED
TAK
CIPANTS
SHOW
CAPITALIZED
WHERE
SIX
H
LSO
BASED
O
OF
OTHER
KI
IT
WAS
SUG
TIALS
ARE
ALS
B
NEU
THAT
HAVE
ON
G
COMMERCI
BCI
BASED
G
MORE
THE
CO
E
A
WHI
O
THIS
API
NEUROSKY
WELL
KNOWN
GH
MOTOR
IM
ACMAN
MAK
OL
COMMAND
ENTION
TO
TU
PACMAN
IN
O
SUCCESSFU
MENTATIONS
EADY
STATE
V
ACTIONS
WERE
STED
OVER
TH
D
ACCORDIN
KING
INTO
AC
WED
THAT
THE
ON
THE
NATU
HEALTHY
USER
ON
SSVEP
INDS
OF
ER
GGESTED
THAT
O
ATTENTION
M
UROSKY
MIN
B
NLY
BEEN
FO
IAL
BCI
GAM
GAMES
SUCH
OMPANY
SELL
ICH
CAN
BE
B
THE
DEVELOP
ALSO
M
N
VIDEO
GAM
MAGERY
KES
ONE
STEP
D
THE
PACM
URN
RISES
AN
ANOTHER
STU
ULLY
APPLY
MIDDENDOR
VISUAL
EVOK
E
POSSIBLE
HE
AIRPLANE
C
NG
TO
THE
STR
CCOUNT
THE
F
E
LAST
ONE
W
URAL
OCCURRIN
RS
WERE
ASK
GENERATED
RPS
FINKE
T
THIS
GAME
MARKERS
NDWAVE
UND
USEFUL
MES
FOR
FUT
H
AS
CORTEX
LS
A
LOW
CO
BOUGHT
ACCO
PMENT
OF
TH
MARKETS
THE
MES
SUCH
A
BY
WAY
O
EACH
MAN
HEAD
ND
THE
YELLOW
UDY
A
PINBA
NON
INVASIV
RF
ET
AL
KED
RESPONS
THE
POSITIO
CONTROL
TRIAL
RENGTH
OF
TH
FREQUENCY
O
WAS
PREFERRE
NG
RESPONSE
KED
TO
KEEP
IN
RESPONS
ET
AL
E
WOULD
BE
IN
A
RESEARC
TURE
MARKET
X
ARCADE
AN
OST
BCI
WIT
OMPANIED
B
HE
BCI
BASE
E
MINDWAV
AS
OF
IS
W
ALL
VE
SE
ON
LS
HE
OF
ED
ES
A
SE
A
CH
TS
ND
TH
BY
ED
VE
SENSORS
NEUROHEADSET
FIGURE
B
WITH
SOFTWARE
APPLICATIONS
THAT
CAN
RESPOND
TO
USER
BRAINWAVES
OR
MENTAL
STATES
LIKEWISE
IT
PROVIDES
A
SET
OF
SOFTWARE
TOOLS
FOR
DEVELOPERS
ALSO
LARGE
SOFTWARE
COMPANIES
SUCH
AS
MICROSOFT
HAVE
SHOWN
INTEREST
IN
BCI
RESEARCH
EXPLORING
THE
DEVELOPMENT
OF
PILOT
NOVEL
APPLICATIONS
THAT
USE
BCIS
OTHER
BCI
APPLICATIONS
BCI
SYSTEMS
HAVE
ALSO
BEEN
USED
IN
A
BROAD
VARIETY
OF
APPLICATIONS
BEYOND
THE
TRADITIONAL
AREAS
OF
COMMUNICATION
MOTOR
RESTORATION
ENVIRONMENTAL
CONTROL
LOCOMOTION
AND
ENTERTAINMENT
THE
ABILITY
OF
BCI
FEEDBACK
TO
INDUCE
CORTICAL
PLASTICITY
MAY
BE
THE
BASIS
FOR
MEDICAL
APPLICATIONS
USERS
CAN
ACQUIRE
SELECTIVE
CONTROL
OVER
CERTAIN
BRAIN
AREAS
BY
MEANS
OF
NEUROFEEDBACK
WITH
THE
AIM
OF
INDUCING
BEHAVIORAL
CHANGES
IN
THE
BRAIN
NEUROFEEDBACK
PROVIDED
BY
A
BCI
SYSTEM
MAY
IMPROVE
COGNITIVE
PERFORMANCE
SPEECH
SKILLS
AFFECTION
AND
PAIN
MANAGEMENT
AND
HAS
BEEN
USED
IN
THE
TREATMENT
OF
MENTAL
DISORDERS
SUCH
AS
EPILEPSY
ATTENTION
DEFICIT
SCHIZOPHRENIA
DEPRESSION
ALCOHOL
DEPENDENCE
OR
PAEDOPHILIA
ON
THE
OTHER
HAND
BRAIN
SIGNAL
RECORDINGS
CAN
BE
USED
IN
AN
ASSESSMENT
OF
BRAIN
FUNCTIONS
TO
EVALUATE
THEIR
STATUS
IN
HEALTH
AND
DISEASE
THE
OPPORTUNITY
TO
EXAMINE
BRAIN
SIGNALS
CAN
ALSO
BE
COMMERCIALLY
EXPLOITED
NEUROMARKETING
IS
A
RELATIVELY
YOUNG
FIELD
OF
RESEARCH
THAT
APPLIES
NEUROSCIENTIFIC
METHODS
TO
MARKETING
RESEARCH
TO
DATE
FEW
NEUROMARKETING
STUDIES
HAVE
BEEN
CONDUCTED
ALTHOUGH
SOME
EVIDENCE
HAS
BEEN
FOUND
TO
SUGGEST
THAT
NEUROIMAGING
COULD
HAVE
A
ROLE
IN
SEVERAL
AREAS
OF
MARKETING
NEUROMARKETING
MAY
PROVIDE
A
MORE
EFFICIENT
TRADE
OFF
BETWEEN
COSTS
AND
BENEFITS
PRODUCT
CONCEPTS
COULD
BE
TESTED
BY
MEANS
OF
NEUROMARKETING
REMOVING
THOSE
THAT
ARE
NOT
PROMISING
AT
THE
START
OF
THE
MANUFACTURING
PROCESS
THIS
WOULD
LEAD
TO
A
MORE
EFFICIENT
DISTRIBUTION
OF
SOURCES
BECAUSE
ONLY
THE
MORE
PROMISING
PRODUCTS
WOULD
BE
DEVELOPED
IN
ADDITION
NEUROMARKETING
MAY
BE
A
SOURCE
OF
MORE
ACCURATE
INFORMATION
ON
THE
UNDERLYING
PREFERENCES
OF
THE
USERS
RATHER
THAN
DATA
FROM
STANDARD
MARKET
RESEARCH
STUDIES
NEUROIMAGING
MAY
REVEAL
HIDDEN
INFORMATION
ON
CONSUMERS
TRUE
PREFERENCES
THAT
CANNOT
BE
EXPLICITLY
EXPRESSED
THE
BRAIN
RESPONSE
TO
ADVERTISEMENTS
COULD
BE
MEASURED
AND
THE
EFFECTIVENESS
OF
ADVERTISING
CAMPAIGNS
COULD
THEREFORE
BE
QUANTIFIED
DESPITE
IT
BEING
AN
EMERGING
FIELD
SEVERAL
COMPANIES
SUCH
AS
NEUROFOCUS
NEUROCONSULT
NEURO
INSIGHT
OR
EMSENSE
AMONG
OTHERS
CURRENTLY
OFFER
NEUROMARKETING
SERVICES
IT
IS
ALSO
ATTRACTING
INCREASING
ATTENTION
AMONG
RESEARCHERS
THE
FIELD
HAS
RAISED
SOME
ETHICAL
ISSUES
CONCERNING
THIS
TECHNOLOGY
IN
AS
MUCH
AS
IT
MAY
BE
ABLE
TO
MANIPULATE
THE
BRAIN
AND
CONSUMER
BEHAVIOR
CONCLUSIONS
THIS
ARTICLE
HAS
REVIEWED
THE
STATE
OF
THE
ART
OF
BCI
SYSTEMS
DISCUSSING
FUNDAMENTAL
ASPECTS
OF
BCI
SYSTEM
DESIGN
THE
MOST
SIGNIFICANT
GOALS
THAT
HAVE
DRIVEN
BCI
RESEARCH
OVER
THE
LAST
YEARS
HAVE
BEEN
PRESENTED
IT
HAS
BEEN
NOTED
THAT
MANY
BREAKTHROUGHS
WERE
ACHIEVED
IN
BCI
RESEARCH
DIFFERENT
NEUROIMAGING
APPROACHES
HAVE
BEEN
SUCCESSFULLY
APPLIED
IN
BCI
I
EEG
WHICH
PROVIDES
ACCEPTABLE
QUALITY
SIGNALS
WITH
HIGH
PORTABILITY
AND
IS
BY
FAR
THE
MOST
USUAL
MODALITY
IN
BCI
II
FMRI
AND
MEG
WHICH
ARE
PROVEN
AND
EFFECTIVE
METHODS
FOR
LOCALIZING
ACTIVE
REGIONS
INSIDE
THE
BRAIN
III
NIRS
SENSORS
WHICH
IS
A
VERY
PROMISING
NEUROIMAGING
METHOD
IN
BCI
AND
IV
INVASIVE
MODALITIES
WHICH
HAVE
BEEN
PRESENTED
AS
VALUABLE
METHODS
TO
PROVIDE
THE
HIGH
QUALITY
SIGNALS
REQUIRED
IN
SOME
MULTIDIMENSIONAL
CONTROL
APPLICATIONS
E
G
NEUROPROSTHESES
CONTROL
A
WIDE
VARIETY
OF
SIGNAL
FEATURES
AND
CLASSIFICATION
ALGORITHMS
HAVE
BEEN
TESTED
IN
THE
BCI
DESIGN
ALTHOUGH
BCI
RESEARCH
IS
RELATIVELY
YOUNG
MANY
ADVANCES
HAVE
BEEN
ACHIEVED
IN
A
LITTLE
OVER
TWO
DECADES
BECAUSE
MANY
OF
THESE
METHODS
ARE
BASED
ON
PREVIOUS
SIGNAL
PROCESSING
AND
PATTERN
RECOGNITION
RESEARCH
MANY
STUDIES
HAVE
DEMONSTRATED
THE
VALUABLE
ACCURACY
OF
BCIS
AND
PROVIDED
ACCEPTABLE
INFORMATION
BIT
RATE
DESPITE
THE
INHERENT
MAJOR
DIFFICULTIES
IN
BRAIN
SIGNAL
PROCESSING
ACCORDINGLY
USER
TRAINING
TIME
HAS
BEEN
SIGNIFICANTLY
REDUCED
WHICH
HAS
LED
TO
MORE
WIDESPREAD
BCI
APPLICATIONS
IN
THE
DAILY
LIFE
OF
DISABLED
PEOPLE
SUCH
AS
WORD
PROCESSING
BROWSERS
EMAIL
WHEELCHAIR
CONTROL
SIMPLE
ENVIRONMENTAL
CONTROL
OR
NEUROPROSTHESES
AMONG
OTHERS
IN
SPITE
OF
THE
RECENT
IMPORTANT
ADVANCES
IN
THE
BCI
FIELD
SOME
ISSUES
STILL
NEED
TO
BE
SOLVED
FIRST
THE
RELATIVE
ADVANTAGES
AND
DISADVANTAGES
OF
THE
DIFFERENT
SIGNAL
ACQUISITION
METHODS
ARE
STILL
UNCLEAR
THEIR
CLARIFICATION
WILL
REQUIRE
FURTHER
HUMAN
AND
ANIMAL
STUDIES
SECOND
INVASIVE
METHODS
NEED
FURTHER
INVESTIGATION
TO
DEAL
WITH
TISSUE
DAMAGE
RISK
OF
INFECTION
AND
LONG
TERM
STABILITY
CONCERNS
ELECTRODES
THAT
CONTAIN
NEUROTROPIC
MEDIUMS
THAT
PROMOTE
NEURONAL
GROWTH
AND
WIRELESS
TRANSMISSION
OF
NEURONAL
SIGNALS
RECORDED
HAVE
ALREADY
BEEN
PROPOSED
THIRD
THE
ELECTROPHYSIOLOGICAL
AND
METABOLIC
SIGNALS
THAT
ARE
BEST
ABLE
TO
ENCODE
USER
INTENT
SHOULD
BE
BETTER
IDENTIFIED
AND
CHARACTERIZED
THE
MAJORITY
OF
BCI
STUDIES
HAVE
TREATED
TIME
FREQUENCY
AND
SPATIAL
DIMENSIONS
OF
BRAIN
SIGNALS
INDEPENDENTLY
THESE
SIGNAL
DIMENSION
INTERDEPENDENCIES
MAY
LEAD
TO
SIGNIFICANT
IMPROVEMENT
IN
BCI
PERFORMANCE
FOURTH
INFORMATION
BIT
RATE
PROVIDED
BY
CURRENT
BCIS
IS
LOW
FOR
EFFECTIVE
HUMAN
MACHINE
INTERACTION
IN
SOME
APPLICATIONS
EXOGENOUS
BASED
BCI
MAY
PROVIDE
MUCH
HIGHER
THROUGHPUT
FIFTH
THE
UNSUPERVISED
ADAPTATION
IS
A
KEY
CHALLENGE
FOR
BCI
DEPLOYMENT
OUTSIDE
THE
LAB
SOME
MODERATELY
SUCCESSFUL
ADAPTIVE
CLASSIFICATION
ALGORITHMS
HAVE
ALREADY
BEEN
PROPOSED
AND
FINALLY
MOST
BCI
APPLICATIONS
ARE
AT
THE
RESEARCH
STAGE
AND
THEY
ARE
NOT
READY
TO
BE
INTRODUCED
INTO
PEOPLE
HOMES
FOR
CONTINUOUS
USE
IN
THEIR
DAILY
LIFE
IN
ADDITION
TO
THEIR
LOW
INFORMATION
TRANSFER
RATES
AND
VARIABLE
RELIABILITY
MOST
CURRENT
BCI
SYSTEMS
ARE
UNCOMFORTABLE
BECAUSE
THE
ELECTRODES
NEED
TO
BE
MOISTENED
THE
SOFTWARE
MAY
REQUIRE
INITIATION
AND
THE
ELECTRODE
CONTACTS
NEED
CONTINUOUS
CORRECTION
AN
EASY
TO
USE
BASED
BCI
WITH
REMOTE
MONITORING
USING
A
HIGH
SPEED
INTERNET
CONNECTION
HAS
ALREADY
BEEN
PROPOSED
TO
REDUCE
DEPENDENCE
ON
TECHNICAL
EXPERTS
THE
LATEST
ADVANCES
IN
BCI
RESEARCH
SUGGEST
THAT
INNOVATIVE
DEVELOPMENTS
MAY
BE
FORTHCOMING
IN
THE
NEAR
FUTURE
THESE
ACHIEVEMENTS
AND
THE
POTENTIAL
FOR
NEW
BCI
APPLICATIONS
HAVE
OBVIOUSLY
GIVEN
A
SIGNIFICANT
BOOST
TO
BCI
RESEARCH
INVOLVING
MULTIDISCIPLINARY
SCIENTISTS
E
G
NEUROSCIENTISTS
ENGINEERS
MATHEMATICIANS
AND
CLINICAL
REHABILITATION
SPECIALISTS
AMONG
OTHERS
INTEREST
IN
THE
BCI
FIELD
IS
EXPECTED
TO
INCREASE
AND
BCI
DESIGN
AND
DEVELOPMENT
WILL
IN
ALL
PROBABILITY
CONTINUE
TO
BRING
BENEFITS
TO
THE
DAILY
LIVES
OF
DISABLED
PEOPLE
FURTHERMORE
RECENT
COMMERCIAL
INTEREST
WITHIN
CERTAIN
COMPANIES
SUGGESTS
THAT
BCI
SYSTEMS
MAY
FIND
USEFUL
APPLICATIONS
IN
THE
GENERAL
POPULATION
AND
NOT
JUST
FOR
PEOPLE
LIVING
WITH
SEVERE
DISABILITIES
IN
THE
NEAR
FUTURE
BCI
SYSTEMS
MAY
THEREFORE
BECOME
A
NEW
MODE
OF
HUMAN
MACHINE
INTERACTION
WITH
LEVELS
OF
EVERYDAY
USE
THAT
ARE
SIMILAR
TO
OTHER
CURRENT
INTERFACES
SENSORS
ACKNOWLEDGEMENTS
THIS
WORK
WAS
PARTIALLY
SUPPORTED
BY
THE
REGIONAL
RESEARCH
PROJECT
PLAN
OF
THE
JUNTA
DE
CASTILLA
Y
LEÓN
SPAIN
UNDER
PROJECT
SENSORS
LEBEDEV
M
A
NICOLELIS
M
A
L
BRAIN
MACHINE
INTERFACES
PAST
PRESENT
AND
FUTURE
TRENDS
NEUROSCI
KENNEDY
P
R
BAKAY
R
A
E
MOORE
M
M
ADAMS
K
GOLDWAITHE
J
DIRECT
CONTROL
OF
A
COMPUTER
FROM
THE
HUMAN
CENTRAL
NERVOUS
SYSTEM
IEEE
TRANS
REHABIL
ENG
BOSSETTI
C
A
CARMENA
J
M
NICOLELIS
M
A
L
WOLF
P
D
TRANSMISSION
LATENCIES
IN
A
TELEMETRY
LINKED
BRAIN
MACHINE
INTERFACE
IEEE
TRANS
BIOMED
ENG
TEPLAN
M
FUNDAMENTALS
OF
EEG
MEASUREMENT
MEAS
SCI
REV
SINCLAIR
C
M
GASPER
M
C
BLUM
A
BASIC
ELECTRONICS
IN
CLINICAL
NEUROPHYSIOLOGY
IN
THE
CLINICAL
NEUROPHYSIOLOGY
PRIMER
BLUM
A
RUTKOVE
B
EDS
HUMANA
PRESS
INC
TOTOWA
NJ
USA
PP
USAKLI
A
B
IMPROVEMENT
OF
EEG
SIGNAL
ACQUISITION
AN
ELECTRICAL
ASPECT
FOR
STATE
OF
THE
ART
OF
FRONT
END
COMPUT
INTELL
NEUROSCI
FONSECA
C
CUNHA
J
P
MARTINS
R
E
FERREIRA
V
M
DE
SA
J
P
M
BARBOSA
M
A
DA
SILVA
A
M
A
NOVEL
DRY
ACTIVE
ELECTRODE
FOR
EEG
RECORDING
IEEE
TRANS
BIOMED
ENG
TAHERI
B
A
KNIGHT
R
T
SMITH
R
L
A
DRY
ELECTRODE
FOR
EEG
RECORDING
ELECTROENCEPHALOGR
CLIN
NEUROPHYSIOL
GARGIULO
G
CALVO
R
A
BIFULCO
P
CESARELLI
M
JIN
C
MOHAMED
A
VAN
SCHAIK
A
A
NEW
EEG
RECORDING
SYSTEM
FOR
PASSIVE
DRY
ELECTRODES
CLIN
NEUROPHYSIOL
LEACH
W
M
JR
FUNDAMENTALS
OF
LOW
NOISE
ANALOG
CIRCUIT
DESIGN
PROC
IEEE
KÜBLER
A
KOTCHOUBEY
B
KAISER
J
WOLPAW
J
R
BIRBAUMER
N
BRAIN
COMPUTER
COMMUNICATION
UNLOCKING
THE
LOCKED
IN
AMERICAN
PSYCHOLOGICAL
ASSOCIATION
WASHINGTON
DC
USA
ANAND
B
K
CHHINA
G
SINGH
B
SOME
ASPECTS
OF
ELECTROENCEPHALOGRAPHIC
STUDIES
IN
YOGIS
ELECTROENCEPHALOGR
CLIN
NEUROPHYSIOL
AFTANAS
L
I
GOLOCHEIKINE
A
HUMAN
ANTERIOR
AND
FRONTAL
MIDLINE
THETA
AND
LOWER
ALPHA
REFLECT
EMOTIONALLY
POSITIVE
STATE
AND
INTERNALIZED
ATTENTION
HIGH
RESOLUTION
EEG
INVESTIGATION
OF
MEDITATION
NEUROSCI
LETT
FERNÁNDEZ
T
HARMONY
T
RODRÍGUEZ
M
BERNAL
J
SILVA
J
REYES
A
MAROSI
E
EEG
ACTIVATION
PATTERNS
DURING
THE
PERFORMANCE
OF
TASKS
INVOLVING
DIFFERENT
COMPONENTS
OF
MENTAL
CALCULATION
ELECTROENCEPHALOGR
CLIN
NEUROPHYSIOL
CAPLAN
J
B
MADSEN
J
R
RAGHAVACHARI
KAHANA
M
J
DISTINCT
PATTERNS
OF
BRAIN
OSCILLATIONS
UNDERLIE
TWO
BASIC
PARAMETERS
OF
HUMAN
MAZE
LEARNING
J
NEUROPHYSIOL
KLIMESCH
W
DOPPELMAYR
M
YONELINAS
A
KROLL
N
E
A
LAZZARA
M
RÖHM
D
GRUBER
W
THETA
SYNCHRONIZATION
DURING
EPISODIC
RETRIEVAL
NEURAL
CORRELATES
OF
CONSCIOUS
AWARENESS
COGN
BRAIN
RES
JAIME
A
P
THE
FUNCTIONAL
SIGNIFICANCE
OF
MU
RHYTHMS
TRANSLATING
SEEING
AND
HEARING
INTO
DOING
BRAIN
RES
REV
BLACK
A
H
THE
OPERANT
CONDITIONING
OF
CENTRAL
NERVOUS
SYSTEM
ELECTRICAL
ACTIVITY
IN
PSYCHOLOGY
OF
LEARNING
AND
MOTIVATION
GORDON
H
B
ED
ACADEMIC
PRESS
NEW
YORK
NY
USA
VOLUME
PP
SENSORS
KLIMESCH
W
EEG
ALPHA
RHYTHMS
AND
MEMORY
PROCESSES
INT
J
PSYCHOPHYSIOL
VENABLES
L
FAIRCLOUGH
THE
INFLUENCE
OF
PERFORMANCE
FEEDBACK
ON
GOAL
SETTING
AND
MENTAL
EFFORT
REGULATION
MOTIV
EMOTION
PFURTSCHELLER
G
BRUNNER
C
SCHLÖGL
A
LOPES
DA
SILVA
F
H
MU
RHYTHM
DE
SYNCHRONIZATION
AND
EEG
SINGLE
TRIAL
CLASSIFICATION
OF
DIFFERENT
MOTOR
IMAGERY
TASKS
NEUROIMAGE
PFURTSCHELLER
G
NEUPER
C
MOTOR
IMAGERY
AND
DIRECT
BRAIN
COMPUTER
COMMUNICATION
PROC
IEEE
LEE
K
H
WILLIAMS
L
M
BREAKSPEAR
M
GORDON
E
SYNCHRONOUS
GAMMA
ACTIVITY
A
REVIEW
AND
CONTRIBUTION
TO
AN
INTEGRATIVE
NEUROSCIENCE
MODEL
OF
SCHIZOPHRENIA
BRAIN
RES
REV
BROWN
P
SALENIUS
ROTHWELL
J
C
HARI
R
CORTICAL
CORRELATE
OF
THE
PIPER
RHYTHM
IN
HUMANS
J
NEUROPHYSIOL
MIMA
T
SIMPKINS
N
OLUWATIMILEHIN
T
HALLETT
M
FORCE
LEVEL
MODULATES
HUMAN
CORTICAL
OSCILLATORY
ACTIVITIES
NEUROSCI
LETT
LUTZENBERGER
W
PULVERMÜLLER
F
ELBERT
T
BIRBAUMER
N
VISUAL
STIMULATION
ALTERS
LOCAL
HZ
RESPONSES
IN
HUMANS
AN
EEG
STUDY
NEUROSCI
LETT
MÜLLER
M
M
KEIL
A
GRUBER
T
ELBERT
T
PROCESSING
OF
AFFECTIVE
PICTURES
MODULATES
RIGHT
HEMISPHERIC
GAMMA
BAND
EEG
ACTIVITY
CLIN
NEUROPHYSIOL
MÜLLER
M
M
BOSCH
J
ELBERT
T
KREITER
A
SOSA
M
V
SOSA
P
V
ROCKSTROH
B
VISUALLY
INDUCED
GAMMA
BAND
RESPONSES
IN
HUMAN
ELECTROENCEPHALOGRAPHIC
ACTIVITY
A
LINK
TO
ANIMAL
STUDIES
EXP
BRAIN
RES
ZHANG
L
HE
W
HE
C
WANG
P
IMPROVING
MENTAL
TASK
CLASSIFICATION
BY
ADDING
HIGH
FREQUENCY
BAND
INFORMATION
J
MED
SYST
DARVAS
F
SCHERER
R
OJEMANN
J
G
RAO
R
P
MILLER
K
J
SORENSEN
L
B
HIGH
GAMMA
MAPPING
USING
EEG
NEUROIMAGE
MILLER
K
J
LEUTHARDT
E
C
SCHALK
G
RAO
R
P
N
ANDERSON
N
R
MORAN
D
W
MILLER
J
W
OJEMANN
J
G
SPECTRAL
CHANGES
IN
CORTICAL
SURFACE
POTENTIALS
DURING
MOTOR
MOVEMENT
J
NEUROSCI
JASPER
H
H
THE
TEN
TWENTY
ELECTRODE
SYSTEM
OF
THE
INTERNATIONAL
FEDERATION
ELECTROENCEPHALOGR
CLIN
NEUROPHYSIOL
WALDERT
PISTOHL
T
BRAUN
C
BALL
T
AERTSEN
A
MEHRING
C
A
REVIEW
ON
DIRECTIONAL
INFORMATION
IN
NEURAL
SIGNALS
FOR
BRAIN
MACHINE
INTERFACES
J
PHISIOL
PARIS
SALMELIN
R
HÁMÁALÁINEN
M
KAJOLA
M
HARI
R
FUNCTIONAL
SEGREGATION
OF
MOVEMENT
RELATED
RHYTHMIC
ACTIVITY
IN
THE
HUMAN
BRAIN
NEUROIMAGE
BABILONI
C
PIZZELLA
V
GRATTA
C
D
FERRETTI
A
ROMANI
G
L
FUNDAMENTALS
OF
ELECTROENCEFALOGRAPHY
MAGNETOENCEFALOGRAPHY
AND
FUNCTIONAL
MAGNETIC
RESONANCE
IMAGING
IN
BRAIN
MACHINE
INTERFACES
FOR
SPACE
APPLICATIONS
LUCA
R
DARIO
I
LEOPOLD
EDS
ACADEMIC
PRESS
NEW
YORK
NY
USA
VOLUME
PP
MELLINGER
J
SCHALK
G
BRAUN
C
PREISSL
H
ROSENSTIEL
W
BIRBAUMER
N
KÜBLER
A
AN
MEG
BASED
BRAIN
COMPUTER
INTERFACE
BCI
NEUROIMAGE
SENSORS
WANG
W
SUDRE
G
P
XU
Y
KASS
R
E
COLLINGER
J
L
DEGENHART
A
D
BAGIC
A
I
WEBER
D
J
DECODING
AND
CORTICAL
SOURCE
LOCALIZATION
FOR
INTENDED
MOVEMENT
DIRECTION
WITH
MEG
J
NEUROPHYSIOL
LAL
T
N
SCHRÖDER
M
HILL
N
J
PREISSL
H
HINTERBERGER
T
MELLINGER
J
BOGDAN
M
ROSENSTIEL
W
HOFMANN
T
BIRBAUMER
N
SCHÖLKOPF
B
A
BRAIN
COMPUTER
INTERFACE
WITH
ONLINE
FEEDBACK
BASED
ON
MAGNETOENCEPHALOGRAPHY
IN
PROCEEDINGS
OF
THE
INTERNATIONAL
CONFERENCE
ON
MACHINE
LEARNING
ICML
BONN
GERMANY
AUGUST
PP
KAUHANEN
L
NYKOPP
T
LEHTONEN
J
JYLANKI
P
HEIKKONEN
J
RANTANEN
P
ALARANTA
H
SAMS
M
EEG
AND
MEG
BRAIN
COMPUTER
INTERFACE
FOR
TETRAPLEGIC
PATIENTS
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
GEORGOPOULOS
A
LANGHEIM
F
LEUTHOLD
A
MERKLE
A
MAGNETOENCEPHALOGRAPHIC
SIGNALS
PREDICT
MOVEMENT
TRAJECTORY
IN
SPACE
EXP
BRAIN
RES
MELLINGER
J
SCHALK
G
BRAUN
C
PREISSL
H
ROSENSTIEL
W
BIRBAUMER
N
KÜBLER
A
AN
MEG
BASED
BRAIN
COMPUTER
INTERFACE
BCI
NEUROIMAGE
JINYIN
Z
SUDRE
G
XIN
L
WEI
W
WEBER
D
J
BAGIC
A
CLUSTERING
LINEAR
DISCRIMINANT
ANALYSIS
FOR
MEG
BASED
BRAIN
COMPUTER
INTERFACES
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
SABRA
N
I
WAHED
M
A
THE
USE
OF
MEG
BASED
BRAIN
COMPUTER
INTERFACE
FOR
CLASSIFICATION
OF
WRIST
MOVEMENTS
IN
FOUR
DIFFERENT
DIRECTIONS
IN
PROCEEDINGS
OF
THE
NATIONAL
RADIO
SCIENCE
CONFERENCE
NRSC
CAIRO
EGYPT
APRIL
PP
BALL
T
KERN
M
MUTSCHLER
I
AERTSEN
A
SCHULZE
BONHAGE
A
SIGNAL
QUALITY
OF
SIMULTANEOUSLY
RECORDED
INVASIVE
AND
NON
INVASIVE
EEG
NEUROIMAGE
LOEB
G
E
WALKER
A
E
UEMATSU
KONIGSMARK
B
W
HISTOLOGICAL
REACTION
TO
VARIOUS
CONDUCTIVE
AND
DIELECTRIC
FILMS
CHRONICALLY
IMPLANTED
IN
THE
SUBDURAL
SPACE
J
BIOMED
MATER
RES
BULLARA
L
A
AGNEW
W
F
YUEN
T
G
H
JACQUES
PUDENZ
R
H
EVALUATION
OF
ELECTRODE
ARRAY
MATERIAL
FOR
NEURAL
PROSTHESES
NEUROSURGERY
YUEN
T
G
H
AGNEW
W
F
BULLARA
L
A
TISSUE
RESPONSE
TO
POTENTIAL
NEUROPROSTHETIC
MATERIALS
IMPLANTED
SUBDURALLY
BIOMATERIALS
MARGALIT
E
WEILAND
J
D
CLATTERBUCK
R
E
FUJII
G
Y
MAIA
M
TAMEESH
M
TORRES
G
D
ANNA
A
DESAI
PIYATHAISERE
D
V
ET
AL
VISUAL
AND
ELECTRICAL
EVOKED
RESPONSE
RECORDED
FROM
SUBDURAL
ELECTRODES
IMPLANTED
ABOVE
THE
VISUAL
CORTEX
IN
NORMAL
DOGS
UNDER
TWO
METHODS
OF
ANESTHESIA
J
NEUROSCI
METHODS
CHAO
Z
C
NAGASAKA
Y
FUJII
N
LONG
TERM
ASYNCHRONOUS
DECODING
OF
ARM
MOTION
USING
ELECTROCORTICOGRAPHIC
SIGNALS
IN
MONKEYS
FRONT
NEUROENG
DOI
FNENG
MATSUO
T
KAWASAKI
K
OSADA
T
SAWAHATA
H
SUZUKI
T
SHIBATA
M
MIYAKAWA
N
NAKAHARA
K
IIJIMA
A
SATO
N
ET
AL
INTRASULCAL
ELECTROCORTICOGRAPHY
IN
MACAQUE
MONKEYS
WITH
MINIMALLY
INVASIVE
NEUROSURGICAL
PROTOCOLS
FRONT
SYST
NEUROSCI
DOI
FNSYS
CRONE
N
E
MIGLIORETTI
D
L
GORDON
B
SIERACKI
J
M
WILSON
M
T
UEMATSU
LESSER
R
P
FUNCTIONAL
MAPPING
OF
HUMAN
SENSORIMOTOR
CORTEX
WITH
ELECTROCORTICOGRAPHIC
SPECTRAL
ANALYSIS
I
ALPHA
AND
BETA
EVENT
RELATED
DESYNCHRONIZATION
BRAIN
SENSORS
CRONE
N
E
MIGLIORETTI
D
L
GORDON
B
LESSER
R
P
FUNCTIONAL
MAPPING
OF
HUMAN
SENSORIMOTOR
CORTEX
WITH
ELECTROCORTICOGRAPHIC
SPECTRAL
ANALYSIS
II
EVENT
RELATED
SYNCHRONIZATION
IN
THE
GAMMA
BAND
BRAIN
MILLER
K
J
DENNIJS
M
SHENOY
P
MILLER
J
W
RAO
R
P
N
OJEMANN
J
G
REAL
TIME
FUNCTIONAL
BRAIN
MAPPING
USING
ELECTROCORTICOGRAPHY
NEUROIMAGE
LEVINE
P
HUGGINS
J
E
BEMENT
L
KUSHWAHA
R
K
SCHUH
L
A
PASSARO
E
A
ROHDE
M
M
ROSS
D
A
IDENTIFICATION
OF
ELECTROCORTICOGRAM
PATTERNS
AS
THE
BASIS
FOR
A
DIRECT
BRAIN
INTERFACE
J
CLIN
NEUROPHYSIOL
LEUTHARDT
E
C
SCHALK
G
WOLPAW
J
R
OJEMANN
J
G
MORAN
D
W
A
BRAIN
COMPUTER
INTERFACE
USING
ELECTROCORTICOGRAPHIC
SIGNALS
IN
HUMANS
J
NEURAL
ENG
DOI
SCHALK
G
SCHALK
G
KUBÁNEK
J
MILLER
K
J
ANDERSON
N
R
LEUTHARDT
E
C
OJEMANN
J
G
LIMBRICK
D
MORAN
D
GERHARDT
L
A
ET
AL
DECODING
TWO
DIMENSIONAL
MOVEMENT
TRAJECTORIES
USING
ELECTROCORTICOGRAPHIC
SIGNALS
IN
HUMANS
J
NEURAL
ENG
DOI
POLIKOV
V
TRESCO
P
A
REICHERT
W
M
RESPONSE
OF
BRAIN
TISSUE
TO
CHRONICALLY
IMPLANTED
NEURAL
ELECTRODES
J
NEUROSCI
METHODS
MAYNARD
E
M
NORDHAUSEN
C
T
NORMANN
R
A
THE
UTAH
INTRACORTICAL
ELECTRODE
ARRAY
A
RECORDING
STRUCTURE
FOR
POTENTIAL
BRAIN
COMPUTER
INTERFACES
ELECTROENCEPHALOGR
CLIN
NEUROPHYSIOL
LAUER
R
T
PECKHAM
P
H
KILGORE
K
L
HEETDERKS
W
J
APPLICATIONS
OF
CORTICAL
SIGNALS
TO
NEUROPROSTHETIC
CONTROL
A
CRITICAL
REVIEW
IEEE
TRANS
REHABIL
ENG
GEORGOPOULOS
A
SCHWARTZ
A
KETTNER
R
NEURONAL
POPULATION
CODING
OF
MOVEMENT
DIRECTION
SCIENCE
SCHWARTZ
A
B
MOTOR
CORTICAL
ACTIVITY
DURING
DRAWING
MOVEMENTS
POPULATION
REPRESENTATION
DURING
SINUSOID
TRACING
J
NEUROPHYSIOL
WESSBERG
J
STAMBAUGH
C
R
KRALIK
J
D
BECK
P
D
LAUBACH
M
CHAPIN
J
K
KIM
J
BIGGS
J
SRINIVASAN
M
A
NICOLELIS
M
A
L
REAL
TIME
PREDICTION
OF
HAND
TRAJECTORY
BY
ENSEMBLES
OF
CORTICAL
NEURONS
IN
PRIMATES
NATURE
TAYLOR
D
M
TILLERY
I
H
SCHWARTZ
A
B
DIRECT
CORTICAL
CONTROL
OF
NEUROPROSTHETIC
DEVICES
SCIENCE
JACKSON
A
MAVOORI
J
FETZ
E
E
CORRELATIONS
BETWEEN
THE
SAME
MOTOR
CORTEX
CELLS
AND
ARM
MUSCLES
DURING
A
TRAINED
TASK
FREE
BEHAVIOR
AND
NATURAL
SLEEP
IN
THE
MACAQUE
MONKEY
J
NEUROPHYSIOL
VELLISTE
M
PEREL
SPALDING
M
C
WHITFORD
A
SCHWARTZ
A
B
CORTICAL
CONTROL
OF
A
PROSTHETIC
ARM
FOR
SELF
FEEDING
NATURE
VARGAS
IRWIN
C
E
SHAKHNAROVICH
G
YADOLLAHPOUR
P
MISLOW
J
M
K
BLACK
M
J
DONOGHUE
J
P
DECODING
COMPLETE
REACH
AND
GRASP
ACTIONS
FROM
LOCAL
PRIMARY
MOTOR
CORTEX
POPULATIONS
J
NEUROSCI
CARPANETO
J
UMILTÀ
M
A
FOGASSI
L
MURATA
A
GALLESE
V
MICERA
RAOS
V
DECODING
THE
ACTIVITY
OF
GRASPING
NEURONS
RECORDED
FROM
THE
VENTRAL
PREMOTOR
AREA
OF
THE
MACAQUE
MONKEY
NEUROSCIENCE
SENSORS
KENNEDY
P
R
KIRBY
M
T
MOORE
M
M
KING
B
MALLORY
A
COMPUTER
CONTROL
USING
HUMAN
INTRACORTICAL
LOCAL
FIELD
POTENTIALS
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
DECHARMS
R
C
CHRISTOFF
K
GLOVER
G
H
PAULY
J
M
WHITFIELD
GABRIELI
J
D
E
LEARNED
REGULATION
OF
SPATIALLY
LOCALIZED
BRAIN
ACTIVATION
USING
REAL
TIME
FMRI
NEUROIMAGE
WEISKOPF
N
MATHIAK
K
BOCK
W
SCHARNOWSKI
F
VEIT
R
GRODD
W
GOEBEL
R
BIRBAUMER
N
PRINCIPLES
OF
A
BRAIN
COMPUTER
INTERFACE
BCI
BASED
ON
REAL
TIME
FUNCTIONAL
MAGNETIC
RESONANCE
IMAGING
FMRI
IEEE
TRANS
BIOMED
ENG
LEE
J
RYU
J
JOLESZ
F
A
CHO
Z
H
YOO
BRAIN
MACHINE
INTERFACE
VIA
REAL
TIME
FMRI
PRELIMINARY
STUDY
ON
THOUGHT
CONTROLLED
ROBOTIC
ARM
NEUROSCI
LETT
LOGOTHETIS
N
K
PAULS
J
AUGATH
M
TRINATH
T
OELTERMANN
A
NEUROPHYSIOLOGICAL
INVESTIGATION
OF
THE
BASIS
OF
THE
FMRI
SIGNAL
NATURE
WEISKOPF
N
SITARAM
R
JOSEPHS
O
VEIT
R
SCHARNOWSKI
F
GOEBEL
R
BIRBAUMER
N
DEICHMANN
R
MATHIAK
K
REAL
TIME
FUNCTIONAL
MAGNETIC
RESONANCE
IMAGING
METHODS
AND
APPLICATIONS
MAGN
RESON
IMAGING
CHRISTOPHER
DECHARMS
R
APPLICATIONS
OF
REAL
TIME
FMRI
NAT
REV
NEUROSCI
MOENCH
T
HOLLMANN
M
GRZESCHIK
R
MUELLER
C
LUETZKENDORF
R
BAECKE
LUCHTMANN
M
WAGEGG
D
BERNARDING
J
REAL
TIME
CLASSIFICATION
OF
ACTIVATED
BRAIN
AREAS
FOR
FMRI
BASED
HUMAN
BRAIN
INTERFACES
SOCIETY
OF
PHOTO
OPTICAL
INSTRUMENTATION
ENGINEERS
BELLIGHAM
WA
USA
WARD
B
D
MAZAHERI
Y
INFORMATION
TRANSFER
RATE
IN
FMRI
EXPERIMENTS
MEASURED
USING
MUTUAL
INFORMATION
THEORY
J
NEUROSCI
METHODS
COYLE
M
WARD
T
E
MARKHAM
C
M
BRAIN
COMPUTER
INTERFACE
USING
A
SIMPLIFIED
FUNCTIONAL
NEAR
INFRARED
SPECTROSCOPY
SYSTEM
J
NEURAL
ENG
DOI
TAGA
G
HOMAE
F
WATANABE
H
EFFECTS
OF
SOURCE
DETECTOR
DISTANCE
OF
NEAR
INFRARED
SPECTROSCOPY
ON
THE
MEASUREMENT
OF
THE
CORTICAL
HEMODYNAMIC
RESPONSE
IN
INFANTS
NEUROIMAGE
KENNAN
R
P
HOROVITZ
G
MAKI
A
YAMASHITA
Y
KOIZUMI
H
GORE
J
C
SIMULTANEOUS
RECORDING
OF
EVENT
RELATED
AUDITORY
ODDBALL
RESPONSE
USING
TRANSCRANIAL
NEAR
INFRARED
OPTICAL
TOPOGRAPHY
AND
SURFACE
EEG
NEUROIMAGE
IZZETOGLU
M
DEVARAJ
A
BUNCE
ONARAL
B
MOTION
ARTIFACT
CANCELLATION
IN
NIR
SPECTROSCOPY
USING
WIENER
FILTERING
IEEE
TRANS
BIOMED
ENG
STRANGMAN
G
BOAS
D
A
SUTTON
J
P
NON
INVASIVE
NEUROIMAGING
USING
NEAR
INFRARED
LIGHT
BIOL
PSYCHIATRY
CUI
X
BRAY
REISS
A
L
FUNCTIONAL
NEAR
INFRARED
SPECTROSCOPY
NIRS
SIGNAL
IMPROVEMENT
BASED
ON
NEGATIVE
CORRELATION
BETWEEN
OXYGENATED
AND
DEOXYGENATED
HEMOGLOBIN
DYNAMICS
NEUROIMAGE
SHIRLEY
C
WARD
T
MARKHAM
C
MCDARBY
G
ON
THE
SUITABILITY
OF
NEAR
INFRARED
NIR
SYSTEMS
FOR
NEXT
GENERATION
BRAIN
COMPUTER
INTERFACES
PHYSIOL
MEAS
POWER
D
KUSHKI
A
CHAU
T
TOWARDS
A
SYSTEM
PACED
NEAR
INFRARED
SPECTROSCOPY
BRAIN
COMPUTER
INTERFACE
DIFFERENTIATING
PREFRONTAL
ACTIVITY
DUE
TO
MENTAL
ARITHMETIC
AND
MENTAL
SINGING
FROM
THE
NO
CONTROL
STATE
J
NEURAL
ENG
SENSORS
VILLRINGER
A
PLANCK
J
HOCK
C
SCHLEINKOFER
L
DIRNAGL
U
NEAR
INFRARED
SPECTROSCOPY
NIRS
A
NEW
TOOL
TO
STUDY
HEMODYNAMIC
CHANGES
DURING
ACTIVATION
OF
BRAIN
FUNCTION
IN
HUMAN
ADULTS
NEUROSCI
LETT
SITARAM
R
ZHANG
H
GUAN
C
THULASIDAS
M
HOSHI
Y
ISHIKAWA
A
SHIMIZU
K
BIRBAUMER
N
TEMPORAL
CLASSIFICATION
OF
MULTICHANNEL
NEAR
INFRARED
SPECTROSCOPY
SIGNALS
OF
MOTOR
IMAGERY
FOR
DEVELOPING
A
BRAIN
COMPUTER
INTERFACE
NEUROIMAGE
REGAN
D
HUMAN
BRAIN
ELECTROPHYSIOLOGY
EVOKED
POTENTIALS
AND
EVOKED
MAGNETIC
FIELDS
IN
SCIENCE
AND
MEDICINE
ELSEVIER
NEW
YORK
NY
USA
YIJUN
W
RUIPING
W
XIAORONG
G
BO
H
SHANGKAI
G
A
PRACTICAL
VEP
BASED
BRAIN
COMPUTER
INTERFACE
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
JINGHAI
Y
DERONG
J
JIANFENG
H
DESIGN
AND
APPLICATION
OF
BRAIN
COMPUTER
INTERFACE
WEB
BROWSER
BASED
ON
VEP
IN
PROCEEDINGS
OF
THE
INTERNATIONAL
CONFERENCE
ON
FUTURE
BIOMEDICAL
INFORMATION
ENGINEERING
FBIE
SANYA
CHINA
DECEMBER
PP
XIAORONG
G
DINGFENG
X
MING
C
SHANGKAI
G
A
BCI
BASED
ENVIRONMENTAL
CONTROLLER
FOR
THE
MOTION
DISABLED
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
ODOM
J
V
BACH
M
BARBER
C
BRIGELL
M
MARMOR
M
F
TORMENE
A
P
HOLDER
G
E
VISUAL
EVOKED
POTENTIALS
STANDARD
DOC
OPHTHALMOL
ZHU
D
BIEGER
J
GARCIA
MOLINA
G
AARTS
R
M
A
SURVEY
OF
STIMULATION
METHODS
USED
IN
SSVEP
BASED
BCIS
COMPUT
INTELL
NEUROSCI
DOI
GALLOWAY
N
HUMAN
BRAIN
ELECTROPHYSIOLOGY
EVOKED
POTENTIALS
AND
EVOKED
MAGNETIC
FIELDS
IN
SCIENCE
AND
MEDICINE
BR
J
OPHTHALMOL
PERLSTEIN
W
M
COLE
M
A
LARSON
M
KELLY
K
SEIGNOUREL
P
KEIL
A
STEADY
STATE
VISUAL
EVOKED
POTENTIALS
REVEAL
FRONTALLY
MEDIATED
WORKING
MEMORY
ACTIVITY
IN
HUMANS
NEUROSCI
LETT
GRAY
M
KEMP
A
H
SILBERSTEIN
R
B
NATHAN
P
J
CORTICAL
NEUROPHYSIOLOGY
OF
ANTICIPATORY
ANXIETY
AN
INVESTIGATION
UTILIZING
STEADY
STATE
PROBE
TOPOGRAPHY
SSPT
NEUROIMAGE
GUANGYU
B
XIAORONG
G
YIJUN
W
BO
H
SHANGKAI
G
VEP
BASED
BRAIN
COMPUTER
INTERFACES
TIME
FREQUENCY
AND
CODE
MODULATIONS
RESEARCH
FRONTIER
IEEE
COMPUT
INTELL
MAG
LEE
P
HSIEH
J
WU
C
SHYU
K
WU
Y
BRAIN
COMPUTER
INTERFACE
USING
FLASH
ONSET
AND
OFFSET
VISUAL
EVOKED
POTENTIALS
CLIN
NEUROPHYSIOL
ALLISON
B
Z
MCFARLAND
D
J
SCHALK
G
ZHENG
D
JACKSON
M
M
WOLPAW
J
R
TOWARDS
AN
INDEPENDENT
BRAIN
COMPUTER
INTERFACE
USING
STEADY
STATE
VISUAL
EVOKED
POTENTIALS
CLIN
NEUROPHYSIOL
DAN
Z
ALEXANDER
M
XIAORONG
G
BO
H
ANDREAS
K
E
SHANGKAI
G
AN
INDEPENDENT
BRAIN
COMPUTER
INTERFACE
USING
COVERT
NON
SPATIAL
VISUAL
SELECTIVE
ATTENTION
J
NEURAL
ENG
YIJUN
W
XIAORONG
G
BO
H
CHUAN
J
SHANGKAI
G
BRAIN
COMPUTER
INTERFACES
BASED
ON
VISUAL
EVOKED
POTENTIALS
IEEE
ENG
MED
BIOL
MAG
WU
Z
LAI
Y
XIA
Y
WU
D
YAO
D
STIMULATOR
SELECTION
IN
SSVEP
BASED
BCI
MED
ENG
PHYS
SENSORS
BIRBAUMER
N
ELBERT
T
CANAVAN
A
G
ROCKSTROH
B
SLOW
POTENTIALS
OF
THE
CEREBRAL
CORTEX
AND
BEHAVIOR
PHYSIOL
REV
HINTERBERGER
T
SCHMIDT
NEUMANN
N
MELLINGER
J
BLANKERTZ
B
CURIO
G
BIRBAUMER
N
BRAIN
COMPUTER
COMMUNICATION
AND
SLOW
CORTICAL
POTENTIALS
IEEE
TRANS
BIOMED
ENG
KAISER
J
SELF
INITIATION
OF
EEG
BASED
COMMUNICATION
IN
PARALYZED
PATIENTS
CLIN
NEUROPHYSIOL
NEUMANN
N
BIRBAUMER
N
PREDICTORS
OF
SUCCESSFUL
SELF
CONTROL
DURING
BRAIN
COMPUTER
COMMUNICATION
J
NEUROL
NEUROSURG
PSYCHIATRY
KÜBLER
A
KOTCHOUBEY
B
HINTERBERGER
T
GHANAYIM
N
PERELMOUTER
J
SCHAUER
M
FRITSCH
C
TAUB
E
BIRBAUMER
N
THE
THOUGHT
TRANSLATION
DEVICE
A
NEUROPHYSIOLOGICAL
APPROACH
TO
COMMUNICATION
IN
TOTAL
MOTOR
PARALYSIS
EXP
BRAIN
RES
BIRBAUMER
N
HINTERBERGER
T
KUBLER
A
NEUMANN
N
THE
THOUGHT
TRANSLATION
DEVICE
TTD
NEUROBEHAVIORAL
MECHANISMS
AND
CLINICAL
OUTCOME
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
IVERSEN
I
H
GHANAYIM
N
KÜBLER
A
NEUMANN
N
BIRBAUMER
N
KAISER
J
A
BRAIN
COMPUTER
INTERFACE
TOOL
TO
ASSESS
COGNITIVE
FUNCTIONS
IN
COMPLETELY
PARALYZED
PATIENTS
WITH
AMYOTROPHIC
LATERAL
SCLEROSIS
CLIN
NEUROPHYSIOL
FARWELL
L
A
DONCHIN
E
TALKING
OFF
THE
TOP
OF
YOUR
HEAD
TOWARD
A
MENTAL
PROSTHESIS
UTILIZING
EVENT
RELATED
BRAIN
POTENTIALS
ELECTROENCEPHALOGR
CLIN
NEUROPHYSIOL
DONCHIN
E
SMITH
D
B
D
THE
CONTINGENT
NEGATIVE
VARIATION
AND
THE
LATE
POSITIVE
WAVE
OF
THE
AVERAGE
EVOKED
POTENTIAL
ELECTROENCEPHALOGR
CLIN
NEUROPHYSIOL
POLICH
J
ELLERSON
P
C
COHEN
J
STIMULUS
INTENSITY
MODALITY
AND
PROBABILITY
INT
J
PSYCHOPHYSIOL
RAVDEN
D
POLICH
J
ON
MEASUREMENT
STABILITY
HABITUATION
INTRA
TRIAL
BLOCK
VARIATION
AND
ULTRADIAN
RHYTHMS
BIOL
PSYCHOL
TANAKA
K
MATSUNAGA
K
WANG
H
O
ELECTROENCEPHALOGRAM
BASED
CONTROL
OF
AN
ELECTRIC
WHEELCHAIR
IEEE
TRANS
ROBOT
MUGLER
E
M
RUF
C
A
HALDER
BENSCH
M
KUBLER
A
DESIGN
AND
IMPLEMENTATION
OF
A
BASED
BRAIN
COMPUTER
INTERFACE
FOR
CONTROLLING
AN
INTERNET
BROWSER
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
FURDEA
A
HALDER
KRUSIENSKI
D
J
BROSS
D
NIJBOER
F
BIRBAUMER
N
KÜBLER
A
AN
AUDITORY
ODDBALL
SPELLING
SYSTEM
FOR
BRAIN
COMPUTER
INTERFACES
PSYCHOPHYSIOLOGY
RIVET
B
SOULOUMIAC
A
ATTINA
V
GIBERT
G
XDAWN
ALGORITHM
TO
ENHANCE
EVOKED
POTENTIALS
APPLICATION
TO
BRAIN
COMPUTER
INTERFACE
IEEE
TRANS
BIOMED
ENG
RAKOTOMAMONJY
A
GUIGUE
V
BCI
COMPETITION
III
DATASET
II
ENSEMBLE
OF
SVMS
FOR
BCI
SPELLER
IEEE
TRANS
BIOMED
ENG
SALVARIS
M
SEPULVEDA
F
VISUAL
MODIFICATIONS
ON
THE
SPELLER
BCI
PARADIGM
J
NEURAL
ENG
SENSORS
TAKANO
K
KOMATSU
T
HATA
N
NAKAJIMA
Y
KANSAKU
K
VISUAL
STIMULI
FOR
THE
BRAIN
COMPUTER
INTERFACE
A
COMPARISON
OF
WHITE
GRAY
AND
GREEN
BLUE
FLICKER
MATRICES
CLIN
NEUROPHYSIOL
IKEGAMI
TAKANO
K
SAEKI
N
KANSAKU
K
OPERATION
OF
A
BASED
BRAIN
COMPUTER
INTERFACE
BY
INDIVIDUALS
WITH
CERVICAL
SPINAL
CORD
INJURY
CLIN
NEUROPHYSIOL
HILL
J
FARQUHAR
J
MARTENS
BIESSMANN
F
SCHÖLKOPF
B
EFFECTS
OF
STIMULUS
TYPE
AND
OF
ERROR
CORRECTING
CODE
DESIGN
ON
BCI
SPELLER
PERFORMANCE
IN
PROCEEDINGS
OF
THE
TWENTY
SECOND
ANNUAL
CONFERENCE
ON
NEURAL
INFORMATION
PROCESSING
SYSTEMS
NIPS
VANCOUVER
CANADA
DECEMBER
MARTENS
M
M
HILL
N
J
FARQUHAR
J
SCHÖLKOPF
B
OVERLAP
AND
REFRACTORY
EFFECTS
IN
A
BRAIN
COMPUTER
INTERFACE
SPELLER
BASED
ON
THE
VISUAL
EVENT
RELATED
POTENTIAL
J
NEURAL
ENG
TOWNSEND
G
LAPALLO
B
K
BOULAY
C
B
KRUSIENSKI
D
J
FRYE
G
E
HAUSER
C
K
SCHWARTZ
N
E
VAUGHAN
T
M
WOLPAW
J
R
SELLERS
E
W
A
NOVEL
BASED
BRAIN
COMPUTER
INTERFACE
STIMULUS
PRESENTATION
PARADIGM
MOVING
BEYOND
ROWS
AND
COLUMNS
CLIN
NEUROPHYSIOL
BRUNNER
P
JOSHI
BRISKIN
WOLPAW
J
R
BISCHOF
H
SCHALK
G
DOES
THE
SPELLER
DEPEND
ON
EYE
GAZE
J
NEURAL
ENG
PFURTSCHELLER
G
LOPES
DA
SILVA
F
H
EVENT
RELATED
EEG
MEG
SYNCHRONIZATION
AND
DESYNCHRONIZATION
BASIC
PRINCIPLES
CLIN
NEUROPHYSIOL
JEANNEROD
M
MENTAL
IMAGERY
IN
THE
MOTOR
CONTEXT
NEUROPSYCHOLOGIA
PFURTSCHELLER
G
NEUPER
C
FLOTZINGER
D
PREGENZER
M
EEG
BASED
DISCRIMINATION
BETWEEN
IMAGINATION
OF
RIGHT
AND
LEFT
HAND
MOVEMENT
ELECTROENCEPHALOGR
CLIN
NEUROPHYSIOL
BLANKERTZ
B
SANNELLI
C
HALDER
HAMMER
E
M
KÜBLER
A
MÜLLER
K
R
CURIO
G
DICKHAUS
T
NEUROPHYSIOLOGICAL
PREDICTOR
OF
SMR
BASED
BCI
PERFORMANCE
NEUROIMAGE
NEUPER
C
SCHERER
R
REINER
M
PFURTSCHELLER
G
IMAGERY
OF
MOTOR
ACTIONS
DIFFERENTIAL
EFFECTS
OF
KINESTHETIC
AND
VISUAL
MOTOR
MODE
OF
IMAGERY
IN
SINGLE
TRIAL
EEG
COGN
BRAIN
RES
NIJBOER
F
FURDEA
A
GUNST
I
MELLINGER
J
MCFARLAND
D
J
BIRBAUMER
N
KÜBLER
A
AN
AUDITORY
BRAIN
COMPUTER
INTERFACE
BCI
J
NEUROSCI
METHODS
HWANG
H
KWON
K
IM
C
NEUROFEEDBACK
BASED
MOTOR
IMAGERY
TRAINING
FOR
BRAIN
COMPUTER
INTERFACE
BCI
J
NEUROSCI
METHODS
WOLPAW
J
R
MCFARLAND
D
J
VAUGHAN
T
M
BRAIN
COMPUTER
INTERFACE
RESEARCH
AT
THE
WADSWORTH
CENTER
IEEE
TRANS
REHABIL
ENG
BLANKERTZ
B
LOSCH
F
KRAULEDAT
M
DORNHEGE
G
CURIO
G
MULLER
K
R
THE
BERLIN
BRAIN
COMPUTER
INTERFACE
ACCURATE
PERFORMANCE
FROM
FIRST
SESSION
IN
BCI
NAÏVE
SUBJECTS
IEEE
TRANS
BIOMED
ENG
PFURTSCHELLER
G
NEUPER
C
MULLER
G
R
OBERMAIER
B
KRAUSZ
G
SCHLOGL
A
SCHERER
R
GRAIMANN
B
KEINRATH
C
SKLIRIS
D
ET
AL
GRAZ
BCI
STATE
OF
THE
ART
AND
CLINICAL
APPLICATIONS
IEEE
TRANS
NEURAL
SYS
REHABIL
ENG
SENSORS
BAI
O
RATHI
V
LIN
P
HUANG
D
BATTAPADY
H
FEI
D
SCHNEIDER
L
HOUDAYER
E
CHEN
X
HALLETT
M
PREDICTION
OF
HUMAN
VOLUNTARY
MOVEMENT
BEFORE
IT
OCCURS
CLIN
NEUROPHYSIOL
KLEBER
B
BIRBAUMER
N
DIRECT
BRAIN
COMMUNICATION
NEUROELECTRIC
AND
METABOLIC
APPROACHES
AT
TÜBINGEN
COGN
PROCESS
KRUSIENSKI
D
J
SCHALK
G
MCFARLAND
D
J
WOLPAW
J
R
A
MU
RHYTHM
MATCHED
FILTER
FOR
CONTINUOUS
CONTROL
OF
A
BRAIN
COMPUTER
INTERFACE
IEEE
TRANS
BIOMED
ENG
TSUI
C
GAN
J
ASYNCHRONOUS
BCI
CONTROL
OF
A
ROBOT
SIMULATOR
WITH
SUPERVISED
ONLINE
TRAINING
IN
INTELLIGENT
DATA
ENGINEERING
AND
AUTOMATED
LEARNING
IDEAL
YIN
H
TINO
P
CORCHADO
E
BYRNE
W
YAO
X
EDS
SPRINGER
BERLIN
GERMANY
VOLUME
PP
GHAFAR
R
HUSSAIN
A
SAMAD
A
TAHIR
N
M
COMPARISON
OF
FFT
AND
AR
TECHNIQUES
FOR
SCALP
EEG
ANALYSIS
IN
PROCEEDINGS
OF
THE
KUALA
LUMPUR
INTERNATIONAL
CONFERENCE
ON
BIOMEDICAL
ENGINEERING
KUALA
LUMPUR
MALAYSIA
JUNE
ABU
OSMAN
N
A
IBRAHIM
F
WAN
ABAS
W
A
B
ABDUL
RAHMAN
H
TING
H
N
MAGJAREVIC
R
EDS
SPRINGER
BERLIN
HEIDELBERG
BERLIN
GERMANY
VOLUME
PP
VON
BÜNAU
P
MEINECKE
F
C
KIRÁLY
F
C
MÜLLER
K
R
FINDING
STATIONARY
SUBSPACES
IN
MULTIVARIATE
TIME
SERIES
PHYS
REV
LETT
LIN
C
J
HSIEH
M
H
CLASSIFICATION
OF
MENTAL
TASK
FROM
EEG
DATA
USING
NEURAL
NETWORKS
BASED
ON
PARTICLE
SWARM
OPTIMIZATION
NEUROCOMPUTING
MCFARLAND
D
J
ANDERSON
C
W
MULLER
K
R
SCHLOGL
A
KRUSIENSKI
D
J
BCI
MEETING
WORKSHOP
ON
BCI
SIGNAL
PROCESSING
FEATURE
EXTRACTION
AND
TRANSLATION
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
LINS
O
G
PICTON
T
W
BERG
P
SCHERG
M
OCULAR
ARTIFACTS
IN
RECORDING
EEGS
AND
EVENT
RELATED
POTENTIALS
II
SOURCE
DIPOLES
AND
SOURCE
COMPONENTS
BRAIN
TOPOGR
BOYE
A
T
KRISTIANSEN
U
Q
BILLINGER
M
DO
NASCIMENTO
O
F
FARINA
D
IDENTIFICATION
OF
MOVEMENT
RELATED
CORTICAL
POTENTIALS
WITH
OPTIMIZED
SPATIAL
FILTERING
AND
PRINCIPAL
COMPONENT
ANALYSIS
BIOMED
SIGNAL
PROCESS
CONTROL
TE
WON
L
LEWICKI
M
GIROLAMI
M
SEJNOWSKI
T
J
BLIND
SOURCE
SEPARATION
OF
MORE
SOURCES
THAN
MIXTURES
USING
OVERCOMPLETE
REPRESENTATIONS
IEEE
SIGNAL
PROCESS
LETT
KUN
L
SANKAR
R
ARBEL
Y
DONCHIN
E
SINGLE
TRIAL
INDEPENDENT
COMPONENT
ANALYSIS
FOR
BCI
SYSTEM
IN
PROCEEDINGS
OF
THE
ANNUAL
INTERNATIONAL
CONFERENCE
OF
THE
IEEE
ENGINEERING
IN
MEDICINE
AND
BIOLOGY
SOCIETY
EMBCS
MINNEAPOLIS
MN
USA
SEPTEMBER
PP
CASTELLANOS
N
P
MAKAROV
V
A
RECOVERING
EEG
BRAIN
SIGNALS
ARTIFACT
SUPPRESSION
WITH
WAVELET
ENHANCED
INDEPENDENT
COMPONENT
ANALYSIS
J
NEUROSCI
METHODS
BELL
A
SEJNOWSKI
T
AN
INFORMATION
MAXIMIZATION
APPROACH
TO
BLIND
SEPARATION
AND
BLIND
DECONVOLUTION
NEURAL
COMPUT
SENSORS
LEE
T
GIROLAMI
M
SEJNOWSKI
T
J
INDEPENDENT
COMPONENT
ANALYSIS
USING
AN
EXTENDED
INFOMAX
ALGORITHM
FOR
MIXED
SUBGAUSSIAN
AND
SUPERGAUSSIAN
SOURCES
NEURAL
COMPUT
GAO
J
YANG
Y
LIN
P
WANG
P
ZHENG
C
AUTOMATIC
REMOVAL
OF
EYE
MOVEMENT
AND
BLINK
ARTIFACTS
FROM
EEG
SIGNALS
BRAIN
TOPOGR
FLEXER
A
BAUER
H
PRIPFL
J
DORFFNER
G
USING
ICA
FOR
REMOVAL
OF
OCULAR
ARTIFACTS
IN
EEG
RECORDED
FROM
BLIND
SUBJECTS
NEURAL
NETW
JUNG
T
P
MAKEIG
WESTERFIELD
M
TOWNSEND
J
COURCHESNE
E
SEJNOWSKI
T
J
REMOVAL
OF
EYE
ACTIVITY
ARTIFACTS
FROM
VISUAL
EVENT
RELATED
POTENTIALS
IN
NORMAL
AND
CLINICAL
SUBJECTS
CLIN
NEUROPHYSIOL
WALLSTROM
G
L
KASS
R
E
MILLER
A
COHN
J
F
FOX
N
A
AUTOMATIC
CORRECTION
OF
OCULAR
ARTIFACTS
IN
THE
EEG
A
COMPARISON
OF
REGRESSION
BASED
AND
COMPONENT
BASED
METHODS
INT
J
PSYCHOPHYSIOL
CHIAPPA
BARBER
D
EEG
CLASSIFICATION
USING
GENERATIVE
INDEPENDENT
COMPONENT
ANALYSIS
NEUROCOMPUTING
KAY
M
MARPLE
L
JR
SPECTRUM
ANALYSIS
A
MODERN
PERSPECTIVE
PROC
IEEE
KRUSIENSKI
D
J
MCFARLAND
D
J
WOLPAW
J
R
AN
EVALUATION
OF
AUTOREGRESSIVE
SPECTRAL
ESTIMATION
MODEL
ORDER
FOR
BRAIN
COMPUTER
INTERFACE
APPLICATIONS
IN
PROCEEDINGS
OF
THE
ANNUAL
INTERNATIONAL
CONFERENCE
OF
THE
IEEE
ENGINEERING
IN
MEDICINE
AND
BIOLOGY
SOCIETY
EMBS
NEW
YORK
NY
USA
SEPTEMBER
PP
FLORIAN
G
PFURTSCHELLER
G
DYNAMIC
SPECTRAL
ANALYSIS
OF
EVENT
RELATED
EEG
DATA
ELECTROENCEPHALOGR
CLIN
NEUROPHYSIOL
JIANG
W
GUIZHI
X
LEI
W
HUIYUAN
Z
FEATURE
EXTRACTION
OF
BRAIN
COMPUTER
INTERFACE
BASED
ON
IMPROVED
MULTIVARIATE
ADAPTIVE
AUTOREGRESSIVE
MODELS
IN
PROCEEDINGS
OF
THE
INTERNATIONAL
CONFERENCE
ON
BIOMEDICAL
ENGINEERING
AND
INFORMATICS
BMEI
YANTAI
CHINA
OCTOBER
PP
BRUNNER
C
ALLISON
B
Z
KRUSIENSKI
D
J
KAISER
V
MÜLLER
PUTZ
G
R
PFURTSCHELLER
G
NEUPER
C
IMPROVED
SIGNAL
PROCESSING
APPROACHES
IN
AN
OFFLINE
SIMULATION
OF
A
HYBRID
BRAIN
COMPUTER
INTERFACE
J
NEUROSCI
METHODS
GHANBARI
A
A
KOUSARRIZI
M
R
N
TESHNEHLAB
M
ALIYARI
M
WAVELET
AND
HILBERT
TRANSFORM
BASED
BRAIN
COMPUTER
INTERFACE
IN
PROCEEDINGS
OF
THE
INTERNATIONAL
CONFERENCE
ON
ADVANCES
IN
COMPUTATIONAL
TOOLS
FOR
ENGINEERING
APPLICATIONS
ACTEA
BEIRUT
LEBANON
JULY
PP
SAMAR
V
J
BOPARDIKAR
A
RAO
R
SWARTZ
K
WAVELET
ANALYSIS
OF
NEUROELECTRIC
WAVEFORMS
A
CONCEPTUAL
TUTORIAL
BRAIN
LANG
DEMIRALP
T
YORDANOVA
J
KOLEV
V
ADEMOGLU
A
DEVRIM
M
SAMAR
V
J
TIME
FREQUENCY
ANALYSIS
OF
SINGLE
SWEEP
EVENT
RELATED
POTENTIALS
BY
MEANS
OF
FAST
WAVELET
TRANSFORM
BRAIN
LANG
HUBBARD
B
B
THE
WORLD
ACCORDING
TO
WAVELETS
THE
STORY
OF
A
MATHEMATICAL
TECHNIQUE
IN
THE
MAKING
A
K
PETERS
NATICK
MA
USA
SENSORS
FARINA
D
DO
NASCIMENTO
O
F
LUCAS
M
F
DONCARLI
C
OPTIMIZATION
OF
WAVELETS
FOR
CLASSIFICATION
OF
MOVEMENT
RELATED
CORTICAL
POTENTIALS
GENERATED
BY
VARIATION
OF
FORCE
RELATED
PARAMETERS
J
NEUROSCI
METHODS
BOSTANOV
V
BCI
COMPETITION
DATA
SETS
IB
AND
IIB
FEATURE
EXTRACTION
FROM
EVENT
RELATED
BRAIN
POTENTIALS
WITH
THE
CONTINUOUS
WAVELET
TRANSFORM
AND
THE
T
VALUE
SCALOGRAM
IEEE
TRANS
BIOMED
ENG
SENKOWSKI
D
HERRMANN
C
EFFECTS
OF
TASK
DIFFICULTY
ON
EVOKED
GAMMA
ACTIVITY
AND
ERPS
IN
A
VISUAL
DISCRIMINATION
TASK
CLIN
NEUROPHYSIOL
MASON
G
BIRCH
G
E
A
BRAIN
CONTROLLED
SWITCH
FOR
ASYNCHRONOUS
CONTROL
APPLICATIONS
IEEE
TRANS
BIOMED
ENG
HINTERBERGER
T
KÜBLER
A
KAISER
J
NEUMANN
N
BIRBAUMER
N
A
BRAIN
COMPUTER
INTERFACE
BCI
FOR
THE
LOCKED
IN
COMPARISON
OF
DIFFERENT
EEG
CLASSIFICATIONS
FOR
THE
THOUGHT
TRANSLATION
DEVICE
CLIN
NEUROPHYSIOL
RAMOSER
H
MULLER
GERKING
J
PFURTSCHELLER
G
OPTIMAL
SPATIAL
FILTERING
OF
SINGLE
TRIAL
EEG
DURING
IMAGINED
HAND
MOVEMENT
IEEE
TRANS
REHABIL
ENG
GROSSE
WENTRUP
M
BUSS
M
MULTICLASS
COMMON
SPATIAL
PATTERNS
AND
INFORMATION
THEORETIC
FEATURE
EXTRACTION
IEEE
TRANS
BIOMED
ENG
MOUSAVI
E
A
MALLER
J
J
FITZGERALD
P
B
LITHGOW
B
J
WAVELET
COMMON
SPATIAL
PATTERN
IN
ASYNCHRONOUS
OFFLINE
BRAIN
COMPUTER
INTERFACES
BIOMED
SIGNAL
PROCESS
CONTROL
LEMM
BLANKERTZ
B
CURIO
G
MULLER
K
R
SPATIO
SPECTRAL
FILTERS
FOR
IMPROVING
THE
CLASSIFICATION
OF
SINGLE
TRIAL
EEG
IEEE
TRANS
BIOMED
ENG
DORNHEGE
G
BLANKERTZ
B
KRAULEDAT
M
LOSCH
F
CURIO
G
MULLER
K
R
COMBINED
OPTIMIZATION
OF
SPATIAL
AND
TEMPORAL
FILTERS
FOR
IMPROVING
BRAIN
COMPUTER
INTERFACING
IEEE
TRANS
BIOMED
ENG
DAL
SENO
B
MATTEUCCI
M
MAINARDI
L
A
GENETIC
ALGORITHM
FOR
AUTOMATIC
FEATURE
EXTRACTION
IN
DETECTION
IN
PROCEEDINGS
OF
THE
IEEE
INTERNATIONAL
JOINT
CONFERENCE
ON
NEURAL
NETWORKS
IJCNN
HONG
KONG
CHINA
JUNE
PP
FATOURECHI
M
BIRCH
G
E
WARD
R
K
APPLICATION
OF
A
HYBRID
WAVELET
FEATURE
SELECTION
METHOD
IN
THE
DESIGN
OF
A
SELF
PACED
BRAIN
INTERFACE
SYSTEM
J
NEUROENG
REHABIL
CIACCIO
E
DUNN
AKAY
M
BIOSIGNAL
PATTERN
RECOGNITION
AND
INTERPRETATION
SYSTEMS
METHODS
FOR
FEATURE
EXTRACTION
AND
SELECTION
IEEE
ENG
MED
BIOL
MAG
DIAS
N
KAMRUNNAHAR
M
MENDES
P
SCHIFF
CORREIA
J
FEATURE
SELECTION
ON
MOVEMENT
IMAGERY
DISCRIMINATION
AND
ATTENTION
DETECTION
MED
BIOL
ENG
COMPUT
LAKANY
H
CONWAY
B
A
UNDERSTANDING
INTENTION
OF
MOVEMENT
FROM
ELECTROENCEPHALOGRAMS
EXPERT
SYST
PUDIL
P
NOVOVIČOVÁ
J
KITTLER
J
FLOATING
SEARCH
METHODS
IN
FEATURE
SELECTION
PATTERN
RECOGN
LETT
TOWNSEND
G
GRAIMANN
B
PFURTSCHELLER
G
A
COMPARISON
OF
COMMON
SPATIAL
PATTERNS
WITH
COMPLEX
BAND
POWER
FEATURES
IN
A
FOUR
CLASS
BCI
EXPERIMENT
IEEE
TRANS
BIOMED
ENG
SENSORS
HASAN
B
A
GAN
J
Q
UNSUPERVISED
ADAPTIVE
GMM
FOR
BCI
IN
PROCEEDINGS
OF
THE
INTERNATIONAL
IEEE
EMBS
CONFERENCE
ON
NEURAL
ENGINEERING
NER
ANTALYA
TURKEY
MAY
PP
NEUPER
C
SCHERER
R
WRIESSNEGGER
PFURTSCHELLER
G
MOTOR
IMAGERY
AND
ACTION
OBSERVATION
MODULATION
OF
SENSORIMOTOR
BRAIN
RHYTHMS
DURING
MENTAL
CONTROL
OF
A
BRAIN
COMPUTER
INTERFACE
CLIN
NEUROPHYSIOL
FATOURECHI
M
BASHASHATI
A
WARD
R
K
BIRCH
G
E
EMG
AND
EOG
ARTIFACTS
IN
BRAIN
COMPUTER
INTERFACE
SYSTEMS
A
SURVEY
CLIN
NEUROPHYSIOL
CROFT
R
J
BARRY
R
J
REMOVAL
OF
OCULAR
ARTIFACT
FROM
THE
EEG
A
REVIEW
NEUROPHYSIOL
CLIN
VIGÁRIO
R
N
EXTRACTION
OF
OCULAR
ARTEFACTS
FROM
EEG
USING
INDEPENDENT
COMPONENT
ANALYSIS
ELECTROENCEPHALOGR
CLIN
NEUROPHYSIOL
DEL
R
MILLAN
J
MOURINO
J
FRANZE
M
CINCOTTI
F
VARSTA
M
HEIKKONEN
J
BABILONI
F
A
LOCAL
NEURAL
CLASSIFIER
FOR
THE
RECOGNITION
OF
EEG
PATTERNS
ASSOCIATED
TO
MENTAL
TASKS
IEEE
TRANS
NEURAL
NETW
CHANGMOK
C
MICERA
CARPANETO
J
JUNG
K
DEVELOPMENT
AND
QUANTITATIVE
PERFORMANCE
EVALUATION
OF
A
NONINVASIVE
EMG
COMPUTER
INTERFACE
IEEE
TRANS
BIOMED
ENG
NOJD
N
HANNULA
M
HYTTINEN
J
ELECTRODE
POSITION
OPTIMIZATION
FOR
FACIAL
EMG
MEASUREMENTS
FOR
HUMAN
COMPUTER
INTERFACE
IN
PROCEEDINGS
OF
THE
INTERNATIONAL
CONFERENCE
ON
PERVASIVE
COMPUTING
TECHNOLOGIES
FOR
HEALTHCARE
PCTH
DUBLIN
IRELAND
FEBRUARY
PP
INHYUK
M
MYOUNGJOON
L
MUSEONG
M
A
NOVEL
EMG
BASED
HUMAN
COMPUTER
INTERFACE
FOR
PERSONS
WITH
DISABILITY
IN
PROCEEDINGS
OF
THE
PROCEEDINGS
OF
THE
IEEE
INTERNATIONAL
CONFERENCE
ON
MECHATRONICS
ICM
TUNIS
TUNISIA
JUNE
PP
GOMEZ
GIL
J
SAN
JOSE
GONZALEZ
I
NICOLAS
ALONSO
L
F
ALONSO
GARCIA
STEERING
A
TRACTOR
BY
MEANS
OF
AN
EMG
BASED
HUMAN
MACHINE
INTERFACE
SENSORS
NAN
B
OKAMOTO
M
TSUJI
T
A
HYBRID
MOTION
CLASSIFICATION
APPROACH
FOR
EMG
BASED
HUMAN
ROBOT
INTERFACES
USING
BAYESIAN
AND
NEURAL
NETWORKS
IEEE
TRANS
ROBOT
ZHANG
X
CHEN
X
LANTZ
V
YANG
J
H
WANG
K
Q
EXPLORATION
ON
THE
FEASIBILITY
OF
BUILDING
MUSCLE
COMPUTER
INTERFACES
USING
NECK
AND
SHOULDER
MOTIONS
IN
PROCEEDINGS
OF
THE
ANNUAL
INTERNATIONAL
CONFERENCE
OF
THE
IEEE
ENGINEERING
IN
MEDICINE
AND
BIOLOGY
SOCIETY
EMBC
MINNEAPOLIS
MN
USA
SEPTEMBER
PP
DE
LA
ROSA
R
ALONSO
A
CARRERA
A
DURÁN
R
FERNÁNDEZ
P
MAN
MACHINE
INTERFACE
SYSTEM
FOR
NEUROMUSCULAR
TRAINING
AND
EVALUATION
BASED
ON
EMG
AND
MMG
SIGNALS
ECKHOUSE
R
H
MAULUCCI
R
A
A
MULTIMEDIA
SYSTEM
FOR
AUGMENTED
SENSORY
ASSESSMENT
AND
TREATMENT
OF
MOTOR
DISABILITIES
TELEMAT
INF
LOTTE
F
CONGEDO
M
LÉCUYER
A
LAMARCHE
F
ARNALDI
B
A
REVIEW
OF
CLASSIFICATION
ALGORITHMS
FOR
EEG
BASED
BRAIN
COMPUTER
INTERFACES
J
NEURAL
ENG
MCFARLAND
D
J
WOLPAW
J
R
SENSORIMOTOR
RHYTHM
BASED
BRAIN
COMPUTER
INTERFACE
BCI
FEATURE
SELECTION
BY
REGRESSION
IMPROVES
PERFORMANCE
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
SENSORS
BLANKERTZ
B
MULLER
K
R
KRUSIENSKI
D
J
SCHALK
G
WOLPAW
J
R
SCHLOGL
A
PFURTSCHELLER
G
MILLAN
J
R
SCHRODER
M
BIRBAUMER
N
THE
BCI
COMPETITION
III
VALIDATING
ALTERNATIVE
APPROACHES
TO
ACTUAL
BCI
PROBLEMS
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
MCFARLAND
D
J
KRUSIENSKI
D
J
WOLPAW
J
R
BRAIN
COMPUTER
INTERFACE
SIGNAL
PROCESSING
AT
THE
WADSWORTH
CENTER
MU
AND
SENSORIMOTOR
BETA
RHYTHMS
IN
PROGRESS
IN
BRAIN
RESEARCH
CHRISTA
N
WOLFGANG
K
EDS
ELSEVIER
NEW
YORK
NY
USA
VOLUME
PP
DALY
J
J
WOLPAW
J
R
BRAIN
COMPUTER
INTERFACES
IN
NEUROLOGICAL
REHABILITATION
LANCET
NEUROL
SHENOY
P
KRAULEDAT
M
BLANKERTZ
B
RAO
R
P
N
MÜLLER
K
R
TOWARDS
ADAPTIVE
CLASSIFICATION
FOR
BCI
J
NEURAL
ENG
MILLAN
J
R
MOURINO
J
ASYNCHRONOUS
BCI
AND
LOCAL
NEURAL
CLASSIFIERS
AN
OVERVIEW
OF
THE
ADAPTIVE
BRAIN
INTERFACE
PROJECT
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
GALÁN
F
NUTTIN
M
LEW
E
FERREZ
P
W
VANACKER
G
PHILIPS
J
MILLÁN
J
D
R
A
BRAIN
ACTUATED
WHEELCHAIR
ASYNCHRONOUS
AND
NON
INVASIVE
BRAIN
COMPUTER
INTERFACES
FOR
CONTINUOUS
CONTROL
OF
ROBOTS
CLIN
NEUROPHYSIOL
LI
Y
GUAN
C
LI
H
CHIN
Z
A
SELF
TRAINING
SEMI
SUPERVISED
SVM
ALGORITHM
AND
ITS
APPLICATION
IN
AN
EEG
BASED
BRAIN
COMPUTER
INTERFACE
SPELLER
SYSTEM
PATTERN
RECOGN
LETT
VIDAURRE
C
SANNELLI
C
MÜLLER
K
R
BLANKERTZ
B
MACHINE
LEARNING
BASED
COADAPTIVE
CALIBRATION
FOR
BRAIN
COMPUTER
INTERFACES
NEURAL
COMPUT
SHIJIAN
L
CUNTAI
G
HAIHONG
Z
UNSUPERVISED
BRAIN
COMPUTER
INTERFACE
BASED
ON
INTERSUBJECT
INFORMATION
AND
ONLINE
ADAPTATION
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
YAN
L
KAMBARA
H
KOIKE
Y
SUGIYAMA
M
APPLICATION
OF
COVARIATE
SHIFT
ADAPTATION
TECHNIQUES
IN
BRAIN
COMPUTER
INTERFACES
IEEE
TRANS
BIOMED
ENG
FERREZ
P
W
DEL
R
MILLAN
J
ERROR
RELATED
EEG
POTENTIALS
GENERATED
DURING
SIMULATED
BRAIN
COMPUTER
INTERACTION
IEEE
TRANS
BIOMED
ENG
MILLAN
J
R
ON
THE
NEED
FOR
ON
LINE
LEARNING
IN
BRAIN
COMPUTER
INTERFACES
IN
PROCEEDINGS
OF
THE
IEEE
INTERNATIONAL
JOINT
CONFERENCE
ON
NEURAL
NETWORKS
IJCNN
BUDAPEST
HUNGARY
JULY
PP
JAIN
A
K
DUIN
R
P
W
JIANCHANG
M
STATISTICAL
PATTERN
RECOGNITION
A
REVIEW
IEEE
TRANS
PATTERN
ANAL
LEMM
BLANKERTZ
B
DICKHAUS
T
MÜLLER
K
R
INTRODUCTION
TO
MACHINE
LEARNING
FOR
BRAIN
IMAGING
NEUROIMAGE
DENOEUX
T
A
K
NEAREST
NEIGHBOR
CLASSIFICATION
RULE
BASED
ON
DEMPSTER
SHAFER
THEORY
IEEE
TRANS
SYST
MAN
CYB
DUDANI
A
THE
DISTANCE
WEIGHTED
K
NEAREST
NEIGHBOR
RULE
IEEE
TRANS
SYST
MAN
CYB
SMC
BORISOFF
J
F
MASON
G
BASHASHATI
A
BIRCH
G
E
BRAIN
COMPUTER
INTERFACE
DESIGN
FOR
ASYNCHRONOUS
CONTROL
APPLICATIONS
IMPROVEMENTS
TO
THE
LF
ASD
ASYNCHRONOUS
BRAIN
SWITCH
IEEE
TRANS
BIOMED
ENG
SENSORS
SCHLÖGL
A
LEE
F
BISCHOF
H
PFURTSCHELLER
G
CHARACTERIZATION
OF
FOUR
CLASS
MOTOR
IMAGERY
EEG
DATA
FOR
THE
BCI
COMPETITION
J
NEURAL
ENG
KAYIKCIOGLU
T
AYDEMIR
O
A
POLYNOMIAL
FITTING
AND
K
NN
BASED
APPROACH
FOR
IMPROVING
CLASSIFICATION
OF
MOTOR
IMAGERY
BCI
DATA
PATTERN
RECOGN
LETT
GARRETT
D
PETERSON
D
A
ANDERSON
C
W
THAUT
M
H
COMPARISON
OF
LINEAR
NONLINEAR
AND
FEATURE
SELECTION
METHODS
FOR
EEG
SIGNAL
CLASSIFICATION
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
SCHERER
R
MULLER
G
R
NEUPER
C
GRAIMANN
B
PFURTSCHELLER
G
AN
ASYNCHRONOUSLY
CONTROLLED
EEG
BASED
VIRTUAL
KEYBOARD
IMPROVEMENT
OF
THE
SPELLING
RATE
IEEE
TRANS
BIOMED
ENG
MULLER
K
R
ANDERSON
C
W
BIRCH
G
E
LINEAR
AND
NONLINEAR
METHODS
FOR
BRAIN
COMPUTER
INTERFACES
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
BLANKERTZ
B
LEMM
TREDER
M
HAUFE
MÜLLER
K
R
SINGLE
TRIAL
ANALYSIS
AND
CLASSIFICATION
OF
ERP
COMPONENTS
A
TUTORIAL
NEUROIMAGE
VIDAURRE
C
KRÄMER
N
BLANKERTZ
B
SCHLÖGL
A
TIME
DOMAIN
PARAMETERS
AS
A
FEATURE
FOR
EEG
BASED
BRAIN
COMPUTER
INTERFACES
NEURAL
NETW
HOFFMANN
U
VESIN
J
M
EBRAHIMI
T
DISERENS
K
AN
EFFICIENT
BASED
BRAIN
COMPUTER
INTERFACE
FOR
DISABLED
SUBJECTS
J
NEUROSCI
METHODS
BURGES
C
J
C
A
TUTORIAL
ON
SUPPORT
VECTOR
MACHINES
FOR
PATTERN
RECOGNITION
DATA
MIN
KNOWL
DISCOV
XIANG
L
DEZHONG
Y
WU
D
CHAOYI
L
COMBINING
SPATIAL
FILTERS
FOR
THE
CLASSIFICATION
OF
SINGLE
TRIAL
EEG
IN
A
FINGER
MOVEMENT
TASK
IEEE
TRANS
BIOMED
ENG
COVER
T
M
GEOMETRICAL
AND
STATISTICAL
PROPERTIES
OF
SYSTEMS
OF
LINEAR
INEQUALITIES
WITH
APPLICATIONS
IN
PATTERN
RECOGNITION
IEEE
TRANS
ELECTRON
COMPUT
EC
GARCIA
G
N
EBRAHIMI
T
VESIN
J
M
SUPPORT
VECTOR
EEG
CLASSIFICATION
IN
THE
FOURIER
AND
TIME
FREQUENCY
CORRELATION
DOMAINS
IN
PROCEEDINGS
OF
THE
FIRST
INTERNATIONAL
IEEE
EMBS
CONFERENCE
ON
NEURAL
ENGINEERING
NER
CAPRI
ISLAND
ITALY
MARCH
PP
BLANKERTZ
B
CURIO
G
MÜLLER
K
CLASSIFYING
SINGLE
TRIAL
EEG
TOWARDS
BRAIN
COMPUTER
INTERFACING
IN
PROCEEDINGS
OF
THE
ADVANCES
IN
NEURAL
INFORMATION
PROCESSING
SYSTEMS
ANPS
VANCOUVER
BC
CANADA
DECEMBER
PP
HAIHONG
Z
CUNTAI
G
CHUANCHU
W
ASYNCHRONOUS
BASED
BRAIN
COMPUTER
INTERFACES
A
COMPUTATIONAL
APPROACH
WITH
STATISTICAL
MODELS
IEEE
TRANS
BIOMED
ENG
KAPER
M
MEINICKE
P
GROSSEKATHOEFER
U
LINGNER
T
RITTER
H
BCI
COMPETITION
DATA
SET
IIB
SUPPORT
VECTOR
MACHINES
FOR
THE
SPELLER
PARADIGM
IEEE
TRANS
BIOMED
ENG
MEINICKE
P
KAPER
M
HOPPE
F
HEUMANN
M
RITTER
H
IMPROVING
TRANSFER
RATES
IN
BRAIN
COMPUTER
INTERFACING
A
CASE
STUDY
IN
PROCEEDINGS
OF
THE
ADVANCES
IN
NEURAL
INF
PROC
SYSTEMS
NIPS
VANCOUVER
BC
CANADA
DECEMBER
PP
THULASIDAS
M
CUNTAI
G
JIANKANG
W
ROBUST
CLASSIFICATION
OF
EEG
SIGNAL
FOR
BRAIN
COMPUTER
INTERFACE
IEEE
TRANS
NEURAL
SYS
REHABIL
ENG
SENSORS
RUITING
Y
GRAY
D
A
NG
B
W
MINGYI
H
COMPARATIVE
ANALYSIS
OF
SIGNAL
PROCESSING
IN
BRAIN
COMPUTER
INTERFACE
IN
PROCEEDINGS
OF
THE
IEEE
CONFERENCE
ON
INDUSTRIAL
ELECTRONICS
AND
APPLICATIONS
ICIEA
XI
AN
CHINA
MAY
PP
LIU
G
HUANG
G
MENG
J
ZHANG
D
ZHU
X
IMPROVED
GMM
WITH
PARAMETER
INITIALIZATION
FOR
UNSUPERVISED
ADAPTATION
OF
BRAIN
COMPUTER
INTERFACE
INT
J
NUMER
METH
BIOMED
ENG
LEMM
SCHAFER
C
CURIO
G
BCI
COMPETITION
DATA
SET
III
PROBABILISTIC
MODELING
OF
SENSORIMOTOR
MU
RHYTHMS
FOR
CLASSIFICATION
OF
IMAGINARY
HAND
MOVEMENTS
IEEE
TRANS
BIOMED
ENG
PIRES
G
CASTELO
BRANCO
M
NUNES
U
VISUAL
BASED
BCI
TO
STEER
A
WHEELCHAIR
A
BAYESIAN
APPROACH
IN
PROCEEDINGS
OF
THE
ANNUAL
INTERNATIONAL
CONFERENCE
OF
THE
IEEE
ENGINEERING
IN
MEDICINE
AND
BIOLOGY
SOCIETY
EMBS
VANCOUVER
CANADA
AUGUST
PP
PALANIAPPAN
R
BRAIN
COMPUTER
INTERFACE
DESIGN
USING
BAND
POWERS
EXTRACTED
DURING
MENTAL
TASKS
IN
PROCEEDINGS
OF
THE
INTERNATIONAL
IEEE
EMBS
CONFERENCE
ON
NEURAL
ENGINEERING
NER
ARLINGTON
VA
USA
MARCH
PP
NAKAYAMAN
K
INAGAKI
K
A
BRAIN
COMPUTER
INTERFACE
BASED
ON
NEURAL
NETWORK
WITH
EFFICIENT
PRE
PROCESSING
IN
PROCEEDINGS
OF
THE
INTERNATIONAL
SYMPOSIUM
ON
INTELLIGENT
SIGNAL
PROCESSING
AND
COMMUNICATIONS
ISPACS
YONAGO
JAPAN
DECEMBER
PP
HASELSTEINER
E
PFURTSCHELLER
G
USING
TIME
DEPENDENT
NEURAL
NETWORKS
FOR
EEG
CLASSIFICATION
IEEE
TRANS
REHABIL
ENG
COYLE
D
MCGINNITY
T
M
PRASAD
G
IMPROVING
THE
SEPARABILITY
OF
MULTIPLE
EEG
FEATURES
FOR
A
BCI
BY
NEURAL
TIME
SERIES
PREDICTION
PREPROCESSING
BIOMED
SIGNAL
PROCESS
CONTROL
HAZRATI
M
K
ERFANIAN
A
AN
ONLINE
EEG
BASED
BRAIN
COMPUTER
INTERFACE
FOR
CONTROLLING
HAND
GRASP
USING
AN
ADAPTIVE
PROBABILISTIC
NEURAL
NETWORK
MED
ENG
PHYS
TING
W
GUO
ZHENG
Y
BANG
HUA
Y
HONG
EEG
FEATURE
EXTRACTION
BASED
ON
WAVELET
PACKET
DECOMPOSITION
FOR
BRAIN
COMPUTER
INTERFACE
MEASUREMENT
PALANIAPPAN
R
PARAMESRAN
R
NISHIDA
SAIWAKI
N
A
NEW
BRAIN
COMPUTER
INTERFACE
DESIGN
USING
FUZZY
ARTMAP
IEEE
TRANS
NEURAL
SYS
REHABIL
ENG
FELZER
T
FREISIEBEN
B
ANALYZING
EEG
SIGNALS
USING
THE
PROBABILITY
ESTIMATING
GUARDED
NEURAL
CLASSIFIER
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
KÜBLER
A
BIRBAUMER
N
BRAIN
COMPUTER
INTERFACES
AND
COMMUNICATION
IN
PARALYSIS
EXTINCTION
OF
GOAL
DIRECTED
THINKING
IN
COMPLETELY
PARALYSED
PATIENTS
CLIN
NEUROPHYSIOL
BETKE
M
GIPS
J
FLEMING
P
THE
CAMERA
MOUSE
VISUAL
TRACKING
OF
BODY
FEATURES
TO
PROVIDE
COMPUTER
ACCESS
FOR
PEOPLE
WITH
SEVERE
DISABILITIES
IEEE
TRANS
NEURAL
SYS
REHABIL
ENG
MILLER
L
A
STUBBLEFIELD
K
A
LIPSCHUTZ
R
D
LOCK
B
A
KUIKEN
T
A
IMPROVED
MYOELECTRIC
PROSTHESIS
CONTROL
USING
TARGETED
REINNERVATION
SURGERY
A
CASE
SERIES
IEEE
TRANS
NEURAL
SYS
REHABIL
ENG
SENSORS
TREDER
M
BLANKERTZ
B
C
OVERT
ATTENTION
AND
VISUAL
SPELLER
DESIGN
IN
AN
ERP
BASED
BRAIN
COMPUTER
INTERFACE
BEHAV
BRAIN
FUNCT
PFURTSCHELLER
G
ALLISON
B
Z
BAUERNFEIND
G
N
BRUNNER
C
SOLIS
ESCALANTE
T
SCHERER
R
ZANDER
T
O
MUELLER
PUTZ
G
NEUPER
C
BIRBAUMER
N
THE
HYBRID
BCI
FRONT
NEUROSCI
DOI
LIU
Y
ZHOU
Z
HU
D
GAZE
INDEPENDENT
BRAIN
COMPUTER
SPELLER
WITH
COVERT
VISUAL
SEARCH
TASKS
CLIN
NEUROPHYSIOL
TREDER
M
SCHMIDT
N
M
BLANKERTZ
B
GAZE
INDEPENDENT
BRAIN
COMPUTER
INTERFACES
BASED
ON
COVERT
ATTENTION
AND
FEATURE
ATTENTION
J
NEURAL
ENG
MOORE
M
M
REAL
WORLD
APPLICATIONS
FOR
BRAIN
COMPUTER
INTERFACE
TECHNOLOGY
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
BIRBAUMER
N
GHANAYIM
N
HINTERBERGER
T
IVERSEN
I
KOTCHOUBEY
B
KUBLER
A
PERELMOUTER
J
TAUB
E
FLOR
H
A
SPELLING
DEVICE
FOR
THE
PARALYSED
NATURE
CHAMBAYIL
B
SINGLA
R
JHA
R
VIRTUAL
KEYBOARD
BCI
USING
EYE
BLINKS
IN
EEG
IN
PROCEEDINGS
OF
THE
IEEE
INTERNATIONAL
CONFERENCE
ON
WIRELESS
AND
MOBILE
COMPUTING
NETWORKING
AND
COMMUNICATIONS
WIMOB
NIAGARA
FALLS
ON
CANADA
OCTOBER
PP
OBERMAIER
B
MULLER
G
R
PFURTSCHELLER
G
VIRTUAL
KEYBOARD
CONTROLLED
BY
SPONTANEOUS
EEG
ACTIVITY
IEEE
TRANS
NEURAL
SYS
REHABIL
ENG
SILVONI
VOLPATO
C
CAVINATO
M
MARCHETTI
M
PRIFTIS
K
MERICO
A
TONIN
P
KOUTSIKOS
K
BEVERINA
F
PICCIONE
F
BASED
BRAIN
COMPUTER
INTERFACE
COMMUNICATION
EVALUATION
AND
FOLLOW
UP
IN
AMYOTROPHIC
LATERAL
SCLEROSIS
FRONT
NEUROSCI
INTENDIX
AVAILABLE
ONLINE
HTTP
WWW
INTENDIX
COM
ACCESSED
ON
JULY
FAZEL
REZAI
R
ABHARI
K
A
REGION
BASED
SPELLER
FOR
BRAIN
COMPUTER
INTERFACE
CAN
J
ELECT
COMPUT
E
AHI
T
KAMBARA
H
KOIKE
Y
A
DICTIONARY
DRIVEN
SPELLER
WITH
A
MODIFIED
INTERFACE
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
HALDER
REA
M
ANDREONI
R
NIJBOER
F
HAMMER
E
M
KLEIH
C
BIRBAUMER
N
KÜBLER
A
AN
AUDITORY
ODDBALL
BRAIN
COMPUTER
INTERFACE
FOR
BINARY
CHOICES
CLIN
NEUROPHYSIOL
KLOBASSA
D
VAUGHAN
T
M
BRUNNER
P
SCHWARTZ
N
E
WOLPAW
J
R
NEUPER
C
SELLERS
E
W
TOWARD
A
HIGH
THROUGHPUT
AUDITORY
BASED
BRAIN
COMPUTER
INTERFACE
CLIN
NEUROPHYSIOL
KÜBLER
A
FURDEA
A
HALDER
HAMMER
E
M
NIJBOER
F
KOTCHOUBEY
B
A
BRAIN
COMPUTER
INTERFACE
CONTROLLED
AUDITORY
EVENT
RELATED
POTENTIAL
SPELLING
SYSTEM
FOR
LOCKED
IN
PATIENTS
ANN
N
Y
ACAD
SCI
KARIM
A
A
HINTERBERGER
T
RICHTER
J
MELLINGER
J
NEUMANN
N
FLOR
H
KÜBLER
A
BIRBAUMER
N
NEURAL
INTERNET
WEB
SURFING
WITH
BRAIN
POTENTIALS
FOR
THE
COMPLETELY
PARALYZED
NEUROREHABIL
NEURAL
REPAIR
BENSCH
M
KARIM
A
A
MELLINGER
J
HINTERBERGER
T
TANGERMANN
M
BOGDAN
M
ROSENSTIEL
W
BIRBAUMER
N
NESSI
AN
EEG
CONTROLLED
WEB
BROWSER
FOR
SEVERELY
PARALYZED
PATIENTS
COMPUT
INTELL
NEUROSCI
SENSORS
BRAZ
G
P
RUSSOLD
M
DAVIS
G
M
FUNCTIONAL
ELECTRICAL
STIMULATION
CONTROL
OF
STANDING
AND
STEPPING
AFTER
SPINAL
CORD
INJURY
A
REVIEW
OF
TECHNICAL
CHARACTERISTICS
NEUROMODULATION
TECHNOL
NEURAL
INTERFACE
LAUER
R
T
PECKHAM
P
H
KILGORE
K
L
EEG
BASED
CONTROL
OF
A
HAND
GRASP
NEUROPROSTHESIS
NEUROREPORT
PFURTSCHELLER
G
MÜLLER
G
R
PFURTSCHELLER
J
GERNER
H
J
RUPP
R
THOUGHT
CONTROL
OF
FUNCTIONAL
ELECTRICAL
STIMULATION
TO
RESTORE
HAND
GRASP
IN
A
PATIENT
WITH
TETRAPLEGIA
NEUROSCI
LETT
HU
X
L
TONG
K
Y
LI
R
CHEN
M
XUE
J
J
HO
K
CHEN
P
N
POST
STROKE
WRIST
REHABILITATION
ASSISTED
WITH
AN
INTENTION
DRIVEN
FUNCTIONAL
ELECTRICAL
STIMULATION
FES
ROBOT
SYSTEM
IN
PROCEEDINGS
OF
THE
IEEE
INTERNATIONAL
CONFERENCE
ON
REHABILITATION
ROBOTICS
ICORR
ZURICH
SWITZERLAND
JULY
PP
PFURTSCHELLER
G
GUGER
C
MÜLLER
G
KRAUSZ
G
NEUPER
C
BRAIN
OSCILLATIONS
CONTROL
HAND
ORTHOSIS
IN
A
TETRAPLEGIC
NEUROSCI
LETT
MÜLLER
PUTZ
G
R
SCHERER
R
PFURTSCHELLER
G
RUPP
R
EEG
BASED
NEUROPROSTHESIS
CONTROL
A
STEP
TOWARDS
CLINICAL
PRACTICE
NEUROSCI
LETT
BUCH
E
WEBER
C
COHEN
L
G
BRAUN
C
DIMYAN
M
A
ARD
T
MELLINGER
J
CARIA
A
SOEKADAR
FOURKAS
A
BIRBAUMER
N
THINK
TO
MOVE
A
NEUROMAGNETIC
BRAIN
COMPUTER
INTERFACE
BCI
SYSTEM
FOR
CHRONIC
STROKE
STROKE
BRAUN
C
SCHWEIZER
R
ELBERT
T
BIRBAUMER
N
TAUB
E
DIFFERENTIAL
ACTIVATION
IN
SOMATOSENSORY
CORTEX
FOR
DIFFERENT
DISCRIMINATION
TASKS
J
NEUROSCI
BROETZ
D
BRAUN
C
WEBER
C
SOEKADAR
R
CARIA
A
BIRBAUMER
N
COMBINATION
OF
BRAIN
COMPUTER
INTERFACE
TRAINING
AND
GOAL
DIRECTED
PHYSICAL
THERAPY
IN
CHRONIC
STROKE
A
CASE
REPORT
NEUROREHABIL
NEURAL
REPAIR
CARIA
A
WEBER
C
BRÖTZ
D
RAMOS
A
TICINI
L
F
GHARABAGHI
A
BRAUN
C
BIRBAUMER
N
CHRONIC
STROKE
RECOVERY
AFTER
COMBINED
BCI
TRAINING
AND
PHYSIOTHERAPY
A
CASE
REPORT
PSYCHOPHYSIOLOGY
HOCHBERG
L
R
SERRUYA
M
D
FRIEHS
G
M
MUKAND
J
A
SALEH
M
CAPLAN
A
H
BRANNER
A
CHEN
D
PENN
R
D
DONOGHUE
J
P
NEURONAL
ENSEMBLE
CONTROL
OF
PROSTHETIC
DEVICES
BY
A
HUMAN
WITH
TETRAPLEGIA
NATURE
SERRUYA
M
D
HATSOPOULOS
N
G
PANINSKI
L
FELLOWS
M
R
DONOGHUE
J
P
BRAIN
MACHINE
INTERFACE
INSTANT
NEURAL
CONTROL
OF
A
MOVEMENT
SIGNAL
NATURE
MILLAN
J
R
RENKENS
F
MOURINO
J
GERSTNER
W
NONINVASIVE
BRAIN
ACTUATED
CONTROL
OF
A
MOBILE
ROBOT
BY
HUMAN
EEG
IEEE
TRANS
BIOMED
ENG
REBSAMEN
B
BURDET
E
CUNTAI
G
CHEE
LEONG
T
QIANG
Z
ANG
M
LAUGIER
C
CONTROLLING
A
WHEELCHAIR
USING
A
BCI
WITH
LOW
INFORMATION
TRANSFER
RATE
IN
PROCEEDINGS
OF
THE
IEEE
INTERNATIONAL
CONFERENCE
ON
REHABILITATION
ROBOTICS
ICORR
NOORDWIJK
THE
NETHERLANDS
JUNE
PP
REBSAMEN
B
CUNTAI
G
HAIHONG
Z
CHUANCHU
W
CHEELEONG
T
ANG
M
H
BURDET
E
A
BRAIN
CONTROLLED
WHEELCHAIR
TO
NAVIGATE
IN
FAMILIAR
ENVIRONMENTS
IEEE
TRANS
NEURAL
SYST
REHABIL
ENG
SENSORS
ITURRATE
I
ANTELIS
J
M
KUBLER
A
MINGUEZ
J
A
NONINVASIVE
BRAIN
ACTUATED
WHEELCHAIR
BASED
ON
A
NEUROPHYSIOLOGICAL
PROTOCOL
AND
AUTOMATED
NAVIGATION
IEEE
TRANS
ROBOT
PHILIPS
J
DEL
R
MILLAN
J
VANACKER
G
LEW
E
GALAN
F
FERREZ
P
W
VAN
BRUSSEL
H
NUTTIN
M
ADAPTIVE
SHARED
CONTROL
OF
A
BRAIN
ACTUATED
SIMULATED
WHEELCHAIR
IN
PROCEEDINGS
OF
THE
IEEE
INTERNATIONAL
CONFERENCE
ON
REHABILITATION
ROBOTICS
ICORR
NOORDWIJK
THE
NETHERLANDS
JUNE
PP
VANACKER
G
DEL
R
MILLÁN
J
LEW
E
CONTEXT
BASED
FILTERING
FOR
ASSISTED
BRAIN
ACTUATED
WHEELCHAIR
DRIVING
COMPUT
INTELL
NEUROSCI
FUN
OF
GAMING
MEASURING
THE
HUMAN
EXPERIENCE
OF
MEDIA
ENJOYMENT
AVAILABLE
ONLINE
HTTP
FUGA
AALTO
FI
ACCESSED
ON
JULY
ROMAN
K
BENJAMIN
B
GABRIEL
C
KLAUS
ROBERT
M
THE
BERLIN
BRAIN
COMPUTER
INTERFACE
BBCI
TOWARDS
A
NEW
COMMUNICATION
CHANNEL
FOR
ONLINE
CONTROL
IN
GAMING
APPLICATIONS
MULTIMED
TOOLS
APPL
TANGERMANN
M
KRAULEDAT
M
GRZESKA
K
SAGEBAUM
M
BLANKERTZ
B
VIDAURRE
C
MÜLLER
K
PLAYING
PINBALL
WITH
NON
INVASIVE
BCI
PROC
NIPS
MIDDENDORF
M
MCMILLAN
G
CALHOUN
G
JONES
K
BRAIN
COMPUTER
INTERFACES
BASED
ON
THE
STEADY
STATE
VISUAL
EVOKED
RESPONSE
IEEE
TRANS
REHABIL
ENG
LALOR
E
C
KELLY
P
FINUCANE
C
STEADY
STATE
VEP
BASED
BRAIN
COMPUTER
INTERFACE
CONTROL
IN
AN
IMMERSIVE
GAMING
ENVIRONMENT
J
APPL
SIGNAL
PROC
FINKE
A
LENHARDT
A
RITTER
H
THE
MINDGAME
A
BASED
BRAIN
COMPUTER
INTERFACE
GAME
NEURAL
NETW
MICROSOFT
RESEARCH
COMPUTATIONAL
USER
EXPERIENCES
BRAIN
COMPUTER
INTERFACES
AVAILABLE
ONLINE
HTTP
RESEARCH
MICROSOFT
COM
EN
US
UM
REDMOND
GROUPS
CUE
BCI
ACCESSED
ON
JULY
ANGELAKIS
E
STATHOPOULOU
FRYMIARE
J
GREEN
D
LUBAR
J
KOUNIOS
J
EEG
NEUROFEEDBACK
A
BRIEF
OVERVIEW
AND
AN
EXAMPLE
OF
PEAK
ALPHA
FREQUENCY
TRAINING
FOR
COGNITIVE
ENHANCEMENT
IN
THE
ELDERLY
CLIN
NEUROPSYCHOL
HANSLMAYR
SAUSENG
P
DOPPELMAYR
M
SCHABUS
M
KLIMESCH
W
INCREASING
INDIVIDUAL
UPPER
ALPHA
POWER
BY
NEUROFEEDBACK
IMPROVES
COGNITIVE
PERFORMANCE
IN
HUMAN
SUBJECTS
APPL
PSYCHOPHYSIOL
BIOFEEDBACK
ROTA
G
SITARAM
R
VEIT
R
ERB
M
WEISKOPF
N
DOGIL
G
BIRBAUMER
N
SELF
REGULATION
OF
REGIONAL
CORTICAL
ACTIVITY
USING
REAL
TIME
FMRI
THE
RIGHT
INFERIOR
FRONTAL
GYRUS
AND
LINGUISTIC
PROCESSING
HUM
BRAIN
MAPP
SITARAM
R
LEE
RUIZ
RANA
M
VEIT
R
BIRBAUMER
N
REAL
TIME
SUPPORT
VECTOR
CLASSIFICATION
AND
FEEDBACK
OF
MULTIPLE
EMOTIONAL
BRAIN
STATES
NEUROIMAGE
DECHARMS
R
C
MAEDA
F
GLOVER
G
H
LUDLOW
D
PAULY
J
M
SONEJI
D
GABRIELI
J
D
E
MACKEY
C
CONTROL
OVER
BRAIN
ACTIVATION
AND
PAIN
LEARNED
BY
USING
REAL
TIME
FUNCTIONAL
MRI
PROC
NATL
ACAD
SCI
USA
WALKER
J
E
KOZLOWSKI
G
P
NEUROFEEDBACK
TREATMENT
OF
EPILEPSY
CHILD
ADOLESC
PSYCHIATR
CLIN
N
AM
SENSORS
STERMAN
M
EGNER
T
FOUNDATION
AND
PRACTICE
OF
NEUROFEEDBACK
FOR
THE
TREATMENT
OF
EPILEPSY
APPL
PSYCHOPHYSIOL
BIOFEEDBACK
STREHL
U
LEINS
U
GOTH
G
KLINGER
C
HINTERBERGER
T
BIRBAUMER
N
SELF
REGULATION
OF
SLOW
CORTICAL
POTENTIALS
A
NEW
TREATMENT
FOR
CHILDREN
WITH
ATTENTION
DEFICIT
HYPERACTIVITY
DISORDER
PEDIATRICS
SCHNEIDER
F
ROCKSTROH
B
HEIMANN
H
LUTZENBERGER
W
MATTES
R
ELBERT
T
BIRBAUMER
N
BARTELS
M
SELF
REGULATION
OF
SLOW
CORTICAL
POTENTIALS
IN
PSYCHIATRIC
PATIENTS
SCHIZOPHRENIA
APPL
PSYCHOPHYSIOL
BIOFEEDBACK
SCHNEIDER
F
HEIMANN
H
MATTES
R
LUTZENBERGER
W
BIRBAUMER
N
SELF
REGULATION
OF
SLOW
CORTICAL
POTENTIALS
IN
PSYCHIATRIC
PATIENTS
DEPRESSION
APPL
PSYCHOPHYSIOL
BIOFEEDBACK
SCHNEIDER
F
ELBERT
T
HEIMANN
H
WELKER
A
STETTER
F
MATTES
R
BIRBAUMER
N
MANN
K
SELF
REGULATION
OF
SLOW
CORTICAL
POTENTIALS
IN
PSYCHIATRIC
PATIENTS
ALCOHOL
DEPENDENCY
APPL
PSYCHOPHYSIOL
BIOFEEDBACK
RENAUD
P
JOYAL
C
STOLERU
GOYETTE
M
WEISKOPF
N
BIRBAUMER
N
REAL
TIME
FUNCTIONAL
MAGNETIC
IMAGING
BRAIN
COMPUTER
INTERFACE
AND
VIRTUAL
REALITY
PROMISING
TOOLS
FOR
THE
TREATMENT
OF
PEDOPHILIA
IN
PROGRESS
IN
BRAIN
RESEARCH
GREEN
A
M
CHAPMAN
C
E
KALASKA
J
F
LEPORE
F
EDS
ELSEVIER
NEW
YORK
NY
USA
VOLUME
PP
GEORGOPOULOS
A
P
KARAGEORGIOU
E
LEUTHOLD
A
C
LEWIS
M
LYNCH
J
K
ALONSO
A
A
ASLAM
Z
CARPENTER
A
F
GEORGOPOULOS
A
HEMMY
L
ET
AL
SYNCHRONOUS
NEURAL
INTERACTIONS
ASSESSED
BY
MAGNETOENCEPHALOGRAPHY
A
FUNCTIONAL
BIOMARKER
FOR
BRAIN
DISORDERS
J
NEURAL
ENG
DOI
COOK
I
A
WARREN
C
PAJOT
K
SCHAIRER
D
LEUCHTER
A
F
REGIONAL
BRAIN
ACTIVATION
WITH
ADVERTISING
IMAGES
J
NEUROSCI
PSYCHOL
ECON
AMBLER
T
IOANNIDES
A
ROSE
BRANDS
ON
THE
BRAIN
NEURO
IMAGES
OF
ADVERTISING
BUS
STRATEG
REV
VECCHIATO
G
DE
VICO
FALLANI
F
ASTOLFI
L
TOPPI
J
CINCOTTI
F
MATTIA
D
SALINARI
BABILONI
F
THE
ISSUE
OF
MULTIPLE
UNIVARIATE
COMPARISONS
IN
THE
CONTEXT
OF
NEUROELECTRIC
BRAIN
MAPPING
AN
APPLICATION
IN
A
NEUROMARKETING
EXPERIMENT
J
NEUROSCI
METHODS
AMBLER
T
BRAEUTIGAM
STINS
J
ROSE
SWITHENBY
SALIENCE
AND
CHOICE
NEURAL
CORRELATES
OF
SHOPPING
DECISIONS
PSYCHOL
MARKET
ARIELY
D
BERNS
G
NEUROMARKETING
THE
HOPE
AND
HYPE
OF
NEUROIMAGING
IN
BUSINESS
NAT
REV
NEUROSCI
NEUROMARKETING
NEUROSCIENTIFIC
CONSUMER
TESTING
NEUROFOCUS
AVAILABLE
ONLINE
HTTP
WWW
NEUROFOCUS
COM
ACCESSED
ON
DECEMBER
NEUROCONSULT
AVAILABLE
ONLINE
HTTP
WWW
NEUROCONSULT
AT
ACCESSED
ON
OCTOBER
NEURO
INSIGHT
AVAILABLE
ONLINE
HTTP
WWW
NEURO
INSIGHT
COM
ACCESSED
ON
OCTOBER
EMSENSE
QUANTITATIVE
BIOSENSORY
METRICS
AVAILABLE
ONLINE
HTTP
WWW
EMSENSE
COM
ACCESSED
ON
OCTOBER
RIGHT
NOW
WE
WORK
WITH
ONLINE
INFORMATION
USING
TWO
MAIN
TOOLS
SEARCH
AND
LINKS
WE
TYPE
KEYWORDS
INTO
A
SEARCH
ENGINE
AND
FIND
A
SET
OF
DOCUMENTS
RELATED
TO
THEM
WE
LOOK
AT
THE
DOCUMENTS
IN
THAT
SET
POSSIBLY
NAVIGATING
TO
OTHER
LINKED
DOCUMENTS
THIS
IS
A
POWERFUL
WAY
OF
INTERACTING
WITH
OUR
ONLINE
ARCHIVE
BUT
SOMETHING
IS
MISSING
IMAGINE
SEARCHING
AND
EXPLORING
DOCUMENTS
BASED
ON
THE
THEMES
THAT
RUN
THROUGH
THEM
WE
MIGHT
ZOOM
IN
AND
ZOOM
OUT
TO
FIND
SPECIFIC
OR
BROADER
THEMES
WE
MIGHT
LOOK
AT
HOW
THOSE
THEMES
CHANGED
THROUGH
TIME
OR
HOW
THEY
ARE
CONNECTED
TO
EACH
OTHER
RATHER
THAN
FINDING
DOCUMENTS
THROUGH
KEYWORD
SEARCH
ALONE
WE
MIGHT
FIRST
FIND
THE
THEME
THAT
WE
ARE
INTERESTED
IN
AND
THEN
EXAMINE
THE
DOCUMENTS
RELATED
TO
THAT
THEME
FOR
EXAMPLE
CONSIDER
USING
THEMES
TO
EXPLORE
THE
COMPLETE
HISTORY
OF
THE
NEW
YORK
TIMES
AT
A
BROAD
LEVEL
SOME
OF
THE
THEMES
MIGHT
CORRESPOND
TO
THE
SECTIONS
OF
THE
NEWSPAPER
FOREIGN
POLICY
NATIONAL
AFFAIRS
SPORTS
WE
COULD
ZOOM
IN
ON
A
THEME
OF
INTEREST
SUCH
AS
FOREIGN
POLICY
TO
REVEAL
VARIOUS
ASPECTS
OF
IT
CHINESE
FOREIGN
POLICY
THE
CONFLICT
IN
THE
MIDDLE
EAST
THE
U
RELATIONSHIP
WITH
RUSSIA
WE
COULD
THEN
NAVIGATE
THROUGH
TIME
TO
REVEAL
HOW
THESE
SPECIFIC
THEMES
HAVE
CHANGED
TRACKING
FOR
EXAMPLE
THE
CHANGES
IN
THE
CONFLICT
IN
THE
MIDDLE
EAST
OVER
THE
LAST
YEARS
AND
IN
ALL
OF
THIS
EXPLORATION
WE
WOULD
BE
POINTED
TO
THE
ORIGINAL
ARTICLES
RELEVANT
TO
THE
THEMES
THE
THEMATIC
STRUCTURE
WOULD
BE
A
NEW
KIND
OF
WINDOW
THROUGH
WHICH
TO
EXPLORE
AND
DIGEST
THE
COLLECTION
BUT
WE
DO
NOT
INTERACT
WITH
ELECTRONIC
ARCHIVES
IN
THIS
WAY
WHILE
MORE
AND
MORE
TEXTS
ARE
AVAILABLE
ONLINE
WE
SIMPLY
DO
NOT
HAVE
THE
HUMAN
POWER
TO
READ
AND
STUDY
THEM
TO
PROVIDE
THE
KIND
OF
BROWSING
EXPERIENCE
DESCRIBED
ABOVE
TO
THIS
END
MACHINE
LEARNING
RESEARCHERS
HAVE
DEVELOPED
PROBABILISTIC
TOPIC
MODELING
A
SUITE
OF
ALGORITHMS
THAT
AIM
TO
DISCOVER
AND
ANNOTATE
LARGE
ARCHIVES
OF
DOCUMENTS
WITH
THEMATIC
INFORMATION
TOPIC
MODELING
ALGORITHMS
ARE
STATISTICAL
METHODS
THAT
ANALYZE
THE
WORDS
OF
THE
ORIGINAL
TEXTS
TO
DISCOVER
THE
THEMES
THAT
RUN
THROUGH
THEM
HOW
THOSE
THEMES
ARE
CONNECTED
TO
EACH
OTHER
AND
HOW
THEY
CHANGE
OVER
TIME
SEE
FOR
EXAMPLE
FIGURE
FOR
TOPICS
FOUND
BY
ANALYZING
THE
YALE
LAW
JOURNAL
TOPIC
MODELING
ALGORITHMS
DO
NOT
REQUIRE
ANY
PRIOR
ANNOTATIONS
OR
LABELING
OF
THE
DOCUMENTS
THE
TOPICS
EMERGE
FROM
THE
ANALYSIS
OF
THE
ORIGINAL
TEXTS
TOPIC
MODELING
ENABLES
US
TO
ORGANIZE
AND
SUMMARIZE
ELECTRONIC
ARCHIVES
AT
A
SCALE
THAT
WOULD
BE
IMPOSSIBLE
BY
HUMAN
ANNOTATION
LATENT
DIRICHLET
ALLOCATION
WE
FIRST
DESCRIBE
THE
BASIC
IDEAS
BEHIND
LATENT
DIRICHLET
ALLOCATION
LDA
WHICH
IS
THE
SIMPLEST
TOPIC
MODEL
THE
INTUITION
BEHIND
LDA
IS
THAT
DOCUMENTS
EXHIBIT
MULTIPLE
TOPICS
FOR
EXAMPLE
CONSIDER
THE
ARTICLE
IN
FIGURE
THIS
ARTICLE
ENTITLED
SEEKING
LIFE
BARE
GENETIC
NECESSITIES
IS
ABOUT
USING
DATA
ANALYSIS
TO
DETERMINE
THE
NUMBER
OF
GENES
AN
ORGANISM
NEEDS
TO
SURVIVE
IN
AN
EVOLUTIONARY
SENSE
BY
HAND
WE
HAVE
HIGHLIGHTED
DIFFERENT
WORDS
THAT
ARE
USED
IN
THE
ARTICLE
WORDS
ABOUT
DATA
ANALYSIS
SUCH
AS
COMPUTER
AND
PREDICTION
ARE
HIGHLIGHTED
IN
BLUE
WORDS
ABOUT
EVOLUTIONARY
BIOLOGY
SUCH
AS
LIFE
AND
ORGANISM
ARE
HIGHLIGHTED
IN
PINK
WORDS
ABOUT
GENETICS
SUCH
AS
SEQUENCED
AND
GENES
ARE
HIGHLIGHTED
IN
YELLOW
IF
WE
TOOK
THE
TIME
TO
HIGHLIGHT
EVERY
WORD
IN
THE
ARTICLE
YOU
WOULD
SEE
THAT
THIS
ARTICLE
BLENDS
GENETICS
DATA
ANALYSIS
AND
EVOLUTIONARY
BIOLOGY
IN
DIFFERENT
PROPORTIONS
WE
EXCLUDE
WORDS
SUCH
AS
AND
BUT
OR
IF
WHICH
CONTAIN
LITTLE
TOPICAL
CONTENT
FURTHERMORE
KNOWING
THAT
THIS
ARTICLE
BLENDS
THOSE
TOPICS
WOULD
HELP
YOU
SITUATE
IT
IN
A
COLLECTION
OF
SCIENTIFIC
ARTICLES
LDA
IS
A
STATISTICAL
MODEL
OF
DOCUMENT
COLLECTIONS
THAT
TRIES
TO
CAPTURE
THIS
INTUITION
IT
IS
MOST
EASILY
DESCRIBED
BY
ITS
GENERATIVE
PROCESS
THE
IMAGINARY
RANDOM
PROCESS
BY
WHICH
THE
MODEL
ASSUMES
THE
DOCUMENTS
AROSE
THE
INTERPRETATION
OF
LDA
AS
A
PROBABILISTIC
MODEL
IS
FLESHED
OUT
LATER
WE
FORMALLY
DEFINE
A
TOPIC
TO
BE
A
DISTRIBUTION
OVER
A
FIXED
VOCABULARY
FOR
EXAMPLE
THE
GENETICS
TOPIC
HAS
WORDS
ABOUT
GENETICS
WITH
HIGH
PROBABILITY
AND
THE
EVOLUTIONARY
BIOLOGY
TOPIC
HAS
WORDS
ABOUT
EVOLUTIONARY
BIOLOGY
WITH
HIGH
PROBABILITY
WE
ASSUME
THAT
THESE
TOPICS
ARE
SPECIFIED
BEFORE
ANY
DATA
HAS
BEEN
GENERATED
A
NOW
FOR
EACH
DOCUMENT
IN
THE
COLLECTION
WE
GENERATE
THE
WORDS
IN
A
TWO
STAGE
PROCESS
RANDOMLY
CHOOSE
A
DISTRIBUTION
OVER
TOPICS
FOR
EACH
WORD
IN
THE
DOCUMENT
RANDOMLY
CHOOSE
A
TOPIC
FROM
THE
DISTRIBUTION
OVER
TOPICS
IN
STEP
RANDOMLY
CHOOSE
A
WORD
FROM
THE
CORRESPONDING
DISTRIBUTION
OVER
THE
VOCABULARY
THIS
STATISTICAL
MODEL
REFLECTS
THE
INTUITION
THAT
DOCUMENTS
EXHIBIT
MULTIPLE
TOPICS
EACH
DOCUMENT
EXHIBITS
THE
TOPICS
IN
DIFFERENT
PROPORTION
STEP
EACH
WORD
IN
EACH
DOCUMENT
IS
DRAWN
FROM
ONE
OF
THE
TOPICS
STEP
WHERE
THE
SELECTED
TOPIC
IS
CHOSEN
FROM
THE
PER
DOCUMENT
DISTRIBUTION
OVER
TOPICS
STEP
B
IN
THE
EXAMPLE
ARTICLE
THE
DISTRIBUTION
OVER
TOPICS
WOULD
PLACE
PROBABILITY
ON
GENETICS
DATA
ANALYSIS
AND
EVOLUTIONARY
BIOLOGY
AND
EACH
WORD
IS
DRAWN
FROM
ONE
OF
THOSE
THREE
TOPICS
NOTICE
THAT
THE
NEXT
ARTICLE
IN
THE
COLLECTION
MIGHT
BE
ABOUT
DATA
ANALYSIS
AND
NEUROSCIENCE
ITS
DISTRIBUTION
OVER
TOPICS
WOULD
PLACE
PROBABILITY
ON
THOSE
TWO
TOPICS
THIS
IS
THE
DISTINGUISHING
CHARACTERISTIC
OF
LATENT
DIRICHLET
ALLOCATION
ALL
THE
DOCUMENTS
IN
THE
COLLECTION
SHARE
THE
SAME
SET
OF
TOPICS
BUT
EACH
DOCUMENT
EXHIBITS
THOSE
TOPICS
IN
DIFFERENT
PROPORTION
AS
WE
DESCRIBED
IN
THE
INTRODUCTION
THE
GOAL
OF
TOPIC
MODELING
IS
TO
AUTOMATICALLY
DISCOVER
THE
TOPICS
FROM
A
COLLECTION
OF
DOCUMENTS
THE
DOCUMENTS
THEMSELVES
ARE
OBSERVED
WHILE
THE
TOPIC
STRUCTURE
THE
TOPICS
PER
DOCUMENT
TOPIC
DISTRIBUTIONS
AND
THE
PER
DOCUMENT
PER
WORD
TOPIC
ASSIGNMENTS
IS
HIDDEN
STRUCTURE
THE
CENTRAL
COMPUTATIONAL
PROBLEM
FOR
TOPIC
MODELING
IS
TO
USE
THE
OBSERVED
DOCUMENTS
TO
INFER
THE
HIDDEN
TOPIC
STRUCTURE
THIS
CAN
BE
THOUGHT
OF
AS
REVERSING
THE
GENERATIVE
PROCESS
WHAT
IS
THE
HIDDEN
STRUCTURE
THAT
LIKELY
GENERATED
THE
OBSERVED
COLLECTION
FIGURE
ILLUSTRATES
EXAMPLE
INFERENCE
USING
THE
SAME
EXAMPLE
DOCUMENT
FROM
FIGURE
HERE
WE
TOOK
ARTICLES
FROM
SCIENCE
MAGAZINE
AND
USED
A
TOPIC
MODELING
ALGORITHM
TO
INFER
THE
HIDDEN
TOPIC
STRUCTURE
THE
ALGORITHM
ASSUMED
THAT
THERE
WERE
TOPICS
WE
THEN
COMPUTED
THE
INFERRED
TOPIC
DISTRIBUTION
FOR
THE
EXAMPLE
ARTICLE
FIGURE
LEFT
THE
DISTRIBUTION
OVER
TOPICS
THAT
BEST
DESCRIBES
ITS
PARTICULAR
COLLECTION
OF
WORDS
NOTICE
THAT
THIS
TOPIC
DISTRIBUTION
THOUGH
IT
CAN
USE
ANY
OF
THE
TOPICS
HAS
ONLY
ACTIVATED
A
HANDFUL
OF
THEM
FURTHER
WE
CAN
EXAMINE
THE
MOST
PROBABLE
TERMS
FROM
EACH
OF
THE
MOST
PROBABLE
TOPICS
FIGURE
RIGHT
ON
EXAMINATION
WE
SEE
THAT
THESE
TERMS
ARE
RECOGNIZABLE
AS
TERMS
ABOUT
GENETICS
SURVIVAL
AND
DATA
ANALYSIS
THE
TOPICS
THAT
ARE
COMBINED
IN
THE
EXAMPLE
ARTICLE
WE
EMPHASIZE
THAT
THE
ALGORITHMS
HAVE
NO
INFORMATION
ABOUT
THESE
SUBJECTS
AND
THE
ARTICLES
ARE
NOT
LABELED
WITH
TOPICS
OR
KEYWORDS
THE
INTERPRETABLE
TOPIC
DISTRIBUTIONS
ARISE
BY
COMPUTING
THE
HIDDEN
STRUCTURE
THAT
LIKELY
GENERATED
THE
OBSERVED
COLLECTION
OF
DOCUMENTS
C
FOR
EXAMPLE
FIGURE
ILLUSTRATES
TOPICS
DISCOVERED
FROM
YALE
LAW
JOURNAL
HERE
THE
NUMBER
OF
TOPICS
WAS
SET
TO
BE
TOPICS
ABOUT
SUBJECTS
LIKE
GENETICS
AND
DATA
ANALYSIS
ARE
REPLACED
BY
TOPICS
ABOUT
DISCRIMINATION
AND
CONTRACT
LAW
THE
UTILITY
OF
TOPIC
MODELS
STEMS
FROM
THE
PROPERTY
THAT
THE
INFERRED
HIDDEN
STRUCTURE
RESEMBLES
THE
THEMATIC
STRUCTURE
OF
THE
COLLECTION
THIS
INTERPRETABLE
HIDDEN
STRUCTURE
ANNOTATES
EACH
DOCUMENT
IN
THE
COLLECTION
A
TASK
THAT
IS
PAINSTAKING
TO
PERFORM
BY
HAND
AND
THESE
ANNOTATIONS
CAN
BE
USED
TO
AID
TASKS
LIKE
INFORMATION
RETRIEVAL
CLASSIFICATION
AND
CORPUS
EXPLORATION
D
IN
THIS
WAY
TOPIC
MODELING
PROVIDES
AN
ALGORITHMIC
SOLUTION
TO
MANAGING
ORGANIZING
AND
ANNOTATING
LARGE
ARCHIVES
OF
TEXTS
LDA
AND
PROBABILISTIC
MODELS
LDA
AND
OTHER
TOPIC
MODELS
ARE
PART
OF
THE
LARGER
FIELD
OF
PROBABILISTIC
MODELING
IN
GENERATIVE
PROBABILISTIC
MODELING
WE
TREAT
OUR
DATA
AS
ARISING
FROM
A
GENERATIVE
PROCESS
THAT
INCLUDES
HIDDEN
VARIABLES
THIS
GENERATIVE
PROCESS
DEFINES
A
JOINT
PROBABILITY
DISTRIBUTION
OVER
BOTH
THE
OBSERVED
AND
HIDDEN
RANDOM
VARIABLES
WE
PERFORM
DATA
ANALYSIS
BY
USING
THAT
JOINT
DISTRIBUTION
TO
COMPUTE
THE
CONDITIONAL
DISTRIBUTION
OF
THE
HIDDEN
VARIABLES
GIVEN
THE
OBSERVED
VARIABLES
THIS
CONDITIONAL
DISTRIBUTION
IS
ALSO
CALLED
THE
POSTERIOR
DISTRIBUTION
LDA
FALLS
PRECISELY
INTO
THIS
FRAMEWORK
THE
OBSERVED
VARIABLES
ARE
THE
WORDS
OF
THE
DOCUMENTS
THE
HIDDEN
VARIABLES
ARE
THE
TOPIC
STRUCTURE
AND
THE
GENERATIVE
PROCESS
IS
AS
DESCRIBED
HERE
THE
COMPUTATIONAL
PROBLEM
OF
INFERRING
THE
HIDDEN
TOPIC
STRUCTURE
FROM
THE
DOCUMENTS
IS
THE
PROBLEM
OF
COMPUTING
THE
POSTERIOR
DISTRIBUTION
THE
CONDITIONAL
DISTRIBUTION
OF
THE
HIDDEN
VARIABLES
GIVEN
THE
DOCUMENTS
WE
CAN
DESCRIBE
LDA
MORE
FORMALLY
WITH
THE
FOLLOWING
NOTATION
THE
TOPICS
ARE
K
WHERE
EACH
ΒK
IS
A
DISTRIBUTION
OVER
THE
VOCABULARY
THE
DISTRIBUTIONS
OVER
WORDS
AT
LEFT
IN
FIGURE
THE
TOPIC
PROPORTIONS
FOR
THE
DTH
DOCUMENT
ARE
ΘD
WHERE
ΘD
K
IS
THE
TOPIC
PROPORTION
FOR
TOPIC
K
IN
DOCUMENT
D
THE
CARTOON
HISTOGRAM
IN
FIGURE
THE
TOPIC
ASSIGNMENTS
FOR
THE
DTH
DOCUMENT
ARE
ZD
WHERE
ZD
N
IS
THE
TOPIC
ASSIGNMENT
FOR
THE
NTH
WORD
IN
DOCUMENT
D
THE
COLORED
COIN
IN
FIGURE
FINALLY
THE
OBSERVED
WORDS
FOR
DOCUMENT
D
ARE
WD
WHERE
WD
N
IS
THE
NTH
WORD
IN
DOCUMENT
D
WHICH
IS
AN
ELEMENT
FROM
THE
FIXED
VOCABULARY
NOTICE
THAT
THIS
DISTRIBUTION
SPECIFIES
A
NUMBER
OF
DEPENDENCIES
FOR
EXAMPLE
THE
TOPIC
ASSIGNMENT
ZD
N
DEPENDS
ON
THE
PER
DOCUMENT
TOPIC
PROPORTIONS
ΘD
AS
ANOTHER
EXAMPLE
THE
OBSERVED
WORD
WD
N
DEPENDS
ON
THE
TOPIC
ASSIGNMENT
ZD
N
AND
ALL
OF
THE
TOPICS
K
OPERATIONALLY
THAT
TERM
IS
DEFINED
BY
LOOKING
UP
AS
TO
WHICH
TOPIC
ZD
N
REFERS
TO
AND
LOOKING
UP
THE
PROBABILITY
OF
THE
WORD
WD
N
WITHIN
THAT
TOPIC
THESE
DEPENDENCIES
DEFINE
LDA
THEY
ARE
ENCODED
IN
THE
STATISTICAL
ASSUMPTIONS
BEHIND
THE
GENERATIVE
PROCESS
IN
THE
PARTICULAR
MATHEMATICAL
FORM
OF
THE
JOINT
DISTRIBUTION
AND
IN
A
THIRD
WAY
IN
THE
PROBABILISTIC
GRAPHICAL
MODEL
FOR
LDA
PROBABILISTIC
GRAPHICAL
MODELS
PROVIDE
A
GRAPHICAL
LANGUAGE
FOR
DESCRIBING
FAMILIES
OF
PROBABILITY
DISTRIBUTIONS
E
THE
GRAPHICAL
MODEL
FOR
LDA
IS
IN
FIGURE
THESE
THREE
REPRESENTATIONS
ARE
EQUIVALENT
WAYS
OF
DESCRIBING
THE
PROBABILISTIC
ASSUMPTIONS
BEHIND
LDA
IN
THE
NEXT
SECTION
WE
DESCRIBE
THE
INFERENCE
ALGORITHMS
FOR
LDA
HOWEVER
WE
FIRST
PAUSE
TO
DESCRIBE
THE
SHORT
HISTORY
OF
THESE
IDEAS
LDA
WAS
DEVELOPED
TO
FIX
AN
ISSUE
WITH
A
PREVIOUSLY
DEVELOPED
PROBABILISTIC
MODEL
PROBABILISTIC
LATENT
SEMANTIC
ANALYSIS
PLSI
THAT
MODEL
WAS
ITSELF
A
PROBABILISTIC
VERSION
OF
THE
SEMINAL
WORK
ON
LATENT
SEMANTIC
ANALYSIS
WHICH
REVEALED
THE
UTILITY
OF
THE
SINGULAR
VALUE
DECOMPOSITION
OF
THE
DOCUMENT
TERM
MATRIX
FROM
THIS
MATRIX
FACTORIZATION
PERSPECTIVE
LDA
CAN
ALSO
BE
SEEN
AS
A
TYPE
OF
PRINCIPAL
COMPONENT
ANALYSIS
FOR
DISCRETE
DATA
POSTERIOR
COMPUTATION
FOR
LDA
WE
NOW
TURN
TO
THE
COMPUTATIONAL
PROBLEM
COMPUTING
THE
CONDITIONAL
DISTRIBUTION
OF
THE
TOPIC
STRUCTURE
GIVEN
THE
OBSERVED
DOCUMENTS
AS
WE
MENTIONED
THIS
IS
CALLED
THE
POSTERIOR
USING
OUR
NOTATION
THE
POSTERIOR
IS
THE
NUMERATOR
IS
THE
JOINT
DISTRIBUTION
OF
ALL
THE
RANDOM
VARIABLES
WHICH
CAN
BE
EASILY
COMPUTED
FOR
ANY
SETTING
OF
THE
HIDDEN
VARIABLES
THE
DENOMINATOR
IS
THE
MARGINAL
PROBABILITY
OF
THE
OBSERVATIONS
WHICH
IS
THE
PROBABILITY
OF
SEEING
THE
OBSERVED
CORPUS
UNDER
ANY
TOPIC
MODEL
IN
THEORY
IT
CAN
BE
COMPUTED
BY
SUMMING
THE
JOINT
DISTRIBUTION
OVER
EVERY
POSSIBLE
INSTANTIATION
OF
THE
HIDDEN
TOPIC
STRUCTURE
THAT
NUMBER
OF
POSSIBLE
TOPIC
STRUCTURES
HOWEVER
IS
EXPONENTIALLY
LARGE
THIS
SUM
IS
INTRACTABLE
TO
COMPUTE
F
AS
FOR
MANY
MODERN
PROBABILISTIC
MODELS
OF
INTEREST
AND
FOR
MUCH
OF
MODERN
BAYESIAN
STATISTICS
WE
CANNOT
COMPUTE
THE
POSTERIOR
BECAUSE
OF
THE
DENOMINATOR
WHICH
IS
KNOWN
AS
THE
EVIDENCE
A
CENTRAL
RESEARCH
GOAL
OF
MODERN
PROBABILISTIC
MODELING
IS
TO
DEVELOP
EFFICIENT
METHODS
FOR
APPROXIMATING
IT
TOPIC
MODELING
ALGORITHMS
LIKE
THE
ALGORITHMS
USED
TO
CREATE
FIGURES
AND
ARE
OFTEN
ADAPTATIONS
OF
GENERAL
PURPOSE
METHODS
FOR
APPROXIMATING
THE
POSTERIOR
DISTRIBUTION
TOPIC
MODELING
ALGORITHMS
FORM
AN
APPROXIMATION
OF
EQUATION
BY
ADAPTING
AN
ALTERNATIVE
DISTRIBUTION
OVER
THE
LATENT
TOPIC
STRUCTURE
TO
BE
CLOSE
TO
THE
TRUE
POSTERIOR
TOPIC
MODELING
ALGORITHMS
GENERALLY
FALL
INTO
TWO
CATEGORIES
SAMPLING
BASED
ALGORITHMS
AND
VARIATIONAL
ALGORITHMS
SAMPLING
BASED
ALGORITHMS
ATTEMPT
TO
COLLECT
SAMPLES
FROM
THE
POSTERIOR
TO
APPROXIMATE
IT
WITH
AN
EMPIRICAL
DISTRIBUTION
THE
MOST
COMMONLY
USED
SAMPLING
ALGORITHM
FOR
TOPIC
MODELING
IS
GIBBS
SAMPLING
WHERE
WE
CONSTRUCT
A
MARKOV
CHAIN
A
SEQUENCE
OF
RANDOM
VARIABLES
EACH
DEPENDENT
ON
THE
PREVIOUS
WHOSE
LIMITING
DISTRIBUTION
IS
THE
POSTERIOR
THE
MARKOV
CHAIN
IS
DEFINED
ON
THE
HIDDEN
TOPIC
VARIABLES
FOR
A
PARTICULAR
CORPUS
AND
THE
ALGORITHM
IS
TO
RUN
THE
CHAIN
FOR
A
LONG
TIME
COLLECT
SAMPLES
FROM
THE
LIMITING
DISTRIBUTION
AND
THEN
APPROXIMATE
THE
DISTRIBUTION
WITH
THE
COLLECTED
SAMPLES
OFTEN
JUST
ONE
SAMPLE
IS
COLLECTED
AS
AN
APPROXIMATION
OF
THE
TOPIC
STRUCTURE
WITH
MAXIMAL
PROBABILITY
SEE
STEYVERS
AND
FOR
A
GOOD
DESCRIPTION
OF
GIBBS
SAMPLING
FOR
LDA
AND
SEE
HTTP
CRAN
R
PROJECT
ORG
PACKAGE
LDA
FOR
A
FAST
OPEN
SOURCE
IMPLEMENTATION
VARIATIONAL
METHODS
ARE
A
DETERMINISTIC
ALTERNATIVE
TO
SAMPLING
BASED
ALGORITHMS
RATHER
THAN
APPROXIMATING
THE
POSTERIOR
WITH
SAMPLES
VARIATIONAL
METHODS
POSIT
A
PARAMETERIZED
FAMILY
OF
DISTRIBUTIONS
OVER
THE
HIDDEN
STRUCTURE
AND
THEN
FIND
THE
MEMBER
OF
THAT
FAMILY
THAT
IS
CLOSEST
TO
THE
POSTERIOR
G
THUS
THE
INFERENCE
PROBLEM
IS
TRANSFORMED
TO
AN
OPTIMIZATION
PROBLEM
VARIATIONAL
METHODS
OPEN
THE
DOOR
FOR
INNOVATIONS
IN
OPTIMIZATION
TO
HAVE
PRACTICAL
IMPACT
IN
PROBABILISTIC
MODELING
SEE
BLEI
ET
AL
FOR
A
COORDINATE
ASCENT
VARIATIONAL
INFERENCE
ALGORITHM
FOR
LDA
SEE
HOFFMAN
ET
AL
FOR
A
MUCH
FASTER
ONLINE
ALGORITHM
AND
OPEN
SOURCE
SOFTWARE
THAT
EASILY
HANDLES
MILLIONS
OF
DOCUMENTS
AND
CAN
ACCOMMODATE
STREAMING
COLLECTIONS
OF
TEXT
LOOSELY
SPEAKING
BOTH
TYPES
OF
ALGORITHMS
PERFORM
A
SEARCH
OVER
THE
TOPIC
STRUCTURE
A
COLLECTION
OF
DOCUMENTS
THE
OBSERVED
RANDOM
VARIABLES
IN
THE
MODEL
ARE
HELD
FIXED
AND
SERVE
AS
A
GUIDE
TOWARD
WHERE
TO
SEARCH
WHICH
APPROACH
IS
BETTER
DEPENDS
ON
THE
PARTICULAR
TOPIC
MODEL
BEING
USED
WE
HAVE
SO
FAR
FOCUSED
ON
LDA
BUT
SEE
BELOW
FOR
OTHER
TOPIC
MODELS
AND
IS
A
SOURCE
OF
ACADEMIC
DEBATE
FOR
A
GOOD
DISCUSSION
OF
THE
MERITS
AND
DRAWBACKS
OF
BOTH
SEE
ASUNCION
ET
AL
RESEARCH
IN
TOPIC
MODELING
THE
SIMPLE
LDA
MODEL
PROVIDES
A
POWERFUL
TOOL
FOR
DISCOVERING
AND
EXPLOITING
THE
HIDDEN
THEMATIC
STRUCTURE
IN
LARGE
ARCHIVES
OF
TEXT
HOWEVER
ONE
OF
THE
MAIN
ADVANTAGES
OF
FORMULATING
LDA
AS
A
PROBABILISTIC
MODEL
IS
THAT
IT
CAN
EASILY
BE
USED
AS
A
MODULE
IN
MORE
COMPLICATED
MODELS
FOR
MORE
COMPLICATED
GOALS
SINCE
ITS
INTRODUCTION
LDA
HAS
BEEN
EXTENDED
AND
ADAPTED
IN
MANY
WAYS
RELAXING
THE
ASSUMPTIONS
OF
LDA
LDA
IS
DEFINED
BY
THE
STATISTICAL
ASSUMPTIONS
IT
MAKES
ABOUT
THE
CORPUS
ONE
ACTIVE
AREA
OF
TOPIC
MODELING
RESEARCH
IS
HOW
TO
RELAX
AND
EXTEND
THESE
ASSUMPTIONS
TO
UNCOVER
MORE
SOPHISTICATED
STRUCTURE
IN
THE
TEXTS
ONE
ASSUMPTION
THAT
LDA
MAKES
IS
THE
BAG
OF
WORDS
ASSUMPTION
THAT
THE
ORDER
OF
THE
WORDS
IN
THE
DOCUMENT
DOES
NOT
MATTER
TO
SEE
THIS
NOTE
THAT
THE
JOINT
DISTRIBUTION
OF
EQUATION
REMAINS
INVARIANT
TO
PERMUTATION
OF
THE
WORDS
OF
THE
DOCUMENTS
WHILE
THIS
ASSUMPTION
IS
UNREALISTIC
IT
IS
REASONABLE
IF
OUR
ONLY
GOAL
IS
TO
UNCOVER
THE
COURSE
SEMANTIC
STRUCTURE
OF
THE
TEXTS
H
FOR
MORE
SOPHISTICATED
GOALS
SUCH
AS
LANGUAGE
GENERATION
IT
IS
PATENTLY
NOT
APPROPRIATE
THERE
HAVE
BEEN
A
NUMBER
OF
EXTENSIONS
TO
LDA
THAT
MODEL
WORDS
NONEXCHANGEABLY
FOR
EXAMPLE
DEVELOPED
A
TOPIC
MODEL
THAT
RELAXES
THE
BAG
OF
WORDS
ASSUMPTION
BY
ASSUMING
THAT
THE
TOPICS
GENERATE
WORDS
CONDITIONAL
ON
THE
PREVIOUS
WORD
GRIFFITHS
ET
AL
DEVELOPED
A
TOPIC
MODEL
THAT
SWITCHES
BETWEEN
LDA
AND
A
STANDARD
HMM
THESE
MODELS
EXPAND
THE
PARAMETER
SPACE
SIGNIFICANTLY
BUT
SHOW
IMPROVED
LANGUAGE
MODELING
PERFORMANCE
ANOTHER
ASSUMPTION
IS
THAT
THE
ORDER
OF
DOCUMENTS
DOES
NOT
MATTER
AGAIN
THIS
CAN
BE
SEEN
BY
NOTICING
THAT
EQUATION
REMAINS
INVARIANT
TO
PERMUTATIONS
OF
THE
ORDERING
OF
DOCUMENTS
IN
THE
COLLECTION
THIS
ASSUMPTION
MAY
BE
UNREALISTIC
WHEN
ANALYZING
LONG
RUNNING
COLLECTIONS
THAT
SPAN
YEARS
OR
CENTURIES
IN
SUCH
COLLECTIONS
WE
MAY
WANT
TO
ASSUME
THAT
THE
TOPICS
CHANGE
OVER
TIME
ONE
APPROACH
TO
THIS
PROBLEM
IS
THE
DYNAMIC
TOPIC
A
MODEL
THAT
RESPECTS
THE
ORDERING
OF
THE
DOCUMENTS
AND
GIVES
A
RICHER
POSTERIOR
TOPICAL
STRUCTURE
THAN
LDA
FIGURE
SHOWS
A
TOPIC
THAT
RESULTS
FROM
ANALYZING
ALL
OF
SCIENCE
MAGAZINE
UNDER
THE
DYNAMIC
TOPIC
MODEL
RATHER
THAN
A
SINGLE
DISTRIBUTION
OVER
WORDS
A
TOPIC
IS
NOW
A
SEQUENCE
OF
DISTRIBUTIONS
OVER
WORDS
WE
CAN
FIND
AN
UNDERLYING
THEME
OF
THE
COLLECTION
AND
TRACK
HOW
IT
HAS
CHANGED
OVER
TIME
ONE
DIRECTION
FOR
TOPIC
MODELING
IS
TO
DEVELOP
EVALUATION
METHODS
THAT
MATCH
HOW
THE
ALGORITHMS
ARE
USED
HOW
CAN
WE
COMPARE
TOPIC
MODELS
BASED
ON
HOW
INTERPRETABLE
THEY
ARE
A
THIRD
ASSUMPTION
ABOUT
LDA
IS
THAT
THE
NUMBER
OF
TOPICS
IS
ASSUMED
KNOWN
AND
FIXED
THE
BAYESIAN
NON
PARAMETRIC
TOPIC
PROVIDES
AN
ELEGANT
SOLUTION
THE
NUMBER
OF
TOPICS
IS
DETERMINED
BY
THE
COLLECTION
DURING
POSTERIOR
INFERENCE
AND
FURTHERMORE
NEW
DOCUMENTS
CAN
EXHIBIT
PREVIOUSLY
UNSEEN
TOPICS
BAYESIAN
NONPARAMETRIC
TOPIC
MODELS
HAVE
BEEN
EXTENDED
TO
HIERARCHIES
OF
TOPICS
WHICH
FIND
A
TREE
OF
TOPICS
MOVING
FROM
MORE
GENERAL
TO
MORE
CONCRETE
WHOSE
PARTICULAR
STRUCTURE
IS
INFERRED
FROM
THE
DATA
THERE
ARE
STILL
OTHER
EXTENSIONS
OF
LDA
THAT
RELAX
VARIOUS
ASSUMPTIONS
MADE
BY
THE
MODEL
THE
CORRELATED
TOPIC
AND
PACHINKO
ALLOCATION
ALLOW
THE
OCCURRENCE
OF
TOPICS
TO
EXHIBIT
CORRELATION
FOR
EXAMPLE
A
DOCUMENT
ABOUT
GEOLOGY
IS
MORE
LIKELY
TO
ALSO
BE
ABOUT
CHEMISTRY
THAN
IT
IS
TO
BE
ABOUT
SPORTS
THE
SPHERICAL
TOPIC
ALLOWS
WORDS
TO
BE
UNLIKELY
IN
A
TOPIC
FOR
EXAMPLE
WRENCH
WILL
BE
PARTICULARLY
UNLIKELY
IN
A
TOPIC
ABOUT
CATS
SPARSE
TOPIC
MODELS
ENFORCE
FURTHER
STRUCTURE
IN
THE
TOPIC
DISTRIBUTIONS
AND
BURSTY
TOPIC
MODELS
PROVIDE
A
MORE
REALISTIC
MODEL
OF
WORD
COUNTS
INCORPORATING
METADATA
IN
MANY
TEXT
ANALYSIS
SETTINGS
THE
DOCUMENTS
CONTAIN
ADDITIONAL
INFORMATION
SUCH
AS
AUTHOR
TITLE
GEOGRAPHIC
LOCATION
LINKS
AND
OTHERS
THAT
WE
MIGHT
WANT
TO
ACCOUNT
FOR
WHEN
FITTING
A
TOPIC
MODEL
THERE
HAS
BEEN
A
FLURRY
OF
RESEARCH
ON
ADAPTING
TOPIC
MODELS
TO
INCLUDE
METADATA
THE
AUTHOR
TOPIC
IS
AN
EARLY
SUCCESS
STORY
FOR
THIS
KIND
OF
RESEARCH
THE
TOPIC
PROPORTIONS
ARE
ATTACHED
TO
AUTHORS
PAPERS
WITH
MULTIPLE
AUTHORS
ARE
ASSUMED
TO
ATTACH
EACH
WORD
TO
AN
AUTHOR
DRAWN
FROM
A
TOPIC
DRAWN
FROM
HIS
OR
HER
TOPIC
PROPORTIONS
THE
AUTHOR
TOPIC
MODEL
ALLOWS
FOR
INFERENCES
ABOUT
AUTHORS
AS
WELL
AS
DOCUMENTS
ROSEN
ZVI
ET
AL
SHOW
EXAMPLES
OF
AUTHOR
SIMILARITY
BASED
ON
THEIR
TOPIC
PROPORTIONS
SUCH
COMPUTATIONS
ARE
NOT
POSSIBLE
WITH
LDA
MANY
DOCUMENT
COLLECTIONS
ARE
LINKED
FOR
EXAMPLE
SCIENTIFIC
PAPERS
ARE
LINKED
BY
CITATION
OR
WEB
PAGES
ARE
LINKED
BY
HYPERLINK
AND
SEVERAL
TOPIC
MODELS
HAVE
BEEN
DEVELOPED
TO
ACCOUNT
FOR
THOSE
LINKS
WHEN
ESTIMATING
THE
TOPICS
THE
RELATIONAL
TOPIC
MODEL
OF
CHANG
AND
ASSUMES
THAT
EACH
DOCUMENT
IS
MODELED
AS
IN
LDA
AND
THAT
THE
LINKS
BETWEEN
DOCUMENTS
DEPEND
ON
THE
DISTANCE
BETWEEN
THEIR
TOPIC
PROPORTIONS
THIS
IS
BOTH
A
NEW
TOPIC
MODEL
AND
A
NEW
NETWORK
MODEL
UNLIKE
TRADITIONAL
STATISTICAL
MODELS
OF
NETWORKS
THE
RELATIONAL
TOPIC
MODEL
TAKES
INTO
ACCOUNT
NODE
ATTRIBUTES
HERE
THE
WORDS
OF
THE
DOCUMENTS
IN
MODELING
THE
LINKS
OTHER
WORK
THAT
INCORPORATES
METADATA
INTO
TOPIC
MODELS
INCLUDES
MODELS
OF
LINGUISTIC
STRUCTURE
MODELS
THAT
ACCOUNT
FOR
DISTANCES
BETWEEN
CORPORA
AND
MODELS
OF
NAMED
ENTITIES
GENERAL
PURPOSE
METHODS
FOR
INCORPORATING
METADATA
INTO
TOPIC
MODELS
INCLUDE
DIRICHLET
MULTINOMIAL
REGRESSION
AND
SUPERVISED
TOPIC
MODELS
OTHER
KINDS
OF
DATA
IN
LDA
THE
TOPICS
ARE
DISTRIBUTIONS
OVER
WORDS
AND
THIS
DISCRETE
DISTRIBUTION
GENERATES
OBSERVATIONS
WORDS
IN
DOCUMENTS
ONE
ADVANTAGE
OF
LDA
IS
THAT
THESE
CHOICES
FOR
THE
TOPIC
PARAMETER
AND
DATA
GENERATING
DISTRIBUTION
CAN
BE
ADAPTED
TO
OTHER
KINDS
OF
OBSERVATIONS
WITH
ONLY
SMALL
CHANGES
TO
THE
CORRESPONDING
INFERENCE
ALGORITHMS
AS
A
CLASS
OF
MODELS
LDA
CAN
BE
THOUGHT
OF
AS
A
MIXED
MEMBERSHIP
MODEL
OF
GROUPED
DATA
RATHER
THAN
ASSOCIATING
EACH
GROUP
OF
OBSERVATIONS
DOCUMENT
WITH
ONE
COMPONENT
TOPIC
EACH
GROUP
EXHIBITS
MULTIPLE
COMPONENTS
IN
DIFFERENT
PROPORTIONS
LDA
LIKE
MODELS
HAVE
BEEN
ADAPTED
TO
MANY
KINDS
OF
DATA
INCLUDING
SURVEY
DATA
USER
PREFERENCES
AUDIO
AND
MUSIC
COMPUTER
CODE
NETWORK
LOGS
AND
SOCIAL
NETWORKS
WE
DESCRIBE
TWO
AREAS
WHERE
MIXED
MEMBERSHIP
MODELS
HAVE
BEEN
PARTICULARLY
SUCCESSFUL
IN
POPULATION
GENETICS
THE
SAME
PROBABILISTIC
MODEL
WAS
INDEPENDENTLY
INVENTED
TO
FIND
ANCESTRAL
POPULATIONS
FOR
EXAMPLE
ORIGINATING
FROM
AFRICA
EUROPE
THE
MIDDLE
EAST
AMONG
OTHERS
IN
THE
GENETIC
ANCESTRY
OF
A
SAMPLE
OF
INDIVIDUALS
THE
IDEA
IS
THAT
EACH
INDIVIDUAL
GENOTYPE
DESCENDS
FROM
ONE
OR
MORE
OF
THE
ANCESTRAL
POPULATIONS
USING
A
MODEL
MUCH
LIKE
LDA
BIOLOGISTS
CAN
BOTH
CHARACTERIZE
THE
GENETIC
PATTERNS
IN
THOSE
POPULATIONS
THE
TOPICS
AND
IDENTIFY
HOW
EACH
INDIVIDUAL
EXPRESSES
THEM
THE
TOPIC
PROPORTIONS
THIS
MODEL
IS
POWERFUL
BECAUSE
THE
GENETIC
PATTERNS
IN
ANCESTRAL
POPULATIONS
CAN
BE
HYPOTHESIZED
EVEN
WHEN
PURE
SAMPLES
FROM
THEM
ARE
NOT
AVAILABLE
LDA
HAS
BEEN
WIDELY
USED
AND
ADAPTED
IN
COMPUTER
VISION
WHERE
THE
INFERENCE
ALGORITHMS
ARE
APPLIED
TO
NATURAL
IMAGES
IN
THE
SERVICE
OF
IMAGE
RETRIEVAL
CLASSIFICATION
AND
ORGANIZATION
COMPUTER
VISION
RESEARCHERS
HAVE
MADE
A
DIRECT
ANALOGY
FROM
IMAGES
TO
DOCUMENTS
IN
DOCUMENT
ANALYSIS
WE
ASSUME
THAT
DOCUMENTS
EXHIBIT
MULTIPLE
TOPICS
AND
THE
COLLECTION
OF
DOCUMENTS
EXHIBITS
THE
SAME
SET
OF
TOPICS
IN
IMAGE
ANALYSIS
WE
ASSUME
THAT
EACH
IMAGE
EXHIBITS
A
COMBINATION
OF
VISUAL
PATTERNS
AND
THAT
THE
SAME
VISUAL
PATTERNS
RECUR
THROUGHOUT
A
COLLECTION
OF
IMAGES
IN
A
PREPROCESSING
STEP
THE
IMAGES
ARE
ANALYZED
TO
FORM
COLLECTIONS
OF
VISUAL
WORDS
TOPIC
MODELING
FOR
COMPUTER
VISION
HAS
BEEN
USED
TO
CLASSIFY
IMAGES
CONNECT
IMAGES
AND
CAPTIONS
BUILD
IMAGE
HIERARCHIES
AND
OTHER
APPLICATIONS
RESEARCH
IN
TOPIC
MODELING
THE
SIMPLE
LDA
MODEL
PROVIDES
A
POWERFUL
TOOL
FOR
DISCOVERING
AND
EXPLOITING
THE
HIDDEN
THEMATIC
STRUCTURE
IN
LARGE
ARCHIVES
OF
TEXT
HOWEVER
ONE
OF
THE
MAIN
ADVANTAGES
OF
FORMULATING
LDA
AS
A
PROBABILISTIC
MODEL
IS
THAT
IT
CAN
EASILY
BE
USED
AS
A
MODULE
IN
MORE
COMPLICATED
MODELS
FOR
MORE
COMPLICATED
GOALS
SINCE
ITS
INTRODUCTION
LDA
HAS
BEEN
EXTENDED
AND
ADAPTED
IN
MANY
WAYS
RELAXING
THE
ASSUMPTIONS
OF
LDA
LDA
IS
DEFINED
BY
THE
STATISTICAL
ASSUMPTIONS
IT
MAKES
ABOUT
THE
CORPUS
ONE
ACTIVE
AREA
OF
TOPIC
MODELING
RESEARCH
IS
HOW
TO
RELAX
AND
EXTEND
THESE
ASSUMPTIONS
TO
UNCOVER
MORE
SOPHISTICATED
STRUCTURE
IN
THE
TEXTS
ONE
ASSUMPTION
THAT
LDA
MAKES
IS
THE
BAG
OF
WORDS
ASSUMPTION
THAT
THE
ORDER
OF
THE
WORDS
IN
THE
DOCUMENT
DOES
NOT
MATTER
TO
SEE
THIS
NOTE
THAT
THE
JOINT
DISTRIBUTION
OF
EQUATION
REMAINS
INVARIANT
TO
PERMUTATION
OF
THE
WORDS
OF
THE
DOCUMENTS
WHILE
THIS
ASSUMPTION
IS
UNREALISTIC
IT
IS
REASONABLE
IF
OUR
ONLY
GOAL
IS
TO
UNCOVER
THE
COURSE
SEMANTIC
STRUCTURE
OF
THE
TEXTS
H
FOR
MORE
SOPHISTICATED
GOALS
SUCH
AS
LANGUAGE
GENERATION
IT
IS
PATENTLY
NOT
APPROPRIATE
THERE
HAVE
BEEN
A
NUMBER
OF
EXTENSIONS
TO
LDA
THAT
MODEL
WORDS
NONEXCHANGEABLY
FOR
EXAMPLE
DEVELOPED
A
TOPIC
MODEL
THAT
RELAXES
THE
BAG
OF
WORDS
ASSUMPTION
BY
ASSUMING
THAT
THE
TOPICS
GENERATE
WORDS
CONDITIONAL
ON
THE
PREVIOUS
WORD
GRIFFITHS
ET
AL
DEVELOPED
A
TOPIC
MODEL
THAT
SWITCHES
BETWEEN
LDA
AND
A
STANDARD
HMM
THESE
MODELS
EXPAND
THE
PARAMETER
SPACE
SIGNIFICANTLY
BUT
SHOW
IMPROVED
LANGUAGE
MODELING
PERFORMANCE
ANOTHER
ASSUMPTION
IS
THAT
THE
ORDER
OF
DOCUMENTS
DOES
NOT
MATTER
AGAIN
THIS
CAN
BE
SEEN
BY
NOTICING
THAT
EQUATION
REMAINS
INVARIANT
TO
PERMUTATIONS
OF
THE
ORDERING
OF
DOCUMENTS
IN
THE
COLLECTION
THIS
ASSUMPTION
MAY
BE
UNREALISTIC
WHEN
ANALYZING
LONG
RUNNING
COLLECTIONS
THAT
SPAN
YEARS
OR
CENTURIES
IN
SUCH
COLLECTIONS
WE
MAY
WANT
TO
ASSUME
THAT
THE
TOPICS
CHANGE
OVER
TIME
ONE
APPROACH
TO
THIS
PROBLEM
IS
THE
DYNAMIC
TOPIC
A
MODEL
THAT
RESPECTS
THE
ORDERING
OF
THE
DOCUMENTS
AND
GIVES
A
RICHER
POSTERIOR
TOPICAL
STRUCTURE
THAN
LDA
FIGURE
SHOWS
A
TOPIC
THAT
RESULTS
FROM
ANALYZING
ALL
OF
SCIENCE
MAGAZINE
UNDER
THE
DYNAMIC
TOPIC
MODEL
RATHER
THAN
A
SINGLE
DISTRIBUTION
OVER
WORDS
A
TOPIC
IS
NOW
A
SEQUENCE
OF
DISTRIBUTIONS
OVER
WORDS
WE
CAN
FIND
AN
UNDERLYING
THEME
OF
THE
COLLECTION
AND
TRACK
HOW
IT
HAS
CHANGED
OVER
TIME
ONE
DIRECTION
FOR
TOPIC
MODELING
IS
TO
DEVELOP
EVALUATION
METHODS
THAT
MATCH
HOW
THE
ALGORITHMS
ARE
USED
HOW
CAN
WE
COMPARE
TOPIC
MODELS
BASED
ON
HOW
INTERPRETABLE
THEY
ARE
A
THIRD
ASSUMPTION
ABOUT
LDA
IS
THAT
THE
NUMBER
OF
TOPICS
IS
ASSUMED
KNOWN
AND
FIXED
THE
BAYESIAN
NON
PARAMETRIC
TOPIC
PROVIDES
AN
ELEGANT
SOLUTION
THE
NUMBER
OF
TOPICS
IS
DETERMINED
BY
THE
COLLECTION
DURING
POSTERIOR
INFERENCE
AND
FURTHERMORE
NEW
DOCUMENTS
CAN
EXHIBIT
PREVIOUSLY
UNSEEN
TOPICS
BAYESIAN
NONPARAMETRIC
TOPIC
MODELS
HAVE
BEEN
EXTENDED
TO
HIERARCHIES
OF
TOPICS
WHICH
FIND
A
TREE
OF
TOPICS
MOVING
FROM
MORE
GENERAL
TO
MORE
CONCRETE
WHOSE
PARTICULAR
STRUCTURE
IS
INFERRED
FROM
THE
DATA
THERE
ARE
STILL
OTHER
EXTENSIONS
OF
LDA
THAT
RELAX
VARIOUS
ASSUMPTIONS
MADE
BY
THE
MODEL
THE
CORRELATED
TOPIC
AND
PACHINKO
ALLOCATION
ALLOW
THE
OCCURRENCE
OF
TOPICS
TO
EXHIBIT
CORRELATION
FOR
EXAMPLE
A
DOCUMENT
ABOUT
GEOLOGY
IS
MORE
LIKELY
TO
ALSO
BE
ABOUT
CHEMISTRY
THAN
IT
IS
TO
BE
ABOUT
SPORTS
THE
SPHERICAL
TOPIC
ALLOWS
WORDS
TO
BE
UNLIKELY
IN
A
TOPIC
FOR
EXAMPLE
WRENCH
WILL
BE
PARTICULARLY
UNLIKELY
IN
A
TOPIC
ABOUT
CATS
SPARSE
TOPIC
MODELS
ENFORCE
FURTHER
STRUCTURE
IN
THE
TOPIC
DISTRIBUTIONS
AND
BURSTY
TOPIC
MODELS
PROVIDE
A
MORE
REALISTIC
MODEL
OF
WORD
COUNTS
INCORPORATING
METADATA
IN
MANY
TEXT
ANALYSIS
SETTINGS
THE
DOCUMENTS
CONTAIN
ADDITIONAL
INFORMATION
SUCH
AS
AUTHOR
TITLE
GEOGRAPHIC
LOCATION
LINKS
AND
OTHERS
THAT
WE
MIGHT
WANT
TO
ACCOUNT
FOR
WHEN
FITTING
A
TOPIC
MODEL
THERE
HAS
BEEN
A
FLURRY
OF
RESEARCH
ON
ADAPTING
TOPIC
MODELS
TO
INCLUDE
METADATA
THE
AUTHOR
TOPIC
IS
AN
EARLY
SUCCESS
STORY
FOR
THIS
KIND
OF
RESEARCH
THE
TOPIC
PROPORTIONS
ARE
ATTACHED
TO
AUTHORS
PAPERS
WITH
MULTIPLE
AUTHORS
ARE
ASSUMED
TO
ATTACH
EACH
WORD
TO
AN
AUTHOR
DRAWN
FROM
A
TOPIC
DRAWN
FROM
HIS
OR
HER
TOPIC
PROPORTIONS
THE
AUTHOR
TOPIC
MODEL
ALLOWS
FOR
INFERENCES
ABOUT
AUTHORS
AS
WELL
AS
DOCUMENTS
ROSEN
ZVI
ET
AL
SHOW
EXAMPLES
OF
AUTHOR
SIMILARITY
BASED
ON
THEIR
TOPIC
PROPORTIONS
SUCH
COMPUTATIONS
ARE
NOT
POSSIBLE
WITH
LDA
MANY
DOCUMENT
COLLECTIONS
ARE
LINKED
FOR
EXAMPLE
SCIENTIFIC
PAPERS
ARE
LINKED
BY
CITATION
OR
WEB
PAGES
ARE
LINKED
BY
HYPERLINK
AND
SEVERAL
TOPIC
MODELS
HAVE
BEEN
DEVELOPED
TO
ACCOUNT
FOR
THOSE
LINKS
WHEN
ESTIMATING
THE
TOPICS
THE
RELATIONAL
TOPIC
MODEL
OF
CHANG
AND
ASSUMES
THAT
EACH
DOCUMENT
IS
MODELED
AS
IN
LDA
AND
THAT
THE
LINKS
BETWEEN
DOCUMENTS
DEPEND
ON
THE
DISTANCE
BETWEEN
THEIR
TOPIC
PROPORTIONS
THIS
IS
BOTH
A
NEW
TOPIC
MODEL
AND
A
NEW
NETWORK
MODEL
UNLIKE
TRADITIONAL
STATISTICAL
MODELS
OF
NETWORKS
THE
RELATIONAL
TOPIC
MODEL
TAKES
INTO
ACCOUNT
NODE
ATTRIBUTES
HERE
THE
WORDS
OF
THE
DOCUMENTS
IN
MODELING
THE
LINKS
OTHER
WORK
THAT
INCORPORATES
METADATA
INTO
TOPIC
MODELS
INCLUDES
MODELS
OF
LINGUISTIC
STRUCTURE
MODELS
THAT
ACCOUNT
FOR
DISTANCES
BETWEEN
CORPORA
AND
MODELS
OF
NAMED
ENTITIES
GENERAL
PURPOSE
METHODS
FOR
INCORPORATING
METADATA
INTO
TOPIC
MODELS
INCLUDE
DIRICHLET
MULTINOMIAL
REGRESSION
AND
SUPERVISED
TOPIC
MODELS
OTHER
KINDS
OF
DATA
IN
LDA
THE
TOPICS
ARE
DISTRIBUTIONS
OVER
WORDS
AND
THIS
DISCRETE
DISTRIBUTION
GENERATES
OBSERVATIONS
WORDS
IN
DOCUMENTS
ONE
ADVANTAGE
OF
LDA
IS
THAT
THESE
CHOICES
FOR
THE
TOPIC
PARAMETER
AND
DATA
GENERATING
DISTRIBUTION
CAN
BE
ADAPTED
TO
OTHER
KINDS
OF
OBSERVATIONS
WITH
ONLY
SMALL
CHANGES
TO
THE
CORRESPONDING
INFERENCE
ALGORITHMS
AS
A
CLASS
OF
MODELS
LDA
CAN
BE
THOUGHT
OF
AS
A
MIXED
MEMBERSHIP
MODEL
OF
GROUPED
DATA
RATHER
THAN
ASSOCIATING
EACH
GROUP
OF
OBSERVATIONS
DOCUMENT
WITH
ONE
COMPONENT
TOPIC
EACH
GROUP
EXHIBITS
MULTIPLE
COMPONENTS
IN
DIFFERENT
PROPORTIONS
LDA
LIKE
MODELS
HAVE
BEEN
ADAPTED
TO
MANY
KINDS
OF
DATA
INCLUDING
SURVEY
DATA
USER
PREFERENCES
AUDIO
AND
MUSIC
COMPUTER
CODE
NETWORK
LOGS
AND
SOCIAL
NETWORKS
WE
DESCRIBE
TWO
AREAS
WHERE
MIXED
MEMBERSHIP
MODELS
HAVE
BEEN
PARTICULARLY
SUCCESSFUL
IN
POPULATION
GENETICS
THE
SAME
PROBABILISTIC
MODEL
WAS
INDEPENDENTLY
INVENTED
TO
FIND
ANCESTRAL
POPULATIONS
FOR
EXAMPLE
ORIGINATING
FROM
AFRICA
EUROPE
THE
MIDDLE
EAST
AMONG
OTHERS
IN
THE
GENETIC
ANCESTRY
OF
A
SAMPLE
OF
INDIVIDUALS
THE
IDEA
IS
THAT
EACH
INDIVIDUAL
GENOTYPE
DESCENDS
FROM
ONE
OR
MORE
OF
THE
ANCESTRAL
POPULATIONS
USING
A
MODEL
MUCH
LIKE
LDA
BIOLOGISTS
CAN
BOTH
CHARACTERIZE
THE
GENETIC
PATTERNS
IN
THOSE
POPULATIONS
THE
TOPICS
AND
IDENTIFY
HOW
EACH
INDIVIDUAL
EXPRESSES
THEM
THE
TOPIC
PROPORTIONS
THIS
MODEL
IS
POWERFUL
BECAUSE
THE
GENETIC
PATTERNS
IN
ANCESTRAL
POPULATIONS
CAN
BE
HYPOTHESIZED
EVEN
WHEN
PURE
SAMPLES
FROM
THEM
ARE
NOT
AVAILABLE
LDA
HAS
BEEN
WIDELY
USED
AND
ADAPTED
IN
COMPUTER
VISION
WHERE
THE
INFERENCE
ALGORITHMS
ARE
APPLIED
TO
NATURAL
IMAGES
IN
THE
SERVICE
OF
IMAGE
RETRIEVAL
CLASSIFICATION
AND
ORGANIZATION
COMPUTER
VISION
RESEARCHERS
HAVE
MADE
A
DIRECT
ANALOGY
FROM
IMAGES
TO
DOCUMENTS
IN
DOCUMENT
ANALYSIS
WE
ASSUME
THAT
DOCUMENTS
EXHIBIT
MULTIPLE
TOPICS
AND
THE
COLLECTION
OF
DOCUMENTS
EXHIBITS
THE
SAME
SET
OF
TOPICS
IN
IMAGE
ANALYSIS
WE
ASSUME
THAT
EACH
IMAGE
EXHIBITS
A
COMBINATION
OF
VISUAL
PATTERNS
AND
THAT
THE
SAME
VISUAL
PATTERNS
RECUR
THROUGHOUT
A
COLLECTION
OF
IMAGES
IN
A
PREPROCESSING
STEP
THE
IMAGES
ARE
ANALYZED
TO
FORM
COLLECTIONS
OF
VISUAL
WORDS
TOPIC
MODELING
FOR
COMPUTER
VISION
HAS
BEEN
USED
TO
CLASSIFY
IMAGES
CONNECT
IMAGES
AND
CAPTIONS
BUILD
IMAGE
HIERARCHIES
AND
OTHER
APPLICATIONS
FUTURE
DIRECTIONS
TOPIC
MODELING
IS
AN
EMERGING
FIELD
IN
MACHINE
LEARNING
AND
THERE
ARE
MANY
EXCITING
NEW
DIRECTIONS
FOR
RESEARCH
EVALUATION
AND
MODEL
CHECKING
THERE
IS
A
DISCONNECT
BETWEEN
HOW
TOPIC
MODELS
ARE
EVALUATED
AND
WHY
WE
EXPECT
TOPIC
MODELS
TO
BE
USEFUL
TYPICALLY
TOPIC
MODELS
ARE
EVALUATED
IN
THE
FOLLOWING
WAY
FIRST
HOLD
OUT
A
SUBSET
OF
YOUR
CORPUS
AS
THE
TEST
SET
THEN
FIT
A
VARIETY
OF
TOPIC
MODELS
TO
THE
REST
OF
THE
CORPUS
AND
APPROXIMATE
A
MEASURE
OF
MODEL
FIT
FOR
EXAMPLE
PROBABILITY
FOR
EACH
TRAINED
MODEL
ON
THE
TEST
SET
FINALLY
CHOOSE
THE
MODEL
THAT
ACHIEVES
THE
BEST
HELD
OUT
PERFORMANCE
BUT
TOPIC
MODELS
ARE
OFTEN
USED
TO
ORGANIZE
SUMMARIZE
AND
HELP
USERS
EXPLORE
LARGE
CORPORA
AND
THERE
IS
NO
TECHNICAL
REASON
TO
SUPPOSE
THAT
HELD
OUT
ACCURACY
CORRESPONDS
TO
BETTER
ORGANIZATION
OR
EASIER
INTERPRETATION
ONE
OPEN
DIRECTION
FOR
TOPIC
MODELING
IS
TO
DEVELOP
EVALUATION
METHODS
THAT
MATCH
HOW
THE
ALGORITHMS
ARE
USED
HOW
CAN
WE
COMPARE
TOPIC
MODELS
BASED
ON
HOW
INTERPRETABLE
THEY
ARE
THIS
IS
THE
MODEL
CHECKING
PROBLEM
WHEN
CONFRONTED
WITH
A
NEW
CORPUS
AND
A
NEW
TASK
WHICH
TOPIC
MODEL
SHOULD
I
USE
HOW
CAN
I
DECIDE
WHICH
OF
THE
MANY
MODELING
ASSUMPTIONS
ARE
IMPORTANT
FOR
MY
GOALS
HOW
SHOULD
I
MOVE
BETWEEN
THE
MANY
KINDS
OF
TOPIC
MODELS
THAT
HAVE
BEEN
DEVELOPED
THESE
QUESTIONS
HAVE
BEEN
GIVEN
SOME
ATTENTION
BY
STATISTICIANS
BUT
THEY
HAVE
BEEN
SCRUTINIZED
LESS
FOR
THE
SCALE
OF
PROBLEMS
THAT
MACHINE
LEARNING
TACKLES
NEW
COMPUTATIONAL
ANSWERS
TO
THESE
QUESTIONS
WOULD
BE
A
SIGNIFICANT
CONTRIBUTION
TO
TOPIC
MODELING
VISUALIZATION
AND
USER
INTERFACES
ANOTHER
PROMISING
FUTURE
DIRECTION
FOR
TOPIC
MODELING
IS
TO
DEVELOP
NEW
METHODS
OF
INTERACTING
WITH
AND
VISUALIZING
TOPICS
AND
CORPORA
TOPIC
MODELS
PROVIDE
NEW
EXPLORATORY
STRUCTURE
IN
LARGE
COLLECTIONS
HOW
CAN
WE
BEST
EXPLOIT
THAT
STRUCTURE
TO
AID
IN
DISCOVERY
AND
EXPLORATION
ONE
PROBLEM
IS
HOW
TO
DISPLAY
THE
TOPICS
TYPICALLY
WE
DISPLAY
TOPICS
BY
LISTING
THE
MOST
FREQUENT
WORDS
OF
EACH
SEE
FIGURE
BUT
NEW
WAYS
OF
LABELING
THE
TOPICS
BY
EITHER
CHOOSING
DIFFERENT
WORDS
OR
DISPLAYING
THE
CHOSEN
WORDS
DIFFERENTLY
MAY
BE
MORE
EFFECTIVE
A
FURTHER
PROBLEM
IS
HOW
TO
BEST
DISPLAY
A
DOCUMENT
WITH
A
TOPIC
MODEL
AT
THE
DOCUMENT
LEVEL
TOPIC
MODELS
PROVIDE
POTENTIALLY
USEFUL
INFORMATION
ABOUT
THE
STRUCTURE
OF
THE
DOCUMENT
COMBINED
WITH
EFFECTIVE
TOPIC
LABELS
THIS
STRUCTURE
COULD
HELP
READERS
IDENTIFY
THE
MOST
INTERESTING
PARTS
OF
THE
DOCUMENT
MOREOVER
THE
HIDDEN
TOPIC
PROPORTIONS
IMPLICITLY
CONNECT
EACH
DOCUMENT
TO
THE
OTHER
DOCUMENTS
BY
CONSIDERING
A
DISTANCE
MEASURE
BETWEEN
TOPIC
PROPORTIONS
HOW
CAN
WE
BEST
DISPLAY
THESE
CONNECTIONS
WHAT
IS
AN
EFFECTIVE
INTERFACE
TO
THE
WHOLE
CORPUS
AND
ITS
INFERRED
TOPIC
STRUCTURE
THESE
ARE
USER
INTERFACE
QUESTIONS
AND
THEY
ARE
ESSENTIAL
TO
TOPIC
MODELING
TOPIC
MODELING
ALGORITHMS
SHOW
MUCH
PROMISE
FOR
UNCOVERING
MEANINGFUL
THEMATIC
STRUCTURE
IN
LARGE
COLLECTIONS
OF
DOCUMENTS
BUT
MAKING
THIS
STRUCTURE
USEFUL
REQUIRES
CAREFUL
ATTENTION
TO
INFORMATION
VISUALIZATION
AND
THE
CORRESPONDING
USER
INTERFACES
TOPIC
MODELS
FOR
DATA
DISCOVERY
TOPIC
MODELS
HAVE
BEEN
DEVELOPED
WITH
INFORMATION
ENGINEERING
APPLICATIONS
IN
MIND
AS
A
STATISTICAL
MODEL
HOWEVER
TOPIC
MODELS
SHOULD
BE
ABLE
TO
TELL
US
SOMETHING
OR
HELP
US
FORM
A
HYPOTHESIS
ABOUT
THE
DATA
WHAT
CAN
WE
LEARN
ABOUT
THE
LANGUAGE
AND
OTHER
DATA
BASED
ON
THE
TOPIC
MODEL
POSTERIOR
SOME
WORK
IN
THIS
AREA
HAS
APPEARED
IN
POLITICAL
SCIENCE
BIBLIOMETRICS
AND
PSYCHOLOGY
THIS
KIND
OF
RESEARCH
ADAPTS
TOPIC
MODELS
TO
MEASURE
AN
EXTERNAL
VARIABLE
OF
INTEREST
A
DIFFICULT
TASK
FOR
UNSUPERVISED
LEARNING
THAT
MUST
BE
CAREFULLY
VALIDATED
IN
GENERAL
THIS
PROBLEM
IS
BEST
ADDRESSED
BY
TEAMING
COMPUTER
SCIENTISTS
WITH
OTHER
SCHOLARS
TO
USE
TOPIC
MODELS
TO
HELP
EXPLORE
VISUALIZE
AND
DRAW
HYPOTHESES
FROM
THEIR
DATA
IN
ADDITION
TO
SCIENTIFIC
APPLICATIONS
SUCH
AS
GENETICS
AND
NEUROSCIENCE
ONE
CAN
IMAGINE
TOPIC
MODELS
COMING
TO
THE
SERVICE
OF
HISTORY
SOCIOLOGY
LINGUISTICS
POLITICAL
SCIENCE
LEGAL
STUDIES
COMPARATIVE
LITERATURE
AND
OTHER
FIELDS
WHERE
TEXTS
ARE
A
PRIMARY
OBJECT
OF
STUDY
BY
WORKING
WITH
SCHOLARS
IN
DIVERSE
FIELDS
WE
CAN
BEGIN
TO
DEVELOP
A
NEW
INTERDISCIPLINARY
COMPUTATIONAL
METHODOLOGY
FOR
WORKING
WITH
AND
DRAWING
CONCLUSIONS
FROM
ARCHIVES
OF
TEXTS
BACK
TO
TOP
SUMMARY
WE
HAVE
SURVEYED
PROBABILISTIC
TOPIC
MODELS
A
SUITE
OF
ALGORITHMS
THAT
PROVIDE
A
STATISTICAL
SOLUTION
TO
THE
PROBLEM
OF
MANAGING
LARGE
ARCHIVES
OF
DOCUMENTS
WITH
RECENT
SCIENTIFIC
ADVANCES
IN
SUPPORT
OF
UNSUPERVISED
MACHINE
LEARNING
FLEXIBLE
COMPONENTS
FOR
MODELING
SCALABLE
ALGORITHMS
FOR
POSTERIOR
INFERENCE
AND
INCREASED
ACCESS
TO
MASSIVE
DATASETS
TOPIC
MODELS
PROMISE
TO
BE
AN
IMPORTANT
COMPONENT
FOR
SUMMARIZING
AND
UNDERSTANDING
OUR
GROWING
DIGITIZED
ARCHIVE
OF
INFORMATION
A
FEW
USEFUL
THINGS
TO
KNOW
ABOUT
MACHINE
LEARNING
AUTOMATICALLY
LEARN
PROGRAMS
FROM
DATA
THIS
IS
OFTEN
A
VERY
ATTRACTIVE
ALTERNATIVE
TO
MANUALLY
CONSTRUCTING
THEM
AND
IN
THE
KEY
INSIGHTS
LAST
DECADE
THE
USE
OF
MACHINE
LEARNING
HAS
SPREAD
RAPIDLY
THROUGHOUT
COMPUTER
SCIENCE
AND
BEYOND
MACHINE
LEARNING
IS
USED
IN
WEB
SEARCH
SPAM
FILTERS
MACHINE
LEARNING
ALGORITHMS
CAN
FIGURE
OUT
HOW
TO
PERFORM
IMPORTANT
TASKS
BY
GENERALIZING
FROM
EXAMPLES
THIS
IS
OFTEN
FEASIBLE
AND
COST
EFFECTIVE
WHERE
RECOMMENDER
SYSTEMS
AD
PLACEMENT
CREDIT
SCORING
MANUAL
PROGRAMMING
IS
NOT
AS
MORE
DATA
BECOMES
AVAILABLE
MORE
AMBITIOUS
FRAUD
DETECTION
STOCK
TRADING
DRUG
DESIGN
AND
MANY
PROBLEMS
CAN
BE
TACKLED
OTHER
APPLICATIONS
A
RECENT
REPORT
FROM
THE
MCKINSEY
GLOBAL
INSTITUTE
ASSERTS
THAT
MACHINE
LEARNING
A
K
A
MACHINE
LEARNING
IS
WIDELY
USED
IN
COMPUTER
SCIENCE
AND
OTHER
FIELDS
HOWEVER
DEVELOPING
SUCCESSFUL
DATA
MINING
OR
PREDICTIVE
ANALYTICS
WILL
BE
THE
DRIVER
MACHINE
LEARNING
APPLICATIONS
REQUIRES
A
SUBSTANTIAL
AMOUNT
OF
BLACK
ART
THAT
IS
OF
THE
NEXT
BIG
WAVE
OF
INNOVATION
SEVERAL
FINE
DIFFICULT
TO
FIND
IN
TEXTBOOKS
TEXTBOOKS
ARE
AVAILABLE
TO
INTERESTED
PRACTITIONERS
AND
RESEARCHERS
FOR
EXAMPLE
AND
WITTEN
ET
AL
HOWEVER
MUCH
OF
THE
FOLK
KNOWLEDGE
THAT
THIS
ARTICLE
SUMMARIZES
KEY
LESSONS
THAT
MACHINE
LEARNING
RESEARCHERS
AND
PRACTITIONERS
HAVE
LEARNED
THESE
INCLUDE
PITFALLS
TO
AVOID
IMPORTANT
ISSUES
TO
FOCUS
ON
AND
ANSWERS
TO
COMMON
QUESTIONS
COMMUNICATIONS
OF
THE
ACM
OCTOBER
VOL
NO
IS
NEEDED
TO
SUCCESSFULLY
DEVELOP
MACHINE
LEARNING
APPLICATIONS
IS
NOT
READILY
AVAILABLE
IN
THEM
AS
A
RESULT
MANY
MACHINE
LEARNING
PROJECTS
TAKE
MUCH
LONGER
THAN
NECESSARY
OR
WIND
UP
PRODUCING
LESS
THAN
IDEAL
RESULTS
YET
MUCH
OF
THIS
FOLK
KNOWLEDGE
IS
FAIRLY
EASY
TO
COMMUNICATE
THIS
IS
THE
PURPOSE
OF
THIS
ARTICLE
MANY
DIFFERENT
TYPES
OF
MACHINE
LEARNING
EXIST
BUT
FOR
ILLUSTRATION
PURPOSES
I
WILL
FOCUS
ON
THE
MOST
MATURE
AND
WIDELY
USED
ONE
CLAS
SIFICATION
NEVERTHELESS
THE
ISSUES
I
WILL
DISCUSS
APPLY
ACROSS
ALL
OF
MA
CHINE
LEARNING
A
CLASSIFIER
IS
A
SYS
TEM
THAT
INPUTS
TYPICALLY
A
VECTOR
OF
DISCRETE
AND
OR
CONTINUOUS
FEA
TURE
VALUES
AND
OUTPUTS
A
SINGLE
DIS
CRETE
VALUE
THE
CLASS
FOR
EXAMPLE
A
SPAM
FILTER
CLASSIFIES
EMAIL
MES
SAGES
INTO
SPAM
OR
NOT
SPAM
AND
ITS
INPUT
MAY
BE
A
BOOLEAN
VEC
TOR
X
X
X
J
X
D
WHERE
X
J
IF
THE
JTH
WORD
IN
THE
DICTIONARY
APPEARS
IN
THE
EMAIL
AND
X
J
OTHERWISE
A
LEARNER
INPUTS
A
TRAINING
SET
OF
EX
AMPLES
X
I
Y
I
WHERE
X
I
X
I
X
I
D
IS
AN
OBSERVED
INPUT
AND
Y
I
IS
THE
CORRESPONDING
OUTPUT
AND
OUTPUTS
A
CLASSIFIER
THE
TEST
OF
THE
LEARNER
IS
WHETHER
THIS
CLASSIFIER
PRODUCES
THE
CORRECT
OUTPUT
Y
T
FOR
FUTURE
EXAMPLES
X
T
FOR
EXAMPLE
WHETHER
THE
SPAM
FILTER
CORRECTLY
CLASSIFIES
PREVIOUSLY
UNSEEN
EMAIL
MESSAGES
AS
SPAM
OR
NOT
SPAM
LEARNING
REPRESENTATION
EVALUATION
OPTIMIZATION
SUPPOSE
YOU
HAVE
AN
APPLICATION
THAT
YOU
THINK
MACHINE
LEARNING
MIGHT
BE
GOOD
FOR
THE
FIRST
PROBLEM
FACING
YOU
IS
THE
BEWILDERING
VARIETY
OF
LEARNING
AL
GORITHMS
AVAILABLE
WHICH
ONE
TO
USE
THERE
ARE
LITERALLY
THOUSANDS
AVAILABLE
AND
HUNDREDS
MORE
ARE
PUBLISHED
EACH
YEAR
THE
KEY
TO
NOT
GETTING
LOST
IN
THIS
HUGE
SPACE
IS
TO
REALIZE
THAT
IT
CONSISTS
OF
COMBINATIONS
OF
JUST
THREE
COMPO
NENTS
THE
COMPONENTS
ARE
REPRESENTATION
A
CLASSIFIER
MUST
BE
REPRESENTED
IN
SOME
FORMAL
LAN
GUAGE
THAT
THE
COMPUTER
CAN
HANDLE
CONVERSELY
CHOOSING
A
REPRESENTA
TION
FOR
A
LEARNER
IS
TANTAMOUNT
TO
CHOOSING
THE
SET
OF
CLASSIFIERS
THAT
IT
CAN
POSSIBLY
LEARN
THIS
SET
IS
CALLED
THE
HYPOTHESIS
SPACE
OF
THE
LEARNER
IF
A
CLASSIFIER
IS
NOT
IN
THE
HYPOTHESIS
SPACE
IT
CANNOT
BE
LEARNED
A
RELATED
QUESTION
THAT
I
ADDRESS
LATER
IS
HOW
TO
REPRESENT
THE
INPUT
IN
OTHER
WORDS
WHAT
FEATURES
TO
USE
EVALUATION
AN
EVALUATION
FUNC
TION
ALSO
CALLED
OBJECTIVE
FUNCTION
OCTOBER
VOL
NO
COMMUNICATIONS
OF
THE
ACM
OR
SCORING
FUNCTION
IS
NEEDED
TO
DIS
TINGUISH
GOOD
CLASSIFIERS
FROM
BAD
ONES
THE
EVALUATION
FUNCTION
USED
INTERNALLY
BY
THE
ALGORITHM
MAY
DIF
FER
FROM
THE
EXTERNAL
ONE
THAT
WE
WANT
THE
CLASSIFIER
TO
OPTIMIZE
FOR
EASE
OF
OPTIMIZATION
AND
DUE
TO
THE
ISSUES
I
WILL
DISCUSS
OPTIMIZATION
FINALLY
WE
NEED
A
METHOD
TO
SEARCH
AMONG
THE
CLAS
SIFIERS
IN
THE
LANGUAGE
FOR
THE
HIGH
EST
SCORING
ONE
THE
CHOICE
OF
OP
TIMIZATION
TECHNIQUE
IS
KEY
TO
THE
EFFICIENCY
OF
THE
LEARNER
AND
ALSO
HELPS
DETERMINE
THE
CLASSIFIER
PRO
DUCED
IF
THE
EVALUATION
FUNCTION
HAS
MORE
THAN
ONE
OPTIMUM
IT
IS
COM
MON
FOR
NEW
LEARNERS
TO
START
OUT
USING
OFF
THE
SHELF
OPTIMIZERS
WHICH
ARE
LAT
ER
REPLACED
BY
CUSTOM
DESIGNED
ONES
THE
ACCOMPANYING
TABLE
SHOWS
COMMON
EXAMPLES
OF
EACH
OF
THESE
THREE
COMPONENTS
FOR
EXAMPLE
K
NEAREST
NEIGHBOR
CLASSIFIES
A
TEST
EX
AMPLE
BY
FINDING
THE
K
MOST
SIMILAR
TRAINING
EXAMPLES
AND
PREDICTING
THE
MAJORITY
CLASS
AMONG
THEM
HYPER
PLANE
BASED
METHODS
FORM
A
LINEAR
REVIEW
ARTICLES
COMBINATION
OF
THE
FEATURES
PER
CLASS
AND
PREDICT
THE
CLASS
WITH
THE
HIGH
EST
VALUED
COMBINATION
DECISION
TREES
TEST
ONE
FEATURE
AT
EACH
INTERNAL
NODE
WITH
ONE
BRANCH
FOR
EACH
FEA
TURE
VALUE
AND
HAVE
CLASS
PREDICTIONS
AT
THE
LEAVES
ALGORITHM
ABOVE
SHOWS
A
BARE
BONES
DECISION
TREE
LEARNER
FOR
BOOLEAN
DOMAINS
USING
INFORMATION
GAIN
AND
GREEDY
SEARCH
INFOGAIN
X
J
Y
IS
THE
MUTUAL
INFORMA
TION
BETWEEN
FEATURE
X
J
AND
THE
CLASS
Y
MAKENODE
X
C
C
RETURNS
A
NODE
THAT
TESTS
FEATURE
X
AND
HAS
C
AS
THE
CHILD
FOR
X
AND
C
AS
THE
CHILD
FOR
X
OF
COURSE
NOT
ALL
COMBINATIONS
OF
ONE
COMPONENT
FROM
EACH
COLUMN
OF
THE
TABLE
MAKE
EQUAL
SENSE
FOR
EXAM
PLE
DISCRETE
REPRESENTATIONS
NATURALLY
GO
WITH
COMBINATORIAL
OPTIMIZATION
AND
CONTINUOUS
ONES
WITH
CONTINU
OUS
OPTIMIZATION
NEVERTHELESS
MANY
LEARNERS
HAVE
BOTH
DISCRETE
AND
CON
TINUOUS
COMPONENTS
AND
IN
FACT
THE
COMMUNICATIONS
OF
THE
ACM
OCTOBER
VOL
NO
TABLE
THE
THREE
COMPONENTS
OF
LEARNING
ALGORITHMS
REPRESENTATION
EVALUATION
OPTIMIZATION
INSTANCES
ACCURACY
ERROR
RATE
COMBINATORIAL
OPTIMIZATION
K
NEAREST
NEIGHBOR
PRECISION
AND
RECALL
GREEDY
SEARCH
SUPPORT
VECTOR
MACHINES
SQUARED
ERROR
BEAM
SEARCH
HYPERPLANES
LIKELIHOOD
BRANCH
AND
BOUND
NAIVE
BAYES
POSTERIOR
PROBABILITY
CONTINUOUS
OPTIMIZATION
LOGISTIC
REGRESSION
INFORMATION
GAIN
UNCONSTRAINED
DECISION
TREES
K
L
DIVERGENCE
GRADIENT
DESCENT
SETS
OF
RULES
COST
UTILITY
CONJUGATE
GRADIENT
PROPOSITIONAL
RULES
MARGIN
QUASI
NEWTON
METHODS
LOGIC
PROGRAMS
CONSTRAINED
NEURAL
NETWORKS
LINEAR
PROGRAMMING
GRAPHICAL
MODELS
QUADRATIC
PROGRAMMING
BAYESIAN
NETWORKS
CONDITIONAL
RANDOM
FIELDS
ALGORITHM
DECISION
TREE
INDUCTION
LEARNDT
TRAINSET
IF
ALL
EXAMPLES
IN
TRAINSET
HAVE
THE
SAME
CLASS
Y
THEN
RETURN
MAKELEAF
Y
IF
NO
FEATURE
X
J
HAS
INFOGAIN
X
J
Y
THEN
Y
MOST
FREQUENT
CLASS
IN
TRAINSET
RETURN
MAKELEAF
Y
X
ARGMAX
X
J
INFOGAIN
X
J
Y
TS
EXAMPLES
IN
TRAINSET
WITH
X
TS
EXAMPLES
IN
TRAINSET
WITH
X
RETURN
MAKENODE
X
LEARNDT
TS
LEARNDT
TS
DAY
MAY
NOT
BE
FAR
WHEN
EVERY
SINGLE
POSSIBLE
COMBINATION
HAS
APPEARED
IN
SOME
LEARNER
MOST
TEXTBOOKS
ARE
ORGANIZED
BY
REPRESENTATION
AND
IT
IS
EASY
TO
OVER
LOOK
THE
FACT
THAT
THE
OTHER
COMPO
NENTS
ARE
EQUALLY
IMPORTANT
THERE
IS
NO
SIMPLE
RECIPE
FOR
CHOOSING
EACH
COMPONENT
BUT
I
WILL
TOUCH
ON
SOME
OF
THE
KEY
ISSUES
HERE
AS
WE
WILL
SEE
SOME
CHOICES
IN
A
MACHINE
LEARNING
PROJECT
MAY
BE
EVEN
MORE
IMPORTANT
THAN
THE
CHOICE
OF
LEARNER
IT
GENERALIZATION
THAT
COUNTS
THE
FUNDAMENTAL
GOAL
OF
MACHINE
LEARNING
IS
TO
GENERALIZE
BEYOND
THE
EXAMPLES
IN
THE
TRAINING
SET
THIS
IS
BECAUSE
NO
MATTER
HOW
MUCH
DATA
WE
HAVE
IT
IS
VERY
UNLIKELY
THAT
WE
WILL
SEE
THOSE
EXACT
EXAMPLES
AGAIN
AT
TEST
TIME
NOTICE
THAT
IF
THERE
ARE
WORDS
IN
THE
DICTIONARY
THE
SPAM
FIL
TER
DESCRIBED
ABOVE
HAS
POS
SIBLE
DIFFERENT
INPUTS
DOING
WELL
ON
THE
TRAINING
SET
IS
EASY
JUST
MEMORIZE
THE
EXAMPLES
THE
MOST
COMMON
MISTAKE
AMONG
MACHINE
LEARNING
BE
GINNERS
IS
TO
TEST
ON
THE
TRAINING
DATA
AND
HAVE
THE
ILLUSION
OF
SUCCESS
IF
THE
CHOSEN
CLASSIFIER
IS
THEN
TESTED
ON
NEW
DATA
IT
IS
OFTEN
NO
BETTER
THAN
RAN
DOM
GUESSING
SO
IF
YOU
HIRE
SOMEONE
TO
BUILD
A
CLASSIFIER
BE
SURE
TO
KEEP
SOME
OF
THE
DATA
TO
YOURSELF
AND
TEST
THE
CLASSIFIER
THEY
GIVE
YOU
ON
IT
CON
VERSELY
IF
YOU
HAVE
BEEN
HIRED
TO
BUILD
A
CLASSIFIER
SET
SOME
OF
THE
DATA
ASIDE
FROM
THE
BEGINNING
AND
ONLY
USE
IT
TO
TEST
YOUR
CHOSEN
CLASSIFIER
AT
THE
VERY
END
FOLLOWED
BY
LEARNING
YOUR
FINAL
CLASSIFIER
ON
THE
WHOLE
DATA
CONTAMINATION
OF
YOUR
CLASSIFIER
BY
TEST
DATA
CAN
OCCUR
IN
INSIDIOUS
WAYS
FOR
EXAMPLE
IF
YOU
USE
TEST
DATA
TO
TUNE
PARAMETERS
AND
DO
A
LOT
OF
TUN
ING
MACHINE
LEARNING
ALGORITHMS
HAVE
LOTS
OF
KNOBS
AND
SUCCESS
OF
TEN
COMES
FROM
TWIDDLING
THEM
A
LOT
SO
THIS
IS
A
REAL
CONCERN
OF
COURSE
HOLDING
OUT
DATA
REDUCES
THE
AMOUNT
AVAILABLE
FOR
TRAINING
THIS
CAN
BE
MIT
IGATED
BY
DOING
CROSS
VALIDATION
RAN
DOMLY
DIVIDING
YOUR
TRAINING
DATA
INTO
SAY
SUBSETS
HOLDING
OUT
EACH
ONE
WHILE
TRAINING
ON
THE
REST
TESTING
EACH
LEARNED
CLASSIFIER
ON
THE
EXAMPLES
IT
DID
NOT
SEE
AND
AVERAGING
THE
RESULTS
TO
SEE
HOW
WELL
THE
PARTICULAR
PARAM
ETER
SETTING
DOES
IN
THE
EARLY
DAYS
OF
MACHINE
LEARN
ING
THE
NEED
TO
KEEP
TRAINING
AND
TEST
DATA
SEPARATE
WAS
NOT
WIDELY
APPRECI
ATED
THIS
WAS
PARTLY
BECAUSE
IF
THE
LEARNER
HAS
A
VERY
LIMITED
REPRESENTA
TION
FOR
EXAMPLE
HYPERPLANES
THE
DIFFERENCE
BETWEEN
TRAINING
AND
TEST
ERROR
MAY
NOT
BE
LARGE
BUT
WITH
VERY
FLEXIBLE
CLASSIFIERS
FOR
EXAMPLE
DECI
SION
TREES
OR
EVEN
WITH
LINEAR
CLASSIFI
ERS
WITH
A
LOT
OF
FEATURES
STRICT
SEPARA
TION
IS
MANDATORY
NOTICE
THAT
GENERALIZATION
BEING
THE
GOAL
HAS
AN
INTERESTING
CONSE
QUENCE
FOR
MACHINE
LEARNING
UNLIKE
IN
MOST
OTHER
OPTIMIZATION
PROBLEMS
WE
DO
NOT
HAVE
ACCESS
TO
THE
FUNCTION
WE
WANT
TO
OPTIMIZE
WE
HAVE
TO
USE
TRAINING
ERROR
AS
A
SURROGATE
FOR
TEST
ERROR
AND
THIS
IS
FRAUGHT
WITH
DAN
GER
HOW
TO
DEAL
WITH
IT
IS
ADDRESSED
LATER
ON
THE
POSITIVE
SIDE
SINCE
THE
OBJECTIVE
FUNCTION
IS
ONLY
A
PROXY
FOR
THE
TRUE
GOAL
WE
MAY
NOT
NEED
TO
FULLY
OPTIMIZE
IT
IN
FACT
A
LOCAL
OPTIMUM
RETURNED
BY
SIMPLE
GREEDY
SEARCH
MAY
BE
BETTER
THAN
THE
GLOBAL
OPTIMUM
DATA
ALONE
IS
NOT
ENOUGH
GENERALIZATION
BEING
THE
GOAL
HAS
AN
OTHER
MAJOR
CONSEQUENCE
DATA
ALONE
IS
NOT
ENOUGH
NO
MATTER
HOW
MUCH
OF
IT
YOU
HAVE
CONSIDER
LEARNING
A
BOOLEAN
FUNCTION
OF
SAY
VARI
ABLES
FROM
A
MILLION
EXAMPLES
THERE
ARE
EXAMPLES
WHOSE
CLASSES
YOU
DO
NOT
KNOW
HOW
DO
YOU
FIGURE
OUT
WHAT
THOSE
CLASSES
ARE
IN
THE
AB
SENCE
OF
FURTHER
INFORMATION
THERE
IS
JUST
NO
WAY
TO
DO
THIS
THAT
BEATS
FLIP
PING
A
COIN
THIS
OBSERVATION
WAS
FIRST
MADE
IN
SOMEWHAT
DIFFERENT
FORM
BY
THE
PHILOSOPHER
DAVID
HUME
OVER
YEARS
AGO
BUT
EVEN
TODAY
MANY
MIS
TAKES
IN
MACHINE
LEARNING
STEM
FROM
FAILING
TO
APPRECIATE
IT
EVERY
LEARNER
MUST
EMBODY
SOME
KNOWLEDGE
OR
AS
SUMPTIONS
BEYOND
THE
DATA
IT
IS
GIVEN
IN
ORDER
TO
GENERALIZE
BEYOND
IT
THIS
NOTION
WAS
FORMALIZED
BY
WOLPERT
IN
HIS
FAMOUS
NO
FREE
LUNCH
THEOREMS
ACCORDING
TO
WHICH
NO
LEARNER
CAN
BEAT
RANDOM
GUESSING
OVER
ALL
POS
SIBLE
FUNCTIONS
TO
BE
LEARNED
THIS
SEEMS
LIKE
RATHER
DEPRESSING
NEWS
HOW
THEN
CAN
WE
EVER
HOPE
TO
LEARN
ANYTHING
LUCKILY
THE
FUNCTIONS
WE
WANT
TO
LEARN
IN
THE
REAL
WORLD
ARE
NOT
DRAWN
UNIFORMLY
FROM
THE
SET
OF
ALL
MATHEMATICALLY
POSSIBLE
FUNCTIONS
IN
FACT
VERY
GENERAL
ASSUMPTIONS
LIKE
SMOOTHNESS
SIMILAR
EXAMPLES
HAV
ING
SIMILAR
CLASSES
LIMITED
DEPEN
DENCES
OR
LIMITED
COMPLEXITY
ARE
OFTEN
ENOUGH
TO
DO
VERY
WELL
AND
THIS
IS
A
LARGE
PART
OF
WHY
MACHINE
LEARN
ING
HAS
BEEN
SO
SUCCESSFUL
LIKE
DE
DUCTION
INDUCTION
WHAT
LEARNERS
DO
IS
A
KNOWLEDGE
LEVER
IT
TURNS
A
SMALL
AMOUNT
OF
INPUT
KNOWLEDGE
INTO
A
LARGE
AMOUNT
OF
OUTPUT
KNOWLEDGE
INDUCTION
IS
A
VASTLY
MORE
POWERFUL
LEVER
THAN
DEDUCTION
REQUIRING
MUCH
LESS
INPUT
KNOWLEDGE
TO
PRODUCE
USE
FUL
RESULTS
BUT
IT
STILL
NEEDS
MORE
THAN
ZERO
INPUT
KNOWLEDGE
TO
WORK
AND
AS
WITH
ANY
LEVER
THE
MORE
WE
PUT
IN
THE
MORE
WE
CAN
GET
OUT
A
COROLLARY
OF
THIS
IS
THAT
ONE
OF
THE
KEY
CRITERIA
FOR
CHOOSING
A
REPRESENTA
TION
IS
WHICH
KINDS
OF
KNOWLEDGE
ARE
EASILY
EXPRESSED
IN
IT
FOR
EXAMPLE
IF
WE
HAVE
A
LOT
OF
KNOWLEDGE
ABOUT
WHAT
MAKES
EXAMPLES
SIMILAR
IN
OUR
DO
REVIEW
ARTICLES
MAIN
INSTANCE
BASED
METHODS
MAY
ONE
THAT
IS
ACCURATE
ON
BOTH
IT
BE
A
GOOD
CHOICE
IF
WE
HAVE
KNOWL
HAS
OVERFIT
EDGE
ABOUT
PROBABILISTIC
DEPENDEN
EVERYONE
IN
MACHINE
LEARNING
CIES
GRAPHICAL
MODELS
ARE
A
GOOD
FIT
KNOWS
ABOUT
OVERFITTING
BUT
IT
COMES
AND
IF
WE
HAVE
KNOWLEDGE
ABOUT
WHAT
IN
MANY
FORMS
THAT
ARE
NOT
IMMEDI
KINDS
OF
PRECONDITIONS
ARE
REQUIRED
BY
ATELY
OBVIOUS
ONE
WAY
TO
UNDERSTAND
EACH
CLASS
IF
THEN
RULES
MAY
OVERFITTING
IS
BY
DECOMPOSING
GENER
BE
THE
BEST
OPTION
THE
MOST
USEFUL
ALIZATION
ERROR
INTO
BIAS
AND
VARIANCE
LEARNERS
IN
THIS
REGARD
ARE
THOSE
THAT
BIAS
IS
A
LEARNER
TENDENCY
TO
CON
DO
NOT
JUST
HAVE
ASSUMPTIONS
HARD
SISTENTLY
LEARN
THE
SAME
WRONG
THING
WIRED
INTO
THEM
BUT
ALLOW
US
TO
STATE
VARIANCE
IS
THE
TENDENCY
TO
LEARN
RAN
THEM
EXPLICITLY
VARY
THEM
WIDELY
AND
DOM
THINGS
IRRESPECTIVE
OF
THE
REAL
SIG
INCORPORATE
THEM
AUTOMATICALLY
INTO
NAL
FIGURE
ILLUSTRATES
THIS
BY
AN
ANAL
THE
LEARNING
FOR
EXAMPLE
USING
FIRST
OGY
WITH
THROWING
DARTS
AT
A
BOARD
A
ORDER
OR
LINEAR
LEARNER
HAS
HIGH
BIAS
BECAUSE
IN
RETROSPECT
THE
NEED
FOR
KNOWL
WHEN
THE
FRONTIER
BETWEEN
TWO
CLASSES
EDGE
IN
LEARNING
SHOULD
NOT
BE
SUR
IS
NOT
A
HYPERPLANE
THE
LEARNER
IS
UN
PRISING
MACHINE
LEARNING
IS
NOT
ABLE
TO
INDUCE
IT
DECISION
TREES
DO
NOT
MAGIC
IT
CANNOT
GET
SOMETHING
FROM
HAVE
THIS
PROBLEM
BECAUSE
THEY
CAN
NOTHING
WHAT
IT
DOES
IS
GET
MORE
REPRESENT
ANY
BOOLEAN
FUNCTION
BUT
FROM
LESS
PROGRAMMING
LIKE
ALL
EN
ON
THE
OTHER
HAND
THEY
CAN
SUFFER
FROM
GINEERING
IS
A
LOT
OF
WORK
WE
HAVE
TO
HIGH
VARIANCE
DECISION
TREES
LEARNED
BUILD
EVERYTHING
FROM
SCRATCH
LEARN
ON
DIFFERENT
TRAINING
SETS
GENERATED
BY
ING
IS
MORE
LIKE
FARMING
WHICH
LETS
THE
SAME
PHENOMENON
ARE
OFTEN
VERY
NATURE
DO
MOST
OF
THE
WORK
FARMERS
DIFFERENT
WHEN
IN
FACT
THEY
SHOULD
BE
COMBINE
SEEDS
WITH
NUTRIENTS
TO
GROW
CROPS
LEARNERS
COMBINE
KNOWLEDGE
WITH
DATA
TO
GROW
PROGRAMS
FIGURE
BIAS
AND
VARIANCE
IN
DART
THROWING
OVERFITTING
HAS
MANY
FACES
WHAT
IF
THE
KNOWLEDGE
AND
DATA
WE
HAVE
ARE
NOT
SUFFICIENT
TO
COMPLETELY
LOW
VARIANCE
Y
C
A
R
U
C
C
A
T
E
T
E
T
HIGH
VARIANCE
DETERMINE
THE
CORRECT
CLASSIFIER
THEN
WE
RUN
THE
RISK
OF
JUST
HALLUCINATING
A
CLASSIFIER
OR
PARTS
OF
IT
THAT
IS
NOT
HIGH
BIAS
GROUNDED
IN
REALITY
AND
IS
SIMPLY
EN
CODING
RANDOM
QUIRKS
IN
THE
DATA
THIS
PROBLEM
IS
CALLED
OVERFITTING
AND
IS
THE
BUGBEAR
OF
MACHINE
LEARNING
WHEN
YOUR
LEARNER
OUTPUTS
A
CLASSI
LOW
BIAS
FIER
THAT
IS
ACCURATE
ON
THE
TRAIN
ING
DATA
BUT
ONLY
ACCURATE
ON
TEST
DATA
WHEN
IN
FACT
IT
COULD
HAVE
OUTPUT
FIGURE
NAÏVE
BAYES
CAN
OUTPERFORM
A
STATE
OF
THE
ART
RULE
LEARNER
EVEN
WHEN
THE
TRUE
CLASSIFIER
IS
A
SET
OF
RULES
BAYES
NUMBER
OF
EXAMPLES
OCTOBER
VOL
NO
COMMUNICATIONS
OF
THE
ACM
REVIEW
ARTICLES
THE
SAME
SIMILAR
REASONING
APPLIES
TO
THE
CHOICE
OF
OPTIMIZATION
METH
OD
BEAM
SEARCH
HAS
LOWER
BIAS
THAN
GREEDY
SEARCH
BUT
HIGHER
VARIANCE
BE
CAUSE
IT
TRIES
MORE
HYPOTHESES
THUS
CONTRARY
TO
INTUITION
A
MORE
POWERFUL
LEARNER
IS
NOT
NECESSARILY
BETTER
THAN
A
LESS
POWERFUL
ONE
FIGURE
ILLUSTRATES
THIS
A
EVEN
THOUGH
THE
TRUE
CLASSIFIER
IS
A
SET
OF
RULES
WITH
UP
TO
EXAMPLES
NA
IVE
BAYES
IS
MORE
ACCURATE
THAN
A
RULE
LEARNER
THIS
HAPPENS
DESPITE
NAIVE
BAYES
FALSE
ASSUMPTION
THAT
THE
FRONTIER
IS
LINEAR
SITUATIONS
LIKE
THIS
ARE
COMMON
IN
MACHINE
LEARN
ING
STRONG
FALSE
ASSUMPTIONS
CAN
BE
BETTER
THAN
WEAK
TRUE
ONES
BECAUSE
A
LEARNER
WITH
THE
LATTER
NEEDS
MORE
DATA
TO
AVOID
OVERFITTING
CROSS
VALIDATION
CAN
HELP
TO
COM
BAT
OVERFITTING
FOR
EXAMPLE
BY
USING
IT
TO
CHOOSE
THE
BEST
SIZE
OF
DECISION
TREE
TO
LEARN
BUT
IT
IS
NO
PANACEA
SINCE
IF
WE
USE
IT
TO
MAKE
TOO
MANY
PARAMETER
CHOICES
IT
CAN
ITSELF
START
TO
OVERFIT
BESIDES
CROSS
VALIDATION
THERE
ARE
MANY
METHODS
TO
COMBAT
OVERFIT
TING
THE
MOST
POPULAR
ONE
IS
ADDING
A
REGULARIZATION
TERM
TO
THE
EVALUATION
FUNCTION
THIS
CAN
FOR
EXAMPLE
PE
NALIZE
CLASSIFIERS
WITH
MORE
STRUCTURE
THEREBY
FAVORING
SMALLER
ONES
WITH
LESS
ROOM
TO
OVERFIT
ANOTHER
OPTION
IS
TO
PERFORM
A
STATISTICAL
SIGNIFICANCE
TEST
LIKE
CHI
SQUARE
BEFORE
ADDING
NEW
STRUCTURE
TO
DECIDE
WHETHER
THE
DIS
TRIBUTION
OF
THE
CLASS
REALLY
IS
DIFFER
ENT
WITH
AND
WITHOUT
THIS
STRUCTURE
THESE
TECHNIQUES
ARE
PARTICULARLY
USE
FUL
WHEN
DATA
IS
VERY
SCARCE
NEVERTHE
LESS
YOU
SHOULD
BE
SKEPTICAL
OF
CLAIMS
THAT
A
PARTICULAR
TECHNIQUE
SOLVES
THE
OVERFITTING
PROBLEM
IT
IS
EASY
TO
AVOID
OVERFITTING
VARIANCE
BY
FALLING
INTO
THE
OPPOSITE
ERROR
OF
UNDERFITTING
BIAS
SIMULTANEOUSLY
AVOIDING
BOTH
REQUIRES
LEARNING
A
PERFECT
CLASSIFIER
AND
SHORT
OF
KNOWING
IT
IN
ADVANCE
THERE
IS
NO
SINGLE
TECHNIQUE
THAT
WILL
ALWAYS
DO
BEST
NO
FREE
LUNCH
A
COMMON
MISCONCEPTION
ABOUT
OVERFITTING
IS
THAT
IT
IS
CAUSED
BY
NOISE
A
TRAINING
EXAMPLES
CONSIST
OF
BOOLEAN
FEA
TURES
AND
A
BOOLEAN
CLASS
COMPUTED
FROM
THEM
ACCORDING
TO
A
SET
OF
IF
THEN
RULES
THE
CURVES
ARE
THE
AVERAGE
OF
RUNS
WITH
DIFFERENT
RANDOMLY
GENERATED
SETS
OF
RULES
ERROR
BARS
ARE
TWO
STANDARD
DEVIATIONS
SEE
DOMINGOS
AND
FOR
DETAILS
COMMUNICATIONS
OF
THE
ACM
OCTOBER
VOL
NO
LIKE
TRAINING
EXAMPLES
LABELED
WITH
THE
WRONG
CLASS
THIS
CAN
INDEED
AG
GRAVATE
OVERFITTING
BY
MAKING
THE
LEARNER
DRAW
A
CAPRICIOUS
FRONTIER
TO
KEEP
THOSE
EXAMPLES
ON
WHAT
IT
THINKS
IS
THE
RIGHT
SIDE
BUT
SEVERE
OVERFITTING
CAN
OCCUR
EVEN
IN
THE
ABSENCE
OF
NOISE
FOR
INSTANCE
SUPPOSE
WE
LEARN
A
BOOL
EAN
CLASSIFIER
THAT
IS
JUST
THE
DISJUNC
TION
OF
THE
EXAMPLES
LABELED
TRUE
IN
THE
TRAINING
SET
IN
OTHER
WORDS
THE
CLASSIFIER
IS
A
BOOLEAN
FORMULA
IN
DISJUNCTIVE
NORMAL
FORM
WHERE
EACH
TERM
IS
THE
CONJUNCTION
OF
THE
FEATURE
VALUES
OF
ONE
SPECIFIC
TRAINING
EXAM
PLE
THIS
CLASSIFIER
GETS
ALL
THE
TRAINING
EXAMPLES
RIGHT
AND
EVERY
POSITIVE
TEST
EXAMPLE
WRONG
REGARDLESS
OF
WHETHER
THE
TRAINING
DATA
IS
NOISY
OR
NOT
THE
PROBLEM
OF
MULTIPLE
IS
CLOSELY
RELATED
TO
OVERFITTING
STANDARD
STATISTICAL
TESTS
ASSUME
THAT
ONLY
ONE
HYPOTHESIS
IS
BEING
TESTED
BUT
MOD
ERN
LEARNERS
CAN
EASILY
TEST
MILLIONS
BEFORE
THEY
ARE
DONE
AS
A
RESULT
WHAT
LOOKS
SIGNIFICANT
MAY
IN
FACT
NOT
BE
FOR
EXAMPLE
A
MUTUAL
FUND
THAT
BEATS
THE
MARKET
YEARS
IN
A
ROW
LOOKS
VERY
IMPRESSIVE
UNTIL
YOU
REALIZE
THAT
IF
THERE
ARE
FUNDS
AND
EACH
HAS
A
CHANCE
OF
BEATING
THE
MARKET
ON
ANY
GIVEN
YEAR
IT
IS
QUITE
LIKELY
THAT
ONE
WILL
SUCCEED
ALL
TIMES
JUST
BY
LUCK
THIS
PROBLEM
CAN
BE
COMBATTED
BY
CORRECTING
THE
SIGNIFICANCE
TESTS
TO
TAKE
THE
NUMBER
OF
HYPOTHESES
INTO
ACCOUNT
BUT
THIS
CAN
ALSO
LEAD
TO
UN
DERFITTING
A
BETTER
APPROACH
IS
TO
CON
TROL
THE
FRACTION
OF
FALSELY
ACCEPTED
NON
NULL
HYPOTHESES
KNOWN
AS
THE
FALSE
DISCOVERY
RATE
INTUITION
FAILS
IN
HIGH
DIMENSIONS
AFTER
OVERFITTING
THE
BIGGEST
PROBLEM
IN
MACHINE
LEARNING
IS
THE
CURSE
OF
DIMENSIONALITY
THIS
EXPRESSION
WAS
COINED
BY
BELLMAN
IN
TO
REFER
TO
THE
FACT
THAT
MANY
ALGORITHMS
THAT
WORK
FINE
IN
LOW
DIMENSIONS
BECOME
INTRACTABLE
WHEN
THE
INPUT
IS
HIGH
DIMENSIONAL
BUT
IN
MACHINE
LEARN
ING
IT
REFERS
TO
MUCH
MORE
GENERAL
IZING
CORRECTLY
BECOMES
EXPONENTIALLY
HARDER
AS
THE
DIMENSIONALITY
NUMBER
OF
FEATURES
OF
THE
EXAMPLES
GROWS
BE
CAUSE
A
FIXED
SIZE
TRAINING
SET
COVERS
A
DWINDLING
FRACTION
OF
THE
INPUT
SPACE
EVEN
WITH
A
MODERATE
DIMENSION
OF
AND
A
HUGE
TRAINING
SET
OF
A
TRILLION
EXAMPLES
THE
LATTER
COVERS
ONLY
A
FRAC
TION
OF
ABOUT
OF
THE
INPUT
SPACE
THIS
IS
WHAT
MAKES
MACHINE
LEARNING
BOTH
NECESSARY
AND
HARD
MORE
SERIOUSLY
THE
SIMILARITY
BASED
REASONING
THAT
MACHINE
LEARN
ING
ALGORITHMS
DEPEND
ON
EXPLICITLY
OR
IMPLICITLY
BREAKS
DOWN
IN
HIGH
DI
MENSIONS
CONSIDER
A
NEAREST
NEIGH
BOR
CLASSIFIER
WITH
HAMMING
DISTANCE
AS
THE
SIMILARITY
MEASURE
AND
SUP
POSE
THE
CLASS
IS
JUST
X
X
IF
THERE
ARE
NO
OTHER
FEATURES
THIS
IS
AN
EASY
PROBLEM
BUT
IF
THERE
ARE
IRRELEVANT
FEATURES
X
X
THE
NOISE
FROM
THEM
COMPLETELY
SWAMPS
THE
SIGNAL
IN
X
AND
X
AND
NEAREST
NEIGHBOR
EFFEC
TIVELY
MAKES
RANDOM
PREDICTIONS
EVEN
MORE
DISTURBING
IS
THAT
NEAR
EST
NEIGHBOR
STILL
HAS
A
PROBLEM
EVEN
IF
ALL
FEATURES
ARE
RELEVANT
THIS
IS
BECAUSE
IN
HIGH
DIMENSIONS
ALL
EXAMPLES
LOOK
ALIKE
SUPPOSE
FOR
INSTANCE
THAT
EXAMPLES
ARE
LAID
OUT
ON
A
REGULAR
GRID
AND
CONSIDER
A
TEST
EXAMPLE
X
T
IF
THE
GRID
IS
D
DIMEN
SIONAL
X
T
NEAREST
EXAMPLES
ARE
ALL
AT
THE
SAME
DISTANCE
FROM
IT
SO
AS
THE
DIMENSIONALITY
INCREASES
MORE
AND
MORE
EXAMPLES
BECOME
NEAREST
NEIGHBORS
OF
X
T
UNTIL
THE
CHOICE
OF
NEAREST
NEIGHBOR
AND
THEREFORE
OF
CLASS
IS
EFFECTIVELY
RANDOM
THIS
IS
ONLY
ONE
INSTANCE
OF
A
MORE
GENERAL
PROBLEM
WITH
HIGH
DIMEN
SIONS
OUR
INTUITIONS
WHICH
COME
FROM
A
THREE
DIMENSIONAL
WORLD
OF
TEN
DO
NOT
APPLY
IN
HIGH
DIMENSIONAL
ONES
IN
HIGH
DIMENSIONS
MOST
OF
THE
MASS
OF
A
MULTIVARIATE
GAUSSIAN
DIS
TRIBUTION
IS
NOT
NEAR
THE
MEAN
BUT
IN
AN
INCREASINGLY
DISTANT
SHELL
AROUND
IT
AND
MOST
OF
THE
VOLUME
OF
A
HIGH
DIMENSIONAL
ORANGE
IS
IN
THE
SKIN
NOT
THE
PULP
IF
A
CONSTANT
NUMBER
OF
EX
AMPLES
IS
DISTRIBUTED
UNIFORMLY
IN
A
HIGH
DIMENSIONAL
HYPERCUBE
BEYOND
SOME
DIMENSIONALITY
MOST
EXAMPLES
ARE
CLOSER
TO
A
FACE
OF
THE
HYPERCUBE
THAN
TO
THEIR
NEAREST
NEIGHBOR
AND
IF
WE
APPROXIMATE
A
HYPERSPHERE
BY
IN
SCRIBING
IT
IN
A
HYPERCUBE
IN
HIGH
DI
MENSIONS
ALMOST
ALL
THE
VOLUME
OF
THE
HYPERCUBE
IS
OUTSIDE
THE
HYPERSPHERE
THIS
IS
BAD
NEWS
FOR
MACHINE
LEARNING
WHERE
SHAPES
OF
ONE
TYPE
ARE
OFTEN
AP
PROXIMATED
BY
SHAPES
OF
ANOTHER
BUILDING
A
CLASSIFIER
IN
TWO
OR
THREE
DIMENSIONS
IS
EASY
WE
CAN
FIND
A
REA
SONABLE
FRONTIER
BETWEEN
EXAMPLES
OF
DIFFERENT
CLASSES
JUST
BY
VISUAL
IN
SPECTION
IT
HAS
EVEN
BEEN
SAID
THAT
IF
PEOPLE
COULD
SEE
IN
HIGH
DIMENSIONS
MACHINE
LEARNING
WOULD
NOT
BE
NECES
SARY
BUT
IN
HIGH
DIMENSIONS
IT
IS
DIF
FICULT
TO
UNDERSTAND
WHAT
IS
HAPPEN
ING
THIS
IN
TURN
MAKES
IT
DIFFICULT
TO
DESIGN
A
GOOD
CLASSIFIER
NAIVELY
ONE
MIGHT
THINK
THAT
GATHERING
MORE
FEA
TURES
NEVER
HURTS
SINCE
AT
WORST
THEY
PROVIDE
NO
NEW
INFORMATION
ABOUT
THE
CLASS
BUT
IN
FACT
THEIR
BENEFITS
MAY
BE
OUTWEIGHED
BY
THE
CURSE
OF
DIMEN
SIONALITY
FORTUNATELY
THERE
IS
AN
EFFECT
THAT
PARTLY
COUNTERACTS
THE
CURSE
WHICH
MIGHT
BE
CALLED
THE
BLESSING
OF
NON
UNIFORMITY
IN
MOST
APPLICATIONS
EXAMPLES
ARE
NOT
SPREAD
UNIFORMLY
THROUGHOUT
THE
INSTANCE
SPACE
BUT
ARE
CONCENTRATED
ON
OR
NEAR
A
LOWER
DIMENSIONAL
MANIFOLD
FOR
EXAMPLE
K
NEAREST
NEIGHBOR
WORKS
QUITE
WELL
FOR
HANDWRITTEN
DIGIT
RECOGNITION
EVEN
THOUGH
IMAGES
OF
DIGITS
HAVE
ONE
DIMENSION
PER
PIXEL
BECAUSE
THE
SPACE
OF
DIGIT
IMAGES
IS
MUCH
SMALLER
THAN
THE
SPACE
OF
ALL
POSSIBLE
IMAGES
LEARNERS
CAN
IMPLICITLY
TAKE
ADVAN
TAGE
OF
THIS
LOWER
EFFECTIVE
DIMENSION
OR
ALGORITHMS
FOR
EXPLICITLY
REDUCING
THE
DIMENSIONALITY
CAN
BE
USED
FOR
EXAMPLE
THEORETICAL
GUARANTEES
ARE
NOT
WHAT
THEY
SEEM
MACHINE
LEARNING
PAPERS
ARE
FULL
OF
THEORETICAL
GUARANTEES
THE
MOST
COM
MON
TYPE
IS
A
BOUND
ON
THE
NUMBER
OF
EXAMPLES
NEEDED
TO
ENSURE
GOOD
GEN
ERALIZATION
WHAT
SHOULD
YOU
MAKE
OF
THESE
GUARANTEES
FIRST
OF
ALL
IT
IS
RE
MARKABLE
THAT
THEY
ARE
EVEN
POSSIBLE
INDUCTION
IS
TRADITIONALLY
CONTRASTED
WITH
DEDUCTION
IN
DEDUCTION
YOU
CAN
GUARANTEE
THAT
THE
CONCLUSIONS
ARE
CORRECT
IN
INDUCTION
ALL
BETS
ARE
OFF
OR
SUCH
WAS
THE
CONVENTIONAL
WISDOM
FOR
MANY
CENTURIES
ONE
OF
THE
MAJOR
DEVELOPMENTS
OF
RECENT
DECADES
HAS
BEEN
THE
REALIZATION
THAT
IN
FACT
WE
CAN
HAVE
GUARANTEES
ON
THE
RESULTS
OF
IN
DUCTION
PARTICULARLY
IF
WE
ARE
WILLING
TO
SETTLE
FOR
PROBABILISTIC
GUARANTEES
THE
BASIC
ARGUMENT
IS
REMARKABLY
SIMPLE
LET
SAY
A
CLASSIFIER
IS
BAD
IF
ITS
TRUE
ERROR
RATE
IS
GREATER
THAN
Ε
THEN
THE
PROBABILITY
THAT
A
BAD
CLAS
SIFIER
IS
CONSISTENT
WITH
N
RANDOM
IN
DEPENDENT
TRAINING
EXAMPLES
IS
LESS
THAN
Ε
N
LET
B
BE
THE
NUMBER
OF
REVIEW
ARTICLES
BAD
CLASSIFIERS
IN
THE
LEARNER
HYPOTH
ESIS
SPACE
H
THE
PROBABILITY
THAT
AT
LEAST
ONE
OF
THEM
IS
CONSISTENT
IS
LESS
THAN
B
Ε
N
BY
THE
UNION
BOUND
AS
ONE
OF
THE
MAJOR
DEVELOPMENTS
OF
RECENT
DECADES
HAS
BEEN
THE
REALIZATION
THAT
WE
CAN
HAVE
GUARANTEES
ON
THE
RESULTS
OF
INDUCTION
SUMING
THE
LEARNER
ALWAYS
RETURNS
A
CONSISTENT
CLASSIFIER
THE
PROBABILITY
THAT
THIS
CLASSIFIER
IS
BAD
IS
THEN
LESS
THAN
H
Ε
N
WHERE
WE
HAVE
USED
THE
FACT
THAT
B
H
SO
IF
WE
WANT
THIS
PROBABILITY
TO
BE
LESS
THAN
Δ
IT
SUFFICES
TO
MAKE
N
LN
Δ
H
LN
Ε
Ε
LN
H
LN
Δ
UNFORTUNATELY
GUARANTEES
OF
THIS
TYPE
HAVE
TO
BE
TAKEN
WITH
A
LARGE
GRAIN
OF
SALT
THIS
IS
BECAUSE
THE
BOUNDS
OB
PARTICULARLY
IF
WE
ARE
WILLING
TO
SETTLE
FOR
PROBABILISTIC
GUARANTEES
TAINED
IN
THIS
WAY
ARE
USUALLY
EXTREME
LY
LOOSE
THE
WONDERFUL
FEATURE
OF
THE
BOUND
ABOVE
IS
THAT
THE
REQUIRED
NUM
BER
OF
EXAMPLES
ONLY
GROWS
LOGARITH
MICALLY
WITH
H
AND
Δ
UNFORTUNATE
LY
MOST
INTERESTING
HYPOTHESIS
SPACES
ARE
DOUBLY
EXPONENTIAL
IN
THE
NUMBER
OF
FEATURES
D
WHICH
STILL
LEAVES
US
NEEDING
A
NUMBER
OF
EXAMPLES
EXPO
NENTIAL
IN
D
FOR
EXAMPLE
CONSIDER
THE
SPACE
OF
BOOLEAN
FUNCTIONS
OF
D
BOOLEAN
VARIABLES
IF
THERE
ARE
E
POS
SIBLE
DIFFERENT
EXAMPLES
THERE
ARE
POSSIBLE
DIFFERENT
FUNCTIONS
SO
SINCE
THERE
ARE
POSSIBLE
EXAMPLES
THE
TOTAL
NUMBER
OF
FUNCTIONS
IS
AND
EVEN
FOR
HYPOTHESIS
SPACES
THAT
ARE
MERELY
EXPONENTIAL
THE
BOUND
IS
STILL
VERY
LOOSE
BECAUSE
THE
UNION
BOUND
IS
VERY
PESSIMISTIC
FOR
EXAM
PLE
IF
THERE
ARE
BOOLEAN
FEATURES
AND
THE
HYPOTHESIS
SPACE
IS
DECISION
TREES
WITH
UP
TO
LEVELS
TO
GUARANTEE
Δ
Ε
IN
THE
BOUND
ABOVE
WE
NEED
HALF
A
MILLION
EXAMPLES
BUT
IN
PRAC
TICE
A
SMALL
FRACTION
OF
THIS
SUFFICES
FOR
ACCURATE
LEARNING
FURTHER
WE
HAVE
TO
BE
CAREFUL
ABOUT
WHAT
A
BOUND
LIKE
THIS
MEANS
FOR
INSTANCE
IT
DOES
NOT
SAY
THAT
IF
YOUR
LEARNER
RETURNED
A
HYPOTHESIS
CONSISTENT
WITH
A
PARTICULAR
TRAINING
SET
THEN
THIS
HYPOTHESIS
PROBABLY
GENERALIZES
WELL
WHAT
IT
SAYS
IS
THAT
GIVEN
A
LARGE
ENOUGH
TRAINING
SET
WITH
HIGH
PROBABILITY
YOUR
LEARNER
WILL
EI
THER
RETURN
A
HYPOTHESIS
THAT
GENERAL
IZES
WELL
OR
BE
UNABLE
TO
FIND
A
CONSIS
TENT
HYPOTHESIS
THE
BOUND
ALSO
SAYS
NOTHING
ABOUT
HOW
TO
SELECT
A
GOOD
HYPOTHESIS
SPACE
IT
ONLY
TELLS
US
THAT
IF
THE
HYPOTHESIS
SPACE
CONTAINS
THE
TRUE
CLASSIFIER
THEN
THE
PROBABILITY
THAT
THE
LEARNER
OUTPUTS
A
BAD
CLASSI
FIER
DECREASES
WITH
TRAINING
SET
SIZE
OCTOBER
VOL
NO
COMMUNICATIONS
OF
THE
ACM
REVIEW
ARTICLES
IF
WE
SHRINK
THE
HYPOTHESIS
SPACE
THE
BOUND
IMPROVES
BUT
THE
CHANCES
THAT
IT
CONTAINS
THE
TRUE
CLASSIFIER
SHRINK
ALSO
THERE
ARE
BOUNDS
FOR
THE
CASE
WHERE
THE
TRUE
CLASSIFIER
IS
NOT
IN
THE
HYPOTHESIS
SPACE
BUT
SIMILAR
CONSID
ERATIONS
APPLY
TO
THEM
ANOTHER
COMMON
TYPE
OF
THEORETI
CAL
GUARANTEE
IS
ASYMPTOTIC
GIVEN
IN
FINITE
DATA
THE
LEARNER
IS
GUARANTEED
TO
OUTPUT
THE
CORRECT
CLASSIFIER
THIS
IS
REASSURING
BUT
IT
WOULD
BE
RASH
TO
CHOOSE
ONE
LEARNER
OVER
ANOTHER
BE
CAUSE
OF
ITS
ASYMPTOTIC
GUARANTEES
IN
PRACTICE
WE
ARE
SELDOM
IN
THE
ASYMP
TOTIC
REGIME
ALSO
KNOWN
AS
ASYMP
TOPIA
AND
BECAUSE
OF
THE
BIAS
VARI
ANCE
TRADE
OFF
I
DISCUSSED
EARLIER
IF
LEARNER
A
IS
BETTER
THAN
LEARNER
B
GIVEN
INFINITE
DATA
B
IS
OFTEN
BETTER
THAN
A
GIVEN
FINITE
DATA
THE
MAIN
ROLE
OF
THEORETICAL
GUAR
ANTEES
IN
MACHINE
LEARNING
IS
NOT
AS
A
CRITERION
FOR
PRACTICAL
DECISIONS
BUT
AS
A
SOURCE
OF
UNDERSTANDING
AND
DRIVING
FORCE
FOR
ALGORITHM
DESIGN
IN
THIS
CAPACITY
THEY
ARE
QUITE
USEFUL
IN
DEED
THE
CLOSE
INTERPLAY
OF
THEORY
AND
PRACTICE
IS
ONE
OF
THE
MAIN
REASONS
MACHINE
LEARNING
HAS
MADE
SO
MUCH
PROGRESS
OVER
THE
YEARS
BUT
CAVEAT
EMPTOR
LEARNING
IS
A
COMPLEX
PHE
NOMENON
AND
JUST
BECAUSE
A
LEARNER
HAS
A
THEORETICAL
JUSTIFICATION
AND
WORKS
IN
PRACTICE
DOES
NOT
MEAN
THE
FORMER
IS
THE
REASON
FOR
THE
LATTER
FEATURE
ENGINEERING
IS
THE
KEY
AT
THE
END
OF
THE
DAY
SOME
MACHINE
LEARNING
PROJECTS
SUCCEED
AND
SOME
FAIL
WHAT
MAKES
THE
DIFFERENCE
EAS
ILY
THE
MOST
IMPORTANT
FACTOR
IS
THE
FEATURES
USED
LEARNING
IS
EASY
IF
YOU
HAVE
MANY
INDEPENDENT
FEATURES
THAT
EACH
CORRELATE
WELL
WITH
THE
CLASS
ON
THE
OTHER
HAND
IF
THE
CLASS
IS
A
VERY
COMPLEX
FUNCTION
OF
THE
FEATURES
YOU
MAY
NOT
BE
ABLE
TO
LEARN
IT
OFTEN
THE
RAW
DATA
IS
NOT
IN
A
FORM
THAT
IS
AME
NABLE
TO
LEARNING
BUT
YOU
CAN
CON
STRUCT
FEATURES
FROM
IT
THAT
ARE
THIS
IS
TYPICALLY
WHERE
MOST
OF
THE
EFFORT
IN
A
MACHINE
LEARNING
PROJECT
GOES
IT
IS
OFTEN
ALSO
ONE
OF
THE
MOST
INTERESTING
PARTS
WHERE
INTUITION
CREATIVITY
AND
BLACK
ART
ARE
AS
IMPORTANT
AS
THE
TECHNICAL
STUFF
FIRST
TIMERS
ARE
OFTEN
SURPRISED
BY
HOW
LITTLE
TIME
IN
A
MACHINE
LEARNING
PROJECT
IS
SPENT
ACTUALLY
DOING
MA
COMMUNICATIONS
OF
THE
ACM
OCTOBER
VOL
NO
A
DUMB
ALGORITHM
WITH
LOTS
AND
LOTS
OF
DATA
BEATS
A
CLEVER
ONE
WITH
MODEST
AMOUNTS
OF
IT
CHINE
LEARNING
BUT
IT
MAKES
SENSE
IF
YOU
CONSIDER
HOW
TIME
CONSUMING
IT
IS
TO
GATHER
DATA
INTEGRATE
IT
CLEAN
IT
AND
PREPROCESS
IT
AND
HOW
MUCH
TRIAL
AND
ERROR
CAN
GO
INTO
FEATURE
DESIGN
ALSO
MACHINE
LEARNING
IS
NOT
A
ONE
SHOT
PROCESS
OF
BUILDING
A
DATASET
AND
RUNNING
A
LEARNER
BUT
RATHER
AN
ITERA
TIVE
PROCESS
OF
RUNNING
THE
LEARNER
ANALYZING
THE
RESULTS
MODIFYING
THE
DATA
AND
OR
THE
LEARNER
AND
REPEAT
ING
LEARNING
IS
OFTEN
THE
QUICKEST
PART
OF
THIS
BUT
THAT
IS
BECAUSE
WE
HAVE
ALREADY
MASTERED
IT
PRETTY
WELL
FEATURE
ENGINEERING
IS
MORE
DIFFI
CULT
BECAUSE
IT
IS
DOMAIN
SPECIFIC
WHILE
LEARNERS
CAN
BE
LARGELY
GENERAL
PURPOSE
HOWEVER
THERE
IS
NO
SHARP
FRONTIER
BETWEEN
THE
TWO
AND
THIS
IS
ANOTHER
REASON
THE
MOST
USEFUL
LEARN
ERS
ARE
THOSE
THAT
FACILITATE
INCORPO
RATING
KNOWLEDGE
OF
COURSE
ONE
OF
THE
HOLY
GRAILS
OF
MACHINE
LEARNING
IS
TO
AUTOMATE
MORE
AND
MORE
OF
THE
FEATURE
ENGI
NEERING
PROCESS
ONE
WAY
THIS
IS
OFTEN
DONE
TODAY
IS
BY
AUTOMATICALLY
GENER
ATING
LARGE
NUMBERS
OF
CANDIDATE
FEA
TURES
AND
SELECTING
THE
BEST
BY
SAY
THEIR
INFORMATION
GAIN
WITH
RESPECT
TO
THE
CLASS
BUT
BEAR
IN
MIND
THAT
FEATURES
THAT
LOOK
IRRELEVANT
IN
ISOLA
TION
MAY
BE
RELEVANT
IN
COMBINATION
FOR
EXAMPLE
IF
THE
CLASS
IS
AN
XOR
OF
K
INPUT
FEATURES
EACH
OF
THEM
BY
IT
SELF
CARRIES
NO
INFORMATION
ABOUT
THE
CLASS
IF
YOU
WANT
TO
ANNOY
MACHINE
LEARNERS
BRING
UP
XOR
ON
THE
OTHER
HAND
RUNNING
A
LEARNER
WITH
A
VERY
LARGE
NUMBER
OF
FEATURES
TO
FIND
OUT
WHICH
ONES
ARE
USEFUL
IN
COMBINATION
MAY
BE
TOO
TIME
CONSUMING
OR
CAUSE
OVERFITTING
SO
THERE
IS
ULTIMATELY
NO
REPLACEMENT
FOR
THE
SMARTS
YOU
PUT
INTO
FEATURE
ENGINEERING
MORE
DATA
BEATS
A
CLEVERER
ALGORITHM
SUPPOSE
YOU
HAVE
CONSTRUCTED
THE
BEST
SET
OF
FEATURES
YOU
CAN
BUT
THE
CLASSIFIERS
YOU
RECEIVE
ARE
STILL
NOT
AC
CURATE
ENOUGH
WHAT
CAN
YOU
DO
NOW
THERE
ARE
TWO
MAIN
CHOICES
DESIGN
A
BETTER
LEARNING
ALGORITHM
OR
GATHER
MORE
DATA
MORE
EXAMPLES
AND
POS
SIBLY
MORE
RAW
FEATURES
SUBJECT
TO
THE
CURSE
OF
DIMENSIONALITY
MACHINE
LEARNING
RESEARCHERS
ARE
MAINLY
CON
CERNED
WITH
THE
FORMER
BUT
PRAGMATI
CALLY
THE
QUICKEST
PATH
TO
SUCCESS
IS
OFTEN
TO
JUST
GET
MORE
DATA
AS
A
RULE
OF
THUMB
A
DUMB
ALGORITHM
WITH
LOTS
AND
LOTS
OF
DATA
BEATS
A
CLEVER
ONE
WITH
MODEST
AMOUNTS
OF
IT
AFTER
ALL
MA
CHINE
LEARNING
IS
ALL
ABOUT
LETTING
DATA
DO
THE
HEAVY
LIFTING
THIS
DOES
BRING
UP
ANOTHER
PROB
LEM
HOWEVER
SCALABILITY
IN
MOST
OF
COMPUTER
SCIENCE
THE
TWO
MAIN
LIM
ITED
RESOURCES
ARE
TIME
AND
MEMORY
IN
MACHINE
LEARNING
THERE
IS
A
THIRD
ONE
TRAINING
DATA
WHICH
ONE
IS
THE
BOTTLENECK
HAS
CHANGED
FROM
DECADE
TO
DECADE
IN
THE
IT
TENDED
TO
BE
DATA
TODAY
IT
IS
OFTEN
TIME
ENOR
MOUS
MOUNTAINS
OF
DATA
ARE
AVAIL
ABLE
BUT
THERE
IS
NOT
ENOUGH
TIME
TO
PROCESS
IT
SO
IT
GOES
UNUSED
THIS
LEADS
TO
A
PARADOX
EVEN
THOUGH
IN
PRINCIPLE
MORE
DATA
MEANS
THAT
MORE
COMPLEX
CLASSIFIERS
CAN
BE
LEARNED
IN
PRACTICE
SIMPLER
CLASSIFIERS
WIND
UP
BEING
USED
BECAUSE
COMPLEX
ONES
TAKE
TOO
LONG
TO
LEARN
PART
OF
THE
AN
SWER
IS
TO
COME
UP
WITH
FAST
WAYS
TO
LEARN
COMPLEX
CLASSIFIERS
AND
INDEED
THERE
HAS
BEEN
REMARKABLE
PROGRESS
IN
THIS
DIRECTION
FOR
EXAMPLE
HULTEN
AND
PART
OF
THE
REASON
USING
CLEVERER
ALGORITHMS
HAS
A
SMALLER
PAYOFF
THAN
YOU
MIGHT
EXPECT
IS
THAT
TO
A
FIRST
AP
PROXIMATION
THEY
ALL
DO
THE
SAME
THIS
IS
SURPRISING
WHEN
YOU
CONSIDER
REPRESENTATIONS
AS
DIFFERENT
AS
SAY
SETS
OF
RULES
AND
NEURAL
NETWORKS
BUT
IN
FACT
PROPOSITIONAL
RULES
ARE
READILY
ENCODED
AS
NEURAL
NETWORKS
AND
SIM
ILAR
RELATIONSHIPS
HOLD
BETWEEN
OTHER
REPRESENTATIONS
ALL
LEARNERS
ESSEN
TIALLY
WORK
BY
GROUPING
NEARBY
EXAM
PLES
INTO
THE
SAME
CLASS
THE
KEY
DIF
FERENCE
IS
IN
THE
MEANING
OF
NEARBY
WITH
NONUNIFORMLY
DISTRIBUTED
DATA
LEARNERS
CAN
PRODUCE
WIDELY
DIFFERENT
FRONTIERS
WHILE
STILL
MAKING
THE
SAME
PREDICTIONS
IN
THE
REGIONS
THAT
MATTER
THOSE
WITH
A
SUBSTANTIAL
NUMBER
OF
TRAINING
EXAMPLES
AND
THEREFORE
ALSO
WHERE
MOST
TEST
EXAMPLES
ARE
LIKELY
TO
APPEAR
THIS
ALSO
HELPS
EXPLAIN
WHY
POWERFUL
LEARNERS
CAN
BE
UNSTABLE
BUT
STILL
ACCURATE
FIGURE
ILLUSTRATES
THIS
IN
THE
EFFECT
IS
MUCH
STRONGER
IN
HIGH
DIMENSIONS
AS
A
RULE
IT
PAYS
TO
TRY
THE
SIMPLEST
LEARNERS
FIRST
FOR
EXAMPLE
NAÏVE
BAYES
BEFORE
LOGISTIC
REGRESSION
K
NEAREST
NEIGHBOR
BEFORE
SUPPORT
VECTOR
MA
CHINES
MORE
SOPHISTICATED
LEARN
REVIEW
ARTICLES
ERS
ARE
SEDUCTIVE
BUT
THEY
ARE
USUALLY
CYCLES
IN
RESEARCH
PAPERS
LEARNERS
HARDER
TO
USE
BECAUSE
THEY
HAVE
MORE
ARE
TYPICALLY
COMPARED
ON
MEASURES
KNOBS
YOU
NEED
TO
TURN
TO
GET
GOOD
RE
OF
ACCURACY
AND
COMPUTATIONAL
COST
SULTS
AND
BECAUSE
THEIR
INTERNALS
ARE
BUT
HUMAN
EFFORT
SAVED
AND
INSIGHT
MORE
OPAQUE
GAINED
ALTHOUGH
HARDER
TO
MEASURE
LEARNERS
CAN
BE
DIVIDED
INTO
TWO
ARE
OFTEN
MORE
IMPORTANT
THIS
FAVORS
MAJOR
TYPES
THOSE
WHOSE
REPRESENTA
LEARNERS
THAT
PRODUCE
HUMAN
UNDER
TION
HAS
A
FIXED
SIZE
LIKE
LINEAR
CLASSI
STANDABLE
OUTPUT
FOR
EXAMPLE
RULE
FIERS
AND
THOSE
WHOSE
REPRESENTATION
SETS
AND
THE
ORGANIZATIONS
THAT
MAKE
CAN
GROW
WITH
THE
DATA
LIKE
DECISION
THE
MOST
OF
MACHINE
LEARNING
ARE
TREES
THE
LATTER
ARE
SOMETIMES
CALLED
THOSE
THAT
HAVE
IN
PLACE
AN
INFRASTRUC
NONPARAMETRIC
LEARNERS
BUT
THIS
IS
TURE
THAT
MAKES
EXPERIMENTING
WITH
SOMEWHAT
UNFORTUNATE
SINCE
THEY
MANY
DIFFERENT
LEARNERS
DATA
SOURCES
USUALLY
WIND
UP
LEARNING
MANY
MORE
AND
LEARNING
PROBLEMS
EASY
AND
EFFI
PARAMETERS
THAN
PARAMETRIC
ONES
CIENT
AND
WHERE
THERE
IS
A
CLOSE
COL
FIXED
SIZE
LEARNERS
CAN
ONLY
TAKE
AD
LABORATION
BETWEEN
MACHINE
LEARNING
VANTAGE
OF
SO
MUCH
DATA
NOTICE
HOW
EXPERTS
AND
APPLICATION
DOMAIN
ONES
THE
ACCURACY
OF
NAIVE
BAYES
ASYMPTOTES
AT
AROUND
IN
FIGURE
VARIABLE
LEARN
MANY
MODELS
NOT
JUST
ONE
SIZE
LEARNERS
CAN
IN
PRINCIPLE
LEARN
ANY
IN
THE
EARLY
DAYS
OF
MACHINE
LEARN
FUNCTION
GIVEN
SUFFICIENT
DATA
BUT
IN
ING
EVERYONE
HAD
A
FAVORITE
LEARNER
PRACTICE
THEY
MAY
NOT
BECAUSE
OF
LIMI
TOGETHER
WITH
SOME
A
PRIORI
REASONS
TATIONS
OF
THE
ALGORITHM
FOR
EXAMPLE
TO
BELIEVE
IN
ITS
SUPERIORITY
MOST
EF
GREEDY
SEARCH
FALLS
INTO
LOCAL
OPTIMA
FORT
WENT
INTO
TRYING
MANY
VARIATIONS
OR
COMPUTATIONAL
COST
ALSO
BECAUSE
OF
IT
AND
SELECTING
THE
BEST
ONE
THEN
OF
THE
CURSE
OF
DIMENSIONALITY
NO
EX
SYSTEMATIC
EMPIRICAL
COMPARISONS
ISTING
AMOUNT
OF
DATA
MAY
BE
ENOUGH
SHOWED
THAT
THE
BEST
LEARNER
VARIES
FOR
THESE
REASONS
CLEVER
ALGORITHMS
FROM
APPLICATION
TO
APPLICATION
AND
THOSE
THAT
MAKE
THE
MOST
OF
THE
DATA
SYSTEMS
CONTAINING
MANY
DIFFERENT
AND
COMPUTING
RESOURCES
AVAILABLE
LEARNERS
STARTED
TO
APPEAR
EFFORT
NOW
OFTEN
PAY
OFF
IN
THE
END
PROVIDED
YOU
WENT
INTO
TRYING
MANY
VARIATIONS
OF
ARE
WILLING
TO
PUT
IN
THE
EFFORT
THERE
MANY
LEARNERS
AND
STILL
SELECTING
JUST
IS
NO
SHARP
FRONTIER
BETWEEN
DESIGN
THE
BEST
ONE
BUT
THEN
RESEARCHERS
ING
LEARNERS
AND
LEARNING
CLASSIFIERS
NOTICED
THAT
IF
INSTEAD
OF
SELECTING
RATHER
ANY
GIVEN
PIECE
OF
KNOWLEDGE
THE
BEST
VARIATION
FOUND
WE
COMBINE
COULD
BE
ENCODED
IN
THE
LEARNER
OR
MANY
VARIATIONS
THE
RESULTS
ARE
BET
LEARNED
FROM
DATA
SO
MACHINE
LEARN
TER
OFTEN
MUCH
BETTER
AND
AT
LITTLE
ING
PROJECTS
OFTEN
WIND
UP
HAVING
A
EXTRA
EFFORT
FOR
THE
USER
SIGNIFICANT
COMPONENT
OF
LEARNER
DE
CREATING
SUCH
MODEL
ENSEMBLES
IS
SIGN
AND
PRACTITIONERS
NEED
TO
HAVE
NOW
STANDARD
IN
THE
SIMPLEST
TECH
SOME
EXPERTISE
IN
IT
NIQUE
CALLED
BAGGING
WE
SIMPLY
GEN
IN
THE
END
THE
BIGGEST
BOTTLENECK
ERATE
RANDOM
VARIATIONS
OF
THE
TRAIN
IS
NOT
DATA
OR
CPU
CYCLES
BUT
HUMAN
ING
SET
BY
RESAMPLING
LEARN
A
CLASSIFIER
ON
EACH
AND
COMBINE
THE
RESULTS
BY
FIGURE
VERY
DIFFERENT
FRONTIERS
CAN
YIELD
SIMILAR
PREDICTIONS
AND
ARE
TRAINING
EXAMPLES
OF
TWO
CLASSES
VOTING
THIS
WORKS
BECAUSE
IT
GREATLY
REDUCES
VARIANCE
WHILE
ONLY
SLIGHTLY
INCREASING
BIAS
IN
BOOSTING
TRAINING
EXAMPLES
HAVE
WEIGHTS
AND
THESE
ARE
N
BAYES
VARIED
SO
THAT
EACH
NEW
CLASSIFIER
FO
CUSES
ON
THE
EXAMPLES
THE
PREVIOUS
KNN
SVM
ONES
TENDED
TO
GET
WRONG
IN
STACKING
THE
OUTPUTS
OF
INDIVIDUAL
CLASSIFIERS
BECOME
THE
INPUTS
OF
A
HIGHER
LEVEL
LEARNER
THAT
FIGURES
OUT
HOW
BEST
TO
COMBINE
THEM
MANY
OTHER
TECHNIQUES
EXIST
AND
D
TREE
THE
TREND
IS
TOWARD
LARGER
AND
LARGER
ENSEMBLES
IN
THE
NETFLIX
PRIZE
TEAMS
FROM
ALL
OVER
THE
WORLD
COMPETED
TO
BUILD
THE
BEST
VIDEO
RECOMMENDER
OCTOBER
VOL
NO
COMMUNICATIONS
OF
THE
ACM
REVIEW
ARTICLES
SYSTEM
HTTP
NETFLIXPRIZE
COM
AS
CONTINUES
TO
IMPROVE
BY
ADDING
CLAS
THE
COMPETITION
PROGRESSED
TEAMS
SIFIERS
EVEN
AFTER
THE
TRAINING
ERROR
HAS
FOUND
THEY
OBTAINED
THE
BEST
RESULTS
REACHED
ZERO
ANOTHER
COUNTEREXAM
BY
COMBINING
THEIR
LEARNERS
WITH
OTH
PLE
IS
SUPPORT
VECTOR
MACHINES
WHICH
ER
TEAMS
AND
MERGED
INTO
LARGER
AND
LARGER
TEAMS
THE
WINNER
AND
RUNNER
UP
WERE
BOTH
STACKED
ENSEMBLES
OF
OVER
LEARNERS
AND
COMBINING
THE
TWO
ENSEMBLES
FURTHER
IMPROVED
THE
RESULTS
DOUBTLESS
WE
WILL
SEE
EVEN
LARGER
ONES
IN
THE
FUTURE
MODEL
ENSEMBLES
SHOULD
NOT
BE
JUST
BECAUSE
A
FUNCTION
CAN
BE
REPRESENTED
DOES
NOT
MEAN
IT
CAN
BE
LEARNED
CAN
EFFECTIVELY
HAVE
AN
INFINITE
NUM
BER
OF
PARAMETERS
WITHOUT
OVERFITTING
CONVERSELY
THE
FUNCTION
SIGN
SIN
AX
CAN
DISCRIMINATE
AN
ARBITRARILY
LARGE
ARBITRARILY
LABELED
SET
OF
POINTS
ON
THE
X
AXIS
EVEN
THOUGH
IT
HAS
ONLY
ONE
PA
RAMETER
THUS
CONTRARY
TO
INTUITION
THERE
IS
NO
NECESSARY
CONNECTION
BE
CONFUSED
WITH
BAYESIAN
MODEL
AV
TWEEN
THE
NUMBER
OF
PARAMETERS
OF
A
ERAGING
BMA
THE
THEORETICALLY
MODEL
AND
ITS
TENDENCY
TO
OVERFIT
OPTIMAL
APPROACH
TO
LEARNING
IN
A
MORE
SOPHISTICATED
VIEW
INSTEAD
BMA
PREDICTIONS
ON
NEW
EXAMPLES
EQUATES
COMPLEXITY
WITH
THE
SIZE
OF
ARE
MADE
BY
AVERAGING
THE
INDIVIDUAL
THE
HYPOTHESIS
SPACE
ON
THE
BASIS
THAT
PREDICTIONS
OF
ALL
CLASSIFIERS
IN
THE
SMALLER
SPACES
ALLOW
HYPOTHESES
TO
BE
HYPOTHESIS
SPACE
WEIGHTED
BY
HOW
REPRESENTED
BY
SHORTER
CODES
BOUNDS
WELL
THE
CLASSIFIERS
EXPLAIN
THE
TRAIN
LIKE
THE
ONE
IN
THE
SECTION
ON
THEORETI
ING
DATA
AND
HOW
MUCH
WE
BELIEVE
CAL
GUARANTEES
MIGHT
THEN
BE
VIEWED
IN
THEM
A
PRIORI
DESPITE
THEIR
SU
AS
IMPLYING
THAT
SHORTER
HYPOTHESES
PERFICIAL
SIMILARITIES
ENSEMBLES
AND
GENERALIZE
BETTER
THIS
CAN
BE
FURTHER
BMA
ARE
VERY
DIFFERENT
ENSEMBLES
REFINED
BY
ASSIGNING
SHORTER
CODES
TO
CHANGE
THE
HYPOTHESIS
SPACE
FOR
EX
THE
HYPOTHESES
IN
THE
SPACE
WE
HAVE
AMPLE
FROM
SINGLE
DECISION
TREES
TO
SOME
A
PRIORI
PREFERENCE
FOR
BUT
LINEAR
COMBINATIONS
OF
THEM
AND
VIEWING
THIS
AS
PROOF
OF
A
TRADE
OFF
CAN
TAKE
A
WIDE
VARIETY
OF
FORMS
BMA
BETWEEN
ACCURACY
AND
SIMPLICITY
IS
ASSIGNS
WEIGHTS
TO
THE
HYPOTHESES
IN
CIRCULAR
REASONING
WE
MADE
THE
HY
THE
ORIGINAL
SPACE
ACCORDING
TO
A
FIXED
POTHESES
WE
PREFER
SIMPLER
BY
DESIGN
FORMULA
BMA
WEIGHTS
ARE
EXTREMELY
AND
IF
THEY
ARE
ACCURATE
IT
IS
BECAUSE
DIFFERENT
FROM
THOSE
PRODUCED
BY
OUR
PREFERENCES
ARE
ACCURATE
NOT
BE
SAY
BAGGING
OR
BOOSTING
THE
LATTER
CAUSE
THE
HYPOTHESES
ARE
SIMPLE
IN
ARE
FAIRLY
EVEN
WHILE
THE
FORMER
ARE
THE
REPRESENTATION
WE
CHOSE
EXTREMELY
SKEWED
TO
THE
POINT
WHERE
A
FURTHER
COMPLICATION
ARISES
FROM
THE
SINGLE
HIGHEST
WEIGHT
CLASSIFIER
THE
FACT
THAT
FEW
LEARNERS
SEARCH
THEIR
USUALLY
DOMINATES
MAKING
BMA
EF
HYPOTHESIS
SPACE
EXHAUSTIVELY
A
FECTIVELY
EQUIVALENT
TO
JUST
SELECTING
LEARNER
WITH
A
LARGER
HYPOTHESIS
SPACE
IT
A
PRACTICAL
CONSEQUENCE
OF
THIS
IS
THAT
TRIES
FEWER
HYPOTHESES
FROM
IT
THAT
WHILE
MODEL
ENSEMBLES
ARE
A
KEY
IS
LESS
LIKELY
TO
OVERFIT
THAN
ONE
THAT
PART
OF
THE
MACHINE
LEARNING
TOOLKIT
TRIES
MORE
HYPOTHESES
FROM
A
SMALLER
BMA
IS
SELDOM
WORTH
THE
TROUBLE
SPACE
AS
POINTS
OUT
THE
SIZE
OF
THE
HYPOTHESIS
SPACE
IS
ONLY
A
ROUGH
SIMPLICITY
DOES
NOT
GUIDE
TO
WHAT
REALLY
MATTERS
FOR
RELAT
IMPLY
ACCURACY
ING
TRAINING
AND
TEST
ERROR
THE
PROCE
OCCAM
RAZOR
FAMOUSLY
STATES
THAT
DURE
BY
WHICH
A
HYPOTHESIS
IS
CHOSEN
ENTITIES
SHOULD
NOT
BE
MULTIPLIED
BE
SURVEYS
THE
MAIN
ARGU
YOND
NECESSITY
IN
MACHINE
LEARNING
MENTS
AND
EVIDENCE
ON
THE
ISSUE
OF
THIS
IS
OFTEN
TAKEN
TO
MEAN
THAT
GIVEN
OCCAM
RAZOR
IN
MACHINE
LEARNING
TWO
CLASSIFIERS
WITH
THE
SAME
TRAINING
THE
CONCLUSION
IS
THAT
SIMPLER
HY
ERROR
THE
SIMPLER
OF
THE
TWO
WILL
LIKELY
POTHESES
SHOULD
BE
PREFERRED
BECAUSE
HAVE
THE
LOWEST
TEST
ERROR
PURPORTED
SIMPLICITY
IS
A
VIRTUE
IN
ITS
OWN
RIGHT
PROOFS
OF
THIS
CLAIM
APPEAR
REGULARLY
NOT
BECAUSE
OF
A
HYPOTHETICAL
CONNEC
IN
THE
LITERATURE
BUT
IN
FACT
THERE
ARE
TION
WITH
ACCURACY
THIS
IS
PROBABLY
MANY
COUNTEREXAMPLES
TO
IT
AND
THE
WHAT
OCCAM
MEANT
IN
THE
FIRST
PLACE
NO
FREE
LUNCH
THEOREMS
IMPLY
IT
CAN
NOT
BE
TRUE
REPRESENTABLE
DOES
NOT
WE
SAW
ONE
COUNTEREXAMPLE
PREVI
IMPLY
LEARNABLE
OUSLY
MODEL
ENSEMBLES
THE
GENER
ESSENTIALLY
ALL
REPRESENTATIONS
USED
IN
ALIZATION
ERROR
OF
A
BOOSTED
ENSEMBLE
VARIABLE
SIZE
LEARNERS
HAVE
ASSOCIATED
COMMUNICATIONS
OF
THE
ACM
OCTOBER
VOL
NO
THEOREMS
OF
THE
FORM
EVERY
FUNCTION
CAN
BE
REPRESENTED
OR
APPROXIMATED
ARBITRARILY
CLOSELY
USING
THIS
REPRE
SENTATION
REASSURED
BY
THIS
FANS
OF
THE
REPRESENTATION
OFTEN
PROCEED
TO
IGNORE
ALL
OTHERS
HOWEVER
JUST
BE
CAUSE
A
FUNCTION
CAN
BE
REPRESENTED
DOES
NOT
MEAN
IT
CAN
BE
LEARNED
FOR
EXAMPLE
STANDARD
DECISION
TREE
LEARN
ERS
CANNOT
LEARN
TREES
WITH
MORE
LEAVES
THAN
THERE
ARE
TRAINING
EXAMPLES
IN
CONTINUOUS
SPACES
REPRESENTING
EVEN
SIMPLE
FUNCTIONS
USING
A
FIXED
SET
OF
PRIMITIVES
OFTEN
REQUIRES
AN
INFINITE
NUMBER
OF
COMPONENTS
FURTHER
IF
THE
HYPOTHESIS
SPACE
HAS
MANY
LOCAL
OPTIMA
OF
THE
EVALUATION
FUNCTION
AS
IS
OFTEN
THE
CASE
THE
LEARNER
MAY
NOT
FIND
THE
TRUE
FUNCTION
EVEN
IF
IT
IS
REP
RESENTABLE
GIVEN
FINITE
DATA
TIME
AND
MEMORY
STANDARD
LEARNERS
CAN
LEARN
ONLY
A
TINY
SUBSET
OF
ALL
POSSIBLE
FUNC
TIONS
AND
THESE
SUBSETS
ARE
DIFFERENT
FOR
LEARNERS
WITH
DIFFERENT
REPRESEN
TATIONS
THEREFORE
THE
KEY
QUESTION
IS
NOT
CAN
IT
BE
REPRESENTED
TO
WHICH
THE
ANSWER
IS
OFTEN
TRIVIAL
BUT
CAN
IT
BE
LEARNED
AND
IT
PAYS
TO
TRY
DIFFERENT
LEARNERS
AND
POSSIBLY
COMBINE
THEM
SOME
REPRESENTATIONS
ARE
EXPONEN
TIALLY
MORE
COMPACT
THAN
OTHERS
FOR
SOME
FUNCTIONS
AS
A
RESULT
THEY
MAY
ALSO
REQUIRE
EXPONENTIALLY
LESS
DATA
TO
LEARN
THOSE
FUNCTIONS
MANY
LEARNERS
WORK
BY
FORMING
LINEAR
COMBINATIONS
OF
SIMPLE
BASIS
FUNCTIONS
FOR
EXAM
PLE
SUPPORT
VECTOR
MACHINES
FORM
COMBINATIONS
OF
KERNELS
CENTERED
AT
SOME
OF
THE
TRAINING
EXAMPLES
THE
SUPPORT
VECTORS
REPRESENTING
PARITY
OF
N
BITS
IN
THIS
WAY
REQUIRES
BASIS
FUNCTIONS
BUT
USING
A
REPRESENTATION
WITH
MORE
LAYERS
THAT
IS
MORE
STEPS
BETWEEN
INPUT
AND
OUTPUT
PARITY
CAN
BE
ENCODED
IN
A
LINEAR
SIZE
CLASSIFIER
FINDING
METHODS
TO
LEARN
THESE
DEEPER
REPRESENTATIONS
IS
ONE
OF
THE
MAJOR
RE
SEARCH
FRONTIERS
IN
MACHINE
LEARNING
CORRELATION
DOES
NOT
IMPLY
CAUSATION
THE
POINT
THAT
CORRELATION
DOES
NOT
IMPLY
CAUSATION
IS
MADE
SO
OFTEN
THAT
IT
IS
PERHAPS
NOT
WORTH
BELABORING
BUT
EVEN
THOUGH
LEARNERS
OF
THE
KIND
WE
HAVE
BEEN
DISCUSSING
CAN
ONLY
LEARN
CORRELATIONS
THEIR
RESULTS
ARE
OFTEN
TREATED
AS
REPRESENTING
CAUSAL
RELATIONS
ISN
T
THIS
WRONG
IF
SO
THEN
WHY
DO
PEOPLE
DO
IT
REVIEW
ARTICLES
MORE
OFTEN
THAN
NOT
THE
GOAL
OF
LEARNING
PREDICTIVE
MODELS
IS
TO
THE
INTERNET
HAS
LED
TO
THE
CREATION
OF
A
DIGITAL
SOCIETY
WHERE
ALMOST
EVERYTHING
IS
CONNECTED
AND
IS
ACCES
SIBLE
FROM
ANYWHERE
HOWEVER
DESPITE
THEIR
WIDESPREAD
ADOP
TION
TRADITIONAL
IP
NETWORKS
ARE
COMPLEX
AND
VERY
HARD
TO
MANAGE
IT
IS
BOTH
DIFFICULT
TO
CONFIGURE
THE
NETWORK
ACCORDING
TO
PREDEFINED
POLICIES
AND
TO
RECONFIGURE
IT
TO
RESPOND
TO
FAULTS
LOAD
AND
CHANGES
TO
MAKE
MATTERS
EVEN
MORE
DIFFICULT
CURRENT
NETWORKS
ARE
ALSO
VERTICALLY
INTEGRATED
THE
CONTROL
AND
DATA
PLANES
ARE
BUNDLED
TOGETHER
SOFTWARE
DEFINED
NETWORK
ING
SDN
IS
AN
EMERGING
PARADIGM
THAT
PROMISES
TO
CHANGE
THIS
STATE
OF
AFFAIRS
BY
BREAKING
VERTICAL
INTEGRATION
SEPARATING
THE
NETWORK
CONTROL
LOGIC
FROM
THE
UNDERLYING
ROUTERS
AND
SWITCHES
PROMOTING
LOGICAL
CENTRALIZATION
OF
NETWORK
CONTROL
AND
INTRODUCING
THE
ABILITY
TO
PROGRAM
THE
NETWORK
THE
SEPARATION
OF
CONCERNS
INTRODUCED
BETWEEN
THE
DEFINITION
OF
NETWORK
POLICIES
THEIR
IMPLEMENTATION
IN
SWITCHING
HARDWARE
AND
THE
FORWARDING
OF
TRAFFIC
IS
KEY
TO
THE
DESIRED
FLEXIBILITY
BY
BREAKING
THE
NETWORK
CONTROL
PROBLEM
INTO
TRACTABLE
PIECES
SDN
MAKES
IT
EASIER
TO
CREATE
AND
INTRODUCE
NEW
ABSTRACTIONS
IN
NETWORKING
SIMPLIFYING
NETWORK
MANAGEMENT
AND
FACILITATING
NETWORK
EVOLUTION
IN
THIS
PAPER
WE
PRESENT
A
COMPREHENSIVE
SURVEY
ON
SDN
WE
START
BY
INTRODUCING
THE
MOTIVATION
FOR
SDN
EXPLAIN
ITS
MAIN
CONCEPTS
AND
HOW
IT
DIFFERS
FROM
TRADITIONAL
NETWORKING
ITS
ROOTS
AND
THE
STANDARDIZATION
ACTIVITIES
REGARD
ING
THIS
NOVEL
PARADIGM
NEXT
WE
PRESENT
THE
KEY
BUILDING
BLOCKS
OF
AN
SDN
INFRASTRUCTURE
USING
A
BOTTOM
UP
LAYERED
APPROACH
WE
PROVIDE
AN
IN
DEPTH
ANALYSIS
OF
THE
HARDWARE
INFRASTRUCTURE
SOUTHBOUND
AND
NORTHBOUND
APPLICATION
PROG
RAMMING
INTERFACES
APIS
NETWORK
VIRTUALIZATION
LAYERS
NETWORK
OPERATING
SYSTEMS
SDN
CONTROLLERS
NETWORK
PROG
RAMMING
LANGUAGES
AND
NETWORK
APPLICATIONS
WE
ALSO
LOOK
AT
CROSS
LAYER
PROBLEMS
SUCH
AS
DEBUGGING
AND
TROUBLESHOOTING
IN
AN
EFFORT
TO
ANTICIPATE
THE
FUTURE
EVOLUTION
OF
THIS
NEW
PA
RADIGM
WE
DISCUSS
THE
MAIN
ONGOING
RESEARCH
EFFORTS
AND
CHALLENGES
OF
SDN
IN
PARTICULAR
WE
ADDRESS
THE
DESIGN
OF
SWITCHES
AND
CONTROL
PLATFORMSVWITH
A
FOCUS
ON
ASPECTS
SUCH
AS
RESILIENCY
SCALABILITY
PERFORMANCE
SECURITY
AND
DEPENDABILITYVAS
WELL
AS
NEW
OPPORTUNITIES
FOR
CARRIER
TRANS
PORT
NETWORKS
AND
CLOUD
PROVIDERS
LAST
BUT
NOT
LEAST
WE
ANA
LYZE
THE
POSITION
OF
SDN
AS
A
KEY
ENABLER
OF
A
SOFTWARE
DEFINED
ENVIRONMENT
KEYWORDS
CARRIER
GRADE
NETWORKS
DEPENDABILITY
FLOW
BASED
NETWORKING
NETWORK
HYPERVISOR
NETWORK
OPERATING
SYS
MANUSCRIPT
RECEIVED
JUNE
REVISED
OCTOBER
ACCEPTED
NOVEMBER
DATE
OF
CURRENT
VERSION
DECEMBER
TEMS
NOSS
NETWORK
VIRTUALIZATION
OPENFLOW
PROGRAMMABLE
D
KREUTZ
AND
F
M
V
RAMOS
ARE
WITH
THE
DEPARTMENT
OF
INFORMATICS
OF
FACULTY
OF
NETWORKS
PROGRAMMING
LANGUAGES
SCALABILITY
SOFTWARE
SCIENCES
UNIVERSITY
OF
LISBON
LISBON
PORTUGAL
E
MAIL
KREUTZ
IEEE
ORG
FVRAMOS
FC
UL
PT
DEFINED
ENVIRONMENTS
SOFTWARE
DEFINED
NETWORKING
SDN
P
E
VERI
SSIMO
IS
WITH
THE
INTERDISCIPLINARY
CENTRE
FOR
SECURITY
RELIABILITY
AND
TRUST
SNT
UNIVERSITY
OF
LUXEMBOURG
L
WALFERDANGE
LUXEMBOURG
E
MAIL
PAULO
VERISSIMO
UNI
LU
C
E
ROTHENBERG
IS
WITH
THE
SCHOOL
OF
ELECTRICAL
AND
COMPUTER
I
INTRODUCTION
ENGINEERING
FEEC
UNIVERSITY
OF
CAMPINAS
CAMPINAS
BRAZIL
E
MAIL
CHESTEVE
DCA
FEE
UNICAMP
BR
AZODOLMOLKY
IS
WITH
THE
GESELLSCHAFT
FÜR
WISSENSCHAFTLICHE
DATENVERARBEITUNG
THE
DISTRIBUTED
CONTROL
AND
TRANSPORT
NETWORK
PROTOCOLS
MBH
RUNNING
INSIDE
THE
ROUTERS
AND
SWITCHES
ARE
THE
KEY
TECH
GÖTTINGEN
GWDG
GÖTTIGEN
GERMANY
E
MAIL
SIAMAK
AZODOLMOLKY
GWDG
DE
UHLIG
IS
WITH
QUEEN
MARY
UNIVERSITY
OF
LONDON
LONDON
U
K
E
MAIL
STEVE
EECS
QMUL
AC
UK
NOLOGIES
THAT
ALLOW
INFORMATION
IN
THE
FORM
OF
DIGITAL
PACKETS
TO
TRAVEL
AROUND
THE
WORLD
DESPITE
THEIR
WIDE
DIGITAL
OBJECT
IDENTIFIER
JPROC
SPREAD
ADOPTION
TRADITIONAL
IP
NETWORKS
ARE
COMPLEX
AND
SEE
HTTP
WWW
IEEE
ORG
PUBLICATIONS
RIGHTS
INDEX
HTML
Ó
IEEE
PERSONAL
USE
IS
PERMITTED
BUT
REPUBLICATION
REDISTRIBUTION
FOR
REQUIRES
MORE
INFORMATION
IEEE
PERMISSION
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
HARD
TO
MANAGE
TO
EXPRESS
THE
DESIRED
HIGH
LEVEL
NET
WORK
POLICIES
NETWORK
OPERATORS
NEED
TO
CONFIGURE
EACH
INDIVIDUAL
NETWORK
DEVICE
SEPARATELY
USING
LOW
LEVEL
AND
OFTEN
VENDOR
SPECIFIC
COMMANDS
IN
ADDITION
TO
THE
CONFIG
URATION
COMPLEXITY
NETWORK
ENVIRONMENTS
HAVE
TO
ENDURE
THE
DYNAMICS
OF
FAULTS
AND
ADAPT
TO
LOAD
CHANGES
AUTOMA
TIC
RECONFIGURATION
AND
RESPONSE
MECHANISMS
ARE
VIRTUALLY
NONEXISTENT
IN
CURRENT
IP
NETWORKS
ENFORCING
THE
REQUIRED
POLICIES
IN
SUCH
A
DYNAMIC
ENVIRONMENT
IS
THEREFORE
HIGHLY
CHALLENGING
TO
MAKE
IT
EVEN
MORE
COMPLICATED
CURRENT
NETWORKS
ARE
ALSO
VERTICALLY
INTEGRATED
THE
CONTROL
PLANE
THAT
DE
CIDES
HOW
TO
HANDLE
NETWORK
TRAFFIC
AND
THE
DATA
PLANE
THAT
FORWARDS
TRAFFIC
ACCORDING
TO
THE
DECISIONS
MADE
BY
THE
CONTROL
PLANE
ARE
BUNDLED
INSIDE
THE
NETWORKING
DE
VICES
REDUCING
FLEXIBILITY
AND
HINDERING
INNOVATION
AND
EVOLUTION
OF
THE
NETWORKING
INFRASTRUCTURE
THE
TRANSITION
FROM
TO
STARTED
MORE
THAN
A
DECADE
AGO
AND
STILL
LARGELY
INCOMPLETE
BEARS
WITNESS
TO
THIS
CHALLENGE
WHILE
IN
FACT
REPRESENTED
MERELY
A
PROTOCOL
UPDATE
DUE
TO
THE
INERTIA
OF
CURRENT
IP
NETWORKS
A
NEW
ROUTING
PROTOCOL
CAN
TAKE
FIVE
TO
TEN
YEARS
TO
BE
FULLY
DESIGNED
EVALUATED
AND
DEPLOYED
LIKEWISE
A
CLEAN
SLATE
APPROACH
TO
CHANGE
THE
INTERNET
ARCHITECTURE
E
G
REPLACING
IP
IS
REGARDED
AS
A
DAUNTING
TASKVSIMPLY
NOT
FEASIBLE
IN
PRACTICE
ULTIMATELY
THIS
SITUATION
HAS
INFLATED
THE
CAPITAL
AND
OPE
RATIONAL
EXPENSES
OF
RUNNING
AN
IP
NETWORK
SOFTWARE
DEFINED
NETWORKING
SDN
IS
AN
EMERGING
NETWORKING
PARADIGM
THAT
GIVES
HOPE
TO
CHANGE
THE
LIMITATIONS
OF
CURRENT
NETWORK
INFRASTRUCTURES
FIRST
IT
BREAKS
THE
VERTICAL
INTEGRATION
BY
SEPARATING
THE
NETWORK
CONTROL
LOGIC
THE
CONTROL
PLANE
FROM
THE
UNDERLYING
ROUT
ERS
AND
SWITCHES
THAT
FORWARD
THE
TRAFFIC
THE
DATA
PLANE
SECOND
WITH
THE
SEPARATION
OF
THE
CONTROL
AND
DATA
PLANES
NETWORK
SWITCHES
BECOME
SIMPLE
FORWARDING
DEVICES
AND
THE
CONTROL
LOGIC
IS
IMPLEMENTED
IN
A
LOGICALLY
CENTRALIZED
CONTROLLER
OR
NETWORK
OPERATING
SIMPLIFYING
PO
LICY
ENFORCEMENT
AND
NETWORK
RE
CONFIGURATION
AND
EVOL
UTION
A
SIMPLIFIED
VIEW
OF
THIS
ARCHITECTURE
IS
SHOWN
IN
FIG
IT
IS
IMPORTANT
TO
EMPHASIZE
THAT
A
LOGICALLY
CEN
TRALIZED
PROGRAMMATIC
MODEL
DOES
NOT
POSTULATE
A
PHYSI
CALLY
CENTRALIZED
SYSTEM
IN
FACT
THE
NEED
TO
GUARANTEE
ADEQUATE
LEVELS
OF
PERFORMANCE
SCALABILITY
AND
RELIABILITY
WOULD
PRECLUDE
SUCH
A
SOLUTION
INSTEAD
PRODUCTION
LEVEL
SDN
NETWORK
DESIGNS
RESORT
TO
PHYSICALLY
DISTRIBUTED
CON
TROL
PLANES
THE
SEPARATION
OF
THE
CONTROL
PLANE
AND
THE
DATA
PLANE
CAN
BE
REALIZED
BY
MEANS
OF
A
WELL
DEFINED
PROGRAMMING
INTERFACE
BETWEEN
THE
SWITCHES
AND
THE
SDN
CONTROLLER
THE
CONTROLLER
EXERCISES
DIRECT
CONTROL
OVER
THE
STATE
IN
THE
DATA
PLANE
ELEMENTS
VIA
THIS
WELL
DEFINED
APPLICATION
PROG
RAMMING
INTERFACE
API
AS
DEPICTED
IN
FIG
THE
MOST
NOTABLE
EXAMPLE
OF
SUCH
AN
API
IS
OPENFLOW
AN
OPENFLOW
SWITCH
HAS
ONE
OR
MORE
TABLES
OF
PACKET
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
HANDLING
RULES
FLOW
TABLE
EACH
RULE
MATCHES
A
SUBSET
OF
THE
TRAFFIC
AND
PERFORMS
CERTAIN
ACTIONS
DROPPING
FOR
WARDING
MODIFYING
ETC
ON
THE
TRAFFIC
DEPENDING
ON
THE
RULES
INSTALLED
BY
A
CONTROLLER
APPLICATION
AN
OPENFLOW
SWITCH
CANVINSTRUCTED
BY
THE
CONTROLLERVBEHAVE
LIKE
A
ROUTER
SWITCH
FIREWALL
OR
PERFORM
OTHER
ROLES
E
G
LOAD
BALANCER
TRAFFIC
SHAPER
AND
IN
GENERAL
THOSE
OF
A
MIDDLEBOX
AN
IMPORTANT
CONSEQUENCE
OF
THE
SDN
PRINCIPLES
IS
THE
SEPARATION
OF
CONCERNS
INTRODUCED
BETWEEN
THE
DEFINITION
OF
NETWORK
POLICIES
THEIR
IMPLEMENTATION
IN
SWITCHING
HARDWARE
AND
THE
FORWARDING
OF
TRAFFIC
THIS
SEPARATION
IS
KEY
TO
THE
DESIRED
FLEXIBILITY
BREAKING
THE
NETWORK
CONTROL
PROBLEM
INTO
TRACTABLE
PIECES
AND
MAKING
IT
EASIER
TO
CREATE
AND
INTRODUCE
NEW
ABSTRACTIONS
IN
NETWORKING
SIM
PLIFYING
NETWORK
MANAGEMENT
AND
FACILITATING
NETWORK
EVOLUTION
AND
INNOVATION
ALTHOUGH
SDN
AND
OPENFLOW
STARTED
AS
ACADEMIC
EXPERIMENTS
THEY
GAINED
SIGNIFICANT
TRACTION
IN
THE
INDUSTRY
OVER
THE
PAST
FEW
YEARS
MOST
VENDORS
OF
COM
MERCIAL
SWITCHES
NOW
INCLUDE
SUPPORT
OF
THE
OPENFLOW
API
IN
THEIR
EQUIPMENT
THE
SDN
MOMENTUM
WAS
STRONG
ENOUGH
TO
MAKE
GOOGLE
FACEBOOK
YAHOO
MICROSOFT
VERIZON
AND
DEUTSCHE
TELEKOM
FUND
OPEN
NETWORKING
FOUNDATION
ONF
WITH
THE
MAIN
GOAL
OF
PROMOTION
AND
ADOPTION
OF
SDN
THROUGH
OPEN
STANDARDS
DEVELOP
MENT
AS
THE
INITIAL
CONCERNS
WITH
SDN
SCALABILITY
WERE
ADDRESSED
VIN
PARTICULAR
THE
MYTH
THAT
LOGICAL
CEN
TRALIZATION
IMPLIED
A
PHYSICALLY
CENTRALIZED
CONTROLLER
AN
ISSUE
WE
WILL
RETURN
TO
LATER
ONVSDN
IDEAS
HAVE
MATURED
AND
EVOLVED
FROM
AN
ACADEMIC
EXERCISE
TO
A
COMMERCIAL
SUCCESS
GOOGLE
FOR
EXAMPLE
HAS
DEPLOYED
AN
SDN
TO
INTERCONNECT
ITS
DATA
CENTERS
ACROSS
THE
GLOBE
THIS
PRO
DUCTION
NETWORK
HAS
BEEN
IN
DEPLOYMENT
FOR
THREE
YEARS
HELPING
THE
COMPANY
TO
IMPROVE
OPERATIONAL
EFFICIENCY
WILL
USE
THESE
TWO
TERMS
INTERCHANGEABLY
AND
SIGNIFICANTLY
REDUCE
COSTS
VMWARE
NETWORK
FIG
SIMPLIFIED
VIEW
OF
AN
SDN
ARCHITECTURE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
VIRTUALIZATION
PLATFORM
NSX
IS
ANOTHER
EXAMPLE
NSX
IS
A
COMMERCIAL
SOLUTION
THAT
DELIVERS
A
FULLY
FUNC
TIONAL
NETWORK
IN
SOFTWARE
PROVISIONED
INDEPENDENT
OF
THE
UNDERLYING
NETWORKING
DEVICES
ENTIRELY
BASED
AROUND
SDN
PRINCIPLES
AS
A
FINAL
EXAMPLE
THE
WORLD
LARGEST
IT
COMPANIES
FROM
CARRIERS
AND
EQUIPMENT
MANUFACTURERS
TO
CLOUD
PROVIDERS
AND
FINANCIAL
SERVICES
COMPANIES
HAVE
RECENTLY
JOINED
SDN
CONSORTIA
SUCH
AS
THE
ONF
AND
THE
OPENDAYLIGHT
INITIATIVE
ANOTHER
INDICATION
OF
THE
IMPORTANCE
OF
SDN
FROM
AN
INDUSTRIAL
PERSPECTIVE
A
FEW
RECENT
PAPERS
HAVE
SURVEYED
SPECIFIC
ARCHITECTU
RAL
ASPECTS
OF
SDN
AN
OVERVIEW
OF
OPENFLOW
AND
A
SHORT
LITERATURE
REVIEW
CAN
BE
FOUND
IN
AND
THESE
OPENFLOW
ORIENTED
SURVEYS
PRESENT
A
RELATIVELY
SIMPLIFIED
THREE
LAYER
STACK
COMPOSED
OF
HIGH
LEVEL
NET
WORK
SERVICES
CONTROLLERS
AND
THE
CONTROLLER
SWITCH
INTER
FACE
IN
JARRAYA
ET
AL
GO
A
STEP
FURTHER
BY
PROPOSING
A
TAXONOMY
FOR
SDN
HOWEVER
SIMILARLY
TO
THE
PREVIOUS
WORKS
THE
SURVEY
IS
LIMITED
IN
TERMS
OF
SCOPE
AND
IT
DOES
NOT
PROVIDE
AN
IN
DEPTH
TREATMENT
OF
FUNDAMENTAL
ASPECTS
OF
SDN
IN
ESSENCE
EXISTING
SURVEYS
LACK
A
THOROUGH
DIS
CUSSION
OF
THE
ESSENTIAL
BUILDING
BLOCKS
OF
AN
SDN
SUCH
AS
THE
NETWORK
OPERATING
SYSTEMS
NOSS
PROGRAMMING
LAN
FIG
CONDENSED
OVERVIEW
OF
THIS
SURVEY
ON
SDN
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
GUAGES
AND
INTERFACES
THEY
ALSO
FALL
SHORT
ON
THE
ANALYSIS
OF
CROSS
LAYER
ISSUES
SUCH
AS
SCALABILITY
SECURITY
AND
DE
PENDABILITY
A
MORE
COMPLETE
OVERVIEW
OF
ONGOING
RE
SEARCH
EFFORTS
CHALLENGES
AND
RELATED
STANDARDIZATION
ACTIVITIES
IS
ALSO
MISSING
IN
THIS
PAPER
WE
PRESENT
TO
THE
BEST
OF
OUR
KNOWLEDGE
THE
MOST
COMPREHENSIVE
LITERATURE
SURVEY
ON
SDN
TO
DATE
WE
ORGANIZE
THIS
SURVEY
AS
DEPICTED
IN
FIG
WE
START
IN
THE
NEXT
TWO
SECTIONS
BY
EXPLAINING
THE
CONTEXT
INTRODUC
ING
THE
MOTIVATION
FOR
SDN
AND
EXPLAINING
THE
MAIN
CONCEPTS
OF
THIS
NEW
PARADIGM
AND
HOW
IT
DIFFERS
FROM
TRADITIONAL
NETWORKING
OUR
AIM
IN
THE
EARLY
PART
OF
THE
SURVEY
IS
ALSO
TO
EXPLAIN
THAT
SDN
IS
NOT
AS
NOVEL
AS
A
TECHNOLOGICAL
ADVANCE
INDEED
ITS
EXISTENCE
IS
ROOTED
AT
THE
INTERSECTION
OF
A
SERIES
OF
OLD
IDEAS
TECHNOLOGY
DRIV
ERS
AND
CURRENT
AND
FUTURE
NEEDS
THE
CONCEPTS
UNDERLY
ING
SDNVTHE
SEPARATION
OF
THE
CONTROL
AND
DATA
PLANES
THE
FLOW
ABSTRACTION
UPON
WHICH
FORWARDING
DECISIONS
ARE
MADE
THE
LOGICAL
CENTRALIZATION
OF
NETWORK
CONTROL
AND
THE
ABILITY
TO
PROGRAM
THE
NETWORKVARE
NOT
NOVEL
BY
THEMSELVES
HOWEVER
THE
INTEGRATION
OF
ALREADY
TESTED
CONCEPTS
WITH
RECENT
TRENDS
IN
NETWORKINGVNAMELY
THE
AVAILABILITY
OF
MERCHANT
SWITCH
SILICON
AND
THE
HUGE
INTEREST
IN
FEASIBLE
FORMS
OF
NETWORK
VIRTUALIZATIONVARE
LEADING
TO
THIS
PARADIGM
SHIFT
IN
NETWORKING
AS
A
RESULT
OF
THE
HIGH
INDUSTRY
INTEREST
AND
THE
POTENTIAL
TO
CHANGE
THE
STATUS
QUO
OF
NETWORKING
FROM
MULTIPLE
PERSPECTIVES
A
NUMBER
OF
STANDARDIZATION
EFFORTS
AROUND
SDN
ARE
ONGO
ING
AS
WE
ALSO
DISCUSS
IN
SECTION
III
SECTION
IV
IS
THE
CORE
OF
THIS
SURVEY
PRESENTING
AN
EXTENSIVE
AND
COMPREHENSIVE
ANALYSIS
OF
THE
BUILDING
BLOCKS
OF
AN
SDN
INFRASTRUCTURE
USING
A
BOTTOM
UP
LAYERED
APPROACH
THE
OPTION
FOR
A
LAYERED
APPROACH
IS
GROUNDED
ON
THE
FACT
THAT
SDN
ALLOWS
THINKING
OF
NETWORKING
ALONG
TWO
FUNDAMENTAL
CONCEPTS
WHICH
ARE
COMMON
IN
OTHER
DISCIPLINES
OF
COMPUTER
SCIENCE
SEPARATION
OF
CONCERNS
LEVERAGING
THE
CONCEPT
OF
ABSTRACTION
AND
RECURSION
OUR
LAYERED
BOTTOM
UP
APPROACH
DIVIDES
THE
NETWORKING
PROB
LEM
INTO
EIGHT
PARTS
HARDWARE
INFRASTRUCTURE
SOUTH
BOUND
INTERFACES
NETWORK
VIRTUALIZATION
HYPERVISOR
LAYER
BETWEEN
THE
FORWARDING
DEVICES
AND
THE
NOSS
NOSS
SDN
CONTROLLERS
AND
CONTROL
PLATFORMS
NORTHBOUND
INTERFACES
TO
OFFER
A
COMMON
PROGRAMMING
ABSTRACTION
TO
THE
UPPER
LAYERS
MAINLY
THE
NETWORK
APPLI
CATIONS
VIRTUALIZATION
USING
SLICING
TECHNIQUES
PROVID
ED
BY
SPECIAL
PURPOSE
LIBRARIES
OR
PROGRAMMING
LANGUAGES
AND
COMPILERS
NETWORK
PROGRAMMING
LANGUAGES
AND
FINALLY
NETWORK
APPLICATIONS
IN
ADDITION
WE
ALSO
LOOK
AT
CROSS
LAYER
PROBLEMS
SUCH
AS
DEBUGGING
AND
TROUBLESHOOT
ING
MECHANISMS
THE
DISCUSSION
IN
SECTION
V
ON
ONGOING
RESEARCH
EFFORTS
CHALLENGES
FUTURE
WORK
AND
OPPORTUNI
TIES
CONCLUDES
THIS
PAPER
II
STATUS
QUO
IN
NETWORKING
COMPUTER
NETWORKS
CAN
BE
DIVIDED
IN
THREE
PLANES
OF
FUNC
TIONALITY
THE
DATA
CONTROL
AND
MANAGEMENT
PLANES
SEE
FIG
THE
DATA
PLANE
CORRESPONDS
TO
THE
NETWORKING
DE
VICES
WHICH
ARE
RESPONSIBLE
FOR
EFFICIENTLY
FORWARDING
DATA
THE
CONTROL
PLANE
REPRESENTS
THE
PROTOCOLS
USED
TO
POPULATE
THE
FORWARDING
TABLES
OF
THE
DATA
PLANE
ELEMENTS
THE
MANAGEMENT
PLANE
INCLUDES
THE
SOFTWARE
SERVICES
SUCH
AS
SIMPLE
NETWORK
MANAGEMENT
PROTOCOL
SNMP
FIG
LAYERED
VIEW
OF
NETWORKING
FUNCTIONALITY
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
BASED
TOOLS
USED
TO
REMOTELY
MONITOR
AND
CONFIGURE
THE
CONTROL
FUNCTIONALITY
NETWORK
POLICY
IS
DEFINED
IN
THE
MAN
AGEMENT
PLANE
THE
CONTROL
PLANE
ENFORCES
THE
POLICY
AND
THE
DATA
PLANE
EXECUTES
IT
BY
FORWARDING
DATA
ACCORDINGLY
IN
TRADITIONAL
IP
NETWORKS
THE
CONTROL
AND
DATA
PLANES
ARE
TIGHTLY
COUPLED
EMBEDDED
IN
THE
SAME
NETWORKING
DEVICES
AND
THE
WHOLE
STRUCTURE
IS
HIGHLY
DECENTRALIZED
THIS
WAS
CONSIDERED
IMPORTANT
FOR
THE
DESIGN
OF
THE
INTER
NET
IN
THE
EARLY
DAYS
IT
SEEMED
THE
BEST
WAY
TO
GUARANTEE
NETWORK
RESILIENCE
WHICH
WAS
A
CRUCIAL
DESIGN
GOAL
IN
FACT
THIS
APPROACH
HAS
BEEN
QUITE
EFFECTIVE
IN
TERMS
OF
NETWORK
PERFORMANCE
WITH
A
RAPID
INCREASE
OF
LINE
RATE
AND
PORT
DENSITIES
HOWEVER
THE
OUTCOME
IS
A
VERY
COMPLEX
AND
RELATIVELY
STATIC
ARCHITECTURE
AS
HAS
BEEN
OFTEN
REPORTED
IN
THE
NET
WORKING
LITERATURE
E
G
AND
IT
IS
ALSO
THE
FUNDAMENTAL
REASON
WHY
TRADITIONAL
NETWORKS
ARE
RIGID
AND
COMPLEX
TO
MANAGE
AND
CONTROL
THESE
TWO
CHARACTER
ISTICS
ARE
LARGELY
RESPONSIBLE
FOR
A
VERTICALLY
INTEGRATED
IN
DUSTRY
WHERE
INNOVATION
IS
DIFFICULT
NETWORK
MISCONFIGURATIONS
AND
RELATED
ERRORS
ARE
EX
TREMELY
COMMON
IN
TODAY
NETWORKS
FOR
INSTANCE
MORE
THAN
CONFIGURATION
ERRORS
HAVE
BEEN
OBSERVED
IN
BORDER
GATEWAY
PROTOCOL
BGP
ROUTERS
FROM
A
SINGLE
MISCONFIGURED
DEVICE
VERY
UNDESIRED
NETWORK
BEHAVIOR
MAY
RESULT
INCLUDING
AMONG
OTHERS
PACKET
LOSSES
FOR
WARDING
LOOPS
SETTING
UP
OF
UNINTENDED
PATHS
OR
SERVICE
CONTRACT
VIOLATIONS
INDEED
WHILE
RARE
A
SINGLE
MISCON
FIGURED
ROUTER
IS
ABLE
TO
COMPROMISE
THE
CORRECT
OPERATION
OF
THE
WHOLE
INTERNET
FOR
HOURS
TO
SUPPORT
NETWORK
MANAGEMENT
A
SMALL
NUMBER
OF
VENDORS
OFFER
PROPRIETARY
SOLUTIONS
OF
SPECIALIZED
HARD
WARE
OPERATING
SYSTEMS
AND
CONTROL
PROGRAMS
NETWORK
APPLICATIONS
NETWORK
OPERATORS
HAVE
TO
ACQUIRE
AND
MAINTAIN
DIFFERENT
MANAGEMENT
SOLUTIONS
AND
THE
CORRE
SPONDING
SPECIALIZED
TEAMS
THE
CAPITAL
AND
OPERATIONAL
COST
OF
BUILDING
AND
MAINTAINING
A
NETWORKING
INFRASTRUC
TURE
IS
SIGNIFICANT
WITH
LONG
RETURN
ON
INVESTMENT
CYCLES
WHICH
HAMPER
INNOVATION
AND
ADDITION
OF
NEW
FEATURES
AND
SERVICES
FOR
INSTANCE
ACCESS
CONTROL
LOAD
BALANCING
ENERGY
EFFICIENCY
TRAFFIC
ENGINEERING
TO
ALLEVIATE
THE
LACK
OF
IN
PATH
FUNCTIONALITIES
WITHIN
THE
NETWORK
A
MYRIAD
OF
SPECIALIZED
COMPONENTS
AND
MIDDLEBOXES
SUCH
AS
FIRE
WALLS
INTRUSION
DETECTION
SYSTEMS
AND
DEEP
PACKET
INSPEC
TION
ENGINES
PROLIFERATE
IN
CURRENT
NETWORKS
A
RECENT
SURVEY
OF
ENTERPRISE
NETWORKS
SHOWS
THAT
THE
NUMBER
OF
MIDDLEBOXES
IS
ALREADY
ON
PAR
WITH
THE
NUMBER
OF
ROUTERS
IN
CURRENT
NETWORKS
DESPITE
HELPING
IN
PATH
FUNC
TIONALITIES
THE
NET
EFFECT
OF
MIDDLEBOXES
HAS
INCREASED
COMPLEXITY
OF
NETWORK
DESIGN
AND
ITS
OPERATION
III
WHAT
IS
SOFTWARE
DEFINED
NETWORKING
THE
TERM
SDN
WAS
ORIGINALLY
COINED
TO
REPRESENT
THE
IDEAS
AND
WORK
AROUND
OPENFLOW
AT
STANFORD
UNIVERSITY
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
STANFORD
CA
USA
AS
ORIGINALLY
DEFINED
SDN
REFERS
AND
INFORMATION
TECHNOLOGY
BEING
ALREADY
AN
UBIQUITOUS
TO
A
NETWORK
ARCHITECTURE
WHERE
THE
FORWARDING
STATE
IN
THE
FEATURE
OF
MANY
COMPUTER
ARCHITECTURES
AND
SYSTEMS
DATA
PLANE
IS
MANAGED
BY
A
REMOTELY
CONTROLLED
PLANE
DE
IDEALLY
THE
FORWARDING
ABSTRACTION
SHOULD
ALLOW
ANY
COUPLED
FROM
THE
FORMER
THE
NETWORKING
INDUSTRY
HAS
ON
FORWARDING
BEHAVIOR
DESIRED
BY
THE
NETWORK
APPLICATION
MANY
OCCASIONS
SHIFTED
FROM
THIS
ORIGINAL
VIEW
OF
SDN
BY
THE
CONTROL
PROGRAM
WHILE
HIDING
DETAILS
OF
THE
UNDER
REFERRING
TO
ANYTHING
THAT
INVOLVES
SOFTWARE
AS
BEING
SDN
LYING
HARDWARE
OPENFLOW
IS
ONE
REALIZATION
OF
SUCH
AB
WE
THEREFORE
ATTEMPT
IN
THIS
SECTION
TO
PROVIDE
A
MUCH
STRACTION
WHICH
CAN
BE
SEEN
AS
THE
EQUIVALENT
TO
A
DEVICE
LESS
AMBIGUOUS
DEFINITION
OF
SDN
DRIVER
IN
AN
OPERATING
SYSTEM
WE
DEFINE
AN
SDN
AS
A
NETWORK
ARCHITECTURE
WITH
FOUR
THE
DISTRIBUTION
ABSTRACTION
SHOULD
SHIELD
SDN
APPLI
PILLARS
CATIONS
FROM
THE
VAGARIES
OF
DISTRIBUTED
STATE
MAKING
THE
THE
CONTROL
AND
DATA
PLANES
ARE
DECOUPLED
CON
DISTRIBUTED
CONTROL
PROBLEM
A
LOGICALLY
CENTRALIZED
ONE
ITS
TROL
FUNCTIONALITY
IS
REMOVED
FROM
NETWORK
DEVICES
REALIZATION
REQUIRES
A
COMMON
DISTRIBUTION
LAYER
WHICH
IN
THAT
WILL
BECOME
SIMPLE
PACKET
FORWARDING
SDN
RESIDES
IN
THE
NOS
THIS
LAYER
HAS
TWO
ESSENTIAL
ELEMENTS
FUNCTIONS
FIRST
IT
IS
RESPONSIBLE
FOR
INSTALLING
THE
CONTROL
FORWARDING
DECISIONS
ARE
FLOW
BASED
INSTEAD
OF
COMMANDS
ON
THE
FORWARDING
DEVICES
SECOND
IT
COLLECTS
DESTINATION
BASED
A
FLOW
IS
BROADLY
DEFINED
BY
A
STATUS
INFORMATION
ABOUT
THE
FORWARDING
LAYER
NETWORK
SET
OF
PACKET
FIELD
VALUES
ACTING
AS
A
MATCH
FILTER
DEVICES
AND
LINKS
TO
OFFER
A
GLOBAL
NETWORK
VIEW
TO
NET
CRITERION
AND
A
SET
OF
ACTIONS
INSTRUCTIONS
IN
THE
WORK
APPLICATIONS
SDN
OPENFLOW
CONTEXT
A
FLOW
IS
A
SEQUENCE
OF
THE
LAST
ABSTRACTION
IS
SPECIFICATION
WHICH
SHOULD
AL
PACKETS
BETWEEN
A
SOURCE
AND
A
DESTINATION
ALL
LOW
A
NETWORK
APPLICATION
TO
EXPRESS
THE
DESIRED
NETWORK
PACKETS
OF
A
FLOW
RECEIVE
IDENTICAL
SERVICE
POLICIES
BEHAVIOR
WITHOUT
BEING
RESPONSIBLE
FOR
IMPLEMENTING
THAT
AT
THE
FORWARDING
DEVICES
THE
FLOW
BEHAVIOR
ITSELF
THIS
CAN
BE
ACHIEVED
THROUGH
VIRTUALIZATION
ABSTRACTION
ALLOWS
UNIFYING
THE
BEHAVIOR
OF
DIFFER
SOLUTIONS
AS
WELL
AS
NETWORK
PROGRAMMING
LANGUAGES
ENT
TYPES
OF
NETWORK
DEVICES
INCLUDING
ROUTERS
THESE
APPROACHES
MAP
THE
ABSTRACT
CONFIGURATIONS
THAT
THE
SWITCHES
FIREWALLS
AND
MIDDLEBOXES
FLOW
APPLICATIONS
EXPRESS
BASED
ON
A
SIMPLIFIED
ABSTRACT
MODEL
PROGRAMMING
ENABLES
UNPRECEDENTED
FLEXIBILITY
OF
THE
NETWORK
INTO
A
PHYSICAL
CONFIGURATION
FOR
THE
GLOBAL
LIMITED
ONLY
TO
THE
CAPABILITIES
OF
THE
IMPLEMEN
NETWORK
VIEW
EXPOSED
BY
THE
SDN
CONTROLLER
FIG
DE
TED
FLOW
TABLES
PICTS
THE
SDN
ARCHITECTURE
CONCEPTS
AND
BUILDING
BLOCKS
CONTROL
LOGIC
IS
MOVED
TO
AN
EXTERNAL
ENTITY
THE
AS
PREVIOUSLY
MENTIONED
THE
STRONG
COUPLING
BETWEEN
SO
CALLED
SDN
CONTROLLER
OR
NOS
THE
NOS
IS
A
CONTROL
AND
DATA
PLANES
HAS
MADE
IT
DIFFICULT
TO
ADD
NEW
SOFTWARE
PLATFORM
THAT
RUNS
ON
COMMODITY
SERVER
FUNCTIONALITY
TO
TRADITIONAL
NETWORKS
A
FACT
ILLUSTRATED
IN
TECHNOLOGY
AND
PROVIDES
THE
ESSENTIAL
RESOURCES
FIG
THE
COUPLING
OF
THE
CONTROL
AND
DATA
PLANES
AND
ITS
AND
ABSTRACTIONS
TO
FACILITATE
THE
PROGRAMMING
OF
PHYSICAL
EMBEDDING
IN
THE
NETWORK
ELEMENTS
MAKES
THE
FORWARDING
DEVICES
BASED
ON
A
LOGICALLY
CENTRAL
DEVELOPMENT
AND
DEPLOYMENT
OF
NEW
NETWORKING
FEATURES
IZED
ABSTRACT
NETWORK
VIEW
ITS
PURPOSE
IS
THERE
FORE
SIMILAR
TO
THAT
OF
A
TRADITIONAL
OPERATING
SYSTEM
THE
NETWORK
IS
PROGRAMMABLE
THROUGH
SOFTWARE
APPLICATIONS
RUNNING
ON
TOP
OF
THE
NOS
THAT
IN
TERACTS
WITH
THE
UNDERLYING
DATA
PLANE
DEVICES
THIS
IS
A
FUNDAMENTAL
CHARACTERISTIC
OF
SDN
CON
SIDERED
AS
ITS
MAIN
VALUE
PROPOSITION
NOTE
THAT
THE
LOGICAL
CENTRALIZATION
OF
THE
CONTROL
LOGIC
IN
PARTICULAR
OFFERS
SEVERAL
ADDITIONAL
BENEFITS
FIRST
IT
IS
SIMPLER
AND
LESS
ERROR
PRONE
TO
MODIFY
NETWORK
POLICIES
THROUGH
HIGH
LEVEL
LANGUAGES
AND
SOFTWARE
COMPONENTS
COMPARED
WITH
LOW
LEVEL
DEVICE
SPECIFIC
CONFIGURATIONS
SECOND
A
CONTROL
PROGRAM
CAN
AUTOMATICALLY
REACT
TO
SPURIOUS
CHANGES
OF
THE
NETWORK
STATE
AND
THUS
MAINTAIN
THE
HIGH
LEVEL
POLICIES
INTACT
THIRD
THE
CENTRALIZATION
OF
THE
CONTROL
LOGIC
IN
A
CONTROLLER
WITH
GLOBAL
KNOWLEDGE
OF
THE
NETWORK
STATE
SIMPLIFIES
THE
DEVELOPMENT
OF
MORE
SO
PHISTICATED
NETWORKING
FUNCTIONS
SERVICES
AND
APPLICATIONS
FOLLOWING
THE
SDN
CONCEPT
INTRODUCED
IN
AN
SDN
CAN
BE
DEFINED
BY
THREE
FUNDAMENTAL
ABSTRACTIONS
FOR
WARDING
DISTRIBUTION
AND
SPECIFICATION
IN
FACT
ABSTRAC
TIONS
ARE
ESSENTIAL
TOOLS
OF
RESEARCH
IN
COMPUTER
SCIENCE
FIG
SDN
ARCHITECTURE
AND
ITS
FUNDAMENTAL
ABSTRACTIONS
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
LANCING
AND
ROUTING
APPLICATIONS
CAN
BE
COMBINED
SEQUENTIALLY
WITH
LOAD
BALANCING
DECISIONS
HAVING
PRECEDENCE
OVER
ROUTING
POLICIES
A
TERMINOLOGY
TO
IDENTIFY
THE
DIFFERENT
ELEMENTS
OF
AN
SDN
AS
UN
EQUIVOCALLY
AS
POSSIBLE
WE
NOW
PRESENT
THE
ESSENTIAL
TERMINOLOGY
USED
THROUGHOUT
THIS
WORK
FORWARDING
DEVICES
FD
THESE
ARE
HARDWARE
OR
SOFTWARE
BASED
DATA
PLANE
DEVICES
THAT
PERFORM
A
SET
OF
ELEMENTARY
OPERATIONS
THE
FORWARDING
DEVICES
HAVE
WELL
DEFINED
INSTRUCTION
SETS
E
G
FLOW
RULES
USED
TO
TAKE
AC
TIONS
ON
THE
INCOMING
PACKETS
E
G
FORWARD
TO
SPECIFIC
PORTS
DROP
FORWARD
TO
THE
CONTROLLER
REWRITE
SOME
HEADER
THESE
INSTRUCTIONS
ARE
DEFINED
BY
SOUTHBOUND
INTERFACES
E
G
OPENFLOW
FORCES
PROTOCOL
OBLIVIOUS
FORWARDING
POF
AND
ARE
INSTALLED
IN
THE
FORWARDING
DEVICES
BY
THE
SDN
CONTROLLERS
IMPLEMENTING
THE
SOUTHBOUND
PROTOCOLS
DATA
PLANE
DP
FORWARDING
DEVICES
ARE
INTERCON
FIG
TRADITIONAL
NETWORKING
VERSUS
SDN
WITH
SDN
MANAGEMENT
NECTED
THROUGH
WIRELESS
RADIO
CHANNELS
OR
WIRED
CABLES
BECOMES
SIMPLER
AND
MIDDLEBOXES
SERVICES
CAN
BE
DELIVERED
AS
THE
NETWORK
INFRASTRUCTURE
COMPRISES
THE
INTERCONNECTED
SDN
CONTROLLER
APPLICATIONS
FORWARDING
DEVICES
WHICH
REPRESENT
THE
DATA
PLANE
SOUTHBOUND
INTERFACE
SI
THE
INSTRUCTION
SET
OF
THE
E
G
ROUTING
ALGORITHMS
VERY
DIFFICULT
SINCE
IT
WOULD
FORWARDING
DEVICES
IS
DEFINED
BY
THE
SOUTHBOUND
API
IMPLY
A
MODIFICATION
OF
THE
CONTROL
PLANE
OF
ALL
NETWORK
WHICH
IS
PART
OF
THE
SOUTHBOUND
INTERFACE
FURTHERMORE
DEVICESVTHROUGH
THE
INSTALLATION
OF
NEW
FIRMWARE
AND
IN
THE
SI
ALSO
DEFINES
THE
COMMUNICATION
PROTOCOL
BETWEEN
SOME
CASES
HARDWARE
UPGRADES
HENCE
THE
NEW
NETWORK
FORWARDING
DEVICES
AND
CONTROL
PLANE
ELEMENTS
THIS
PRO
ING
FEATURES
ARE
COMMONLY
INTRODUCED
VIA
EXPENSIVE
SPE
TOCOL
FORMALIZES
THE
WAY
THE
CONTROL
AND
DATA
PLANE
ELE
CIALIZED
AND
HARD
TO
CONFIGURE
EQUIPMENT
ALSO
KNOWN
AS
MENTS
INTERACT
MIDDLEBOXES
SUCH
AS
LOAD
BALANCERS
INTRUSION
DETECTION
SYSTEMS
IDSS
AND
FIREWALLS
AMONG
OTHERS
THESE
MID
CONTROL
PLANE
CP
FORWARDING
DEVICES
ARE
PROG
DLEBOXES
NEED
TO
BE
PLACED
STRATEGICALLY
IN
THE
NETWORK
RAMMED
BY
CONTROL
PLANE
ELEMENTS
THROUGH
WELL
DEFINED
MAKING
IT
EVEN
HARDER
TO
LATER
CHANGE
THE
NETWORK
TOPO
SI
EMBODIMENTS
THE
CONTROL
PLANE
CAN
THEREFORE
BE
SEEN
LOGY
CONFIGURATION
AND
FUNCTIONALITY
AS
THE
NETWORK
BRAIN
ALL
CONTROL
LOGIC
RESTS
IN
THE
APPLI
IN
CONTRAST
SDN
DECOUPLES
THE
CONTROL
PLANE
FROM
THE
CATIONS
AND
CONTROLLERS
WHICH
FORM
THE
CONTROL
PLANE
NETWORK
DEVICES
AND
BECOMES
AN
EXTERNAL
ENTITY
THE
NOS
OR
SDN
CONTROLLER
THIS
APPROACH
HAS
SEVERAL
ADVANTAGES
NORTHBOUND
INTERFACE
NI
THE
NOS
CAN
OFFER
AN
API
IT
BECOMES
EASIER
TO
PROGRAM
THESE
APPLICATIONS
TO
APPLICATION
DEVELOPERS
THIS
API
REPRESENTS
A
NORTH
SINCE
THE
ABSTRACTIONS
PROVIDED
BY
THE
CONTROL
PLAT
BOUND
INTERFACE
I
E
A
COMMON
INTERFACE
FOR
DEVELOPING
FORM
AND
OR
THE
NETWORK
PROGRAMMING
LANGUAGES
APPLICATIONS
TYPICALLY
A
NORTHBOUND
INTERFACE
ABSTRACTS
CAN
BE
SHARED
THE
LOW
LEVEL
INSTRUCTION
SETS
USED
BY
SOUTHBOUND
INTER
ALL
APPLICATIONS
CAN
TAKE
ADVANTAGE
OF
THE
SAME
FACES
TO
PROGRAM
FORWARDING
DEVICES
NETWORK
INFORMATION
THE
GLOBAL
NETWORK
VIEW
LEADING
ARGUABLY
TO
MORE
CONSISTENT
AND
EFFECTIVE
MANAGEMENT
PLANE
MP
THE
MANAGEMENT
PLANE
IS
POLICY
DECISIONS
WHILE
REUSING
CONTROL
PLANE
SOFT
THE
SET
OF
APPLICATIONS
THAT
LEVERAGE
THE
FUNCTIONS
OFFERED
WARE
MODULES
BY
THE
NI
TO
IMPLEMENT
NETWORK
CONTROL
AND
OPERATION
THESE
APPLICATIONS
CAN
TAKE
ACTIONS
I
E
RECONFIG
LOGIC
THIS
INCLUDES
APPLICATIONS
SUCH
AS
ROUTING
FIRE
URE
FORWARDING
DEVICES
FROM
ANY
PART
OF
THE
NET
WALLS
LOAD
BALANCERS
MONITORING
AND
SO
FORTH
ESSEN
WORK
THERE
IS
THEREFORE
NO
NEED
TO
DEVISE
A
PRECISE
TIALLY
A
MANAGEMENT
APPLICATION
DEFINES
THE
POLICIES
STRATEGY
ABOUT
THE
LOCATION
OF
THE
NEW
FUNCTIONALITY
WHICH
ARE
ULTIMATELY
TRANSLATED
TO
SOUTHBOUND
SPECIFIC
THE
INTEGRATION
OF
DIFFERENT
APPLICATIONS
BECOMES
INSTRUCTIONS
THAT
PROGRAM
THE
BEHAVIOR
OF
THE
FORWARDING
MORE
STRAIGHTFORWARD
FOR
INSTANCE
LOAD
BA
DEVICES
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
B
ALTERNATIVE
AND
BROADENING
DEFINITIONS
SINCE
ITS
INCEPTION
IN
THE
ORIGINAL
OPEN
FLOW
CENTERED
SDN
TERM
HAS
SEEN
ITS
SCOPE
BROADENED
BEYOND
ARCHITECTURES
WITH
A
CLEANLY
DECOUPLED
CONTROL
PLANE
INTERFACE
THE
DEFINITION
OF
SDN
WILL
LIKELY
CONTINUE
TO
BROADEN
DRIVEN
BY
THE
INDUSTRY
BUSINESS
ORIENTED
VIEWS
ON
SDNVIRRESPECTIVE
OF
THE
DECOUPLING
OF
THE
CONTROL
PLANE
IN
THIS
SURVEY
WE
FOCUS
ON
THE
ORIGINAL
CANONICAL
SDN
DEFINITION
BASED
ON
THE
AFOREMENTIONED
KEY
PILLARS
AND
THE
CONCEPT
OF
LAYERED
ABSTRACTIONS
HOWEVER
FOR
THE
SAKE
OF
COMPLETENESS
AND
CLARITY
WE
ACKNOWLEDGE
ALTERNATIVE
SDN
DEFINITIONS
AS
FOLLOWS
CONTROL
PLANE
BROKER
SDN
A
NETWORKING
APPROACH
THAT
RETAINS
EXISTING
DISTRIBUTED
CONTROL
PLANES
BUT
OFFERS
NEW
APIS
THAT
ALLOW
APPLICATIONS
TO
INTERACT
BIDIRECTION
ALLY
WITH
THE
NETWORK
AN
SDN
CONTROLLERVOFTEN
CALLED
ORCHESTRATION
PLATFORMVACTS
AS
A
BROKER
BETWEEN
THE
AP
PLICATIONS
AND
THE
NETWORK
ELEMENTS
THIS
APPROACH
EFFECTIVELY
PRESENTS
CONTROL
PLANE
DATA
TO
THE
APPLICATION
AND
ALLOWS
A
CERTAIN
DEGREE
OF
NETWORK
PROGRAMMABILITY
BY
MEANS
OF
PLUG
INS
BETWEEN
THE
ORCHESTRATOR
FUNCTION
AND
NETWORK
PROTOCOLS
THIS
API
DRIVEN
APPROACH
CORRESPONDS
TO
A
HYBRID
MODEL
OF
SDN
SINCE
IT
ENABLES
THE
BROKER
TO
MANIPULATE
AND
DIRECTLY
INTERACT
WITH
THE
CONTROL
PLANES
OF
DEVICES
SUCH
AS
ROUTERS
AND
SWITCHES
EXAMPLES
OF
THIS
VIEW
ON
SDN
INCLUDE
RECENT
STANDARDIZATION
EFFORTS
AT
THE
IN
TERNET
ENGINEERING
TASK
FORCE
IETF
SEE
SECTION
III
C
AND
THE
DESIGN
PHILOSOPHY
BEHIND
THE
OPENDAYLIGHT
PRO
JECT
THAT
GOES
BEYOND
THE
OPENFLOW
SPLIT
CONTROL
MODE
OVERLAY
SDN
THIS
IS
A
NETWORKING
APPROACH
WHERE
THE
SOFTWARE
OR
HARDWARE
BASED
NETWORK
EDGE
IS
DYNA
MICALLY
PROGRAMMED
TO
MANAGE
TUNNELS
BETWEEN
HYPER
VISORS
AND
OR
NETWORK
SWITCHES
INTRODUCING
AN
OVERLAY
NETWORK
IN
THIS
HYBRID
NETWORKING
APPROACH
THE
DISTRIB
UTED
CONTROL
PLANE
PROVIDING
THE
UNDERLAY
REMAINS
UN
TOUCHED
THE
CENTRALIZED
CONTROL
PLANE
PROVIDES
A
LOGICAL
OVERLAY
THAT
UTILIZES
THE
UNDERLAY
AS
A
TRANSPORT
NETWORK
THIS
FLAVOR
OF
SDN
FOLLOWS
A
PROACTIVE
MODEL
TO
INSTALL
THE
OVERLAY
TUNNELS
THE
OVERLAY
TUNNELS
USUALLY
TERMINATE
INSIDE
VIRTUAL
SWITCHES
WITHIN
HYPERVISORS
OR
IN
PHYSICAL
DEVICES
ACTING
AS
GATEWAYS
TO
THE
EXISTING
NETWORK
THIS
APPROACH
IS
VERY
POPULAR
IN
RECENT
DATA
CENTER
NETWORK
VIRTUALIZATION
AND
ARE
BASED
ON
A
VARIETY
OF
TUNNELING
TECHNOLOGIES
E
G
STATELESS
TRANSPORT
TUNNELING
VIRTUALIZED
LAYER
NETWORKS
VXLAN
NETWORK
VIR
TUALIZATION
USING
GENERIC
ROUTING
ENCAPSULATION
NVGRE
LOCATOR
ID
SEPARATION
PROTOCOL
LISP
AND
GENERIC
NETWORK
VIRTUALIZATION
ENCAPSULATION
GENEVE
RECENTLY
OTHER
ATTEMPTS
TO
DEFINE
SDN
IN
A
LAYERED
AP
PROACH
HAVE
APPEARED
FROM
A
PRACTICAL
PERSPECTIVE
AND
TRYING
TO
KEEP
BACKWARD
COMPATIBILITY
WITH
EXISTING
NETWORK
MANAGEMENT
APPROACHES
ONE
INITIATIVE
IN
THE
IRTF
SOFTWARE
DEFINED
NETWORKING
RESEARCH
GROUP
SDNRG
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
PROPOSES
A
MANAGEMENT
PLANE
AT
THE
SAME
LEVEL
OF
THE
CONTROL
PLANE
I
E
IT
CLASSIFIES
SOLUTIONS
IN
TWO
CATEGORIES
CONTROL
LOGIC
WITH
CONTROL
PLANE
SOUTHBOUND
INTERFACES
AND
MANAGEMENT
LOGIC
WITH
MANAGEMENT
PLANE
SOUTHBOUND
INTERFACES
IN
OTHER
WORDS
THE
MANAGEMENT
PLANE
CAN
BE
SEEN
AS
A
CONTROL
PLATFORM
THAT
ACCOMMODATES
TRADITIONAL
NETWORK
MANAGEMENT
SERVICES
AND
PROTOCOLS
SUCH
AS
SNMP
BGP
PATH
COMPUTATION
ELEMENT
COMMUNICATION
PROTOCOL
PCEP
AND
NETWORK
CONFIGURATION
PROTOCOL
NETCONF
IN
ADDITION
TO
THE
BROADENING
DEFINITIONS
ABOVE
THE
TERM
SDN
IS
OFTEN
USED
TO
DEFINE
EXTENSIBLE
NETWORK
MAN
AGEMENT
PLANES
E
G
OPENSTACK
WHITEBOX
BARE
METAL
SWITCHES
WITH
OPEN
OPERATING
SYSTEMS
E
G
CUMULUS
LINUX
OPEN
SOURCE
DATA
PLANES
E
G
XORPLUS
QUAGGA
SPECIALIZED
PROGRAMMABLE
HARDWARE
DEVICES
E
G
NETFPGA
VIRTUALIZED
SOFTWARE
BASED
APPLI
ANCES
E
G
OPEN
PLATFORM
FOR
NETWORK
FUNCTIONS
VIRTUALIZA
TION
OPNFV
IN
SPITE
OF
LACKING
A
DECOUPLED
CONTROL
AND
DATA
PLANE
OR
COMMON
INTERFACE
ALONG
ITS
API
HYBRID
SDN
MODELS
ARE
FURTHER
DISCUSSED
IN
SECTION
V
G
C
STANDARDIZATION
ACTIVITIES
THE
STANDARDIZATION
LANDSCAPE
IN
SDN
AND
SDN
RELATED
ISSUES
IS
ALREADY
WIDE
AND
IS
EXPECTED
TO
KEEP
EVOLVING
OVER
TIME
WHILE
SOME
OF
THE
ACTIVITIES
ARE
BEING
CARRIED
OUT
IN
STANDARD
DEVELOPMENT
ORGANIZATIONS
SDOS
OTHER
RELATED
EFFORTS
ARE
ONGOING
AT
INDUSTRIAL
OR
COMMUNITY
CONSORTIA
E
G
OPENDAYLIGHT
OPENSTACK
OPNFV
DELIVERING
RESULTS
OFTEN
CONSIDERED
CANDIDATES
FOR
DE
FACTO
STANDARDS
THESE
RESULTS
OFTEN
COME
IN
THE
FORM
OF
OPEN
SOURCE
IMPLEMENTATIONS
THAT
HAVE
BECOME
THE
COMMON
STRATEGY
TOWARD
ACCELERATING
SDN
AND
RELATED
CLOUD
AND
NETWORKING
TECHNOLOGIES
THE
REASON
FOR
THIS
FRAGMENTATION
IS
DUE
TO
SDN
CONCEPTS
SPANNING
DIFFERENT
AREAS
OF
IT
AND
NETWORKING
BOTH
FROM
A
NETWORK
SEGMENTATION
POINT
OF
VIEW
FROM
ACCESS
TO
CORE
AND
FROM
A
TECHNOLOGY
PERSPECTIVE
FROM
OPTICAL
TO
WIRELESS
TABLE
PRESENTS
A
SUMMARY
OF
THE
MAIN
SDOS
AND
ORGANIZATIONS
CONTRIBUTING
TO
THE
STANDARDIZATION
OF
SDN
AS
WELL
AS
THE
MAIN
OUTCOMES
PRODUCED
TO
DATE
THE
ONF
WAS
CONCEIVED
AS
A
MEMBER
DRIVEN
ORGANI
ZATION
TO
PROMOTE
THE
ADOPTION
OF
SDN
THROUGH
THE
DEVEL
OPMENT
OF
THE
OPENFLOW
PROTOCOL
AS
AN
OPEN
STANDARD
TO
COMMUNICATE
CONTROL
DECISIONS
TO
DATA
PLANE
DEVICES
THE
ONF
IS
STRUCTURED
IN
SEVERAL
WORKING
GROUPS
WGS
SOME
WGS
ARE
FOCUSED
ON
EITHER
DEFINING
EXTENSIONS
TO
THE
OPENFLOW
PROTOCOL
IN
GENERAL
SUCH
AS
THE
EXTENSIBILITY
WG
OR
TAILORED
TO
SPECIFIC
TECHNOLOGICAL
AREAS
EXAMPLES
OF
THE
LATTER
INCLUDE
THE
OPTICAL
TRANSPORT
OT
WG
THE
WIRELESS
AND
MOBILE
W
M
WG
AND
THE
NORTHBOUND
IN
TERFACES
NBI
WG
OTHER
WGS
CENTER
THEIR
ACTIVITY
IN
PROVIDING
NEW
PROTOCOL
CAPABILITIES
TO
ENHANCE
THE
PRO
TOCOL
ITSELF
SUCH
AS
THE
ARCHITECTURE
WG
OR
THE
FORWARDING
ABSTRACTIONS
FA
WG
SIMILAR
TO
HOW
NETWORK
PROGRAMMABILITY
IDEAS
HAVE
BEEN
CONSIDERED
BY
SEVERAL
IETF
WORKING
GROUPS
WGS
IN
THE
PAST
THE
PRESENT
SDN
TREND
IS
ALSO
INFLUENCING
A
TABLE
OPENFLOW
STANDARDIZATION
ACTIVITIES
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
NUMBER
OF
ACTIVITIES
A
RELATED
BODY
THAT
FOCUSES
ON
RE
SEARCH
ASPECTS
FOR
THE
EVOLUTION
OF
THE
INTERNET
IRTF
HAS
CREATED
THE
SDNRG
THIS
GROUP
INVESTIGATES
SDN
FROM
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
VARIOUS
PERSPECTIVES
WITH
THE
GOAL
OF
IDENTIFYING
THE
AP
ING
INNOVATION
INSIDE
THE
NETWORK
BY
ALLOWING
PROGRAM
PROACHES
THAT
CAN
BE
DEFINED
DEPLOYED
AND
USED
IN
THE
MABILITY
AND
ALTOGETHER
CHANGING
THE
NETWORK
OPERATIONAL
NEAR
TERM
AS
WELL
AS
IDENTIFYING
FUTURE
RESEARCH
CHALLENGES
MODEL
THROUGH
AUTOMATION
AND
A
REAL
SHIFT
TO
SOFTWARE
IN
THE
INTERNATIONAL
TELECOMMUNICATIONS
UNION
TELE
BASED
PLATFORMS
COMMUNICATION
SECTOR
ITU
T
SOME
STUDY
GROUPS
SGS
FINALLY
THE
MOBILE
NETWORKING
INDUSTRY
GENERA
HAVE
ALREADY
STARTED
TO
DEVELOP
RECOMMENDATIONS
FOR
TION
PARTNERSHIP
PROJECT
CONSORTIUM
IS
STUDYING
THE
SDN
AND
A
JOINT
COORDINATION
ACTIVITY
ON
SDN
JCA
MANAGEMENT
OF
VIRTUALIZED
NETWORKS
AN
EFFORT
ALIGNED
SDN
HAS
BEEN
ESTABLISHED
TO
COORDINATE
THE
SDN
STAN
WITH
THE
ETSI
NFV
ARCHITECTURE
AND
AS
SUCH
LIKELY
TO
DARDIZATION
WORK
LEVERAGE
FROM
SDN
THE
BROADBAND
FORUM
BBF
IS
WORKING
ON
SDN
TOPICS
THROUGH
THE
SERVICE
INNOVATION
MARKET
REQUIREMENTS
D
HISTORY
OF
SDN
SIMR
WG
THE
OBJECTIVE
OF
THE
BBF
IS
TO
RELEASE
RECOM
ALBEIT
A
FAIRLY
RECENT
CONCEPT
SDN
LEVERAGES
ON
NET
MENDATIONS
FOR
SUPPORTING
SDN
IN
MULTISERVICE
BROADBAND
WORKING
IDEAS
WITH
A
LONGER
HISTORY
IN
PARTICULAR
IT
NETWORKS
INCLUDING
HYBRID
ENVIRONMENTS
WHERE
ONLY
BUILDS
ON
WORK
MADE
ON
PROGRAMMABLE
NETWORKS
SUCH
AS
SOME
OF
THE
NETWORK
EQUIPMENT
IS
SDN
ENABLED
ACTIVE
NETWORKS
PROGRAMMABLE
ATM
NETWORKS
THE
METRO
ETHERNET
FORUM
MEF
IS
APPROACHING
SDN
AND
ON
PROPOSALS
FOR
CONTROL
AND
DATA
PLANE
SEPARA
WITH
THE
AIM
OF
DEFINING
SERVICE
ORCHESTRATION
WITH
APIS
TION
SUCH
AS
THE
NETWORK
CONTROL
POINT
NCP
AND
FOR
EXISTING
NETWORKS
ROUTING
CONTROL
PLATFORM
BCP
AT
THE
IEEE
THE
LAN
MAN
STANDARDS
COMMITTEE
IN
ORDER
TO
PRESENT
A
HISTORICAL
PERSPECTIVE
WE
SUM
HAS
RECENTLY
STARTED
SOME
ACTIVITIES
TO
STANDARDIZE
SDN
MARIZE
IN
TABLE
DIFFERENT
INSTANCES
OF
SDN
RELATED
WORK
CAPABILITIES
ON
ACCESS
NETWORKS
BASED
ON
IEEE
INFRA
PRIOR
TO
SDN
SPLITTING
IT
INTO
FIVE
CATEGORIES
ALONG
WITH
STRUCTURE
THROUGH
THE
PROJECT
FOR
BOTH
WIRED
THE
CATEGORIES
WE
DEFINED
THE
SECOND
AND
THIRD
COLUMNS
OF
AND
WIRELESS
TECHNOLOGIES
TO
EMBRACE
NEW
CONTROL
THE
TABLE
MENTION
PAST
INITIATIVES
PRE
SDN
I
E
BEFORE
THE
INTERFACES
OPENFLOW
BASED
INITIATIVES
THAT
SPRUNG
INTO
THE
SDN
CON
THE
OPTICAL
INTERNETWORKING
FORUM
OIF
CARRIER
WG
CEPT
AND
RECENT
DEVELOPMENTS
THAT
LED
TO
THE
DEFINITION
RELEASED
A
SET
OF
REQUIREMENTS
FOR
TRANSPORT
SDN
THE
INI
OF
SDN
TIAL
ACTIVITIES
HAVE
AS
MAIN
GOAL
TO
DESCRIBE
THE
FEATURES
AND
DATA
PLANE
PROGRAMMABILITY
HAS
A
LONG
HISTORY
ACTIVE
FUNCTIONALITIES
NEEDED
TO
SUPPORT
THE
DEPLOYMENT
OF
SDN
NETWORKS
REPRESENT
ONE
OF
THE
EARLY
ATTEMPTS
ON
CAPABILITIES
IN
CARRIER
TRANSPORT
NETWORKS
THE
OPEN
DATA
BUILDING
NEW
NETWORK
ARCHITECTURES
BASED
ON
THIS
CONCEPT
CENTER
ALLIANCE
ODCA
IS
AN
ORGANIZATION
WORKING
ON
THE
MAIN
IDEA
BEHIND
ACTIVE
NETWORKS
IS
FOR
EACH
NODE
TO
UNIFYING
DATA
CENTER
IN
THE
MIGRATION
TO
CLOUD
COMPUTING
HAVE
THE
CAPABILITY
TO
PERFORM
COMPUTATIONS
ON
OR
MODIFY
ENVIRONMENTS
THROUGH
INTEROPERABLE
SOLUTIONS
THROUGH
THE
CONTENT
OF
PACKETS
TO
THIS
END
ACTIVE
NETWORKS
PRO
THE
DOCUMENTATION
OF
USAGE
MODELS
SPECIFICALLY
ONE
FOR
POSE
TWO
DISTINCT
APPROACHES
PROGRAMMABLE
SWITCHES
AND
SDN
THE
ODCA
IS
DEFINING
NEW
REQUIREMENTS
FOR
CLOUD
CAPSULES
THE
FORMER
DOES
NOT
IMPLY
CHANGES
IN
THE
EXISTING
DEPLOYMENT
THE
ALLIANCE
FOR
TELECOMMUNICATION
INDUSTRY
PACKET
OR
CELL
FORMAT
IT
ASSUMES
THAT
SWITCHING
DEVICES
SOLUTIONS
ATIS
CREATED
A
FOCUS
GROUP
FOR
ANALYZING
OPE
SUPPORT
THE
DOWNLOADING
OF
PROGRAMS
WITH
SPECIFIC
IN
RATIONAL
ISSUES
AND
OPPORTUNITIES
ASSOCIATED
WITH
THE
PROG
STRUCTIONS
ON
HOW
TO
PROCESS
PACKETS
THE
SECOND
APPROACH
RAMMABLE
CAPABILITIES
OF
NETWORK
INFRASTRUCTURE
ON
THE
OTHER
HAND
SUGGESTS
THAT
PACKETS
SHOULD
BE
REPLACED
AT
THE
EUROPEAN
TELECOMMUNICATION
STANDARDS
INSTI
BY
TINY
PROGRAMS
WHICH
ARE
ENCAPSULATED
IN
TRANSMISSION
TUTE
ETSI
EFFORTS
ARE
BEING
DEVOTED
TO
NETWORK
FUNCTION
FRAMES
AND
EXECUTED
AT
EACH
NODE
ALONG
THEIR
PATH
VIRTUALIZATION
NFV
THROUGH
A
NEWLY
DEFINED
INDUSTRY
FORCES
OPENFLOW
AND
POF
REPRESENT
SPECIFICATION
GROUP
ISG
NFV
AND
SDN
CONCEPTS
ARE
RECENT
APPROACHES
FOR
DESIGNING
AND
DEPLOYING
PROGRAM
CONSIDERED
COMPLEMENTARY
SHARING
THE
GOAL
OF
ACCELERAT
MABLE
DATA
PLANE
DEVICES
IN
A
MANNER
DIFFERENT
FROM
TABLE
SUMMARIZED
OVERVIEW
OF
THE
HISTORY
OF
PROGRAMMABLE
NETWORKS
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
ACTIVE
NETWORKS
THESE
NEW
PROPOSALS
RELY
ESSENTIALLY
ON
JUNOS
EXTREMEXOS
AND
SR
OS
DE
MODIFYING
FORWARDING
DEVICES
TO
SUPPORT
FLOW
TABLES
SPITE
BEING
MORE
SPECIALIZED
NOSS
TARGETING
NETWORK
DE
WHICH
CAN
BE
DYNAMICALLY
CONFIGURED
BY
REMOTE
ENTITIES
VICES
SUCH
AS
HIGH
PERFORMANCE
CORE
ROUTERS
THESE
NOSS
THROUGH
SIMPLE
OPERATIONS
SUCH
AS
ADDING
REMOVING
OR
ABSTRACT
THE
UNDERLYING
HARDWARE
TO
THE
NETWORK
OPERATOR
UPDATING
FLOW
RULES
I
E
ENTRIES
ON
THE
FLOW
TABLES
MAKING
IT
EASIER
TO
CONTROL
THE
NETWORK
INFRASTRUCTURE
AS
THE
EARLIEST
INITIATIVES
ON
SEPARATING
DATA
AND
CONTROL
WELL
AS
SIMPLIFYING
THE
DEVELOPMENT
AND
DEPLOYMENT
OF
SIGNALING
DATE
BACK
TO
THE
AND
THE
NCP
NEW
PROTOCOLS
AND
MANAGEMENT
APPLICATIONS
IS
PROBABLY
THE
FIRST
ATTEMPT
TO
SEPARATE
CONTROL
AND
DATA
FINALLY
INITIATIVES
THAT
CAN
BE
SEEN
AS
TECHNOLOGY
PULL
PLANE
SIGNALING
NCPS
WERE
INTRODUCED
BY
AT
T
TO
IM
DRIVERS
ARE
ALSO
WORTH
RECALLING
BACK
IN
THE
A
PROVE
THE
MANAGEMENT
AND
CONTROL
OF
ITS
TELEPHONE
NET
MOVEMENT
TOWARD
OPEN
SIGNALING
BEGAN
TO
HAPPEN
WORK
THIS
CHANGE
PROMOTED
A
FASTER
PACE
OF
INNOVATION
OF
THE
MAIN
MOTIVATION
WAS
TO
PROMOTE
THE
WIDER
ADOPTION
OF
THE
NETWORK
AND
PROVIDED
NEW
MEANS
FOR
IMPROVING
ITS
THE
IDEAS
PROPOSED
BY
PROJECTS
SUCH
AS
NCP
AND
EFFICIENCY
BY
TAKING
ADVANTAGE
OF
THE
GLOBAL
VIEW
OF
THE
TEMPEST
THE
OPEN
SIGNALING
MOVEMENT
WORKED
TO
NETWORK
PROVIDED
BY
NCPS
SIMILARLY
OTHER
INITIATIVES
SUCH
WARD
SEPARATING
THE
CONTROL
AND
DATA
SIGNALING
BY
PROPOS
AS
TEMPEST
FORCES
RCP
AND
PCE
ING
OPEN
AND
PROGRAMMABLE
INTERFACES
CURIOUSLY
A
RATHER
PROPOSED
THE
SEPARATION
OF
THE
CONTROL
AND
DATA
PLANES
SIMILAR
MOVEMENT
CAN
BE
OBSERVED
WITH
THE
RECENT
ADVENT
FOR
IMPROVED
MANAGEMENT
IN
ATM
ETHERNET
BGP
OF
OPENFLOW
AND
SDN
WITH
THE
LEAD
OF
THE
ONF
THIS
AND
MULTIPROTOCOL
LABEL
SWITCHING
MPLS
NETWORKS
TYPE
OF
MOVEMENT
IS
CRUCIAL
TO
PROMOTE
OPEN
TECHNOLOGIES
RESPECTIVELY
INTO
THE
MARKET
HOPEFULLY
LEADING
EQUIPMENT
MANUFACTUR
MORE
RECENTLY
INITIATIVES
SUCH
AS
SANE
ETHANE
ERS
TO
SUPPORT
OPEN
STANDARDS
AND
THUS
FOSTERING
INTEROP
OPENFLOW
NOX
AND
POF
PROPOSED
ERABILITY
COMPETITION
AND
INNOVATION
THE
DECOUPLING
OF
THE
CONTROL
AND
DATA
PLANES
FOR
ETHERNET
FOR
A
MORE
EXTENSIVE
INTELLECTUAL
HISTORY
OF
PROGRAM
NETWORKS
INTERESTINGLY
THESE
RECENT
SOLUTIONS
DO
NOT
RE
MABLE
NETWORKS
AND
SDN
WE
DIRECT
THE
READER
TO
THE
QUIRE
SIGNIFICANT
MODIFICATIONS
ON
THE
FORWARDING
DEVICES
RECENT
PAPER
BY
FEAMSTER
ET
AL
MAKING
THEM
ATTRACTIVE
NOT
ONLY
FOR
THE
NETWORKING
RE
SEARCH
COMMUNITY
BUT
EVEN
MORE
TO
THE
NETWORKING
IN
DUSTRY
OPENFLOW
BASED
DEVICES
FOR
INSTANCE
CAN
EASILY
COEXIST
WITH
TRADITIONAL
ETHERNET
DEVICES
ENABLING
A
IV
SOFTWARE
DEFINED
NETWORKS
BOTTOM
UP
PROGRESSIVE
ADOPTION
I
E
NOT
REQUIRING
A
DISRUPTIVE
AN
SDN
ARCHITECTURE
CAN
BE
DEPICTED
AS
A
COMPOSITION
OF
CHANGE
TO
EXISTING
NETWORKS
DIFFERENT
LAYERS
AS
SHOWN
IN
FIG
B
EACH
LAYER
HAS
ITS
NETWORK
VIRTUALIZATION
HAS
GAINED
A
NEW
TRACTION
WITH
OWN
SPECIFIC
FUNCTIONS
WHILE
SOME
OF
THEM
ARE
ALWAYS
THE
ADVENT
OF
SDN
NEVERTHELESS
NETWORK
VIRTUALIZATION
PRESENT
IN
AN
SDN
DEPLOYMENT
SUCH
AS
THE
SOUTHBOUND
ALSO
HAS
ITS
ROOTS
BACK
IN
THE
THE
TEMPEST
PROJECT
API
NOSS
NORTHBOUND
API
AND
NETWORK
APPLICATIONS
IS
ONE
OF
THE
FIRST
INITIATIVES
TO
INTRODUCE
NETWORK
OTHERS
MAY
BE
PRESENT
ONLY
IN
PARTICULAR
DEPLOYMENTS
SUCH
VIRTUALIZATION
BY
INTRODUCING
THE
CONCEPT
OF
SWITCHLETS
IN
AS
HYPERVISOR
OR
LANGUAGE
BASED
VIRTUALIZATION
ATM
NETWORKS
THE
CORE
IDEA
WAS
TO
ALLOW
MULTIPLE
FIG
PRESENTS
A
TRIFOLD
PERSPECTIVE
OF
SDNS
THE
SDN
SWITCHLETS
ON
TOP
OF
A
SINGLE
ATM
SWITCH
ENABLING
MULTIPLE
LAYERS
ARE
REPRESENTED
IN
FIG
B
AS
EXPLAINED
ABOVE
INDEPENDENT
ATM
NETWORKS
TO
SHARE
THE
SAME
PHYSICAL
FIG
A
AND
C
DEPICTS
A
PLANE
ORIENTED
VIEW
AND
A
SYS
RESOURCES
SIMILARLY
MBONE
WAS
ONE
OF
THE
EARLY
TEM
DESIGN
PERSPECTIVE
RESPECTIVELY
INITIATIVES
THAT
TARGETED
THE
CREATION
OF
VIRTUAL
NETWORK
TO
THE
FOLLOWING
SECTIONS
INTRODUCE
EACH
LAYER
FOLLOWING
POLOGIES
ON
TOP
OF
LEGACY
NETWORKS
OR
OVERLAY
NETWORKS
A
BOTTOM
UP
APPROACH
FOR
EACH
LAYER
THE
CORE
PROPERTIES
THIS
WORK
WAS
FOLLOWED
BY
SEVERAL
OTHER
PROJECTS
SUCH
AS
AND
CONCEPTS
ARE
EXPLAINED
BASED
ON
THE
DIFFERENT
TECH
PLANET
LAB
GENI
AND
VINI
FLOWVISOR
NOLOGIES
AND
SOLUTIONS
ADDITIONALLY
DEBUGGING
AND
TROU
IS
ALSO
WORTH
MENTIONING
AS
ONE
OF
THE
FIRST
RECENT
BLESHOOTING
TECHNIQUES
AND
TOOLS
ARE
DISCUSSED
INITIATIVES
TO
PROMOTE
A
HYPERVISOR
LIKE
VIRTUALIZATION
AR
CHITECTURE
FOR
NETWORK
INFRASTRUCTURES
RESEMBLING
THE
A
LAYER
I
INFRASTRUCTURE
HYPERVISOR
MODEL
COMMON
FOR
COMPUTE
AND
STORAGE
MORE
AN
SDN
INFRASTRUCTURE
SIMILARLY
TO
A
TRADITIONAL
NET
RECENTLY
KOPONEN
ET
AL
PROPOSED
A
NETWORK
VIRTUALIZATION
WORK
IS
COMPOSED
OF
A
SET
OF
NETWORKING
EQUIPMENT
PLATFORM
NVP
FOR
MULTITENANT
DATA
CENTERS
USING
SWITCHES
ROUTERS
AND
MIDDLEBOX
APPLIANCES
THE
MAIN
SDN
AS
A
BASE
TECHNOLOGY
DIFFERENCE
RESIDES
IN
THE
FACT
THAT
THOSE
TRADITIONAL
PHYSICAL
THE
CONCEPT
OF
A
NOS
WAS
REBORN
WITH
THE
INTRODUCTION
DEVICES
ARE
NOW
SIMPLE
FORWARDING
ELEMENTS
WITHOUT
EM
OF
OPENFLOW
BASED
NOSS
SUCH
AS
NOX
ONIX
AND
BEDDED
CONTROL
OR
SOFTWARE
TO
TAKE
AUTONOMOUS
DECISIONS
ONOS
INDEED
NOSS
HAVE
BEEN
IN
EXISTENCE
FOR
THE
NETWORK
INTELLIGENCE
IS
REMOVED
FROM
THE
DATA
PLANE
DECADES
ONE
OF
THE
MOST
WIDELY
KNOWN
AND
DEPLOYED
IS
DEVICES
TO
A
LOGICALLY
CENTRALIZED
CONTROL
SYSTEM
I
E
THE
THE
CISCO
IOS
WHICH
WAS
ORIGINALLY
CONCEIVED
BACK
NOS
AND
APPLICATIONS
AS
SHOWN
IN
FIG
C
MORE
IMPOR
IN
THE
EARLY
OTHER
NOSS
WORTH
MENTIONING
ARE
TANTLY
THESE
NEW
NETWORKS
ARE
BUILT
CONCEPTUALLY
ON
TOP
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
FIG
SOFTWARE
DEFINED
NETWORKS
IN
A
PLANES
B
LAYERS
AND
C
SYSTEM
DESIGN
ARCHITECTURE
OF
OPEN
AND
STANDARD
INTERFACES
E
G
OPENFLOW
A
CRUCIAL
APPROACH
FOR
ENSURING
CONFIGURATION
AND
COMMUNICATION
COMPATIBILITY
AND
INTEROPERABILITY
AMONG
DIFFERENT
DATA
AND
CONTROL
PLANE
DEVICES
IN
OTHER
WORDS
THESE
OPEN
IN
TERFACES
ENABLE
CONTROLLER
ENTITIES
TO
DYNAMICALLY
PROGRAM
HETEROGENEOUS
FORWARDING
DEVICES
SOMETHING
DIFFICULT
IN
TRADITIONAL
NETWORKS
DUE
TO
THE
LARGE
VARIETY
OF
PROPRIETARY
AND
CLOSED
INTERFACES
AND
THE
DISTRIBUTED
NATURE
OF
THE
CONTROL
PLANE
IN
AN
SDN
OPENFLOW
ARCHITECTURE
THERE
ARE
TWO
MAIN
ELEMENTS
THE
CONTROLLERS
AND
THE
FORWARDING
DEVICES
AS
SHOWN
IN
FIG
A
DATA
PLANE
DEVICE
IS
A
HARDWARE
OR
SOFTWARE
ELEMENT
SPECIALIZED
IN
PACKET
FORWARDING
WHILE
A
CONTROLLER
IS
A
SOFTWARE
STACK
THE
NETWORK
BRAIN
RUN
NING
ON
A
COMMODITY
HARDWARE
PLATFORM
AN
OPENFLOW
ENABLED
FORWARDING
DEVICE
IS
BASED
ON
A
PIPELINE
OF
FLOW
TABLES
WHERE
EACH
ENTRY
OF
A
FLOW
TABLE
HAS
THREE
PARTS
A
MATCHING
RULE
ACTIONS
TO
BE
EXECUTED
ON
MATCHING
PACKETS
AND
COUNTERS
THAT
KEEP
STATISTICS
OF
MATCHING
PACKETS
THIS
HIGH
LEVEL
AND
SIMPLIFIED
MODEL
DERIVED
FROM
FIG
OPENFLOW
ENABLED
SDN
DEVICES
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
OPENFLOW
IS
CURRENTLY
THE
MOST
WIDESPREAD
DESIGN
OF
SDN
DATA
PLANE
DEVICES
NEVERTHELESS
OTHER
SPECIFICATIONS
OF
SDN
ENABLED
FORWARDING
DEVICES
ARE
BEING
PURSUED
INCLUDING
POF
AND
THE
NEGOTIABLE
DATAPATH
MODELS
NDMS
FROM
THE
ONF
FORWARDING
ABSTRACTIONS
WORKING
GROUP
FAWG
INSIDE
AN
OPENFLOW
DEVICE
A
PATH
THROUGH
A
SEQUENCE
OF
FLOW
TABLES
DEFINES
HOW
PACKETS
SHOULD
BE
HANDLED
WHEN
A
NEW
PACKET
ARRIVES
THE
LOOKUP
PROCESS
STARTS
IN
THE
FIRST
TABLE
AND
ENDS
EITHER
WITH
A
MATCH
IN
ONE
OF
THE
TABLES
OF
THE
PIPELINE
OR
WITH
A
MISS
WHEN
NO
RULE
IS
FOUND
FOR
THAT
PACKET
A
FLOW
RULE
CAN
BE
DEFINED
BY
COMBINING
DIFFERENT
MATCHING
FIELDS
AS
ILLUSTRATED
IN
FIG
IF
THERE
IS
NO
DEFAULT
RULE
THE
PACKET
WILL
BE
DISCARDED
HOWEVER
THE
COMMON
CASE
IS
TO
INSTALL
A
DEFAULT
RULE
WHICH
TELLS
THE
SWITCH
TO
SEND
THE
PACKET
TO
THE
CONTROLLER
OR
TO
THE
NORMAL
NON
OPENFLOW
PIPELINE
OF
THE
SWITCH
THE
PRIORITY
OF
THE
RULES
FOLLOWS
THE
NATURAL
SEQUENCE
NUMBER
OF
THE
TABLES
AND
THE
ROW
ORDER
IN
A
FLOW
TABLE
POSSIBLE
ACTIONS
INCLUDE
FORWARD
THE
PACKET
TO
OUTGOING
PORT
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
TABLE
DIFFERENT
MATCH
FIELDS
STATISTICS
AND
CAPABILITIES
HAVE
BEEN
ADDED
ON
EACH
OPENFLOW
PROTOCOL
REVISION
THE
NUMBER
OF
REQUIRED
REQ
AND
OPTIONAL
OPT
CAPABILITIES
HAS
GROWN
CONSIDERABLY
ENCAPSULATE
IT
AND
FORWARD
IT
TO
THE
CONTROLLER
DROP
IT
OPTIMIZED
TCAM
MEMORY
THAT
SUPPORTS
FROM
UP
SEND
IT
TO
THE
NORMAL
PROCESSING
PIPELINE
AND
SEND
IT
TO
TO
FLOW
TABLE
ENTRIES
THIS
IS
A
CLEAR
SIGN
THE
NEXT
FLOW
TABLE
OR
TO
SPECIAL
TABLES
SUCH
AS
GROUP
OR
THAT
THE
SIZE
OF
THE
FLOW
TABLES
IS
GROWING
AT
A
PACE
AIMING
METERING
TABLES
INTRODUCED
IN
THE
LATEST
OPENFLOW
PROTOCOL
TO
MEET
THE
NEEDS
OF
FUTURE
SDN
DEPLOYMENTS
NETWORKING
AS
DETAILED
IN
TABLE
EACH
VERSION
OF
THE
OPENFLOW
HARDWARE
MANUFACTURERS
HAVE
PRODUCED
VARIOUS
KINDS
OF
SPECIFICATION
INTRODUCED
NEW
MATCH
FIELDS
INCLUDING
OPENFLOW
ENABLED
DEVICES
AS
IS
SHOWN
IN
TABLE
THESE
ETHERNET
MPLS
TCP
UDP
ETC
HOWEVER
ONLY
DEVICES
RANGE
FROM
EQUIPMENT
FOR
SMALL
BUSINESSES
E
G
A
SUBSET
OF
THOSE
MATCHING
FIELDS
ARE
MANDATORY
TO
BE
GBE
SWITCHES
TO
HIGH
CLASS
DATA
CENTER
EQUIPMENT
E
G
COMPLIANT
TO
A
GIVEN
PROTOCOL
VERSION
SIMILARLY
MANY
AC
HIGH
DENSITY
SWITCH
CHASSIS
WITH
UP
TO
CONNECTIV
TIONS
AND
PORT
TYPES
ARE
OPTIONAL
FEATURES
FLOW
MATCH
ITY
FOR
EDGE
TO
CORE
APPLICATIONS
WITH
TENS
OF
TERABITS
PER
RULES
CAN
BE
BASED
ON
ALMOST
ARBITRARY
COMBINATIONS
OF
BITS
SECOND
OF
SWITCHING
CAPACITY
OF
THE
DIFFERENT
PACKET
HEADERS
USING
BIT
MASKS
FOR
EACH
SOFTWARE
SWITCHES
ARE
EMERGING
AS
ONE
OF
THE
MOST
FIELD
ADDING
NEW
MATCHING
FIELDS
HAS
BEEN
EASED
WITH
THE
PROMISING
SOLUTIONS
FOR
DATA
CENTERS
AND
VIRTUALIZED
NET
EXTENSIBILITY
CAPABILITIES
INTRODUCED
IN
OPENFLOW
WORK
INFRASTRUCTURES
EXAMPLES
OF
SOFTWARE
VERSION
THROUGH
AN
OPENFLOW
EXTENSIBLE
MATCH
BASED
OPENFLOW
SWITCH
IMPLEMENTATIONS
INCLUDE
SWITCH
OXM
BASED
ON
TYPE
LENGTH
VALUE
TLV
STRUCTURES
TO
LIGHT
OPEN
VSWITCH
IMPROVE
THE
OVERALL
PROTOCOL
EXTENSIBILITY
WITH
OPENFLOW
OPENFLOW
REFERENCE
PANTOU
AND
VERSION
TLV
STRUCTURES
HAVE
BEEN
ALSO
ADDED
TO
PORTS
XORPLUS
RECENT
REPORTS
SHOW
THAT
THE
NUMBER
OF
VIR
TABLES
AND
QUEUES
IN
REPLACEMENT
OF
THE
HARD
CODED
TUAL
ACCESS
PORTS
IS
ALREADY
LARGER
THAN
PHYSICAL
ACCESS
PORTS
COUNTERPARTS
OF
EARLIER
PROTOCOL
VERSIONS
ON
DATA
CENTERS
NETWORK
VIRTUALIZATION
HAS
BEEN
ONE
OF
THE
DRIVERS
BEHIND
THIS
TREND
SOFTWARE
SWITCHES
SUCH
AS
OVERVIEW
OF
AVAILABLE
OPENFLOW
DEVICES
SEVERAL
OPEN
VSWITCH
HAVE
BEEN
USED
FOR
MOVING
NETWORK
FUNC
OPENFLOW
ENABLED
FORWARDING
DEVICES
ARE
AVAILABLE
ON
TIONS
TO
THE
EDGE
WITH
THE
CORE
PERFORMING
TRADITIONAL
IP
THE
MARKET
BOTH
AS
COMMERCIAL
AND
OPEN
SOURCE
PRODUCTS
FORWARDING
THUS
ENABLING
NETWORK
VIRTUALIZATION
SEE
TABLE
THERE
ARE
MANY
OFF
THE
SHELF
READY
TO
DE
AN
INTERESTING
OBSERVATION
IS
THE
NUMBER
OF
SMALL
PLOY
OPENFLOW
SWITCHES
AND
ROUTERS
AMONG
OTHER
AP
STARTUP
ENTERPRISES
DEVOTED
TO
SDN
SUCH
AS
BIG
SWITCH
PLIANCES
MOST
OF
THE
SWITCHES
AVAILABLE
ON
THE
MARKET
HAVE
CYAN
PLEXXI
AND
NOVIFLOW
THIS
SEEMS
TO
IMPLY
RELATIVELY
SMALL
TERNARY
CONTENT
ADDRESSABLE
MEMORY
THAT
SDN
IS
SPRINGING
A
MORE
COMPETITIVE
AND
OPEN
NET
TCAMS
WITH
UP
TO
ENTRIES
NONETHELESS
THIS
IS
WORKING
MARKET
ONE
OF
ITS
ORIGINAL
GOALS
OTHER
EFFECTS
OF
CHANGING
AT
A
FAST
PACE
SOME
OF
THE
LATEST
DEVICES
RELEASED
THIS
OPENNESS
TRIGGERED
BY
SDN
INCLUDE
THE
EMERGENCE
OF
IN
THE
MARKET
GO
FAR
BEYOND
THAT
FIGURE
GIGABIT
ETHERNET
SO
CALLED
BARE
METAL
SWITCHES
OR
WHITEBOX
SWITCHES
GBE
SWITCHES
FOR
COMMON
BUSINESS
PURPOSES
ARE
ALREADY
WHERE
SOFTWARE
AND
HARDWARE
ARE
SOLD
SEPARATELY
AND
THE
END
SUPPORTING
UP
TO
LAYER
LAYER
OR
USER
IS
FREE
TO
LOAD
AN
OPERATING
SYSTEM
OF
ITS
CHOICE
EXACT
MATCH
FLOWS
ENTERPRISE
CLASS
SWITCHES
ARE
BEING
DELIVERED
WITH
MORE
THAN
B
LAYER
II
SOUTHBOUND
INTERFACES
LAYER
FLOW
ENTRIES
OTHER
SWITCHING
DEVICES
SOUTHBOUND
INTERFACES
OR
SOUTHBOUND
APIS
ARE
THE
USING
HIGH
PERFORMANCE
CHIPS
E
G
EZCHIP
NP
PROVIDE
CONNECTING
BRIDGES
BETWEEN
CONTROL
AND
FORWARDING
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
TABLE
OPENFLOW
ENABLED
HARDWARE
AND
SOFTWARE
DEVICES
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
ELEMENTS
THUS
BEING
THE
CRUCIAL
INSTRUMENT
FOR
CLEARLY
COLLECTED
BY
THE
CONTROLLER
THIRD
PACKET
IN
MESSAGES
ARE
SEPARATING
CONTROL
AND
DATA
PLANE
FUNCTIONALITY
HOWEVER
SENT
BY
FORWARDING
DEVICES
TO
THE
CONTROLLER
WHEN
THEY
DO
THESE
APIS
ARE
STILL
TIGHTLY
TIED
TO
THE
FORWARDING
ELEMENTS
NOT
KNOWN
WHAT
TO
DO
WITH
A
NEW
INCOMING
FLOW
OR
OF
THE
UNDERLYING
PHYSICAL
OR
VIRTUAL
INFRASTRUCTURE
BECAUSE
THERE
IS
AN
EXPLICIT
SEND
TO
CONTROLLER
ACTION
IN
TYPICALLY
A
NEW
SWITCH
CAN
TAKE
TWO
YEARS
TO
BE
READY
THE
MATCHED
ENTRY
OF
THE
FLOW
TABLE
THESE
INFORMATION
FOR
COMMERCIALIZATION
IF
BUILT
FROM
SCRATCH
WITH
UPGRADE
CHANNELS
ARE
THE
ESSENTIAL
MEANS
TO
PROVIDE
FLOW
LEVEL
CYCLES
THAT
CAN
TAKE
UP
TO
NINE
MONTHS
THE
SOFTWARE
DE
INFORMATION
TO
THE
NOS
VELOPMENT
FOR
A
NEW
PRODUCT
CAN
TAKE
FROM
SIX
MONTHS
TO
ALBEIT
THE
MOST
VISIBLE
OPENFLOW
IS
NOT
THE
ONLY
ONE
YEAR
THE
INITIAL
INVESTMENT
IS
HIGH
AND
RISKY
AS
A
AVAILABLE
SOUTHBOUND
INTERFACE
FOR
SDN
THERE
ARE
OTHER
CENTRAL
COMPONENT
OF
ITS
DESIGN
THE
SOUTHBOUND
APIS
API
PROPOSALS
SUCH
AS
FORCES
OPEN
VSWITCH
REPRESENT
ONE
OF
THE
MAJOR
BARRIERS
FOR
THE
INTRODUCTION
AND
DATABASE
OVSDB
POF
OPFLEX
ACCEPTANCE
OF
ANY
NEW
NETWORKING
TECHNOLOGY
IN
THIS
LIGHT
OPENSTATE
REVISED
OPEN
FLOW
LIBRARY
ROFL
THE
EMERGENCE
OF
SDN
SOUTHBOUND
API
PROPOSALS
SUCH
AS
HARDWARE
ABSTRACTION
LAYER
HAL
AND
OPENFLOW
IS
SEEN
AS
WELCOME
BY
MANY
IN
THE
INDUSTRY
PROGRAMMABLE
ABSTRACTION
OF
DATA
PATH
PAD
THESE
STANDARDS
PROMOTE
INTEROPERABILITY
ALLOWING
THE
DE
FORCES
PROPOSES
A
MORE
FLEXIBLE
APPROACH
TO
TRADITIONAL
PLOYMENT
OF
VENDOR
AGNOSTIC
NETWORK
DEVICES
THIS
HAS
AL
NETWORK
MANAGEMENT
WITHOUT
CHANGING
THE
CURRENT
ARCHI
READY
BEEN
DEMONSTRATED
BY
THE
INTEROPERABILITY
BETWEEN
TECTURE
OF
THE
NETWORK
I
E
WITHOUT
THE
NEED
OF
A
LOGICALLY
OPENFLOW
ENABLED
EQUIPMENTS
FROM
DIFFERENT
VENDORS
CENTRALIZED
EXTERNAL
CONTROLLER
THE
CONTROL
AND
DATA
AS
OF
THIS
WRITING
OPENFLOW
IS
THE
MOST
WIDELY
AC
PLANES
ARE
SEPARATED
BUT
CAN
POTENTIALLY
BE
KEPT
IN
THE
CEPTED
AND
DEPLOYED
OPEN
SOUTHBOUND
STANDARD
FOR
SDN
SAME
NETWORK
ELEMENT
HOWEVER
THE
CONTROL
PART
OF
THE
IT
PROVIDES
A
COMMON
SPECIFICATION
TO
IMPLEMENT
OPEN
NETWORK
ELEMENT
CAN
BE
UPGRADED
ON
THE
FLY
WITH
THIRD
FLOW
ENABLED
FORWARDING
DEVICES
AND
FOR
THE
COMMU
PARTY
FIRMWARE
NICATION
CHANNEL
BETWEEN
DATA
AND
CONTROL
PLANE
DEVICES
OVSDB
IS
ANOTHER
TYPE
OF
SOUTHBOUND
API
DE
E
G
SWITCHES
AND
CONTROLLERS
THE
OPENFLOW
PROTOCOL
SIGNED
TO
PROVIDE
ADVANCED
MANAGEMENT
CAPABILITIES
FOR
PROVIDES
THREE
INFORMATION
SOURCES
FOR
NOSS
FIRST
EVENT
OPEN
VSWITCHES
BEYOND
OPENFLOW
CAPABILITIES
TO
CONFI
BASED
MESSAGES
ARE
SENT
BY
FORWARDING
DEVICES
TO
THE
GURE
THE
BEHAVIOR
OF
FLOWS
IN
A
FORWARDING
DEVICE
AN
OPEN
CONTROLLER
WHEN
A
LINK
OR
PORT
CHANGE
IS
TRIGGERED
SECOND
VSWITCH
OFFERS
OTHER
NETWORKING
FUNCTIONS
FOR
INSTANCE
IT
FLOW
STATISTICS
ARE
GENERATED
BY
THE
FORWARDING
DEVICES
AND
ALLOWS
THE
CONTROL
ELEMENTS
TO
CREATE
MULTIPLE
VIRTUAL
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
SWITCH
INSTANCES
SET
QUALITY
OF
SERVICE
QOS
POLICIES
ON
HAL
IS
NOT
EXACTLY
A
SOUTHBOUND
API
BUT
IS
INTERFACES
ATTACH
INTERFACES
TO
THE
SWITCHES
CONFIGURE
CLOSELY
RELATED
DIFFERENTLY
FROM
THE
AFOREMENTIONED
AP
TUNNEL
INTERFACES
ON
OPENFLOW
DATA
PATHS
MANAGE
QUEUES
PROACHES
HAL
IS
RATHER
A
TRANSLATOR
THAT
ENABLES
A
SOUTH
AND
COLLECT
STATISTICS
THEREFORE
THE
OVSDB
IS
A
COMPLE
BOUND
API
SUCH
AS
OPENFLOW
TO
CONTROL
HETEROGENEOUS
MENTARY
PROTOCOL
TO
OPENFLOW
FOR
OPEN
VSWITCH
HARDWARE
DEVICES
IT
THUS
SITS
BETWEEN
THE
SOUTHBOUND
API
ONE
OF
THE
FIRST
DIRECT
COMPETITORS
OF
OPENFLOW
IS
POF
AND
THE
HARDWARE
DEVICE
RECENT
RESEARCH
EXPERIMENTS
ONE
OF
THE
MAIN
GOALS
OF
POF
IS
TO
ENHANCE
THE
WITH
HAL
HAVE
DEMONSTRATED
THE
VIABILITY
OF
SDN
CONTROL
CURRENT
SDN
FORWARDING
PLANE
WITH
OPENFLOW
SWITCHES
IN
ACCESS
NETWORKS
SUCH
AS
GIGABIT
ETHERNET
PASSIVE
OPTICAL
HAVE
TO
UNDERSTAND
THE
PROTOCOL
HEADERS
TO
EXTRACT
THE
NETWORKS
GEPONS
AND
CABLE
NETWORKS
DOCSISS
REQUIRED
BITS
TO
BE
MATCHED
WITH
THE
FLOW
TABLES
ENTRIES
A
SIMILAR
EFFORT
TO
HAL
IS
PAD
A
PROPOSAL
THAT
THIS
PARSING
REPRESENTS
A
SIGNIFICANT
BURDEN
FOR
DATA
PLANE
GOES
A
BIT
FURTHER
BY
ALSO
WORKING
AS
A
SOUTHBOUND
API
BY
DEVICES
IN
PARTICULAR
IF
WE
CONSIDER
THAT
OPENFLOW
ITSELF
MORE
IMPORTANTLY
PAD
ALLOWS
A
MORE
GENERIC
PROG
VERSION
ALREADY
CONTAINS
MORE
THAN
HEADER
FIELDS
RAMMING
OF
FORWARDING
DEVICES
BY
ENABLING
THE
CONTROL
OF
BESIDES
THIS
INHERENT
COMPLEXITY
BACKWARD
COMPATIBILITY
DATA
PATH
BEHAVIOR
USING
GENERIC
BYTE
OPERATIONS
DEFINING
ISSUES
MAY
ARISE
EVERY
TIME
NEW
HEADER
FIELDS
ARE
INCLUDED
PROTOCOL
HEADERS
AND
PROVIDING
FUNCTION
DEFINITIONS
IN
OR
REMOVED
FROM
THE
PROTOCOL
TO
ACHIEVE
ITS
GOAL
POF
PROPOSES
A
GENERIC
FLOW
INSTRUCTION
SET
FIS
THAT
MAKES
C
LAYER
III
NETWORK
HYPERVISORS
THE
FORWARDING
PLANE
PROTOCOL
OBLIVIOUS
A
FORWARDING
VIRTUALIZATION
IS
ALREADY
A
CONSOLIDATED
TECHNOLOGY
IN
ELEMENT
DOES
NOT
NEED
TO
KNOW
BY
ITSELF
ANYTHING
ABOUT
MODERN
COMPUTERS
THE
FAST
DEVELOPMENTS
OF
THE
PAST
DE
THE
PACKET
FORMAT
IN
ADVANCE
FORWARDING
DEVICES
ARE
SEEN
CADE
HAVE
MADE
VIRTUALIZATION
OF
COMPUTING
PLATFORMS
AS
WHITE
BOXES
WITH
ONLY
PROCESSING
AND
FORWARDING
MAINSTREAM
BASED
ON
RECENT
REPORTS
THE
NUMBER
OF
VIR
CAPABILITIES
IN
POF
PACKET
PARSING
IS
A
CONTROLLER
TASK
THAT
TUAL
SERVERS
HAS
ALREADY
EXCEEDED
THE
NUMBER
OF
PHYSICAL
RESULTS
IN
A
SEQUENCE
OF
GENERIC
KEYS
AND
TABLE
LOOKUP
SERVERS
INSTRUCTIONS
THAT
ARE
INSTALLED
IN
THE
FORWARDING
ELEMENTS
HYPERVISORS
ENABLE
DISTINCT
VIRTUAL
MACHINES
TO
SHARE
THE
BEHAVIOR
OF
DATA
PLANE
DEVICES
IS
THEREFORE
COM
THE
SAME
HARDWARE
RESOURCES
IN
A
CLOUD
INFRASTRUCTURE
AS
PLETELY
UNDER
THE
CONTROL
OF
THE
SDN
CONTROLLER
SIMILAR
TO
A
SERVICE
IAAS
EACH
USER
CAN
HAVE
ITS
OWN
VIRTUAL
RE
A
CENTRAL
PROCESSING
UNIT
CPU
IN
A
COMPUTER
SYSTEM
A
SOURCES
FROM
COMPUTING
TO
STORAGE
THIS
ENABLED
NEW
POF
SWITCH
IS
APPLICATION
AND
PROTOCOL
AGNOSTIC
REVENUE
AND
BUSINESS
MODELS
WHERE
USERS
ALLOCATE
RE
A
RECENT
SOUTHBOUND
INTERFACE
PROPOSAL
IS
OPFLEX
SOURCES
ON
DEMAND
FROM
A
SHARED
PHYSICAL
INFRASTRUCTURE
CONTRARY
TO
OPENFLOW
AND
SIMILAR
TO
FORCES
ONE
AT
A
RELATIVELY
LOW
COST
AT
THE
SAME
TIME
PROVIDERS
OF
THE
IDEAS
BEHIND
OPFLEX
IS
TO
DISTRIBUTE
PART
OF
THE
MAKE
BETTER
USE
OF
THE
CAPACITY
OF
THEIR
INSTALLED
PHYSICAL
COMPLEXITY
OF
MANAGING
THE
NETWORK
BACK
TO
THE
FORWARD
INFRASTRUCTURES
CREATING
NEW
REVENUE
STREAMS
WITHOUT
ING
DEVICES
WITH
THE
AIM
OF
IMPROVING
SCALABILITY
SIMILAR
SIGNIFICANTLY
INCREASING
THEIR
CAPITAL
EXPENDITURE
AND
TO
OPENFLOW
POLICIES
ARE
LOGICALLY
CENTRALIZED
AND
OPERATIONAL
EXPENDITURE
OPEX
COSTS
ONE
OF
THE
ABSTRACTED
FROM
THE
UNDERLYING
IMPLEMENTATION
THE
DIF
INTERESTING
FEATURES
OF
VIRTUALIZATION
TECHNOLOGIES
TODAY
IS
FERENCES
BETWEEN
OPENFLOW
AND
OPFLEX
ARE
A
CLEAR
ILLUS
THE
FACT
THAT
VIRTUAL
MACHINES
CAN
BE
EASILY
MIGRATED
FROM
TRATION
OF
ONE
OF
THE
IMPORTANT
QUESTIONS
TO
BE
ANSWERED
ONE
PHYSICAL
SERVER
TO
ANOTHER
AND
CAN
BE
CREATED
AND
OR
WHEN
DEVISING
A
SOUTHBOUND
INTERFACE
WHERE
TO
PLACE
EACH
DESTROYED
ON
DEMAND
ENABLING
THE
PROVISIONING
OF
ELASTIC
PIECE
OF
THE
OVERALL
FUNCTIONALITY
SERVICES
WITH
FLEXIBLE
AND
EASY
MANAGEMENT
UNFOR
IN
CONTRAST
TO
OPFLEX
AND
POF
OPENSTATE
AND
TUNATELY
VIRTUALIZATION
HAS
BEEN
ONLY
PARTIALLY
REALIZED
IN
ROFL
DO
NOT
PROPOSE
A
NEW
SET
OF
INSTRUCTIONS
FOR
PRACTICE
DESPITE
THE
GREAT
ADVANCES
IN
VIRTUALIZING
COM
PROGRAMMING
DATA
PLANE
DEVICES
OPENSTATE
PROPOSES
EX
PUTING
AND
STORAGE
ELEMENTS
THE
NETWORK
IS
STILL
MOSTLY
TENDED
FINITE
MACHINES
STATEFUL
PROGRAMMING
ABSTRAC
STATICALLY
CONFIGURED
IN
A
BOX
BY
BOX
MANNER
TIONS
AS
AN
EXTENSION
SUPERSET
OF
THE
OPENFLOW
MATCH
THE
MAIN
NETWORK
REQUIREMENTS
CAN
BE
CAPTURED
ALONG
ACTION
ABSTRACTION
FINITE
STATE
MACHINES
ALLOW
THE
IMPLE
TWO
DIMENSIONS
NETWORK
TOPOLOGY
AND
ADDRESS
SPACE
MENTATION
OF
SEVERAL
STATEFUL
TASKS
INSIDE
FORWARDING
DE
DIFFERENT
WORKLOADS
REQUIRE
DIFFERENT
NETWORK
TOPOLOGIES
VICES
I
E
WITHOUT
AUGMENTING
THE
COMPLEXITY
OR
OVERHEAD
AND
SERVICES
SUCH
AS
FLAT
OR
SERVICES
OR
EVEN
MORE
OF
THE
CONTROL
PLANE
FOR
INSTANCE
ALL
TASKS
INVOLVING
ONLY
COMPLEX
SERVICES
FOR
ADVANCED
FUNCTIONALITY
CUR
LOCAL
STATE
SUCH
AS
MEDIA
ACCESS
CONTROL
MAC
LEARNING
RENTLY
IT
IS
VERY
DIFFICULT
FOR
A
SINGLE
PHYSICAL
TOPOLOGY
TO
OPERATIONS
PORT
KNOCKING
OR
STATEFUL
EDGE
FIREWALLS
CAN
BE
SUPPORT
THE
DIVERSE
DEMANDS
OF
APPLICATIONS
AND
SERVICES
PERFORMED
DIRECTLY
ON
THE
FORWARDING
DEVICES
WITHOUT
ANY
SIMILARLY
ADDRESS
SPACE
IS
HARD
TO
CHANGE
IN
CURRENT
NET
EXTRA
CONTROL
PLANE
COMMUNICATION
AND
PROCESSING
DELAY
WORKS
TODAY
VIRTUALIZED
WORKLOADS
HAVE
TO
OPERATE
IN
THE
ROFL
ON
THE
OTHER
HAND
PROPOSES
AN
ABSTRACTION
LAYER
SAME
ADDRESS
OF
THE
PHYSICAL
INFRASTRUCTURE
THEREFORE
IT
IS
THAT
HIDES
THE
DETAILS
OF
THE
DIFFERENT
OPENFLOW
VERSIONS
HARD
TO
KEEP
THE
ORIGINAL
NETWORK
CONFIGURATION
FOR
A
TE
THUS
PROVIDING
A
CLEAN
API
FOR
SOFTWARE
DEVELOPERS
NANT
VIRTUAL
MACHINES
CANNOT
MIGRATE
TO
ARBITRARY
LOCA
SIMPLIFYING
APPLICATION
DEVELOPMENT
TIONS
AND
THE
ADDRESSING
SCHEME
IS
FIXED
AND
HARD
TO
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
CHANGE
FOR
EXAMPLE
CANNOT
BE
USED
BY
THE
VIRTUAL
TOPOLOGY
ADDRESS
AND
CONTROL
FUNCTION
VIRTUALIZATION
ALL
MACHINES
VMS
OF
A
TENANT
IF
THE
UNDERLYING
PHYSICAL
THESE
PROPERTIES
ARE
NECESSARY
IN
MULTITENANT
ENVIRON
FORWARDING
DEVICES
SUPPORT
ONLY
MENTS
WHERE
VIRTUAL
NETWORKS
NEED
TO
BE
MANAGED
AND
TO
PROVIDE
COMPLETE
VIRTUALIZATION
THE
NETWORK
SHOULD
MIGRATED
ACCORDING
TO
THE
COMPUTING
AND
STORAGE
VIRTUAL
PROVIDE
SIMILAR
PROPERTIES
TO
THE
COMPUTING
LAYER
THE
RESOURCES
VIRTUAL
NETWORK
TOPOLOGIES
HAVE
TO
BE
MAPPED
NETWORK
INFRASTRUCTURE
SHOULD
BE
ABLE
TO
SUPPORT
ARBITRARY
ONTO
THE
UNDERLYING
FORWARDING
DEVICES
WITH
VIRTUAL
NETWORK
TOPOLOGIES
AND
ADDRESSING
SCHEMES
EACH
TENANT
ADDRESSES
ALLOWING
TENANTS
TO
COMPLETELY
MANAGE
THEIR
SHOULD
HAVE
THE
ABILITY
TO
CONFIGURE
BOTH
THE
COMPUTING
ADDRESS
SPACE
WITHOUT
DEPENDING
ON
THE
UNDERLYING
NET
NODES
AND
THE
NETWORK
SIMULTANEOUSLY
HOST
MIGRATION
WORK
ELEMENTS
ADDRESSING
SCHEMES
SHOULD
AUTOMATICALLY
TRIGGER
THE
MIGRATION
OF
THE
CORRE
AUTOSLICE
IS
ANOTHER
SDN
BASED
VIRTUALIZATION
SPONDING
VIRTUAL
NETWORK
PORTS
ONE
MIGHT
THINK
THAT
LONG
PROPOSAL
DIFFERENTLY
FROM
FLOWVISOR
IT
FOCUSES
ON
THE
STANDING
VIRTUALIZATION
PRIMITIVES
SUCH
AS
VLANS
VIRTUA
AUTOMATION
OF
THE
DEPLOYMENT
AND
OPERATION
OF
VIRTUAL
LIZED
DOMAIN
NAT
VIRTUALIZED
IP
ADDRESS
SPACE
AND
SDN
VSDN
TOPOLOGIES
WITH
MINIMAL
MEDIATION
OR
ARBI
MPLS
VIRTUALIZED
PATH
ARE
ENOUGH
TO
PROVIDE
FULL
AND
TRATION
BY
THE
SUBSTRATE
NETWORK
OPERATOR
ADDITIONALLY
AUTOMATED
NETWORK
VIRTUALIZATION
HOWEVER
THESE
TECH
AUTOSLICE
TARGETS
ALSO
SCALABILITY
ASPECTS
OF
NETWORK
HYPER
NOLOGIES
ARE
ANCHORED
ON
A
BOX
BY
BOX
BASIS
CONFIGURATION
VISORS
BY
OPTIMIZING
RESOURCE
UTILIZATION
AND
BY
MITIGATING
I
E
THERE
IS
NO
SINGLE
UNIFYING
ABSTRACTION
THAT
CAN
BE
THE
FLOW
TABLE
LIMITATIONS
THROUGH
A
PRECISE
MONITORING
OF
LEVERAGED
TO
CONFIGURE
OR
RECONFIGURE
THE
NETWORK
IN
A
THE
FLOW
TRAFFIC
STATISTICS
SIMILARLY
TO
AUTOSLICE
AUTOV
GLOBAL
MANNER
AS
A
CONSEQUENCE
CURRENT
NETWORK
PROVI
FLOW
ALSO
ENABLES
MULTIDOMAIN
NETWORK
VIRTUALIZA
SIONING
CAN
TAKE
MONTHS
WHILE
COMPUTING
PROVISIONING
TION
HOWEVER
INSTEAD
OF
HAVING
A
SINGLE
THIRD
PARTY
TO
TAKES
ONLY
MINUTES
CONTROL
THE
MAPPING
OF
VSDN
TOPOLOGIES
AS
IS
THE
CASE
OF
THERE
IS
HOPE
THAT
THIS
SITUATION
WILL
CHANGE
WITH
SDN
AUTOSLICE
AUTOVFLOW
USES
A
MULTIPROXY
ARCHITECTURE
THAT
AND
THE
AVAILABILITY
OF
NEW
TUNNELING
TECHNIQUES
E
G
ALLOWS
NETWORK
OWNERS
TO
IMPLEMENT
FLOW
SPACE
VIRTUALI
VXLAN
AND
NVGRE
FOR
INSTANCE
SOLUTIONS
ZATION
IN
AN
AUTONOMOUS
WAY
BY
EXCHANGING
INFORMATION
SUCH
AS
FLOWVISOR
FLOWN
NVP
AMONG
THE
DIFFERENT
DOMAINS
OPENVIRTEX
IBM
SDN
VE
FLOWN
IS
BASED
ON
A
SLIGHTLY
DIFFERENT
RADIOVISOR
AUTOVFLOW
EXTENSIBLE
DATAPATH
CONCEPT
WHEREAS
FLOWVISOR
CAN
BE
COMPARED
TO
A
FULL
VIR
DAEMON
XDPD
OPTICAL
TRANSPORT
NETWORK
TUALIZATION
TECHNOLOGY
FLOWN
IS
ANALOGOUS
TO
A
CONTAINER
VIRTUALIZATION
AND
VERSION
AGNOSTIC
OPENFLOW
SLICING
BASED
VIRTUALIZATION
I
E
A
LIGHTWEIGHT
VIRTUALIZATION
MECHANISMS
HAVE
BEEN
RECENTLY
PROPOSED
EVAL
APPROACH
FLOWN
WAS
ALSO
PRIMARILY
CONCEIVED
TO
ADDRESS
UATED
AND
DEPLOYED
IN
REAL
SCENARIOS
FOR
ON
DEMAND
PRO
MULTITENANCY
IN
THE
CONTEXT
OF
CLOUD
PLATFORMS
IT
IS
DE
VISIONING
OF
VIRTUAL
NETWORKS
SIGNED
TO
BE
SCALABLE
AND
ALLOWS
A
UNIQUE
SHARED
CONTROLLER
PLATFORM
TO
BE
USED
FOR
MANAGING
MULTIPLE
DOMAINS
IN
A
SLICING
THE
NETWORK
FLOWVISOR
IS
ONE
OF
THE
EARLY
CLOUD
ENVIRONMENT
EACH
TENANT
HAS
FULL
CONTROL
OVER
ITS
TECHNOLOGIES
TO
VIRTUALIZE
AN
SDN
ITS
BASIC
IDEA
IS
TO
ALLOW
VIRTUAL
NETWORKS
AND
IS
FREE
TO
DEPLOY
ANY
NETWORK
AB
MULTIPLE
LOGICAL
NETWORKS
SHARE
THE
SAME
OPENFLOW
NET
STRACTION
AND
APPLICATION
ON
TOP
OF
THE
CONTROLLER
PLATFORM
WORKING
INFRASTRUCTURE
FOR
THIS
PURPOSE
IT
PROVIDES
AN
THE
COMPOSITIONAL
SDN
HYPERVISOR
WAS
DESIGNED
ABSTRACTION
LAYER
THAT
MAKES
IT
EASIER
TO
SLICE
A
DATA
PLANE
WITH
A
DIFFERENT
SET
OF
GOALS
ITS
MAIN
OBJECTIVE
IS
TO
ALLOW
BASED
ON
OFF
THE
SHELF
OPENFLOW
ENABLED
SWITCHES
ALLOW
THE
COOPERATIVE
SEQUENTIAL
OR
PARALLEL
EXECUTION
OF
APPLI
ING
MULTIPLE
AND
DIVERSE
NETWORKS
TO
COEXIST
FIVE
SLICING
CATIONS
DEVELOPED
WITH
DIFFERENT
PROGRAMMING
LANGUAGES
DIMENSIONS
ARE
CONSIDERED
IN
FLOWVISOR
BANDWIDTH
TOPO
OR
CONCEIVED
FOR
DIVERSE
CONTROL
PLATFORMS
IT
THUS
OFFERS
LOGY
TRAFFIC
DEVICE
CPU
AND
FORWARDING
TABLES
MOREOVER
INTEROPERABILITY
AND
PORTABILITY
IN
ADDITION
TO
THE
TYPICAL
EACH
NETWORK
SLICE
SUPPORTS
A
CONTROLLER
I
E
MULTIPLE
FUNCTIONS
OF
NETWORK
HYPERVISORS
CONTROLLERS
CAN
COEXIST
ON
TOP
OF
THE
SAME
PHYSICAL
NETWORK
INFRASTRUCTURE
EACH
CONTROLLER
IS
ALLOWED
TO
ACT
ONLY
ON
ITS
COMMERCIAL
MULTITENANT
NETWORK
HYPERVISORS
NONE
OF
OWN
NETWORK
SLICE
IN
GENERAL
TERMS
A
SLICE
IS
DEFINED
AS
A
THE
AFOREMENTIONED
APPROACHES
IS
DESIGNED
TO
ADDRESS
ALL
PARTICULAR
SET
OF
FLOWS
ON
THE
DATA
PLANE
FROM
A
SYSTEM
CHALLENGES
OF
MULTITENANT
DATA
CENTERS
FOR
INSTANCE
TE
DESIGN
PERSPECTIVE
FLOWVISOR
IS
A
TRANSPARENT
PROXY
THAT
NANTS
WANT
TO
BE
ABLE
TO
MIGRATE
THEIR
ENTERPRISE
SOLUTIONS
INTERCEPTS
OPENFLOW
MESSAGES
BETWEEN
SWITCHES
AND
CON
TO
CLOUD
PROVIDERS
WITHOUT
THE
NEED
TO
MODIFY
THE
NETWORK
TROLLERS
IT
PARTITIONS
THE
LINK
BANDWIDTH
AND
FLOW
TABLES
OF
CONFIGURATION
OF
THEIR
HOME
NETWORK
EXISTING
NETWORKING
EACH
SWITCH
EACH
SLICE
RECEIVES
A
MINIMUM
DATA
RATE
AND
TECHNOLOGIES
AND
MIGRATION
STRATEGIES
HAVE
MOSTLY
FAILED
TO
EACH
GUEST
CONTROLLER
GETS
ITS
OWN
VIRTUAL
FLOW
TABLE
IN
THE
MEET
BOTH
TENANT
AND
SERVICE
PROVIDER
REQUIREMENTS
A
SWITCHES
MULTITENANT
ENVIRONMENT
SHOULD
BE
ANCHORED
IN
A
NETWORK
SIMILARLY
TO
FLOWVISOR
OPENVIRTEX
ACTS
AS
HYPERVISOR
CAPABLE
OF
ABSTRACTING
THE
UNDERLAYING
FORWARD
A
PROXY
BETWEEN
THE
NOS
AND
THE
FORWARDING
DEVICES
ING
DEVICES
AND
PHYSICAL
NETWORK
TOPOLOGY
FROM
THE
TE
HOWEVER
ITS
MAIN
GOAL
IS
TO
PROVIDE
VIRTUAL
SDNS
THROUGH
NANTS
MOREOVER
EACH
TENANT
SHOULD
HAVE
ACCESS
TO
CONTROL
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
ABSTRACTIONS
AND
MANAGE
ITS
OWN
VIRTUAL
NETWORKS
INDE
MEMORY
AND
PROVIDE
SECURITY
PROTECTION
MECHANISMS
PENDENTLY
AND
ISOLATED
FROM
OTHER
TENANTS
THESE
FUNCTIONALITIES
AND
RESOURCES
ARE
KEY
ENABLERS
FOR
WITH
THE
MARKET
DEMAND
FOR
NETWORK
VIRTUALIZATION
INCREASED
PRODUCTIVITY
MAKING
THE
LIFE
OF
SYSTEM
AND
AP
AND
THE
RECENT
RESEARCH
ON
SDN
SHOWING
PROMISE
AS
AN
PLICATION
DEVELOPERS
EASIER
THEIR
WIDESPREAD
USE
HAS
SIG
ENABLING
TECHNOLOGY
DIFFERENT
COMMERCIAL
VIRTUALIZATION
NIFICANTLY
CONTRIBUTED
TO
THE
EVOLUTION
OF
VARIOUS
PLATFORMS
BASED
ON
SDN
CONCEPTS
HAVE
STARTED
TO
APPEAR
ECOSYSTEMS
E
G
PROGRAMMING
LANGUAGES
AND
THE
DEVEL
VMWARE
HAS
PROPOSED
A
NETWORK
VIRTUALIZATION
PLATFORM
OPMENT
OF
A
MYRIAD
OF
APPLICATIONS
NVP
THAT
PROVIDES
THE
NECESSARY
ABSTRACTIONS
TO
IN
CONTRAST
NETWORKS
HAVE
SO
FAR
BEEN
MANAGED
AND
ALLOW
THE
CREATION
OF
INDEPENDENT
VIRTUAL
NETWORKS
FOR
CONFIGURED
USING
LOWER
LEVEL
DEVICE
SPECIFIC
INSTRUCTION
LARGE
SCALE
MULTITENANT
ENVIRONMENTS
NVP
IS
A
COMPLETE
SETS
AND
MOSTLY
CLOSED
PROPRIETARY
NOSS
E
G
CISCO
IOS
NETWORK
VIRTUALIZATION
SOLUTION
THAT
ALLOWS
THE
CREATION
OF
AND
JUNIPER
JUNOS
MOREOVER
THE
IDEA
OF
OPERATING
SYS
VIRTUAL
NETWORKS
EACH
WITH
INDEPENDENT
SERVICE
MODEL
TEMS
ABSTRACTING
DEVICE
SPECIFIC
CHARACTERISTICS
AND
PROVID
TOPOLOGIES
AND
ADDRESSING
ARCHITECTURES
OVER
THE
SAME
ING
IN
A
TRANSPARENT
WAY
COMMON
FUNCTIONALITIES
IS
STILL
PHYSICAL
NETWORK
WITH
NVP
TENANTS
DO
NOT
NEED
TO
KNOW
MOSTLY
ABSENT
IN
NETWORKS
FOR
INSTANCE
TODAY
DESIGNERS
OF
ANYTHING
ABOUT
THE
UNDERLYING
NETWORK
TOPOLOGY
CONFIG
ROUTING
PROTOCOLS
NEED
TO
DEAL
WITH
COMPLICATED
DISTRIB
URATION
OR
OTHER
SPECIFIC
ASPECTS
OF
THE
FORWARDING
DEVICES
UTED
ALGORITHMS
WHEN
SOLVING
NETWORKING
PROBLEMS
NET
NVP
NETWORK
HYPERVISOR
TRANSLATES
THE
TENANTS
CONFIG
WORK
PRACTITIONERS
HAVE
THEREFORE
BEEN
SOLVING
THE
SAME
URATIONS
AND
REQUIREMENTS
INTO
LOW
LEVEL
INSTRUCTION
SETS
PROBLEMS
OVER
AND
OVER
AGAIN
TO
BE
INSTALLED
ON
THE
FORWARDING
DEVICES
FOR
THIS
PURPOSE
SDN
IS
PROMISED
TO
FACILITATE
NETWORK
MANAGEMENT
AND
THE
PLATFORM
USES
A
CLUSTER
OF
SDN
CONTROLLERS
TO
MANI
EASE
THE
BURDEN
OF
SOLVING
NETWORKING
PROBLEMS
BY
MEANS
PULATE
THE
FORWARDING
TABLES
OF
THE
OPEN
VSWITCHES
IN
THE
OF
THE
LOGICALLY
CENTRALIZED
CONTROL
OFFERED
BY
A
NOS
HOST
HYPERVISOR
FORWARDING
DECISIONS
ARE
THEREFORE
MADE
AS
WITH
TRADITIONAL
OPERATING
SYSTEMS
THE
CRUCIAL
VALUE
OF
A
EXCLUSIVELY
ON
THE
NETWORK
EDGE
AFTER
THE
DECISION
IS
NOS
IS
TO
PROVIDE
ABSTRACTIONS
ESSENTIAL
SERVICES
AND
MADE
THE
PACKET
IS
TUNNELED
OVER
THE
PHYSICAL
NETWORK
TO
COMMON
APIS
TO
DEVELOPERS
GENERIC
FUNCTIONALITY
AS
NET
THE
RECEIVING
HOST
HYPERVISOR
THE
PHYSICAL
NETWORK
SEES
WORK
STATE
AND
NETWORK
TOPOLOGY
INFORMATION
DEVICE
DIS
NOTHING
BUT
ORDINARY
IP
PACKETS
COVERY
AND
DISTRIBUTION
OF
NETWORK
CONFIGURATION
CAN
BE
IBM
HAS
ALSO
RECENTLY
PROPOSED
SDN
VE
PROVIDED
AS
SERVICES
OF
THE
NOS
WITH
NOSS
TO
DEFINE
ANOTHER
COMMERCIAL
AND
ENTERPRISE
CLASS
NETWORK
VIRTUALIZA
NETWORK
POLICIES
A
DEVELOPER
NO
LONGER
NEEDS
TO
CARE
ABOUT
TION
PLATFORM
SDN
VE
USES
OPENDAYLIGHT
AS
ONE
OF
THE
THE
LOW
LEVEL
DETAILS
OF
DATA
DISTRIBUTION
AMONG
ROUTING
BUILDING
BLOCKS
OF
THE
SO
CALLED
SOFTWARE
DEFINED
ENVIRON
ELEMENTS
FOR
INSTANCE
SUCH
SYSTEMS
CAN
ARGUABLY
CREATE
A
MENTS
SDES
A
TREND
FURTHER
DISCUSSED
IN
SECTION
V
THIS
NEW
ENVIRONMENT
CAPABLE
OF
FOSTERING
INNOVATION
AT
A
SOLUTION
ALSO
OFFERS
A
COMPLETE
IMPLEMENTATION
FRAMEWORK
FASTER
PACE
BY
REDUCING
THE
INHERENT
COMPLEXITY
OF
CREATING
FOR
NETWORK
VIRTUALIZATION
LIKE
NVP
IT
USES
A
HOST
BASED
NEW
NETWORK
PROTOCOLS
AND
NETWORK
APPLICATIONS
OVERLAY
APPROACH
ACHIEVING
ADVANCED
NETWORK
ABSTRACTION
A
NOS
OR
A
CONTROLLER
IS
A
CRITICAL
ELEMENT
IN
AN
SDN
THAT
ENABLES
APPLICATION
LEVEL
NETWORK
SERVICES
IN
LARGE
SCALE
ARCHITECTURE
AS
IT
IS
THE
KEY
SUPPORTING
PIECE
FOR
THE
CONTROL
MULTITENANT
ENVIRONMENTS
INTERESTINGLY
SDN
VE
IS
LOGIC
APPLICATIONS
TO
GENERATE
THE
NETWORK
CONFIGURATION
CAPABLE
OF
SUPPORTING
IN
ONE
SINGLE
INSTANTIATION
UP
TO
BASED
ON
THE
POLICIES
DEFINED
BY
THE
NETWORK
OPERATOR
VIRTUAL
NETWORKS
AND
VIRTUAL
MACHINES
SIMILAR
TO
A
TRADITIONAL
OPERATING
SYSTEM
THE
CONTROL
PLAT
TO
SUMMARIZE
CURRENTLY
THERE
ARE
ALREADY
A
FEW
NET
FORM
ABSTRACTS
THE
LOWER
LEVEL
DETAILS
OF
CONNECTING
AND
WORK
HYPERVISOR
PROPOSALS
LEVERAGING
THE
ADVANCES
OF
INTERACTING
WITH
FORWARDING
DEVICES
I
E
OF
MATERIALIZING
SDN
THERE
ARE
HOWEVER
STILL
SEVERAL
ISSUES
TO
BE
AD
THE
NETWORK
POLICIES
DRESSED
THESE
INCLUDE
AMONG
OTHERS
THE
IMPROVEMENT
OF
VIRTUAL
TO
PHYSICAL
MAPPING
TECHNIQUES
THE
DEFINI
ARCHITECTURE
AND
DESIGN
AXES
THERE
IS
A
VERY
DIVERSE
TION
OF
THE
LEVEL
OF
DETAIL
THAT
SHOULD
BE
EXPOSED
AT
THE
SET
OF
CONTROLLERS
AND
CONTROL
PLATFORMS
WITH
DIFFERENT
DE
LOGICAL
LEVEL
AND
THE
SUPPORT
FOR
NESTED
VIRTUALIZATION
SIGN
AND
ARCHITECTURAL
CHOICES
EXIST
WE
ANTICIPATE
HOWEVER
THIS
ECOSYSTEM
TO
EXPAND
IN
THE
ING
CONTROLLERS
CAN
BE
CATEGORIZED
BASED
ON
MANY
ASPECTS
NEAR
FUTURE
SINCE
NETWORK
VIRTUALIZATION
WILL
MOST
LIKELY
FROM
AN
ARCHITECTURAL
POINT
OF
VIEW
ONE
OF
THE
MOST
RELE
PLAY
A
KEY
ROLE
IN
FUTURE
VIRTUALIZED
ENVIRONMENTS
SIMI
VANT
IS
IF
THEY
ARE
CENTRALIZED
OR
DISTRIBUTED
THIS
IS
ONE
OF
LARLY
TO
THE
EXPANSION
WE
HAVE
BEEN
WITNESSING
IN
VIRTUAL
THE
KEY
DESIGN
AXES
OF
SDN
CONTROL
PLATFORMS
SO
WE
START
IZED
COMPUTING
BY
DISCUSSING
THIS
ASPECT
NEXT
D
LAYER
IV
NETWORK
OPERATING
SYSTEMS
CONTROLLERS
CENTRALIZED
VERSUS
DISTRIBUTED
A
CENTRALIZED
CONTROL
TRADITIONAL
OPERATING
SYSTEMS
PROVIDE
ABSTRACTIONS
LER
IS
A
SINGLE
ENTITY
THAT
MANAGES
ALL
FORWARDING
DEVICES
OF
E
G
HIGH
LEVEL
PROGRAMMING
APIS
FOR
ACCESSING
LOWER
THE
NETWORK
NATURALLY
IT
REPRESENTS
A
SINGLE
POINT
OF
FAIL
LEVEL
DEVICES
MANAGE
THE
CONCURRENT
ACCESS
TO
THE
UNDER
URE
AND
MAY
HAVE
SCALING
LIMITATIONS
A
SINGLE
CONTROLLER
LYING
RESOURCES
E
G
HARD
DRIVE
NETWORK
ADAPTER
CPU
MAY
NOT
BE
ENOUGH
TO
MANAGE
A
NETWORK
WITH
A
LARGE
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
NUMBER
OF
DATA
PLANE
ELEMENTS
CENTRALIZED
CONTROLLERS
CONSISTENCY
SEMANTICS
WHICH
MEANS
THAT
DATA
UPDATES
ON
SUCH
AS
NOX
MT
MAESTRO
BEACON
AND
DISTINCT
NODES
WILL
EVENTUALLY
BE
UPDATED
ON
ALL
CONTROLLER
FLOODLIGHT
HAVE
BEEN
DESIGNED
AS
HIGHLY
CONCURRENT
NODES
THIS
IMPLIES
THAT
THERE
IS
A
PERIOD
OF
TIME
IN
WHICH
SYSTEMS
TO
ACHIEVE
THE
THROUGHPUT
REQUIRED
BY
ENTERPRISE
DISTINCT
NODES
MAY
READ
DIFFERENT
VALUES
OLD
VALUE
OR
NEW
CLASS
NETWORKS
AND
DATA
CENTERS
THESE
CONTROLLERS
ARE
VALUE
FOR
THE
SAME
PROPERTY
STRONG
CONSISTENCY
ON
THE
BASED
ON
MULTITHREADED
DESIGNS
TO
EXPLORE
THE
PARALLELISM
OTHER
HAND
ENSURES
THAT
ALL
CONTROLLER
NODES
WILL
READ
THE
OF
MULTICORE
COMPUTER
ARCHITECTURES
AS
AN
EXAMPLE
MOST
UPDATED
PROPERTY
VALUE
AFTER
A
WRITE
OPERATION
DE
BEACON
CAN
DEAL
WITH
MORE
THAN
MILLION
FLOWS
PER
SEC
SPITE
ITS
IMPACT
ON
SYSTEM
PERFORMANCE
STRONG
CONSISTENCY
OND
BY
USING
LARGE
SIZE
COMPUTING
NODES
OF
CLOUD
PROVIDERS
OFFERS
A
SIMPLER
INTERFACE
TO
APPLICATION
DEVELOPERS
TO
SUCH
AS
AMAZON
OTHER
CENTRALIZED
CONTROLLERS
SUCH
DATE
ONLY
ONIX
ONOS
AND
SMARTLIGHT
PROVIDE
THIS
DATA
AS
TREMA
RYU
NOS
MERIDIAN
AND
CONSISTENCY
MODEL
PROGRAMMABLEFLOW
TARGET
SPECIFIC
ENVIRON
ANOTHER
COMMON
PROPERTY
OF
DISTRIBUTED
CONTROLLERS
IS
MENTS
SUCH
AS
DATA
CENTERS
CLOUD
INFRASTRUCTURES
AND
FAULT
TOLERANCE
WHEN
ONE
NODE
FAILS
ANOTHER
NEIGHBOR
CARRIER
GRADE
NETWORKS
FURTHERMORE
CONTROLLERS
SUCH
AS
NODE
SHOULD
TAKE
OVER
THE
DUTIES
AND
DEVICES
OF
THE
FAILED
ROSEMARY
OFFER
SPECIFIC
FUNCTIONALITY
AND
GUARANTEES
NODE
SO
FAR
DESPITE
SOME
CONTROLLERS
TOLERATING
CRASH
NAMELY
SECURITY
AND
ISOLATION
OF
APPLICATIONS
BY
USING
A
FAILURES
THEY
DO
NOT
TOLERATE
ARBITRARY
FAILURES
WHICH
CONTAINER
BASED
ARCHITECTURE
CALLED
MICRO
NOS
IT
ACHIEVES
MEANS
THAT
ANY
NODE
WITH
AN
ABNORMAL
BEHAVIOR
WILL
NOT
BE
ITS
PRIMARY
GOAL
OF
ISOLATING
APPLICATIONS
AND
PREVENTING
REPLACED
BY
A
POTENTIALLY
WELL
BEHAVED
ONE
THE
PROPAGATION
OF
FAILURES
THROUGHOUT
THE
SDN
STACK
A
SINGLE
CONTROLLER
MAY
BE
ENOUGH
TO
MANAGE
A
SMALL
CONTRARY
TO
A
CENTRALIZED
DESIGN
A
DISTRIBUTED
NOS
CAN
NETWORK
HOWEVER
IT
REPRESENTS
A
SINGLE
POINT
OF
FAILURE
BE
SCALED
UP
TO
MEET
THE
REQUIREMENTS
OF
POTENTIALLY
ANY
SIMILARLY
INDEPENDENT
CONTROLLERS
CAN
BE
SPREAD
ACROSS
THE
ENVIRONMENT
FROM
SMALL
TO
LARGE
SCALE
NETWORKS
A
DIS
NETWORK
EACH
OF
THEM
MANAGING
A
NETWORK
SEGMENT
RE
TRIBUTED
CONTROLLER
CAN
BE
A
CENTRALIZED
CLUSTER
OF
NODES
OR
DUCING
THE
IMPACT
OF
A
SINGLE
CONTROLLER
FAILURE
YET
IF
THE
A
PHYSICALLY
DISTRIBUTED
SET
OF
ELEMENTS
WHILE
THE
FIRST
CONTROL
PLANE
AVAILABILITY
IS
CRITICAL
A
CLUSTER
OF
CONTROLLERS
CAN
ALTERNATIVE
CAN
OFFER
HIGH
THROUGHPUT
FOR
VERY
DENSE
DATA
BE
USED
TO
ACHIEVE
A
HIGHER
DEGREE
OF
AVAILABILITY
AND
OR
FOR
CENTERS
THE
LATTER
CAN
BE
MORE
RESILIENT
TO
DIFFERENT
KINDS
SUPPORTING
MORE
DEVICES
ULTIMATELY
A
DISTRIBUTED
CONTROLLER
OF
LOGICAL
AND
PHYSICAL
FAILURES
A
CLOUD
PROVIDER
THAT
SPANS
CAN
IMPROVE
THE
CONTROL
PLANE
RESILIENCE
AND
SCALABILITY
AND
MULTIPLE
DATA
CENTERS
INTERCONNECTED
BY
A
WIDE
AREA
NET
REDUCE
THE
IMPACT
OF
PROBLEMS
CAUSED
BY
NETWORK
PARTITION
WORK
MAY
REQUIRE
A
HYBRID
APPROACH
WITH
CLUSTERS
OF
CON
FOR
INSTANCE
SDN
RESILIENCY
AS
A
WHOLE
IS
AN
OPEN
CHALLENGE
TROLLERS
INSIDE
EACH
DATA
CENTER
AND
DISTRIBUTED
CONTROLLER
THAT
WILL
BE
FURTHER
DISCUSSED
IN
SECTION
V
C
NODES
IN
THE
DIFFERENT
SITES
ONIX
HYPERFLOW
HP
VAN
SDN
DISSECTING
SDN
CONTROLLER
PLATFORMS
TO
PROVIDE
A
BET
ONOS
DISCO
YANC
PANE
TER
ARCHITECTURAL
OVERVIEW
AND
UNDERSTANDING
THE
DESIGN
OF
SMART
LIGHT
AND
FLEET
ARE
EXAMPLES
OF
DISTRI
A
NOS
TABLE
SUMMARIZES
SOME
OF
THE
MOST
RELEVANT
BUTED
CONTROLLERS
MOST
DISTRIBUTED
CONTROLLERS
OFFER
WEAK
ARCHITECTURAL
AND
DESIGN
PROPERTIES
OF
SDN
CONTROLLERS
AND
TABLE
ARCHITECTURE
AND
DESIGN
ELEMENTS
OF
CONTROL
PLATFORMS
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
FIG
SDN
CONTROL
PLATFORMS
ELEMENTS
SERVICES
AND
INTERFACES
CONTROL
PLATFORMS
WE
HAVE
FOCUSED
ON
THE
ELEMENTS
SER
CORE
CONTROLLER
FUNCTIONS
THE
BASE
NETWORK
SERVICE
VICES
AND
INTERFACES
OF
A
SELECTION
OF
PRODUCTION
LEVEL
FUNCTIONS
ARE
WHAT
WE
CONSIDER
THE
ESSENTIAL
FUNCTIONALITY
WELL
DOCUMENTED
CONTROLLERS
AND
CONTROL
PLATFORMS
EACH
ALL
CONTROLLERS
SHOULD
PROVIDE
AS
AN
ANALOGY
THESE
FUNC
LINE
IN
THE
TABLE
REPRESENTS
A
COMPONENT
WE
CONSIDER
TIONS
ARE
LIKE
BASE
SERVICES
OF
OPERATING
SYSTEMS
SUCH
AS
IMPORTANT
IN
A
MODULAR
AND
SCALABLE
CONTROL
PLATFORM
WE
PROGRAM
EXECUTION
INPUT
OUTPUT
I
O
OPERATIONS
CONTROL
OBSERVE
A
HIGHLY
DIVERSIFIED
ENVIRONMENT
WITH
DIFFERENT
COMMUNICATIONS
PROTECTION
AND
SO
ON
THESE
SERVICES
ARE
PROPERTIES
AND
COMPONENTS
BEING
USED
BY
DISTINCT
CONTROL
USED
BY
OTHER
OPERATING
SYSTEM
LEVEL
SERVICES
AND
USER
PLATFORMS
THIS
IS
NOT
SURPRISING
GIVEN
AN
ENVIRONMENT
APPLICATIONS
IN
A
SIMILAR
WAY
FUNCTIONS
SUCH
AS
TOPOLOGY
WITH
MANY
COMPETITORS
WILLING
TO
BE
AT
THE
FOREFRONT
OF
STATISTICS
NOTIFICATIONS
AND
DEVICE
MANAGEMENT
TOGETHER
SDN
DEVELOPMENT
NOTE
ALSO
THAT
NOT
ALL
COMPONENTS
ARE
WITH
SHORTEST
PATH
FORWARDING
AND
SECURITY
MECHANISMS
AVAILABLE
ON
ALL
PLATFORMS
FOR
INSTANCE
EAST
WESTBOUND
ARE
ESSENTIAL
NETWORK
CONTROL
FUNCTIONALITIES
THAT
NETWORK
APIS
ARE
NOT
REQUIRED
IN
CENTRALIZED
CONTROLLERS
SUCH
AS
APPLICATIONS
MAY
USE
IN
BUILDING
ITS
LOGIC
FOR
INSTANCE
THE
BEACON
IN
FACT
SOME
PLATFORMS
HAVE
VERY
SPECIFIC
NICHE
NOTIFICATION
MANAGER
SHOULD
BE
ABLE
TO
RECEIVE
PROCESS
MARKETS
SUCH
AS
TELECOM
COMPANIES
AND
CLOUD
PROVIDERS
AND
FORWARD
EVENTS
E
G
ALARM
NOTIFICATIONS
SECURITY
SO
THE
REQUIREMENTS
WILL
BE
DIFFERENT
ALARMS
STATE
CHANGES
SECURITY
MECHANISMS
ARE
BASED
ON
THE
ANALYSIS
OF
THE
DIFFERENT
SDN
CONTROLLERS
ANOTHER
EXAMPLE
AS
THEY
ARE
CRITICAL
COMPONENTS
TO
PRO
PROPOSED
TO
DATE
BOTH
THOSE
PRESENTED
IN
TABLE
AND
VIDE
BASIC
ISOLATION
AND
SECURITY
ENFORCEMENT
BETWEEN
OTHERS
SUCH
AS
NOX
MERIDIAN
FORCES
SERVICES
AND
APPLICATIONS
FOR
INSTANCE
RULES
GENERATED
BY
AND
FORTNOX
WE
EXTRACT
SEVERAL
COMMON
ELEMENTS
HIGH
PRIORITY
SERVICES
SHOULD
NOT
BE
OVERWRITTEN
WITH
RULES
AND
PROVIDE
A
FIRST
ATTEMPT
TO
CLEARLY
AND
SYSTEMATICALLY
CREATED
BY
APPLICATIONS
WITH
A
LOWER
PRIORITY
DISSECT
AN
SDN
CONTROL
PLATFORM
IN
FIG
THERE
ARE
AT
LEAST
THREE
RELATIVELY
WELL
DEFINED
LAYERS
IN
SOUTHBOUND
ON
THE
LOWER
LEVEL
OF
CONTROL
PLATFORMS
MOST
OF
THE
EXISTING
CONTROL
PLATFORMS
THE
APPLICATION
THE
SOUTHBOUND
APIS
CAN
BE
SEEN
AS
A
LAYER
OF
DEVICE
DRIV
ORCHESTRATION
AND
SERVICES
THE
CORE
CONTROLLER
FUNC
ERS
THEY
PROVIDE
A
COMMON
INTERFACE
FOR
THE
UPPER
LAYERS
TIONS
AND
THE
ELEMENTS
FOR
SOUTHBOUND
COMMUNICA
WHILE
ALLOWING
A
CONTROL
PLATFORM
TO
USE
DIFFERENT
SOUTH
TIONS
THE
CONNECTION
AT
THE
UPPER
LEVEL
LAYERS
IS
BASED
ON
BOUND
APIS
E
G
OPENFLOW
OVSDB
AND
FORCES
AND
NORTHBOUND
INTERFACES
SUCH
AS
REST
APIS
AND
PROG
PROTOCOL
PLUG
INS
TO
MANAGE
EXISTING
OR
NEW
PHYSICAL
OR
RAMMING
LANGUAGES
SUCH
AS
FML
FRENETIC
AND
VIRTUAL
DEVICES
E
G
SNMP
BGP
AND
NETCONF
THIS
IS
NETCORE
ON
THE
LOWER
LEVEL
PART
OF
A
CONTROL
ESSENTIAL
BOTH
FOR
BACKWARD
COMPATIBILITY
AND
HETEROGE
PLATFORM
SOUTHBOUND
APIS
AND
PROTOCOL
PLUG
INS
INTERFACE
NEITY
I
E
TO
ALLOW
MULTIPLE
PROTOCOLS
AND
DEVICE
THE
FORWARDING
ELEMENTS
THE
CORE
OF
A
CONTROLLER
PLATFORM
MANAGEMENT
CONNECTORS
THEREFORE
ON
THE
DATA
PLANE
A
CAN
BE
CHARACTERIZED
AS
A
COMBINATION
OF
ITS
BASE
NETWORK
MIX
OF
PHYSICAL
DEVICES
VIRTUAL
DEVICES
E
G
OPEN
VSWITCH
SERVICE
FUNCTIONS
AND
THE
VARIOUS
INTERFACES
VROUTER
AND
A
VARIETY
OF
DEVICE
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
FIG
DISTRIBUTED
CONTROLLERS
EAST
WESTBOUND
APIS
INTERFACES
E
G
OPENFLOW
OVSDB
OF
CONFIG
NETCONF
AND
SNMP
CAN
COEXIST
MOST
CONTROLLERS
SUPPORT
ONLY
OPENFLOW
AS
A
SOUTH
BOUND
API
STILL
A
FEW
OF
THEM
SUCH
AS
OPENDAYLIGHT
ONIX
AND
HP
VAN
SDN
CONTROLLER
OFFER
A
WIDER
RANGE
OF
SOUTHBOUND
APIS
AND
OR
PROTOCOL
PLUG
INS
ONIX
SUPPORTS
BOTH
THE
OPENFLOW
AND
OVSDB
PROTOCOLS
THE
HP
VAN
SDN
CONTROLLER
HAS
OTHER
SOUTHBOUND
CONNECTORS
SUCH
AS
AND
AGENTS
OPENDAYLIGHT
GOES
A
STEP
BEYOND
BY
PROVIDING
A
SERVICE
LAYER
ABSTRACTION
SLA
THAT
ALLOWS
SEVERAL
SOUTHBOUND
APIS
AND
PROTOCOLS
TO
COEXIST
IN
THE
CONTROL
PLATFORM
FOR
INSTANCE
ITS
ORIGINAL
ARCHITECTURE
WAS
DESIGNED
TO
SUPPORT
AT
LEAST
SEVEN
DIFFERENT
PROTOCOLS
AND
PLUG
INS
OPENFLOW
OVSDB
NETCONF
PCEP
SNMP
BGP
AND
LISP
FLOW
MAPPING
HENCE
OPENDAY
LIGHT
IS
ONE
OF
THE
FEW
CONTROL
PLATFORMS
BEING
CONCEIVED
TO
SUPPORT
A
BROADER
INTEGRATION
OF
TECHNOLOGIES
IN
A
SINGLE
CONTROL
PLATFORM
EASTBOUND
AND
WESTBOUND
EAST
WESTBOUND
APIS
AS
ILLUSTRATED
IN
FIG
ARE
A
SPECIAL
CASE
OF
INTERFACES
REQUIRED
BY
DISTRIBUTED
CONTROLLERS
CURRENTLY
EACH
CONTROLLER
IMPLE
MENTS
ITS
OWN
EAST
WESTBOUND
API
THE
FUNCTIONS
OF
THESE
INTERFACES
INCLUDE
IMPORT
EXPORT
DATA
BETWEEN
CONTROLLERS
ALGORITHMS
FOR
DATA
CONSISTENCY
MODELS
AND
MONITORING
NOTIFICATION
CAPABILITIES
E
G
CHECK
IF
A
CONTROLLER
IS
UP
OR
NOTIFY
A
TAKE
OVER
ON
A
SET
OF
FORWARDING
DEVICES
SIMILARLY
TO
SOUTHBOUND
AND
NORTHBOUND
INTERFACES
EAST
WESTBOUND
APIS
ARE
ESSENTIAL
COMPONENTS
OF
DISTRIB
UTED
CONTROLLERS
TO
IDENTIFY
AND
PROVIDE
COMMON
COMPA
TIBILITY
AND
INTEROPERABILITY
BETWEEN
DIFFERENT
CONTROLLERS
IT
IS
NECESSARY
TO
HAVE
STANDARD
EAST
WESTBOUND
INTERFACES
FOR
INSTANCE
SDNI
DEFINES
COMMON
REQUIREMENTS
TO
COORDINATE
FLOW
SETUP
AND
EXCHANGE
REACHABILITY
INFORMA
TION
ACROSS
MULTIPLE
DOMAINS
IN
ESSENCE
SUCH
PROTOCOLS
CAN
BE
USED
IN
AN
ORCHESTRATED
AND
INTEROPERABLE
WAY
TO
CREATE
MORE
SCALABLE
AND
DEPENDABLE
DISTRIBUTED
CONTROL
PLATFORMS
INTEROPERABILITY
CAN
BE
LEVERAGED
TO
INCREASE
THE
DIVERSITY
OF
THE
CONTROL
PLATFORM
ELEMENT
INDEED
DIVERSITY
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
INCREASES
THE
SYSTEM
ROBUSTNESS
BY
REDUCING
THE
PROBABIL
ITY
OF
COMMON
FAULTS
SUCH
AS
SOFTWARE
FAULTS
OTHER
PROPOSALS
THAT
TRY
TO
DEFINE
INTERFACES
BETWEEN
CONTROLLERS
INCLUDE
ONIX
DATA
IMPORT
EXPORT
FUNCTIONS
FORCES
CE
CE
INTERFACE
FORCES
INTRA
NE
COLD
STANDBY
MECHANISMS
FOR
HIGH
AVAILABILITY
AND
DISTRIB
UTED
DATA
STORES
AN
EAST
WESTBOUND
API
REQUIRES
ADVANCED
DATA
DISTRIBUTION
MECHANISMS
SUCH
AS
THE
ADVANCED
MESSAGE
QUEUING
PROTOCOL
AMQP
USED
BY
DISCO
TECHNIQUES
FOR
DISTRIBUTED
CONCURRENT
AND
CONSISTENT
POLICY
COMPOSITION
TRANSACTIONAL
DATABASES
AND
DHTS
AS
USED
IN
ONIX
OR
ADVANCED
ALGORITHMS
FOR
STRONG
CONSISTENCY
AND
FAULT
TOLERANCE
IN
A
MULTIDOMAIN
SETUP
EAST
WESTBOUND
APIS
MAY
RE
QUIRE
ALSO
MORE
SPECIFIC
COMMUNICATION
PROTOCOLS
BETWEEN
SDN
DOMAIN
CONTROLLERS
SOME
OF
THE
ESSENTIAL
FUNC
TIONS
OF
SUCH
PROTOCOLS
ARE
TO
COORDINATE
FLOW
SETUP
ORIGI
NATED
BY
APPLICATIONS
EXCHANGE
REACHABILITY
INFORMATION
TO
FACILITATE
INTER
SDN
ROUTING
REACHABILITY
UPDATE
TO
KEEP
THE
NETWORK
STATE
CONSISTENT
AMONG
OTHERS
ANOTHER
IMPORTANT
ISSUE
REGARDING
EAST
WESTBOUND
IN
TERFACES
IS
HETEROGENEITY
FOR
INSTANCE
BESIDES
COMMUNI
CATING
WITH
PEER
SDN
CONTROLLERS
CONTROLLERS
MAY
ALSO
NEED
TO
COMMUNICATE
WITH
SUBORDINATE
CONTROLLERS
IN
A
HIERARCHY
OF
CONTROLLERS
AND
NON
SDN
CONTROLLERS
AS
IS
THE
CASE
OF
CLOSED
FLOW
TO
BE
INTEROPERABLE
EAST
WESTBOUND
INTERFACES
THUS
NEED
TO
ACCOMMODATE
DIF
FERENT
CONTROLLER
INTERFACES
WITH
THEIR
SPECIFIC
SET
OF
SER
VICES
AND
THE
DIVERSE
CHARACTERISTICS
OF
THE
UNDERLYING
INFRASTRUCTURE
INCLUDING
THE
DIVERSITY
OF
TECHNOLOGY
THE
GEOGRAPHIC
SPAN
AND
SCALE
OF
THE
NETWORK
AND
THE
DISTINC
TION
BETWEEN
WAN
AND
LANVPOTENTIALLY
ACROSS
ADMINIS
TRATIVE
BOUNDARIES
IN
THOSE
CASES
DIFFERENT
INFORMATION
HAS
TO
BE
EXCHANGED
BETWEEN
CONTROLLERS
INCLUDING
ADJA
CENCY
AND
CAPABILITY
DISCOVERY
TOPOLOGY
INFORMATION
TO
THE
EXTENT
OF
THE
AGREED
CONTRACTS
BETWEEN
ADMINISTRATIVE
DOMAINS
BILLING
INFORMATION
AMONG
MANY
OTHERS
LAST
AN
SDN
COMPASS
METHODOLOGY
SUGGESTS
A
FINER
DISTINCTION
BETWEEN
EASTBOUND
AND
WESTBOUND
HORIZONTAL
INTERFACES
REFERRING
TO
WESTBOUND
INTERFACES
AS
SDN
TO
SDN
PROTOCOLS
AND
CONTROLLER
APIS
WHILE
EASTBOUND
INTERFACES
WOULD
BE
USED
TO
REFER
TO
STANDARD
PROTOCOLS
USED
TO
COMMUNICATE
WITH
LEGACY
NETWORK
CON
TROL
PLANES
E
G
PCEP
AND
GMPLS
NORTHBOUND
CURRENT
CONTROLLERS
OFFER
A
QUITE
BROAD
VARIETY
OF
NORTHBOUND
APIS
SUCH
AS
AD
HOC
APIS
RESTFUL
APIS
MULTILEVEL
PROGRAMMING
INTERFACES
FILE
SYSTEMS
AMONG
OTHER
MORE
SPECIALIZED
APIS
SUCH
AS
NVP
NBAPI
AND
SDMN
API
SECTION
IV
E
IS
DEVOTED
TO
A
MORE
DETAILED
DISCUSSION
ON
THE
EVOLVING
LAYER
OF
NORTHBOUND
APIS
A
SECOND
KIND
OF
NORTHBOUND
INTERFACES
ARE
THOSE
STEMMING
OUT
OF
SDN
PROGRAMMING
LANGUAGES
SUCH
AS
FRENETIC
NETTLE
NETCORE
PROCERA
PYRETIC
NETKAT
AND
OTHER
QUERY
BASED
LANGUAGES
SECTION
IV
G
GIVES
A
MORE
DETAILED
OVERVIEW
OF
THE
SEVERAL
EXISTING
PROGRAM
MING
LANGUAGES
FOR
SDN
WRAPPING
UP
REMARKS
AND
PLATFORMS
COMPARISON
TABLE
SHOWS
A
SUMMARY
OF
SOME
OF
THE
EXISTING
CON
TROLLERS
WITH
THEIR
RESPECTIVE
ARCHITECTURES
AND
CHARACTER
TABLE
CONTROLLERS
CLASSIFICATION
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
ISTICS
AS
CAN
BE
OBSERVED
MOST
CONTROLLERS
ARE
CENTRALIZED
AND
MULTITHREADED
CURIOUSLY
THE
NORTHBOUND
API
IS
VERY
DIVERSE
IN
PARTICULAR
FIVE
CONTROLLERS
ONIX
FLOODLIGHT
MUL
MERIDIAN
AND
SDN
UNIFIED
CONTROLLER
PAY
A
BIT
MORE
ATTENTION
TO
THIS
INTERFACE
AS
A
STATEMENT
OF
ITS
IM
PORTANCE
CONSISTENCY
MODELS
AND
FAULT
TOLERANCE
ARE
ONLY
PRESENT
IN
ONIX
HYPERFLOW
HP
VAN
SDN
ONOS
AND
SMARTLIGHT
LAST
WHEN
IT
COMES
TO
THE
OPENFLOW
STAN
DARD
AS
SOUTHBOUND
API
ONLY
RYU
SUPPORTS
ITS
THREE
MAJOR
VERSIONS
AND
TO
CONCLUDE
IT
IS
IMPORTANT
TO
EMPHASIZE
THAT
THE
CONTROL
PLATFORM
IS
ONE
OF
THE
CRITICAL
POINTS
FOR
THE
SUCCESS
OF
SDN
ONE
OF
THE
MAIN
ISSUES
THAT
NEEDS
TO
BE
ADDRESSED
IN
THIS
RESPECT
IS
INTEROPERABILITY
THIS
IS
RATHER
INTERESTING
AS
IT
WAS
THE
VERY
FIRST
PROBLEM
THAT
SOUTH
BOUND
APIS
SUCH
AS
OPENFLOW
TRIED
TO
SOLVE
FOR
INSTANCE
WHILE
WIFI
AND
LONG
TERM
EVOLUTION
LTE
NET
WORKS
NEED
SPECIALIZED
CONTROL
PLATFORMS
SUCH
AS
MOBILEFLOW
OR
SOFTRAN
DATA
CENTER
NETWORKS
HAVE
DIFFERENT
REQUIREMENTS
THAT
CAN
BE
MET
WITH
PLAT
FORMS
SUCH
AS
ONIX
OR
OPENDAYLIGHT
FOR
THIS
REASON
IN
ENVIRONMENTS
WHERE
DIVERSITY
OF
NETWORKING
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
INFRASTRUCTURES
IS
A
REALITY
COORDINATION
AND
COOPERATION
PLANE
FAULT
TOLERANCE
AND
A
VARIETY
OF
BASIC
BUILDING
BLOCKS
BETWEEN
DIFFERENT
CONTROLLERS
IS
CRUCIAL
STANDARDIZED
APIS
TO
EASE
SOFTWARE
MODULE
AND
APPLICATION
DEVELOPMENT
FOR
MULTICONTROLLER
AND
MULTIDOMAIN
DEPLOYMENTS
ARE
SFNET
IS
ANOTHER
EXAMPLE
OF
A
NORTHBOUND
INTER
THEREFORE
SEEN
AS
AN
IMPORTANT
STEP
TO
ACHIEVE
THIS
GOAL
FACE
IT
IS
A
HIGH
LEVEL
API
THAT
TRANSLATES
APPLICATION
RE
QUIREMENTS
INTO
LOWER
LEVEL
SERVICE
REQUESTS
HOWEVER
E
LAYER
V
NORTHBOUND
INTERFACES
SFNET
HAS
A
LIMITED
SCOPE
TARGETING
QUERIES
TO
REQUEST
THE
THE
NORTHBOUND
AND
SOUTHBOUND
INTERFACES
ARE
TWO
KEY
CONGESTION
STATE
OF
THE
NETWORK
AND
SERVICES
SUCH
AS
BAND
ABSTRACTIONS
OF
THE
SDN
ECOSYSTEM
THE
SOUTHBOUND
INTER
WIDTH
RESERVATION
AND
MULTICAST
FACE
HAS
ALREADY
A
WIDELY
ACCEPTED
PROPOSAL
OPENFLOW
OTHER
PROPOSALS
USE
DIFFERENT
APPROACHES
TO
ALLOW
AP
BUT
A
COMMON
NORTHBOUND
INTERFACE
IS
STILL
AN
OPEN
ISSUE
PLICATIONS
TO
INTERACT
WITH
CONTROLLERS
THE
YANC
CONTROL
AT
THIS
MOMENT
IT
MAY
STILL
BE
A
BIT
TOO
EARLY
TO
DEFINE
A
PLATFORM
EXPLORES
THIS
IDEA
BY
PROPOSING
A
GENERAL
STANDARD
NORTHBOUND
INTERFACE
AS
USE
CASES
ARE
STILL
BEING
CONTROL
PLATFORM
BASED
ON
LINUX
AND
ABSTRACTIONS
SUCH
AS
WORKED
OUT
ANYWAY
IT
IS
TO
BE
EXPECTED
A
COMMON
THE
VIRTUAL
FILE
SYSTEM
VFS
THIS
APPROACH
SIMPLIFIES
THE
OR
ADE
FACTO
NORTHBOUND
INTERFACE
TO
ARISE
AS
SDN
EVOLVES
DEVELOPMENT
OF
SDN
APPLICATIONS
AS
PROGRAMMERS
ARE
ABLE
AN
ABSTRACTION
THAT
WOULD
ALLOW
NETWORK
APPLICATIONS
NOT
TO
USE
A
TRADITIONAL
CONCEPT
FILES
TO
COMMUNICATE
WITH
TO
DEPEND
ON
SPECIFIC
IMPLEMENTATIONS
IS
IMPORTANT
TO
LOWER
LEVEL
DEVICES
AND
SUBSYSTEMS
EXPLORE
THE
FULL
POTENTIAL
OF
SDN
EVENTUALLY
IT
IS
UNLIKELY
THAT
A
SINGLE
NORTHBOUND
IN
THE
NORTHBOUND
INTERFACE
IS
MOSTLY
A
SOFTWARE
ECO
TERFACE
EMERGES
AS
THE
WINNER
AS
THE
REQUIREMENTS
FOR
SYSTEM
NOT
A
HARDWARE
ONE
AS
IS
THE
CASE
OF
THE
SOUTH
DIFFERENT
NETWORK
APPLICATIONS
ARE
QUITE
DIFFERENT
APIS
FOR
BOUND
APIS
SECURITY
APPLICATIONS
ARE
LIKELY
TO
BE
DIFFERENT
FROM
THOSE
IN
THESE
ECOSYSTEMS
THE
IMPLEMENTATION
IS
COMMONLY
FOR
ROUTING
OR
FINANCIAL
APPLICATIONS
ONE
POSSIBLE
PATH
OF
THE
FOREFRONT
DRIVER
WHILE
STANDARDS
EMERGE
LATER
AND
ARE
EVOLUTION
FOR
NORTHBOUND
APIS
ARE
VERTICALLY
ORIENTED
PRO
ESSENTIALLY
DRIVEN
BY
WIDE
ADOPTION
NEVERTHELESS
AN
POSALS
BEFORE
ANY
TYPE
OF
STANDARDIZATION
OCCURS
A
CHAL
INITIAL
AND
MINIMAL
STANDARD
FOR
NORTHBOUND
INTERFACES
CAN
LENGE
THE
ONF
HAS
STARTED
TO
UNDERTAKE
IN
THE
NBI
WG
IN
STILL
PLAY
AN
IMPORTANT
ROLE
FOR
THE
FUTURE
OF
SDN
DISCUSSIONS
PARALLEL
TO
OPEN
SOURCE
SDN
DEVELOPMENTS
THE
ONF
ABOUT
THIS
ISSUE
HAVE
ALREADY
BEGUN
AND
A
ARCHITECTURAL
WORK
INCLUDES
THE
POSSIBILITY
OF
NORTH
COMMON
CONSENSUS
IS
THAT
NORTHBOUND
APIS
ARE
INDEED
BOUND
APIS
PROVIDING
RESOURCES
TO
ENABLE
DYNAMIC
AND
IMPORTANT
BUT
THAT
IT
IS
INDEED
TOO
EARLY
TO
DEFINE
A
SINGLE
GRANULAR
CONTROL
OF
THE
NETWORK
RESOURCES
FROM
CUSTOMER
STANDARD
RIGHT
NOW
THE
EXPERIENCE
FROM
THE
DEVELOPMENT
APPLICATIONS
EVENTUALLY
ACROSS
DIFFERENT
BUSINESS
AND
ORGA
OF
DIFFERENT
CONTROLLERS
WILL
CERTAINLY
BE
THE
BASIS
FOR
NIZATIONAL
BOUNDARIES
COMING
UP
WITH
A
COMMON
APPLICATION
LEVEL
INTERFACE
THERE
ARE
ALSO
OTHER
KINDS
OF
APIS
SUCH
AS
THOSE
PRO
OPEN
AND
STANDARD
NORTHBOUND
INTERFACES
ARE
CRUCIAL
TO
VIDED
BY
THE
PANE
CONTROLLER
DESIGNED
TO
BE
SUIT
PROMOTE
APPLICATION
PORTABILITY
AND
INTEROPERABILITY
AMONG
ABLE
FOR
THE
CONCEPT
OF
PARTICIPATORY
NETWORKING
PANE
THE
DIFFERENT
CONTROL
PLATFORMS
A
NORTHBOUND
API
CAN
BE
ALLOWS
NETWORK
ADMINISTRATORS
TO
DEFINE
MODULE
SPECIFIC
COMPARED
TO
THE
POSIX
STANDARD
IN
OPERATING
SYS
QUOTAS
AND
ACCESS
CONTROL
POLICIES
ON
NETWORK
RESOURCES
TEMS
REPRESENTING
AN
ABSTRACTION
THAT
GUARANTEES
PROGRAM
THE
CONTROLLER
PROVIDES
AN
API
THAT
ALLOWS
END
HOST
APPLI
MING
LANGUAGE
AND
CONTROLLER
INDEPENDENCE
NOSIX
CATIONS
TO
DYNAMICALLY
AND
AUTONOMOUSLY
REQUEST
NETWORK
IS
ONE
OF
THE
FIRST
EXAMPLES
OF
AN
EFFORT
IN
THIS
DIRECTION
IT
RESOURCES
FOR
EXAMPLE
AUDIO
E
G
VOIP
AND
VIDEO
AP
TRIES
TO
DEFINE
PORTABLE
LOW
LEVEL
E
G
FLOW
MODEL
APPLI
PLICATIONS
CAN
EASILY
BE
MODIFIED
TO
USE
THE
PANE
API
TO
CATION
INTERFACES
MAKING
SOUTHBOUND
APIS
SUCH
AS
OPEN
RESERVE
BANDWIDTH
FOR
CERTAIN
QUALITY
GUARANTEES
DURING
FLOW
LOOK
LIKE
DEVICE
DRIVERS
HOWEVER
NOSIX
IS
NOT
THE
COMMUNICATION
SESSION
PANE
INCLUDES
A
COMPILER
AND
EXACTLY
A
GENERAL
PURPOSE
NORTHBOUND
INTERFACE
BUT
RATHER
VERIFICATION
ENGINE
TO
ENSURE
THAT
BANDWIDTH
REQUESTS
DO
A
HIGHER
LEVEL
ABSTRACTION
FOR
SOUTHBOUND
INTERFACES
IN
NOT
EXCEED
THE
LIMITS
SET
BY
THE
ADMINISTRATOR
AND
TO
AVOID
DEED
IT
COULD
BE
PART
OF
THE
COMMON
ABSTRACTION
LAYER
IN
A
STARVATION
I
E
OTHER
APPLICATIONS
WILL
NOT
BE
IMPAIRED
BY
CONTROL
PLATFORM
AS
THE
ONE
DESCRIBED
IN
SECTION
IV
D
NEW
RESOURCE
REQUESTS
EXISTING
CONTROLLERS
SUCH
AS
FLOODLIGHT
TREMA
NOX
ONIX
AND
OPENDAYLIGHT
PROPOSE
AND
DEFINE
THEIR
OWN
F
LAYER
VI
LANGUAGE
BASED
VIRTUALIZATION
NORTHBOUND
APIS
HOWEVER
EACH
OF
THEM
HAS
TWO
ESSENTIAL
CHARACTERISTICS
OF
VIRTUALIZATION
SOLUTIONS
ITS
OWN
SPECIFIC
DEFINITIONS
PROGRAMMING
LANGUAGES
SUCH
ARE
THE
CAPABILITY
OF
EXPRESSING
MODULARITY
AND
OF
ALLOWING
AS
FRENETIC
NETTLE
NETCORE
PROCERA
DIFFERENT
LEVELS
OF
ABSTRACTIONS
WHILE
STILL
GUARANTEEING
DE
PYRETIC
AND
NETKAT
ALSO
ABSTRACT
THE
SIRED
PROPERTIES
SUCH
AS
PROTECTION
FOR
INSTANCE
VIRTUA
INNER
DETAILS
OF
THE
CONTROLLER
FUNCTIONS
AND
DATA
PLANE
LIZATION
TECHNIQUES
CAN
ALLOW
DIFFERENT
VIEWS
OF
A
SINGLE
BEHAVIOR
FROM
THE
APPLICATION
DEVELOPERS
MOREOVER
AS
WE
PHYSICAL
INFRASTRUCTURE
AS
AN
EXAMPLE
ONE
VIRTUAL
BIG
EXPLAIN
IN
SECTION
IV
G
PROGRAMMING
LANGUAGES
CAN
PRO
SWITCH
COULD
REPRESENT
A
COMBINATION
OF
SEVERAL
UNDERLY
VIDE
A
WIDE
RANGE
OF
POWERFUL
ABSTRACTIONS
AND
MECHAN
ING
FORWARDING
DEVICES
THIS
INTRINSICALLY
SIMPLIFIES
THE
ISMS
SUCH
AS
APPLICATION
COMPOSITION
TRANSPARENT
DATA
TASK
OF
APPLICATION
DEVELOPERS
AS
THEY
DO
NOT
NEED
TO
THINK
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
ABOUT
THE
SEQUENCE
OF
SWITCHES
WHERE
FORWARDING
RULES
ENSURES
THAT
PROPERTIES
SUCH
AS
ISOLATION
ARE
ENFORCED
HAVE
TO
BE
INSTALLED
BUT
RATHER
SEE
THE
NETWORK
AS
A
SIMPLE
AMONG
SLICES
I
E
NO
PACKETS
OF
SLICE
A
CAN
TRAVERSE
TO
BIG
SWITCH
SUCH
KIND
OF
ABSTRACTION
SIGNIFICANTLY
SIMPLI
SLICE
B
UNLESS
EXPLICITLY
ALLOWED
FIES
THE
DEVELOPMENT
AND
DEPLOYMENT
OF
COMPLEX
NETWORK
OTHER
SOLUTIONS
SUCH
AS
LIBNETVIRT
TRY
TO
INTEG
APPLICATIONS
SUCH
AS
ADVANCED
SECURITY
RELATED
SERVICES
RATE
HETEROGENEOUS
TECHNOLOGIES
FOR
CREATING
STATIC
NET
PYRETIC
IS
AN
INTERESTING
EXAMPLE
OF
A
PROGRAM
WORK
SLICES
LIBNETVIRT
IS
A
LIBRARY
DESIGNED
TO
PROVIDE
A
MING
LANGUAGE
THAT
OFFERS
THIS
TYPE
OF
HIGH
LEVEL
ABSTRAC
FLEXIBLE
WAY
TO
CREATE
AND
MANAGE
VIRTUAL
NETWORKS
IN
DIF
TION
OF
NETWORK
TOPOLOGY
IT
INCORPORATES
THIS
CONCEPT
OF
FERENT
COMPUTING
ENVIRONMENTS
ITS
MAIN
IDEA
IS
SIMILAR
TO
ABSTRACTION
BY
INTRODUCING
NETWORK
OBJECTS
THESE
OBJECTS
THE
OPENSTACK
QUANTUM
PROJECT
WHILE
QUANTUM
IS
CONSIST
OF
AN
ABSTRACT
NETWORK
TOPOLOGY
AND
THE
SETS
OF
DESIGNED
FOR
OPENSTACK
CLOUD
ENVIRONMENTS
LIBNETVIRT
POLICIES
APPLIED
TO
IT
NETWORK
OBJECTS
SIMULTANEOUSLY
HIDE
IS
A
MORE
GENERAL
PURPOSE
LIBRARY
WHICH
CAN
BE
USED
IN
INFORMATION
AND
OFFER
THE
REQUIRED
SERVICES
DIFFERENT
ENVIRONMENTS
ADDITIONALLY
IT
GOES
ONE
STEP
BE
ANOTHER
FORM
OF
LANGUAGE
BASED
VIRTUALIZATION
IS
STATIC
YOND
OPENSTACK
QUANTUM
BY
ENABLING
QOS
CAPABILITIES
IN
SLICING
THIS
A
SCHEME
WHERE
THE
NETWORK
IS
SLICED
BY
A
VIRTUAL
NETWORKS
THE
LIBNETVIRT
LIBRARY
HAS
TWO
COMPILER
BASED
ON
APPLICATION
LAYER
DEFINITIONS
THE
OUT
LAYERS
A
GENERIC
NETWORK
INTERFACE
AND
TECHNOLOGY
SPECIFIC
PUT
OF
THE
COMPILER
IS
A
MONOLITHIC
CONTROL
PROGRAM
THAT
DEVICE
DRIVERS
E
G
VPN
MPLS
OPENFLOW
ON
TOP
OF
HAS
ALREADY
SLICING
DEFINITIONS
AND
CONFIGURATION
COM
THE
LAYERS
ARE
THE
NETWORK
APPLICATIONS
AND
VIRTUAL
NETWORK
MANDS
FOR
THE
NETWORK
IN
SUCH
A
CASE
THERE
IS
NO
NEED
FOR
DESCRIPTIONS
THE
OPENFLOW
DRIVER
USES
A
NOX
CONTROLLER
A
HYPERVISOR
TO
DYNAMICALLY
MANAGE
THE
NETWORK
SLICES
TO
MANAGE
THE
UNDERLYING
INFRASTRUCTURE
USING
OPENFLOW
STATIC
SLICING
CAN
BE
VALUABLE
FOR
DEPLOYMENTS
WITH
SPECIFIC
RULE
BASED
FLOW
TABLES
TO
CREATE
ISOLATED
VIRTUAL
NETWORKS
REQUIREMENTS
IN
PARTICULAR
THOSE
WHERE
HIGHER
PERFOR
BY
SUPPORTING
DIFFERENT
TECHNOLOGIES
IT
CAN
BE
USED
AS
A
MANCE
AND
SIMPLE
ISOLATION
GUARANTEES
ARE
PREFERABLE
TO
BRIDGING
COMPONENT
IN
HETEROGENEOUS
NETWORKS
DYNAMIC
SLICING
TABLE
SUMMARIZES
THE
HYPERVISOR
AND
NONHYPERVISOR
ONE
EXAMPLE
OF
STATIC
SLICING
APPROACH
IS
THE
SPLENDID
BASED
VIRTUALIZATION
TECHNOLOGIES
AS
CAN
BE
OBSERVED
ONLY
ISOLATION
IN
THIS
SOLUTION
THE
NETWORK
SLICES
ARE
LIBNETVIRT
SUPPORTS
HETEROGENEOUS
TECHNOLOGIES
NOT
RE
MADE
OF
THREE
COMPONENTS
TOPOLOGY
CONSISTING
OF
STRICTING
ITS
APPLICATION
TO
OPENFLOW
ENABLED
NETWORKS
SWITCHES
PORTS
AND
LINKS
MAPPING
OF
SLICE
LEVEL
FLOWVISOR
AUTOSLICE
AND
OPENVIRTEX
ALLOW
MULTIPLE
CON
SWITCHES
PORTS
AND
LINKS
ON
THE
NETWORK
INFRASTRUCTURE
TROLLERS
ONE
PER
NETWORK
SLICE
FLOWN
PROVIDES
A
CONTAINER
AND
PREDICATES
ON
PACKETS
WHERE
EACH
PORT
OF
THE
SLICE
BASED
APPROACH
WHERE
MULTIPLE
APPLICATIONS
FROM
DIFFERENT
EDGE
SWITCHES
HAS
AN
ASSOCIATED
PREDICATE
THE
TOPOLOGY
IS
A
USERS
CAN
COEXIST
ON
A
SINGLE
CONTROLLER
FLOWVISOR
ALLOWS
SIMPLE
GRAPH
OF
THE
SLICED
NODES
PORTS
AND
LINKS
MAPPING
QOS
PROVISIONING
GUARANTEES
BY
USING
VLAN
PCP
BITS
FOR
WILL
TRANSLATE
THE
ABSTRACT
TOPOLOGY
ELEMENTS
INTO
THE
PRIORITY
QUEUES
SDN
VE
AND
NVP
ALSO
PROVIDE
THEIR
OWN
CORRESPONDING
PHYSICAL
ONES
THE
PREDICATES
ARE
USED
TO
PROVISIONING
METHODS
FOR
GUARANTEEING
QOS
INDICATE
WHETHER
A
PACKET
IS
PERMITTED
TO
ENTER
A
SPECIFIC
SLICE
DIFFERENT
APPLICATIONS
CAN
BE
ASSOCIATED
TO
EACH
SLICE
G
LAYER
VII
PROGRAMMING
LANGUAGES
THE
COMPILER
TAKES
THE
COMBINATION
OF
SLICES
TOPOLOGY
PROGRAMMING
LANGUAGES
HAVE
BEEN
PROLIFERATING
FOR
MAPPING
AND
PREDICATES
AND
RESPECTIVE
PROGRAMS
TO
GEN
DECADES
BOTH
ACADEMIA
AND
INDUSTRY
HAVE
EVOLVED
FROM
ERATE
A
GLOBAL
CONFIGURATION
FOR
THE
ENTIRE
NETWORK
IT
ALSO
LOW
LEVEL
HARDWARE
SPECIFIC
MACHINE
LANGUAGES
SUCH
AS
TABLE
VIRTUALIZATION
SOLUTIONS
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
ASSEMBLY
FOR
ARCHITECTURES
TO
HIGH
LEVEL
AND
POWERFUL
ANOTHER
INTERESTING
FEATURE
THAT
PROGRAMMING
LAN
PROGRAMMING
LANGUAGES
SUCH
AS
JAVA
AND
PYTHON
THE
AD
GUAGE
ABSTRACTIONS
PROVIDE
IS
THE
CAPABILITY
OF
CREATING
AND
VANCEMENTS
TOWARD
MORE
PORTABLE
AND
REUSABLE
CODE
WRITING
PROGRAMS
FOR
VIRTUAL
NETWORK
TOPOLOGIES
HAVE
DRIVEN
A
SIGNIFICANT
SHIFT
ON
THE
COMPUTER
INDUSTRY
THIS
CONCEPT
IS
SIMILAR
TO
OBJECT
ORIENTED
PROG
RAMMING
WHERE
OBJECTS
ABSTRACT
BOTH
DATA
AND
SPECIFIC
SIMILARLY
PROGRAMMABILITY
IN
NETWORKS
IS
STARTING
TO
FUNCTIONS
FOR
APPLICATION
DEVELOPERS
MAKING
IT
EASIER
TO
MOVE
FROM
LOW
LEVEL
MACHINE
LANGUAGES
SUCH
AS
OPENFLOW
FOCUS
ON
SOLVING
A
PARTICULAR
PROBLEM
WITHOUT
WORRYING
ASSEMBLY
TO
HIGH
LEVEL
PROGRAMMING
LANGUAGES
ABOUT
DATA
STRUCTURES
AND
THEIR
MANAGEMENT
FOR
INSTANCE
ASSEMBLY
LIKE
MACHINE
LAN
IN
AN
SDN
CONTEXT
INSTEAD
OF
GENERATING
AND
INSTALLING
GUAGES
SUCH
AS
OPENFLOW
AND
POF
ESSEN
RULES
IN
EACH
FORWARDING
DEVICE
ONE
CAN
THINK
OF
CREATING
TIALLY
MIMIC
THE
BEHAVIOR
OF
FORWARDING
DEVICES
FORCING
SIMPLIFIED
VIRTUAL
NETWORK
TOPOLOGIES
THAT
REPRESENT
THE
DEVELOPERS
TO
SPEND
TOO
MUCH
TIME
ON
LOW
LEVEL
DETAILS
ENTIRE
NETWORK
OR
A
SUBSET
OF
IT
FOR
EXAMPLE
THE
APPLI
RATHER
THAN
ON
THE
PROBLEM
SOLVE
RAW
OPENFLOW
PROGRAMS
CATION
DEVELOPER
SHOULD
BE
ABLE
TO
ABSTRACT
THE
NETWORK
AS
HAVE
TO
DEAL
WITH
HARDWARE
BEHAVIOR
DETAILS
SUCH
AS
OVER
AN
ATOMIC
BIG
SWITCH
RATHER
THAN
A
COMBINATION
OF
SEV
LAPPING
RULES
THE
PRIORITY
ORDERING
OF
RULES
AND
DATA
PLANE
ERAL
UNDERLYING
PHYSICAL
DEVICES
THE
PROGRAMMING
INCONSISTENCIES
THAT
ARISE
FROM
IN
FLIGHT
PACKETS
WHOSE
FLOW
LANGUAGES
OR
RUNTIME
SYSTEMS
SHOULD
BE
RESPONSIBLE
FOR
RULES
ARE
UNDER
INSTALLATION
THE
USE
OF
GENERATING
AND
INSTALLING
THE
LOWER
LEVEL
INSTRUCTIONS
THESE
LOW
LEVEL
LANGUAGES
MAKES
IT
DIFFICULT
TO
REUSE
SOFT
REQUIRED
AT
EACH
FORWARDING
DEVICE
TO
ENFORCE
THE
USER
WARE
TO
CREATE
MODULAR
AND
EXTENSIVE
CODE
AND
LEADS
TO
A
POLICY
ACROSS
THE
NETWORK
WITH
SUCH
KIND
OF
ABSTRACTIONS
MORE
ERROR
PRONE
DEVELOPMENT
PROCESS
DEVELOPING
A
ROUTING
APPLICATION
BECOMES
A
STRAIGHTFOR
ABSTRACTIONS
PROVIDED
BY
HIGH
LEVEL
PROGRAMMING
WARD
PROCESS
SIMILARLY
A
SINGLE
PHYSICAL
SWITCH
COULD
BE
LANGUAGES
CAN
SIGNIFICANTLY
HELP
ADDRESS
MANY
OF
THE
CHAL
REPRESENTED
AS
A
SET
OF
VIRTUAL
SWITCHES
EACH
OF
THEM
LENGES
OF
THESE
LOWER
LEVEL
INSTRUCTION
SETS
BELONGING
TO
A
DIFFERENT
VIRTUAL
NETWORK
THESE
TWO
EXAM
IN
SDNS
HIGH
LEVEL
PROGRAMMING
LANGUAGES
PLES
OF
ABSTRACT
NETWORK
TOPOLOGIES
WOULD
BE
MUCH
HARDER
CAN
BE
DESIGNED
AND
USED
TO
TO
IMPLEMENT
WITH
LOW
LEVEL
INSTRUCTION
SETS
IN
CONTRAST
CREATE
HIGHER
LEVEL
ABSTRACTIONS
FOR
SIMPLIFYING
THE
A
PROGRAMMING
LANGUAGE
OR
RUNTIME
SYSTEM
CAN
MORE
TASK
OF
PROGRAMMING
FORWARDING
DEVICES
EASILY
PROVIDE
ABSTRACTIONS
FOR
VIRTUAL
NETWORK
TOPOLOGIES
ENABLE
MORE
PRODUCTIVE
AND
PROBLEM
FOCUSED
EN
AS
HAS
ALREADY
BEEN
DEMONSTRATED
BY
LANGUAGES
SUCH
AS
VIRONMENTS
FOR
NETWORK
SOFTWARE
PROGRAMMERS
PYRETIC
SPEEDING
UP
DEVELOPMENT
AND
INNOVATION
PROMOTE
SOFTWARE
MODULARIZATION
AND
CODE
REUS
HIGH
LEVEL
SDN
PROGRAMMING
LANGUAGES
HIGH
LEVEL
ABILITY
IN
THE
NETWORK
CONTROL
PLANE
PROGRAMMING
LANGUAGES
CAN
BE
POWERFUL
TOOLS
AS
A
MEAN
FOSTER
THE
DEVELOPMENT
OF
NETWORK
VIRTUALIZATION
FOR
IMPLEMENTING
AND
PROVIDING
ABSTRACTIONS
FOR
DIFFERENT
SEVERAL
CHALLENGES
CAN
BE
BETTER
ADDRESSED
BY
PROGRAM
IMPORTANT
PROPERTIES
AND
FUNCTIONS
OF
SDN
SUCH
AS
MING
LANGUAGES
IN
SDNS
FOR
INSTANCE
IN
PURE
OPENFLOW
NETWORK
WIDE
STRUCTURES
DISTRIBUTED
UPDATES
MODULAR
BASED
SDNS
IT
IS
HARD
TO
ENSURE
THAT
MULTIPLE
TASKS
OF
A
COMPOSITION
VIRTUALIZATION
AND
FORMAL
VERIFICATION
SINGLE
APPLICATION
E
G
ROUTING
MONITORING
ACCESS
CON
LOW
LEVEL
INSTRUCTION
SETS
SUFFER
FROM
SEVERAL
PRO
TROL
DO
NOT
INTERFERE
WITH
EACH
OTHER
FOR
EXAMPLE
RULES
BLEMS
TO
ADDRESS
SOME
OF
THESE
CHALLENGES
HIGHER
LEVEL
GENERATED
FOR
ONE
TASK
SHOULD
NOT
OVERRIDE
THE
FUNCTION
PROGRAMMING
LANGUAGES
HAVE
BEEN
PROPOSED
WITH
DIVERSE
ALITY
OF
ANOTHER
TASK
ANOTHER
EXAMPLE
IS
GOALS
SUCH
AS
WHEN
MULTIPLE
APPLICATIONS
RUN
ON
A
SINGLE
CONTROLLER
AVOIDING
LOW
LEVEL
AND
DEVICE
SPECIFIC
CONFIGURA
TYPICALLY
EACH
APPLICA
TIONS
AND
DEPENDENCIES
SPREAD
ACROSS
THE
NETWORK
TION
GENERATES
RULES
BASED
ON
ITS
OWN
NEEDS
AND
POLICIES
AS
HAPPENS
IN
TRADITIONAL
NETWORK
CONFIGURATION
WITHOUT
FURTHER
KNOWLEDGE
ABOUT
THE
RULES
GENERATED
BY
APPROACHES
OTHER
APPLICATIONS
AS
A
CONSEQUENCE
CONFLICTING
RULES
CAN
PROVIDING
ABSTRACTIONS
THAT
ALLOW
DIFFERENT
MAN
BE
GENERATED
AND
INSTALLED
IN
FORWARDING
DEVICES
WHICH
AGEMENT
TASKS
TO
BE
ACCOMPLISHED
THROUGH
EASY
TO
CAN
CREATE
PROBLEMS
FOR
NETWORK
OPERATION
PROGRAMMING
UNDERSTAND
AND
MAINTAIN
NETWORK
POLICIES
LANGUAGES
AND
RUNTIME
SYSTEMS
CAN
HELP
TO
SOLVE
THESE
DECOUPLING
OF
MULTIPLE
TASKS
E
G
ROUTING
ACCESS
PROBLEMS
THAT
WOULD
BE
OTHERWISE
HARD
TO
PREVENT
CONTROL
TRAFFIC
ENGINEERING
IMPORTANT
SOFTWARE
DESIGN
TECHNIQUES
SUCH
AS
CODE
IMPLEMENTING
HIGHER
LEVEL
PROGRAMMING
INTERFACES
MODULARITY
AND
REUSABILITY
ARE
VERY
HARD
TO
ACHIEVE
USING
TO
AVOID
LOW
LEVEL
INSTRUCTION
SETS
LOW
LEVEL
PROGRAMMING
MODELS
APPLICATIONS
THUS
SOLVING
FORWARDING
RULES
PROBLEMS
E
G
CONFLICTING
BUILT
ARE
MONOLITHIC
AND
CONSIST
OF
BUILDING
BLOCKS
THAT
OR
INCOMPLETE
RULES
THAT
CAN
PREVENT
A
SWITCH
EVENT
CANNOT
BE
REUSED
IN
OTHER
APPLICATIONS
THE
END
RESULT
IS
TO
BE
TRIGGERED
IN
AN
AUTOMATED
WAY
A
VERY
TIME
CONSUMING
AND
ERROR
PRONE
DEVELOPMENT
ADDRESSING
DIFFERENT
RACE
CONDITION
ISSUES
WHICH
PROCESS
ARE
INHERENT
TO
DISTRIBUTED
SYSTEMS
ENHANCING
CONFLICT
RESOLUTION
TECHNIQUES
ON
ENVI
RONMENTS
WITH
DISTRIBUTED
DECISION
MAKERS
PROVIDING
NATIVE
FAULT
TOLERANCE
CAPABILITIES
ON
DATA
PLANE
PATH
SETUP
REDUCING
THE
LATENCY
IN
THE
PROCESSING
OF
NEW
FLOWS
EASING
THE
CREATION
OF
STATEFUL
APPLICATIONS
E
G
STATEFUL
FIREWALL
PROGRAMMING
LANGUAGES
CAN
ALSO
PROVIDE
SPECIALIZED
ABSTRACTIONS
TO
COPE
WITH
OTHER
MANAGEMENT
REQUIRE
MENTS
SUCH
AS
MONITORING
FOR
INSTANCE
THE
RUNTIME
SYSTEM
OF
A
PROGRAMMING
LANGUAGE
CAN
DO
ALL
THE
LAUNDRY
WORK
OF
INSTALLING
RULES
POLLING
THE
COUNTERS
RECEIVING
THE
RESPONSES
COMBINING
THE
RE
SULTS
AS
NEEDED
AND
COMPOSING
MONITORING
QUERIES
IN
CONJUNCTION
WITH
OTHER
POLICIES
CONSEQUENTLY
APPLICATION
DEVELOPERS
CAN
TAKE
ADVANTAGE
OF
THE
SIMPLICITY
AND
POWER
OF
HIGHER
LEVEL
QUERY
INSTRUCTIONS
TO
EASILY
IMPLEMENT
MO
NITORING
MODULES
OR
APPLICATIONS
ANOTHER
ASPECT
OF
PARAMOUNT
IMPORTANCE
IS
THE
PORTABILITY
OF
THE
PROGRAMMING
LANGUAGE
NECESSARY
SO
THAT
DEVELOPERS
DO
NOT
NEED
TO
RE
IMPLEMENT
APPLICATIONS
FOR
DIFFERENT
CONTROL
PLATFORMS
THE
PORTABILITY
OF
A
PROG
RAMMING
LANGUAGE
CAN
BE
CONSIDERED
AS
A
SIGNIFICANT
ADDED
VALUE
TO
THE
CONTROL
PLANE
ECOSYSTEM
MECHANISMS
SUCH
AS
DECOUPLED
BACK
ENDS
COULD
BE
KEY
ARCHITECTURAL
INGREDI
ENTS
TO
ENABLE
PLATFORM
PORTABILITY
SIMILARLY
TO
THE
JAVA
VIRTUAL
MACHINE
A
PORTABLE
NORTHBOUND
INTERFACE
WILL
TABLE
PROGRAMMING
LANGUAGES
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
EASILY
ALLOW
APPLICATIONS
TO
RUN
ON
DIFFERENT
CONTROLLERS
WITHOUT
REQUIRING
ANY
MODIFICATION
AS
AN
EXAMPLE
THE
PYRETIC
LANGUAGE
REQUIRES
ONLY
A
STANDARD
SOCKET
INTERFACE
AND
A
SIMPLE
OPENFLOW
CLIENT
ON
THE
TARGET
CONTROLLER
PLATFORM
SEVERAL
PROGRAMMING
LANGUAGES
HAVE
BEEN
PROPOSED
FOR
SDNS
AS
SUMMARIZED
IN
TABLE
THE
GREAT
MAJORITY
PROPOSE
ABSTRACTIONS
FOR
OPENFLOW
ENABLED
NETWORKS
THE
PREDOMINANT
PROGRAMMING
PARADIGM
IS
THE
DECLARATIVE
ONE
WITH
A
SINGLE
EXCEPTION
PYRETIC
WHICH
IS
AN
IMPERA
TIVE
LANGUAGE
MOST
DECLARATIVE
LANGUAGES
ARE
FUNCTIONAL
BUT
THERE
ARE
INSTANCES
OF
THE
LOGIC
AND
REACTIVE
TYPES
THE
PURPOSEVI
E
THE
SPECIFIC
PROBLEMS
THEY
INTEND
TO
SOLVEV
AND
THE
EXPRESSIVENESS
POWER
VARY
FROM
LANGUAGE
TO
LAN
GUAGE
WHILE
THE
END
GOAL
IS
ALMOST
ALWAYS
THE
SAME
TO
PROVIDE
HIGHER
LEVEL
ABSTRACTIONS
TO
FACILITATE
THE
DEVELOP
MENT
OF
NETWORK
CONTROL
LOGIC
PROGRAMMING
LANGUAGES
SUCH
AS
FML
NETTLE
AND
PROCERA
ARE
FUNCTIONAL
AND
REACTIVE
POLI
CIES
AND
APPLICATIONS
WRITTEN
IN
THESE
LANGUAGES
ARE
BASED
ON
REACTIVE
ACTIONS
TRIGGERED
BY
EVENTS
E
G
A
NEW
HOST
CONNECTED
TO
THE
NETWORK
OR
THE
CURRENT
NETWORK
LOAD
SUCH
LANGUAGES
ALLOW
USERS
TO
DECLARATIVELY
EXPRESS
DIFFER
ENT
NETWORK
CONFIGURATION
RULES
SUCH
AS
ACCESS
CONTROL
LISTS
ACLS
VIRTUAL
LANS
VLANS
AND
MANY
OTHERS
RULES
ARE
ESSENTIALLY
EXPRESSED
AS
ALLOW
OR
DENY
POLICIES
WHICH
ARE
APPLIED
TO
THE
FORWARDING
ELEMENTS
TO
ENSURE
THE
DESIRED
NETWORK
BEHAVIOR
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
OTHER
SDN
PROGRAMMING
LANGUAGES
SUCH
AS
FRENETIC
EXISTING
SYSTEMS
TO
ACHIEVE
THIS
GOAL
MERLIN
GENERATES
HIERARCHICAL
FLOW
TABLES
HFTS
NETCORE
SPECIFIC
CODE
FOR
EACH
TYPE
OF
COMPONENT
TAKING
A
POLICY
AND
PYRETIC
WERE
DESIGNED
WITH
THE
SIMUL
DEFINITION
AS
INPUT
MERLIN
COMPILER
DETERMINES
FORWARD
TANEOUS
GOAL
OF
EFFICIENTLY
EXPRESSING
PACKET
FORWARDING
ING
PATHS
TRANSFORMATION
PLACEMENT
AND
BANDWIDTH
POLICIES
AND
DEALING
WITH
OVERLAPPING
RULES
OF
DIFFERENT
ALLOCATION
THE
COMPILED
OUTPUTS
ARE
SETS
OF
COMPONENT
APPLICATIONS
OFFERING
ADVANCED
OPERATORS
FOR
PARALLEL
AND
SPECIFIC
LOW
LEVEL
INSTRUCTIONS
TO
BE
INSTALLED
IN
THE
DEVICES
SEQUENTIAL
COMPOSITION
OF
SOFTWARE
MODULES
TO
AVOID
MERLIN
POLICY
LANGUAGE
ALSO
ALLOWS
OPERATORS
TO
DELEGATE
OVERLAPPING
CONFLICTS
FRENETIC
DISAMBIGUATES
RULES
WITH
THE
CONTROL
OF
A
SUBNETWORK
TO
TENANTS
WHILE
ENSURING
ISO
OVERLAPPING
PATTERNS
BY
ASSIGNING
DIFFERENT
INTEGER
PRIOR
LATION
THIS
DELEGATED
CONTROL
IS
EXPRESSED
BY
MEANS
OF
ITIES
WHILE
HFT
USES
HIERARCHICAL
POLICIES
WITH
ENHANCED
POLICIES
THAT
CAN
BE
FURTHER
REFINED
BY
EACH
TENANT
OWNER
CONFLICT
RESOLUTION
OPERATORS
ALLOWING
THEM
TO
CUSTOMIZE
POLICIES
FOR
THEIR
PARTICULAR
SEE
EVERY
PACKET
ABSTRACTIONS
AND
RACE
FREE
SEMANTICS
NEEDS
ALSO
REPRESENT
INTERESTING
FEATURES
PROVIDED
BY
PROGRAM
OTHER
RECENT
INITIATIVES
E
G
SYSTEMS
PROGRAMMING
MING
LANGUAGES
SUCH
AS
FRENETIC
THE
FORMER
EN
LANGUAGES
TARGET
PROBLEMS
SUCH
AS
DETECTING
ANO
SURES
THAT
ALL
CONTROL
PACKETS
WILL
BE
AVAILABLE
FOR
ANALYSIS
MALIES
TO
IMPROVE
THE
SECURITY
OF
NETWORK
PROTOCOLS
E
G
SOONER
OR
LATER
WHILE
THE
LATTER
PROVIDES
THE
MECHANISMS
OPEN
FLOW
AND
OPTIMIZING
HORIZONTAL
SCALABILITY
FOR
FOR
SUPPRESSING
UNIMPORTANT
PACKETS
AS
AN
EXAMPLE
ACHIEVING
HIGH
THROUGHPUT
IN
APPLICATIONS
RUNNING
ON
PACKETS
THAT
ARISE
FROM
A
NETWORK
RACE
CONDITION
SUCH
AS
MULTICORE
ARCHITECTURES
NEVERTHELESS
THERE
IS
STILL
DUE
TO
A
CONCURRENT
FLOW
RULE
INSTALLATION
ON
SWITCHES
CAN
SCOPE
FOR
FURTHER
INVESTIGATION
AND
DEVELOPMENT
ON
PROG
BE
SIMPLY
DISCARDED
BY
THE
RUNTIME
SYSTEM
RAMMING
LANGUAGES
FOR
INSTANCE
ONE
RECENT
RESEARCH
HAS
ADVANCED
OPERATORS
FOR
PARALLEL
AND
SEQUENTIAL
COM
REVEALED
THAT
CURRENT
POLICY
COMPILERS
GENERATE
UNNECES
POSITION
HELP
BIND
THROUGH
INTERNAL
WORKFLOW
OPERATORS
SARY
REDUNDANT
RULE
UPDATES
MOST
OF
WHICH
MODIFY
ONLY
THE
KEY
CHARACTERISTICS
OF
PROGRAMMING
LANGUAGES
SUCH
AS
THE
PRIORITY
FIELD
PYRETIC
PARALLEL
COMPOSITION
MAKES
IT
POSSIBLE
TO
MOST
OF
THE
VALUE
OF
SDN
WILL
COME
FROM
THE
NETWORK
OPERATE
MULTIPLE
POLICIES
ON
THE
SAME
SET
OF
PACKETS
WHILE
MANAGEMENTS
APPLICATIONS
BUILT
ON
TOP
OF
THE
INFRASTRUC
SEQUENTIAL
COMPOSITION
FACILITATES
THE
DEFINITION
OF
A
SE
TURE
ADVANCES
IN
HIGH
LEVEL
PROGRAMMING
LANGUAGES
ARE
A
QUENTIAL
WORKFLOW
OF
POLICIES
TO
BE
PROCESSED
ON
A
SET
OF
FUNDAMENTAL
COMPONENT
TO
THE
SUCCESS
OF
A
PROLIFIC
SDN
PACKETS
SEQUENTIAL
POLICY
PROCESSING
ALLOWS
MULTIPLE
APPLICATION
DEVELOPMENT
ECOSYSTEM
TO
THIS
END
EFFORTS
MODULES
E
G
ACCESS
CONTROL
AND
ROUTING
TO
OPERATE
IN
A
ARE
UNDERGOING
TO
SHAPE
FORTHCOMING
STANDARD
INTERFACES
COOPERATIVE
WAY
BY
USING
SEQUENTIAL
COMPOSITION
COMPLEX
CF
AND
TOWARD
THE
REALIZATION
OF
INTEGRATED
DEVEL
APPLICATIONS
CAN
BE
BUILT
OUT
OF
A
COMBINATION
OF
DIFFERENT
OPMENT
ENVIRONMENTS
E
G
NETIDE
WITH
THE
GOAL
MODULES
IN
A
SIMILAR
WAY
AS
PIPES
CAN
BE
USED
TO
BUILD
OF
FOSTERING
THE
DEVELOPMENT
OF
A
MYRIAD
OF
SDN
APPLICA
SOPHISTICATED
UNIX
APPLICATIONS
TIONS
WE
DISCUSS
THESE
NEXT
FURTHER
ADVANCED
FEATURES
ARE
PROVIDED
BY
OTHER
SDN
PROGRAMMING
LANGUAGES
FATTIRE
IS
AN
EXAMPLE
OF
A
H
LAYER
VIII
NETWORK
APPLICATIONS
DECLARATIVE
LANGUAGE
THAT
HEAVILY
RELIES
ON
REGULAR
EXPRES
NETWORK
APPLICATIONS
CAN
BE
SEEN
AS
THE
NETWORK
SIONS
TO
ALLOW
PROGRAMMERS
TO
DESCRIBE
NETWORK
PATHS
WITH
BRAINS
THEY
IMPLEMENT
THE
CONTROL
LOGIC
THAT
WILL
BE
FAULT
TOLERANCE
REQUIREMENTS
FOR
INSTANCE
EACH
FLOW
CAN
TRANSLATED
INTO
COMMANDS
TO
BE
INSTALLED
IN
THE
DATA
PLANE
HAVE
ITS
OWN
ALTERNATIVE
PATHS
FOR
DEALING
WITH
FAILURE
OF
DICTATING
THE
BEHAVIOR
OF
THE
FORWARDING
DEVICES
TAKE
A
THE
PRIMARY
PATHS
INTERESTINGLY
THIS
FEATURE
IS
PROVIDED
IN
SIMPLE
APPLICATION
AS
ROUTING
AS
AN
EXAMPLE
THE
LOGIC
OF
A
VERY
PROGRAMMER
FRIENDLY
WAY
WITH
THE
APPLICATION
THIS
APPLICATION
IS
TO
DEFINE
THE
PATH
THROUGH
WHICH
PACKETS
PROGRAMMER
HAVING
ONLY
TO
USE
REGULAR
EXPRESSIONS
WITH
WILL
FLOW
FROM
POINT
A
TO
POINT
B
TO
ACHIEVE
THIS
GOAL
A
SPECIAL
CHARACTERS
SUCH
AS
AN
ASTERISK
IN
THE
PARTICULAR
ROUTING
APPLICATION
HAS
TO
BASED
ON
THE
TOPOLOGY
INPUT
CASE
OF
FATTIRE
AN
ASTERISK
WILL
PRODUCE
THE
SAME
BEHAVIOR
DECIDE
ON
THE
PATH
TO
USE
AND
INSTRUCT
THE
CONTROLLER
TO
AS
A
TRADITIONAL
REGULAR
EXPRESSION
BUT
TRANSLATED
INTO
INSTALL
THE
RESPECTIVE
FORWARDING
RULES
IN
ALL
FORWARDING
ALTERNATIVE
TRAVERSING
PATHS
DEVICES
ON
THE
CHOSEN
PATH
FROM
A
TO
B
PROGRAMMING
LANGUAGES
SUCH
AS
FLOWLOG
AND
SDNS
CAN
BE
DEPLOYED
ON
ANY
TRADITIONAL
NETWORK
EN
FLOG
BRING
DIFFERENT
FEATURES
SUCH
AS
MODEL
CHECK
VIRONMENT
FROM
HOME
AND
ENTERPRISE
NETWORKS
TO
DATA
ING
DYNAMIC
VERIFICATION
AND
STATEFUL
MIDDLEBOXES
FOR
CENTERS
AND
INTERNET
EXCHANGE
POINTS
SUCH
VARIETY
OF
EN
INSTANCE
USING
A
PROGRAMMING
LANGUAGE
SUCH
AS
FLOG
IT
IS
VIRONMENTS
HAS
LED
TO
A
WIDE
ARRAY
OF
NETWORK
APPLICATIONS
POSSIBLE
TO
BUILD
A
STATEFUL
FIREWALL
APPLICATION
WITH
ONLY
EXISTING
NETWORK
APPLICATIONS
PERFORM
TRADITIONAL
FUNC
FIVE
LINES
OF
CODE
TIONALITY
SUCH
AS
ROUTING
LOAD
BALANCING
AND
SECURITY
PO
MERLIN
IS
ONE
OF
THE
FIRST
EXAMPLES
OF
UNIFIED
LICY
ENFORCEMENT
BUT
ALSO
EXPLORE
NOVEL
APPROACHES
SUCH
FRAMEWORK
FOR
CONTROLLING
DIFFERENT
NETWORK
COMPONENTS
AS
REDUCING
POWER
CONSUMPTION
OTHER
EXAMPLES
INCLUDE
SUCH
AS
FORWARDING
DEVICES
MIDDLEBOXES
AND
END
HOSTS
FAIL
OVER
AND
RELIABILITY
FUNCTIONALITIES
TO
THE
DATA
PLANE
AN
IMPORTANT
ADVANTAGE
IS
BACKWARD
COMPATIBILITY
WITH
END
TO
END
QOS
ENFORCEMENT
NETWORK
VIRTUALIZATION
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
MOBILITY
MANAGEMENT
IN
WIRELESS
NETWORKS
AMONG
MANY
LEVERAGED
TO
OPTIMIZE
THE
ENERGY
CONSUMPTION
OF
THE
NET
OTHERS
THE
VARIETY
OF
NETWORK
APPLICATIONS
COMBINED
WITH
WORK
BY
USING
SPECIALIZED
OPTIMIZATION
ALGORITHMS
REAL
USE
CASE
DEPLOYMENTS
IS
EXPECTED
TO
BE
ONE
OF
THE
AND
DIVERSIFIED
CONFIGURATION
OPTIONS
IT
IS
POSSIBLE
TO
MEET
MAJOR
FORCES
ON
FOSTERING
A
BROAD
ADOPTION
OF
SDN
THE
INFRASTRUCTURE
GOALS
OF
LATENCY
PERFORMANCE
AND
FAULT
DESPITE
THE
WIDE
VARIETY
OF
USE
CASES
MOST
SDN
APPLI
TOLERANCE
FOR
INSTANCE
WHILE
REDUCING
POWER
CONSUMP
CATIONS
CAN
BE
GROUPED
IN
ONE
OF
FIVE
CATEGORIES
TRAFFIC
TION
WITH
THE
USE
OF
SIMPLE
TECHNIQUES
SUCH
AS
SHUTTING
ENGINEERING
MOBILITY
AND
WIRELESS
MEASUREMENT
AND
MO
DOWN
LINKS
AND
DEVICES
INTELLIGENTLY
IN
RESPONSE
TO
TRAFFIC
NITORING
SECURITY
AND
DEPENDABILITY
AND
DATA
CENTER
NET
LOAD
DYNAMICS
DATA
CENTER
OPERATORS
CAN
SAVE
UP
TO
OF
WORKING
TABLES
AND
SUMMARIZE
SEVERAL
APPLICATIONS
THE
NETWORK
ENERGY
IN
NORMAL
TRAFFIC
CONDITIONS
CATEGORIZED
AS
SUCH
STATING
THEIR
MAIN
PURPOSE
CONTROLLER
ONE
OF
THE
IMPORTANT
GOALS
OF
DATA
CENTER
NETWORKS
IS
TO
WHERE
IT
WAS
IMPLEMENTED
EVALUATED
AND
SOUTHBOUND
AVOID
OR
MITIGATE
THE
EFFECT
OF
NETWORK
BOTTLENECKS
ON
THE
API
USED
OPERATION
OF
THE
COMPUTING
SERVICES
OFFERED
LINEAR
BISEC
TION
BANDWIDTH
IS
A
TECHNIQUE
THAT
CAN
BE
ADOPTED
FOR
TRAFFIC
ENGINEERING
SEVERAL
TRAFFIC
ENGINEERING
APPLI
TRAFFIC
PATTERNS
THAT
STRESS
THE
NETWORK
BY
EXPLORING
PATH
CATIONS
HAVE
BEEN
PROPOSED
INCLUDING
ELASTICTREE
DIVERSITY
IN
A
DATA
CENTER
TOPOLOGY
SUCH
TECHNIQUE
HAS
HEDERA
OPENFLOW
BASED
SERVER
LOAD
BALANCING
BEEN
PROPOSED
IN
AN
SDN
SETTING
ALLOWING
THE
MAXIMIZA
PLUG
N
SERVE
AND
ASTER
X
IN
PACKET
TION
OF
AGGREGATED
NETWORK
UTILIZATION
WITH
MINIMAL
SCHED
BLOOM
FILTER
SIM
PLE
QNOX
QOS
ULING
OVERHEAD
SDN
CAN
ALSO
BE
USED
TO
PROVIDE
A
FRAMEWORK
QOS
FOR
SDN
ALTO
FULLY
AUTOMATED
SYSTEM
FOR
CONTROLLING
THE
CONFIGURATION
OF
VIAGGRE
SDN
PROCEL
FLOWQOS
AND
ROUTERS
THIS
CAN
BE
PARTICULARLY
USEFUL
IN
SCENARIOS
THAT
MIDDLEPIPES
IN
ADDITION
TO
THESE
RECENT
PROPOSALS
APPLY
VIRTUAL
AGGREGATION
THIS
TECHNIQUE
ALLOWS
NET
INCLUDE
OPTIMIZATION
OF
RULES
PLACEMENT
THE
USE
OF
WORK
OPERATORS
TO
REDUCE
THE
DATA
REPLICATED
ON
ROUTING
MAC
AS
A
UNIVERSAL
LABEL
FOR
EFFICIENT
ROUTING
IN
DATA
CEN
TABLES
WHICH
IS
ONE
OF
THE
CAUSES
OF
ROUTING
TABLES
GROWTH
TERS
AMONG
OTHER
TECHNIQUES
FOR
FLOW
MANAGEMENT
A
SPECIALIZED
ROUTING
APPLICATION
CAN
CALCULATE
FAULT
TOLERANCE
TOPOLOGY
UPDATE
AND
TRAFFIC
CHARACTERIZA
DIVIDE
AND
CONFIGURE
THE
ROUTING
TABLES
OF
THE
DIFFERENT
ROUT
TION
THE
MAIN
GOAL
OF
MOST
APPLICATIONS
IS
TO
ENGINEER
ING
DEVICES
THROUGH
A
SOUTHBOUND
API
SUCH
AS
OPENFLOW
TRAFFIC
WITH
THE
AIM
OF
MINIMIZING
POWER
CONSUMPTION
TRAFFIC
OPTIMIZATION
IS
ANOTHER
INTERESTING
APPLICATION
MAXIMIZING
AGGREGATE
NETWORK
UTILIZATION
PROVIDING
OPTI
FOR
LARGE
SCALE
SERVICE
PROVIDERS
WHERE
DYNAMIC
SCALE
OUT
MIZED
LOAD
BALANCING
AND
OTHER
GENERIC
TRAFFIC
OPTIMIZA
IS
REQUIRED
FOR
INSTANCE
THE
DYNAMIC
AND
SCALABLE
PROVI
TION
TECHNIQUES
SIONING
OF
VPNS
IN
CLOUD
INFRASTRUCTURES
USING
PROTOCOLOLS
LOAD
BALANCING
WAS
ONE
OF
THE
FIRST
APPLICATIONS
ENVI
SUCH
AS
ALTO
CAN
BE
SIMPLIFIED
THROUGH
AN
SDN
SIONED
FOR
SDN
OPENFLOW
DIFFERENT
ALGORITHMS
AND
TECH
BASED
APPROACH
RECENT
WORK
HAS
ALSO
SHOWN
THAT
NIQUES
HAVE
BEEN
PROPOSED
FOR
THIS
PURPOSE
OPTIMIZING
RULES
PLACEMENT
CAN
INCREASE
NETWORK
EFFI
ONE
PARTICULAR
CONCERN
IS
THE
SCALABILITY
OF
THESE
CIENCY
SOLUTIONS
SUCH
AS
PROCEL
DESIGNED
FOR
SOLUTIONS
A
TECHNIQUE
TO
ALLOW
THIS
TYPE
OF
APPLICATIONS
TO
CELLULAR
CORE
NETWORKS
ARE
CAPABLE
OF
REDUCING
THE
SIGNAL
SCALE
IS
TO
USE
WILDCARD
BASED
RULES
TO
PERFORM
PROACTIVE
ING
TRAFFIC
UP
TO
WHICH
REPRESENTS
A
SIGNIFICANT
LOAD
BALANCING
WILDCARDS
CAN
BE
UTILIZED
FOR
AGGRE
ACHIEVEMENT
GATING
CLIENT
REQUESTS
BASED
ON
THE
RANGES
OF
IP
PREFIXES
OTHER
APPLICATIONS
THAT
PERFORM
ROUTING
AND
TRAFFIC
EN
FOR
INSTANCE
ALLOWING
THE
DISTRIBUTION
AND
DIRECTING
OF
GINEERING
INCLUDE
APPLICATION
AWARE
NETWORKING
FOR
VIDEO
LARGE
GROUPS
OF
CLIENT
REQUESTS
WITHOUT
REQUIRING
CONTROLLER
AND
DATA
STREAMING
AND
IMPROVED
QOS
BY
INTERVENTION
FOR
EVERY
NEW
FLOW
IN
TANDEM
OPERATION
IN
EMPLOYING
MULTIPLE
PACKET
SCHEDULERS
AND
OTHER
REACTIVE
MODE
MAY
STILL
BE
USED
WHEN
TRAFFIC
BURSTS
ARE
TECHNIQUES
AS
TRAFFIC
ENGINEER
DETECTED
THE
CONTROLLER
APPLICATION
NEEDS
TO
MONITOR
THE
ING
IS
A
CRUCIAL
ISSUE
IN
ALL
KINDS
OF
NETWORKS
UPCOMING
NETWORK
TRAFFIC
AND
USE
SOME
SORT
OF
THRESHOLD
IN
THE
FLOW
METHODS
TECHNIQUES
AND
INNOVATIONS
CAN
BE
EXPECTED
IN
COUNTERS
TO
REDISTRIBUTE
CLIENTS
AMONG
THE
SERVERS
WHEN
THE
CONTEXT
OF
SDNS
BOTTLENECKS
ARE
LIKELY
TO
HAPPEN
SDN
LOAD
BALANCING
ALSO
SIMPLIFIES
THE
PLACEMENT
OF
MOBILITY
AND
WIRELESS
THE
CURRENT
DISTRIBUTED
CONTROL
NETWORK
SERVICES
IN
THE
NETWORK
EVERY
TIME
A
NEW
PLANE
OF
WIRELESS
NETWORKS
IS
SUBOPTIMAL
FOR
MANAGING
THE
SERVER
IS
INSTALLED
THE
LOAD
BALANCING
SERVICE
CAN
TAKE
THE
LIMITED
SPECTRUM
ALLOCATING
RADIO
RESOURCES
IMPLEMENT
APPROPRIATE
ACTIONS
TO
SEAMLESSLY
DISTRIBUTE
THE
TRAFFIC
ING
HANDOVER
MECHANISMS
MANAGING
INTERFERENCE
AND
AMONG
THE
AVAILABLE
SERVERS
TAKING
INTO
CONSIDERATION
BOTH
PERFORMING
EFFICIENT
LOAD
BALANCING
BETWEEN
CELLS
SDN
THE
NETWORK
LOAD
AND
THE
AVAILABLE
COMPUTING
CAPACITY
OF
BASED
APPROACHES
REPRESENT
AN
OPPORTUNITY
FOR
MAKING
IT
THE
RESPECTIVE
SERVERS
THIS
SIMPLIFIES
NETWORK
MANAGE
EASIER
TO
DEPLOY
AND
MANAGE
DIFFERENT
TYPES
OF
WIRELESS
MENT
AND
PROVIDES
MORE
FLEXIBILITY
TO
NETWORK
OPERATORS
NETWORKS
SUCH
AS
WLANS
AND
CELLULAR
NETWORKS
EXISTING
SOUTHBOUND
INTERFACES
CAN
BE
USED
FOR
ACTIVELY
TRADITIONALLY
HARD
TO
MONITORING
THE
DATA
PLANE
LOAD
THIS
INFORMATION
CAN
BE
IMPLEMENT
BUT
DESIRED
FEATURES
ARE
INDEED
BECOMING
A
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
TABLE
NETWORK
APPLICATIONS
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
REALITY
WITH
THE
SDN
BASED
WIRELESS
NETWORKS
THESE
IN
CLUDE
SEAMLESS
MOBILITY
THROUGH
EFFICIENT
HANDOVERS
LOAD
BALANCING
CREATION
OF
ON
DEMAND
VIRTUAL
ACCESS
POINTS
VAPS
DOWN
LINK
SCHEDULING
E
G
AN
OPENFLOW
SWITCH
CAN
DO
A
RATE
SHAPING
OR
TIME
DIVISION
DYNAMIC
SPECTRUM
USAGE
ENHANCED
INTERCELL
INTERFERENCE
COORDINATION
DEVICE
TO
DEVICE
OFFLOADING
I
E
DECIDE
WHEN
AND
HOW
LTE
TRANSMISSIONS
SHOULD
BE
OFFLOADED
TO
USERS
ADOPT
ING
THE
DEVICE
TO
DEVICE
PARADIGM
PER
CLIENT
AND
OR
BASE
STATION
RESOURCE
BLOCK
ALLOCATIONS
I
E
TIME
AND
FREQUENCY
SLOTS
IN
LTE
ORTHOGONAL
FREQUENCY
DIVISION
MULTIPLE
ACCESS
OFDMA
NETWORKS
WHICH
ARE
KNOWN
AS
RESOURCE
BLOCKS
CONTROL
AND
ASSIGN
TRANSMISSION
AND
POWER
PARAMETERS
IN
DEVICES
OR
IN
A
GROUP
BASIS
E
G
ALGORITHMS
TO
OPTIMIZE
THE
TRANSMISSION
AND
POWER
PARAMETERS
OF
WLAN
DEVICES
DEFINE
AND
ASSIGN
TRANSMISSION
POWER
VALUES
TO
EACH
RESOURCE
BLOCK
AT
EACH
BASE
STATION
IN
LTE
OFDMA
NETWORKS
SIM
PLIFIED
ADMINISTRATION
EASY
MANAGE
MENT
OF
HETEROGENEOUS
NETWORK
TECHNOLOGIES
INTEROPERABILITY
BETWEEN
DIFFERENT
NETWORKS
SHARED
WIRELESS
INFRASTRUCTURES
SEAMLESS
SUB
SCRIBER
MOBILITY
AND
CELLULAR
NETWORKS
QOS
AND
AC
CESS
CONTROL
POLICIES
MADE
FEASIBLE
AND
EASIER
AND
EASY
DEPLOYMENT
OF
NEW
APPLICATIONS
ONE
OF
THE
FIRST
STEPS
TOWARD
REALIZING
THESE
FEATURES
IN
WIRELESS
NETWORKS
IS
TO
PROVIDE
PROGRAMMABLE
AND
FLEXIBLE
STACK
LAYERS
FOR
WIRELESS
NETWORKS
ONE
OF
THE
FIRST
EXAMPLES
IS
OPENRADIO
WHICH
PROPOSES
A
SOFT
TABLE
NETWORK
APPLICATIONS
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
WARE
ABSTRACTION
LAYER
FOR
DECOUPLING
THE
WIRELESS
PROTOCOL
DEFINITION
FROM
THE
HARDWARE
ALLOWING
SHARED
MAC
LAYERS
ACROSS
DIFFERENT
PROTOCOLS
USING
COMMODITY
MULTICORE
PLAT
FORMS
OPENRADIO
CAN
BE
SEEN
AS
THE
OPENFLOW
FOR
WIRE
LESS
NETWORKS
SIMILARLY
SOFTRAN
PROPOSES
TO
RETHINK
THE
RADIO
ACCESS
LAYER
OF
CURRENT
LTE
INFRASTRUC
TURES
ITS
MAIN
GOAL
IS
TO
ALLOW
OPERATORS
TO
IMPROVE
AND
OPTIMIZE
ALGORITHMS
FOR
BETTER
HANDOVERS
FINE
GRAINED
CONTROL
OF
TRANSMIT
POWERS
RESOURCE
BLOCK
ALLOCATION
AMONG
OTHER
MANAGEMENT
TASKS
LIGHT
VIRTUAL
ACCESS
POINTS
LVAPS
IS
ANOTHER
INTEREST
ING
WAY
OF
IMPROVING
THE
MANAGEMENT
CAPABILITIES
OF
WIRE
LESS
NETWORKS
AS
PROPOSED
BY
THE
ODIN
FRAMEWORK
DIFFERENTLY
FROM
OPENRADIO
IT
WORKS
WITH
EXISTING
WIRELESS
HARDWARE
AND
DOES
NOT
IMPOSE
ANY
CHANGE
ON
IEEE
STANDARDS
AN
LVAP
IS
IMPLEMENTED
AS
A
UNIQUE
BASIC
SERVICE
SET
IDENTIFICATION
ASSOCIATED
WITH
A
SPECIFIC
CLIENT
WHICH
MEANS
THAT
THERE
IS
A
ONE
TO
ONE
MAPPING
BETWEEN
LVAPS
AND
CLIENTS
THIS
PER
CLIENT
ACCESS
POINT
AP
ABSTRACTION
SIMPLIFIES
THE
HANDLING
OF
CLIENT
ASSOCIATIONS
AUTHENTICATION
HANDOVERS
AND
UNIFIED
SLICING
OF
BOTH
WIRED
AND
WIRELESS
PORTIONS
OF
THE
NETWORK
ODIN
ACHIEVES
CONTROL
LOGIC
ISOLATION
BETWEEN
SLICES
SINCE
LVAPS
ARE
THE
PRIMITIVE
TYPE
UPON
WHICH
APPLICATIONS
MAKE
CONTROL
DECISIONS
AND
APPLICATIONS
DO
NOT
HAVE
VISIBILITY
OF
LVAPS
FROM
OUTSIDE
THEIR
SLICE
THIS
EMPOWERS
INFRASTRUC
TURE
OPERATORS
TO
PROVIDE
SERVICES
THROUGH
ODIN
APPLICA
TIONS
SUCH
AS
A
MOBILITY
MANAGER
CLIENT
BASED
LOAD
BALANCER
CHANNEL
SELECTION
ALGORITHM
AND
WIRELESS
TROU
BLESHOOTING
APPLICATION
WITHIN
DIFFERENT
NETWORK
SLICES
FOR
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
INSTANCE
WHEN
A
USER
MOVES
FROM
ONE
AP
TO
ANOTHER
THE
OTHER
INITIATIVES
OF
THIS
SECOND
CLASS
PROPOSE
A
STRONGER
NETWORK
MOBILITY
MANAGEMENT
APPLICATION
CAN
AUTOMATI
DECOUPLING
BETWEEN
BASIC
PRIMITIVES
E
G
MATCHING
AND
CALLY
AND
PROACTIVELY
ACT
AND
MOVE
THE
CLIENT
LVAP
FROM
COUNTING
AND
HEAVIER
TRAFFIC
ANALYSIS
FUNCTIONS
SUCH
AS
THE
ONE
AP
TO
THE
OTHER
IN
THIS
WAY
A
WIRELESS
CLIENT
WILL
NOT
DETECTION
OF
ANOMALY
CONDITIONS
ATTACKS
A
STRONGER
EVEN
NOTICE
THAT
IT
STARTED
TO
USE
A
DIFFERENT
AP
BECAUSE
SEPARATION
FAVORS
PORTABILITY
AND
FLEXIBILITY
FOR
INSTANCE
A
THERE
IS
NO
PERCEPTIVE
HANDOFF
DELAY
AS
IT
WOULD
BE
THE
CASE
FUNCTIONALITY
TO
DETECT
ABNORMAL
FLOWS
SHOULD
NOT
BE
CON
IN
TRADITIONAL
WIRELESS
NETWORKS
STRAINED
BY
THE
BASIC
PRIMITIVES
OR
THE
SPECIFIC
HARDWARE
VERY
DENSE
HETEROGENEOUS
WIRELESS
NETWORKS
HAVE
ALSO
IMPLEMENTATION
PUT
IN
ANOTHER
WAY
DEVELOPERS
SHOULD
BE
BEEN
A
TARGET
FOR
SDN
THESE
DENSENETS
HAVE
LIMITATIONS
EMPOWERED
WITH
STREAMING
ABSTRACTIONS
AND
HIGHER
LEVEL
DUE
TO
CONSTRAINTS
SUCH
AS
RADIO
ACCESS
NETWORK
BOTTLE
PROGRAMMING
CAPABILITIES
NECKS
CONTROL
OVERHEAD
AND
HIGH
OPERATIONAL
COSTS
IN
THAT
VEIN
SOME
DATA
AND
CONTROL
PLANE
ABSTRACTIONS
A
DYNAMIC
TWO
TIER
SDN
CONTROLLER
HIERARCHY
CAN
BE
HAVE
BEEN
SPECIFICALLY
DESIGNED
FOR
MEASUREMENT
PURPOSES
ADAPTED
TO
ADDRESS
SOME
OF
THESE
CONSTRAINTS
LOCAL
OPENSKETCH
IS
A
SPECIAL
PURPOSE
SOUTHBOUND
API
CONTROLLERS
CAN
BE
USED
TO
TAKE
FAST
AND
FINE
GRAINED
DECI
DESIGNED
TO
PROVIDE
FLEXIBILITY
FOR
NETWORK
MEASUREMENTS
SIONS
WHILE
REGIONAL
OR
GLOBAL
CONTROLLERS
CAN
HAVE
A
FOR
INSTANCE
BY
ALLOWING
MULTIPLE
MEASUREMENT
TASKS
TO
BROADER
COARSER
GRAINED
SCOPE
I
E
THAT
TAKE
SLOWER
BUT
EXECUTE
CONCURRENTLY
WITHOUT
IMPAIRING
ACCURACY
THE
IN
MORE
GLOBAL
DECISIONS
IN
SUCH
A
WAY
DESIGNING
A
SINGLE
TERNAL
DESIGN
OF
AN
OPENSKETCH
SWITCH
CAN
BE
THOUGHT
OF
AS
INTEGRATED
ARCHITECTURE
THAT
ENCOMPASSES
LTE
MACRO
PICO
A
PIPELINE
WITH
THREE
STAGES
HASHING
CLASSIFICATION
AND
FEMTO
AND
WIFI
CELLS
WHILE
CHALLENGING
SEEMS
FEASIBLE
COUNTING
INPUT
PACKETS
FIRST
PASS
THROUGH
A
HASHING
FUNC
TION
THEN
THEY
ARE
CLASSIFIED
ACCORDING
TO
A
MATCHING
MEASUREMENT
AND
MONITORING
MEASUREMENT
AND
MO
RULE
FINALLY
THE
MATCH
RULE
IDENTIFIES
A
COUNTING
INDEX
NITORING
SOLUTIONS
CAN
BE
DIVIDED
INTO
TWO
CLASSES
FIRST
WHICH
IS
USED
TO
CALCULATE
THE
COUNTER
LOCATION
IN
THE
APPLICATIONS
THAT
PROVIDE
NEW
FUNCTIONALITY
FOR
OTHER
NET
COUNTING
STAGE
WHILE
A
TCAM
WITH
FEW
ENTRIES
IS
ENOUGH
WORKING
SERVICES
AND
SECOND
PROPOSALS
THAT
TARGET
TO
IM
FOR
THE
CLASSIFICATION
STAGE
THE
FLEXIBLE
COUNTERS
ARE
STORED
PROVE
FEATURES
OF
OPENFLOW
BASED
SDNS
SUCH
AS
TO
REDUCE
IN
SRAM
THIS
MAKES
THE
OPENSKETCH
OPERATION
EFFICIENT
CONTROL
PLANE
OVERLOAD
DUE
TO
THE
COLLECTION
OF
STATISTICS
FAST
MATCHING
AND
COST
EFFECTIVE
CHEAPER
SRAMS
TO
STORE
AN
EXAMPLE
OF
THE
FIRST
CLASS
OF
APPLICATIONS
IS
IMPROVING
COUNTERS
THE
VISIBILITY
OF
BROADBAND
PERFORMANCE
AN
OTHER
MONITORING
FRAMEWORKS
SUCH
AS
OPENSAMPLE
SDN
BASED
BROADBAND
HOME
CONNECTION
CAN
SIMPLIFY
THE
AND
PAYLESS
PROPOSE
DIFFERENT
MECHANISMS
FOR
ADDITION
OF
NEW
FUNCTIONS
IN
MEASUREMENT
SYSTEMS
SUCH
AS
DELIVERING
REAL
TIME
LOW
LATENCY
AND
FLEXIBLE
MONITORING
BISMARK
ALLOWING
THE
SYSTEM
TO
REACT
TO
CHANGING
CAPABILITIES
TO
SDN
WITHOUT
IMPAIRING
THE
LOAD
AND
PERFOR
CONDITIONS
IN
THE
HOME
NETWORK
AS
AN
EXAMPLE
A
HOME
MANCE
OF
THE
CONTROL
PLANE
THE
PROPOSED
SOLUTIONS
TAKE
GATEWAY
CAN
PERFORM
REACTIVE
TRAFFIC
SHAPING
CONSIDERING
ADVANTAGE
OF
SAMPLING
TECHNOLOGIES
LIKE
SFLOW
TO
THE
CURRENT
MEASUREMENT
RESULTS
OF
THE
HOME
NETWORK
MONITOR
HIGH
SPEED
NETWORKS
AND
FLEXIBLE
COLLECTIONS
OF
THE
SECOND
CLASS
OF
SOLUTIONS
TYPICALLY
INVOLVE
DIFFERENT
LOOSELY
COUPLED
PLUG
AND
PLAY
COMPONENTS
TO
PROVIDE
AB
KINDS
OF
SAMPLING
AND
ESTIMATION
TECHNIQUES
TO
BE
APPLIED
STRACT
NETWORK
VIEWS
YIELDING
HIGH
PERFORMANCE
AND
EFFI
IN
ORDER
TO
REDUCE
THE
BURDEN
OF
THE
CONTROL
PLANE
WITH
CIENT
NETWORK
MONITORING
APPROACHES
RESPECT
TO
THE
COLLECTION
OF
DATA
PLANE
STATISTICS
DIFFERENT
TECHNIQUES
HAVE
BEEN
APPLIED
TO
ACHIEVE
THIS
GOAL
SUCH
AS
SECURITY
AND
DEPENDABILITY
AN
ALREADY
DIVERSE
SET
OF
STOCHASTIC
AND
DETERMINISTIC
PACKET
SAMPLING
TECHNIQUES
SECURITY
AND
DEPENDABILITY
PROPOSALS
IS
EMERGING
IN
THE
TRAFFIC
MATRIX
ESTIMATION
FINE
GRAINED
MONI
CONTEXT
OF
SDNS
MOST
TAKE
ADVANTAGE
OF
SDN
FOR
IMPROV
TORING
OF
WILDCARD
RULES
TWO
STAGE
BLOOM
FILTERS
ING
SERVICES
REQUIRED
TO
SECURE
SYSTEMS
AND
NETWORKS
SUCH
TO
REPRESENT
MONITORING
RULES
AND
PROVIDE
HIGH
MEASURE
AS
POLICY
ENFORCEMENT
E
G
ACCESS
CONTROL
FIREWALLING
MENT
ACCURACY
WITHOUT
INCURRING
IN
EXTRA
MEMORY
OR
CON
MIDDLEBOXES
AS
MIDDLEPIPES
TROL
PLANE
TRAFFIC
OVERHEAD
AND
SPECIAL
MONITORING
DOS
ATTACKS
DETECTION
AND
MITIGATION
FUNCTIONS
EXTENSIONS
TO
OPENFLOW
IN
FORWARDING
DEVICES
RANDOM
HOST
MUTATION
I
E
RANDOMLY
AND
FREQUENTLY
TO
REDUCE
TRAFFIC
AND
PROCESSING
LOAD
ON
THE
CONTROL
PLANE
MUTATE
THE
IP
ADDRESSES
OF
END
HOSTS
TO
BREAK
THE
ATTACKERS
POINT
TO
POINT
TRAFFIC
MATRIX
ESTIMATION
IN
PARTIC
ASSUMPTION
ABOUT
STATIC
IPS
WHICH
IS
THE
COMMON
CASE
ULAR
CAN
HELP
IN
NETWORK
DESIGN
AND
OPERATIONAL
TASKS
MONITORING
OF
CLOUD
INFRASTRUCTURES
FOR
FINE
GRAINED
SUCH
AS
LOAD
BALANCING
ANOMALY
DETECTION
CAPACITY
PLAN
SECURITY
INSPECTIONS
I
E
AUTOMATICALLY
ANALYZE
AND
DETOUR
NING
AND
NETWORK
PROVISIONING
WITH
INFORMATION
ON
THE
SUSPECTED
TRAFFIC
TO
BE
FURTHER
INSPECTED
BY
SPECIALIZED
SET
OF
ACTIVE
FLOWS
IN
THE
NETWORK
ROUTING
INFORMATION
NETWORK
SECURITY
APPLIANCES
SUCH
AS
DEEP
PACKET
INSPEC
E
G
FROM
THE
ROUTING
APPLICATION
FLOW
PATHS
AND
FLOW
TION
SYSTEMS
TRAFFIC
ANOMALY
DETECTION
COUNTERS
IN
THE
SWITCHES
IT
IS
POSSIBLE
TO
CONSTRUCT
A
TRAFFIC
FINE
GRAINED
FLOW
BASED
NETWORK
ACCESS
CONTROL
MATRIX
USING
DIVERSE
AGGREGATION
LEVELS
FOR
SOURCES
AND
FINE
GRAINED
POLICY
ENFORCEMENT
FOR
PERSONAL
MOBILE
DESTINATIONS
APPLICATIONS
AND
SO
ON
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
OTHERS
ADDRESS
OPENFLOW
BASED
VIEW
OF
SDN
SECURITY
ISSUES
AND
CHALLENGES
CAN
BE
FOUND
IN
NETWORKS
ISSUES
SUCH
AS
FLOW
RULE
PRIORITIZATION
SECURITY
SECTION
V
F
SERVICES
COMPOSITION
PROTECTION
AGAINST
TRAFFIC
OVERLOAD
AND
PROTECTION
AGAINST
MALICIOUS
ADMINISTRATORS
DATA
CENTER
NETWORKING
FROM
SMALL
ENTERPRISES
TO
LARGE
SCALE
CLOUD
PROVIDERS
MOST
OF
THE
EXISTING
IT
SYSTEMS
THERE
ARE
ESSENTIALLY
TWO
APPROACHES
ONE
INVOLVES
AND
SERVICES
ARE
STRONGLY
DEPENDENT
ON
HIGHLY
SCALABLE
AND
USING
SDNS
TO
IMPROVE
NETWORK
SECURITY
AND
ANOTHER
FOR
EFFICIENT
DATA
CENTERS
YET
THESE
INFRASTRUCTURES
STILL
POSE
IMPROVING
THE
SECURITY
OF
THE
SDN
ITSELF
THE
FOCUS
HAS
SIGNIFICANT
CHALLENGES
REGARDING
COMPUTING
STORAGE
AND
BEEN
THUS
FAR
IN
THE
LATTER
NETWORKING
CONCERNING
THE
LATTER
DATA
CENTERS
SHOULD
BE
DESIGNED
AND
DEPLOYED
IN
SUCH
A
WAY
AS
TO
OFFER
HIGH
AND
USING
SDN
TO
IMPROVE
THE
SECURITY
OF
CURRENT
NETWORKS
FLEXIBLE
CROSS
SECTION
BANDWIDTH
AND
LOW
LATENCY
QOS
PROBABLY
THE
FIRST
INSTANCE
OF
SDN
WAS
AN
APPLICATION
FOR
BASED
ON
THE
APPLICATION
REQUIREMENTS
HIGH
LEVELS
OF
RESI
SECURITY
POLICIES
ENFORCEMENT
AN
SDN
ALLOWS
THE
LIENCE
INTELLIGENT
RESOURCE
UTILIZATION
TO
REDUCE
ENERGY
ENFORCEMENT
TO
BE
DONE
ON
THE
FIRST
ENTRY
POINT
TO
THE
CONSUMPTION
AND
IMPROVE
OVERALL
EFFICIENCY
AGILITY
IN
NETWORK
E
G
THE
ETHERNET
SWITCH
TO
WHICH
THE
USER
IS
PROVISIONING
NETWORK
RESOURCES
FOR
EXAMPLE
BY
MEANS
OF
CONNECTED
TO
ALTERNATIVELY
IN
A
HYBRID
ENVIRONMENT
NETWORK
VIRTUALIZATION
AND
ORCHESTRATION
WITH
COMPUTING
SECURITY
POLICY
ENFORCEMENT
CAN
BE
MADE
ON
A
WIDER
NET
AND
STORAGE
AND
SO
FORTH
NOT
SURPRISINGLY
WORK
PERIMETER
THROUGH
PROGRAMMABLE
DEVICES
WITHOUT
MANY
OF
THESE
ISSUES
REMAIN
OPEN
DUE
TO
THE
COMPLEXITY
THE
NEED
TO
MIGRATE
THE
ENTIRE
INFRASTRUCTURE
TO
OPENFLOW
AND
INFLEXIBILITY
OF
TRADITIONAL
NETWORK
ARCHITECTURES
WITH
EITHER
APPLICATION
MALICIOUS
ACTIONS
ARE
THE
EMERGENCE
OF
SDN
IS
EXPECTED
TO
CHANGE
THE
CUR
BLOCKED
BEFORE
ENTERING
THE
CRITICAL
REGIONS
OF
THE
NETWORK
RENT
STATE
OF
AFFAIRS
EARLY
RESEARCH
EFFORTS
HAVE
INDEED
SDN
HAS
BEEN
SUCCESSFULLY
APPLIED
FOR
OTHER
PURPOSES
SHOWED
THAT
DATA
CENTER
NETWORKING
CAN
SIGNIFICANTLY
BE
NAMELY
FOR
THE
DETECTION
AND
REACTION
AGAINST
DISTRIBUTED
NEFIT
FROM
SDN
IN
SOLVING
DIFFERENT
PROBLEMS
SUCH
AS
LIVE
DENIAL
OF
SERVICE
DDOS
FLOODING
ATTACKS
AND
ACTIVE
NETWORK
MIGRATION
IMPROVED
NETWORK
MANAGEMENT
SECURITY
OPENFLOW
FORWARDING
DEVICES
MAKE
IT
EMINENT
FAILURE
AVOIDANCE
RAPID
EASIER
TO
COLLECT
A
VARIETY
OF
INFORMATION
FROM
THE
NETWORK
DEPLOYMENT
FROM
DEVELOPMENT
TO
PRODUCTION
NETWORKS
IN
A
TIMELY
MANNER
WHICH
IS
VERY
HANDY
FOR
ALGORITHMS
TROUBLESHOOTING
OPTIMIZATION
OF
NET
SPECIALIZED
IN
DETECTING
DDOS
FLOODING
ATTACKS
WORK
UTILIZATION
DYNAMIC
AND
THE
CAPABILITIES
OFFERED
BY
SDNS
IN
INCREASING
THE
ABILITY
ELASTIC
PROVISIONING
OF
MIDDLEBOXES
AS
A
SERVICE
AND
TO
COLLECT
STATISTICS
DATA
FROM
THE
NETWORK
AND
OF
ALLOWING
MINIMIZATION
OF
FLOW
SETUP
LATENCY
AND
REDUCTION
OF
CON
APPLICATIONS
TO
ACTIVELY
PROGRAM
THE
FORWARDING
DEVICES
ARE
TROLLER
OPERATING
COSTS
SDN
CAN
ALSO
OFFER
NETWORK
POWERFUL
FOR
PROACTIVE
AND
SMART
SECURITY
POLICY
ENFORCEMENT
ING
PRIMITIVES
FOR
CLOUD
APPLICATIONS
SOLUTIONS
TO
PREDICT
TECHNIQUES
SUCH
AS
ACTIVE
SECURITY
THIS
NOVEL
SECURITY
NETWORK
TRANSFERS
OF
APPLICATIONS
MECHANISMS
METHODOLOGY
PROPOSES
A
NOVEL
FEEDBACK
LOOP
TO
IMPROVE
THE
FOR
FAST
REACTION
TO
OPERATION
PROBLEMS
NETWORK
AWARE
VM
CONTROL
OF
DEFENSE
MECHANISMS
OF
A
NETWORKED
INFRASTRUC
PLACEMENT
QOS
SUPPORT
REAL
TIME
TURE
AND
IS
CENTERED
AROUND
FIVE
CORE
CAPABILITIES
PROTECT
NETWORK
MONITORING
AND
PROBLEM
DETECTION
SENSE
ADJUST
COLLECT
AND
COUNTER
IN
THIS
PERSPECTIVE
ACTIVE
SECURITY
POLICY
ENFORCEMENT
SERVICES
AND
MECHAN
SECURITY
PROVIDES
A
CENTRALIZED
PROGRAMMING
INTERFACE
THAT
ISMS
AND
ENABLE
PROGRAMMATIC
ADAPTATION
OF
SIMPLIFIES
THE
INTEGRATION
OF
MECHANISMS
FOR
DETECTING
TRANSPORT
PROTOCOLS
ATTACKS
BY
COLLECTING
DATA
FROM
DIFFERENT
SOURCES
TO
SDN
CAN
HELP
INFRASTRUCTURE
PROVIDERS
TO
EXPOSE
MORE
IDENTIFY
ATTACKS
CONVERGING
TO
A
CONSISTENT
CONFIGURATION
NETWORKING
PRIMITIVES
TO
THEIR
CUSTOMERS
BY
ALLOWING
VIR
FOR
THE
SECURITY
APPLIANCES
AND
ENFORCING
COUNTER
TUAL
NETWORK
ISOLATION
CUSTOM
ADDRESSING
AND
THE
PLACE
MEASURES
TO
BLOCK
OR
MINIMIZE
THE
EFFECT
OF
ATTACKS
MENT
OF
MIDDLEBOXES
AND
VIRTUAL
DESKTOP
CLOUD
APPLICATIONS
TO
FULLY
EXPLORE
THE
POTENTIAL
OF
VIRTUAL
NET
IMPROVING
THE
SECURITY
OF
SDN
ITSELF
THERE
ARE
ALREADY
WORKS
IN
CLOUDS
AN
ESSENTIAL
FEATURE
IS
VIRTUAL
NETWORK
SOME
RESEARCH
EFFORTS
IN
IDENTIFYING
THE
CRITICAL
SECURITY
MIGRATION
SIMILARLY
TO
TRADITIONAL
VIRTUAL
MACHINE
MIGRA
THREATS
OF
SDNS
AND
IN
AUGMENTING
ITS
SECURITY
AND
DEPEN
TION
A
VIRTUAL
NETWORK
MAY
NEED
TO
BE
MIGRATED
WHEN
ITS
DABILITY
EARLY
APPROACHES
TRY
TO
APPLY
VIRTUAL
MACHINES
MOVE
FROM
ONE
PLACE
TO
ANOTHER
INTEG
SIMPLE
TECHNIQUES
SUCH
AS
CLASSIFYING
APPLICATIONS
AND
RATING
LIVE
MIGRATION
OF
VIRTUAL
MACHINES
AND
VIRTUAL
NET
USING
RULE
PRIORITIZATION
TO
ENSURE
THAT
RULES
GENERATED
BY
WORKS
IS
ONE
OF
THE
FOREFRONT
CHALLENGES
TO
ACHIEVE
SECURITY
APPLICATIONS
WILL
NOT
BE
OVERWRITTEN
BY
LOWER
THIS
GOAL
IT
IS
NECESSARY
TO
DYNAMICALLY
RECONFIGURE
ALL
PRIORITY
APPLICATIONS
OTHER
PROPOSALS
TRY
TO
GO
A
STEP
AFFECTED
NETWORKING
DEVICES
PHYSICAL
OR
VIRTUAL
THIS
WAS
FURTHER
BY
PROVIDING
A
FRAMEWORK
FOR
DEVELOPING
SECURITY
SHOWN
TO
BE
POSSIBLE
WITH
SDN
PLATFORMS
SUCH
AS
NVP
RELATED
APPLICATIONS
IN
SDNS
HOWEVER
THERE
IS
STILL
ANOTHER
POTENTIAL
APPLICATION
OF
SDN
IN
DATA
CENTERS
IS
A
LONG
WAY
TO
GO
IN
THE
DEVELOPMENT
OF
SECURE
AND
IN
DETECTING
ABNORMAL
BEHAVIORS
IN
NETWORK
OPERATION
DEPENDABLE
SDN
INFRASTRUCTURES
AN
IN
DEEP
OVER
BY
USING
DIFFERENT
BEHAVIORAL
MODELS
AND
COLLECTING
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
THE
NECESSARY
INFORMATION
FROM
ELEMENTS
INVOLVED
IN
THE
DEBUGGING
AND
TROUBLESHOOTING
IN
NETWORKING
IS
AT
A
OPERATION
OF
A
DATA
CENTER
INFRASTRUCTURE
OPERATORS
APPLI
VERY
PRIMITIVE
STAGE
IN
TRADITIONAL
NETWORKS
ENGINEERS
CATIONS
IT
IS
POSSIBLE
TO
CONTINUOUSLY
BUILD
SIGNATURES
FOR
AND
DEVELOPERS
HAVE
TO
USE
TOOLS
SUCH
AS
PING
APPLICATIONS
BY
PASSIVELY
CAPTURING
CONTROL
TRAFFIC
THEN
TRACEROUTE
TCPDUMP
NMAP
NETFLOW
AND
THE
SIGNATURE
HISTORY
CAN
BE
USED
TO
IDENTIFY
DIFFERENCES
IN
SNMP
STATISTICS
FOR
DEBUGGING
AND
TROUBLESHOOTING
BEHAVIOR
EVERY
TIME
A
DIFFERENCE
IS
DETECTED
OPERATORS
DEBUGGING
A
COMPLEX
NETWORK
WITH
SUCH
PRIMITIVE
TOOLS
CAN
REACTIVELY
OR
PROACTIVELY
TAKE
CORRECTIVE
MEASURES
THIS
IS
VERY
HARD
EVEN
WHEN
ONE
CONSIDERS
FRAMEWORKS
SUCH
AS
CAN
HELP
TO
ISOLATE
ABNORMAL
COMPONENTS
AND
AVOID
FURTHER
XTRACE
NETREPLAY
AND
NETCHECK
WHICH
DAMAGE
TO
THE
INFRASTRUCTURE
IMPROVE
DEBUGGING
CAPABILITIES
IN
NETWORKS
IT
IS
STILL
DIFFI
CULT
TO
TROUBLESHOOT
NETWORKING
INFRASTRUCTURES
FOR
IN
TOWARD
SDN
APP
STORES
AS
CAN
BE
OBSERVED
IN
STANCE
THESE
FRAMEWORKS
REQUIRE
A
HUGE
EFFORT
IN
TERMS
OF
TABLES
AND
MOST
SDN
APPLICATIONS
RELY
ON
NOX
AND
NETWORK
INSTRUMENTATION
THE
ADDITIONAL
COMPLEXITY
INTRO
OPENFLOW
NOX
WAS
THE
FIRST
CONTROLLER
AVAILABLE
FOR
DUCED
BY
DIFFERENT
TYPES
OF
DEVICES
TECHNOLOGIES
AND
GENERAL
USE
MAKING
IT
A
NATURAL
CHOICE
FOR
MOST
USE
CASES
VENDOR
SPECIFIC
COMPONENTS
AND
FEATURES
MAKES
MATTERS
SO
FAR
AS
INDICATED
BY
THE
SHEER
NUMBER
OF
SECURITY
RELATED
WORSE
AS
A
CONSEQUENCE
THESE
SOLUTIONS
MAY
FIND
IT
HARD
TO
APPLICATIONS
SECURITY
IS
PROBABLY
ONE
OF
THE
KILLER
APPLI
BE
WIDELY
IMPLEMENTED
AND
DEPLOYED
IN
CURRENT
NETWORKS
CATIONS
FOR
SDNS
CURIOUSLY
WHILE
MOST
USE
CASES
RELY
ON
SDN
OFFERS
SOME
HOPE
IN
THIS
RESPECT
THE
HARDWARE
OPENFLOW
NEW
SOLUTIONS
SUCH
AS
SOFTRAN
ARE
CONSIDERING
AGNOSTIC
SOFTWARE
BASED
CONTROL
CAPABILITIES
AND
THE
USE
OF
DIFFERENT
APIS
AS
IS
THE
CASE
OF
THE
FEMTO
API
OPEN
STANDARDS
FOR
CONTROL
COMMUNICATION
CAN
POTENTIALLY
THIS
DIVERSITY
OF
APPLICATIONS
AND
APIS
WILL
MOST
PROBABLY
MAKE
DEBUGGING
AND
TROUBLESHOOTING
EASIER
THE
FLEXIBILITY
KEEP
GROWING
IN
SDN
AND
PROGRAMMABILITY
INTRODUCED
BY
SDN
IS
INDEED
OPENING
THERE
ARE
OTHER
KINDS
OF
NETWORK
APPLICATIONS
THAT
DO
NEW
AVENUES
FOR
DEVELOPING
BETTER
TOOLS
TO
DEBUG
TROUBLE
NOT
EASILY
FIT
IN
OUR
TAXONOMY
SUCH
AS
AVIOR
OESS
SHOOT
VERIFY
AND
TEST
NETWORKS
AND
SDN
APP
STORE
AVIOR
AND
OESS
EARLY
DEBUGGING
TOOLS
FOR
OPENFLOW
ENABLED
NETWORKS
ARE
GRAPHICAL
INTERFACES
AND
SETS
OF
SOFTWARE
TOOLS
THAT
SUCH
AS
NDB
OFREWIND
AND
NETSIGHT
MAKE
IT
EASIER
TO
CONFIGURE
AND
MANAGE
CONTROLLERS
E
G
MAKE
IT
EASIER
TO
DISCOVER
THE
SOURCE
OF
NETWORK
PROBLEMS
FLOODLIGHT
AND
OPENFLOW
ENABLED
SWITCHES
RESPECTIVELY
SUCH
AS
FAULTY
DEVICE
FIRMWARE
INCONSISTENT
OR
NON
BY
LEVERAGING
THEIR
GRAPHICAL
FUNCTIONS
IT
IS
POSSIBLE
TO
EXISTING
FLOW
RULES
LACK
OF
REACHABILITY
PROGRAM
OPENFLOW
ENABLED
DEVICES
WITHOUT
CODING
IN
A
AND
FAULTY
ROUTING
SIMILARLY
TO
THE
PARTICULAR
PROGRAMMING
LANGUAGE
WELL
KNOWN
GDB
SOFTWARE
DEBUGGER
NDB
PROVIDES
BASIC
THE
SDN
APP
STORE
OWNED
BY
HP
IS
DEBUGGING
ACTIONS
SUCH
AS
BREAKPOINT
WATCH
BACKTRACE
PROBABLY
THE
FIRST
SDN
APPLICATION
MARKET
STORE
CUSTO
SINGLE
STEP
AND
CONTINUE
THESE
PRIMITIVES
HELP
APPLICA
MERS
USING
HP
OPENFLOW
CONTROLLER
HAVE
ACCESS
TO
THE
TION
DEVELOPERS
TO
DEBUG
NETWORKS
IN
A
SIMILAR
WAY
TO
ONLINE
SDN
APP
STORE
AND
ARE
ABLE
TO
SELECT
APPLICATIONS
TO
TRADITIONAL
SOFTWARE
BY
USING
NDB
POSTCARDS
I
E
A
BE
DYNAMICALLY
DOWNLOADED
AND
INSTALLED
IN
THE
CONTROLLER
UNIQUE
PACKET
IDENTIFIER
COMPOSED
OF
A
TRUNCATED
COPY
OF
THE
IDEA
IS
SIMILAR
TO
THE
ANDROID
MARKET
OR
THE
APPLE
THE
PACKET
HEADER
THE
MATCHING
FLOW
ENTRY
THE
SWITCH
STORE
MAKING
IT
EASIER
FOR
DEVELOPERS
TO
PROVIDE
NEW
AND
THE
OUTPUT
PORT
FOR
INSTANCE
A
PROGRAMMER
IS
ABLE
TO
APPLICATIONS
AND
FOR
CUSTOMERS
TO
OBTAIN
THEM
QUICKLY
IDENTIFY
AND
ISOLATE
A
BUGGY
OPENFLOW
SWITCH
WITH
HARDWARE
OR
SOFTWARE
PROBLEMS
IF
THE
SWITCH
IS
PRESENTING
I
CROSS
LAYER
ISSUES
ABNORMAL
BEHAVIOR
SUCH
AS
CORRUPTING
PARTS
OF
THE
PACKET
IN
THIS
SECTION
WE
LOOK
AT
CROSS
LAYER
PROBLEMS
SUCH
AS
HEADER
BY
ANALYZING
THE
PROBLEMATIC
FLOW
SEQUENCES
WITH
DEBUGGING
AND
TROUBLESHOOTING
TESTING
VERIFICATION
SIMULA
A
DEBUGGING
TOOL
ONE
CAN
FIND
IN
A
MATTER
OF
FEW
SECONDS
TION
AND
EMULATION
A
SUMMARY
OF
THE
EXISTING
TOOLS
FOR
WHERE
THE
PACKETS
OF
A
FLOW
ARE
BEING
CORRUPTED
AND
TAKE
DEALING
WITH
THESE
CROSS
LAYER
ISSUES
CAN
BE
FOUND
ON
TABLE
THE
NECESSARY
ACTIONS
TO
SOLVE
THE
PROBLEM
THE
OFREWIND
TOOL
WORKS
DIFFERENTLY
THE
IDEA
IS
DEBUGGING
AND
TROUBLESHOOTING
DEBUGGING
AND
TROU
TO
RECORD
AND
REPLAY
NETWORK
EVENTS
IN
PARTICULAR
CONTROL
BLESHOOTING
HAVE
BEEN
IMPORTANT
SUBJECTS
IN
COMPUTING
MESSAGES
THESE
USUALLY
ACCOUNT
FOR
LESS
THAN
OF
THE
INFRASTRUCTURES
PARALLEL
AND
DISTRIBUTED
SYSTEMS
EMBED
DATA
TRAFFIC
AND
ARE
RESPONSIBLE
FOR
OF
THE
BUGS
DED
SYSTEMS
AND
DESKTOP
APPLICATIONS
THE
THIS
TOOL
ALLOWS
OPERATORS
TO
PERFORM
FINE
GRAINED
TWO
PREDOMINANT
STRATEGIES
APPLIED
TO
DEBUG
AND
TROUBLE
TRACING
OF
NETWORK
BEHAVIOR
BEING
ABLE
TO
DECIDE
WHICH
SHOOT
ARE
RUNTIME
DEBUGGING
E
G
GDB
LIKE
TOOLS
AND
SUBSETS
OF
THE
NETWORK
WILL
BE
RECORDED
AND
AFTERWARDS
POST
MORTEM
ANALYSIS
E
G
TRACING
REPLAY
AND
VISUALIZA
SELECT
SPECIFIC
PARTS
OF
THE
TRACES
TO
BE
REPLAYED
THESE
TION
DESPITE
THE
CONSTANT
EVOLUTION
AND
THE
EMERGENCE
OF
REPLAYS
PROVIDE
VALUABLE
INFORMATION
TO
FIND
THE
ROOT
CAUSE
NEW
TECHNIQUES
TO
IMPROVE
DEBUGGING
AND
TROUBLESHOOT
OF
THE
NETWORK
MISBEHAVIOR
LIKEWISE
NETREVERT
ING
THERE
ARE
STILL
SEVERAL
OPEN
AVENUES
AND
RESEARCH
ALSO
RECORDS
THE
STATE
OF
OPENFLOW
NETWORKS
HOWEVER
QUESTIONS
THE
PRIMARY
GOAL
IS
NOT
TO
REPRODUCE
NETWORK
BEHAVIOR
BUT
TABLE
DEBUGGING
VERIFICATION
AND
SIMULATION
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
RATHER
TO
PROVIDE
ROLLBACK
RECOVERY
IN
CASE
OF
FAILURES
ALLOW
THE
DEVELOPMENT
AND
EXECUTION
OF
A
RICH
SET
OF
TESTS
WHICH
IS
A
COMMON
APPROACH
USED
IN
DISTRIBUTED
SYSTEMS
ON
OPENFLOW
ENABLED
DEVICES
ITS
ULTIMATE
GOAL
IS
TO
MEA
FOR
ELIMINATING
TRANSIENT
ERRORS
IN
NODES
SURE
THE
PROCESSING
CAPACITY
AND
BOTTLENECKS
OF
CONTROL
DESPITE
THE
AVAILABILITY
OF
THESE
DEBUGGING
AND
VERIFI
APPLICATIONS
AND
FORWARDING
DEVICES
WITH
THIS
TOOL
USERS
CATION
TOOLS
IT
IS
STILL
DIFFICULT
TO
ANSWER
QUESTIONS
SUCH
AS
ARE
ABLE
TO
OBSERVE
AND
EVALUATE
FORWARDING
TABLE
CONSIS
WHAT
IS
HAPPENING
TO
MY
PACKETS
THAT
ARE
FLOWING
FROM
TENCY
FLOW
SETUP
LATENCY
FLOW
SPACE
GRANULARITY
PACKET
POINT
A
TO
POINT
B
WHAT
PATH
DO
THEY
FOLLOW
WHAT
HEADER
MODIFICATION
TYPES
AND
TRAFFIC
MONITORING
CAPABILITIES
MODIFICATIONS
DO
THEY
UNDERGO
ON
THE
WAY
TO
ANSWER
E
G
COUNTERS
SOME
OF
THESE
QUESTIONS
ONE
COULD
RECUR
TO
THE
HISTORY
OF
FLOWCHECKER
OFTEN
AND
VERIFLOW
THE
PACKETS
A
PACKET
HISTORY
CORRESPONDS
TO
THE
PATHS
IT
ARE
THREE
EXAMPLES
OF
TOOLS
TO
VERIFY
CORRECTNESS
PROPERTIES
USES
TO
TRAVERSE
THE
NETWORK
AND
THE
HEADER
MODIFICATIONS
VIOLATIONS
ON
THE
SYSTEM
WHILE
THE
FORMER
TWO
ARE
BASED
IN
EACH
HOP
OF
THE
PATH
NETSIGHT
IS
A
PLATFORM
WHOSE
ON
OFFLINE
ANALYSIS
THE
LATTER
IS
CAPABLE
OF
ONLINE
CHECKING
PRIMARY
GOAL
IS
TO
ALLOW
APPLICATIONS
THAT
USE
THE
HISTORY
OF
OF
NETWORK
INVARIANTS
VERIFICATION
CONSTRAINTS
INCLUDE
THE
PACKETS
TO
BE
BUILT
IN
ORDER
TO
FIND
OUT
PROBLEMS
IN
A
SECURITY
AND
REACHABILITY
ISSUES
CONFIGURATION
UPDATES
ON
NETWORK
THIS
PLATFORM
IS
COMPOSED
OF
THREE
ESSENTIAL
ELE
THE
NETWORK
LOOPS
BLACK
HOLES
ETC
MENTS
NETSIGHT
WITH
ITS
DEDICATED
SERVERS
THAT
RECEIVE
OTHER
FORMAL
MODELING
TECHNIQUES
SUCH
AS
ALLOY
CAN
AND
PROCESS
THE
POSTCARDS
FOR
BUILDING
THE
PACKET
HISTORY
BE
APPLIED
TO
SDNS
TO
IDENTIFY
UNEXPECTED
BEHAVIOR
THE
NETSIGH
SWITCHASSIST
WHICH
CAN
BE
USED
IN
FOR
INSTANCE
A
PROTOCOL
SPECIFICATION
CAN
BE
WEAK
WHEN
IT
SWITCHES
TO
REDUCE
THE
PROCESSING
BURDEN
ON
THE
DEDICATED
UNDER
SPECIFIES
SOME
ASPECTS
OF
THE
PROTOCOL
OR
DUE
TO
A
SERVERS
AND
THE
NETSIGHT
HOSTASSIST
TO
GENERATE
AND
VERY
SPECIFIC
SEQUENCE
OF
EVENTS
IN
SUCH
SITUATIONS
MODEL
PROCESS
POSTCARDS
ON
END
HOSTS
E
G
IN
THE
HYPERVISOR
ON
A
CHECKING
TECHNIQUES
SUCH
AS
ALLOY
CAN
HELP
TO
FIND
AND
VIRTUALIZED
INFRASTRUCTURE
CORRECT
UNEXPECTED
BEHAVIORS
NETWATCH
NETSHARK
AND
NPROF
TOOLS
SUCH
AS
FLOWGUARD
ARE
SPECIFICALLY
DE
ARE
THREE
EXAMPLES
OF
TOOLS
BUILT
OVER
NETSIGHT
THE
SIGNED
TO
DETECT
AND
RESOLVE
SECURITY
POLICY
VIOLATIONS
IN
FIRST
ONE
IS
A
LIVE
NETWORK
INVARIANT
MONITOR
FOR
INSTANCE
OPENFLOW
ENABLED
NETWORKS
FLOWGUARD
IS
ABLE
TO
AN
ALARM
CAN
BE
TRIGGERED
EVERY
TIME
A
PACKET
VIOLATES
ANY
EXAMINE
ON
THE
FLY
NETWORK
POLICY
UPDATES
CHECK
INDIRECT
INVARIANT
E
G
NO
LOOPS
THE
SECOND
ONE
NETSHARK
SECURITY
VIOLATIONS
E
G
OPENFLOW
SET
FIELD
ACTIONS
ENABLES
USERS
TO
DEFINE
AND
EXECUTE
FILTERS
ON
THE
ENTIRE
MODIFICATION
AND
PERFORM
STATEFUL
MONITORING
THE
FRAME
HISTORY
OF
PACKETS
WITH
THIS
TOOL
A
NETWORK
OPERATOR
CAN
WORK
USES
FIVE
RESOLUTION
STRATEGIES
FOR
REAL
TIME
SECURITY
VIEW
A
COMPLETE
LIST
OF
PROPERTIES
OF
PACKETS
AT
EACH
HOP
POLICY
VIOLATION
RESOLUTION
FLOW
REJECTING
DEPENDENCY
SUCH
AS
INPUT
PORT
OUTPUT
PORT
AND
PACKET
HEADER
VALUES
BREAKING
UPDATE
REJECTING
FLOW
REMOVING
AND
PACKET
FINALLY
NPROF
CAN
BE
USED
TO
PROFILE
SETS
OF
NETWORK
LINKS
BLOCKING
THESE
RESOLUTIONS
ARE
APPLIED
OVER
DIVERSE
TO
PROVIDE
DATA
FOR
ANALYZING
TRAFFIC
PATTERNS
AND
ROUTING
UPDATE
SITUATIONS
IN
OPENFLOW
ENABLED
NETWORKS
DECISIONS
THAT
MIGHT
BE
CONTRIBUTING
TO
LINK
LOAD
MORE
RECENTLY
TOOLS
SUCH
AS
VERICON
HAVE
BEEN
DESIGNED
TO
VERIFY
THE
CORRECTNESS
OF
SDN
APPLICATIONS
IN
A
TESTING
AND
VERIFICATION
VERIFICATION
AND
TESTING
TOOLS
LARGE
RANGE
OF
NETWORK
TOPOLOGIES
AND
BY
ANALYZING
A
BROAD
CAN
COMPLEMENT
DEBUGGING
AND
TROUBLESHOOTING
RECENT
RANGE
OF
SEQUENCES
OF
NETWORK
EVENTS
IN
PARTICULAR
RESEARCH
HAS
SHOWN
THAT
VERICON
CONFIRMS
OR
NOT
THE
CORRECT
EXECUTION
OF
THE
VERIFICATION
TECHNIQUES
CAN
BE
APPLIED
TO
DETECT
AND
AVOID
SDN
PROGRAM
PROBLEMS
IN
SDN
SUCH
AS
FORWARDING
LOOPS
AND
BLACK
ONE
OF
THE
CHALLENGES
IN
TESTING
AND
VERIFICATION
IS
TO
HOLES
VERIFICATION
CAN
BE
DONE
AT
DIFFERENT
LAYERS
AT
THE
VERIFY
FORWARDING
TABLES
IN
VERY
LARGE
NETWORKS
TO
FIND
CONTROLLERS
NETWORK
APPLICATIONS
OR
NETWORK
DEVICES
ROUTING
ERRORS
WHICH
CAN
CAUSE
TRAFFIC
LOSSES
AND
SECURITY
ADDITIONALLY
THERE
ARE
DIFFERENT
NETWORK
PROPERTIESV
BREACHES
AS
QUICKLY
AS
POSSIBLE
IN
LARGE
SCALE
NETWORKS
IT
MOSTLY
TOPOLOGY
SPECIFICVTHAT
CAN
BE
FORMALLY
VERIFIED
IS
NOT
POSSIBLE
TO
ASSUME
THAT
THE
NETWORK
SNAPSHOT
AT
ANY
PROVIDED
A
NETWORK
MODEL
IS
AVAILABLE
EXAMPLES
OF
SUCH
POINT
IS
CONSISTENT
DUE
TO
THE
FREQUENT
CHANGES
IN
ROUTING
PROPERTIES
ARE
CONNECTIVITY
LOOP
FREEDOM
AND
ACCESS
CON
STATE
THEREFORE
SOLUTIONS
SUCH
AS
HSA
ANTEATER
TROL
A
NUMBER
OF
TOOLS
HAVE
ALSO
BEEN
PROPOSED
TO
NETPLUMBER
VERI
FLOW
AND
ASSERTION
EVALUATE
THE
PERFORMANCE
OF
OPENFLOW
CONTROLLERS
BY
LANGUAGES
ARE
NOT
SUITED
FOR
THIS
KIND
OF
ENVIRON
EMULATING
THE
LOAD
OF
LARGE
SCALE
NETWORKS
E
G
CBENCH
MENT
ANOTHER
IMPORTANT
ISSUE
IS
RELATED
ON
HOW
FAST
THE
OFCBENCHMARK
PKTBLASTER
SIMILARLY
VERIFICATION
PROCESS
IS
DONE
ESPECIALLY
IN
MODERN
DATA
BENCHMARKING
TOOLS
FOR
OPENFLOW
SWITCHES
ARE
ALSO
CENTERS
THAT
HAVE
VERY
TIGHT
TIMING
REQUIREMENTS
LIBRA
AVAILABLE
E
G
OFLOPS
AND
FLOPS
TURBO
REPRESENTS
ONE
OF
THE
FIRST
ATTEMPTS
TO
ADDRESS
THESE
TOOLS
SUCH
AS
NICE
GENERATE
SETS
OF
DIVERSE
PARTICULAR
CHALLENGES
OF
LARGE
SCALE
NETWORKS
THIS
TOOL
STREAMS
OF
PACKETS
TO
TEST
AS
MANY
EVENTS
AS
POSSIBLE
EX
PROVIDES
THE
MEANS
FOR
CAPTURING
STABLE
AND
CONSISTENT
POSING
CORNER
CASES
SUCH
AS
RACE
CONDITIONS
SIMILARLY
SNAPSHOTS
OF
LARGE
SCALE
NETWORK
DEPLOYMENTS
WHILE
ALSO
OFLOPS
PROVIDES
A
SET
OF
FEATURES
AND
FUNCTIONS
THAT
APPLYING
LONG
PREFIX
MATCHING
TECHNIQUES
TO
INCREASE
THE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
SCALABILITY
OF
THE
SYSTEM
BY
USING
MAPREDUCE
COMPUTA
V
ONGOING
RESEARCH
EFFORTS
TIONS
LIBRA
IS
CAPABLE
OF
VERIFYING
THE
CORRECTNESS
OF
A
AND
CHALLENGES
NETWORK
WITH
UP
TO
NODES
WITHIN
ONE
MINUTE
ANTEATER
IS
A
TOOL
THAT
ANALYZES
THE
DATA
PLANE
STATE
OF
NETWORK
DEVICES
BY
ENCODING
SWITCH
CONFIGURATIONS
AS
BOOLEAN
SATISFIABILITY
PROBLEM
SAT
INSTANCES
ALLOWING
TO
USE
A
SAT
SOLVER
TO
ANALYZE
THE
NETWORK
STATE
THE
TOOL
IS
CAPABLE
OF
VERIFYING
VIOLATIONS
OF
INVARIANTS
SUCH
AS
LOOP
FREE
FORWARDING
CONNECTIVITY
AND
CONSISTENCY
THESE
INVARIANTS
USUALLY
INDICATE
A
BUG
IN
THE
NETWORK
I
E
THEIR
DETECTION
THE
RESEARCH
DEVELOPMENTS
WE
HAVE
SURVEYED
SO
FAR
SEEK
TO
OVERCOME
THE
CHALLENGES
OF
REALIZING
THE
VISION
AND
FULFILLING
THE
PROMISES
OF
SDN
WHILE
SECTION
IV
PROVIDED
A
PER
SPECTIVE
STRUCTURED
ACROSS
THE
LAYERS
OF
THE
SDN
STACK
THIS
SECTION
HIGHLIGHTS
RESEARCH
EFFORTS
WE
CONSIDER
OF
PARTICULAR
IMPORTANCE
FOR
UNLEASHING
THE
FULL
POTENTIAL
OF
SDN
AND
THAT
THEREFORE
DESERVES
A
SPECIFIC
COVERAGE
IN
THIS
SURVEY
HELPS
TO
INCREASE
THE
RELIABILITY
OF
THE
NETWORK
DATA
PLANE
A
SWITCH
DESIGNS
SIMULATION
AND
EMULATION
SIMULATION
AND
EMULATION
CURRENTLY
AVAILABLE
OPENFLOW
SWITCHES
ARE
VERY
DI
SOFTWARE
IS
OF
PARTICULAR
IMPORTANCE
FOR
FAST
PROTOTYPING
AND
VERSE
AND
EXHIBIT
NOTABLE
DIFFERENCES
IN
TERMS
OF
FEATURE
TESTING
WITHOUT
THE
NEED
FOR
EXPENSIVE
PHYSICAL
DEVICES
SET
E
G
FLOW
TABLE
SIZE
OPTIONAL
ACTIONS
PERFORMANCE
MININET
IS
THE
FIRST
SYSTEM
THAT
PROVIDES
A
QUICK
AND
E
G
FAST
VERSUS
SLOW
PATH
CONTROL
CHANNEL
LATENCY
EASY
WAY
TO
PROTOTYPE
AND
EVALUATE
SDN
PROTOCOLS
AND
THROUGHPUT
INTERPRETATION
AND
ADHERENCE
TO
THE
PROTOCOL
APPLICATIONS
ONE
OF
THE
KEY
PROPERTIES
OF
MININET
IS
ITS
USE
SPECIFICATION
E
G
BARRIER
COMMAND
AND
ARCHITECTURE
OF
SOFTWARE
BASED
OPENFLOW
SWITCHES
IN
VIRTUALIZED
CON
E
G
HARDWARE
VERSUS
SOFTWARE
DESIGNS
TAINERS
PROVIDING
THE
EXACT
SAME
SEMANTICS
OF
HARDWARE
BASED
OPENFLOW
SWITCHES
THIS
MEANS
THAT
CONTROLLERS
OR
HETEROGENEOUS
IMPLEMENTATIONS
IMPLEMENTATION
APPLICATIONS
DEVELOPED
AND
TESTED
IN
THE
EMULATED
ENVI
CHOICES
HAVE
A
FUNDAMENTAL
IMPACT
ON
THE
BEHAVIOR
ACCU
RONMENT
CAN
BE
IN
THEORY
DEPLOYED
IN
AN
OPENFLOW
RACY
AND
PERFORMANCE
OF
SWITCHES
RANGING
FROM
DIFFER
ENABLED
NETWORK
WITHOUT
ANY
MODIFICATION
USERS
CAN
EASILY
ENCES
IN
FLOW
COUNTER
BEHAVIOR
TO
A
NUMBER
OF
OTHER
EMULATE
AN
OPENFLOW
NETWORK
WITH
HUNDREDS
OF
NODES
AND
PERFORMANCE
METRICS
ONE
APPROACH
TO
ACCOMMODATE
DOZENS
OF
SWITCHES
BY
USING
A
SINGLE
PERSONAL
COMPUTER
SUCH
HETEROGENEITY
IS
THROUGH
NOSIX
A
PORTABLE
API
THAT
MININET
HIFI
IS
AN
EVOLUTION
OF
MININET
THAT
EN
SEPARATES
THE
APPLICATION
EXPECTATIONS
FROM
THE
SWITCH
HANCES
THE
CONTAINER
BASED
LIGHTWEIGHT
VIRTUALIZATION
HETEROGENEITY
TO
DO
SO
NOSIX
PROVIDES
A
PIPELINE
WITH
MECHANISMS
TO
ENFORCE
PERFORMANCE
ISOLATION
RE
OF
MULTIPLE
VIRTUAL
FLOW
TABLES
AND
SWITCH
DRIVERS
VIRTUAL
SOURCE
PROVISIONING
AND
ACCURATE
MONITORING
FOR
PERFOR
FLOW
TABLES
ARE
INTENDED
TO
MEET
THE
EXPECTATIONS
OF
APPLI
MANCE
FIDELITY
ONE
OF
THE
MAIN
GOALS
OF
MININET
HIFI
IS
TO
CATIONS
AND
ARE
ULTIMATELY
TRANSLATED
BY
THE
DRIVERS
INTO
IMPROVE
THE
REPRODUCIBILITY
OF
NETWORKING
RESEARCH
ACTUAL
SWITCH
FLOW
TABLES
TOWARD
TAMING
THE
COMPLEXITY
OF
MININET
CE
AND
SDN
CLOUD
DC
ARE
EXTEN
MULTIPLE
OPENFLOW
PROTOCOL
VERSIONS
WITH
DIFFERENT
SETS
OF
SIONS
TO
MININET
FOR
ENABLING
LARGE
SCALE
SIMULATIONS
MINI
REQUIRED
AND
OPTIONAL
CAPABILITIES
A
ROADBLOCK
FOR
SDN
NET
CE
COMBINES
GROUPS
OF
MININET
INSTANCES
INTO
ONE
PRACTITIONERS
TINYNBI
HAS
BEEN
PROPOSED
AS
A
SIMPLE
CLUSTER
OF
SIMULATOR
INSTANCES
TO
MODEL
GLOBAL
SCALE
NET
API
PROVIDING
A
UNIFYING
SET
OF
CORE
ABSTRACTIONS
OF
FIVE
WORKS
SDN
CLOUD
DC
ENHANCES
MININET
AND
POX
TO
OPENFLOW
PROTOCOL
VERSIONS
FROM
TO
ONGOING
EMULATE
AN
SDN
BASED
INTRA
DC
NETWORK
BY
IMPLEMENTING
EFFORTS
TO
INTRODUCE
A
NEW
HAL
FOR
NON
OPENFLOW
CAPABLE
NEW
SOFTWARE
MODULES
SUCH
AS
DATA
CENTER
TOPOLOGY
DISCOVERY
DEVICES
INCLUDE
THE
DEVELOPMENT
OF
OPEN
SOURCE
AND
NETWORK
TRAFFIC
GENERATION
RECENT
EMULATION
PLATFORM
ARTIFACTS
LIKE
REVISED
OPENFLOW
LIBRARY
ROFL
AND
THE
PROPOSALS
THAT
ENABLE
LARGE
SCALE
EXPERIMENTS
FOLLOWING
A
EXTENSIBLE
DATAPATH
DAEMON
XDPD
A
FRAMEWORK
FOR
DISTRIBUTED
APPROACH
INCLUDE
MAX
INET
DOT
CREATING
NEW
OPENFLOW
DATA
PATH
IMPLEMENTATIONS
BASED
AND
CITYFLOW
THE
LATTER
IS
A
PROJECT
WITH
THE
MAIN
GOAL
ON
A
DIVERSE
SET
OF
HARDWARE
AND
SOFTWARE
PLATFORMS
A
OF
BUILDING
AN
EMULATED
CONTROL
PLANE
FOR
A
CITY
OF
ONE
MILLION
RELATED
OPEN
SOURCE
EFFORT
TO
DEVELOP
A
COMMON
LIBRARY
TO
INHABITANTS
SUCH
INITIATIVES
ARE
A
STARTING
POINT
TO
PROVIDE
IMPLEMENT
OPENFLOW
AND
PROTOCOL
ENDPOINTS
EXPERIMENTAL
INSIGHTS
FOR
LARGE
SCALE
SDN
DEPLOYMENTS
SWITCH
AGENTS
AND
CONTROLLERS
IS
LIBFLUID
WINNER
OF
THE
CAPABILITY
OF
SIMULATING
OPENFLOW
DEVICES
HAS
ALSO
THE
OPENFLOW
DRIVER
COMPETITION
ORGANIZED
BY
THE
ONF
BEEN
ADDED
TO
THE
POPULAR
NS
SIMULATOR
ANOTHER
WITHIN
THE
ONF
THE
FORWARDING
ABSTRACTION
WORKING
SIMULATOR
IS
FS
SDN
WHICH
EXTENDS
THE
FS
SIMULATION
ENGINE
GROUP
FAWG
IS
PURSUING
ANOTHER
SOLUTION
TO
THE
HETERO
BY
INCORPORATING
A
CONTROLLER
AND
SWITCHING
COMPO
GENEITY
PROBLEM
THROUGH
TABLE
TYPE
PATTERNS
TTPS
NENTS
WITH
OPENFLOW
SUPPORT
ITS
MAIN
GOAL
IS
TO
PROVIDE
A
A
TTP
IS
A
STANDARDS
BASED
AND
NEGOTIATED
SWITCH
LEVEL
MORE
REALISTIC
AND
SCALABLE
SIMULATION
PLATFORM
AS
COM
BEHAVIORAL
ABSTRACTION
IT
CONSISTS
OF
THE
RELATIONSHIPS
PARED
TO
MININET
FINALLY
STS
IS
A
SIMULATOR
DE
BETWEEN
TABLES
FORMING
A
GRAPH
STRUCTURE
THE
TYPES
OF
SIGNED
TO
ALLOW
DEVELOPERS
TO
SPECIFY
AND
APPLY
A
VARIETY
OF
TABLES
IN
THE
GRAPH
A
SET
OF
THE
PARAMETERIZED
TABLE
PRO
TEST
CASES
WHILE
ALLOWING
THEM
TO
INTERACTIVELY
EXAMINE
PERTIES
FOR
EACH
TABLE
IN
THE
GRAPH
THE
LEGAL
FLOW
MOD
THE
STATE
OF
THE
NETWORK
AND
TABLE
MOD
COMMANDS
FOR
EACH
FLOW
TABLE
AND
THE
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
METADATA
MASK
THAT
CAN
BE
PASSED
BETWEEN
EACH
TABLE
PAIR
AGENT
INSIDE
THE
SWITCH
OUR
CURRENT
UNDERSTANDING
IN
THE
GRAPH
INDICATES
THAT
AN
EFFECTIVE
WAY
FORWARD
IS
A
NATIVE
DESIGN
OF
SDN
SWITCHES
CONSISTENT
WITH
THE
EVOLUTION
OF
THE
SOUTH
FLOW
TABLE
CAPACITY
FLOW
MATCHING
RULES
ARE
STORED
BOUND
API
STANDARDIZATION
ACTIVITIES
IN
FLOW
TABLES
INSIDE
NETWORK
DEVICES
ONE
PRACTICAL
CHAL
LENGE
IS
TO
PROVIDE
SWITCHES
WITH
LARGE
AND
EFFICIENT
FLOW
EVOLVING
SWITCH
DESIGNS
AND
HARDWARE
ENHANCEMENTS
TABLES
TO
STORE
THE
RULES
TCAMS
ARE
A
COMMON
CHOICE
AS
IN
ANY
SOFTWARE
HARDWARE
INNOVATION
CYCLE
A
NUMBER
OF
TO
HOLD
FLOW
TABLES
WHILE
FLEXIBLE
AND
EFFICIENT
IN
TERMS
OF
ADVANCEMENTS
ARE
TO
BE
EXPECTED
FROM
THE
HARDWARE
PER
MATCHING
CAPABILITIES
TCAMS
ARE
COSTLY
AND
USUALLY
SMALL
SPECTIVE
TO
IMPROVE
SDN
CAPABILITIES
AND
PERFORMANCE
FROM
TO
ENTRIES
SOME
TCAM
CHIPS
TODAY
NEW
SDN
SWITCH
DESIGNS
ARE
APPEARING
IN
A
MYRIAD
OF
INTEGRATE
MILLION
BIT
CONFIGURED
AS
ENTRIES
Ã
HARDWARE
COMBINATIONS
TO
EFFICIENTLY
WORK
TOGETHER
WITH
BIT
PER
ENTRY
INTO
A
SINGLE
CHIP
WORKING
AT
MHZ
TCAMS
SUCH
AS
STATIC
RANDOM
ACCESS
MEMORY
SRAM
I
E
CAPABLE
OF
MILLION
LOOKUPS
PER
SECOND
DYNAMIC
RANDOM
ACCESS
MEMORY
DRAM
REDUCED
HOWEVER
THESE
CHIPS
ARE
EXPENSIVE
AND
HAVE
A
HIGH
POWER
LATENCY
DRAM
GRAPHICS
PROCESSING
UNIT
GPU
FIELD
CONSUMPTION
REPRESENTING
A
MAJOR
POWER
DRAIN
IN
A
PROGRAMMABLE
GATE
ARRAY
FPGA
NETWORK
PROCESSORS
SWITCHING
DEVICE
THESE
ARE
SOME
OF
THE
REASONS
WHY
CPUS
AMONG
OTHER
SPECIALIZED
NETWORK
PROCESSORS
CURRENTLY
AVAILABLE
OPENFLOW
DEVICES
HAVE
TCAMS
WITH
THESE
EARLY
WORKS
SUGGEST
THE
NEED
FOR
ROUGHLY
ENTRIES
WHERE
THE
ACTUAL
CAPACITY
IN
TERMS
OF
ADDITIONAL
EFFORTS
INTO
NEW
HARDWARE
ARCHITECTURES
FOR
OPENFLOW
TABLE
SIZE
HAS
A
NONTRIVIAL
RELATIONSHIP
TO
THE
FUTURE
SDN
SWITCHING
DEVICES
FOR
INSTANCE
SOME
PRO
TYPE
OF
FLOW
ENTRIES
BEING
USED
OPENFLOW
POSALS
TARGET
TECHNOLOGIES
SUCH
AS
GPUS
THAT
HAVE
DEMON
VERSION
INTRODUCED
MULTIPLE
TABLES
THEREBY
ADDING
STRATED
GIGABITS
PER
SECOND
GB
WITH
FLOW
TABLES
OF
EXTRA
FLEXIBILITY
AND
SCALABILITY
INDEED
OPENFLOW
UP
TO
MILLION
EXACT
MATCH
ENTRIES
AND
UP
TO
IMPLIED
STATE
EXPLOSION
DUE
TO
ITS
FLAT
TABLE
MODEL
WILDCARD
ENTRIES
ALTERNATIVES
TO
TCAM
BASED
DE
HOWEVER
SUPPORTING
MULTIPLE
TABLES
IN
HARDWARE
IS
SIGNS
INCLUDE
NEW
HARDWARE
ARCHITECTURES
AND
COM
CHALLENGING
AND
LIMITEDVYET
ANOTHER
MOTIVATION
FOR
THE
PONENTS
AS
WELL
AS
NEW
AND
MORE
SCALABLE
FORWARDING
ONGOING
ONF
FAWG
WORK
ON
TTPS
PLANES
SUCH
AS
THE
ONE
PROPOSED
BY
THE
RAIN
MAN
FIRM
SOME
EFFORTS
FOCUS
ON
COMPRESSION
TECHNIQUES
TO
RE
WARE
OTHER
DESIGN
SOLUTIONS
SUCH
AS
PARALLEL
LOOKUP
DUCE
THE
NUMBER
OF
FLOW
ENTRIES
IN
TCAMS
MODELS
CAN
ALSO
BE
APPLIED
TO
SDN
TO
REDUCE
COSTS
IN
THE
ESPRESSO
HEURISTIC
CAN
BE
USED
TO
COMPRESS
WILD
SWITCHING
AND
ROUTING
DEVICES
RECENT
PROPOSALS
ON
CACHE
CARDS
OF
OPENFLOW
BASED
INTERDOMAIN
ROUTING
TABLES
RE
LIKE
OPENFLOW
SWITCH
ARRANGEMENTS
SHED
SOME
LIGHT
DUCING
THE
FORWARDING
INFORMATION
BASE
FIB
BY
AND
ON
OVERCOMING
THE
PRACTICAL
LIMITATIONS
OF
FLOW
TABLE
SIZES
CONSEQUENTLY
SAVING
UP
TO
FLOW
TABLE
ENTRIES
WITH
CLEVER
SWITCHING
DESIGNS
ADDITIONALLY
COUNTERS
RE
SHADOW
MACS
PROPOSE
LABEL
SWITCHING
FOR
SOLVING
PRESENT
ANOTHER
PRACTICAL
CHALLENGE
IN
SDN
HARDWARE
IM
TWO
PROBLEMS
CONSISTENT
UPDATES
AND
RULE
SPACE
EXHAUS
PLEMENTATIONS
MANY
COUNTERS
ALREADY
EXIST
AND
THEY
TION
BY
USING
OPAQUE
VALUES
SIMILAR
TO
MPLS
LABELS
TO
COULD
LEAD
TO
SIGNIFICANT
CONTROL
PLANE
MONITORING
OVER
ENCODE
FINE
GRAINED
PATHS
AS
LABELS
A
MAJOR
BENEFIT
OF
HEAD
SOFTWARE
DEFINED
COUNTERS
SDCS
HAVE
FIXED
SIZE
LABELS
IS
RELYING
ON
EXACT
MATH
LOOKUPS
WHICH
BEEN
PROPOSED
TO
PROVIDE
BOTH
SCALABILITY
AND
FLEXIBILITY
CAN
BE
EASILY
AND
COST
EFFECTIVELY
IMPLEMENTED
BY
SIMPLE
APPLICATION
AWARE
SDN
ARCHITECTURES
ARE
BEING
PRO
HARDWARE
TABLES
INSTEAD
OF
REQUIRING
RULES
TO
BE
ENCODED
IN
POSED
TO
GENERALIZE
THE
STANDARD
OPENFLOW
FORWARDING
EXPENSIVE
TCAM
TABLES
ABSTRACTIONS
BY
INCLUDING
STATEFUL
ACTIONS
TO
ALLOW
PROCESS
ING
INFORMATION
FROM
LAYERS
TO
TO
THIS
END
PERFORMANCE
TODAY
THE
THROUGHPUT
OF
COMMERCIAL
APPLICATION
FLOW
TABLES
ARE
PROPOSED
AS
DATA
PLANE
APPLICA
OPENFLOW
SWITCHES
VARIES
FROM
TO
FLOW
MOD
TION
MODULES
THAT
REQUIRE
ONLY
LOCAL
STATE
I
E
DO
NOT
PER
SECOND
WITH
MOST
DEVICES
ACHIEVING
A
THROUGHPUT
DEPEND
ON
A
GLOBAL
VIEW
OF
THE
NETWORK
THOSE
TINY
APPLI
LOWER
THAN
FLOW
MOD
PER
SECOND
THIS
CATION
MODULES
RUN
INSIDE
THE
FORWARDING
DEVICES
AND
CAN
IS
CLEARLY
A
LIMITING
FACTOR
THAT
WILL
BE
ADDRESSED
IN
THE
BE
INSTALLED
ON
DEMAND
ALLEVIATING
THE
OVERHEAD
ON
THE
SWITCH
DESIGN
PROCESSVSUPPORT
OF
OPENFLOW
IN
EXISTING
CONTROL
PLANE
AND
AUGMENTING
THE
EFFICIENCY
OF
CERTAIN
PRODUCT
LINES
HAS
BEEN
MORE
A
RETROFITTING
ACTIVITY
THAN
A
TASKS
WHICH
CAN
BE
KEPT
IN
THE
DATA
PLANE
SIMILARLY
OTHER
CLEAN
FEATURE
PLANNING
AND
IMPLEMENTATION
ACTIVITY
DE
INITIATIVES
PROPOSE
SOLUTIONS
BASED
ON
PREINSTALLED
STATE
PLOYMENT
EXPERIENCES
HAVE
POINTED
TO
A
SERIES
OF
MACHINES
FLOW
LEVEL
STATE
TRANSITION
FAST
ALLOWS
CHALLENGES
STEMMING
FROM
THE
LIMITED
EMBEDDED
CPU
CONTROLLERS
TO
PROACTIVELY
PROGRAM
STATE
TRANSITIONS
IN
FOR
POWER
OF
CURRENT
COMMERCIAL
OPENFLOW
SWITCHES
ONE
WARDING
DEVICES
ALLOWING
SWITCHES
TO
RUN
DYNAMIC
ACTIONS
APPROACH
TO
HANDLE
THE
PROBLEM
CONSISTS
OF
ADDING
MORE
THAT
REQUIRE
ONLY
LOCAL
INFORMATION
POWERFUL
CPUS
INTO
THE
SWITCHES
AS
PROPOSED
IN
OTHER
APPROACHES
TOWARD
EVOLVING
SWITCH
DESIGNS
IN
OTHERS
HAVE
PROPOSED
TO
RETHINK
THE
DISTRIBUTION
OF
CONTROL
CLUDE
CACHING
IN
BUCKETS
CAB
A
REACTIVE
WILDCARD
ACTIONS
BETWEEN
EXTERNAL
CONTROLLERS
AND
THE
OPENFLOW
CACHING
PROPOSAL
THAT
USES
A
GEOMETRIC
REPRESENTATION
OF
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
THE
RULE
SET
WHICH
IS
DIVIDED
INTO
SMALL
LOGICAL
STRUCTURES
OVERCOMING
SOME
OF
THE
LIMITATIONS
OF
OPENFLOW
E
G
BUCKETS
THROUGH
THIS
TECHNIQUE
CAB
IS
ABLE
TO
EXPRESSIVENESS
SUPPORT
OF
USER
DEFINED
PROTOCOLS
MEMORY
SOLVE
THE
RULE
DEPENDENCY
PROBLEM
AND
ACHIEVE
EFFICIENT
EFFICIENCY
THROUGH
GENERIC
FLOW
INSTRUCTION
SETS
OPEN
USAGE
OF
CONTROL
PLANE
RESOURCES
NAMELY
BANDWIDTH
CON
SOURCE
PROTOTYPES
ARE
AVAILABLE
AS
WELL
AS
EVALUATION
TROLLER
PROCESSING
LOAD
AND
FLOW
SETUP
LATENCY
RESULTS
SHOWING
THE
LINE
SPEED
CAPABILITIES
USING
A
NETWORK
NEW
PROGRAMMABLE
ETHERNET
SWITCH
CHIPS
SUCH
AS
PROCESSING
UNIT
NPU
BASED
PROOF
OF
CONCEPT
IMPLE
XPLIANT
ETHERNET
ARE
EMERGING
INTO
THIS
NEW
MARKET
MENTATION
IN
THIS
LINE
WE
ALREADY
MENTIONED
OPENSTATE
OF
PROGRAMMABLE
NETWORKS
ITS
MAIN
AIM
IS
ENABLING
NEW
ANOTHER
INITIATIVE
THAT
AIMS
TO
AUGMENT
THE
CAPABI
PROTOCOL
SUPPORT
AND
THE
ADDITION
OF
NEW
FEATURES
THROUGH
LITY
AND
FLEXIBILITY
OF
FORWARDING
DEVICES
BY
TAKING
ADVAN
SOFTWARE
UPDATES
INCREASING
FLEXIBILITY
ONE
EXAMPLE
OF
TAGE
OF
EXTENDED
FINITE
STATE
MACHINES
XFSMS
SUCH
FLEXIBILITY
IS
THE
SUPPORT
OF
GENEVE
A
RECENT
OPENSTATE
PROPOSES
AN
ABSTRACTIONVAS
A
SUPER
SET
EFFORT
TOWARD
GENERIC
NETWORK
VIRTUALIZATION
ENCAPSULATION
OF
OPENFLOW
PRIMITIVESVTO
ENABLE
STATEFUL
HANDLING
OF
PROTOCOLS
AND
OPENFLOW
THE
THROUGHPUT
OF
THE
FIRST
OPENFLOW
RULES
INSIDE
FORWARDING
DEVICES
FAMILY
OF
XPLIANT
ETHERNET
CHIP
VARIES
FROM
GB
TO
IN
THE
SAME
WAY
AS
TTPS
ALLOW
CONTROLLERS
TO
COMPILE
TERABITS
PER
SECOND
TB
SUPPORTING
UP
TO
PORTS
OF
THE
RIGHT
SET
OF
LOW
LEVER
INSTRUCTIONS
KNOWN
TO
BE
SUP
GBE
OR
GBE
FOR
INSTANCE
PORTED
BY
THE
SWITCHES
A
NEW
BREED
OF
SWITCH
REFERRED
TO
AS
MICROCHIP
COMPANIES
LIKE
INTEL
ARE
ALREADY
SHIPPING
PROGRAMMABLE
PROTOCOL
INDEPENDENT
PACKET
PROCESSOR
PROCESSORS
WITH
FLEXIBLE
SDN
CAPABILITIES
TO
THE
MARKET
SUGGESTS
AN
EVOLUTION
PATH
FOR
OPENFLOW
RECENT
ADVANCES
IN
GENERAL
PURPOSE
CPU
TECHNOL
BASED
ON
A
HIGH
LEVEL
COMPILER
THIS
PROPOSAL
WOULD
ALLOW
OGY
INCLUDE
A
DATA
PLANE
DEVELOPMENT
KIT
DPDK
THE
FUNCTIONALITY
OF
PROGRAMMABLE
SWITCHES
I
E
PIPELINE
THAT
ALLOWS
HIGH
LEVEL
PROGRAMMING
OF
HOW
DATA
PACKETS
HEADER
PARSING
FIELD
MATCHING
TO
BE
NOT
ONLY
SPECIFIED
BY
WILL
BE
PROCESSED
DIRECTLY
WITHIN
NETWORK
INTERFACE
CARDS
THE
CONTROLLER
BUT
ALSO
CHANGED
IN
THE
FIELD
IN
THIS
MODEL
PROTOTYPE
IMPLEMENTATIONS
OF
INTEL
DPDK
ACCELERATED
PROGRAMMERS
ARE
ABLE
TO
DECIDE
HOW
THE
FORWARDING
PLANE
SWITCH
SHOWS
THE
POTENTIAL
TO
DELIVER
HIGH
PERFORMANCE
PROCESSES
PACKETS
WITHOUT
CARING
ABOUT
IMPLEMENTATION
SDN
SOFTWARE
SWITCHES
THIS
TREND
IS
LIKELY
TO
CONTI
DETAILS
IT
IS
THEN
THE
COMPILER
THAT
TRANSFORMS
THE
IMPERA
NUE
SINCE
HIGH
SPEED
AND
SPECIALIZED
HARDWARE
IS
NEEDED
TIVE
PROGRAM
INTO
A
CONTROL
FLOW
GRAPH
THAT
CAN
BE
MAPPED
TO
BOOST
SDN
PERFORMANCE
AND
SCALABILITY
FOR
LARGE
REAL
TO
DIFFERENT
TARGET
SWITCHES
WORLD
NETWORKS
HARDWARE
PROGRAMMABLE
TECHNOLOGIES
SUCH
AS
FPGA
ARE
WIDELY
USED
TO
REDUCE
TIME
AND
COSTS
B
CONTROLLER
PLATFORMS
OF
HARDWARE
BASED
FEATURE
IMPLEMENTATIONS
NETFPGA
FOR
IN
THE
SDN
MODEL
THE
CONTROLLER
PLATFORM
IS
A
CRITICAL
INSTANCE
HAS
BEEN
A
PIONEERING
TECHNOLOGY
USED
TO
IMPLE
PILLAR
OF
THE
ARCHITECTURE
AND
AS
SUCH
EFFORTS
ARE
BEING
MENT
OPENFLOW
SWITCHES
PROVIDING
A
COMMOD
DEVOTED
TO
TURN
SDN
CONTROLLERS
INTO
HIGH
PERFORMANCE
ITY
COST
EFFECTIVE
PROTOTYPING
SOLUTION
ANOTHER
LINE
OF
SCALABLE
DISTRIBUTED
MODULAR
AND
HIGHLY
AVAILABLE
WORK
ON
SDN
DATA
PLANES
PROPOSES
TO
AUGMENT
SWITCHES
PROGRAMMER
FRIENDLY
SOFTWARE
DISTRIBUTED
CONTROLLER
PLAT
WITH
FPGA
TO
REMOTELY
DEFINE
THE
QUEUE
MANAGEMENT
FORMS
IN
PARTICULAR
HAVE
TO
ADDRESS
A
VARIETY
OF
CHALLENGES
AND
SCHEDULING
BEHAVIOR
OF
PACKET
SWITCHES
FINALLY
DESERVING
SPECIAL
CONSIDERATION
ARE
THE
LATENCY
BETWEEN
RECENT
DEVELOPMENTS
HAVE
SHOWN
THAT
STATE
OF
THE
ART
FORWARDING
DEVICES
AND
CONTROLLER
INSTANCES
FAULT
TOLER
SYSTEM
ON
CHIP
SOC
PLATFORMS
SUCH
AS
THE
XILINX
ZYNQ
ANCE
LOAD
BALANCING
CONSISTENCY
AND
SYNCHRONIZATION
BOARD
CAN
BE
USED
TO
IMPLEMENT
OPENFLOW
DEVICES
AMONG
OTHER
ISSUES
OPERATORS
SHOULD
YIELDING
GB
THROUGHPUT
FOR
FLOW
SUPPORTING
ALSO
BE
ABLE
TO
OBSERVE
AND
UNDERSTAND
HOW
THE
COMBINA
DYNAMIC
UPDATES
TION
OF
DIFFERENT
FUNCTIONS
AND
MODULES
CAN
IMPACT
THEIR
NETWORK
NATIVE
SDN
SWITCH
DESIGNS
MOST
OF
THE
SDN
SWITCH
AS
THE
SDN
COMMUNITY
LEARNS
FROM
THE
DEVELOPMENT
RE
DESIGN
EFFORTS
SO
FAR
FOLLOW
AN
EVOLUTIONARY
APPROACH
TO
AND
OPERATIONAL
EXPERIENCES
WITH
OPENFLOW
CONTROLLERS
RETROFIT
OPENFLOW
SPECIFIC
PROGRAMMABLE
FEATURES
INTO
E
G
BEACON
FURTHER
ADVANCEMENTS
ARE
EXPECTED
IN
EXISTING
HARDWARE
LAYOUTS
FOLLOWING
COMMON
WISDOM
ON
TERMS
OF
RAW
PERFORMANCE
OF
CONTROLLER
IMPLEMENTATIONS
SWITCH
ROUTER
DESIGNS
AND
CONSOLIDATED
TECHNOLOGIES
E
G
INCLUDING
THE
EXPLOITATION
OF
HIERARCHICAL
DESIGNS
AND
SRAM
TCAM
FPGA
ONE
DEPARTURE
FROM
THIS
APPROACH
OPTIMIZED
BUFFER
SIZING
ONE
APPROACH
TO
INCREASE
IS
THE
ONGOING
WORK
ON
FORWARDING
META
MORPHOSIS
THE
PERFORMANCE
OF
CONTROLLERS
IS
THE
IRIS
IO
ENGINE
A
RECONFIGURABLE
MATCH
TABLE
MODEL
INSPIRED
FROM
RISC
ENABLING
SIGNIFICANT
INCREASES
IN
THE
FLOW
SETUP
RATE
OF
LIKE
PIPELINE
ARCHITECTURE
APPLIED
TO
SWITCHING
CHIPS
THIS
SDN
CONTROLLERS
ANOTHER
WAY
OF
REDUCING
THE
CONTROL
WORK
ILLUSTRATES
THE
FEASIBILITY
OF
REALIZING
A
MINIMAL
SET
OF
PLANE
OVERHEAD
IS
BY
KEEPING
A
COMPRESSED
COPY
OF
THE
ACTION
PRIMITIVES
FOR
FLEXIBLE
HEADER
PROCESSING
IN
HARD
FLOW
TABLES
IN
THE
CONTROLLER
MEMORY
WARE
AT
ALMOST
NO
ADDITIONAL
COST
OR
POWER
ALSO
IN
LINE
WITH
THE
CORE
SDN
GOALS
OF
HIGHLY
FLEXIBLE
AND
PROGRAM
MODULARITY
AND
FLEXIBILITY
A
SERIES
OF
ONGOING
RE
MABLE
HARDWARE
BASED
DATA
PLANES
POF
AIMS
AT
SEARCH
EFFORTS
TARGET
THE
MODULAR
AND
FLEXIBLE
COMPOSITION
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
OF
CONTROLLERS
RAON
PROPOSES
A
RECURSIVE
ABSTRAC
BY
AUTOMATICALLY
AND
TRANSPARENTLY
RESOLVING
CONFLICTS
IN
TION
OF
OPENFLOW
CONTROLLERS
WHERE
EACH
CONTROLLER
SEES
OTHER
WORDS
STATESMAN
ALLOWS
A
SAFE
COMPOSITION
OF
UNCO
THE
CONTROLLERS
BELOW
AS
OPENFLOW
SWITCHES
OPEN
RE
ORDINATED
OR
CONFLICTING
APPLICATION
ACTIONS
SEARCH
ISSUES
INCLUDE
THE
DEFINITION
OF
SUITABLE
INTERFACES
ANOTHER
RECENT
APPROACH
TO
SIMPLIFY
NETWORK
MANAGE
BETWEEN
THE
DIFFERENT
LAYERS
IN
SUCH
A
HIERARCHY
OF
CON
MENT
IS
THE
IDEA
OF
COMPOSITIONAL
SDN
HYPERVISORS
TROLLERS
OTHER
OPEN
ISSUES
TO
BE
FURTHER
INVESTIGATED
IN
THIS
ITS
MAIN
FEATURE
IS
ALLOWING
APPLICATIONS
WRITTEN
IN
DIFFER
CONTEXT
ARE
THE
EAST
WESTBOUND
APIS
AND
THEIR
USE
IN
ENT
LANGUAGES
OR
ON
DIFFERENT
PLATFORMS
TO
WORK
TOGETHER
ENABLING
SUITABLE
HIERARCHICAL
DESIGNS
TO
ACHIEVE
SCALABIL
IN
PROCESSING
THE
SAME
TRAFFIC
THE
KEY
INTEGRATION
COMPO
ITY
MODULARITY
AND
SECURITY
FOR
INSTANCE
EACH
LEVEL
NENT
IS
A
SET
OF
SIMPLE
PRIORITIZED
LISTS
OF
OPENFLOW
RULES
OF
A
HIERARCHY
OF
CONTROLLERS
CAN
OFFER
DIFFERENT
ABSTRACTIONS
WHICH
CAN
BE
GENERATED
BY
DIFFERENT
PROGRAMMING
LAN
AND
SCOPES
FOR
EITHER
INTRADATA
AND
INTERDATA
CENTER
ROUT
GUAGES
OR
APPLICATIONS
ING
THUS
INCREASING
SCALABILITY
AND
MODULARITY
SIMILARLY
FROM
A
SECURITY
PERSPECTIVE
EACH
HIERARCHICAL
LEVEL
MAY
HIGH
AVAILABILITY
IN
PRODUCTION
SDN
CONTROLLERS
BE
A
PART
OF
A
DIFFERENT
TRUST
DOMAIN
THEREFORE
EAST
NEED
TO
SUSTAIN
HEALTHY
OPERATION
UNDER
THE
PRESSURE
OF
WESTBOUND
INTERFACES
BETWEEN
THE
DIFFERENT
LAYERS
OF
CON
DIFFERENT
OBJECTIVES
FROM
THE
APPLICATIONS
THEY
HOST
MANY
TROLLERS
SHOULD
BE
CAPABLE
OF
ENFORCING
BOTH
INTRADOMAIN
ADVANCES
ARE
CALLED
FOR
IN
ORDER
TO
DEAL
WITH
POTENTIAL
RISK
AND
INTERDOMAIN
SECURITY
POLICIES
VECTORS
OF
CONTROLLER
BASED
SOLUTIONS
CERTAINLY
ANOTHER
IMPORTANT
OBSERVATION
IS
THAT
CURRENTLY
THE
MANY
SOLUTIONS
WILL
LEVERAGE
ON
RESULTS
FROM
THE
DISTRIB
LACK
OF
MODULARITY
IN
MOST
SDN
CONTROLLERS
FORCES
DEVEL
UTED
SYSTEMS
AND
SECURITY
COMMUNITIES
MADE
OVER
THE
LAST
OPERS
TO
RE
IMPLEMENT
BASIC
NETWORK
SERVICES
FROM
SCRATCH
DECADE
FOR
INSTANCE
RECENT
EFFORTS
PROPOSE
CONSISTENT
IN
EACH
NEW
APPLICATION
FAULT
TOLERANT
DATA
STORES
FOR
BUILDING
RELIABLE
DISTRIBUTED
AS
IN
SOFTWARE
ENGINEERING
IN
GENERAL
LACK
OF
MODU
CONTROLLERS
LARITY
RESULTS
IN
CONTROLLER
IMPLEMENTATIONS
THAT
ARE
ANOTHER
POSSIBLE
APPROACH
TOWARD
BUILDING
LOW
LATEN
HARD
TO
BUILD
MAINTAIN
AND
EXTENDVAND
ULTIMATELY
BE
CY
HIGHLY
AVAILABLE
SDN
CONTROLLERS
IS
TO
EXPLOIT
CONTROLLER
COME
RESISTANT
TO
FURTHER
INNOVATIONS
RESEMBLING
TRADI
LOCALITY
CLASSICAL
MODELS
OF
DISTRIBUTED
SYS
TIONAL
HARDWARE
DEFINED
NETWORKS
AS
SURVEYED
IN
TEMS
SUCH
AS
LOCAL
AND
CONGEST
CAN
BE
EX
SECTION
IV
G
SDN
PROGRAMMING
ABSTRACTIONS
E
G
PYRETIC
PLORED
TO
SOLVE
THIS
PROBLEM
THOSE
MODELS
CAN
BE
USED
TO
INTRODUCE
MODULARITY
IN
SDN
APPLICATIONS
AND
DEVELOP
COORDINATION
PROTOCOLS
THAT
ENABLE
EACH
CONTROLLER
SIMPLIFY
THEIR
DEVELOPMENT
ALTOGETHER
FURTHER
RESEARCH
TO
TAKE
INDEPENDENT
ACTIONS
OVER
EVENTS
THAT
TAKE
PLACE
IN
EFFORTS
E
G
CORYBANTIC
TRY
TO
ACHIEVE
MODULARITY
IN
ITS
LOCAL
NEIGHBORHOOD
SDN
CONTROL
PROGRAMS
OTHER
CONTRIBUTIONS
TOWARD
ANOTHER
CORE
CHALLENGE
RELATES
TO
THE
FUNDAMENTAL
ACHIEVING
MODULAR
CONTROLLERS
CAN
BE
EXPECTED
FROM
OTHER
TRADEOFFS
BETWEEN
THE
CONSISTENCY
MODEL
OF
STATE
DISTRIBU
AREAS
OF
COMPUTER
SCIENCE
E
G
PRINCIPLES
FROM
OPERATING
TION
IN
DISTRIBUTED
SDN
CONTROLLERS
THE
CONSISTENCY
RE
SYSTEM
AND
BEST
PRACTICES
OF
MODERN
CLOUD
SCALE
QUIREMENTS
OF
CONTROL
APPLICATIONS
AND
PERFORMANCE
SOFTWARE
APPLICATIONS
TO
EASE
DEVELOPMENT
THE
APPLICATION
SHOULD
IDEALLY
NOT
BE
AWARE
OF
THE
VAGARIES
OF
DISTRIBUTED
STATE
THIS
IM
INTEROPERABILITY
AND
APPLICATION
PORTABILITY
SIMILARLY
TO
PLIES
A
STRONG
CONSISTENCY
MODEL
WHICH
CAN
BE
ACHIEVED
FORWARDING
DEVICE
VENDOR
AGNOSTICISM
THAT
STEMS
FROM
WITH
DISTRIBUTED
DATA
STORES
AS
PROPOSED
RECENTLY
STANDARD
SOUTHBOUND
INTERFACES
IT
IS
IMPORTANT
TO
FOSTER
HOWEVER
KEEPING
ALL
CONTROL
DATA
IN
A
CONSISTENT
DISTRI
INTEROPERABILITY
BETWEEN
CONTROLLERS
EARLY
INITIATIVES
TO
BUTED
DATA
STORE
IS
UNFEASIBLE
DUE
TO
THE
INHERENT
PERFOR
WARD
MORE
INTEROPERABLE
CONTROL
PLATFORMS
INCLUDE
PORTA
MANCE
PENALTIES
THEREFORE
HYBRID
SOLUTIONS
ARE
LIKELY
TO
BLE
PROGRAMMING
LANGUAGES
SUCH
AS
PYRETIC
AND
EAST
COEXIST
REQUIRING
APPLICATION
DEVELOPERS
TO
BE
AWARE
OF
THE
WESTBOUND
INTERFACES
AMONG
CONTROLLERS
SUCH
AS
SDNI
TRADEOFFS
AND
PENALTIES
OF
USING
OR
NOT
A
STRONG
CONSIS
FORCES
CE
CE
INTERFACE
AND
FORCES
TENCY
MODEL
A
TENET
OF
THE
DISTRIBUTED
ONIX
CONTROLLER
INTRA
NE
MECHANISMS
HOWEVER
THESE
EFFORTS
ARE
YET
HIGH
AVAILABILITY
CAN
ALSO
BE
ACHIEVED
THROUGH
FAR
FROM
FULLY
REALIZING
CONTROLLER
INTEROPERABILITY
AND
AP
IMPROVED
SOUTHBOUND
APIS
AND
CONTROLLER
PLACEMENT
HEU
PLICATION
PORTABILITY
RISTICS
AND
FORMAL
MODELS
THESE
AIM
TO
MAXI
IN
CONTRAST
TO
PYRETIC
PANE
MAPLE
MIZE
RESILIENCE
AND
SCALABILITY
BY
ALLOWING
FORWARDING
AND
CORYBANTIC
WHICH
ARE
RESTRICTED
TO
TRAFFIC
ENGI
DEVICES
TO
CONNECT
TO
MULTIPLE
CONTROLLERS
IN
A
COST
EFFEC
NEERING
APPLICATIONS
AND
OR
IMPOSE
NETWORK
STATE
CONFLICT
TIVE
AND
EFFICIENT
WAY
EARLY
EFFORTS
IN
THIS
DIRECTION
RESOLUTION
AT
THE
APPLICATION
LEVEL
MAKING
APPLICATION
DE
HAVE
ALREADY
SHOWN
THAT
FORWARDING
DEVICES
CONNECTING
TO
SIGN
AND
TESTING
MORE
COMPLICATED
STATESMAN
PRO
TWO
OR
THREE
CONTROLLERS
CAN
TYPICALLY
ACHIEVE
HIGH
AVAILA
POSES
A
FRAMEWORK
TO
ENABLE
A
VARIETY
OF
LOOSELY
COUPLED
BILITY
UP
TO
FIVE
NINES
AND
ROBUSTNESS
IN
TERMS
OF
CONTROL
NETWORK
APPLICATIONS
TO
COEXIST
ON
THE
SAME
CONTROL
PLANE
PLANE
CONNECTIVITY
IT
HAS
ALSO
BEEN
SHOWN
WITHOUT
COMPROMISING
NETWORK
SAFETY
AND
PERFORMANCE
THAT
THE
NUMBER
OF
REQUIRED
CONTROLLERS
IS
MORE
DEPENDENT
THIS
FRAMEWORK
MAKES
APPLICATION
DEVELOPMENT
SIMPLER
ON
THE
TOPOLOGY
THAN
ON
NETWORK
SIZE
ANOTHER
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
FINDING
WORTH
MENTIONING
IS
THE
FACT
THAT
FOR
MOST
COMMON
COMES
A
CHALLENGE
WHEN
CONSIDERING
CRITICAL
CONTROL
PLANE
TOPOLOGIES
AND
NETWORK
SIZES
FEWER
THAN
TEN
CONTROLLERS
FUNCTIONS
SUCH
AS
THOSE
RELATED
TO
LINK
FAILURE
DETECTION
OR
SEEM
TO
BE
ENOUGH
FAST
REACTION
DECISIONS
THE
RESILIENCE
OF
AN
OPENFLOW
NETWORK
DEPENDS
ON
FAULT
TOLERANCE
IN
THE
DATA
PLANE
AS
IN
DELEGATION
OF
CONTROL
TO
INCREASE
OPERATIONAL
EFFI
TRADITIONAL
NETWORKS
BUT
ALSO
ON
THE
HIGH
AVAILABILITY
OF
CIENCY
SDN
CONTROLLERS
CAN
DELEGATE
CONTROL
FUNCTIONS
TO
THE
LOGICALLY
CENTRALIZED
CONTROL
PLANE
FUNCTIONS
HENCE
REPORT
STATE
AND
ATTRIBUTE
VALUE
CHANGES
THRESHOLD
CROSSING
THE
RESILIENCE
OF
SDN
IS
CHALLENGING
DUE
TO
THE
MULTIPLE
ALERTS
HARDWARE
FAILURES
AND
SO
FORTH
THESE
NOTIFICATIONS
POSSIBLE
FAILURES
OF
THE
DIFFERENT
PIECES
OF
THE
ARCHITECTURE
TYPICALLY
FOLLOW
A
PUBLISH
SUBSCRIBE
MODEL
I
E
CONTROLLERS
AS
NOTED
IN
THERE
IS
A
LACK
OF
SUFFICIENT
RESEARCH
AND
APPLICATIONS
SUBSCRIBE
ON
DEMAND
TO
THE
PARTICULAR
AND
EXPERIENCE
IN
BUILDING
AND
OPERATING
FAULT
TOLERANT
CLASS
OF
NOTIFICATIONS
THEY
ARE
INTERESTED
IN
IN
ADDITION
SDNS
GOOGLE
MAY
BE
ONE
OF
THE
FEW
EXAMPLES
THAT
THESE
SUBSYSTEMS
MAY
PROVIDE
RESILIENCE
AND
TRUSTWORTHI
HAVE
PROVEN
THAT
SDN
CAN
BE
RESILIENT
AT
SCALE
A
NUMBER
NESS
PROPERTIES
OF
RELATED
EFFORTS
HAVE
SOME
REASONS
FOR
DELEGATING
CONTROL
TO
THE
DATA
PLANE
STARTED
TO
TACKLE
THE
CONCERNS
AROUND
CONTROL
PLANE
SPLIT
INCLUDE
ARCHITECTURES
THE
DISTRIBUTED
CONTROLLER
ARCHITECTURES
SUR
LOW
LATENCY
RESPONSE
TO
A
VARIETY
OF
NETWORK
EVENTS
VEYED
IN
SECTION
IV
D
ARE
EXAMPLES
OF
APPROACHES
TOWARD
THE
AMOUNT
OF
TRAFFIC
THAT
MUST
BE
PROCESSED
IN
THE
RESILIENT
SDN
CONTROLLER
PLATFORMS
WITH
DIFFERENT
TRADEOFFS
DATA
PLANE
IN
PARTICULAR
IN
LARGE
SCALE
NETWORKS
IN
TERMS
OF
CONSISTENCY
DURABILITY
AND
SCALABILITY
SUCH
AS
DATA
CENTERS
ON
A
DETAILED
DISCUSSION
ON
WHETHER
THE
CAP
THEOREM
LOW
LEVEL
FUNCTIONS
SUCH
AS
THOSE
BYTE
OR
BIT
APPLIES
TO
NETWORKS
PANDA
ET
AL
ARGUE
THAT
THE
ORIENTED
REQUIRED
BY
REPETITIVE
SYNCHRONOUS
DI
TRADEOFFS
IN
BUILDING
CONSISTENT
AVAILABLE
AND
PARTITION
GITAL
HIERARCHY
SDH
MULTIPLEX
SECTION
TOLERANT
DISTRIBUTED
DATABASES
I
E
CAP
THEOREM
ARE
AP
OVERHEAD
PLICABLE
TO
SDN
THE
CAP
THEOREM
DEMONSTRATES
THAT
IT
IS
FUNCTIONS
WELL
UNDERSTOOD
AND
STANDARDIZED
SUCH
IMPOSSIBLE
FOR
DATA
STORE
SYSTEMS
TO
SIMULTANEOUSLY
AS
ENCRYPTION
BIP
AIS
INSERTION
MAC
ACHIEVE
STRONG
CONSISTENCY
AVAILABILITY
AND
PARTITION
LEARNING
AND
CODEC
CONTROL
MESSAGE
CCM
TOLERANCE
WHILE
AVAILABILITY
AND
PARTITION
TOLERANCE
PRO
EXCHANGES
BLEMS
ARE
SIMILAR
IN
BOTH
DISTRIBUTED
DATABASES
AND
NET
CONTROLLER
FAILURE
TOLERANCE
I
E
ESSENTIAL
NETWORK
WORKS
THE
PROBLEM
OF
CONSISTENCY
IN
SDN
RELATES
TO
THE
FUNCTIONS
SHOULD
BE
ABLE
TO
KEEP
A
BASIC
NETWORK
CONSISTENT
APPLICATION
OF
POLICIES
OPERATION
EVEN
WHEN
CONTROLLERS
ARE
DOWN
CONSIDERING
AN
OPENFLOW
NETWORK
WHEN
A
SWITCH
BASIC
LOW
LEVEL
FUNCTIONS
USUALLY
AVAILABLE
IN
DATA
DETECTS
A
LINK
FAILURE
PORT
DOWN
EVENT
A
NOTIFICATION
PLANE
SILICON
SUCH
AS
PROTECTION
SWITCHING
STATE
IS
SENT
TO
THE
CONTROLLER
WHICH
THEN
TAKES
THE
REQUIRED
MACHINES
CCM
COUNTERS
AND
TIMERS
ACTIONS
REROUTE
COMPUTATION
PRECOMPUTED
BACKUP
PATH
ALL
THOSE
FUNCTIONS
THAT
DO
NOT
ADD
ANY
VALUE
WHEN
LOOKUP
AND
INSTALLS
UPDATED
FLOW
ENTRIES
IN
THE
REQUIRED
MOVED
FROM
THE
DATA
TO
THE
CONTROL
PLANE
SWITCHES
TO
REDIRECT
THE
AFFECTED
TRAFFIC
SUCH
REACTIVE
STRONG
CANDIDATES
FOR
EXECUTION
IN
THE
FORWARDING
STRATEGIES
IMPLY
HIGH
RESTORATION
TIME
DUE
TO
THE
NECESSARY
DEVICES
INSTEAD
OF
BEING
IMPLEMENTED
IN
THE
CONTROL
INTERACTION
WITH
THE
CONTROLLER
AND
ADDITIONAL
LOAD
ON
THE
PLATFORMS
THUS
INCLUDE
OAM
ICMP
PROCESSING
MAC
CONTROL
CHANNEL
ONE
EXPERIMENTAL
WORK
ON
OPENFLOW
FOR
LEARNING
NEIGHBOR
DISCOVERY
DEFECT
RECOGNITION
AND
IN
CARRIER
GRADE
NETWORKS
INVESTIGATED
THE
RESTORATION
PROCESS
TEGRATION
THIS
WOULD
NOT
ONLY
REDUCE
THE
OVERHEAD
AND
MEASURED
A
RESTORATION
TIMES
IN
THE
ORDER
OF
MS
TRAFFIC
AND
COMPUTING
OF
THE
CONTROL
PLANE
BUT
ALSO
IM
THE
DELAY
INTRODUCED
BY
THE
CONTROLLER
MAY
IN
SOME
PROVE
NETWORK
EFFICIENCY
BY
KEEPING
BASIC
NETWORKING
CASES
BE
PROHIBITIVE
FUNCTIONS
IN
THE
DATA
PLANE
IN
ORDER
TO
MEET
CARRIER
GRADE
REQUIREMENTS
E
G
MS
OF
RECOVERY
TIME
PROTECTION
SCHEMES
ARE
REQUIRED
C
RESILIENCE
TO
MITIGATE
THE
EFFECTS
OF
A
SEPARATE
CONTROL
PLANE
SUITABLE
ACHIEVING
RESILIENT
COMMUNICATION
IS
A
TOP
PURPOSE
OF
PROTECTION
MECHANISMS
E
G
INSTALLATION
OF
PREESTABLISHED
NETWORKING
AS
SUCH
SDNS
ARE
EXPECTED
TO
YIELD
THE
SAME
BACKUP
PATHS
IN
THE
FORWARDING
DEVICES
CAN
BE
IMPLE
LEVELS
OF
AVAILABILITY
AS
LEGACY
AND
ANY
NEW
ALTERNATIVE
MENTED
BY
MEANS
OF
OPENFLOW
GROUP
TABLE
ENTRIES
USING
TECHNOLOGY
SPLIT
CONTROL
ARCHITECTURES
AS
SDN
ARE
COM
FAST
FAIL
OVER
ACTIONS
AN
OPENFLOW
FAULT
MANAGEMENT
MONLY
QUESTIONED
ABOUT
THEIR
ACTUAL
CAPABILITY
OF
APPROACH
SIMILAR
TO
MPLS
GLOBAL
PATH
PROTECTION
BEING
RESILIENT
TO
FAULTS
THAT
MAY
COMPROMISE
THE
CONTROL
COULD
ALSO
BE
A
VIABLE
SOLUTION
PROVIDED
THAT
OPENFLOW
TO
DATA
PLANE
COMMUNICATIONS
AND
THUS
RESULT
IN
BRAIN
SWITCHES
ARE
EXTENDED
WITH
END
TO
END
PATH
MONITORING
LESS
NETWORKS
INDEED
THE
MALFUNCTIONING
OF
PARTICULAR
CAPABILITIES
SIMILARLY
TO
THOSE
SPECIFIED
BY
BIDIRECTIONAL
SDN
ELEMENTS
SHOULD
NOT
RESULT
IN
THE
LOSS
OF
AVAILABILITY
FORWARDING
DETECTION
BFD
SUCH
PROTECTION
THE
RELOCATION
OF
SDN
CONTROL
PLANE
FUNCTIONALITY
FROM
SCHEMES
ARE
A
CRITICAL
DESIGN
CHOICE
FOR
LARGER
SCALE
NET
INSIDE
THE
BOXES
TO
REMOTE
LOGICALLY
CENTRALIZED
LOCI
BE
WORKS
AND
MAY
ALSO
REQUIRE
CONSIDERABLE
ADDITIONAL
FLOW
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
SPACE
BY
USING
PRIMARY
AND
SECONDARY
PATH
PAIRS
PROG
AS
A
RESULT
SEVERAL
EFFORTS
HAVE
BEEN
DEVOTED
TO
TACKLE
RAMMED
AS
OPENFLOW
FAST
FAIL
OVER
GROUP
TABLE
ENTRIES
A
THE
SDN
SCALING
CONCERNS
INCLUDING
DEVOFLOW
PATH
RESTORATION
TIME
OF
MS
HAS
BEEN
REPORTED
SDCS
DIFANE
ONIX
HYPERFLOW
USING
BFD
SESSIONS
TO
QUICKLY
DETECT
LINK
FAILURES
KANDOO
MAESTRO
NOX
MT
AND
MAPLE
ON
A
RELATED
LINE
OF
DATA
PLANE
RESILIENCE
SLICKFLOW
STILL
RELATED
TO
SCALABILITY
THE
NOTION
OF
ELASTICITY
IN
LEVERAGES
THE
IDEA
OF
USING
PACKET
HEADER
SPACE
TO
SDN
CONTROLLERS
IS
ALSO
BEING
PURSUED
CARRY
ALTERNATIVE
PATH
INFORMATION
TO
IMPLEMENT
RESILIENT
ELASTIC
APPROACHES
INCLUDE
DYNAMICALLY
CHANGING
THE
SOURCE
ROUTING
IN
OPENFLOW
NETWORKS
UNDER
THE
PRESENCE
NUMBER
OF
CONTROLLERS
AND
THEIR
LOCATIONS
UNDER
DIFFERENT
OF
FAILURES
ALONG
A
PRIMARY
PATH
PACKETS
CAN
BE
REROUTED
TO
CONDITIONS
ALTERNATIVE
PATHS
BY
THE
SWITCHES
THEMSELVES
WITHOUT
IN
MOST
OF
THE
RESEARCH
EFFORTS
ADDRESSING
SCALING
LIMI
VOLVING
THE
CONTROLLER
ANOTHER
RECENT
PROPOSAL
THAT
USES
TATIONS
OF
SDN
CAN
BE
CLASSIFIED
IN
THREE
CATEGORIES
DATA
IN
PACKET
INFORMATION
IS
INFLEX
AN
SDN
BASED
PLANE
CONTROL
PLANE
AND
HYBRID
WHILE
TARGETING
THE
DATA
ARCHITECTURE
FOR
CROSS
LAYER
NETWORK
RESILIENCE
WHICH
PRO
PLANE
PROPOSALS
SUCH
AS
DEVOFLOW
AND
SDCS
VIDES
ON
DEMAND
PATH
FAIL
OVER
BY
HAVING
ENDPOINTS
TAG
ACTUALLY
REDUCE
THE
OVERHEAD
OF
THE
CONTROL
PLANE
BY
DELE
PACKETS
WITH
VIRTUAL
ROUTING
PLANE
INFORMATION
THAT
CAN
BE
GATING
SOME
WORK
TO
THE
FORWARDING
DEVICES
FOR
INSTANCE
USED
BY
EGRESS
ROUTERS
TO
REROUTE
BY
CHANGING
TAGS
UPON
INSTEAD
OF
REQUESTING
A
DECISION
FROM
THE
CONTROLLER
FOR
FAILURE
DETECTION
EVERY
FLOW
SWITCHES
CAN
SELECTIVELY
IDENTIFY
THE
FLOWS
E
G
SIMILARLY
TO
SLICKFLOW
OSP
PROPOSES
A
PROTEC
ELEPHANT
FLOWS
THAT
MAY
NEED
HIGHER
LEVEL
DECISIONS
FROM
TION
APPROACH
FOR
DATA
PLANE
RESILIENCE
IT
IS
BASED
ON
THE
CONTROL
PLANE
APPLICATIONS
ANOTHER
EXAMPLE
IS
TO
IN
PROTECTING
INDIVIDUAL
SEGMENTS
OF
A
PATH
AVOIDING
THE
IN
TRODUCE
MORE
POWERFUL
GENERAL
PURPOSE
CPUS
IN
THE
FOR
TERVENTION
OF
THE
CONTROLLER
UPON
FAILURE
THE
RECOVERY
WARDING
DEVICES
TO
ENABLE
SDCS
A
GENERAL
PURPOSE
CPU
TIME
DEPENDS
ON
THE
FAILURE
DETECTION
TIME
I
E
A
FEW
TENS
AND
SDCS
OFFER
NEW
POSSIBILITIES
FOR
REDUCING
THE
CONTROL
OF
MILLISECONDS
IN
THE
PROPOSED
SCENARIOS
IN
THE
SAME
PLANE
OVERHEAD
BY
ALLOWING
SOFTWARE
BASED
IMPLEMENTA
DIRECTION
OTHER
PROPOSALS
ARE
STARTING
TO
APPEAR
FOR
ENA
TIONS
OF
FUNCTIONS
FOR
DATA
AGGREGATION
AND
COMPRESSION
BLING
FAST
FAIL
OVER
MECHANISMS
FOR
LINK
PROTECTION
AND
FOR
INSTANCE
RESTORATION
IN
OPENFLOW
BASED
NETWORKS
MAESTRO
NOX
MT
KANDOO
BEACON
LANGUAGE
BASED
SOLUTIONS
TO
THE
DATA
PLANE
FAULT
AND
MAPLE
ARE
EXAMPLES
OF
THE
EFFORT
ON
TOLERANCE
PROBLEM
HAVE
ALSO
BEEN
PROPOSED
IN
THIS
DESIGNING
AND
DEPLOYING
HIGH
PERFORMANCE
CONTROLLERS
WORK
THE
AUTHORS
PROPOSE
A
LANGUAGE
THAT
COMPILES
REGULAR
I
E
TRYING
TO
INCREASE
THE
PERFORMANCE
OF
THE
CONTROL
EXPRESSIONS
INTO
OPENFLOW
RULES
TO
EXPRESS
WHAT
NETWORK
PLANE
THESE
CONTROLLERS
MAINLY
EXPLORE
WELL
KNOWN
TECH
PATHS
PACKETS
MAY
TAKE
AND
WHAT
DEGREE
OF
LINK
LEVEL
FAULT
NIQUES
FROM
NETWORKING
COMPUTER
ARCHITECTURES
AND
TOLERANCE
IS
REQUIRED
SUCH
ABSTRACTIONS
AROUND
FAULT
TO
HIGH
PERFORMANCE
COMPUTING
SUCH
AS
BUFFERING
PIPELIN
LERANCE
ALLOW
DEVELOPERS
TO
BUILD
FAULT
RECOVERY
CAPABILITIES
ING
AND
PARALLELISM
TO
INCREASE
THE
THROUGHPUT
OF
THE
INTO
APPLICATIONS
WITHOUT
HUGE
CODING
EFFORTS
CONTROL
PLATFORM
THE
HYBRID
CATEGORY
IS
COMPOSED
OF
SOLUTIONS
THAT
TRY
TO
SPLIT
THE
CONTROL
LOGIC
FUNCTIONS
BETWEEN
SPECIALIZED
DATA
D
SCALABILITY
PLANE
DEVICES
AND
CONTROLLERS
IN
THIS
CATEGORY
DIFANE
SCALABILITY
HAS
BEEN
ONE
OF
THE
MAJOR
CONCERNS
OF
SDNS
PROPOSES
AUTHORITATIVE
INTERMEDIATE
SWITCHES
TO
FROM
THE
OUTSET
THIS
IS
A
PROBLEM
THAT
NEEDS
TO
BE
KEEP
ALL
TRAFFIC
IN
THE
DATA
PLANE
TARGETING
A
MORE
SCALABLE
ADDRESSED
IN
ANY
SYSTEMVE
G
IN
TRADITIONAL
NETWORKSV
AND
EFFICIENT
CONTROL
PLANE
AUTHORITATIVE
SWITCHES
ARE
RE
AND
IS
OBVIOUSLY
ALSO
A
MATTER
OF
MUCH
DISCUSSION
IN
THE
SPONSIBLE
FOR
INSTALLING
RULES
ON
THE
REMAINING
SWITCHES
CONTEXT
OF
SDN
MOST
OF
THE
SCALABILITY
CONCERNS
IN
WHILE
THE
CONTROLLER
IS
STILL
RESPONSIBLE
FOR
GENERATING
ALL
SDNS
ARE
RELATED
TO
THE
DECOUPLING
OF
THE
CONTROL
AND
DATA
THE
RULES
REQUIRED
BY
THE
LOGIC
OF
APPLICATIONS
BY
DIVIDING
PLANES
OF
PARTICULAR
RELEVANCE
ARE
REACTIVE
NETWORK
CON
THE
CONTROLLER
WORK
WITH
THESE
SPECIAL
SWITCHES
THE
OVERALL
FIGURATIONS
WHERE
THE
FIRST
PACKET
OF
A
NEW
FLOW
IS
SENT
BY
SYSTEM
SCALES
BETTER
THE
FIRST
FORWARDING
ELEMENT
TO
THE
CONTROLLER
THE
ADDI
TABLE
PROVIDES
A
NONEXHAUSTIVE
LIST
OF
PROPOSALS
TIONAL
CONTROL
PLANE
TRAFFIC
INCREASES
NETWORK
LOAD
AND
ADDRESSING
SCALABILITY
ISSUES
OF
SDN
WE
CHARACTERIZE
THESE
MAKES
THE
CONTROL
PLANE
A
POTENTIAL
BOTTLENECK
ADDITION
ISSUES
BY
APPLICATION
DOMAIN
CONTROL
OR
DATA
PLANE
THEIR
ALLY
AS
THE
FLOW
TABLES
OF
SWITCHES
ARE
CONFIGURED
IN
REAL
PURPOSE
THE
THROUGHPUT
IN
TERMS
OF
NUMBER
OF
FLOWS
PER
TIME
BY
AN
OUTSIDE
ENTITY
THERE
IS
ALSO
THE
EXTRA
LATENCY
SECOND
WHEN
THE
RESULTS
OF
THE
EXPERIMENTS
ARE
REPORTED
INTRODUCED
BY
THE
FLOW
SETUP
PROCESS
IN
LARGE
SCALE
NET
AND
THE
STRATEGIES
USED
AS
CAN
BE
OBSERVED
THE
VAST
MA
WORKS
CONTROLLERS
WILL
NEED
TO
BE
ABLE
TO
PROCESS
MILLIONS
JORITY
ARE
CONTROL
PLANE
SOLUTIONS
THAT
TRY
TO
INCREASE
SCALA
OF
FLOWS
PER
SECOND
WITHOUT
COMPROMISING
THE
BILITY
BY
USING
DISTRIBUTED
AND
MULTICORE
ARCHITECTURES
QUALITY
OF
ITS
SERVICE
THEREFORE
THESE
OVERHEADS
ON
THE
SOME
FIGURES
ARE
RELATIVELY
IMPRESSIVE
WITH
SOME
SOLU
CONTROL
PLANE
AND
ON
FLOW
SETUP
LATENCY
ARE
ARGUABLY
TWO
TIONS
ACHIEVING
UP
TO
MILLION
FLOWS
HOWEVER
WE
OF
THE
MAJOR
SCALING
CONCERNS
IN
SDN
SHOULD
CAUTION
THE
READER
THAT
CURRENT
EVALUATIONS
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
TABLE
SUMMARY
AND
CHARACTERIZATION
OF
SCALABILITY
PROPOSALS
FOR
SDNS
CONSIDER
ONLY
SIMPLE
APPLICATIONS
AND
COUNT
BASICALLY
THE
E
PERFORMANCE
EVALUATION
NUMBER
OF
PACKET
IN
AND
PACKET
OUT
MESSAGES
TO
AS
INTRODUCED
IN
SECTION
IV
A
THERE
ARE
ALREADY
SEVERAL
MEASURE
THROUGHPUT
THE
ACTUAL
PERFORMANCE
OF
CONTROL
OPENFLOW
IMPLEMENTATIONS
FROM
HARDWARE
AND
SOFTWARE
LERS
WILL
BE
AFFECTED
BY
OTHER
FACTORS
SUCH
AS
THE
NUMBER
VENDORS
BEING
DEPLOYED
IN
DIFFERENT
TYPES
OF
NETWORKS
AND
COMPLEXITY
OF
THE
APPLICATIONS
RUNNING
ON
THE
FROM
SMALL
ENTERPRISE
TO
LARGE
SCALE
DATA
CENTERS
THERE
CONTROLLER
AND
SECURITY
MECHANISMS
IMPLEMENTED
FOR
FORE
A
GROWING
NUMBER
OF
EXPERIMENTS
OVER
SDN
ENABLED
EXAMPLE
A
ROUTING
ALGORITHM
CONSUMES
MORE
COMPUTING
NETWORKS
IS
EXPECTED
IN
THE
NEAR
FUTURE
THIS
WILL
NATURALLY
RESOURCES
AND
NEEDS
MORE
TIME
TO
EXECUTE
THAN
A
SIMPLE
CREATE
NEW
CHALLENGES
AS
QUESTIONS
REGARDING
SDN
PERFOR
LEARNING
SWITCH
APPLICATION
ALSO
CURRENT
EVALUATIONS
ARE
MANCE
AND
SCALABILITY
HAVE
NOT
YET
BEEN
PROPERLY
INVES
DONE
USING
PLAIN
TCP
CONNECTIONS
THE
PERFORMANCE
IS
TIGATED
UNDERSTANDING
THE
PERFORMANCE
AND
LIMITATION
OF
VERY
LIKELY
TO
CHANGE
WHEN
BASIC
SECURITY
MECHANISMS
ARE
THE
SDN
CONCEPT
IS
A
REQUIREMENT
FOR
ITS
IMPLEMENTATION
PUT
IN
PLACE
SUCH
AS
TLS
OR
MORE
ADVANCED
MECHANISMS
IN
PRODUCTION
NETWORKS
THERE
ARE
VERY
FEW
PERFORMANCE
TO
AVOID
EAVESDROPPING
MAN
IN
THE
MIDDLE
AND
DOS
EVALUATION
STUDIES
OF
OPENFLOW
AND
SDN
ARCHITECTURE
ATTACKS
ON
THE
CONTROL
PLANE
ALTHOUGH
SIMULATION
STUDIES
AND
EXPERIMENTATION
ARE
ANOTHER
IMPORTANT
ISSUE
CONCERNING
SCALABILITY
IS
DATA
AMONG
THE
MOST
WIDELY
USED
PERFORMANCE
EVALUATION
TECH
DISTRIBUTION
AMONG
CONTROLLER
REPLICAS
IN
DISTRIBUTED
ARCHI
NIQUES
ANALYTICAL
MODELING
HAS
ITS
OWN
BENEFITS
AS
WELL
A
TECTURES
DISTRIBUTED
CONTROL
PLATFORMS
RELY
ON
DATA
DISTRI
CLOSED
FORM
DESCRIPTION
OF
A
NETWORKING
ARCHITECTURE
PAVES
BUTION
MECHANISMS
TO
ACHIEVE
THEIR
GOALS
FOR
INSTANCE
THE
WAY
FOR
NETWORK
DESIGNERS
TO
HAVE
A
QUICK
AND
CONTROLLERS
SUCH
AS
ONIX
HYPERFLOW
AND
ONOS
NEED
APPROXIMATE
ESTIMATE
OF
THE
PERFORMANCE
OF
THEIR
DESIGN
MECHANISMS
TO
KEEP
A
CONSISTENT
STATE
IN
THE
DISTRIBUTED
WITHOUT
THE
NEED
TO
SPEND
CONSIDERABLE
TIME
FOR
SIMULA
CONTROL
PLATFORM
RECENTLY
EXPERIMENTAL
EVALUATIONS
HAVE
TION
STUDIES
OR
EXPENSIVE
EXPERIMENTAL
SETUP
SHOWN
THAT
HIGH
PERFORMANCE
DISTRIBUTED
AND
FAULT
TOLER
SOME
WORK
HAS
INVESTIGATED
WAYS
TO
IMPROVE
THE
PER
ANT
DATA
STORES
CAN
BE
USED
TO
TACKLE
SUCH
CHALLENGES
FORMANCE
OF
SWITCHING
CAPABILITIES
IN
SDN
THESE
MAINLY
NEVERTHELESS
FURTHER
WORK
IS
NECESSARY
TO
PROPERLY
UNDER
CONSIST
OF
OBSERVING
THE
PERFORMANCE
OF
OPENFLOW
STAND
STATE
DISTRIBUTION
TRADEOFFS
ENABLED
NETWORKS
REGARDING
DIFFERENT
ASPECTS
SUCH
AS
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
LOOKUP
PERFORMANCE
HARDWARE
ACCELERATION
DEVICE
PERFORMANCE
AND
BETTER
DECIDE
WHICH
ONE
IS
BEST
THE
INFLUENCE
OF
TYPES
OF
RULES
AND
PACKET
SIZES
PER
SUITED
FOR
THE
TARGET
NETWORK
INFRASTRUCTURE
FORMANCE
BOTTLENECKS
OF
CURRENT
OPENFLOW
IMPLEMENTA
SURPRISINGLY
DESPITE
BEING
DESIGNED
TO
EVALUATE
THE
TIONS
HOW
REACTIVE
SETTINGS
IMPACT
THE
PERFORMANCE
PERFORMANCE
OF
CONTROLLERS
CBENCH
IS
CURRENTLY
A
SINGLE
ON
DATA
CENTER
NETWORKS
AND
THE
IMPACT
OF
CONFIGU
THREADED
TOOL
THEREFORE
MULTIPLE
INSTANCES
HAVE
TO
BE
RATION
ON
OPENFLOW
SWITCHES
STARTED
TO
UTILIZE
MULTIPLE
CPUS
IT
ALSO
ONLY
ESTABLISHES
DESIGN
CHOICES
CAN
HAVE
A
SIGNIFICANT
IMPACT
ON
THE
ONE
CONTROLLER
CONNECTION
FOR
ALL
EMULATED
SWITCHES
UN
LOOKUP
PERFORMANCE
OF
OPENFLOW
SWITCHING
IN
LINUX
FORTUNATELY
THIS
MEANS
LITTLE
CAN
BE
DERIVED
FROM
THE
OPERATING
SYSTEM
USING
STANDARD
COMMODITY
NETWORK
RESULTS
IN
TERMS
OF
CONTROLLER
PERFORMANCE
AND
BEHAVIOR
OR
INTERFACE
CARDS
JUST
BY
USING
COMMODITY
NETWORK
ESTIMATION
OF
DIFFERENT
BOUNDS
AT
THE
MOMENT
FOR
IN
HARDWARE
THE
PACKET
SWITCHING
THROUGHPUT
CAN
BE
IM
STANCE
AGGREGATED
STATISTICS
ARE
GATHERED
FOR
ALL
SWITCHES
PROVED
BY
UP
TO
WHEN
COMPARED
TO
ONE
BASED
ON
SOFT
BUT
NOT
FOR
EACH
INDIVIDUAL
SWITCH
AS
A
RESULT
IT
IS
NOT
OPENFLOW
SWITCHING
SIMILARLY
HARDWARE
ACCEL
POSSIBLE
TO
IDENTIFY
WHETHER
ALL
RESPONSES
OF
THE
CONTROLLER
ERATION
BASED
ON
NETWORK
PROCESSORS
CAN
ALSO
BE
APPLIED
ARE
FOR
A
SINGLE
SWITCH
OR
WHETHER
THE
CAPACITY
OF
THE
TO
PERFORM
OPENFLOW
SWITCHING
IN
SUCH
CASES
EARLY
RE
CONTROLLER
IS
ACTUALLY
SHARED
AMONG
THE
SWITCHES
FLEXIBLE
PORTS
INDICATE
THAT
PERFORMANCE
IN
TERMS
OF
PACKET
DELAY
OPENFLOW
CONTROLLER
BENCHMARKS
ARE
AVAILABLE
THOUGH
CAN
BE
IMPROVED
BY
WHEN
COMPARED
TO
CONVENTIONAL
OFCBENCHMARK
IS
ONE
OF
THE
RECENT
DEVELOPMENTS
DESIGNS
IT
CREATES
A
SET
OF
MESSAGE
GENERATING
VIRTUAL
SWITCHES
BY
UTILIZING
INTEL
DPDK
LIBRARY
IT
HAS
BEEN
WHICH
CAN
BE
CONFIGURED
INDEPENDENTLY
FROM
EACH
OTHER
TO
SHOWN
THAT
IT
IS
POSSIBLE
TO
PROVIDE
FLEXIBLE
TRAFFIC
STEERING
EMULATE
A
SPECIFIC
SCENARIO
AND
TO
MAINTAIN
THEIR
OWN
CAPABILITY
AT
THE
HYPERVISOR
LEVEL
E
G
KVM
WITHOUT
THE
STATISTICS
PERFORMANCE
LIMITATIONS
IMPOSED
BY
TRADITIONAL
HARDWARE
ANOTHER
INTERESTING
QUESTION
TO
POSE
WHEN
EVALUATING
SWITCHING
TECHNIQUES
SUCH
AS
SR
IOV
THIS
IS
THE
PERFORMANCE
OF
SDN
ARCHITECTURES
IS
WHAT
IS
THE
RE
PARTICULARLY
RELEVANT
SINCE
MOST
OF
THE
CURRENT
ENTERPRISE
QUIRED
NUMBER
OF
CONTROLLERS
FOR
A
GIVEN
NETWORK
TOPOLOGY
DEPLOYMENTS
OF
SDN
ARE
IN
VIRTUALIZED
DATA
CENTER
INFRA
AND
WHERE
TO
PLACE
THE
CONTROLLERS
BY
ANALYZ
STRUCTURES
AS
IN
VMWARE
NVP
SOLUTION
ING
THE
PERFORMANCE
OF
CONTROLLERS
IN
DIFFERENT
NETWORK
CURRENT
OPENFLOW
SWITCH
IMPLEMENTATIONS
CAN
LEAD
TO
TOPOLOGIES
IT
IS
POSSIBLE
TO
CONCLUDE
THAT
ONE
CONTROLLER
IS
PERFORMANCE
BOTTLENECKS
WITH
RESPECT
TO
THE
CPU
LOAD
OFTEN
ENOUGH
TO
KEEP
THE
LATENCY
AT
A
REASONABLE
RATE
YET
MODIFICATIONS
ON
THE
PROTOCOL
SPECIFICATION
CAN
MOREOVER
AS
OBSERVED
IN
THE
SAME
EXPERIMENTS
IN
THE
HELP
REDUCE
THE
OCCURRENCE
OF
THESE
BOTTLENECKS
FURTHER
GENERAL
CASE
ADDING
K
CONTROLLERS
TO
THE
NETWORK
CAN
RE
INVESTIGATIONS
PROVIDE
MEASUREMENTS
REGARDING
THE
PER
DUCE
THE
LATENCY
BY
A
FACTOR
OF
K
HOWEVER
THERE
ARE
CASES
FORMANCE
OF
THE
OPENFLOW
SWITCH
FOR
DIFFERENT
TYPES
OF
SUCH
AS
LARGE
SCALE
NETWORKS
AND
WANS
WHERE
MORE
CON
RULES
AND
PACKET
SIZES
TROLLERS
SHOULD
BE
DEPLOYED
TO
ACHIEVE
HIGH
RELIABILITY
AND
IN
DATA
CENTERS
A
REACTIVE
SETTING
OF
FLOW
RULES
CAN
LEAD
LOW
CONTROL
PLANE
LATENCY
TO
AN
UNACCEPTABLE
PERFORMANCE
WHEN
ONLY
EIGHT
SWITCHES
RECENT
STUDIES
ALSO
SHOW
THAT
THE
SDN
CONTROL
PLANE
ARE
HANDLED
BY
ONE
OPENFLOW
CONTROLLER
THIS
CANNOT
BE
FULLY
PHYSICALLY
CENTRALIZED
DUE
TO
RESPONSIVE
MEANS
THAT
LARGE
SCALE
SDN
DEPLOYMENTS
SHOULD
PROBABLY
NESS
RELIABILITY
AND
SCALABILITY
METRICS
NOT
RELY
ON
A
PURELY
REACTIVE
MODUS
OPERANDI
BUT
RATHER
THEREFORE
DISTRIBUTED
CONTROLLERS
ARE
THE
NATURAL
CHOICE
ON
A
COMBINATION
OF
PROACTIVE
AND
REACTIVE
FLOW
SETUP
FOR
CREATING
A
LOGICALLY
CENTRALIZED
CONTROL
PLANE
WHILE
BE
TO
FOSTER
THE
EVALUATION
OF
DIFFERENT
PERFORMANCE
AS
ING
CAPABLE
OF
COPING
WITH
THE
DEMANDS
OF
LARGE
SCALE
PECTS
OF
OPENFLOW
DEVICES
FRAMEWORKS
SUCH
AS
OFLOPS
NETWORKS
HOWEVER
DISTRIBUTED
CONTROLLERS
BRING
ADDITION
OFLOPS
TURBO
CBENCH
AND
OFC
AL
CHALLENGES
SUCH
AS
THE
CONSISTENCY
OF
THE
GLOBAL
NETWORK
BENCHMARK
HAVE
BEEN
PROPOSED
THEY
PROVIDE
A
SET
VIEW
WHICH
CAN
SIGNIFICANTLY
AFFECT
THE
PERFORMANCE
OF
THE
OF
TOOLS
TO
ANALYZE
THE
PERFORMANCE
OF
OPENFLOW
SWITCHES
NETWORK
IF
NOT
CAREFULLY
ENGINEERED
TAKING
TWO
APPLICA
AND
CONTROLLERS
CBENCH
IS
A
BENCHMARK
TOOL
TIONS
AS
EXAMPLES
ONE
THAT
IGNORES
INCONSISTENCIES
AND
DEVELOPED
TO
EVALUATE
THE
PERFORMANCE
OF
OPENFLOW
CON
ANOTHER
THAT
TAKES
INCONSISTENCY
INTO
CONSIDERATION
IT
IS
TROLLERS
BY
TAKING
ADVANTAGE
OF
THE
CBENCH
IT
IS
POSSIBLE
POSSIBLE
TO
OBSERVE
THAT
OPTIMALITY
IS
SIGNIFICANTLY
AFFECTED
TO
IDENTIFY
PERFORMANCE
IMPROVEMENTS
FOR
OPENFLOW
CON
WHEN
INCONSISTENCIES
ARE
NOT
CONSIDERED
AND
THAT
THE
TROLLERS
BASED
ON
DIFFERENT
ENVIRONMENT
AND
SYSTEM
CON
ROBUSTNESS
OF
AN
APPLICATION
IS
INCREASED
WHEN
THE
CON
FIGURATIONS
SUCH
AS
THE
NUMBER
OF
FORWARDING
DEVICES
TROLLER
IS
AWARE
OF
THE
NETWORK
STATE
DISTRIBUTION
NETWORK
TOPOLOGY
OVERALL
NETWORK
WORKLOAD
TYPE
OF
MOST
OF
THESE
INITIATIVES
TOWARD
IDENTIFYING
THE
LIMITA
EQUIPMENTS
FORWARDING
COMPLEXITY
AND
OVERHEAD
OF
THE
TIONS
AND
BOTTLENECKS
OF
SDN
ARCHITECTURES
CAN
TAKE
A
LOT
OF
APPLICATIONS
BEING
EXECUTED
ON
TOP
OF
CONTROLLERS
TIME
AND
EFFORT
TO
PRODUCE
CONSISTENT
OUTPUTS
DUE
TO
THE
THEREFORE
SUCH
TOOLS
CAN
HELP
SYSTEM
DESIGNERS
MAKE
PRACTICAL
DEVELOPMENT
AND
EXPERIMENTATION
REQUIREMENTS
BETTER
DECISIONS
REGARDING
THE
PERFORMANCE
OF
DEVICES
AND
AS
MENTIONED
BEFORE
ANALYTIC
MODELS
CAN
QUICKLY
PRO
THE
NETWORK
WHILE
ALSO
ALLOWING
END
USERS
TO
MEASURE
THE
VIDE
PERFORMANCE
INDICATORS
AND
POTENTIAL
SCALABILITY
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
BOTTLENECKS
FOR
AN
OPENFLOW
SWITCH
CONTROLLER
SYSTEM
BE
FORE
DETAILED
DATA
ARE
AVAILABLE
WHILE
SIMULATION
CAN
PRO
VIDE
DETAILED
INSIGHT
INTO
A
CERTAIN
CONFIGURATION
THE
ANALYTICAL
MODEL
GREATLY
SIMPLIFIES
A
CONCEPTUAL
DEPLOY
MENT
DECISION
FOR
INSTANCE
A
NETWORK
CALCULUS
BASED
MODEL
CAN
BE
USED
TO
EVALUATE
THE
PERFORMANCE
OF
AN
SDN
SWITCH
AND
THE
INTERACTION
OF
SDN
SWITCHES
AND
CONTROLLERS
THE
PROPOSED
SDN
SWITCH
MODEL
CAPTURED
THE
CLOSED
FORM
OF
THE
PACKET
DELAY
AND
BUFFER
LENGTH
INSIDE
THE
SDN
SWITCH
ACCORDING
TO
THE
PARAMETERS
OF
A
CUMULATIVE
ARRIVAL
PROCESS
USING
RECENT
MEASUREMENTS
THE
AUTHORS
HAVE
REPRODUCED
THE
PACKET
PROCESSING
DELAY
OF
TWO
VA
RIANTS
OF
OPENFLOW
SWITCHES
AND
COMPUTED
THE
BUFFER
RE
QUIREMENTS
OF
AN
OPENFLOW
CONTROLLER
ANALYTIC
MODELS
BASED
ON
QUEUING
THEORY
FOR
THE
FORWARDING
SPEED
AND
BLOCKING
PROBABILITY
OF
CURRENT
OPENFLOW
SWITCHES
CAN
ALSO
BE
USED
TO
ESTIMATE
THE
PERFORMANCE
OF
THE
NETWORK
F
SECURITY
AND
DEPENDABILITY
CYBER
ATTACKS
AGAINST
FINANCIAL
INSTITUTIONS
ENERGY
FA
CILITIES
GOVERNMENT
UNITS
AND
RESEARCH
INSTITUTIONS
ARE
BECOMING
ONE
OF
THE
TOP
CONCERNS
OF
GOVERNMENTS
AND
AGENCIES
AROUND
THE
GLOBE
DIFFERENT
INCI
DENTS
SUCH
AS
STUXNET
HAVE
ALREADY
SHOWN
THE
PER
SISTENCE
OF
THREAT
VECTORS
PUT
ANOTHER
WAY
THESE
ATTACKS
ARE
CAPABLE
OF
DAMAGING
A
NATION
WIDE
INFRASTRUC
TURE
WHICH
REPRESENT
A
SIGNIFICANT
AND
CONCERNING
ISSUE
AS
EXPECTED
ONE
OF
THE
MOST
COMMON
MEANS
OF
EXECUTING
THOSE
ATTACKS
IS
THROUGH
THE
NETWORK
EITHER
THE
INTERNET
OR
THE
LOCAL
AREA
NETWORK
IT
CAN
BE
USED
AS
A
SIMPLE
TRANSPORT
INFRASTRUCTURE
FOR
THE
ATTACK
OR
AS
A
POTENTIALIZED
WEAPON
TO
AMPLIFY
THE
IMPACT
OF
THE
ATTACK
FOR
INSTANCE
HIGH
CAPACITY
NETWORKS
CAN
BE
USED
TO
LAUNCH
LARGE
SCALE
AT
TACKS
EVEN
THOUGH
THE
ATTACKER
HAS
ONLY
A
LOW
CAPACITY
NETWORK
CONNECTION
AT
HIS
PREMISES
DUE
TO
THE
DANGER
OF
CYBER
ATTACKS
AND
THE
CURRENT
LANDSCAPE
OF
DIGITAL
THREATS
SECURITY
AND
DEPENDABILITY
ARE
TOP
PRIORITIES
IN
SDN
WHILE
RESEARCH
AND
EXPERIMEN
TATION
ON
SDNS
IS
BEING
CONDUCTED
BY
SOME
COMMERCIAL
PLAYERS
E
G
GOOGLE
YAHOO
RACKSPACE
MICROSOFT
COMMERCIAL
ADOPTION
IS
STILL
IN
ITS
EARLY
STAGE
INDUSTRY
EXPERTS
BELIEVE
THAT
SECURITY
AND
DEPENDABILITY
ARE
ISSUES
THAT
NEED
TO
BE
ADDRESSED
AND
FURTHER
INVESTIGATED
IN
SDN
ADDITIONALLY
FROM
THE
DEPENDABILITY
PERSPECTIVE
AVAIL
ABILITY
OF
INTERNET
ROUTERS
IS
TODAY
A
MAJOR
CONCERN
WITH
THE
WIDESPREAD
OF
CLOUDS
AND
THEIR
STRONG
EXPECTATIONS
ABOUT
THE
NETWORK
IT
IS
THEREFORE
CRUCIAL
TO
ACHIEVE
HIGH
LEVELS
OF
AVAILABILITY
ON
SDN
CONTROL
PLATFORMS
IF
THEY
ARE
TO
BECOME
THE
MAIN
PILLARS
OF
NETWORKED
APPLICA
TIONS
DIFFERENT
THREAT
VECTORS
HAVE
ALREADY
BEEN
IDENTIFIED
IN
SDN
ARCHITECTURES
AS
WELL
AS
SEVERAL
SECURITY
ISSUES
AND
WEAKNESSES
IN
OPENFLOW
BASED
NETWORKS
WHILE
SOME
THREAT
VECTORS
ARE
COMMON
TO
EXISTING
NETWORKS
OTHERS
ARE
MORE
SPECIFIC
TO
SDN
SUCH
AS
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
FIG
MAIN
THREAT
VECTORS
OF
SDN
ARCHITECTURES
ATTACKS
ON
CONTROL
PLANE
COMMUNICATION
AND
LOGICALLY
CEN
TRALIZED
CONTROLLERS
IT
IS
WORTH
MENTIONING
THAT
MOST
THREATS
VECTORS
ARE
INDEPENDENT
OF
THE
TECHNOLOGY
OR
THE
PROTOCOL
E
G
OPENFLOW
POF
AND
FORCES
BECAUSE
THEY
REPRESENT
THREATS
ON
CONCEPTUAL
AND
ARCHITECTURAL
LAYERS
OF
SDN
ITSELF
AS
SHOWN
IN
FIG
AND
TABLE
THERE
ARE
AT
LEAST
SEVEN
IDENTIFIED
THREATS
VECTOR
IN
SDN
ARCHITECTURES
THE
FIRST
THREAT
VECTOR
CONSISTS
OF
FORGED
OR
FAKED
TRAFFIC
FLOWS
IN
THE
DATA
PLANE
WHICH
CAN
BE
USED
TO
ATTACK
FORWARDING
DEVICES
AND
CONTROLLERS
THE
SECOND
ALLOWS
AN
ATTACKER
TO
EXPLOIT
VULNERABILITIES
OF
FORWARDING
DEVICES
AND
CONSE
QUENTLY
WREAK
HAVOC
WITH
THE
NETWORK
THREAT
VECTORS
THREE
FOUR
AND
FIVE
ARE
THE
MOST
DANGEROUS
ONES
SINCE
THEY
CAN
COMPROMISE
THE
NETWORK
OPERATION
ATTACKS
ON
THE
CONTROL
PLANE
CONTROLLERS
AND
APPLICATIONS
CAN
EASILY
GRANT
AN
ATTACKER
THE
CONTROL
OF
THE
NETWORK
FOR
INSTANCE
A
FAULTY
OR
MALICIOUS
CONTROLLER
OR
APPLICATION
COULD
BE
USED
TO
REPROGRAM
THE
ENTIRE
NETWORK
FOR
DATA
THEFT
PUR
POSES
E
G
IN
A
DATA
CENTER
THE
SIXTH
THREAT
VECTOR
IS
LINKED
TO
ATTACKS
ON
AND
VULNERABILITIES
IN
ADMINISTRATIVE
STATIONS
A
COMPROMISED
CRITICAL
COMPUTER
DIRECTLY
CON
NECTED
TO
THE
CONTROL
NETWORK
WILL
EMPOWER
THE
ATTACKER
TABLE
SDN
SPECIFIC
VERSUS
NONSPECIFIC
THREATS
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
TABLE
ATTACKS
TO
OPENFLOW
NETWORKS
WITH
RESOURCES
TO
LAUNCH
MORE
EASILY
AN
ATTACK
TO
THE
CON
TROLLER
FOR
INSTANCE
LAST
THREAT
VECTOR
NUMBER
SEVEN
RE
PRESENTS
THE
LACK
OF
TRUSTED
RESOURCES
FOR
FORENSICS
AND
REMEDIATION
WHICH
CAN
COMPROMISE
INVESTIGATIONS
E
G
FORENSICS
ANALYSIS
AND
PRECLUDE
FAST
AND
SECURE
RECOVERY
MODES
FOR
BRINGING
THE
NETWORK
BACK
INTO
A
SAFE
OPERATION
CONDITION
AS
CAN
BE
OBSERVED
IN
TABLE
THREAT
VECTORS
TO
ARE
SPECIFIC
TO
SDN
AS
THEY
STEM
FROM
THE
SEPARATION
OF
THE
CONTROL
AND
DATA
PLANES
AND
THE
CONSEQUENT
INTRODUCTION
OF
A
NEW
ENTITY
IN
THESE
NETWORKSVTHE
LOGICALLY
CENTRALIZED
CONTROLLER
THE
OTHER
VECTORS
WERE
ALREADY
PRESENT
IN
TRA
DITIONAL
NETWORKS
HOWEVER
THE
IMPACT
OF
THESE
THREATS
COULD
BE
LARGER
THAN
TODAYVOR
AT
LEAST
IT
MAY
BE
EXPRESSED
DIFFERENTLYVAND
AS
A
CONSEQUENCE
IT
MAY
NEED
TO
BE
DEALT
WITH
DIFFERENTLY
OPENFLOW
NETWORKS
ARE
SUBJECT
TO
A
VARIETY
OF
SECURITY
AND
DEPENDABILITY
PROBLEMS
SUCH
AS
SPOOFING
TAM
PERING
REPUDIATION
INFORMATION
DISCLOSURE
DENIAL
OF
SERVICE
ELEVATION
OF
PRIVILEGES
AND
THE
ASSUMPTION
THAT
ALL
APPLICATIONS
ARE
BENIGN
AND
WILL
NOT
AFFECT
SDN
OPERATION
THE
LACK
OF
ISOLATION
PROTECTION
ACCESS
CONTROL
AND
STRONGER
SECURITY
RECOMMENDATIONS
ARE
SOME
OF
THE
REASONS
FOR
THESE
VULNERABILITIES
WE
WILL
EX
PLORE
THESE
NEXT
OPENFLOW
SECURITY
ASSESSMENT
THERE
IS
ALREADY
A
NUMBER
OF
IDENTIFIED
SECURITY
ISSUES
IN
OPENFLOW
ENABLED
NETWORKS
STARTING
FROM
A
STRIDE
METHODOLOGY
IT
IS
POSSIBLE
TO
IDENTIFY
DIFFERENT
ATTACKS
TO
OPENFLOW
ENABLED
NETWORKS
TABLE
SUMMARIZES
THESE
ATTACKS
BASED
ON
FOR
INSTANCE
INFORMATION
DISCLOSURE
CAN
BE
ACHIEVED
THROUGH
SIDE
CHANNEL
ATTACKS
TARGETING
THE
FLOW
RULE
SETUP
PROCESS
WHEN
REACTIVE
FLOW
SETUP
IS
IN
PLACE
OBTAINING
INFORMATION
ABOUT
NETWORK
OPERATION
IS
RELA
TIVELY
EASY
AN
ATTACKER
THAT
MEASURES
THE
DELAY
EXPERI
ENCED
BY
THE
FIRST
PACKET
OF
A
FLOW
AND
THE
SUBSEQUENT
CAN
EASILY
INFER
THAT
THE
TARGET
NETWORK
IS
A
REACTIVE
SDN
AND
PROCEED
WITH
A
SPECIALIZED
ATTACK
THIS
ATTACKVKNOWN
AS
FINGERPRINTING
VMAY
BE
THE
FIRST
STEP
TO
LAUNCH
A
DOS
ATTACK
INTENDED
TO
EXHAUST
THE
RESOURCES
OF
THE
NETWORK
FOR
EXAMPLE
IF
THE
SDN
IS
PROACTIVE
GUESSING
ITS
FORWARD
ING
RULE
POLICIES
IS
HARDER
BUT
STILL
FEASIBLE
INTER
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
ESTINGLY
ALL
REPORTED
THREATS
AND
ATTACKS
AFFECT
ALL
VERSIONS
TO
OF
THE
OPENFLOW
SPECIFICATION
IT
IS
ALSO
WORTH
EMPHASIZING
THAT
SOME
ATTACKS
SUCH
AS
SPOOFING
ARE
NOT
SPECIFIC
TO
SDN
HOWEVER
THESE
ATTACKS
CAN
HAVE
A
LARGER
IMPACT
IN
SDNS
FOR
INSTANCE
BY
SPOOFING
THE
AD
DRESS
OF
THE
NETWORK
CONTROLLER
THE
ATTACKER
USING
A
FAKE
CONTROLLER
COULD
TAKE
OVER
THE
CONTROL
OF
THE
ENTIRE
NET
WORK
A
SMART
ATTACK
COULD
PERSIST
FOR
ONLY
A
FEW
SECONDS
I
E
JUST
THE
TIME
NEEDED
TO
INSTALL
SPECIAL
RULES
ON
ALL
FORWARDING
DEVICES
FOR
ITS
MALICIOUS
PURPOSES
E
G
TRAFFIC
CLONING
SUCH
ATTACK
COULD
BE
VERY
HARD
TO
DETECT
TAKING
COUNTER
FALSIFICATION
AS
ANOTHER
EXAMPLE
AN
ATTACKER
CAN
TRY
TO
GUESS
INSTALLED
FLOW
RULES
AND
SUBSE
QUENTLY
FORGE
PACKETS
TO
ARTIFICIALLY
INCREASE
THE
COUNTER
SUCH
ATTACK
WOULD
BE
SPECIALLY
CRITICAL
FOR
BILLING
AND
LOAD
BALANCING
SYSTEMS
FOR
INSTANCE
A
CUSTOMER
COULD
BE
CHARGED
FOR
MORE
TRAFFIC
THAN
SHE
IN
FACT
USED
WHILE
A
LOAD
BALANCING
ALGORITHM
MAY
TAKE
NONOPTIMAL
DECISIONS
DUE
TO
FORGED
COUNTERS
FLOW
NETWORKS
INCLUDE
THE
LACK
OF
STRONG
SECURITY
RE
COMMENDATIONS
FOR
DEVELOPERS
THE
LACK
OF
TLS
AND
ACCESS
CONTROL
SUPPORT
ON
MOST
SWITCH
AND
CONTROLLER
IMPLEMEN
TATIONS
THE
BELIEF
THAT
TCP
IS
ENOUGH
BECAUSE
LINKS
ARE
PHYSICALLY
SECURE
THE
FACT
THAT
MANY
SWITCHES
HAVE
LISTENER
MODE
ACTIVATED
BY
DEFAULT
ALLOWING
THE
ESTABLISHMENT
OF
MALICIOUS
TCP
CONNECTIONS
FOR
IN
STANCE
OR
THAT
FLOW
TABLE
VERIFICATION
CAPABILITIES
ARE
HARDER
TO
IMPLEMENT
WHEN
TLS
IS
NOT
IN
USE
IN
ADDITION
THE
HIGH
DENIAL
OF
SERVICE
RISK
POSED
TO
CEN
TRALIZED
CONTROLLERS
IS
WORTH
MENTIONING
AS
WELL
AS
THE
VULNERABILITIES
IN
THE
CONTROLLERS
THEMSELVES
BUGS
AND
VULNERABILITIES
IN
APPLICATIONS
TARGETED
FLOODING
ATTACKS
INSECURE
NORTHBOUND
INTER
FACES
THAT
CAN
LEAD
TO
SECURITY
BREACHES
AND
THE
RISK
OF
RESOURCE
DEPLETION
ATTACKS
FOR
INSTANCE
IT
HAS
BEEN
SHOWN
THAT
AN
ATTACKER
CAN
EASILY
COMPROMISE
CONTROL
PLANE
COMMUNICATIONS
THROUGH
DOS
ATTACKS
AND
LAUNCH
A
RESOURCE
DEPLETION
ATTACK
ON
CONTROL
PLATFORMS
BY
EXPLOITING
A
SINGLE
APPLICATION
SUCH
AS
A
LEARNING
SWITCH
ANOTHER
POINT
OF
CONCERN
IS
THE
FACT
THAT
CURRENT
CON
TROLLERS
SUCH
AS
FLOODLIGHT
OPENDAYLIGHT
POX
AND
BEACON
HAVE
SEVERAL
SECURITY
AND
RESILIENCY
ISSUES
COMMON
APPLICATION
DEVELOPMENT
PROBLEMS
BUGS
SUCH
AS
THE
SUDDEN
EXIT
OF
AN
APPLICATION
OR
THE
CONTINUOUS
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
TABLE
COUNTERMEASURES
FOR
SECURITY
THREATS
IN
OPENFLOW
NETWORKS
RATE
LIMITING
PACKET
DROPPING
SHORTER
TIMEOUTS
AND
FLOW
AGGREGATIONS
ARE
TECHNIQUES
THAT
CAN
BE
APPLIED
ON
CONTROLLERS
AND
FORWARDING
DEVICES
TO
MITIGATE
DIFFERENT
TYPES
OF
ATTACKS
SUCH
AS
DENIAL
OF
SERVICE
AND
INFORMATION
DISCLOSURE
FOR
INSTANCE
REDUCED
TIMEOUTS
CAN
BE
USED
TO
MITIGATE
THE
EFFECT
OF
AN
ATTACK
EXPLORING
THE
REACTIVE
OPE
RATION
MODE
OF
THE
NETWORK
TO
MAKE
THE
CONTROLLER
INSTALL
RULES
THAT
DIVERT
TRAFFIC
TO
A
MALICIOUS
MACHINE
WITH
RE
DUCED
TIMEOUTS
THE
ATTACKER
WOULD
BE
FORCED
TO
CONSTANTLY
GENERATE
A
NUMBER
OF
FORGED
PACKETS
TO
AVOID
TIMEOUT
EXPIRATION
MAKING
THE
ATTACK
MORE
LIKELY
TO
BE
DETECTED
RATE
LIMITING
AND
PACKET
DROPPING
CAN
BE
APPLIED
TO
AVOID
DOS
ATTACKS
ON
THE
CONTROL
PLANE
OR
STOP
ONGOING
ATTACKS
DIRECTLY
ON
THE
DATA
PLANE
BY
INSTALLING
SPECIFIC
RULES
ON
THE
DEVICES
WHERE
THE
ATTACKS
IS
BEING
ORIGINATED
FORENSICS
AND
REMEDIATION
ENCOMPASS
MECHANISMS
SUCH
AS
SECURE
LOGGING
EVENT
CORRELATION
AND
CONSISTENT
REPORTING
IF
ANYTHING
WRONG
HAPPENS
WITH
THE
NETWORK
OPERATORS
SHOULD
BE
ABLE
TO
SAFELY
FIGURE
OUT
THE
ROOT
CAUSE
OF
THE
PROBLEM
AND
PUT
THE
NETWORK
TO
WORK
ON
A
SECURE
OPERATION
MODE
AS
FAST
AS
POSSIBLE
ADDITIONALLY
TECH
NIQUES
TO
TOLERATE
FAULTS
AND
INTRUSIONS
SUCH
AS
STATE
MA
ALLOCATION
OF
MEMORY
SPACE
ARE
ENOUGH
TO
CRASH
EXISTING
CHINE
REPLICATION
PROACTIVE
REACTIVE
RECOVERY
CONTROLLERS
ON
THE
SECURITY
PERSPECTIVE
A
SIMPLE
MALI
AND
DIVERSITY
CAN
BE
ADDED
TO
CONTROL
PLATFORMS
FOR
CIOUS
ACTION
SUCH
AS
CHANGING
THE
VALUE
OF
A
DATA
STRUCTURE
INCREASING
THE
ROBUSTNESS
AND
SECURITY
PROPERTIES
BY
AUTO
IN
MEMORY
CAN
ALSO
DIRECTLY
AFFECT
THE
OPERATION
AND
RELIA
MATICALLY
MASKING
AND
REMOVING
FAULTS
PUT
DIFFERENTLY
BILITY
OF
CURRENT
CONTROLLERS
THESE
EXAMPLES
ARE
ILLUSTRA
SDN
CONTROLLERS
SHOULD
BE
ABLE
TO
RESIST
AGAINST
DIFFERENT
TIVE
THAT
FROM
A
SECURITY
AND
DEPENDABILITY
PERSPECTIVE
TYPES
OF
EVENTS
E
G
POWER
OUTAGES
NETWORK
DISRUPTION
THERE
IS
STILL
A
LONG
WAY
TO
GO
COMMUNICATION
FAILURES
NETWORK
PARTITIONING
AND
ATTACKS
E
G
DDOS
RESOURCE
EXHAUSTION
ONE
OF
THE
COUNTERMEASURES
FOR
OPENFLOW
BASED
SDNS
SEVERAL
MOST
TRADITIONAL
WAYS
OF
ACHIEVING
HIGH
AVAILABILITY
IS
COUNTERMEASURES
CAN
BE
PUT
IN
PLACE
TO
MITIGATE
THE
SECU
THROUGH
REPLICATION
YET
PROACTIVE
REACTIVE
RECOVERY
AND
RITY
THREATS
IN
SDNS
TABLE
SUMMARIZES
A
NUMBER
OF
DIVERSITY
ARE
TWO
EXAMPLES
OF
CRUCIAL
TECHNIQUES
THAT
ADD
COUNTERMEASURES
THAT
CAN
BE
APPLIED
TO
DIFFERENT
ELEMENTS
VALUE
TO
THE
SYSTEM
FOR
RESISTING
AGAINST
DIFFERENT
KINDS
OF
OF
AN
SDN
OPENFLOW
ENABLED
NETWORK
SOME
OF
THESE
ATTACKS
AND
FAILURES
E
G
THOSE
EXPLORING
COMMON
VUL
MEASURES
NAMELY
RATE
LIMITING
EVENT
FILTERING
PACKET
NERABILITIES
OR
CAUSED
BY
SOFTWARE
AGING
PROBLEMS
DROPPING
SHORTER
TIMEOUTS
AND
FLOW
AGGREGATION
ARE
AL
OTHER
COUNTERMEASURES
TO
ADDRESS
DIFFERENT
THREATS
AND
READY
RECOMMENDED
IN
THE
MOST
RECENT
VERSIONS
OF
THE
ISSUES
OF
SDN
INCLUDE
ENHANCING
THE
SECURITY
AND
DEPEN
OPENFLOW
SPECIFICATION
VERSION
AND
LATER
HOW
DABILITY
OF
CONTROLLERS
PROTECTION
AND
ISOLATION
OF
APPLICA
EVER
MOST
OF
THEM
ARE
NOT
YET
SUPPORTED
OR
IMPLEMENTED
TIONS
TRUST
MANAGEMENT
IN
SDN
DEPLOYMENTS
BETWEEN
CONTROLLERS
AND
FORWARDING
DEVICES
INTEG
TRADITIONAL
TECHNIQUES
SUCH
AS
ACCESS
CONTROL
ATTACK
RITY
CHECKS
OF
CONTROLLERS
AND
APPLICATIONS
FORENSICS
DETECTION
MECHANISMS
EVENT
FILTERING
E
G
CONTROLLER
DE
AND
REMEDIATION
VERIFICATION
FRAMEWORKS
CIDES
WHICH
ASYNCHRONOUS
MESSAGES
HE
IS
NOT
GOING
TO
AND
RESILIENT
CONTROL
PLANES
ACCEPT
FIREWALLS
AND
INTRUSION
DETECTION
SYSTEMS
CAN
BE
PROTECTION
AND
ISOLATION
MECHANISMS
USED
TO
MITIGATE
THE
IMPACT
OF
OR
TO
AVOID
ATTACKS
THEY
CAN
SHOULD
BE
PART
OF
ANY
CONTROLLER
APPLICATIONS
SHOULD
BE
BE
IMPLEMENTED
IN
DIFFERENT
DEVICES
SUCH
AS
CONTROLLERS
ISOLATED
FROM
EACH
OTHER
AND
FROM
THE
CONTROLLER
FORWARDING
DEVICES
MIDDLEBOXES
AND
SO
FORTH
MIDDLE
DIFFERENT
TECHNIQUES
SUCH
AS
SECURITY
DOMAINS
E
G
BOXES
CAN
BE
A
GOOD
OPTION
FOR
ENFORCING
SECURITY
POLICIES
KERNEL
SECURITY
AND
USER
LEVEL
AND
DATA
ACCESS
PROTECTION
IN
AN
ENTERPRISE
BECAUSE
THEY
ARE
IN
GENERAL
MORE
ROBUST
MECHANISMS
SHOULD
BE
PUT
IN
PLACE
IN
ORDER
TO
AVOID
AND
SPECIAL
PURPOSE
HIGH
PERFORMANCE
DEVICES
SUCH
A
SECURITY
THREATS
FROM
NETWORK
APPLICATIONS
STRATEGY
ALSO
REDUCES
THE
POTENTIAL
OVERHEAD
CAUSE
BY
IM
IMPLEMENTING
TRUST
BETWEEN
CONTROLLERS
AND
FORWARD
PLEMENTING
THESE
COUNTERMEASURES
DIRECTLY
ON
CONTROLLERS
ING
IS
ANOTHER
REQUIREMENT
FOR
ENSURING
THAT
MALICIOUS
OR
FORWARDING
DEVICES
HOWEVER
MIDDLEBOXES
CAN
ADD
ELEMENTS
CANNOT
HARM
THE
NETWORK
WITHOUT
BEING
EXTRA
COMPLEXITY
TO
THE
NETWORK
MANAGEMENT
I
E
IN
DETECTED
AN
ATTACKER
CAN
TRY
TO
SPOOF
THE
IP
ADDRESS
OF
CREASE
THE
OPEX
AT
THE
COST
OF
BETTER
PERFORMANCE
THE
CONTROLLER
AND
MAKE
SWITCHES
CONNECT
TO
ITS
OWN
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
CONTROLLER
THIS
IS
CURRENTLY
THE
CASE
SINCE
MOST
CONTROLLERS
EFFECT
ON
THE
SALES
DIVISION
OF
VENDORS
THAT
ARE
REQUIRED
TO
AND
SWITCHES
ONLY
ESTABLISH
INSECURE
TCP
CONNECTIONS
ADAPT
ACCORDINGLY
COMPLEMENTARY
INTEGRITY
CHECKS
ON
CONTROLLER
AND
APPLI
PIONEERING
SDN
OPERATIONAL
DEPLOYMENTS
HAVE
BEEN
CATION
SOFTWARE
CAN
HELP
TO
ENSURE
THAT
SAFE
CODE
IS
BEING
MAINLY
GREENFIELD
SCENARIOS
AND
OR
TIGHTLY
CONTROLLED
SIN
BOOTSTRAPPED
WHICH
ELIMINATES
HARMFUL
SOFTWARE
FROM
BE
GLE
ADMINISTRATIVE
DOMAINS
INITIAL
ROLLOUT
STRATEGIES
ARE
ING
STARTED
ONCE
THE
SYSTEM
RESTARTS
BESIDES
INTEGRITY
MAINLY
BASED
ON
VIRTUAL
SWITCH
OVERLAY
MODELS
OR
OPEN
CHECKS
OTHER
THINGS
SUCH
AS
HIGHLY
SPECIALIZED
MALWARE
FLOW
ONLY
NETWORK
WIDE
CONTROLS
HOWEVER
A
BROADER
DETECTION
SYSTEMS
SHOULD
BE
DEVELOPED
FOR
SDN
THIRD
ADOPTION
OF
SDN
BEYOND
DATA
CENTER
SILOSVAND
BETWEEN
PARTY
NETWORK
APPLICATIONS
SHOULD
ALWAYS
BE
SCANNED
FOR
THEMSELVESVREQUIRES
CONSIDERING
THE
INTERACTION
AND
BAD
CODE
AND
VULNERABILITIES
BECAUSE
A
MALICIOUS
APPLICA
INTEGRATION
WITH
LEGACY
CONTROL
PLANES
PROVIDING
TRADITIONAL
TION
REPRESENTS
A
SIGNIFICANT
SECURITY
THREAT
TO
THE
NETWORK
SWITCHING
ROUTING
AND
OPERATION
ADMINISTRATION
AND
IT
IS
WORTH
MENTIONING
THAT
THERE
ARE
ALSO
OTHER
AP
MANAGEMENT
OAM
FUNCTIONS
CERTAINLY
RIP
AND
REPLACE
PROACHES
FOR
MITIGATING
SECURITY
THREATS
IN
SDN
SUCH
AS
IS
NOT
A
VIABLE
STRATEGY
FOR
THE
BROAD
ADOPTION
OF
NEW
NET
DECLARATIVE
LANGUAGES
TO
ELIMINATE
NETWORK
PROTOCOL
VUL
WORKING
TECHNOLOGIES
NERABILITIES
THIS
KIND
OF
DESCRIPTIVE
LANGUAGES
CAN
HYBRID
NETWORKING
IN
SDN
SHOULD
ALLOW
DEPLOYING
SPECIFY
SEMANTIC
CONSTRAINTS
STRUCTURAL
CONSTRAINTS
AND
OPENFLOW
FOR
A
SUBSET
OF
ALL
FLOWS
ONLY
ENABLE
OPENFLOW
SAFE
ACCESS
PROPERTIES
OF
OPENFLOW
MESSAGES
THEN
A
ON
A
SUBSET
OF
DEVICES
AND
OR
PORTS
ONLY
AND
PROVIDE
OP
COMPILER
CAN
USE
THESE
INPUTS
TO
FIND
PROGRAMMERS
IMPLE
TIONS
TO
INTERACT
WITH
EXISTING
OAM
PROTOCOLS
LEGACY
DE
MENTATION
MISTAKES
ON
MESSAGE
OPERATIONS
IN
OTHER
WORDS
VICES
AND
NEIGHBORING
DOMAINS
AS
IN
ANY
TECHNOLOGY
SUCH
LANGUAGES
CAN
HELP
FIND
AND
ELIMINATE
IMPLEMENTATION
TRANSITION
PERIOD
WHERE
FORKLIFT
UPGRADES
MAY
NOT
BE
A
VULNERABILITIES
OF
SOUTHBOUND
SPECIFICATIONS
CHOICE
FOR
MANY
MIGRATION
PATHS
ARE
CRITICAL
FOR
ADOPTION
PROPOSALS
PROVIDING
BASIC
SECURITY
PROPERTIES
SUCH
AS
HYBRID
NETWORKING
IN
SDN
SPANS
SEVERAL
LEVELS
THE
AUTHENTICATION
AND
ACCESS
CONTROL
ARE
STARTING
MIGRATION
WORKING
GROUP
OF
THE
ONF
IS
TACKLING
THE
SCE
TO
APPEAR
C
BAS
IS
A
CERTIFICATE
BASED
AUTHENTICA
NARIO
WHERE
HYBRID
SWITCH
ARCHITECTURES
AND
HYBRID
TION
AUTHORIZATION
AND
ACCOUNTING
AAA
ARCHITECTURE
FOR
OPENFLOW
AND
NON
OPENFLOW
DEVICES
COEXIST
HYBRID
IMPROVING
THE
SECURITY
CONTROL
ON
SDN
EXPERIMENTAL
FACI
SWITCHES
CAN
BE
CONFIGURED
TO
BEHAVE
AS
A
LEGACY
SWITCH
OR
LITIES
SOLUTIONS
IN
THE
SPIRIT
OF
C
BAS
CAN
BE
MADE
HIGHLY
AS
AN
OPENFLOW
SWITCH
AND
IN
SOME
CASES
AS
BOTH
SIMUL
SECURE
AND
DEPENDABLE
THROUGH
HYBRID
SYSTEM
ARCHITEC
TANEOUSLY
THIS
CAN
BE
ACHIEVED
FOR
EXAMPLE
BY
PARTITION
TURES
WHICH
COMBINE
DIFFERENT
TECHNOLOGIES
AND
TECH
ING
THE
SET
OF
PORTS
OF
A
SWITCH
WHERE
ONE
SUBSET
IS
DEVOTED
NIQUES
FROM
DISTRIBUTED
SYSTEMS
SECURITY
AND
FAULT
AND
TO
OPENFLOW
CONTROLLED
NETWORKS
AND
THE
OTHER
SUBSET
TO
INTRUSION
TOLERANCE
LEGACY
NETWORKS
FOR
THESE
SUBSETS
TO
BE
ACTIVE
AT
THE
SAME
TIME
EACH
ONE
HAVING
ITS
OWN
DATA
PLANE
MULTITABLE
SUP
G
MIGRATION
AND
HYBRID
DEPLOYMENTS
PORT
AT
THE
FORWARDING
ENGINE
E
G
VIA
TCAM
PARTITION
THE
PROMISES
BY
SDN
TO
DELIVER
EASIER
DESIGN
OPERA
ING
IS
REQUIRED
BESIDES
PORT
BASED
PARTITIONING
IT
IS
ALSO
TION
AND
MANAGEMENT
OF
COMPUTER
NETWORKS
ARE
ENDAN
POSSIBLE
TO
RELY
ON
VLAN
BASED
PRIOR
TO
ENTERING
THE
GERED
BY
CHALLENGES
REGARDING
INCREMENTAL
DEPLOYABILITY
OPENFLOW
PIPELINE
OR
FLOW
BASED
PARTITIONING
USING
ROBUSTNESS
AND
SCALABILITY
A
PRIME
SDN
ADOPTION
CHAL
OPENFLOW
MATCHING
AND
THE
LOCAL
AND
OR
NORMAL
AC
LENGE
RELATES
TO
ORGANIZATIONAL
BARRIERS
THAT
MAY
ARISE
DUE
TIONS
TO
REDIRECT
PACKETS
TO
THE
LEGACY
PIPELINE
OR
THE
TO
THE
FIRST
AND
SECOND
ORDER
EFFECTS
OF
SDN
AUTOMATION
SWITCH
LOCAL
NETWORKING
STACK
AND
ITS
MANAGEMENT
STACK
CAPABILITIES
AND
LAYER
DOMAIN
BLURRING
SOME
LEVEL
OF
FLOW
BASED
PARTITIONING
IS
THE
MOST
FLEXIBLE
OPTION
AS
IT
HUMAN
RESISTANCE
IS
TO
BE
EXPECTED
AND
MAY
AFFECT
THE
ALLOWS
EACH
PACKET
ENTERING
A
SWITCH
TO
BE
CLASSIFIED
BY
AN
DECISION
AND
DEPLOYMENT
PROCESSES
OF
SDN
ESPECIALLY
BY
OPENFLOW
FLOW
DESCRIPTION
AND
TREATED
BY
THE
APPROPRIATE
THOSE
THAT
MAY
REGARD
THE
CONTROL
REFACTORIZATION
OF
SDN
AS
DATA
PLANE
OPENFLOW
OR
LEGACY
A
RISK
TO
THE
CURRENT
CHAIN
OF
CONTROL
AND
COMMAND
OR
THERE
ARE
DIVERSE
CONTROLLERS
SUCH
AS
OPENDAYLIGHT
EVEN
TO
THEIR
JOB
SECURITY
THIS
COMPLEX
SOCIAL
CHALLENGE
IS
HP
VAN
SDN
AND
OPENCONTRAIL
THAT
SIMILAR
AND
POTENTIALLY
LARGER
TO
KNOWN
ISSUES
BETWEEN
HAVE
BEEN
DESIGNED
TO
INTEGRATE
CURRENT
NON
SDN
TECHNOL
THE
TRANSPORT
AND
IP
NETWORK
DIVISIONS
OF
SERVICE
PROVIDERS
OGIES
E
G
SNMP
PCEP
BGP
AND
NETCONF
WITH
SDN
OR
THE
SYSTEM
ADMINISTRATOR
STORAGE
NETWORKING
AND
SEC
INTERFACES
SUCH
AS
OPENFLOW
AND
OVSDB
NONETHELESS
URITY
TEAMS
OF
ENTERPRISE
ORGANIZATIONS
SUCH
A
CHALLENGE
IS
CONTROLLERS
SUCH
AS
CLOSEDFLOW
HAVE
BEEN
RECENTLY
OBSERVABLE
ON
TODAY
VIRTUALIZED
DATA
CENTERS
THROUGH
THE
PROPOSED
WITH
THE
AIM
OF
INTRODUCING
SDN
LIKE
PROGRAM
SHIFT
IN
ROLE
AND
DECISION
POWER
BETWEEN
THE
NETWORKING
MING
CAPABILITIES
IN
TRADITIONAL
NETWORK
INFRASTRUCTURES
AND
SERVER
PEOPLE
SIMILARLY
THE
DEVELOPMENT
AND
OPERA
MAKING
THE
INTEGRATION
OF
LEGACY
AND
SDN
ENABLED
TIONS
DEVOPS
MOVEMENT
HAS
CAUSED
A
SHIFT
IN
THE
LOCUS
OF
NETWORKS
A
REALITY
WITHOUT
SIDE
EFFECTS
IN
TERMS
OF
PROG
INFLUENCE
NOT
ONLY
ON
THE
NETWORK
ARCHITECTURE
BUT
ALSO
ON
RAMMABILITY
AND
GLOBAL
NETWORK
CONTROL
CLOSEDFLOW
IS
PURCHASING
AND
THIS
IS
AN
EFFECT
THAT
SDN
MAY
EXACERBATE
DESIGNED
TO
CONTROL
LEGACY
ETHERNET
DEVICES
E
G
CISCO
THESE
CHANGES
IN
ROLE
AND
POWER
CAUSES
A
SECOND
ORDER
SWITCHES
WITH
A
MINIMUM
IOS
OF
SE
IN
A
SIMILAR
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
WAY
AS
OPENFLOW
CONTROLLER
ALLOWS
ADMINISTRATORS
TO
CON
COMMON
CENTRALIZED
CONFIGURATION
INTERFACE
TO
BUILD
VIR
TROL
OPENFLOW
ENABLED
DEVICES
MORE
IMPORTANTLY
CLO
TUAL
NETWORKS
USING
VLANS
AN
ABSTRACTION
OF
THE
PHYSICAL
SEDFLOW
DOES
NOT
IMPOSE
ANY
CHANGE
ON
THE
FORWARDING
NETWORK
TOPOLOGY
IS
TAKEN
INTO
ACCOUNT
BY
A
CENTRALIZED
DEVICES
IT
ONLY
TAKES
ADVANTAGE
OF
THE
EXISTING
HARDWARE
CONTROLLER
THAT
APPLIES
A
PATH
FINDER
MECHANISM
IN
ORDER
AND
FIRMWARE
CAPABILITIES
TO
MIMIC
AN
SDN
CONTROL
OVER
TO
CALCULATE
NETWORK
PATHS
AND
PROGRAM
THE
OPENFLOW
THE
NETWORK
I
E
ALLOW
DYNAMIC
AND
FLEXIBLE
PROGRAMMA
SWITCHES
VIA
REST
INTERFACES
AND
LEGACY
DEVICES
USING
BILITY
IN
THE
DATA
PLANE
THE
NEXT
STEP
COULD
BE
THE
INTEG
NETCONF
RATION
OF
CONTROLLERS
LIKE
CLOSEDFLOW
AND
OPENFLOW
BASED
MORE
RECENTLY
FRAMEWORKS
SUCH
AS
ESCAPE
AND
CONTROLLERS
PROMOTING
INTEROPERABILITY
AMONG
CONTROLLERS
ITS
EXTENSIONS
HAVE
BEEN
PROPOSED
TO
PROVIDE
MULTILAYER
AND
A
SMOOTH
TRANSITION
FROM
LEGACY
INFRASTRUCTURES
TO
SERVICE
ORCHESTRATION
IN
MULTIDOMAINS
SUCH
FRAMEWORKS
SDN
ENABLED
INFRASTRUCTURE
WITH
NEARLY
ALL
THE
CAPABILITIES
COMBINE
DIFFERENT
TOOLS
AND
TECHNOLOGIES
SUCH
AS
CLICK
OF
A
CLEAN
SLATE
SDN
ENABLED
INFRASTRUCTURE
POX
OPENDAYLIGHT
AND
NETCONF
FURTHERMORE
CONTROLLERS
MAY
HAVE
TO
BE
SEPARATED
INTO
IN
OTHER
WORDS
THOSE
FRAMEWORKS
INTEGRATE
DIFFERENT
SDN
DISTINCT
PEER
DOMAINS
FOR
DIFFERENT
REASONS
SUCH
AS
SCALA
SOLUTIONS
WITH
TRADITIONAL
ONES
THEREFORE
THEY
MIGHT
BE
BILITY
TECHNOLOGY
CONTROLLERS
FROM
DIFFERENT
VENDORS
CON
USEFUL
TOOLS
ON
THE
PROCESS
OF
INTEGRATING
OR
MIGRATING
LE
TROLLERS
WITH
DIFFERENT
SERVICE
FUNCTIONALITY
AND
DIVERSITY
GACY
NETWORKING
INFRASTRUCTURE
TO
SDN
OF
ADMINISTRATIVE
DOMAINS
CONTROLLERS
FROM
DIFFER
OTHER
HYBRID
SOLUTIONS
STARTING
TO
EMERGE
INCLUDE
OPEN
ENT
DOMAINS
OR
WITH
DISTINCT
PURPOSES
ARE
ALSO
REQUIRED
SOURCE
HYBRID
IP
SDN
OSHI
OSHI
COMBINES
TO
BE
BACKWARD
COMPATIBLE
EITHER
BY
RETROFITTING
OR
EX
QUAGGA
FOR
OPEN
SHORTEST
PATH
FIRST
ROUTING
AND
SDN
TENDING
EXISTING
MULTIDOMAIN
PROTOCOLS
E
G
BGP
OR
BY
CAPABLE
SWITCHING
DEVICES
E
G
OPEN
VSWITCH
ON
LINUX
TO
PROPOSING
NEW
SDN
TO
SDN
PROTOCOLS
ALSO
KNOWN
AS
PROVIDE
BACKWARD
COMPATIBILITY
FOR
SUPPORTING
INCREMEN
EAST
WESTBOUND
APIS
TAL
SDN
DEPLOYMENTS
I
E
ENABLING
INTEROPERABILITY
WITH
SOME
EFFORTS
HAVE
BEEN
ALREADY
DEVOTED
TO
THE
CHAL
NON
OF
FORWARDING
DEVICES
IN
CARRIER
GRADE
NETWORKS
LENGES
OF
MIGRATION
AND
HYBRID
SDNS
ROUTEFLOW
WHILE
FULL
SDN
DEPLOYMENTS
ARE
STRAIGHTFORWARD
ONLY
IMPLEMENTS
AN
IP
LEVEL
CONTROL
PLANE
ON
TOP
OF
AN
OPEN
IN
SOME
GREEN
FIELD
DEPLOYMENTS
SUCH
AS
DATA
CENTER
NET
FLOW
NETWORK
ALLOWING
THE
UNDERLYING
DEVICES
TO
ACT
AS
IP
WORKS
OR
BY
MEANS
OF
AN
OVERLAY
MODEL
APPROACH
HYBRID
ROUTERS
UNDER
DIFFERENT
POSSIBLE
ARRANGEMENTS
THE
SDN
APPROACHES
REPRESENT
A
VERY
LIKELY
DEPLOYMENT
MODEL
CARDIGAN
PROJECT
HAS
DEPLOYED
ROUTEFLOW
AT
THAT
CAN
BE
PURSUED
BY
DIFFERENT
MEANS
INCLUDING
THE
A
LIVE
INTERNET
EXCHANGE
NOW
FOR
OVER
A
YEAR
LEGACYFLOW
FOLLOWING
EXTENDS
THE
OPENFLOW
BASED
CONTROLLED
NETWORK
TO
TOPOLOGY
BASED
HYBRID
SDN
BASED
ON
A
TOPOLOGICAL
EMBRACE
NON
OPENFLOW
NODES
THERE
ARE
ALSO
SOME
OTHER
SEPARATION
OF
THE
NODES
CONTROLLED
BY
TRADITIONAL
EARLY
USE
CASES
ON
INTEGRATING
COMPLEX
LEGACY
SYSTEM
SUCH
AND
SDN
PARADIGMS
THE
NETWORK
IS
PARTITIONED
AS
DOCSIS
GIGABIT
ETHERNET
PASSIVE
OPTICAL
NETWORK
IN
DIFFERENT
ZONES
AND
EACH
NODE
BELONGS
TO
ONLY
AND
DWDM
RECONFIGURABLE
OPTICAL
ADD
DROP
MULTIPLEXER
ONE
ZONE
ROADM
THE
COMMON
GROUNDS
OF
THESE
SERVICE
BASED
HYBRID
SDN
CONVENTIONAL
NETWORKS
PIECES
OF
WORK
ARE
CONSIDERING
HYBRID
AS
THE
COEXISTENCE
AND
SDN
PROVIDE
DIFFERENT
SERVICES
WHERE
OVERLAP
OF
TRADITIONAL
ENVIRONMENTS
OF
CLOSED
VENDOR
ROUTERS
AND
PING
NODES
CONTROLLING
A
DIFFERENT
PORTION
OF
THE
SWITCHES
WITH
NEW
OPENFLOW
ENABLED
DEVICES
TARGETING
FIB
OR
GENERALIZED
FLOW
TABLE
OF
EACH
NODE
EX
THE
INTERCONNECTION
OF
BOTH
CONTROL
AND
DATA
PLANES
OF
LE
AMPLES
INCLUDE
NETWORK
WIDE
SERVICES
LIKE
FOR
GACY
AND
NEW
NETWORK
ELEMENTS
AND
TAKING
A
CONTROLLER
WARDING
THAT
CAN
BE
BASED
ON
LEGACY
DISTRIBUTED
CENTRIC
APPROACH
DRAWING
THE
HYBRID
LINE
OUTSIDE
OF
ANY
CONTROL
WHILE
SDN
PROVIDES
EDGE
TO
EDGE
SERVICES
DEVICE
ITSELF
BUT
INTO
THE
CONTROLLER
APPLICATION
SPACE
SUCH
AS
ENFORCEMENT
OF
TRAFFIC
ENGINEERING
AND
AC
PANOPTICON
DEFINES
AN
ARCHITECTURE
AND
METHOD
CESS
POLICIES
OR
SERVICES
REQUIRING
FULL
TRAFFIC
VISI
OLOGY
TO
CONSISTENTLY
IMPLEMENT
SDN
INSIDE
ENTERPRISE
BILITY
E
G
MONITORING
LEGACY
NETWORKS
THROUGH
NETWORK
ORCHESTRATION
UNDER
CLASS
BASED
HYBRID
SDN
BASED
ON
THE
PARTITION
STRICT
BUDGET
CONSTRAINTS
THE
PROPOSED
ARCHITECTURE
IN
OF
TRAFFIC
IN
CLASSES
SOME
CONTROLLED
BY
SDN
AND
CLUDES
POLICY
CONFIGURATIONS
TROUBLESHOOTING
AND
MAIN
THE
REMAINING
BY
LEGACY
PROTOCOLS
WHILE
EACH
TENANCE
TASKS
ESTABLISHING
TRANSITIONAL
NETWORKS
SDN
AND
PARADIGM
CONTROLS
A
DISJOINT
SET
OF
NODE
FOR
LEGACY
IN
STRUCTURES
CALLED
SOLITARY
CONFINEMENT
TREES
WARDING
ENTRIES
EACH
PARADIGM
IS
RESPONSIBLE
FOR
SCTS
WHERE
VLAN
IDS
ARE
EFFICIENTLY
USED
BY
ORCHES
ALL
NETWORK
SERVICES
FOR
THE
ASSIGNED
TRAFFIC
TRATION
ALGORITHMS
TO
BUILD
PATHS
IN
ORDER
TO
STEER
TRAFFIC
CLASSES
THROUGH
SDN
SWITCHES
DEFYING
THE
PARTIAL
SDN
IMPLE
INTEGRATED
HYBRID
SDN
A
MODEL
WHERE
SDN
IS
MENTATION
CONCEPT
THEY
CONFIRM
THAT
THIS
COULD
BE
A
LONG
RESPONSIBLE
FOR
ALL
THE
NETWORK
SERVICES
AND
USES
TERM
OPERATIONAL
STRATEGY
SOLUTION
FOR
ENTERPRISE
NETWORKS
TRADITIONAL
PROTOCOLS
E
G
BGP
AS
AN
INTERFACE
TO
HYBNET
PRESENTS
A
NETWORK
MANAGEMENT
FRAME
NODE
FIBS
FOR
EXAMPLE
IT
CAN
CONTROL
FORWARDING
WORK
FOR
HYBRID
OPENFLOW
LEGACY
NETWORKS
IT
PROVIDES
A
PATHS
BY
INJECTING
CAREFULLY
SELECTED
ROUTES
INTO
A
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
ROUTING
SYSTEM
OR
ADJUSTING
PROTOCOL
SETTINGS
E
G
CARRIER
NETWORKS
ARE
USING
THE
SDN
PARADIGM
AS
THE
IGP
WEIGHTS
PAST
EFFORTS
ON
RCPS
AND
THE
TECHNOLOGY
MEANS
FOR
SOLVING
A
NUMBER
OF
LONG
STANDING
ONGOING
EFFORTS
WITHIN
ODL
CAN
BE
CONSIDERED
PROBLEMS
SOME
OF
THESE
EFFORTS
INCLUDE
NEW
ARCHITECTURES
EXAMPLES
OF
THIS
HYBRID
MODEL
FOR
A
SMOOTH
MIGRATION
FROM
THE
CURRENT
MOBILE
CORE
IN
IN
GENERAL
BENEFITS
OF
HYBRID
APPROACHES
INCLUDE
ENA
FRASTRUCTURE
TO
SDN
AND
TECHNO
ECONOMIC
MODELS
BLING
FLEXIBILITY
E
G
EASY
MATCH
ON
PACKET
FIELDS
FOR
MID
FOR
VIRTUALIZATION
OF
THESE
NETWORKS
CARRIER
DLEBOXING
AND
SDN
SPECIFIC
FEATURES
E
G
DECLARATIVE
GRADE
OPENFLOW
VIRTUALIZATION
SCHEMES
IN
MANAGEMENT
INTERFACE
WHILE
PARTIALLY
KEEPING
THE
IN
CLUDING
VIRTUALIZED
BROADBAND
ACCESS
INFRASTRUCTURES
HERITED
CHARACTERISTICS
OF
CONVENTIONAL
NETWORKING
SUCH
AS
TECHNIQUES
THAT
ARE
ALLOWING
THE
OFFER
OF
NETWORK
AS
A
ROBUSTNESS
SCALABILITY
TECHNOLOGY
MATURITY
AND
LOW
DE
SERVICE
PROGRAMMABLE
GEPON
AND
DWDM
PLOYMENT
COSTS
ON
THE
NEGATIVE
SIDE
THE
DRAWBACKS
OF
ROADM
LARGE
SCALE
INTERAUTONOMOUS
SYS
HYBRIDIZATION
INCLUDE
THE
NEED
FOR
ENSURING
PROFITABLE
TEMS
ASS
SDN
ENABLED
DEPLOYMENTS
FLEXIBLE
CON
INTERACTIONS
BETWEEN
THE
NETWORKING
PARADIGMS
SDN
AND
TROL
OF
NETWORK
RESOURCES
INCLUDING
OFFERING
MPLS
TRADITIONAL
WHILE
DEALING
WITH
THE
HETEROGENEITY
THAT
SERVICES
USING
AN
SDN
APPROACH
AND
THE
INVESTIGA
LARGELY
DEPENDS
ON
THE
MODEL
TION
OF
NOVEL
NETWORK
ARCHITECTURES
FROM
PROPOSALS
TO
SE
INITIAL
TRADEOFF
ANALYSES
SUGGEST
THAT
THE
COMBI
PARATE
THE
NETWORK
EDGE
FROM
THE
CORE
WITH
NATION
OF
CENTRALIZED
AND
DISTRIBUTED
PARADIGMS
MAY
PRO
THE
LATTER
FORMING
THE
FABRIC
THAT
TRANSPORTS
PACKETS
AS
VIDE
MUTUAL
BENEFITS
HOWEVER
FUTURE
WORK
IS
REQUIRED
TO
DEFINED
BY
AN
INTELLIGENT
EDGE
TO
SOFTWARE
DEFINED
INTER
DEVISE
TECHNIQUES
AND
INTERACTION
MECHANISMS
THAT
MAXI
NET
EXCHANGE
POINTS
MIZE
SUCH
BENEFITS
WHILE
LIMITING
THE
ADDED
COMPLEXITY
OF
USE
CASE
ANALYSIS
OF
MANAGEMENT
FUNCTIONS
RE
THE
PARADIGM
COEXISTENCE
QUIRED
BY
CARRIER
NETWORKS
HAVE
IDENTIFIED
A
SET
OF
REQUIRE
MENTS
AND
EXISTING
LIMITATIONS
IN
THE
SDN
PROTOCOL
TOOLBOX
H
MEETING
CARRIER
GRADE
AND
CLOUD
REQUIREMENTS
FOR
INSTANCE
IT
HAS
BEEN
PINPOINTED
THAT
OF
CONFIG
A
NUMBER
OF
CARRIER
GRADE
INFRASTRUCTURE
PROVIDERS
NEEDS
A
FEW
EXTENSIONS
IN
ORDER
TO
MEET
THE
CARRIER
REQUIRE
E
G
NTT
AT
T
VERIZON
DEUTSCHE
TELEKOM
ARE
AT
THE
MENTS
SUCH
AS
PHYSICAL
RESOURCE
DISCOVERY
LOGICAL
LINK
CORE
OF
THE
SDN
COMMUNITY
WITH
THE
ULTIMATE
GOAL
OF
CONFIGURATION
LOGICAL
SWITCH
INSTANTIATION
AND
DEVICE
AND
SOLVING
THEIR
LONG
STANDING
NETWORKING
PROBLEMS
IN
THE
LINK
OAM
CONFIGURATION
SIMILARLY
OPENFLOW
EXTEN
TELECOM
WORLD
NTT
CAN
BE
CONSIDERED
ONE
OF
THE
FOREFRONT
SIONS
HAVE
ALSO
BEEN
PROPOSED
TO
REALIZE
PACKET
OPTICAL
RUNNERS
IN
TERMS
OF
INVESTING
IN
THE
ADOPTION
AND
DEPLOY
INTEGRATION
WITH
SDN
IN
ORDER
TO
SUPPORT
SDN
CON
MENT
OF
SDN
IN
ALL
KINDS
OF
NETWORK
INFRASTRUCTURES
FROM
CEPTS
IN
LARGE
SCALE
WIDE
AREA
NETWORKS
DIFFERENT
EXTEN
BACKBONE
DATA
CENTER
TO
EDGE
CUSTOMERS
IN
SIONS
AND
MECHANISMS
ARE
REQUIRED
BOTH
TECHNOLOGY
NTT
LAUNCHED
AN
SDN
BASED
ON
DEMAND
ELASTIC
PROVI
SPECIFIC
E
G
MPLS
BFD
AND
TECHNOLOGY
AGNOSTIC
SUCH
SIONING
PLATFORM
OF
NETWORK
RESOURCES
E
G
BANDWIDTH
AS
RESILIENCY
MECHANISMS
FOR
SURVIVING
LINK
FAILURES
FOR
HD
VIDEO
BROADCASTERS
SIMILARLY
AS
A
GLOBAL
FAILURES
OF
CONTROLLER
OR
FORWARDING
ELEMENTS
SOLUTIONS
FOR
CLOUD
PROVIDER
WITH
DATA
CENTERS
SPREAD
ACROSS
THE
GLOBE
INTEGRATING
RESIDENTIAL
CUSTOMER
SERVICES
IN
DIFFERENT
FORMS
THE
SAME
COMPANY
LAUNCHED
A
SIMILAR
SERVICE
FOR
ITS
I
E
SUPPORT
ALSO
CURRENT
TECHNOLOGIES
NEW
ENERGY
CLOUD
CUSTOMERS
WHO
ARE
NOW
CAPABLE
OF
TAKING
ADVANTAGE
EFFICIENT
NETWORKING
APPROACHES
QOS
PROPERTIES
FOR
PACKET
OF
DYNAMIC
NETWORKING
PROVISIONING
INTRADATA
AND
INTER
CLASSIFICATION
METERING
COLORING
POLICING
SHAPING
AND
DATA
CENTERS
AT
T
IS
ANOTHER
TELECOM
COMPANY
THAT
SCHEDULING
AND
MULTILAYER
ASPECTS
OUTLINING
DIFFERENT
IS
INVESTING
HEAVILY
IN
NEW
SERVICES
SUCH
AS
USER
DEFINED
STAGES
OF
PACKET
OPTICAL
INTEGRATION
NETWORK
CLOUDS
THAT
TAKE
ADVANTAGE
OF
RECENT
DEVELOP
SDN
TECHNOLOGY
ALSO
BRINGS
NEW
POSSIBILITIES
FOR
CLOUD
MENTS
IN
NFV
AND
SDN
AS
WE
MENTIONED
BEFORE
PROVIDERS
BY
TAKING
ADVANTAGE
OF
THE
LOGICALLY
CENTRALIZED
SDN
AND
NFV
ARE
COMPLEMENTARY
TECHNOLOGIES
THAT
CAN
BE
CONTROL
OF
NETWORK
RESOURCES
IT
IS
POSSIBLE
TO
APPLICABLE
TO
DIFFERENT
TYPES
OF
NETWORKS
FROM
LOCAL
NET
SIMPLIFY
AND
OPTIMIZE
NETWORK
MANAGEMENT
OF
DATA
CEN
WORKS
AND
DATA
CENTERS
TO
TRANSPORT
NETWORKS
TERS
AND
ACHIEVE
EFFICIENT
INTRADATA
CENTER
NETWORKING
RECENTLY
SEVERAL
RESEARCH
INITIATIVES
HAVE
WORKED
TOWARD
INCLUDING
FAST
RECOVERY
MECHANISMS
FOR
THE
DATA
AND
CON
COMBINING
SDN
AND
NFV
THROUGH
INTEL
DPDK
A
SET
OF
TROL
PLANES
ADAPTIVE
TRAFFIC
ENGINEERING
LIBRARIES
AND
DRIVERS
THAT
FACILITATES
THE
DEVELOPMENT
OF
WITH
MINIMAL
MODIFICATIONS
TO
DC
NETWORKS
SIMPLI
NETWORK
INTENSIVE
APPLICATIONS
AND
ALLOWS
THE
IMPLEMEN
FIED
FAULT
TOLERANT
ROUTING
PERFORMANCE
ISOLATION
TATION
OF
FINE
GRAINED
NETWORK
FUNCTIONS
EARLY
WORK
AND
EASY
AND
EFFICIENT
RESOURCE
MIGRATION
E
G
OF
TOWARD
SERVICE
CHAINING
HAS
BEEN
PROPOSED
BY
COMBINING
VMS
AND
VIRTUAL
NETWORKS
IMPROVED
INTERDATA
SDN
AND
NFV
TECHNOLOGIES
AND
STUDIES
CENTER
COMMUNICATION
INCLUDING
THE
ABILITY
TO
FULLY
UTILIZE
AROUND
THE
FORCES
APPLICABILITY
TO
SDN
ENHANCED
THE
EXPENSIVE
HIGH
BANDWIDTH
LINKS
WITHOUT
IMPAIRING
NFV
HAVE
ALSO
COME
TO
LIGHT
THESE
ARE
SOME
OF
THE
QUALITY
OF
SERVICE
HIGHER
LEVELS
OF
RELIABILITY
EARLY
EXAMPLES
OF
THE
OPPORTUNITIES
SDNS
SEEM
TO
BRING
TO
WITH
NOVEL
FAULT
MANAGEMENT
MECHANISMS
ETC
TELECOM
AND
CLOUD
PROVIDERS
AND
COST
REDUCTION
BY
REPLACING
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
TABLE
CARRIER
GRADE
AND
CLOUD
PROVIDER
EXPECTATIONS
AND
CHALLENGES
COMPLEX
EXPENSIVE
HARDWARE
BY
SIMPLE
AND
CHEAPER
FOR
WORKLOAD
CHANGES
RECENT
ADVANCES
MAKES
ON
DEMAND
WARDING
DEVICES
PROVISIONING
OF
RESOURCES
POSSIBLE
AT
NEARLY
ALL
INFRASTRUC
TABLE
SUMMARIZES
SOME
OF
THE
CARRIER
GRADE
NET
TURAL
LAYERS
THE
FULLY
AUTOMATED
PROVISIONING
AND
ORCHES
WORK
AND
CLOUD
INFRASTRUCTURE
PROVIDERS
REQUIREMENTS
IN
TRATION
OF
IT
INFRASTRUCTURES
AS
BEEN
RECENTLY
NAMED
THIS
TABLE
WE
SHOW
THE
CURRENT
CHALLENGES
AND
WHAT
IS
TO
SOFTWARE
DEFINED
ENVIRONMENTS
SDES
BY
BE
EXPECTED
WITH
SDN
AS
WE
SAW
BEFORE
SOME
OF
THE
IBM
THIS
IS
A
NOVEL
APPROACH
THAT
IS
EXPECTED
TO
HAVE
EXPECTATIONS
ARE
ALREADY
BECOMING
A
REALITY
BUT
MANY
ARE
SIGNIFICANT
POTENTIAL
IN
SIMPLIFYING
IT
MANAGEMENT
OPTI
STILL
OPEN
ISSUES
WHAT
SEEMS
TO
BE
CLEAR
IS
THAT
SDN
RE
MIZING
THE
USE
OF
THE
INFRASTRUCTURE
REDUCE
COSTS
AND
PRESENTS
AN
OPPORTUNITY
FOR
TELECOM
AND
CLOUD
PROVIDERS
REDUCE
THE
TIME
TO
MARKET
OF
NEW
IDEAS
AND
PRODUCTS
IN
IN
PROVIDING
FLEXIBILITY
COST
EFFECTIVENESS
AND
EASIER
MAN
AN
SDE
WORKLOADS
CAN
BE
EASILY
AND
AUTOMATICALLY
ASSIGNED
AGEMENT
OF
THEIR
NETWORKS
TO
THE
APPROPRIATE
IT
RESOURCES
BASED
ON
APPLICATION
CHARACTERISTICS
SECURITY
AND
SERVICE
LEVEL
POLICIES
AND
THE
I
SDN
THE
MISSING
PIECE
TOWARD
BEST
AVAILABLE
RESOURCES
TO
DELIVER
CONTINUOUS
DYNAMIC
SOFTWARE
DEFINED
ENVIRONMENTS
OPTIMIZATION
AND
RECONFIGURATION
TO
ADDRESS
INFRASTRUCTURE
THE
CONVERGENCE
OF
DIFFERENT
TECHNOLOGIES
IS
ENABLING
ISSUES
IN
A
RAPID
AND
RESPONSIVE
MANNER
TABLE
SUM
THE
EMERGENCE
OF
FULLY
PROGRAMMABLE
IT
INFRASTRUCTURES
IT
MARIZES
THE
TRADITIONAL
APPROACHES
AND
SOME
OF
THE
KEY
IS
ALREADY
POSSIBLE
TO
DYNAMICALLY
AND
AUTOMATICALLY
CON
FEATURES
BEING
ENABLED
BY
SDES
FIGURE
OR
RECONFIGURE
THE
ENTIRE
IT
STACK
FROM
THE
NETWORK
IN
AN
SDE
THE
WORKLOADS
ARE
MANAGED
INDEPENDENTLY
INFRASTRUCTURE
UP
TO
THE
APPLICATIONS
TO
BETTER
RESPOND
TO
OF
THE
SYSTEMS
AND
UNDERLYING
INFRASTRUCTURE
I
E
ARE
NOT
VOL
NO
JANUARY
PROCEEDINGS
OF
THE
IEEE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
TABLE
SDE
PUSHING
IT
TO
THE
NEXT
FRONTIER
TIED
TO
A
SPECIFIC
TECHNOLOGY
OR
VENDOR
ANOTH
ER
CHARACTERISTIC
OF
THIS
NEW
APPROACH
IS
TO
OFFER
A
PROG
RAMMATIC
ACCESS
TO
THE
ENVIRONMENT
AS
A
WHOLE
SELECTING
THE
BEST
AVAILABLE
RESOURCES
BASED
ON
THE
CURRENT
STATUS
OF
THE
INFRASTRUCTURE
AND
ENFORCING
THE
POLICIES
DEFINED
IN
THIS
SENSE
IT
SHARES
MUCH
OF
THE
PHILOSOPHY
OF
SDN
INTERESTINGLY
ONE
OF
THE
MISSING
KEY
PIECES
OF
AN
SDE
WAS
UNTIL
NOW
SDN
THE
FOUR
ESSENTIAL
BUILDING
BLOCKS
OF
AN
SDE
ARE
SDNS
SOFTWARE
DEFINED
STORAGE
SDS
SOFTWARE
DEFINED
COMPUTE
SDC
SOFTWARE
DEFINED
MANAGEMENT
SDM
IN
THE
LAST
DECADE
THE
ADVANCES
IN
VIRTUALIZATION
OF
COMPUTE
AND
STORAGE
TOGETHER
WITH
THE
AVAILABILITY
OF
SO
PHISTICATED
CLOUD
ORCHESTRATION
TOOLS
HAVE
ENABLED
SDS
SDC
AND
SDM
THESE
ARCHITECTURAL
COMPONENTS
HAVE
BEEN
WIDELY
USED
BY
CLOUD
PROVIDERS
AND
FOR
BUILDING
IT
INFRASTRUCTURES
IN
DIFFERENT
ENTERPRISE
ENVIRONMENTS
HOWEVER
THE
LACK
OF
PROGRAMMABLE
NETWORK
CONTROL
HAS
SO
FAR
HINDERED
THE
REALIZATION
OF
A
COMPLETE
SDE
SDN
IS
SEEN
AS
THE
TECHNOLOGY
THAT
MAY
FILL
THIS
GAP
AS
ATTESTED
BY
THE
EMERGENCE
OF
CLOUD
SCALE
NETWORK
VIRTUALIZATION
PLAT
FORMS
BASED
ON
THIS
NEW
PARADIGM
THE
IBM
SMARTCLOUD
ORCHESTRATOR
IS
ONE
OF
THE
FIRST
EXAMPLES
OF
AN
SDE
IT
INTEGRATES
COMPUTE
STORAGE
MANAGEMENT
AND
NETWORKING
IN
A
STRUCTURED
WAY
FIG
OVERVIEW
OF
AN
IT
INFRASTRUCTURE
BASED
ON
AN
SDE
PROCEEDINGS
OF
THE
IEEE
VOL
NO
JANUARY
FIG
GIVES
A
SIMPLIFIED
OVERVIEW
OF
AN
SDE
BY
TAKING
THE
APPROACH
DEVELOPED
BY
IBM
AS
ITS
BASIS
THE
MAIN
IDEA
OF
AN
SDE
BASED
INFRASTRUCTURE
IS
THAT
THE
BUSINESS
NEEDS
THAT
DEFINE
THE
WORKLOADS
TRIGGER
THE
RECONFIGURATION
OF
THE
GLOBAL
IT
INFRASTRUCTURE
COMPUTE
STORAGE
NETWORK
THIS
IS
AN
IMPORTANT
STEP
TOWARD
A
MORE
CUSTOMIZABLE
IT
IN
FRASTRUCTURE
THAT
FOCUSES
ON
THE
BUSINESS
REQUIREMENTS
RATHER
THAN
ON
THE
LIMITATIONS
OF
THE
INFRASTRUCTURE
ITSELF
VI
CONCLUSION
TRADITIONAL
NETWORKS
ARE
COMPLEX
AND
HARD
TO
MANAGE
ONE
OF
THE
REASONS
IS
THAT
THE
CONTROL
AND
DATA
PLANES
ARE
VERTICALLY
INTEGRATED
AND
VENDOR
SPECIFIC
ANOTHER
CON
CURRING
REASON
IS
THAT
TYPICAL
NETWORKING
DEVICES
ARE
ALSO
TIGHTLY
TIED
TO
LINE
PRODUCTS
AND
VERSIONS
IN
OTHER
WORDS
EACH
LINE
OF
PRODUCT
MAY
HAVE
ITS
OWN
PARTICULAR
CONFIG
URATION
AND
MANAGEMENT
INTERFACES
IMPLYING
LONG
CYCLES
FOR
PRODUCING
PRODUCT
UPDATES
E
G
NEW
FIRMWARE
OR
UPGRADES
E
G
NEW
VERSIONS
OF
THE
DEVICES
ALL
THIS
HAS
GIVEN
RISE
TO
VENDOR
LOCK
IN
PROBLEMS
FOR
NETWORK
INFRA
STRUCTURE
OWNERS
AS
WELL
AS
POSING
SEVERE
RESTRICTIONS
TO
CHANGE
AND
INNOVATION
SDN
CREATED
AN
OPPORTUNITY
FOR
SOLVING
THESE
LONG
STANDING
PROBLEMS
SOME
OF
THE
KEY
IDEAS
OF
SDN
ARE
THE
INTRODUCTION
OF
DYNAMIC
PROGRAMMABILITY
IN
FORWARDING
DEVICES
THROUGH
OPEN
SOUTHBOUND
INTERFACES
THE
DECOUPL
ING
OF
THE
CONTROL
AND
DATA
PLANE
AND
THE
GLOBAL
VIEW
OF
THE
KREUTZ
ET
AL
SOFTWARE
DEFINED
NETWORKING
A
COMPREHENSIVE
SURVEY
NETWORK
BY
LOGICAL
CENTRALIZATION
OF
THE
NETWORK
BRAIN
SDN
HAS
SUCCESSFULLY
MANAGED
TO
PAVE
THE
WAY
TOWARD
WHILE
DATA
PLANE
ELEMENTS
BECAME
DUMB
BUT
HIGHLY
EFFI
A
NEXT
GENERATION
NETWORKING
SPAWNING
AN
INNOVATIVE
RE
CIENT
AND
PROGRAMMABLE
PACKET
FORWARDING
DEVICES
THE
SEARCH
AND
DEVELOPMENT
ENVIRONMENT
PROMOTING
ADVANCES
CONTROL
PLANE
ELEMENTS
ARE
NOW
REPRESENTED
BY
A
SINGLE
IN
SEVERAL
AREAS
SWITCH
AND
CONTROLLER
PLATFORM
DESIGN
ENTITY
THE
CONTROLLER
OR
NOS
APPLICATIONS
IMPLEMENTING
EVOLUTION
OF
SCALABILITY
AND
PERFORMANCE
OF
DEVICES
AND
THE
NETWORK
LOGIC
RUN
ON
TOP
OF
THE
CONTROLLER
AND
ARE
ARCHITECTURES
PROMOTION
OF
SECURITY
AND
DEPENDABILITY
MUCH
EASIER
TO
DEVELOP
AND
DEPLOY
WHEN
COMPARED
TO
WE
WILL
CONTINUE
TO
WITNESS
EXTENSIVE
ACTIVITY
AROUND
TRADITIONAL
NETWORKS
GIVEN
THE
GLOBAL
VIEW
CONSISTENCY
OF
SDN
IN
THE
NEAR
FUTURE
EMERGING
TOPICS
REQUIRING
FURTHER
POLICIES
IS
STRAIGHTFORWARD
TO
ENFORCE
SDN
REPRESENTS
A
RESEARCH
ARE
FOR
EXAMPLE
THE
MIGRATION
PATH
TO
SDN
EX
MAJOR
PARADIGM
SHIFT
IN
THE
DEVELOPMENT
AND
EVOLUTION
OF
TENDING
SDN
TOWARD
CARRIER
TRANSPORT
NETWORKS
REALIZATION
NETWORKS
INTRODUCING
A
NEW
PACE
OF
INNOVATION
IN
NET
OF
THE
NETWORK
AS
A
SERVICE
CLOUD
COMPUTING
PARADIGM
OR
WORKING
INFRASTRUCTURE
SDES
AS
SUCH
WE
WOULD
LIKE
TO
RECEIVE
FEEDBACK
FROM
THE
IN
SPITE
OF
RECENT
AND
INTERESTING
ATTEMPTS
TO
SURVEY
NETWORKING
SDN
COMMUNITY
AS
THIS
NOVEL
PARADIGM
EVOLVES
THIS
NEW
CHAPTER
IN
THE
HISTORY
OF
NETWORKS
THE
TO
MAKE
THIS
A
LIVING
DOCUMENT
THAT
GETS
UPDATED
AND
LITERATURE
WAS
STILL
LACKING
TO
THE
BEST
OF
OUR
KNOWLEDGE
IMPROVED
BASED
ON
THE
COMMUNITY
FEEDBACK
WE
HAVE
SET
UP
A
SINGLE
EXTENSIVE
AND
COMPREHENSIVE
OVERVIEW
OF
THE
A
GITHUB
REPOSITORY
HTTPS
GITHUB
COM
SDN
SURVEY
LATEX
BUILDING
BLOCKS
CONCEPTS
AND
CHALLENGES
OF
SDNS
TRY
WIKI
FOR
THIS
PURPOSE
AND
WE
INVITE
OUR
READERS
TO
JOIN
US
IN
ING
TO
ADDRESS
THIS
GAP
THIS
PAPER
USED
A
LAYERED
AP
THIS
COMMUNAL
EFFORT
ADDITIONALLY
NEW
RELEASES
OF
THE
PROACH
TO
METHODICALLY
DISSECT
THE
STATE
OF
THE
ART
IN
SURVEY
WILL
BE
AVAILABLE
AT
HTTP
ARXIV
ORG
ABS
H
TERMS
OF
CONCEPTS
IDEAS
AND
COMPONENTS
OF
SDN
COVER
ING
A
BROAD
RANGE
OF
EXISTING
SOLUTIONS
AS
WELL
AS
FUTURE
DIRECTIONS
AMBIENT
INTELLIGENCE
AMI
IS
A
NEW
PARADIGM
IN
INFORMATION
TECHNOLOGY
AIMED
AT
EMPOWERING
PEOPLE
CAPA
BILITIES
BY
MEANS
OF
DIGITAL
ENVIRONMENTS
THAT
ARE
SENSITIVE
ADAPTIVE
AND
RESPONSIVE
TO
HUMAN
NEEDS
HABITS
GESTURES
AND
EMOTIONS
THIS
FUTURISTIC
VISION
OF
DAILY
ENVIRONMENT
WILL
ENABLE
INNOVATIVE
HUMAN
MACHINE
INTERACTIONS
CHARACTERIZED
BY
PER
VASIVE
UNOBTRUSIVE
AND
ANTICIPATORY
COMMUNICATIONS
SUCH
INNOVATIVE
INTERACTION
PARADIGMS
MAKE
AMI
TECHNOLOGY
A
SUITABLE
CANDIDATE
FOR
DEVELOPING
VARIOUS
REAL
LIFE
SOLUTIONS
INCLUDING
IN
THE
HEALTHCARE
DOMAIN
THIS
SURVEY
WILL
DISCUSS
THE
EMERGENCE
OF
AMI
TECHNIQUES
IN
THE
HEALTHCARE
DOMAIN
IN
ORDER
TO
PROVIDE
THE
RESEARCH
COMMUNITY
WITH
THE
NECESSARY
BACKGROUND
WE
WILL
EXAMINE
THE
INFRASTRUCTURE
AND
TECHNOL
OGY
REQUIRED
FOR
ACHIEVING
THE
VISION
OF
AMI
SUCH
AS
SMART
ENVIRONMENTS
AND
WEARABLE
MEDICAL
DEVICES
WE
WILL
SUMMA
RIZE
THE
STATE
OF
THE
ART
ARTIFICIAL
INTELLIGENCE
AI
METHODOLO
GIES
USED
FOR
DEVELOPING
AMI
SYSTEM
IN
THE
HEALTHCARE
DOMAIN
INCLUDING
VARIOUS
LEARNING
TECHNIQUES
FOR
LEARNING
FROM
USER
INTERACTION
REASONING
TECHNIQUES
FOR
REASONING
ABOUT
USERS
GOALS
AND
INTENSIONS
AND
PLANNING
TECHNIQUES
FOR
PLANNING
ACTIVITIES
AND
INTERACTIONS
WE
WILL
ALSO
DISCUSS
HOW
AMI
TECHNOLOGY
MIGHT
SUPPORT
PEOPLE
AFFECTED
BY
VARIOUS
PHYSICAL
OR
MENTAL
DISABILITIES
OR
CHRONIC
DISEASE
FINALLY
WE
WILL
POINT
TO
SOME
OF
THE
SUCCESSFUL
CASE
STUDIES
IN
THE
AREA
AND
WE
WILL
LOOK
AT
THE
CURRENT
AND
FUTURE
CHALLENGES
TO
DRAW
UPON
THE
POSSIBLE
FUTURE
RESEARCH
PATHS
KEYWORDS
AMBIENT
INTELLIGENCE
AMI
HEALTHCARE
SENSOR
NETWORKS
SMART
ENVIRONMENTS
I
INTRODUCTION
A
WHAT
IS
AMBIENT
INTELLIGENCE
IMAGINE
A
DAY
WHEN
A
SMALL
TRICODER
DEVICE
MONI
TORS
YOUR
HEALTH
STATUS
IN
A
CONTINUOUS
MANNER
DIAGNOSES
ANY
POSSIBLE
HEALTH
CONDITIONS
HAS
A
CONVERSATION
WITH
YOU
TO
PERSUADE
YOU
TO
CHANGE
YOUR
LIFESTYLE
FOR
MAINTAINING
BETTER
HEALTH
AND
COMMUNICATES
WITH
YOUR
DOCTOR
IF
NEEDED
THE
DEVICE
MIGHT
EVEN
BE
EMBEDDED
INTO
YOUR
REGULAR
CLOTHING
FIBERS
IN
THE
FORM
OF
VERY
TINY
SENSORS
AND
IT
MIGHT
COMMUNICATE
WITH
OTHER
DEVICES
AROUND
YOU
INCLUDING
THE
VARIETY
OF
SENSORS
EMBEDDED
INTO
YOUR
HOME
TO
MONITOR
YOUR
LIFESTYLE
FOR
EXAMPLE
YOU
MIGHT
BE
ALARMED
ABOUT
THE
LACK
OF
A
HEALTHY
DIET
BASED
ON
THE
ITEMS
PRESENT
IN
YOUR
FRIDGE
AND
BASED
ON
WHAT
YOU
ARE
EATING
OUTSIDE
REGULARLY
THIS
MIGHT
SEEM
LIKE
SCIENCE
FICTION
FOR
NOW
BUT
MANY
RESPECTERS
IN
THE
FIELD
OF
AMBIENT
INTEL
LIGENCE
AMI
EXPECT
SUCH
SCENARIOS
TO
BE
PART
OF
OUR
DAILY
LIFE
IN
NOT
SO
FAR
FUTURE
THE
AMI
PARADIGM
REPRESENTS
THE
FUTURE
VISION
OF
IN
TELLIGENT
COMPUTING
WHERE
ENVIRONMENTS
SUPPORT
THE
MANUSCRIPT
RECEIVED
OCTOBER
ACCEPTED
APRIL
DATE
OF
PUBLICATION
AUGUST
DATE
OF
CURRENT
VERSION
NOVEMBER
G
ACAMPORA
IS
WITH
THE
SCHOOL
OF
SCIENCE
AND
TECHNOLOGY
NOTTINGHAM
TRENT
PEOPLE
INHABITING
THEM
IN
THIS
NEW
COMPUTING
PARADIGM
THE
CONVENTIONAL
INPUT
AND
OUTPUT
MEDIA
NO
UNIVERSITY
NOTTINGHAM
U
K
E
MAIL
GIOVANNI
ACAMPORA
NTU
AC
UK
D
J
COOK
IS
WITH
THE
DEPARTMENT
OF
ELECTRICAL
AND
COMPUTER
ENGINEERING
WASHINGTON
STATE
UNIVERSITY
PULLMAN
WA
USA
E
MAIL
COOK
EECS
WSU
EDU
LONGER
EXIST
RATHER
THE
SENSORS
AND
PROCESSORS
WILL
BE
INTEGRATED
INTO
EVERYDAY
OBJECTS
WORKING
TOGETHER
IN
P
RASHIDI
IS
WITH
THE
BIOMEDICAL
ENGINEERING
DEPARTMENT
UNIVERSITY
OF
FLORIDA
GAINESVILLE
FL
USA
E
MAIL
PARISA
RASHIDI
UFL
EDU
A
V
VASILAKOS
IS
WITH
THE
DEPARTMENT
OF
COMPUTER
AND
TELECOMMUNICATIONS
HARMONY
IN
ORDER
TO
SUPPORT
THE
INHABITANTS
BY
RELYING
ON
VARIOUS
ARTIFICIAL
INTELLIGENCE
AI
TECHNIQUES
AMI
ENGINEERING
UNIVERSITY
OF
WESTERN
MACEDONIA
KOZANI
GREECE
E
MAIL
VASILAKO
ATH
FORTHNET
GR
DIGITAL
OBJECT
IDENTIFIER
JPROC
MULTIFUNCTION
HANDHELD
DEVICE
USED
FOR
SENSING
AND
DATA
ANALYSIS
IN
START
TREK
SERIES
PROCEEDINGS
OF
THE
IEEE
VOL
NO
DECEMBER
Ó
IEEE
ACAMPORA
ET
AL
A
SURVEY
ON
AMBIENT
INTELLIGENCE
IN
HEALTHCARE
PROMISES
THE
SUCCESSFUL
INTERPRETATION
OF
THE
WEALTH
OF
CONTEXTUAL
INFORMATION
OBTAINED
FROM
SUCH
EMBEDDED
SENSORS
AND
WILL
ADAPT
THE
ENVIRONMENT
TO
THE
USER
NEEDS
IN
A
TRANSPARENT
AND
ANTICIPATORY
MANNER
AN
AMI
SYSTEM
IS
PARTICULARLY
IDENTIFIED
BY
SEVERAL
CHARACTERISTICS
CONTEXT
AWARE
IT
EXPLOITS
THE
CONTEXTUAL
AND
SITUATIONAL
INFORMATION
PERSONALIZED
IT
IS
PERSONALIZED
AND
TAILORED
TO
THE
NEEDS
OF
EACH
INDIVIDUAL
ANTICIPATORY
IT
CAN
ANTICIPATE
THE
NEEDS
OF
AN
INDIVIDUAL
WITHOUT
THE
CONSCIOUS
MEDIATION
OF
THE
INDIVIDUAL
ADAPTIVE
IT
ADAPTS
TO
THE
CHANGING
NEEDS
OF
INDIVIDUALS
UBIQUITY
IT
IS
EMBEDDED
AND
IS
INTEGRATED
INTO
OUR
EVERYDAY
ENVIRONMENTS
TRANSPARENCY
IT
RECEDES
INTO
THE
BACKGROUND
OF
OUR
DAILY
LIFE
IN
AN
UNOBTRUSIVE
WAY
BESIDES
CHARACTERISTICS
SUCH
AS
TRANSPARENCY
AND
UBI
QUITY
AN
IMPORTANT
CHARACTERISTIC
OF
AMI
IS
THE
INTELLIGENCE
ASPECT
BY
DRAWING
FROM
ADVANCES
IN
AI
AMI
SYSTEMS
CAN
BE
EVEN
MORE
SENSITIVE
RESPONSIVE
ADAPTIVE
AND
UBIQUITOUS
WHILE
AMI
DRAWS
FROM
THE
FIELD
OF
AI
IT
IS
NOT
SYNONYMOUS
WITH
AI
IN
ADDITION
TO
THE
AI
SUBAREAS
SUCH
AS
REASONING
ACTIVITY
RECOGNITION
DECISION
MAKING
AND
SPATIO
TEMPORAL
LOGIC
AN
AMI
SYSTEM
HAS
TO
RELY
UPON
ADVANCES
IN
VARIETY
OF
OTHER
FIELDS
SOME
EXAMPLE
AREAS
INCLUDE
SENSOR
NETWORKS
TO
FACILITATE
THE
DATA
COLLECTION
ROBOTICS
TO
BUILD
ACTUATORS
AND
ASSISTIVE
ROBOTS
AND
HUMAN
COMPUTER
INTERACTION
TO
BUILD
MORE
NATURAL
INTERFACES
WE
HAVE
ALREADY
EMBARKED
ON
THE
PATH
OF
ACHIEVING
SUCH
A
VISION
TODAY
WE
ARE
SURROUNDED
BY
VARIOUS
COMPUTING
DEVICES
SUCH
AS
PERSONAL
COMPUTERS
SMARTPHONES
GLOBAL
POSITIONING
SYSTEMS
GPSS
TABLETS
VARIOUS
SENSORS
SUCH
AS
RADIO
FREQUENCY
IDENTIFICATION
RFID
TAGS
INFRARED
MOTION
SENSORS
AS
WELL
AS
BIOMETRIC
IDENTIFICATION
SENSORS
THE
WIDESPREAD
PRESENCE
OF
SUCH
DEVICES
AND
SENSORS
AND
ACCOMPANYING
SERVICES
SUCH
AS
LOCATION
SERVICE
HAS
ALREADY
SPARKED
THE
REALIZATION
OF
AMI
IN
ADDITION
RECENT
COMPU
TATIONAL
AND
ELECTRONICS
ADVANCEMENTS
HAVE
MADE
IT
POSSIBLE
FOR
RESEARCHERS
TO
WORK
ON
AMBITIOUS
CONCEPTS
SUCH
AS
SMART
HOMES
AND
TO
BRING
US
ONE
STEP
CLOSER
TO
THE
FULL
REALIZATION
OF
AMI
IN
OUR
DAILY
ENVIRONMENTS
B
HEALTHCARE
CHALLENGES
THESE
DAYS
THE
MAJORITY
OF
INDUSTRIALIZED
NATIONS
ARE
FACING
SIGNIFICANT
COMPLICATIONS
REGARDING
THE
QUALITY
AND
COST
OF
VARIOUS
HEALTHCARE
AND
WELLBEING
SERVICES
THESE
DIFFICULTIES
WILL
EXACERBATE
EVEN
MORE
DUE
TO
AN
INCREASING
AGING
POPULATION
WHICH
TRANSLATES
INTO
A
MULTITUDE
OF
CHRONIC
DISEASES
AND
TREMENDOUS
DEMAND
FOR
VARIOUS
HEALTH
CARE
SERVICES
AS
A
RESULT
THE
COST
OF
THE
HEALTHCARE
SECTOR
MIGHT
NOT
BE
SUSTAINABLE
AND
THEREFORE
INDUSTRIALIZED
COUNTRIES
NEED
TO
FIND
AND
PLAN
POLICIES
AND
STRATEGIES
TO
USE
THE
LIMITED
ECONOMICAL
RESOURCES
MORE
EFFICIENTLY
AND
EFFECTIVELY
THIS
NEED
FOR
SUSTAINABLE
HEALTHCARE
SYSTEMS
VOL
NO
DECEMBER
PROCEEDINGS
OF
THE
IEEE
TRANSLATES
INTO
A
RANGE
OF
CHALLENGES
IN
SCIENCE
AND
TECHNOLOGY
WHICH
IF
SOLVED
ULTIMATELY
COULD
BENEFIT
OUR
GLOBAL
SOCIETY
AND
ECONOMY
IN
PARTICULAR
THE
EXPLOITATION
OF
INFORMATION
AND
COMMUNICATION
TECHNOLOGY
FOR
IMPLEMENT
ING
AUTONOMOUS
AND
PROACTIVE
HEALTHCARE
SERVICES
WILL
BE
EXTREMELY
BENEFICIAL
IN
THE
PAST
DECADES
CONSUMER
DRIVEN
HEALTHCARE
IN
CONJUNCTION
WITH
WEB
BASED
PLATFORMS
AND
ELECTRONIC
HEALTH
RECORDS
HAVE
LED
TO
AN
ARRAY
OF
IMPROVED
HEALTHCARE
SOLUTIONS
IN
RECENT
YEARS
WE
ALSO
HAVE
WITNESSED
THE
EMERGENCE
OF
MANY
SMARTPHONE
APPS
THAT
ARE
BECOMING
READILY
AVAILABLE
FOR
PHYSIOLOGICAL
STATUS
MONITORING
HOWEVER
DESPITE
BEING
AN
IMPORTANT
STEP
TOWARD
PERSONAL
IZED
MEDICINE
THESE
SOLUTIONS
OFTEN
SUFFER
FROM
SCALABILITY
SECURITY
AND
PRIVACY
ISSUES
FURTHERMORE
SUCH
SOLUTIONS
ARE
ONLY
ABLE
TO
PROVIDE
A
SNAPSHOT
OF
PHYSIOLOGICAL
CONDITIONS
RATHER
THAN
A
CONTINUOUS
VIEW
OF
THE
OVERALL
HEALTH
OVER
THE
COURSE
OF
MANY
YEARS
WITH
RECENT
ADVANCES
IN
SENSOR
NETWORKS
RESEARCH
WE
ARE
ALREADY
EMBARKING
ON
THE
PATH
OF
REVOLUTIONARY
LOW
COST
HEALTHCARE
MONITORING
SYSTEMS
EMBEDDED
WITHIN
THE
HOME
AND
LIVING
ENVIRONMENTS
IN
PARTICULAR
AMI
SYSTEMS
HAVE
THE
POTENTIAL
TO
ENHANCE
THE
HEALTHCARE
DOMAIN
DRAMATICALLY
FOR
EXAMPLE
AMI
TECHNOLOGY
CAN
BE
USED
TO
MONITOR
THE
HEALTH
STATUS
OF
OLDER
ADULTS
OR
PEOPLE
WITH
CHRONIC
DISEASES
AND
IT
CAN
PROVIDE
ASSISTIVE
CARE
FOR
INDIVIDUALS
WITH
PHYSICAL
OR
MENTAL
LIMITATIONS
IT
CAN
BE
USED
FOR
DEVELOPING
PERSUASIVE
SERVICES
TO
MOTIVATE
PEOPLE
TO
LEAD
A
HEALTHIER
LIFESTYLE
IT
ALSO
CAN
BE
USED
IN
REHABILITATION
SETTINGS
OR
IN
GENERAL
IN
ENHANCING
THE
WELLBEING
OF
INDIVIDUALS
ULTIMATELY
IT
CAN
SUPPORT
THE
HEALTHCARE
PROFESSIONALS
IN
TERMS
OF
PROVIDING
INNOVATIVE
COMMUNICA
TION
AND
MONITORING
TOOLS
THESE
SYSTEMS
WILL
PROVIDE
HEALTH
MONITORING
IN
A
TRANSPARENT
AND
UNOBTRUSIVE
WAY
FIG
DEPICTS
HOW
AMI
SYSTEMS
MIGHT
BE
USED
AS
COHESIVE
SERVICES
INTEGRATED
INTO
DIFFERENT
ENVIRONMENTS
AND
DEVICES
IN
THIS
SURVEY
WE
WILL
EXPLORE
HOW
DIFFERENT
SCIENTIFIC
AND
TECHNOLOGICAL
METHODOLOGIES
CAN
BE
USED
FOR
SUPPORT
ING
THE
DEVELOPMENT
OF
AMI
BASED
SOLUTIONS
FOR
HEALTH
CARE
AND
WE
WILL
REVIEW
A
MULTITUDE
OF
APPLICATIONS
THAT
SUPPORT
SUCH
HEALTHCARE
SOLUTIONS
FIG
INTERCONNECTED
WORLD
OF
AMI
HEALTH
SERVICES
ACAMPORA
ET
AL
A
SURVEY
ON
AMBIENT
INTELLIGENCE
IN
HEALTHCARE
II
SUPPORTING
INFRASTRUCTURE
AND
TECHNOLOGY
THIS
SECTION
WILL
INTRODUCE
AND
DESCRIBE
THE
SUPPORTING
INFRASTRUCTURE
AND
TECHNOLOGIES
USED
IN
AMI
SYSTEMS
IN
THE
CONTEXT
OF
HEALTHCARE
DOMAIN
IN
PARTICULAR
WE
WILL
EX
PLAIN
BODY
AREA
NETWORKS
BANS
AND
DENSE
MESH
SENSOR
NETWORKS
IN
SMART
HOMES
AND
WE
POINT
TO
SOME
RECENT
TRENDS
IN
SENSOR
TECHNOLOGY
SUCH
AS
EPIDERMAL
ELECTRONICS
AND
MICROELECTROMECHANICAL
SYSTEM
MEMS
SENSORS
AMONG
OTHERS
A
BODY
AREA
NETWORKS
BANS
THE
WIDESPREAD
USE
OF
WIRELESS
NETWORKS
AND
THE
CONSTANT
MINIATURIZATION
OF
ELECTRICAL
DEVICES
HAS
EMPOW
ERED
THE
DEVELOPMENT
OF
BANS
IN
A
BAN
VARIOUS
SENSORS
ARE
ATTACHED
ON
CLOTHING
OR
ON
THE
BODY
OR
EVEN
IMPLANTED
UNDER
THE
SKIN
THIS
NEW
COMMUNICATION
APPROACH
OFFERS
NUMEROUS
NEW
PRACTICAL
AND
INNOVATIVE
APPLICATIONS
FOR
IMPROVING
HUMAN
HEALTH
AND
THE
QUALITY
OF
LIFE
BY
CONTINUOUSLY
MONITORING
HEALTH
FEATURES
SUCH
AS
HEARTBEAT
BODY
TEMPERATURE
PHYSICAL
ACTIVITY
BLOOD
PRESSURE
ELECTROCARDIOGRAM
ECG
ELECTROENCEPHALOGRA
PHY
EEG
AND
ELECTROMYOGRAPHY
EMG
BANS
PROVIDE
A
TECHNOLOGICAL
INFRASTRUCTURE
FOR
REMOTELY
STREAMING
SEN
SORED
DATA
TO
A
MEDICAL
DOCTOR
SITE
FOR
A
REAL
TIME
DIAG
NOSIS
TO
A
MEDICAL
DATABASE
FOR
RECORD
KEEPING
OR
TO
A
CORRESPONDING
TECHNOLOGICAL
EQUIPMENT
THAT
PROACTIVELY
AND
AUTONOMOUSLY
CAN
ISSUE
AN
EMERGENCY
ALERT
OR
INTEL
FIG
A
THREE
TIER
ARCHITECTURE
OF
BAN
COMMUNICATION
SYSTEM
PROCEEDINGS
OF
THE
IEEE
VOL
NO
DECEMBER
LIGENTLY
MANAGE
THIS
INFORMATION
FOR
TAKING
SUITABLE
ACTIONS
AND
IMPROVING
THE
QUALITY
OF
HUMAN
LIFE
THERE
ARE
SEVERAL
BENEFITS
OF
USING
WIRELESS
BANS
IN
HEALTHCARE
APPLICATIONS
MAINLY
COMMUNICATION
EFFICIENCY
AND
COST
EFFECTIVENESS
INDEED
PHYSIOLOGICAL
SIGNALS
OB
TAINED
BY
BODY
SENSORS
CAN
BE
EFFECTIVELY
PROCESSED
TO
OBTAIN
RELIABLE
AND
ACCURATE
PHYSIOLOGICAL
ESTIMATIONS
AT
THE
SAME
TIME
THE
ULTRALOW
POWER
CONSUMPTION
PROVISION
OF
SUCH
SENSORS
MAKES
THEIR
BATTERIES
LONG
LASTING
MORE
OVER
WITH
THE
INCREASING
DEMAND
OF
BODY
SENSORS
IN
THE
CONSUMER
ELECTRONICS
MARKET
MORE
SENSORS
WILL
BE
MASS
PRODUCED
AT
A
RELATIVELY
LOW
COST
ESPECIALLY
FOR
MEDICAL
PURPOSES
ANOTHER
IMPORTANT
BENEFIT
OF
BAN
IS
THEIR
SCALA
BILITY
AND
INTEGRATION
WITH
OTHER
NETWORK
INFRASTRUCTURE
BANS
MAY
INTERFACE
WITH
WIRELESS
SENSOR
NETWORKS
WSNS
RFID
BLUETOOTH
BLUETOOTH
LOW
ENERGY
BLE
PREVIOUSLY
CALLED
WIBREE
VIDEO
SURVEILLANCE
SYSTEMS
WIRELESS
PERSONAL
AREA
NETWORK
WPAN
WIRELESS
LOCAL
AREA
NETWORKS
WLANS
THE
INTERNET
AND
CELLULAR
NETWORKS
ALL
OF
THESE
IMPORTANT
BENEFITS
ARE
OPENING
AND
EXPANDING
NEW
MARKETING
OPPORTUNITIES
FOR
ADVANCED
CONSUMER
ELECTRONICS
IN
THE
FIELD
OF
UBIQUITOUS
COMPUTING
FOR
HEALTHCARE
APPLICATIONS
FIG
BETTER
DEPICTS
BANS
COMMUNICATION
ARCHITEC
TURE
IN
TERMS
OF
THREE
DIFFERENT
LAYERS
TIER
INTRA
BAN
TIER
INTER
BAN
AND
TIER
BEYOND
BAN
COMMUNICA
TIONS
THESE
ARCHITECTURAL
LAYERS
COVER
MULTIPLE
ASPECTS
OF
COMMUNICATION
THAT
RANGE
FROM
LOW
LEVEL
TO
HIGH
LEVEL
DESIGN
ISSUES
AND
FACILITATE
THE
CREATION
OF
A
ACAMPORA
ET
AL
A
SURVEY
ON
AMBIENT
INTELLIGENCE
IN
HEALTHCARE
COMPONENT
BASED
EFFICIENT
BAN
SYSTEM
FOR
A
WIDE
RANGE
MEANS
OF
TELECOMMUNICATIONS
THE
DESIGN
OF
BEYOND
BAN
OF
APPLICATIONS
COMMUNICATION
IS
APPLICATION
SPECIFIC
AND
SHOULD
ADAPT
TO
THE
TERM
INTRA
BAN
COMMUNICATIONS
REFERS
TO
RADIO
THE
REQUIREMENTS
OF
USER
SPECIFIC
SERVICES
FOR
EXAMPLE
IF
COMMUNICATIONS
OF
ABOUT
M
AROUND
THE
HUMAN
BODY
ANY
ABNORMALITIES
ARE
FOUND
BASED
ON
THE
UP
TO
DATE
BODY
WHICH
CAN
BE
FURTHER
SUBCATEGORIZED
AS
COMMUNICA
SIGNAL
TRANSMITTED
TO
THE
DATABASE
AN
ALARM
CAN
BE
NOTIFIED
TIONS
BETWEEN
BODY
SENSORS
AND
COMMUNICATIONS
BE
TO
THE
PATIENT
OR
THE
DOCTOR
THROUGH
E
MAIL
OR
SHORT
MES
TWEEN
BODY
SENSORS
AND
A
PORTABLE
PERSONAL
SERVER
PS
SAGE
SERVICE
SMS
IN
FACT
IT
MIGHT
BE
POSSIBLE
FOR
THE
DEVICE
I
E
A
PDA
AS
SHOWN
IN
FIG
DUE
TO
THE
DIRECT
DOCTOR
TO
REMOTELY
DIAGNOSE
A
PROBLEM
BY
RELYING
ON
BOTH
RELATIONSHIP
WITH
BODY
SENSORS
AND
BANS
THE
DESIGN
OF
VIDEO
COMMUNICATIONS
WITH
THE
PATIENT
AND
THE
PATIENT
INTRA
BAN
COMMUNICATIONS
IS
VERY
CRITICAL
FURTHERMORE
PHYSIOLOGICAL
DATA
INFORMATION
STORED
IN
THE
DATABASE
OR
THE
INTRINSICALLY
BATTERY
OPERATED
AND
LOW
BIT
RATE
FEATURES
RETRIEVED
BY
A
BAN
WORN
BY
THE
PATIENT
OF
EXISTING
BODY
SENSOR
DEVICES
MAKE
IT
A
CHALLENGING
ISSUE
TO
DESIGN
AN
ENERGY
EFFICIENT
MEDIA
ACCESS
CONTROL
MAC
B
DENSE
MESH
SENSOR
NETWORKS
FOR
SMART
PROTOCOL
WITH
QUALITY
OF
SERVICE
QOS
PROVISIONING
LIVING
ENVIRONMENTS
THE
INTER
BAN
COMMUNICATIONS
ENABLES
THE
COM
BESIDES
BAN
SENSORS
CAN
BE
EMBEDDED
INTO
OUR
ENVI
MUNICATIONS
BETWEEN
THE
BODY
SENSORS
AND
ONE
OR
MORE
RONMENTS
RESULTING
IN
INTELLIGENT
AND
PROACTIVE
LIVING
ACCESS
POINTS
APS
THE
APS
CAN
BE
DEPLOYED
AS
PART
OF
THE
ENVIRONMENTS
CAPABLE
OF
SUPPORTING
AND
ENHANCING
DAILY
INFRASTRUCTURE
OR
BE
STRATEGICALLY
PLACED
IN
A
DYNAMIC
LIFE
ESPECIALLY
IN
CASE
OF
ELDERLY
OR
INDIVIDUALS
SUFFERING
ENVIRONMENT
FOR
HANDLING
EMERGENCY
SITUATIONS
SIMILARLY
FROM
MENTAL
OR
MOTOR
DEFICIENCIES
IN
PARTICULAR
WIRELESS
THE
FUNCTIONALITY
OF
A
TIER
NETWORK
AS
SHOWN
IN
FIG
IS
MESH
SENSOR
NETWORKS
WMSNS
COULD
BE
USED
FOR
DESIGN
USED
TO
INTERCONNECT
BANS
WITH
VARIOUS
NETWORKS
THAT
ARE
ING
UNOBTRUSIVE
INTERCONNECTED
ADAPTABLE
DYNAMIC
AND
EASY
TO
ACCESS
IN
DAILY
LIFE
SUCH
AS
THE
INTERNET
AND
CELLULAR
INTELLIGENT
ENVIRONMENTS
WHERE
PROCESSORS
AND
SENSORS
ARE
NETWORKS
WE
DIVIDE
THE
PARADIGMS
OF
INTER
BAN
COM
EMBEDDED
IN
EVERYDAY
OBJECTS
CLOTHES
HOUSEHOLD
DEVICES
MUNICATIONS
INTO
TWO
CATEGORIES
INFRASTRUCTURE
BASED
FURNITURE
AND
SO
ON
THE
SENSORS
EMBEDDED
INTO
ARCHITECTURE
AND
AD
HOC
BASED
ARCHITECTURE
WHILE
THE
DAILY
ENVIRONMENTS
ARE
USUALLY
CALLED
AMBIENT
SENSORS
INFRASTRUCTURE
BASED
ARCHITECTURE
PROVIDES
LARGER
BANDWIDTH
AS
OPPOSED
TO
BODY
SENSORS
THE
AMBIENT
SENSORS
WILL
WITH
CENTRALIZED
CONTROL
AND
FLEXIBILITY
THE
AD
HOC
BASED
COLLECT
VARIOUS
TYPE
OF
DATA
TO
DEDUCE
THE
ACTIVITIES
OF
IN
ARCHITECTURE
FACILITATES
FAST
DEPLOYMENT
WHEN
ENCOUNTERING
A
HABITANTS
AND
TO
ANTICIPATE
THEIR
NEEDS
IN
ORDER
TO
MAXI
DYNAMIC
ENVIRONMENT
SUCH
AS
MEDICAL
EMERGENCY
CARE
MIZE
THEIR
COMFORT
AND
QUALITY
OF
LIFE
WMSNS
ARE
RESPONSE
OR
AT
A
DISASTER
SITE
E
G
AID
N
SYSTEM
BASED
ON
MESH
NETWORKING
TOPOLOGY
A
TYPE
OF
NETWORKING
MOST
BAN
APPLICATIONS
USE
INFRASTRUCTURE
BASED
INTER
WHERE
EACH
NODE
MUST
NOT
ONLY
CAPTURE
AND
DISSEMINATE
ITS
BAN
COMMUNICATIONS
THAT
ASSUMES
AN
ENVIRONMENT
WITH
OWN
DATA
BUT
ALSO
SERVE
AS
A
RELAY
FOR
OTHER
NODES
IN
OTHER
LIMITED
SPACE
E
G
A
WAITING
ROOM
IN
A
HOSPITAL
A
HOME
AN
WORDS
EACH
SENSOR
MUST
COLLABORATE
TO
PROPAGATE
THE
DATA
OFFICE
ETC
COMPARED
TO
ITS
AD
HOC
NETWORKS
COUNTERPART
IN
THE
NETWORK
THE
MAIN
BENEFITS
OF
WMSNS
IS
THEIR
INFRASTRUCTURE
BASED
NETWORKS
OFFER
THE
ADVANTAGE
OF
CEN
CAPABILITY
TO
BE
DYNAMICALLY
SELF
ORGANIZED
AND
SELF
TRALIZED
MANAGEMENT
AND
SECURITY
CONTROL
DUE
TO
THIS
CONFIGURED
WITH
THE
NETWORK
AUTOMATICALLY
ESTABLISHING
CENTRALIZED
STRUCTURE
THE
AP
ALSO
WORKS
AS
THE
DATABASE
AND
MAINTAINING
MESH
CONNECTIVITY
AMONG
SENSORS
SERVER
IN
SOME
APPLICATIONS
SUCH
AS
SMART
OR
WMSNS
DO
NOT
REQUIRE
CENTRALIZED
APS
TO
MEDIATE
THE
CARENET
WIRELESS
COMMUNICATION
AND
THEY
ARE
PARTICULARLY
SUITABLE
TIER
IS
INTENDED
FOR
STREAMING
BODY
SENSOR
DATA
TO
TO
BE
USED
IN
COMPLEX
AND
DYNAMIC
ENVIRONMENTS
SUCH
AS
METROPOLITAN
AREAS
SENSOR
DATA
ARE
MOVED
FROM
INTER
BAN
THE
LIVING
SPACES
NETWORK
TO
BEYOND
BAN
NETWORK
BY
USING
A
GATEWAY
THE
GENERAL
ARCHITECTURE
OF
WMSNS
DESCRIBED
IN
DEVICE
FOR
INSTANCE
A
PDA
COULD
BE
EMPLOYED
TO
CREATE
A
IS
COMPOSED
OF
THREE
DISTINCT
WIRELESS
NETWORK
ELEMENTS
WIRELESS
LINK
BETWEEN
THESE
TWO
NETWORKS
TRANSFER
BODY
NETWORK
GATEWAYS
INFORMATION
BETWEEN
GEOGRAPHICAL
NETWORKS
AND
CONSE
ACCESS
POINTS
QUENTLY
ENHANCE
THE
APPLICATION
AND
COVERAGE
RANGE
OF
MOBILE
AND
STATIONARY
NODES
HEALTHCARE
SYSTEMS
BY
ENABLING
AUTHORIZED
HEALTHCARE
PER
THESE
ELEMENTS
ARE
USUALLY
REFERRED
TO
AS
MESH
NODES
SONNEL
E
G
DOCTOR
OR
NURSE
TO
REMOTELY
ACCESS
A
PATIENT
MNS
IN
WMSNS
EACH
NODE
ACTS
NOT
ONLY
AS
A
CLIENT
BUT
MEDICAL
INFORMATION
THROUGH
CELLULAR
NETWORK
OR
THE
ALSO
AS
A
ROUTER
UNLIKE
WIFI
HOTSPOTS
WHICH
NEED
A
DIRECT
INTERNET
A
DATABASE
IS
ALSO
AN
IMPORTANT
COMPONENT
OF
THE
CONNECTION
TO
THE
INTERNET
MESH
NETWORKS
PASS
A
DATA
BEYOND
BAN
TIER
IN
THE
SCENARIO
OF
HEALTHCARE
THIS
REQUEST
UNTIL
A
NETWORK
CONNECTION
IS
FOUND
THE
ARCHITEC
DATABASE
MAINTAINS
THE
USER
PROFILE
AND
MEDICAL
HISTORY
TURE
OF
WMSNS
CAN
BE
CLASSIFIED
INTO
THREE
CLASSES
ACCORDING
TO
A
USER
SERVICE
PRIORITY
AND
OR
DOCTOR
AVAIL
INFRASTRUCTURE
BACKBONE
WMNS
CLIENT
WMSNS
AND
ABILITY
THE
DOCTOR
MAY
ACCESS
THE
USER
INFORMATION
AS
HYBRID
WMSNS
IN
INFRASTRUCTURE
WMSNS
MESH
ROUTERS
NEEDED
AT
THE
SAME
TIME
AUTOMATED
NOTIFICATIONS
CAN
BE
FORM
AN
INFRASTRUCTURE
FOR
CLIENTS
IN
CLIENT
WMSNS
ALL
ISSUED
TO
HIS
HER
RELATIVES
BASED
ON
THESE
DATA
VIA
VARIOUS
CLIENT
NODES
CONSTITUTE
THE
ACTUAL
NETWORK
TO
PERFORM
VOL
NO
DECEMBER
PROCEEDINGS
OF
THE
IEEE
ACAMPORA
ET
AL
A
SURVEY
ON
AMBIENT
INTELLIGENCE
IN
HEALTHCARE
ROUTING
AND
CONFIGURATION
FUNCTIONALITIES
HYBRID
NETWORKS
PROCESSING
AND
COMMUNICATION
TECHNOLOGY
IN
GENERAL
A
ARE
A
COMBINATION
OF
THE
FORMER
TWO
AS
A
RESULT
MESH
WIRELESS
SENSOR
IS
CHARACTERIZED
BY
ITS
SMALL
SIZE
AND
ITS
CLIENTS
CAN
PERFORM
MESH
FUNCTIONS
WITH
OTHER
ONES
AS
WELL
CAPABILITY
OF
SENSING
ENVIRONMENTAL
IN
THE
CASE
OF
AMBIENT
AS
ACCESS
THE
NETWORK
SENSORS
OR
PHYSIOLOGICAL
INFORMATION
IN
THE
CASE
OF
BODY
THE
INNOVATIVE
WMSNS
NETWORKING
PLATFORM
ALLOWS
SENSORS
SMART
ENVIRONMENTS
TO
OFFER
NEW
SOLUTIONS
THAT
PROVIDE
HIGH
RELIABILITY
AND
POWER
EFFICIENCY
WMSNS
ALSO
ENABLE
AMBIENT
SENSOR
ARCHITECTURE
AMBIENT
SENSORS
TYPI
HIGH
ADAPTABILITY
AND
SCALABILITY
SINCE
LOW
PROFILE
MESH
CALLY
CONSIST
OF
TRANSDUCERS
FOR
MEASURING
THE
QUANTITY
OF
MODULES
CAN
BE
EASILY
EMBEDDED
AND
INTEGRATED
WITH
INTEREST
E
G
ROOM
TEMPERATURE
AND
TRANSCEIVERS
FOR
EXISTING
SENSING
DEVICES
THROUGHOUT
A
BUILDING
TO
FORM
COMMUNICATING
THE
COLLECTED
INFORMATION
SEAMLESS
NETWORKS
IN
GENERAL
WMSNS
ENABLE
INTELLIGENT
DIFFERENT
APPROACHES
CAN
BE
TAKEN
FOR
DESIGNING
THE
ENVIRONMENTS
TO
BE
CHARACTERIZED
BY
THE
FOLLOWING
TRANSDUCER
HARDWARE
THE
MOST
COMMON
AND
SCALABLE
AP
FASTER
RETROFITTING
ONE
OF
THE
MAIN
REASONS
OF
IN
PROACH
IS
BASED
ON
DEVELOPMENT
OF
TRANSDUCER
BOARDS
THAT
CREASING
COSTS
AND
TIME
DELAYS
IN
RETROFITTING
OFFICE
CAN
BE
ATTACHED
TO
THE
MAIN
PROCESSOR
BOARD
BY
THE
MEANS
SPACE
IS
CAUSED
BY
THE
LABOR
INTENSIVE
MOVEMENT
OF
OF
AN
EXPANSION
BUS
A
TYPICAL
TRANSDUCER
BOARD
CAN
PROVIDE
UTILITY
WIRING
TO
CONFORM
TO
THE
NEW
WALL
ORGANI
LIGHT
TEMPERATURE
MICROPHONE
SOUNDER
TONE
DETECTOR
ZATION
BY
MEANS
OF
WMSNS
SYSTEMS
DESIGNERS
TWO
AXIS
ACCELEROMETER
AND
TWO
AXIS
MAGNETOMETER
DE
CAN
RELOCATE
SENSORS
QUICKLY
AND
CONVENIENTLY
VICES
ALTERNATIVES
INCLUDE
ECONOMICAL
VERSIONS
THAT
PRO
WITHOUT
INTRUSIVE
DISRUPTIVE
AND
COSTLY
REWIRING
VIDE
A
REDUCED
SET
OF
TRANSDUCERS
OR
MORE
EXPENSIVE
EFFORTS
VERSIONS
THAT
BOAST
GPS
FOR
INSTANCE
SPECIAL
BOARDS
ARE
SIMPLIFIED
MAINTENANCE
LOW
MAINTENANCE
COSTS
ARE
ALSO
AVAILABLE
THAT
CARRY
NO
TRANSDUCERS
BUT
PROVIDE
INPUT
A
KEY
CONCERN
IN
DESIGNING
A
SENSOR
NETWORK
THE
OUTPUT
I
O
CONNECTORS
THAT
CUSTOM
DEVELOPERS
CAN
USE
TO
SELF
CONFIGURING
AND
SELF
HEALING
CAPABILITIES
OF
CONNECT
THEIR
OWN
DEVICES
THE
ALTERNATIVE
DESIGN
APPROACH
WMSNS
COMBINED
WITH
ITS
LOW
POWER
USAGE
YIELD
PUTS
TRANSDUCERS
DIRECTLY
ON
THE
MICROCONTROLLER
BOARD
AN
EFFECTIVE
SOLUTION
TO
THE
MAINTENANCE
ISSUE
TRANSDUCERS
ARE
SOLDERED
OR
CAN
BE
MOUNTED
IF
NEEDED
BUT
REDUCED
LIFE
CYCLE
COSTS
WMSNS
CONTINUOUSLY
LEAD
THE
AVAILABLE
OPTIONS
ARE
VERY
LIMITED
AND
GENERALITY
AND
TO
ECONOMIC
BENEFITS
BECAUSE
THEY
ARE
EASY
TO
EXPANDABILITY
IS
AFFECTED
HOWEVER
THE
ONBOARD
TRANSDUCERS
MAINTAIN
MOVE
OR
REPLACE
RESULTING
IN
A
DISTRIB
DESIGN
CAN
CUT
PRODUCTION
COSTS
AND
PROVIDES
MORE
RO
UTED
SYSTEM
WITH
LIFE
CYCLE
COSTS
THAT
ARE
SIGNIFI
BUSTNESS
THAN
STANDALONE
TRANSDUCER
BOARDS
WHICH
MAY
DE
CANTLY
LESS
THAN
TRADITIONAL
WIRED
INSTALLATIONS
TACH
FROM
THE
MICROCONTROLLER
BOARD
IN
HARSH
ENVIRONMENTS
SEAMLESS
UPGRADES
TRANSITIONS
WITH
THE
CONVER
THROUGH
A
TRANSCEIVER
CIRCUITRY
A
SENSOR
DEVICE
COM
GENCE
AND
COORDINATION
BETWEEN
PRINCIPAL
STAN
MUNICATES
THE
SENSED
INFORMATION
TO
NEARBY
UNITS
USING
A
DARD
COMMUNICATION
CORPORATIONS
SUCH
AS
ZIGBEE
PHYSICAL
LAYER
BASED
ON
RADIO
FREQUENCY
RF
COMMUNICA
ALLIANCE
AND
THE
ASHRAE
BACNET
COMMITTEE
TION
OVER
THE
PHYSICAL
LAYER
DIFFERENT
PROTOCOLS
HAVE
BEEN
THE
TRANSITION
TO
A
WIRELESS
SOLUTION
IS
NOT
AN
IMPLEMENTED
FOR
ALLOWING
SENSORS
TO
COMMUNICATE
AMONG
ALL
OR
NOTHING
PROPOSITION
IN
THIS
WAY
WMSNS
THEMSELVES
THE
HIGHER
NUMBER
OF
SUPPORTED
PROTO
CAN
BE
PHASED
IN
EASILYVONE
ROOM
AREA
FLOOR
OR
COLS
MAKES
IT
EASIER
FOR
A
BAN
TO
BE
INTEGRATED
WITH
OTHER
BUILDING
AT
A
TIME
APPLICATIONS
BLUETOOTH
IS
A
POPULAR
WIRELESS
PROTOCOL
FOR
FLEXIBILITY
FREE
FROM
WIRING
PROBLEMS
SYSTEMS
SHORT
RANGE
COMMUNICATIONS
BUT
BANS
NEED
PROTOCOLS
DESIGNERS
CAN
INSTALL
A
WMSN
BY
PLACING
WIRELESS
THAT
SUPPORT
LOW
ENERGY
CONSUMPTION
AND
THE
SELF
CONTROLLERS
VIRTUALLY
ANYWHERE
THIS
APPROACH
ORGANIZING
FEATURE
SEEN
IN
AD
HOC
NETWORKS
EVEN
THOUGH
RESULTS
IN
EASILY
RECONFIGURABLE
SYSTEMS
TO
CREATE
BLUETOOTH
HAS
A
VERY
GOOD
COMMUNICATIONS
MECHANISM
ADAPTABLE
WORKSPACES
OR
LESS
INTRUSIVELY
RETROFIT
OVER
A
SHORT
RANGE
IT
IS
NOT
A
VERY
FEASIBLE
SOLUTION
FOR
THE
EXISTING
NETWORK
INFRASTRUCTURES
WHILE
SAVING
BANS
TO
OVERCOME
THESE
PROBLEMS
MOST
OF
THE
BAN
AP
TIME
AND
REDUCING
COSTS
PLICATIONS
USE
THE
ZIGBEE
PROTOCOL
A
KEY
COMPONENT
OF
THE
SOME
EXAMPLES
OF
WMSNS
FOR
INTELLIGENT
LIVING
ZIGBEE
PROTOCOL
IS
ITS
ABILITY
TO
SUPPORT
MESH
NETWORKS
ENVIRONMENTS
HAVE
BEEN
PROVIDED
BY
THE
SIEMENS
APO
ZIGBEE
IS
USED
TODAY
FOR
COMMUNICATIONS
AMONG
SENSORS
GEE
PROJECT
AND
BY
THE
HOMEMESH
PROJECT
BOTH
IN
A
NETWORK
SOME
OF
THE
ADVANTAGES
OF
USING
ZIGBEE
ARE
PROJECTS
HIGHLIGHT
THAT
STARTING
FROM
WMSNS
FEATURES
IT
IT
INCURS
LOW
ENERGY
CONSUMPTION
FOR
COMMUNICATIONS
WILL
BE
POSSIBLE
TO
DESIGN
LIVING
SPACES
PARTICULARLY
SUITABLE
BETWEEN
THE
NODES
IT
HAS
A
LOW
DUTY
CYCLE
THAT
ENABLES
IT
FOR
SUPPORTING
THE
CAPABILITIES
OF
ELDERLY
OR
INDIVIDUALS
TO
PROVIDE
LONGER
BATTERY
LIFE
ITS
COMMUNICATIONS
PRI
WITH
DISABILITIES
IN
ORDER
TO
ENHANCE
THEIR
QUALITY
OF
LIFE
MITIVES
ENABLE
LOW
LATENCY
COMMUNICATIONS
AND
IT
SUPPORTS
B
SECURITY
IN
ADDITION
IT
HAS
ALL
THE
BASIC
C
SENSOR
TECHNOLOGY
FEATURES
REQUIRED
FOR
COMMUNICATIONS
BETWEEN
THE
SENSORS
BOTH
BANS
AND
WMSNS
CAN
BE
VIEWED
AS
A
COLLECTION
IN
WIRELESS
NODES
ZIGBEE
ALSO
ENABLES
BROADBASED
OF
INTERCONNECTED
WIRELESS
SENSORS
BASED
ON
A
PARTICULAR
DEPLOYMENT
OF
SENSOR
NETWORKS
IN
A
COST
EFFECTIVE
MANNER
PROCEEDINGS
OF
THE
IEEE
VOL
NO
DECEMBER
SOME
OF
THE
MOST
WIDELY
USED
AMBIENT
SENSORS
ARE
SUMMARIZED
IN
TABLE
BANS
HARDWARE
AND
DEVICES
A
BODY
SENSOR
NODE
MAINLY
CONSISTS
OF
TWO
PARTS
THE
PHYSIOLOGICAL
SIGNAL
SENSOR
AND
THE
RADIO
PLATFORM
TO
WHICH
MULTIPLE
BODY
SENSORS
CAN
BE
CONNECTED
IN
ORDER
TO
CREATE
A
COMPLEX
COMMUNICATION
NETWORK
THE
GENERAL
FUNCTIONALITY
OF
BODY
SENSORS
IS
TO
COLLECT
ANALOG
SIGNALS
THAT
CORRESPOND
TO
HUMAN
PHYSIO
LOGICAL
ACTIVITIES
OR
BODY
ACTIONS
THE
ANALOG
SIGNAL
IS
LATER
DIGITIZED
BY
AN
ANALOG
TO
DIGITAL
CONVERTER
A
D
AND
IS
FORWARDED
TO
THE
NETWORK
TO
BE
ANALYZED
DIFFERENT
BODY
SENSORS
FOR
MEASURING
PHYSIOLOGICAL
SIGNS
ARE
SUMMARIZED
IN
TABLE
WHERE
DEPENDING
ON
THE
CAPTURED
PHYSIOLOGICAL
SIGNAL
HIGH
OR
LOW
DATA
SAMPLING
RATE
MIGHT
BE
NEEDED
MORE
SPECIFICALLY
SOME
OF
THE
MOST
IMPORTANT
BODY
SENSORS
INCLUDE
THE
FOLLOWING
ACCELEROMETER
GYROSCOPE
ACCELEROMETERS
ARE
USED
IN
THE
FIELD
OF
HEALTHCARE
FOR
RECOGNIZING
BODY
POSTURES
E
G
SITTING
KNEELING
CRAWLING
LAYING
STANDING
WALKING
RUNNING
AND
SO
ON
THE
ACCELEROMETER
BASED
POSTURE
MONITORING
FOR
BANS
TYPICALLY
CONSISTS
OF
THREE
AXIS
ACCELEROME
TERS
OR
TRI
AXIAL
ACCELEROMETERS
POSITIONED
ON
WELL
DEFINED
LOCATIONS
ON
A
HUMAN
BODY
THEY
CAN
TABLE
AMBIENT
SENSORS
USED
IN
SMART
ENVIRONMENTS
TABLE
BODY
SENSORS
ACAMPORA
ET
AL
A
SURVEY
ON
AMBIENT
INTELLIGENCE
IN
HEALTHCARE
ALSO
BE
USED
TO
MEASURE
THE
VIBRATION
OR
ACCELER
ATION
DUE
TO
THE
GRAVITY
USEFUL
FOR
RECOGNIZING
FOR
EXAMPLE
ELDERLY
FALLS
GYROSCOPES
ARE
USED
FOR
MEASURING
ORIENTATION
BASED
ON
THE
PRINCIPLE
OF
CONSERVATION
OF
ANGULAR
MOMENTUM
GYROSCOPES
ARE
TYPICALLY
USED
TOGETHER
WITH
ACCELEROMETERS
FOR
PHYSICAL
MOVEMENT
MONITORING
BLOOD
GLUCOSE
GLUCOSE
ALSO
REFERRED
TO
AS
BLOOD
SUGAR
REFERS
TO
THE
AMOUNT
OF
GLUCOSE
CIRCULATING
IN
THE
BLOOD
TRADITIONALLY
GLUCOSE
MEASUREMENTS
ARE
DONE
BY
PRICKING
A
FINGER
AND
EXTRACTING
A
DROP
OF
BLOOD
WHICH
IS
APPLIED
TO
A
TEST
STRIP
COMPOSED
OF
CHEMICALS
SENSITIVE
TO
THE
GLUCOSE
IN
THE
BLOOD
SAMPLE
AN
OPTICAL
METER
GLUCOMETER
IS
USED
TO
ANALYZE
THE
BLOOD
SAMPLE
AND
GIVES
A
NUMERICAL
GLUCOSE
READING
RECENTLY
NONINVASIVE
GLUCOSE
MONITORING
HAS
BECOME
AVAILABLE
THROUGH
INFRARED
TECHNOLOGY
AND
OPTICAL
SENSING
BLOOD
PRESSURE
THE
BLOOD
PRESSURE
SENSOR
IS
A
NON
INVASIVE
SENSOR
DESIGNED
TO
MEASURE
SYSTOLIC
AND
DIASTOLIC
HUMAN
BLOOD
PRESSURE
UTILIZING
THE
OSCILLOMETRIC
TECHNIQUE
CO
GAS
SENSOR
THIS
SENSOR
MEASURES
GASEOUS
CARBON
DIOXIDE
LEVELS
TO
MONITOR
CHANGES
IN
CO
LEVELS
AS
WELL
AS
TO
MONITOR
OXYGEN
CONCENTRATION
DURING
HUMAN
RESPIRATION
ECG
SENSOR
ECG
IS
A
GRAPHIC
RECORD
OF
THE
HEART
ELECTRICAL
ACTIVITY
HEALTHCARE
PROVIDERS
USE
IT
TO
HELP
DIAGNOSE
A
HEART
DISEASE
THEY
CAN
ALSO
USE
IT
TO
MONITOR
HOW
WELL
DIFFERENT
HEART
MEDICATIONS
ARE
WORKING
IN
ORDER
TO
OBTAIN
AN
ECG
SIGNAL
SEVERAL
ELECTRODES
ARE
ATTACHED
AT
SPECIFIC
SITES
ON
THE
SKIN
E
G
ARMS
AND
CHEST
AND
THE
POTENTIAL
DIFFERENCES
BETWEEN
THESE
ELECTRODES
ARE
MEASURED
EEG
SENSOR
THIS
SENSOR
MEASURES
ELECTRICAL
ACTIVITY
WITHIN
THE
BRAIN
BY
ATTACHING
SMALL
ELECTRODES
TO
THE
HUMAN
SCALP
AT
MULTIPLE
LOCATIONS
THEN
IN
FORMATION
OF
THE
BRAIN
ELECTRICAL
ACTIVITIES
SENSED
BY
THE
ELECTRODES
IS
FORWARDED
TO
AN
AMPLIFIER
FOR
PRODUCING
A
PATTERN
OF
TRACINGS
SYNCHRONOUS
ELEC
TRICAL
ACTIVITIES
IN
DIFFERENT
BRAIN
REGIONS
ARE
GENE
RALLY
ASSUMED
TO
IMPLY
FUNCTIONAL
RELATIONSHIPS
BETWEEN
THESE
REGIONS
IN
A
HOSPITAL
THE
PATIENT
MAY
BE
ASKED
TO
BREATHE
DEEPLY
OR
TO
LOOK
AT
A
FLASHING
LIGHT
DURING
THE
RECORDING
OF
EEG
EMG
SENSOR
EMG
MEASURES
ELECTRICAL
SIGNALS
PRO
DUCED
BY
MUSCLES
DURING
CONTRACTIONS
OR
AT
REST
NERVE
CONDUCTION
STUDIES
ARE
OFTEN
DONE
TOGETHER
WHILE
MEASURING
THE
ELECTRICAL
ACTIVITY
IN
MUSCLES
SINCE
NERVES
CONTROL
THE
MUSCLES
IN
THE
BODY
BY
ELECTRICAL
SIGNALS
IMPULSES
AND
THESE
IMPULSES
MAKE
THE
MUSCLES
REACT
IN
SPECIFIC
WAYS
NERVE
AND
MUSCLE
DISORDERS
CAUSE
THE
MUSCLES
TO
REACT
IN
ABNORMAL
WAYS
PULSE
OXIMETRY
THIS
SENSOR
MEASURES
OXYGEN
SATU
RATION
USING
A
NONINVASIVE
PROBE
A
SMALL
CLIP
WITH
VOL
NO
DECEMBER
PROCEEDINGS
OF
THE
IEEE
ACAMPORA
ET
AL
A
SURVEY
ON
AMBIENT
INTELLIGENCE
IN
HEALTHCARE
A
SENSOR
IS
ATTACHED
TO
THE
PERSON
FINGER
EARLOBE
OR
TOE
THE
SENSOR
GIVES
OFF
A
LIGHT
SIGNAL
THAT
PASSES
THROUGH
THE
SKIN
ACCORDING
TO
THE
LIGHT
ABSORPTION
OF
OXYGENATED
HEMOGLOBIN
AND
TOTAL
HEMOGLOBIN
IN
ARTERIAL
BLOOD
THE
MEASUREMENT
IS
EXPRESSED
AS
A
RATIO
OF
OXYGENATED
HEMOGLOBIN
TO
THE
TOTAL
AMOUNT
OF
HEMOGLOBIN
HUMIDITY
AND
TEMPERATURE
SENSORS
THEY
ARE
USED
FOR
MEASURING
THE
TEMPERATURE
OF
THE
HUMAN
BODY
AND
OR
THE
HUMIDITY
OF
THE
IMMEDIATE
ENVIRONMENT
AROUND
A
PERSON
AN
ALARM
SIGNAL
CAN
BE
ISSUED
IF
A
CERTAIN
AMOUNT
OF
CHANGES
ARE
MEASURED
RECENT
TRENDS
IN
SENSOR
TECHNOLOGY
SINCE
BODY
SEN
SORS
ARE
IN
DIRECT
CONTACT
WITH
BODY
TISSUE
OR
MIGHT
EVEN
BE
IMPLANTED
THEIR
SIZE
AND
PHYSICAL
COMPATIBILITY
WITH
HU
MAN
TISSUES
ARE
CRUCIAL
THIS
MOTIVATES
THE
RESEARCH
AND
SYNTHESIS
OF
NOVEL
MATERIALS
AND
TECHNOLOGIES
SUCH
AS
THE
MEMS
THE
MEMS
IS
AN
INNOVATIVE
TECHNOLOGY
FOR
SENSORS
DESIGN
BASED
ON
MINIATURIZED
MECHANICAL
AND
ELECTROMECHANICAL
ELEMENTS
I
E
DEVICES
AND
STRUCTURES
THAT
ARE
MADE
USING
THE
TECHNIQUES
OF
MICROFABRICATION
THE
PHYSICAL
DIMENSIONS
OF
MEMS
DEVICES
CAN
VARY
FROM
WELL
BELOW
M
ON
THE
LOWER
END
OF
THE
DIMENSIONAL
SPECTRUM
ALL
THE
WAY
TO
SEVERAL
MILLIMETERS
AS
A
CONSE
QUENCE
THEY
OPEN
UP
NEW
SCENARIOS
FOR
UBIQUITOUS
HEALTH
CARE
APPLICATIONS
RECENTLY
MEMS
TECHNOLOGY
HAS
BEEN
USED
FOR
DESIGN
OF
DIFFERENT
KINDS
OF
SENSORS
SUCH
AS
ACCE
LEROMETER
BLOOD
GLUCOSE
BLOOD
PRESSURE
CARBON
DIOXIDE
MENTS
ARE
ALLOWING
CAMERAS
TO
BE
MADE
SO
SMALL
AS
TO
BE
EMBEDDED
INTO
EYE
GLASSES
AS
A
CONSEQUENCE
ENHANCING
THE
CAPABILITIES
OF
BANS
WITH
VISION
FEATURES
THE
CAPTURED
IMAGES
CAN
BE
MAPPED
TO
AUDIBLE
OUTPUTS
IN
ORDER
TO
ASSIST
PEOPLE
WHO
HAVE
EYESIGHT
PROBLEMS
THE
IMAGES
CAN
EVEN
BE
TRANSLATED
TO
OTHER
KINDS
OF
FORMATS
E
G
GENTLE
ELEC
TRICAL
IMPULSES
ON
THE
TONGUE
TOGETHER
WITH
A
LOLLIPOP
SIZED
ELECTRODE
ARRAY
IN
THEIR
MOUTHS
BLIND
PEOPLE
CAN
ALSO
BE
TRAINED
TO
REGAIN
VISION
CO
GAS
SENSOR
ECG
EEG
EMG
GYROSCOPE
PULSE
OXI
METRY
AS
WELL
AS
SOME
SENSORS
TYPICALLY
USED
IN
WSNS
FOR
III
ALGORITHMS
AND
METHODS
EXAMPLE
IN
CASE
OF
ECG
BEDSIDE
MONITORING
DISPOSABLE
ELECTRODES
ARE
TRADITIONALLY
MADE
OF
SILVER
CHLORIDE
AGCL
HOWEVER
LONG
TERM
USAGE
OF
THESE
TYPES
OF
ELECTRODES
MAY
CAUSE
FAILURE
OF
ELECTRICAL
CONTACTS
AS
WELL
AS
SKIN
IRRITATION
PROBLEMS
MEMS
TECHNOLOGY
CAN
ALLEVIATE
THIS
PROBLEM
BY
USING
TEXTILE
STRUCTURED
ELECTRODES
WHICH
ARE
EMBEDDED
IN
THIS
SECTION
WE
INTRODUCE
THE
SET
OF
COMPUTATIONAL
METHODOLOGIES
THAT
COMBINED
WITH
TECHNOLOGIES
PRE
SENTED
IN
SECTION
II
ENABLE
SYSTEMS
DESIGNERS
TO
DEVELOP
ENHANCED
AMI
HEALTHCARE
APPLICATIONS
AS
SUMMARIZED
IN
TABLES
AND
INTO
CLOTHES
FABRICS
THESE
TEXTILE
STRUCTURE
ELECTRODES
POSSIBLY
WOVEN
INTO
CLOTHES
WILL
NOT
CAUSE
ANY
SKIN
IRRI
TATION
AND
THUS
ARE
COMFORTABLE
AND
SUITABLE
FOR
LONG
TERM
MONITORING
COMPARED
TO
THE
CONVENTIONAL
ELECTRODES
A
ACTIVITY
RECOGNITION
AMI
SYSTEMS
FOCUS
ON
THE
NEEDS
OF
A
HUMAN
AND
THEREFORE
REQUIRE
INFORMATION
ABOUT
THE
ACTIVITIES
BEING
THEY
ARE
ALSO
MUCH
MORE
FLEXIBLE
SINCE
THEIR
SHAPE
CAN
BE
ADAPTED
TO
HUMAN
MOTION
OTHER
RESEARCH
DIRECTIONS
ARE
ALSO
CONSIDERING
THE
POS
SIBILITY
OF
INNOVATIVE
AND
NONINVASIVE
SENSORS
FOR
EXAMPLE
THE
MASSACHUSETTS
INSTITUTE
OF
TECHNOLOGY
MIT
CAMBRIDGE
MA
USA
RESEARCHERS
HAVE
DESIGNED
A
SCALABLE
ELECTRONIC
SENSATE
SKIN
BY
USING
A
COLLECTION
OF
FLEXIBLY
INTERCONNECTED
SMALL
RIGID
CIRCUIT
BOARDS
FIG
EACH
BOARD
CONTAINS
AN
EMBEDDED
PROCESSOR
TOGETHER
WITH
A
SUITE
OF
SENSORS
PROVIDING
DENSE
MULTIMODAL
CAPTURE
OF
PROXIMATE
AND
CONTACT
PHENOMENA
OTHER
IMPORTANT
RESULTS
HAVE
BEEN
OBTAINED
IN
THE
FIELD
OF
COMPUTER
VISION
THANKS
TO
THE
ADVANCEMENT
OF
CHARGE
COUPLED
DEVICES
CCD
AND
COMPLEMENTARY
METAL
OXIDE
SEMICONDUCTOR
CMOS
ACTIVE
PIXEL
SENSORS
THE
RECENT
ADVANCE
PROCEEDINGS
OF
THE
IEEE
VOL
NO
DECEMBER
FIG
THE
SCALABLE
ELECTRONIC
SENSATE
SKIN
FROM
MIT
TABLE
AMBIENT
HEALTH
ALGORITHMS
AND
METHODS
PERFORMED
BY
THE
HUMAN
AT
THE
CORE
OF
SUCH
TECH
NOLOGIES
IS
ACTIVITY
RECOGNITION
WHICH
IS
A
CHALLENGING
AND
WELL
RESEARCHED
PROBLEM
THE
GOAL
OF
ACTIVITY
RECOGNITION
IS
TO
IDENTIFY
ACTIVITIES
AS
THEY
OCCUR
BASED
ON
DATA
COL
LECTED
BY
SENSORS
THERE
EXIST
A
NUMBER
OF
APPROACHES
TO
ACTIVITY
RECOGNITION
THAT
VARY
DEPENDING
ON
THE
UNDERLYING
SENSOR
TECHNOLOGIES
THAT
ARE
USED
TO
MONITOR
ACTIVITIES
THE
ALTERNATIVE
MACHINE
LEARNING
ALGORITHMS
THAT
ARE
USED
TO
MODEL
THE
ACTIVITIES
AND
THE
COMPLEXITY
OF
THE
ACTIVITIES
THAT
ARE
BEING
MODELED
SENSOR
MODALITIES
ADVANCES
IN
PERVASIVE
COMPUTING
AND
SENSOR
NETWORKS
HAVE
RESULTED
IN
THE
DEVELOPMENT
OF
A
WIDE
VARIETY
OF
SENSOR
MODALITIES
THAT
ARE
USEFUL
FOR
GATHERING
INFORMATION
ABOUT
HUMAN
ACTIVITIES
IN
THE
CASE
OF
WEARABLE
SENSORS
SENSORS
ARE
ATTACHED
TO
THE
BODY
OR
WOVEN
INTO
GARMENTS
WHEN
THREE
AXIS
ACCE
LEROMETERS
ARE
DISTRIBUTED
OVER
AN
INDIVIDUAL
BODY
THEN
EACH
SENSOR
CAN
PROVIDE
INFORMATION
ABOUT
THE
ORIENTATION
TABLE
AMI
APPLICATIONS
IN
HEALTHCARE
ACAMPORA
ET
AL
A
SURVEY
ON
AMBIENT
INTELLIGENCE
IN
HEALTHCARE
AND
MOVEMENT
OF
THE
CORRESPONDING
BODY
PART
RESEARCH
ERS
COMMONLY
USE
THESE
INERTIAL
MEASUREMENT
UNITS
TO
RECOGNIZE
AMBULATORY
MOVEMENTS
E
G
WALKING
RUNNING
SITTING
CLIMBING
AND
FALLING
POSTURE
AND
GESTURES
ENVIRONMENT
SENSORS
SUCH
AS
INFRARED
MOTION
DETEC
TORS
MAGNETIC
DOOR
SENSORS
BREAK
BEAM
SENSORS
AND
PRESSURE
MATS
HAVE
BEEN
USED
TO
GATHER
INFOR
MATION
ABOUT
MORE
COMPLEX
ACTIVITIES
SUCH
AS
COOKING
SLEEPING
AND
EATING
THESE
SENSORS
ARE
ADEPT
IN
PERFORM
ING
LOCATION
BASED
ACTIVITY
RECOGNITION
IN
INDOOR
ENVIRON
MENTS
AND
THEIR
LONG
BATTERY
LIFE
SUPPORTS
LONG
TERM
DATA
COLLECTION
BECAUSE
THIS
APPROACH
EMBEDS
SENSORS
WITHIN
ENVIRONMENTS
IT
IS
WELL
SUITED
TO
CREATING
AMBIENT
INTELLIGENT
APPLICATIONS
SUCH
AS
SMART
ENVIRONMENTS
AND
HAS
BEEN
WIDELY
ADOPTED
FOR
HEALTH
MONITORING
AND
AMBIENT
ASSISTED
LIVING
SOME
ACTIVITIES
SUCH
AS
WASHING
DISHES
TAKING
MEDI
CINE
AND
USING
THE
PHONE
ARE
CHARACTERIZED
BY
INTERACTING
VOL
NO
DECEMBER
PROCEEDINGS
OF
THE
IEEE
ACAMPORA
ET
AL
A
SURVEY
ON
AMBIENT
INTELLIGENCE
IN
HEALTHCARE
WITH
UNIQUE
OBJECTS
IN
RESPONSE
RESEARCHERS
HAVE
EX
CONCURRENT
ACTIVITIES
HUMANS
OFTEN
MAKE
EFFICIENT
PLORED
THE
USAGE
OF
RFID
TAGS
AND
ACCELER
USE
OF
TIME
BY
PERFORMING
A
STEP
FOR
ONE
ACTIVITY
WHILE
STILL
OMETERS
OR
SHAKE
SENSORS
FOR
TAGGING
THESE
OBJECTS
AND
IN
THE
MIDDLE
OF
ANOTHER
ACTIVITY
CAUSING
THE
SENSOR
USING
THE
DATA
FOR
ACTIVITY
RECOGNITION
THE
CHALLENGE
WITH
STREAMS
TO
INTERWEAVE
CONCURRENT
ACTIVITIES
MAY
OCCUR
IF
A
THIS
MODALITY
IS
DECIDING
WHICH
OBJECTS
TO
TAG
WITH
SENSORS
SINGLE
SENSOR
EVENT
CONTRIBUTES
TO
MORE
THAN
ONE
ACTIVITY
ONE
APPROACH
THAT
HAS
BEEN
INVESTIGATED
IS
TO
THIS
SITUATION
MAY
ALSO
INDICATE
THAT
MULTIPLE
RESIDENTS
ARE
MINE
WEB
PAGE
DESCRIPTION
OF
ACTIVITIES
TO
DETERMINE
WHICH
IN
THE
SPACE
WHICH
CAN
BE
A
CHALLENGE
FOR
ACTIVITY
RECOGNI
OBJECTS
ARE
INSTRUMENTAL
TO
THE
ACTIVITY
AND
HELP
DIFFEREN
TION
ALGORITHMS
TIATE
THE
ACTIVITY
FROM
OTHERS
OTHER
MODALITIES
THAT
HAVE
BEEN
RESEARCHED
FOR
ACTIVITY
B
BEHAVIORAL
PATTERN
DISCOVERY
RECOGNITION
INCLUDE
VIDEO
CAMERAS
MICROPHONES
AMI
SYSTEMS
FOCUS
ON
THE
NEEDS
OF
A
HUMAN
AND
THERE
AND
GPS
LOCATORS
EACH
OF
THESE
DOES
FORE
REQUIRE
INFORMATION
ABOUT
THE
ACTIVITIES
BEING
FACE
A
UNIQUE
CHALLENGE
FOR
USE
IN
HEALTHCARE
APPLICATIONS
PERFORMED
WHILE
RECOGNIZING
PREDEFINED
ACTIVITIES
OFTEN
CAMERAS
AND
MICROPHONES
NEED
TO
BE
CAREFULLY
POSITIONED
RELIES
ON
SUPERVISED
LEARNING
TECHNIQUES
UNSUPERVISED
AND
ROBUST
IN
THE
PRESENCE
OF
OCCLUSION
FURTHERMORE
LEARNING
IS
VALUABLE
FOR
ITS
ABILITY
TO
DISCOVER
RECURRING
SE
THESE
TECHNOLOGIES
ARE
NOT
ALWAYS
WELL
ACCEPTED
BECAUSE
OF
QUENCES
OF
UNLABELED
SENSOR
ACTIVITIES
THAT
MAY
COMPRISE
PRIVACY
CONCERNS
SMARTPHONES
ARE
INCREASING
IN
POPULAR
ACTIVITIES
OF
INTEREST
METHODS
FOR
ACTIVITY
DISCOVERY
BUILD
ITY
FOR
ACTIVITY
RECOGNITION
BECAUSE
SENSORS
IN
THE
ON
A
RICH
HISTORY
OF
DISCOVERY
RESEARCH
INCLUDING
METHODS
FOR
PHONE
COLLECT
ALL
OF
THE
GYRO
ACCELEROMETER
GPS
ACOUSTIC
MINING
FREQUENT
SEQUENCES
MINING
FREQUENT
PAT
AND
VIDEO
DATA
FOUND
THE
OTHER
METHODS
AS
LONG
AS
THEY
ARE
TERNS
USING
REGULAR
EXPRESSIONS
CONSTRAINT
BASED
MIN
ON
THE
INDIVIDUAL
WHILE
THEY
PERFORM
ACTIVITIES
ING
AND
FREQUENT
PERIODIC
PATTERN
MINING
MORE
RECENT
WORK
EXTENDS
THESE
EARLY
APPROACHES
TO
ACTIVITY
MODELS
THE
METHODS
THAT
ARE
USED
TO
MODEL
LOOK
FOR
MORE
COMPLEX
PATTERNS
RUOTSALAINEN
ET
AL
AND
RECOGNIZE
ACTIVITIES
ARE
AS
VARIED
AS
THE
SENSOR
MODALI
DESIGN
THE
GAIS
GENETIC
ALGORITHM
TO
DETECT
INTERLEAVED
TIES
USED
TO
OBSERVE
ACTIVITIES
EXISTING
METHODS
CAN
BE
PATTERNS
IN
AN
UNSUPERVISED
LEARNING
FASHION
OTHER
AP
BROADLY
CATEGORIZED
INTO
TEMPLATE
MATCHING
TRANSDUCTIVE
PROACHES
HAVE
BEEN
PROPOSED
TO
MINE
MORE
COMPLEX
DIS
TECHNIQUES
GENERATIVE
AND
DISCRIMINATIVE
APPROACHES
CONTINUOUS
PATTERNS
FROM
STREAMING
DATA
OVER
TEMPLATE
MATCHING
TECHNIQUES
EMPLOY
A
NEAREST
NEIGHBOR
TIME
IN
DIFFERENT
TYPES
OF
SEQUENCE
DATA
SETS
AND
TO
CLASSIFIER
BASED
ON
EUCLIDEAN
DISTANCE
OR
DYNAMIC
TIME
ALLOW
VARIATIONS
IN
OCCURRENCES
OF
THE
PATTERNS
DIS
WARPING
GENERATIVE
APPROACHES
SUCH
AS
NAIVE
COVERED
BEHAVIORAL
PATTERNS
ARE
VALUABLE
TO
INTERPRET
BAYES
CLASSIFIERS
WHERE
ACTIVITY
SAMPLES
ARE
MODELED
USING
SENSOR
DATA
AND
MODELS
CAN
BE
CONSTRUCTED
FROM
THE
DIS
GAUSSIAN
MIXTURES
HAVE
YIELDED
PROMISING
RESULTS
FOR
BATCH
COVERED
PATTERNS
TO
RECOGNIZE
INSTANCES
OF
THE
PATTERNS
LEARNING
GENERATIVE
PROBABILISTIC
GRAPHICAL
WHEN
THEY
OCCUR
IN
THE
FUTURE
MODELS
SUCH
AS
HIDDEN
MARKOV
MODELS
AND
DYNAMIC
BAYESIAN
NETWORKS
HAVE
BEEN
USED
TO
C
ANOMALY
DETECTION
MODEL
ACTIVITY
SEQUENCES
AND
TO
SMOOTH
RECOGNITION
RESULTS
WHILE
IT
IS
VALUE
TO
CHARACTERIZE
AND
RECOGNIZE
COMMON
OF
AN
ENSEMBLE
CLASSIFIER
DECISION
TREES
AS
WELL
AS
NORMAL
ACTIVITIES
THAT
ACCOUNT
FOR
THE
MAJORITY
OF
THE
SEN
BAGGING
AND
BOOSTING
METHODS
HAVE
BEEN
TESTED
SOR
EVENTS
THAT
ARE
GENERATED
FOR
HEALTH
APPLICATIONS
WE
DISCRIMINATIVE
APPROACHES
INCLUDING
SUPPORT
VECTOR
MA
ARE
ALSO
VERY
INTERESTED
IN
ABNORMAL
EVENTS
THESE
ABNOR
CHINES
AND
CONDITIONAL
RANDOM
FIELDS
MAL
EVENTS
MAY
INDICATE
A
CRISIS
OR
AN
ABRUPT
CHANGE
IN
A
WHICH
ATTEMPT
TO
MAXIMALLY
SEPARATE
ACTIVITY
CLUSTERS
HAVE
REGIMEN
THAT
IS
ASSOCIATED
WITH
HEALTH
DIFFICULTIES
ALSO
BEEN
EFFECTIVE
ABNORMAL
ACTIVITY
DETECTION
OR
ANOMALY
DETECTION
IS
ALSO
IMPORTANT
IN
SECURITY
MONITORING
WHERE
SUSPICIOUS
ACTIVITY
COMPLEXITY
MANY
OF
THESE
METHODS
ANALYZE
ACTIVITIES
NEED
TO
BE
FLAGGED
AND
HANDLED
ANOMALY
DETEC
PRESEGMENTED
ACTIVITY
SEQUENCES
THAT
HAVE
BEEN
COLLECTED
TION
IS
MOST
ACCURATE
WHEN
IT
IS
BASED
ON
BEHAVIORS
THAT
ARE
IN
CONTROLLED
SETTINGS
MORE
RECENTLY
ATTEMPTS
HAVE
BEEN
FREQUENT
AND
PREDICTABLE
THERE
ARE
COMMON
STATISTICAL
MADE
TO
PERFORM
AUTOMATIC
SEGMENTATION
OF
THE
DATA
INTO
METHODS
TO
AUTOMATICALLY
DETECT
AND
ANALYZE
ANOMALIES
SENSOR
EVENTS
THAT
BELONG
TO
THE
SAME
ACTIVITY
CLASS
INCLUDING
THE
BOX
PLOT
THE
CHART
AND
THE
CUSUM
CHART
STILL
OTHERS
HAVE
FOCUSED
ON
RECOGNIZING
ACTI
ANOMALIES
CAN
BE
CAPTURED
AT
DIFFERENT
POPULATION
VITIES
IN
REAL
TIME
FROM
CONTINUOUS
SENSOR
STREAMS
IN
SCALES
FOR
EXAMPLE
WHILE
MOST
OF
THE
POPULATION
MAY
ADDITION
RESEARCHERS
HAVE
ALSO
INVESTIGATED
METHODS
OF
PERFORM
ACTIVITY
A
ONE
PERSON
CARRIES
OUT
ACTIVITY
B
WHICH
LEVERAGING
INFORMATION
OR
MODELS
IN
ONE
SETTING
TO
BOOST
PINPOINTS
A
CONDITION
NEEDING
FURTHER
INVESTIGATION
ACTIVITY
RECOGNITION
FOR
A
NEW
SENSOR
NETWORK
A
NEW
ANOMALIES
MAY
ALSO
BE
DISCOVERED
AT
DIFFERENT
TEMPORAL
ENVIRONMENTAL
SETTING
OR
NEW
ACTIVITY
LA
SCALES
INCLUDING
SINGLE
EVENTS
DAYS
OR
WEEKS
BELS
ANOTHER
LEVEL
OF
COMPLEXITY
FOR
ACTIVITY
RECOGNI
LITTLE
ATTENTION
HAS
BEEN
DEVOTED
TO
ANOMALY
DETECTION
TION
IS
ANALYZING
DATA
FOR
INTERWOVEN
ACTIVITIES
OR
IN
AMBIENT
ENVIRONMENTS
THIS
IS
PARTLY
BECAUSE
THE
NOTION
PROCEEDINGS
OF
THE
IEEE
VOL
NO
DECEMBER
ACAMPORA
ET
AL
A
SURVEY
ON
AMBIENT
INTELLIGENCE
IN
HEALTHCARE
OF
AN
ANOMALY
IS
SOMEWHAT
ILL
DEFINED
MANY
POSSIBLE
CIALLY
TO
HELP
DEMENTIA
PATIENTS
COACH
IS
ONE
SUCH
INTERPRETATIONS
OF
ANOMALIES
HAVE
BEEN
OFFERED
AND
USE
SYSTEM
WHICH
PROVIDES
TASK
GUIDANCE
TO
ALZHEIMER
CASES
HAVE
EVEN
BEEN
GENERATED
FOR
AMI
ENVIRONMENTS
DISEASE
PATIENTS
IT
USES
A
HAND
CODED
REPRESENTATION
SOME
ALGORITHMIC
APPROACHES
HAVE
BEEN
SUGGESTED
OF
DETAILED
STEPS
OF
HAND
WASHING
AND
RELIES
ON
VISION
THAT
BUILD
ON
THE
NOTION
OF
EXPECTED
TEMPORAL
RELATIONSHIPS
TECHNIQUES
TO
RECOGNIZE
USER
STEPS
IF
A
USER
IS
UNABLE
TO
BETWEEN
EVENTS
AND
ACTIVITIES
OTHERS
TAG
EVENTS
AS
COMPLETE
A
PARTICULAR
STEP
DETAILED
INSTRUCTIONS
ARE
PRO
ANOMALIES
IF
THEY
OCCUR
RARELY
AND
THEY
ARE
NOT
ANTICIPATED
VIDED
ANOTHER
EXAMPLE
IS
PEAT
WHICH
ALSO
PROVIDES
TASK
FOR
THE
CURRENT
CONTEXT
GUIDANCE
TO
THE
USER
IT
MAINTAINS
A
DETAILED
MODEL
OF
THE
DAILY
PLAN
IN
TERMS
OF
HIERARCHAL
EVENTS
AND
TRACKS
D
PLANNING
AND
SCHEDULING
THEIR
EXECUTION
PEAT
HAS
THE
CAPABILITY
OF
RESCHEDULING
AUTOMATIC
PLANNING
AND
SCHEDULING
CAN
BE
USEFUL
IN
ACTIVITIES
IN
CASE
OF
UNEXPECTED
EVENTS
HOWEVER
IT
LACKS
MANY
AMI
APPLICATIONS
AUTOMATIC
PLANNING
TECHNIQUES
ANY
REAL
SENSORY
INFORMATION
FROM
THE
WORLD
EXCEPT
FOR
ACHIEVE
A
GOAL
STATE
BY
STARTING
FROM
AN
INITIAL
KNOWN
STATE
USER
FEEDBACK
AUTOMINDER
BY
POLLACK
ET
AL
IS
AND
CHOOSING
AMONG
POSSIBLE
ACTIONS
AT
EACH
STATE
PLAN
ANOTHER
SYSTEM
WHICH
PROVIDES
USERS
WITH
REMINDERS
ABOUT
NING
CAN
BE
USEFUL
IN
A
NUMBER
OF
DIFFERENT
AMI
CARE
THEIR
DAILY
ACTIVITIES
BY
REASONING
ABOUT
ANY
DISPARITIES
RELATED
SCENARIOS
FOR
EXAMPLE
PLANNING
CAN
BE
USED
TO
BETWEEN
WHAT
THE
CLIENT
IS
SUPPOSED
TO
DO
AND
WHAT
SHE
IS
SCHEDULE
DAILY
ACTIVITIES
IN
A
FLEXIBLE
MANNER
FOR
REMINDING
DOING
AND
MAKES
DECISIONS
ABOUT
WHETHER
AND
WHEN
TO
DEMENTIA
PATIENTS
ABOUT
THEIR
DAILY
ACTIVITIES
IT
ALSO
CAN
BE
ISSUE
REMINDERS
USED
IN
ORDER
TO
DETECT
ANY
POSSIBLE
DEFICIENCIES
IN
TASK
EXECUTION
AND
TO
HELP
DEMENTIA
PATIENTS
TO
COMPLETE
THOSE
E
DECISION
SUPPORT
STEPS
ANOTHER
USE
OF
PLANNING
IS
IN
AUTOMATING
DAILY
DECISION
SUPPORT
SYSTEMS
DSSS
HAVE
ROUTINES
IN
ORDER
TO
ALLOW
USERS
WITH
PHYSICAL
LIMITATIONS
BEEN
WIDELY
USED
IN
THE
FIELD
OF
HEALTHCARE
FOR
ASSISTING
TO
LIVE
A
MORE
INDEPENDENT
LIFESTYLE
PHYSICIANS
AND
OTHER
HEALTHCARE
PROFESSIONALS
WITH
IN
THE
PAST
MANY
PLANNING
TECHNIQUES
HAVE
BEEN
PRO
DECISION
MAKING
TASKS
FOR
EXAMPLE
FOR
ANALYZING
PATIENT
POSED
SOME
TECHNIQUES
INCLUDE
DECISION
THEORETIC
TECHNI
DATA
DSSS
ARE
MAINLY
BASED
ON
TWO
MAIN
QUES
E
G
MARKOV
DECISION
PROCESSES
SEARCH
STREAM
APPROACHES
KNOWLEDGE
BASED
AND
NONKNOWLEDGE
METHODS
E
G
FORWARD
AND
BACKWARD
SEARCH
BASED
GRAPH
BASED
TECHNIQUES
E
G
GRAPHPLAN
HIERARCHAL
THE
KNOWLEDGE
BASED
DSS
CONSISTS
OF
TWO
PRINCIPAL
TECHNIQUES
E
G
O
PLAN
AND
REACTIVE
PLANNING
COMPONENTS
THE
KNOWLEDGE
DATABASE
AND
THE
INFERENCE
TECHNIQUES
E
G
FOR
EXAMPLE
GRAPH
BASED
PLAN
ENGINE
THE
KNOWLEDGE
DATABASE
CONTAINS
THE
RULES
AND
NING
TECHNIQUES
REPRESENT
SEARCH
SPACE
OF
POSSIBLE
ACTIONS
IN
ASSOCIATIONS
OF
COMPILED
DATA
WHICH
OFTEN
TAKE
THE
FORM
OF
THE
FORM
OF
A
GRAPH
HIERARCHAL
PLANNING
TECHNIQUES
USE
HIE
IF
THEN
RULES
WHEREAS
THE
INFERENCE
ENGINE
COMBINES
THE
RARCHIES
TO
PREDEFINE
GROUPS
OF
ACTIONS
AND
REACTIVE
PLANNING
RULES
FROM
THE
KNOWLEDGE
DATABASE
WITH
THE
REAL
PATIENTS
TECHNIQUES
ADJUST
THE
PLAN
BASED
ON
SENSED
INFORMATION
DATA
IN
ORDER
TO
GENERATE
NEW
KNOWLEDGE
AND
TO
PROPOSE
A
AMI
APPLICATIONS
POSE
MANY
NEW
CHALLENGES
TO
THE
SET
OF
SUITABLE
ACTIONS
DIFFERENT
METHODOLOGIES
HAVE
BEEN
CLASSICAL
PLANNING
TECHNIQUES
FOR
EXAMPLE
THE
PLANNER
HAS
PROPOSED
FOR
DESIGNING
HEALTHCARE
KNOWLEDGE
DATABASES
TO
BE
FUNCTIONAL
IN
A
DYNAMIC
ENVIRONMENT
WHERE
THE
AND
INFERENCE
ENGINES
SUCH
AS
THE
ONTOLOGICAL
REPRESEN
OUTCOME
OF
THE
ACTIONS
AND
THEIR
DURATION
IS
NOT
DETERMIN
TATION
OF
INFORMATION
ISTIC
ALSO
THE
AVAILABILITY
OF
RESOURCES
MIGHT
CHANGE
DUE
TO
THE
NONKNOWLEDGE
BASED
DSSS
HAVE
NO
DIRECT
CLINICAL
USER
MOBILITY
OR
OTHER
FACTORS
THEREFORE
MORE
ADVANCED
KNOWLEDGE
ABOUT
A
PARTICULAR
HEALTHCARE
PROCESS
HOWEVER
PLANNING
TECHNIQUES
HAVE
BEEN
PROPOSED
BY
EXTENDING
THEY
LEARN
CLINICAL
RULES
FROM
PAST
EXPERIENCES
AND
BY
CLASSICAL
PLANNING
TECHNIQUES
ONE
EXAMPLE
IS
THE
FINDING
PATTERNS
IN
CLINICAL
DATA
FOR
EXAMPLE
VARIOUS
MA
DISTRIBUTED
HIERARCHAL
TASK
NETWORK
D
HTN
TECHNIQUE
CHINE
LEARNING
ALGORITHMS
SUCH
AS
DECISION
TREES
REPRESENT
WHICH
EXTENDS
THE
HIERARCHAL
TASK
NETWORK
HTN
IT
METHODOLOGIES
FOR
LEARNING
HEALTHCARE
AND
CLINICAL
USES
A
CENTRALIZED
APPROACH
TO
MANAGE
THE
DISTRIBUTED
CA
KNOWLEDGE
PABILITIES
PROVIDED
BY
THE
DISTRIBUTED
DEVICES
THE
DISTRIB
BOTH
OF
THESE
APPROACHES
COULD
BE
USED
IN
CONJUNCTION
UTED
DEVICES
MIGHT
BE
AVAILABLE
IN
A
PERMANENT
OR
TRANSIENT
WITH
AMI
TECHNOLOGIES
INDEED
THE
SENSITIVE
ADAPTIVE
AND
MANNER
D
HTN
HAS
BEEN
STUDIED
IN
THE
CONTEXT
OF
CARE
FOR
UNOBTRUSIVE
NATURE
OF
AMI
IS
PARTICULARLY
SUITABLE
FOR
DE
DIABETIC
PATIENTS
AT
HOME
WHERE
DIFFERENT
HOME
DEVICES
SIGNING
DECISION
SUPPORT
SYSTEMS
CAPABLE
OF
SUPPORTING
COMMUNICATE
AND
COORDINATE
PLANS
WITH
EACH
OTHER
IN
A
MEDICAL
STAFFS
IN
CRITICAL
DECISIONS
IN
PARTICULAR
AMI
DISTRIBUTED
MANNER
FOR
EXAMPLE
DATA
FROM
MONITORING
TECHNOLOGY
ENABLES
THE
DESIGN
OF
THE
THIRD
GENERATION
OF
DEVICES
MIGHT
REQUIRE
ACTIONS
SUCH
AS
ADJUSTING
THE
ROOM
TELECARE
SYSTEMS
THE
FIRST
GENERATION
WAS
THE
PANIC
ALARMS
TEMPERATURE
SUGGESTING
INSULIN
INJECTION
OR
CONTACTING
GADGETS
OFTEN
WORN
AS
PENDANTS
OR
AROUND
THE
WRIST
TO
MEDICAL
HELP
ALLOW
A
PERSON
TO
SUMMON
HELP
IN
THE
CASE
OF
A
FALL
OR
OTHER
SEVERAL
AMI
SYSTEMS
HAVE
BEEN
REPORTED
IN
THE
LITERA
KINDS
OF
HEALTH
EMERGENCY
THE
SECOND
GENERATION
OF
TELE
TURE
WHICH
USE
AUTOMATED
PLANNING
AND
SCHEDULING
ESPE
CARE
SYSTEMS
USES
SENSORS
TO
AUTOMATICALLY
DETECT
SITUATIONS
VOL
NO
DECEMBER
PROCEEDINGS
OF
THE
IEEE
ACAMPORA
ET
AL
A
SURVEY
ON
AMBIENT
INTELLIGENCE
IN
HEALTHCARE
WHERE
ASSISTANCE
OR
MEDICAL
DECISIONS
ARE
NEEDED
FINALLY
E
TEXTILE
OR
SMART
FABRICS
THE
MAJORITY
OF
THESE
SENSORS
THE
THIRD
GENERATION
REPRESENTS
AMI
BASED
SYSTEMS
WHICH
ALLOW
FOR
NONINVASIVE
MONITORING
OF
PHYSIOLOGICAL
SIGNS
MOVE
AWAY
FROM
THE
SIMPLE
REACTIVE
APPROACH
AND
ADOPT
A
THOUGH
SOME
PHYSIOLOGICAL
MEASUREMENTS
SUCH
AS
EEG
PROACTIVE
STRATEGY
CAPABLE
OF
ANTICIPATING
EMERGENCY
STILL
REQUIRE
THE
USE
OF
INVASIVE
DEVICES
AND
SENSORS
E
G
SITUATIONS
AS
A
RESULT
DSSS
COULD
BE
USED
WITH
MULTIMODAL
MEASURING
EEG
REQUIRES
THE
USE
OF
ELECTRODES
REGARDLESS
SENSING
AND
WEARABLE
COMPUTING
TECHNOLOGIES
FOR
CON
OF
THE
FORM
OF
THE
SENSORS
SUCH
SENSORS
ALLOW
THE
PATIENTS
STANTLY
MONITORING
ALL
VITAL
SIGNS
OF
A
PATIENT
AND
FOR
WITH
CHRONIC
DISEASES
TO
BE
IN
CONTROL
OF
THEIR
HEALTH
CON
ANALYZING
SUCH
DATA
IN
ORDER
TO
TAKE
REAL
TIME
DECISIONS
AND
DITION
BY
BENEFITING
FROM
CONTINUOUS
MONITORING
AND
OPPORTUNELY
SUPPORT
PEOPLE
ANOMALOUS
SITUATION
DETECTION
ACHIEVING
CONTINUOUS
FINALLY
DSSS
ARE
JOINTLY
USED
WITH
THE
AMI
PARADIGM
MONITORING
IS
ALMOST
IMPOSSIBLE
IN
CONVENTIONAL
HEALTHCARE
FOR
ENHANCING
COMMUNICATIONS
AMONG
HEALTH
PERSONNEL
SETTINGS
WHERE
TYPICAL
MEASURES
ARE
TAKEN
ONLY
DURING
SUCH
AS
DOCTORS
AND
NURSES
FOR
EXAMPLE
ANYA
ET
AL
HAVE
OCCASIONAL
DOCTOR
VISITS
THE
USE
OF
SUCH
SENSORS
WILL
ALSO
INTRODUCED
A
DSS
BASED
ON
CONTEXT
AWARE
KNOWLEDGE
ALLOW
THE
HEALTHY
ADULTS
TO
KEEP
TRACK
OF
THEIR
HEALTH
STATUS
MODELING
AIMED
AT
FACILITATING
THE
COMMUNICATION
AND
AND
TO
TAKE
THE
NECESSARY
STEPS
FOR
ENHANCING
THEIR
LIFESTYLE
IMPROVING
THE
CAPABILITY
TO
TAKE
DECISIONS
AMONG
HEALTH
GOUAUX
ET
AL
DESCRIBE
A
WEARABLE
PERSONAL
ECG
CARE
PERSONAL
LOCATED
IN
DIFFERENT
GEOGRAPHICAL
SITES
MONITORING
DEVICE
PEM
FOR
EARLY
DETECTION
OF
CARDIAC
EVENTS
WHICH
DETECTS
AND
REPORTS
ANOMALIES
BY
GENERATING
F
ANONYMIZATION
AND
PRIVACY
PRESERVING
TECHNIQUES
DIFFERENT
ALARM
LEVELS
ANOTHER
EXAMPLE
IS
AMON
WHICH
IS
AS
AMBIENT
INTELLIGENT
SYSTEMS
BECOME
MORE
UBIQUI
IN
THE
FORM
OF
A
WRISTBAND
AND
MEASURES
VARIOUS
PHYSIOLO
TOUS
MORE
INFORMATION
WILL
BE
COLLECTED
ABOUT
INDIVIDUALS
GICAL
SIGNALS
TODAY
THERE
ARE
SEVERAL
COMMERCIALLY
AND
THEIR
LIVES
WHILE
THE
INFORMATION
IS
INTENDED
TO
AVAILABLE
HEALTH
MONITORING
DEVICES
SUCH
AS
HEALTHBUDDY
PROMOTE
THE
WELLBEING
OF
INDIVIDUALS
IT
MAY
BE
CONSIDERED
BY
BOSCH
TELESTATION
BY
PHILIPS
HEALTHGUIDE
AN
INVASION
OF
PRIVACY
AND
IF
INTERCEPTED
BY
OTHER
PARTIES
BY
INTEL
AND
GENESIS
BY
HONEYWELL
A
NUMBER
COULD
BE
USED
FOR
MALICIOUS
PURPOSES
OF
ACADEMIC
PROJECTS
ALSO
HAVE
TRIED
TO
INTEGRATE
MONITORING
WHILE
SOME
PRIVACY
CONCERNS
FOCUS
ON
THE
PERCEPTION
OF
DEVICES
WITH
CLOTHING
FABRICS
INCLUDING
THE
WEALTHY
INTRUSIVE
MONITORING
MANY
HEAVILY
DEPLOYED
INTERNET
PROJECT
BIOTEX
PROJECT
AND
MAGIC
PROJECT
GADGETS
AND
CURRENT
AMBIENT
INTELLIGENT
SYSTEMS
ARE
NEARLY
FOR
EXAMPLE
BIOTEX
MONITORS
SORE
CONDITIONS
DEVOID
OF
SECURITY
AGAINST
ADVERSARIES
AND
MANY
OTHERS
BASED
ON
PH
CHANGES
AND
INFLAMMATORY
PROTEINS
CONCEN
EMPLOY
ONLY
CRUDE
METHODS
FOR
SECURING
THE
SYSTEM
FROM
TRATION
OTHER
PROJECTS
HAVE
TRIED
TO
PROVIDE
A
VARIETY
INTERNAL
OR
EXTERNAL
ATTACKS
THE
DEFINITION
OF
PRIVACY
WILL
OF
ACCESSIBLE
MEDICAL
IMPLANTS
FOR
EXAMPLE
THE
HEALTHY
CONTINUE
TO
EVOLVE
AS
AMBIENT
INTELLIGENT
SYSTEMS
MATURE
AIMS
PROJECT
FOCUSES
ON
DEVELOPING
A
RANGE
OF
MEDICAL
THIS
IS
HIGHLIGHTED
BY
THE
FACT
THAT
EVEN
IF
PERSONAL
IMPLANTS
TO
HELP
THE
AGING
POPULATION
DEVELOPING
INFORMATION
IS
NOT
DIRECTLY
OBTAINED
BY
AN
UNWANTED
PARTY
COMPLETELY
NONINVASIVE
METHODS
FOR
HEALTH
MONITORING
IS
MUCH
OF
THE
INFORMATION
CAN
BE
INFERRED
EVEN
FROM
AGGRE
ANOTHER
ACTIVE
RESEARCH
AREA
FOR
EXAMPLE
MASUDA
ET
AL
GATED
DATA
FOR
THIS
REASON
A
NUMBER
OF
APPROACHES
ARE
MEASURE
PHYSIOLOGICAL
SIGNS
SUCH
AS
RESPIRATION
RATE
BEING
DEVELOPED
TO
ENSURE
THAT
IMPORTANT
INFORMATION
AND
HEART
BEAT
BY
MEASURING
PERTURBATIONS
IN
THE
PRESSURE
CANNOT
BE
GLEANED
FROM
MINED
PATTERNS
OF
AN
AIR
FILLED
MATTRESS
AND
RELYING
ON
THE
LOW
FREQUENCY
CHARACTERISTICS
OF
HEART
AND
RESPIRATION
SIMILARLY
IV
APPLICATIONS
ANDOH
ET
AL
HAVE
DEVELOPED
A
SLEEP
MONITORING
MATTRESS
TO
ANALYZE
RESPIRATION
RATE
HEART
RATE
SNORING
AND
BODY
DIFFERENT
KINDS
OF
AMI
APPLICATIONS
FOR
HEALTHCARE
HAVE
MOVEMENT
THE
SELF
SMART
HOME
PROJECT
ALSO
MONI
BEEN
DEVELOPED
IN
ACADEMIA
AND
INDUSTRY
AS
SUMMARIZED
TORS
VARIOUS
FACTORS
SUCH
AS
POSTURE
BODY
MOVEMENT
IN
TABLE
THIS
SECTION
DISCUSSES
EACH
APPLICATION
CLASS
BREATHING
OXYGEN
IN
THE
BLOOD
AIRFLOW
AT
MOUTH
AND
NOSE
BY
PRESENTING
BOTH
SCIENTIFIC
AND
REAL
WORLD
FRAMEWORKS
AND
APNEA
USING
PRESSURE
SENSOR
ARRAYS
CAMERAS
AND
AND
HIGHLIGHTS
THE
BENEFITS
PROVIDED
TO
PATIENTS
ELDERLY
MICROPHONES
AND
SO
ON
CONTINUOUS
BEHAVIORAL
MONITORING
IN
ADDITION
TO
A
CONTINUOUS
MONITORING
MONITORING
PHYSIOLOGICAL
MEASURES
ANOTHER
POTENTIAL
MONITORING
APPLICATION
IS
BEHAVIORAL
MONITORING
BEHAV
CONTINUOUS
HEALTH
MONITORING
IN
THE
PAST
DECADE
A
IORAL
MONITORING
ESPECIALLY
CAN
BE
USEFUL
IN
ASSISTED
LIVING
VARIETY
OF
NONINVASIVE
SENSORS
HAVE
BEEN
DEVELOPED
FOR
SETTINGS
AND
MONITORING
OF
INDIVIDUALS
WITH
MENTAL
MEASURING
AND
MONITORING
VARIOUS
PHYSIOLOGICAL
PARAM
DISABILITIES
SUCH
SYSTEMS
CAN
ASSESS
MENTAL
HEALTH
AND
ETERS
SUCH
AS
ECG
EEG
EDA
RESPIRATION
AND
EVEN
BIO
COGNITIVE
STATUS
OF
INHABITANTS
IN
A
CONTINUAL
AND
NATURAL
CHEMICAL
PROCESSES
SUCH
AS
WOUND
HEALING
SOME
OF
THOSE
ISTIC
MANNER
THEY
CAN
ALSO
PROVIDE
AUTOMATED
ASSISTANCE
SENSORS
ARE
IN
THE
FORM
OF
WEARABLE
DEVICES
SUCH
AS
WRIST
AND
CAN
DECREASE
THE
CAREGIVER
BURDEN
IN
SOME
CASES
A
BANDS
WHILE
OTHERS
ARE
EMBEDDED
INTO
TEXTILE
KNOWN
AS
SINGLE
ACTIVITY
IS
MONITORED
FOR
EXAMPLE
NAMBUET
AL
PROCEEDINGS
OF
THE
IEEE
VOL
NO
DECEMBER
ACAMPORA
ET
AL
A
SURVEY
ON
AMBIENT
INTELLIGENCE
IN
HEALTHCARE
MONITOR
WATCHING
TV
FOR
DIAGNOSING
HEALTH
CONDITIONS
THE
ASSISTANCE
IF
NEEDED
THOSE
SERVICES
ESPECIALLY
CAN
BE
MAJORITY
OF
RESEARCH
PROJECTS
MONITOR
A
SUBSET
OF
DAILY
TASKS
USEFUL
FOR
THE
OLDER
ADULTS
WHO
ARE
SUFFERING
FROM
PHYSICAL
FOR
EXAMPLE
THE
CASAS
PROJECT
MONITORS
A
SUBSET
OF
AND
COGNITIVE
DECLINE
DAILY
TASKS
TO
IDENTIFY
CONSISTENCY
AND
COMPLETENESS
IN
DAILY
WE
ALREADY
HAVE
DISCUSSED
HOW
BEHAVIORAL
MONITORING
ACTIVITIES
OF
DEMENTIA
PATIENTS
THE
IMMED
PROJECT
AND
FALL
DETECTION
METHODS
CAN
BE
USEFUL
FOR
THE
ELDERLY
MONITORS
INSTRUMENTED
ACTIVITIES
OF
DAILY
LIVING
IADL
IN
MEDICATION
MANAGEMENT
IS
ANOTHER
AREA
WHICH
CAN
DEMENTIA
PATIENTS
BY
USING
A
WEARABLE
CAMERA
TO
MONITOR
PROVIDE
GREAT
BENEFIT
TO
THE
ELDERLY
THE
MA
THE
LOSS
OF
MOTOR
OR
COGNITIVE
CAPABILITIES
OTHER
RE
JORITY
OF
OLDER
ADULTS
TAKE
MANY
DIFFERENT
MEDICATIONS
AND
SEARCHERS
HAVE
WORKED
ON
RECOGNIZING
SOCIAL
ACTIVITY
ESPE
THEY
USUALLY
FORGET
MEDICATION
DOSAGE
AND
TIMING
DUE
TO
CIALLY
IN
NURSING
HOMES
IDENTIFYING
ANY
COGNITIVE
DECLINE
USING
APPROPRIATE
CONTEXTUAL
INFORMA
CHANGES
IN
ACTIVITIES
MIGHT
BE
AN
INDICATOR
OF
COGNITIVE
OR
TION
OBTAINED
FROM
VARIOUS
SENSORS
MEDICATION
REMINDERS
PHYSICAL
DECLINE
FOR
EXAMPLE
INDICATORS
SUCH
AS
CHANGES
IN
CAN
BE
DELIVERED
IN
A
CONTEXT
AWARE
AND
FLEXIBLE
MANNER
MOVEMENT
PATTERNS
WALKING
SPEED
NUMBER
OF
OUTGOINGS
CARE
PERSONNEL
CAN
BE
CONTACTED
IF
NONCOMPLIANCE
IS
DE
AND
SLEEP
RHYTHM
HAVE
BEEN
IDENTIFIED
AS
EARLY
SIGNS
OF
TECTED
FOR
EXAMPLE
JOHN
WILL
BE
REMINDED
ABOUT
HIS
DEMENTIA
MEDICATIONS
RIGHT
AFTER
FINISHING
HIS
BREAKFAST
BUT
HE
WILL
NOT
BE
REMINDED
IF
HE
IS
WATCHING
HIS
FAVORITE
PROGRAM
ON
MONITORING
FOR
EMERGENCY
DETECTION
THERE
ALSO
HAVE
TV
OR
IF
HE
IS
TALKING
ON
THE
PHONE
IF
JOHN
FORGETS
TO
TAKE
BEEN
SOME
PROJECTS
TO
MONITOR
EMERGENCY
SITUATIONS
IN
THE
HIS
MEDICATION
MORE
THAN
A
CERTAIN
NUMBER
OF
TIMES
UNITED
KINGDOM
BRITISH
TELECOM
BT
AND
LIVERPOOL
CITY
DEPENDING
ON
THE
MEDICATION
HIS
DOCTOR
WILL
BE
AUTO
COUNCIL
HAVE
DEVELOPED
A
PROJECT
ON
TELECARE
TECHNOLOGY
MATICALLY
CONTACTED
CURRENT
MEDICATION
MANAGEMENT
SYS
WHICH
MONITORS
RESIDENTS
USING
A
VARIETY
OF
SENSORS
SUCH
AS
TEMS
ARE
NOT
YET
FULLY
CONTEXT
AWARE
THOUGH
THERE
HAS
PASSIVE
INFRARED
PIR
SENSORS
IN
CASE
OF
ANY
DETECTED
BEEN
SOME
GREAT
PROGRESS
FOR
EXAMPLE
IMAT
IS
A
USER
HAZARDS
THE
SYSTEM
ASKS
THE
RESIDENTS
IF
THEY
ARE
OK
OTHER
FRIENDLY
MEDICATION
MANAGEMENT
SYSTEM
AN
IMAT
WISE
THE
SELECTED
PERSONNEL
ARE
NOTIFIED
ANOTHER
IMPOR
USER
HAS
NO
NEED
TO
UNDERSTAND
THE
DIRECTIONS
OF
HER
HIS
TANT
AREA
OF
EMERGENCY
DETECTION
IS
FALL
DETECTION
WHICH
MEDICATIONS
RATHER
IMAT
ENABLES
THE
PHARMACIST
OF
EACH
CAN
BE
ESPECIALLY
USEFUL
FOR
THE
ELDERLY
AS
FALLS
CONTRIBUTE
TO
USER
TO
EXTRACT
A
MACHINE
READABLE
MEDICATION
SCHEDULE
A
HIGH
RATE
OF
MORBIDITY
AND
MORTALITY
IN
ELDERLY
FALL
SPECIFICATION
FROM
THE
USER
PRESCRIPTIONS
OR
OVER
THE
DETECTION
TECHNIQUES
RELY
ON
SEVERAL
TECHNOLOGIES
WEARABLE
COUNTER
DESCRIPTIONS
ONCE
LOADED
INTO
AN
IMAT
DISPENSER
DEVICES
AMBIENT
SENSORS
AND
CAMERAS
WEARABLE
FALL
OR
SCHEDULE
MANAGER
THE
TOOL
AUTOMATICALLY
GENERATES
A
DETECTION
SYSTEMS
MEASURE
POSTURE
AND
MOTION
USING
SEN
MEDICATION
SCHEDULE
OTHER
MEDICATION
MANAGEMENT
TOOLS
SORS
SUCH
AS
ACCELEROMETER
AND
GYROSCOPE
AND
BY
MEASURING
ALSO
HAVE
BEEN
PROPOSED
BY
RESEARCHERS
SUCH
AS
THE
ORIENTATION
AND
ACCELERATION
AMBIENT
FALL
MAGIC
MEDICINE
CABINET
WHICH
CAN
PROVIDE
REMINDER
DETECTION
SYSTEMS
USE
AMBIENT
SENSORS
SUCH
AS
PIR
SENSORS
AND
CAN
INTERACT
WITH
HEALTHCARE
PROFESSIONALS
OR
THE
AND
PRESSURE
SENSORS
TO
DETECT
FALLS
THEY
ALSO
RELY
ON
SMART
MEDICINE
CABINET
WHICH
USES
RFID
TAGS
TO
TECHNIQUES
SUCH
AS
FLOOR
VIBRATION
DETECTION
AND
AMBIENT
MONITOR
MEDICATION
USAGE
AND
CAN
COMMUNICATE
WITH
A
AUDIO
ANALYSIS
TO
DETECT
POSSIBLE
FALL
FINALLY
CELLPHONE
VISION
BASED
FALL
DETECTION
SYSTEMS
EXTRACT
VIDEO
FEATURES
BESIDES
MEDICATION
MANAGEMENT
OTHER
COGNITIVE
OR
SUCH
AS
D
MOTION
SHAPE
AND
INACTIVITY
TO
DETECT
FALLS
THOTICS
TOOLS
CAN
BE
QUITE
USEFUL
FOR
PEOPLE
WITH
MENTAL
THERE
ARE
ALSO
SOME
PREVENTIVE
FALL
DETECTION
DISABILITIES
ESPECIALLY
OLDER
ADULTS
SUFFERING
FROM
DEMEN
TOOLS
SUCH
AS
THE
SMART
CANE
DEVELOPED
BY
WU
ET
AL
WHICH
TIA
COACH
IS
A
COGNITIVE
ORTHOTICS
TOOL
WHICH
RELIES
ON
CLASSIFIES
CANE
USAGE
AND
WALKING
PATTERNS
AND
INFORMS
THE
PLANNING
AND
VISION
TECHNIQUES
TO
GUIDE
A
USER
THROUGH
ELDERLY
IN
CASE
OF
HIGH
RISK
OF
FALLING
HAND
WASHING
TASK
OTHER
COGNITIVE
ORTHOTICS
TOOLS
IT
SHOULD
BE
NOTED
THAT
THERE
IS
A
HUGE
POTENTIAL
FOR
SUCH
AS
PEAT
AND
AUTOMINDER
ALSO
USE
AUTO
COMBINING
AND
FUSING
DATA
FROM
VARIOUS
SENSORS
SUCH
AS
MATED
PLANNING
TO
PROVIDE
GENERIC
REMINDERS
ABOUT
DAILY
PHYSIOLOGICAL
SENSORS
WITH
ELECTRONIC
HEALTH
RECORDS
ACTIVITIES
THEY
CAN
ADJUST
THEIR
SCHEDULES
IN
CASE
OF
ANY
EHRS
OR
DAILY
ACTIVITY
INFORMATION
THIS
WILL
ALLOW
CHANGES
IN
THE
OBSERVED
ACTIVITIES
COGNITIVE
ORTHOTICS
THE
HEALTHCARE
TO
SHIFT
FROM
CURE
TO
PREVENTION
BY
EARLY
TOOLS
ALSO
CAN
BE
USED
FOR
COGNITIVE
REHABILITATION
DETECTION
OF
DISEASES
USING
CONTINUOUS
MONITORING
AS
WELL
SENSECAM
IS
A
SMALL
WEARABLE
CAMERA
DEVELOPED
BY
AS
TO
REDUCE
THE
NEED
FOR
INSTITUTIONAL
CARE
BY
SHIFTING
THE
MICROSOFT
WHICH
CAPTURES
A
DIGITAL
RECORD
OF
THE
WEARER
CARE
TO
A
PERSONALIZED
LEVEL
DAY
IN
TERMS
OF
IMAGES
IN
ADDITION
AND
A
LOG
OF
SENSOR
DATA
IT
HAS
BEEN
SHOWN
TO
HELP
DEMENTIA
PATIENTS
TO
B
ASSISTED
LIVING
RECOLLECT
ASPECTS
OF
EARLIER
EXPERIENCES
THAT
HAVE
SUBSE
AMI
TECHNOLOGY
CAN
ALLOW
INDIVIDUALS
WITH
DISABILITIES
QUENTLY
BEEN
FORGOTTEN
THEREBY
ACTING
AS
A
RETROSPECTIVE
TO
MAINTAIN
A
MORE
INDEPENDENT
LIFESTYLE
USING
HOME
AU
MEMORY
AID
HOEY
ET
AL
ALSO
DESCRIBE
THE
DEVELOP
TOMATION
IT
CAN
OFFER
THEM
CONTINUOUS
COGNITIVE
AND
PHY
MENT
OF
A
COGNITIVE
REHABILITATION
TOOL
TO
ASSIST
ART
THERA
SICAL
MONITORING
AND
CAN
PROVIDE
THEM
WITH
REAL
TIME
PISTS
WORKING
WITH
OLDER
ADULTS
WITH
DEMENTIA
VOL
NO
DECEMBER
PROCEEDINGS
OF
THE
IEEE
ACAMPORA
ET
AL
A
SURVEY
ON
AMBIENT
INTELLIGENCE
IN
HEALTHCARE
AMI
TOOLS
ALSO
CAN
BE
USEFUL
FOR
PREVENTING
WANDERING
OGIES
FOR
EXAMPLE
THE
ALARM
NET
PROJECT
IS
AN
BEHAVIOR
OF
OLDER
ADULTS
WHO
SUFFER
FROM
DEMENTIA
THERE
ASSISTED
LIVING
AND
RESIDENTIAL
MONITORING
NETWORK
FOR
PER
ARE
A
NUMBER
OF
OUTDOOR
WANDERING
PREVENTION
TOOLS
VASIVE
HEALTHCARE
DEVELOPED
AT
THE
UNIVERSITY
OF
VIRGINIA
KOPAL
AND
OUTCARE
SUPPORT
ISSUES
RELATED
TO
BLACKSBURG
VA
USA
IT
INTEGRATES
ENVIRONMENTAL
AND
DISORIENTATION
BY
CONTACTING
THE
CAREGIVER
IN
CASE
OF
LEAVING
PHYSIOLOGICAL
SENSORS
IN
A
SCALABLE
HETEROGENEOUS
ARCHI
PREDEFINED
ROUTES
OR
DEVIATING
FROM
DAILY
SIGNATURE
ROUTES
TECTURE
TO
SUPPORT
REAL
TIME
DATA
COLLECTION
AND
PROCESSING
A
NUMBER
OF
TOOLS
HAVE
ALSO
BEEN
DEVELOPED
FOR
PREVENTING
THE
ALARM
NET
NETWORK
CREATES
A
CONTINUOUS
MEDICAL
INDOOR
WANDERING
FOR
EXAMPLE
LIN
ET
AL
USE
RFID
HISTORY
WHILE
PRESERVING
RESIDENT
COMFORT
AND
PRIVACY
BY
TECHNOLOGY
TO
DETECT
IF
PEOPLE
PRONE
TO
DISORIENTATION
E
G
USING
UNOBTRUSIVE
AMBIENT
SENSORS
COMBINED
WITH
WEAR
CHILDREN
OR
ELDERLY
HAVE
APPROACHED
A
DANGEROUS
AREA
AND
ABLE
INTERACTIVE
DEVICES
THE
PROJECT
COMPLETE
CROMBAG
PROPOSES
USING
VIRTUAL
INDOOR
FENCING
SOME
AMBIENT
ASSISTED
LIVING
EXPERIMENT
CAALYX
IS
COMMERCIALLY
AVAILABLE
PRODUCTS
FOR
WANDERING
PREVENTION
ANOTHER
PROJECT
FOR
INCREASING
ELDERLY
AUTONOMY
AND
SELF
INCLUDE
SAFEDOOR
AND
SAFETYBED
FOR
EXAMPLE
CONFIDENCE
BY
DEVELOPING
A
WEARABLE
LIGHT
DEVICE
CAPABLE
SAFEDOOR
RAISES
AN
ALARM
IF
A
PERSON
WALKS
OUT
A
DOOR
WITH
OF
MEASURING
SPECIFIC
VITAL
SIGNS
AND
DETECTING
FALLS
AND
FOR
OUT
OPENING
IT
TO
PREVENT
NIGHTTIME
WANDERING
NAVIGATION
COMMUNICATING
IN
REAL
TIME
WITH
CARE
PROVIDERS
IN
CASE
OF
ASSISTANCE
TOOLS
ALSO
HAVE
BEEN
DEVELOPED
TO
HELP
ELDERLY
AN
EMERGENCY
MYHEART
IS
AN
INTEGRATED
PROJECT
FOR
SUFFERING
FROM
EARLY
SIGNS
OF
DEMENTIA
OPPORTUNITY
DEVELOPING
SMART
ELECTRONIC
AND
TEXTILE
SYSTEMS
AND
SER
KNOCKS
IS
A
MOBILE
APPLICATION
WHICH
PROVIDES
PUBLIC
VICES
THAT
EMPOWER
THE
USERS
TO
TAKE
CONTROL
OF
THEIR
OWN
TRANSIT
SYSTEM
GUIDANCE
BY
LEARNING
USER
ROUTES
HEALTH
STATUS
THE
SYSTEM
USES
WEARABLE
TECHNOLOGY
A
NUMBER
OF
AMI
PROJECTS
TRY
TO
PROVIDE
COMPREHEN
AND
SMART
FABRICS
TO
MONITOR
PATIENTS
VITAL
BODY
SIGNS
IN
SIVE
ASSISTANCE
THROUGH
A
VARIETY
OF
SERVICES
ROBOCARE
IS
ORDER
TO
PROVIDE
PROPER
WELLBEING
RECOMMENDATIONS
TO
THE
AN
ASSISTED
LIVING
PROJECT
PROVIDING
ASSISTANCE
TO
PEOPLE
USER
THE
SAPHIRE
PROJECT
DEVELOPS
AN
INTELLIGENT
WITH
DISABILITIES
USING
A
COMBINATION
OF
SOFTWARE
ROBOTS
HEALTHCARE
MONITORING
AND
DECISION
SUPPORT
SYSTEM
BY
INTELLIGENT
SENSORS
AND
HUMANS
IT
USES
A
TRACKING
INTEGRATING
THE
WIRELESS
MEDICAL
SENSOR
DATA
WITH
HOSPITAL
SYSTEM
FOR
TRACKING
PEOPLE
AND
ROBOTS
BY
EXPLOITING
VISION
INFORMATION
SYSTEMS
IN
THE
SAPHIRE
PROJECT
THE
TECHNIQUES
TO
DETERMINE
VARIOUS
D
POSITIONS
IT
ALSO
RE
PATIENT
MONITORING
WILL
BE
ACHIEVED
BY
USING
AGENT
TECH
LIES
ON
A
TASK
EXECUTION
AND
MONITORING
COMPONENT
TO
NOLOGY
COMPLEMENTED
WITH
INTELLIGENT
DECISION
SUPPORT
RECOGNIZE
CURRENT
SITUATION
AND
TO
COMPARE
IT
WITH
THE
SYSTEMS
BASED
ON
CLINICAL
PRACTICE
GUIDELINES
THE
OBSERVA
EXPECTED
SCHEDULE
THE
AWARE
HOME
RESEARCH
INITIATIVE
TIONS
RECEIVED
FROM
WIRELESS
MEDICAL
SENSORS
TOGETHER
WITH
AHRI
AT
GEORGIA
TECH
ATLANTA
GA
USA
INCLUDES
A
THE
PATIENT
MEDICAL
HISTORY
WILL
BE
USED
IN
THE
REASONING
NUMBER
OF
DIFFERENT
PROJECTS
FOCUSED
ON
PROVIDING
ASSIS
PROCESS
THE
PATIENT
HISTORY
STORED
IN
MEDICAL
INFORMA
TANCE
TO
ELDERLY
SUCH
AS
THE
INDEPENDENT
LIFESTYLE
ASSIS
TION
SYSTEMS
WILL
BE
ACCESSED
THROUGH
SEMANTICALLY
TANT
PROJECT
WHICH
MONITORS
THE
BEHAVIOR
OF
ELDERLY
IN
A
ENRICHED
WEB
SERVICES
PASSIVE
MANNER
AND
ALERTS
CAREGIVERS
IN
CASE
OF
EMERGENCY
E
G
FALL
THE
TECHNOLOGY
COACH
IS
ANOTHER
AHRI
C
THERAPY
AND
REHABILITATION
PROJECT
WHICH
WATCHES
THE
USE
OF
HOME
MEDICAL
DEVICES
BY
ACCORDING
TO
THE
DISABILITY
AND
REHABILITATION
TEAM
AT
THE
ELDERLY
AND
PROVIDES
APPROPRIATE
FEEDBACK
AND
GUID
THE
WORLD
HEALTH
ORGANIZATION
WHO
THE
ESTIMATED
ANCE
FOR
BETTER
USE
SMART
HOME
PROJECTS
SUCH
AS
NUMBER
OF
PEOPLE
WHO
REQUIRE
REHABILITATION
SERVICES
IS
CASAS
ALSO
TRY
TO
PROVIDE
COMPREHENSIVE
MONITORING
AND
CONTINUOUSLY
GROWING
OF
THE
ENTIRE
WORLD
POPULA
ASSISTANCE
SERVICES
IN
A
NONINVASIVE
MANNER
BY
RELYING
ON
TION
NEVERTHELESS
THE
CURRENT
HEALTHCARE
SOLUTIONS
VARIOUS
MACHINE
LEARNING
AND
DATA
MINING
TECHNIQUES
TO
AND
TECHNOLOGIES
ARE
NOT
NEARLY
SUFFICIENT
TO
FULFILL
THE
MAKE
SENSE
OF
SENSOR
DATA
REHABILITATION
NEEDS
IN
SUCH
SCENARIOS
AMI
CAN
SHAPE
AMI
SYSTEMS
ALSO
CAN
PROVIDE
GREAT
HELP
TO
VISUALLY
INNOVATIVE
REHABILITATIVE
APPROACHES
THAT
SUPPORT
INDIVI
IMPAIRED
PEOPLE
A
NUMBER
OF
DIFFERENT
SYSTEMS
HAVE
BEEN
DUALS
TO
HAVE
ACCESS
TO
REHABILITATION
RESOURCES
THIS
CAN
BE
PROPOSED
FOR
BLIND
NAVIGATION
RELYING
ON
VARIOUS
SENSORS
ACHIEVED
BY
DEVELOPING
AD
HOC
REHABILITATION
SYSTEMS
BASED
SUCH
AS
RFID
TAGS
INFRARED
SENSORS
AND
GPS
TECHNOLOGY
ON
SENSOR
NETWORKS
AND
OTHER
TECHNOLOGICAL
APPROACHES
CHUMKAMON
ET
AL
USED
RFID
TAGS
TO
DEVELOP
A
SUCH
AS
ROBOTICS
AND
BRAIN
COMPUTER
INTERFACES
BCI
TRACKING
SYSTEM
FOR
INDOOR
GUIDANCE
OF
BLIND
PERSONS
SENSOR
NETWORKS
HAVE
THE
POTENTIAL
TO
GREATLY
IMPACT
CHEN
ET
AL
EMBED
RFID
TAGS
IN
THE
TILES
OF
A
BLIND
MANY
ASPECTS
OF
MEDICAL
CARE
INCLUDING
REHABILITATION
PATH
FOR
BETTER
NAVIGATION
SOME
SYSTEMS
ALSO
USE
AUDIO
FOR
EXAMPLE
JAROCHOWSKI
ET
AL
PROPOSE
THE
INTERFACE
TO
COMMUNICATE
THE
NAME
OF
IMPORTANT
LOCATIONS
IMPLEMENTATION
OF
A
SYSTEM
THE
UBIQUITOUS
REHABILITATION
TO
THE
USER
E
G
THE
SAWN
SYSTEM
THERE
ARE
ALSO
CENTER
WHICH
INTEGRATES
A
ZIGBEE
BASED
WIRELESS
NETWORK
APPLICATIONS
TO
FACILITATE
DAILY
TASKS
SUCH
AS
SHOPPING
E
G
WITH
SENSORS
THAT
MONITOR
PATIENTS
AND
REHABILITATION
THE
SHOPTALK
PROJECT
MACHINES
THESE
SENSORS
INTERFACE
WITH
ZIGBEE
MOTES
FINALLY
SEVERAL
AMI
BASED
ASSISTED
LIVING
ENVIRONMENTS
WHICH
IN
TURN
INTERFACE
WITH
A
SERVER
APPLICATION
THAT
HAVE
BEEN
DESIGNED
BY
USING
DECISION
SUPPORT
METHODOL
MANAGES
ALL
ASPECTS
OF
THE
REHABILITATION
CENTER
AND
ALLOWS
PROCEEDINGS
OF
THE
IEEE
VOL
NO
DECEMBER
REHABILITATION
SPECIALISTS
TO
ASSIGN
PRESCRIPTIONS
TO
PATIENTS
ANOTHER
SYSTEMS
PROPOSED
BY
PIOTROWICZ
ET
AL
DE
SCRIBES
THE
REQUIREMENTS
OF
A
SYSTEM
FOR
CARDIAC
TELEREH
ABILITATION
AT
HOME
AND
IN
PARTICULAR
IT
DISCUSSES
THE
DIFFERENT
COMPONENTS
CONTROLLING
A
PHYSICAL
EXERCISE
TRAIN
ING
SESSION
WHICH
NEEDS
TO
RECOGNIZE
AND
IDENTIFY
CRITICAL
PATIENT
STATES
THROUGH
A
CONTINUOUS
MONITORING
BASED
ON
AMI
TECHNOLOGY
AND
REACT
ACCORDINGLY
AS
A
SIDE
EFFECT
THE
HEALTH
RELATED
DATA
GATHERED
DURING
THE
TELEREHABILITA
TION
SESSION
ARE
USED
FOR
PROVIDING
CARDIOLOGISTS
WITH
USEFUL
INFORMATION
FOR
PATIENT
CARE
THE
REHABILITATION
SYSTEMS
PROPOSED
BY
HELMER
ET
AL
IMPROVE
THE
QUALITY
OF
LIFE
FOR
PATIENTS
SUFFERING
FROM
THE
CHRONIC
OBSTRUCTIVE
PULMONARY
DISEASE
COPD
THE
SYSTEM
INCLUDES
A
COMPONENT
FOR
MONITORING
THE
REHABILITATION
TRAINING
AND
AUTOMATICALLY
AS
A
CONSEQUENCE
IT
CONTROLS
THE
TARGET
LOAD
FOR
THE
EXERCISE
ON
THE
BASIS
OF
HIS
OR
HER
VITAL
DATA
MOREOVER
BY
EQUIPPING
PATIENTS
WITH
WIRELESS
WEAR
ABLE
OR
ENVIRONMENTAL
VITAL
SIGN
SENSORS
COLLECTING
DE
TAILED
REAL
TIME
DATA
ON
PHYSIOLOGICAL
STATUS
CAN
ENABLE
INNOVATIVE
ACTIVITIES
AS
AUTONOMOUS
REHABILITATION
AND
THE
RAPY
THE
STROKE
REHAB
EXERCISER
BY
PHILIPS
RESEARCH
GUIDES
THE
PATIENT
THROUGH
A
SEQUENCE
OF
EXERCISES
FOR
MOTOR
RETRAINING
WHICH
ARE
PRESCRIBED
BY
THE
PHYSIOTHERAPIST
AND
UPLOADED
TO
A
PATIENT
UNIT
THE
SYSTEM
LIES
ON
A
WIRELESS
INERTIAL
SENSOR
SYSTEM
AIMED
AT
RECORDING
THE
PATIENT
MOVEMENTS
ANALYZES
THE
DATA
FOR
DEVIATIONS
FROM
A
PERSONAL
MOVEMENT
TARGET
AND
PROVIDES
FEEDBACK
TO
THE
PATIENT
AND
THE
THERAPIST
THE
STROKE
REHAB
EXERCISER
COACHES
THE
PATIENT
THROUGH
A
SEQUENCE
OF
EXER
CISES
FOR
MOTOR
RETRAINING
WHICH
ARE
PRESCRIBED
BY
THE
PHYSIOTHERAPIST
AND
UPLOADED
TO
A
PATIENT
UNIT
A
WIRELESS
INERTIAL
SENSOR
SYSTEM
RECORDS
THE
PATIENT
MOVEMENTS
ANALYZES
THE
DATA
FOR
DEVIATIONS
FROM
A
PERSONAL
MOVEMENT
TARGET
AND
PROVIDES
FEEDBACK
TO
THE
PATIENT
AND
THE
THERAPIST
THE
HOCOMA
AG
VALEDO
SYSTEM
SEE
FIG
IS
A
MEDICAL
BACK
TRAINING
DEVICE
WHICH
IMPROVES
PATIENT
COMPLIANCE
AND
ALLOWS
ONE
TO
ACHIEVE
INCREASED
FIG
THE
HOCOMA
AG
VALEDO
AT
WORK
ACAMPORA
ET
AL
A
SURVEY
ON
AMBIENT
INTELLIGENCE
IN
HEALTHCARE
MOTIVATION
BY
REAL
TIME
AUGMENTED
FEEDBACK
BASED
ON
TRUNK
MOVEMENTS
IT
TRANSFERS
TRUNK
MOVEMENTS
FROM
TWO
WIRELESS
SENSORS
INTO
A
MOTIVATING
GAME
ENVIRONMENT
AND
GUIDES
THE
PATIENT
THROUGH
EXERCISES
SPECIFICALLY
DESIGNED
FOR
LOW
BACK
PAIN
THERAPY
IN
ORDER
TO
CHALLENGE
THE
PATIENT
AND
TO
ACHIEVE
MORE
EFFICIENT
TRAINING
THE
EXERCISES
CAN
BE
ADJUSTED
ACCORDING
TO
THE
PATIENT
SPECIFIC
NEEDS
FINALLY
GE
HEALTHCARE
IS
DEVELOPING
A
WIRELESS
MEDICAL
MONITORING
SYSTEM
THAT
IS
EXPECTED
TO
ALLOW
ONE
TO
GATHER
PHYSIOLOGICAL
AND
MOVEMENT
DATA
THUS
FACILITATING
REHABIL
ITATION
INTERVENTIONS
IN
THE
HOME
SETTING
SEVERAL
OTHER
SYSTEMS
ARE
CURRENTLY
UNDER
RESEARCH
AND
DEVELOPMENT
AS
AN
EXAMPLE
JOVANOV
ET
AL
HAVE
DEVELOPED
A
COMPUTER
ASSISTED
PHYSICAL
REHABILITATION
APPLICATIONS
AND
AMBULATORY
MONITORING
BASED
ON
A
WIRELESS
BODY
AREA
NETWORK
WBAN
THIS
SYSTEM
PERFORMS
REAL
TIME
ANALYSIS
OF
SENSORS
DATA
PROVIDING
GUIDANCE
AND
FEEDBACK
TO
THE
USER
IN
DIFFERENT
THERAPY
FIELDS
SUCH
AS
STROKE
REHABILITA
TION
PHYSICAL
REHABILITATION
AFTER
HIP
OR
KNEE
SURGERIES
MYOCARDIAL
INFARCTION
REHABILITATION
AND
TRAUMATIC
BRAIN
INJURY
REHABILITATION
A
PRACTICAL
APPLICATION
EXAMPLE
IS
GIVEN
BY
THE
TRIL
PROJECT
THAT
BY
MEANS
OF
ITS
SUB
COMPONENT
NAMED
BASE
PROVIDES
A
HOME
BASED
INTERACTIVE
TECHNOLOGY
SOLUTION
TO
DELIVER
AND
VALIDATE
THE
CORRECTNESS
OF
A
PERSONALIZED
PHYSIOTHERAPIST
PRESCRIBED
EXERCISE
PROGRAM
TO
OLDER
ADULTS
BASE
USES
A
SENSOR
NET
WORKS
TO
GATHER
DATA
NECESSARY
TO
DELIVER
THE
EXERCISE
PROGRAM
AND
IT
EXPLOITS
COMPUTER
VISION
ALGORITHMS
FOR
VALIDATING
THE
CORRECTNESS
OF
THESE
REHABILITATION
EXPERI
ENCES
ONE
OF
THE
MAIN
AIMS
OF
THE
ACTIVE
CARE
PROJECT
IS
RELATED
TO
THE
SUPPORT
OF
AT
RISK
ELDERS
THIS
PROJECT
EXPLOITS
TWO
ENVIRONMENTAL
CAMERAS
FOR
EXTRACTING
HUMAN
SILHOUETTES
AND
INVESTIGATING
THE
HUMAN
GAIT
BY
ANALYZING
SHOULDER
LEVEL
SPINAL
INCLINE
AND
SILHOUETTE
CENTROID
THIS
ANALYSIS
COULD
BE
PRECIOUS
FOR
REMOTELY
OR
AUTONOMOUSLY
AIDING
ELDER
OR
IMPAIRED
PEOPLE
OTHER
INTERESTING
WORK
BASED
ON
SENSORS
NETWORKS
IS
RE
LATED
TO
THE
DESIGN
OF
REHABILITATION
SYSTEMS
FOR
DEGENER
ATIVE
PATHOLOGIES
SUCH
AS
PARKINSON
DISEASE
GIANSANTI
ET
AL
PRESENT
THE
RESULTS
OF
A
PILOT
STUDY
TO
ASSESS
THE
FEASIBILITY
OF
USING
ACCELEROMETER
DATA
TO
ESTI
MATE
THE
SEVERITY
OF
SYMPTOMS
AND
MOTOR
COMPLICATIONS
IN
PATIENTS
WITH
PARKINSON
DISEASE
THIS
SYSTEM
IS
BASED
ON
A
SUPPORT
VECTOR
MACHINE
SVM
CLASSIFIER
USED
FOR
ESTIMAT
ING
THE
SEVERITY
OF
TREMOR
BRADYKINESIA
AND
DYSKINESIA
FROM
ACCELEROMETER
DATA
FEATURES
AND
AS
A
CONSEQUENCE
OPTIMIZING
THE
PATIENT
THERAPY
BACHLIN
ET
AL
ALSO
INTRODUCE
A
WEARABLE
ASSISTANT
FOR
PARKINSON
DISEASE
PA
TIENTS
WITH
THE
FREEZING
OF
GAIT
FOG
SYMPTOM
THIS
WEARABLE
SYSTEM
USES
ON
BODY
ACCELERATION
SENSORS
TO
MEASURE
THE
PATIENTS
MOVEMENTS
TO
DETECT
FOG
AND
AUTO
MATICALLY
PROVIDE
A
RHYTHMIC
AUDITORY
SIGNAL
THAT
STIMU
LATES
THE
PATIENT
TO
RESUME
WALKING
IN
THE
FUTURE
BY
USING
THE
WEARABLE
SENSOR
NETWORKS
TOGETHER
WITH
HAPTIC
HARD
WARE
IT
WILL
BE
POSSIBLE
TO
DESIGN
MEDICAL
TRAINING
SYSTEMS
BASED
ON
AUGMENTED
REALITY
FRAMEWORKS
FOR
IMPROVING
VOL
NO
DECEMBER
PROCEEDINGS
OF
THE
IEEE
ACAMPORA
ET
AL
A
SURVEY
ON
AMBIENT
INTELLIGENCE
IN
HEALTHCARE
MEDICAL
STAFF
CAPABILITIES
TO
SUPPORT
ELDERLY
OR
PATIENTS
DURING
THEIR
REHABILITATION
THE
COMBINATION
OF
SENSOR
NETWORK
TECHNOLOGY
AND
ROBOTS
IS
ALSO
A
VERY
RECENT
DEVELOPMENT
IN
THE
FIELD
OF
REHABILITATION
SYSTEMS
INTEREST
IN
THIS
AP
PROACH
ORIGINATES
FROM
THE
OBSERVATION
THAT
SUBJECTS
WITH
CHRONIC
CONDITIONS
SUCH
AS
HEMIPARESIS
FOLLOWING
A
STROKE
COULD
BENEFIT
FROM
THERAPEUTIC
INTERVENTIONS
THAT
CAN
BE
FACILITATED
BY
ROBOTIC
SYSTEMS
AND
ENHANCED
BY
WEARABLE
TECHNOLOGY
INDEED
THESE
INTEGRATED
SYS
TEMS
COULD
BE
USED
IN
A
VARIETY
OF
HEALTHCARE
SCENARIOS
A
CONCRETE
APPLICATION
OF
THESE
CONCEPTS
IS
THE
HUMAN
FRIENDLY
ASSISTIVE
HOME
ENVIRONMENT
INTELLIGENT
SWEET
HOME
ISH
DEVELOPED
AT
KAIST
KOREA
THE
SYSTEM
CONSIDERS
THE
RESIDENTS
LIFESTYLE
BY
CONTINUOUSLY
CHECKING
THEIR
INTENTION
OR
HEALTH
STATUS
THE
HOME
ITSELF
IS
SEEN
AS
AN
INTELLIGENT
ROBOT
SUPPORTING
ACTIVELY
THE
WITH
APPROPRIATE
SERVICES
PEOPLE
WITH
DISABILITIES
KUBOTA
ET
AL
ALSO
PROPOSE
A
SIMILAR
HYBRID
AMI
ROBOTIC
SYSTEMS
FOR
AIDING
DISABLED
PEOPLE
WITH
QUADRIPLEGIA
RECENTLY
THERE
HAS
BEEN
SOME
ATTEMPT
TO
FURTHER
IM
PROVE
THE
SENSOR
NETWORKS
REHABILITATION
CAPABILITIES
BY
SENSING
ELECTROENCEPHALOGRAPHY
EEG
SIGNALS
DIRECTLY
FIG
THE
PERSUASIVE
MIRROR
PROJECT
AT
WORKS
USING
BCI
TECHNOLOGY
BCI
SYSTEMS
REPRESENT
A
NATURAL
EXTENSION
FOR
AMI
ENVIRONMENTS
INDEED
THEY
ARE
ENVI
SIONED
TO
BE
TYPICALLY
USED
FOR
ALLOWING
SMART
ENVIRON
MENTS
HABITANTS
TO
DEAL
WITH
THEIR
SURROUNDING
SPACE
IN
A
TRANSPARENT
WAY
THIS
EFFORTLESSLY
INTERACTION
APPROACH
IS
PARTICULARLY
SUITABLE
FOR
ENHANCED
REHABILITATION
SYSTEMS
THE
ASPICE
AND
DAT
PROJECTS
ARE
EXAMPLES
OF
THIS
KIND
OF
TECHNOLOGY
WHICH
ALLOW
THE
TEMPORARY
OR
PERMANENT
NEUROMOTOR
DISABLED
PERSONS
TO
IMPROVE
OR
RECOVER
THEIR
MOBILITY
DIRECTLY
OR
BY
EMULATION
AS
WELL
AS
THEIR
COMMUNICATION
SKILLS
D
PERSUASIVE
WELLBEING
APPLICATIONS
PERSUASIVE
TECHNOLOGY
REPRESENTS
COMPUTING
SYSTEMS
DEVICES
OR
APPLICATIONS
INTENTIONALLY
DESIGNED
TO
CHANGE
A
PERSON
ATTITUDE
OR
BEHAVIOR
IN
A
PREDETER
MINED
WAY
IN
ORDER
TO
MOTIVATE
PEOPLE
TO
LEAD
A
HEALTHIER
LIFE
STYLE
BY
MEDIATING
PREVENTION
AND
TREATMENT
ALTHOUGH
THE
FIELD
OF
PERSUASIVE
TECHNOLOGIES
HAS
LATELY
ATTRACTED
LOTS
OF
ATTENTION
ONLY
RECENTLY
THE
NOTION
OF
AM
BIENT
PERSUASIVE
TECHNOLOGY
WAS
INTRODUCED
AMBIENT
PERSUASIVE
TECHNOLOGY
CONSTITUTES
A
RADI
CALLY
NEW
CATEGORY
OF
RELATIONSHIPS
BETWEEN
HUMAN
BEINGS
AND
TECHNOLOGICAL
ARTIFACTS
BY
BLENDING
INSIGHTS
FROM
THE
BEHAVIORAL
SCIENCES
WITH
COMPUTING
TECHNOLOGY
ONE
OF
THE
FIRST
EXAMPLES
OF
COMPUTERIZED
PERSUASION
SYSTEM
FOR
HEALTHY
LIVING
IS
THE
PERSUASIVE
MIRROR
THIS
SYSTEM
USES
UBIQUITOUS
SENSORS
FOR
CONTINUOUSLY
GATHERING
INFORMATION
ABOUT
HUMAN
BEHAVIORS
AND
PROVIDES
THE
USER
WITH
CONTINUOUS
VISUAL
AND
NONINTRUSIVE
FEEDBACK
MATCH
ING
THE
PSYCHOLOGICAL
STRATEGY
SEE
FIG
OTHER
APPLI
CATIONS
OF
THE
AMBIENT
PERSUASIVE
MIRROR
ARE
INTRODUCED
IN
PROCEEDINGS
OF
THE
IEEE
VOL
NO
DECEMBER
ANOTHER
SEMINAL
APPLICATION
OF
AMBIENT
PERSUASIVE
TECHNOLOGY
IS
PROVIDED
BY
THE
HYGIENEGUARD
PROJECTOR
THIS
ENVIRONMENTAL
PERSUASIVE
SYSTEM
IS
USED
IN
RESTAURANTS
AND
HOSPITALS
TO
MOTIVATE
EMPLOYEES
OR
WORK
ERS
TO
WASH
THEIR
HANDS
BEFORE
LEAVING
A
RESTROOM
THE
EQUIPMENT
IS
INSTALLED
IN
RESTROOMS
AND
EVERY
EMPLOYEE
IS
REQUIRED
TO
WEAR
A
BADGE
WHENEVER
THE
EMPLOYEE
GOES
TO
THE
RESTROOM
SHE
HAS
TO
USE
THE
SINK
FOR
A
PERIOD
OF
TIME
DE
CAROLIS
ET
AL
PRESENTS
AN
APPROACH
TO
AMBIENT
PERSUASION
BASED
ON
A
COMBINATION
OF
PERVASIVE
AND
DISTRI
BUTED
COMPUTATION
TO
MOTIVATE
USERS
AT
A
FITNESS
CENTER
THE
USER
IS
SURROUNDED
BY
SEVERAL
CONNECTED
DEVICES
THAT
COOPERATE
DURING
PERSUASION
PROCESS
ANOTHER
INTERESTING
AMI
APPLICATION
BASED
ON
PERSUASIVE
TECHNOLOGIES
IS
PERCUES
DIFFERENT
FROM
THE
PREVIOUS
APPLICATIONS
PERCUES
IS
ORIENTED
TO
ACHIEVE
A
COLLECTIVE
HUMAN
WELL
BEING
BY
PERSUADING
USERS
TO
REACH
A
COMMON
GOAL
LIKE
DECREASING
ENVIRONMENTAL
POLLUTION
THE
PROJECT
PERFRAME
IMPLEMENTS
A
PERSUASIVE
INTERFACE
IN
THE
FORM
OF
AN
INTERACTIVE
PICTURE
FRAME
WHICH
INTEGRATES
UNOBTRUSIVELY
INTO
THE
WORKING
ENVIRONMENT
AND
PROVIDES
AFFECTIVE
FEED
BACK
IN
ORDER
TO
PERSUADE
EMPLOYEES
TO
ADOPT
MORE
HEALTHY
HABITS
WHILE
WORKING
WITH
A
COMPUTER
ETIOBE
IS
ANOTHER
PROJECT
DEVOTED
TO
TREAT
CHILD
OBESITY
ITS
ARCHITECTURE
MERGES
UBIQUITOUS
INTELLIGENT
AND
PERSUASIVE
FEATURES
FOR
IMPLEMENTING
A
CYBERTHERAPY
APPROACH
IT
IS
BASED
ON
VIRTUAL
AND
AUGMENTED
REALITY
AND
ATTEMPTS
TO
PERSUADE
CHILDREN
TO
AVOID
POOR
EATING
HABITS
THE
SYSTEM
USES
A
COLLECTION
OF
ENVIRONMENTAL
SENSORS
FOR
CAPTURING
IMPORTANT
INFORMATION
SUCH
AS
CONTEXTUAL
PHY
SIOLOGICAL
AND
PSYCHOLOGICAL
DATA
ACAMPORA
ET
AL
A
SURVEY
ON
AMBIENT
INTELLIGENCE
IN
HEALTHCARE
LAST
SOME
GAME
BASED
AMBIENT
PERSUASIVE
SYSTEMS
FOR
PARTICULAR
THE
SYSTEM
CONSISTS
OF
A
SENSOR
ENABLED
MOBILE
WELL
BEING
HAVE
BEEN
INTRODUCED
OR
THEY
ARE
UNDER
DEVEL
PHONE
A
WRIST
WORN
ACTIVITY
MONITOR
A
PHYSIOLOGICAL
SEN
OPMENT
FOR
EXAMPLE
THE
PROJECT
DANCE
REVOLUTION
SOR
GSR
PULSE
A
STATIONARY
EEG
SYSTEM
FOR
PERIODIC
CONNECTS
A
SENSOR
ENABLED
DANCE
FLOOR
WITH
A
VIDEO
INTER
MEASUREMENTS
AND
A
HOME
GATEWAY
COMBINING
THE
SEN
FACE
AND
PROVIDES
STIMULATING
EXERCISE
AS
DANCE
COMPETI
SOR
INFORMATION
WITH
PATIENTS
MEDICAL
RECORDS
AND
ESTAB
TION
A
RECENT
TREND
IS
THE
USE
OF
MOTION
SENSING
LISHED
PSYCHIATRIC
KNOWLEDGE
A
PREDICTION
OF
DEPRESSIVE
CONTROLLERS
SUCH
AS
WIIMOTE
OR
KINECT
SENSOR
ALLOWING
THE
AND
MANIC
EPISODES
IS
GIVEN
INDIVIDUALS
TO
NATURALLY
MANIPULATE
DIGITAL
WORLDS
IN
PER
THE
EMO
PAIN
PROJECT
IS
AN
INTELLIGENT
SYSTEM
SUASIVE
GAMES
TAKEN
TOGETHER
THIS
BODY
OF
WORK
DEMON
THAT
ENABLES
UBIQUITOUS
MONITORING
AND
ASSESSMENT
OF
STRATES
THAT
GAMES
AND
SOCIAL
COMPETITION
CAN
BE
USED
TO
PATIENT
PAIN
RELATED
MOOD
AND
MOVEMENTS
SPECIFICALLY
ESTABLISH
LONG
TERM
COMMITMENTS
FOR
EXAMPLE
SUCH
THIS
SYSTEM
AIMS
TO
DEVELOP
A
COLLECTION
OF
METHODS
FOR
GAMES
CAN
BE
USED
BY
THE
ELDERS
OR
INDIVIDUALS
WITH
PHYSI
AUTOMATICALLY
RECOGNIZING
AUDIOVISUAL
CUES
RELATED
TO
PAIN
CAL
IMPAIRMENTS
DURING
THEIR
REHABILITATION
SESSIONS
BEHAVIORAL
PATTERNS
TYPICAL
OF
LOW
BACK
PAIN
AND
AFFECTIVE
STATES
INFLUENCING
PAIN
AZIZ
ET
AL
ALSO
PROPOSE
AN
E
EMOTIONAL
WELLBEING
ANIMATED
CONVERSATIONAL
AGENT
PROVIDING
EMOTIONAL
SUP
RECENT
ADVANCES
IN
NEUROLOGY
AND
PSYCHOLOGY
HAVE
PORT
AND
COMPANIONSHIP
IN
ORDER
TO
PROMOTE
THE
EMOTIONAL
DEMONSTRATED
THE
IMPORTANCE
OF
EMOTIONS
IN
VARIOUS
AS
WELLBEING
OF
PATIENTS
AND
ENHANCE
PATIENT
CARE
AND
OUT
PECTS
OF
OUR
LIVES
AND
IN
PARTICULAR
IN
THE
FIELD
OF
HEALTH
COMES
DURING
A
HOSPITAL
STAY
CARE
AND
WELLBEING
INDEED
IT
HAS
BEEN
DEMONSTRATED
THAT
NEGATIVE
EMOTIONS
HAVE
ADVERSE
EFFECTS
ON
THE
IMMUNE
F
SMART
HOSPITALS
SYSTEM
OF
A
PERSON
EMOTIONS
ARE
TYPICALLY
COMMU
AMI
TECHNOLOGY
CAN
BE
ALSO
USEFUL
FOR
OTHER
STAKEHOLD
NICATED
THROUGH
THREE
CHANNELS
AUDIO
SPEECH
FACE
AND
ERS
SUCH
AS
NURSES
DOCTORS
AND
OTHER
HEALTHCARE
PERSONNEL
BODY
GESTURES
VISUAL
AND
INTERNAL
PHYSIOLOGICAL
CHANGES
ESPECIALLY
FOR
FACILITATING
COMMUNICATION
AMONG
THEM
SUCH
AS
BLOOD
PRESSURE
HEART
BEAT
RATE
OR
RESPIRATION
SÁNCHEZ
ET
AL
HAVE
DEVELOPED
THE
IHOSPITAL
PROJECT
WHICH
AMI
SENSOR
BASED
INFRASTRUCTURES
MAY
REPRESENT
A
PROVIDES
CONTEXT
AWARE
COMMUNICATION
BASED
ON
ACTIVITY
SUITABLE
TOOL
FOR
RECOGNIZING
AND
MANAGING
EMOTIONS
AS
RECOGNITION
VARIOUS
PIECES
OF
CONTEXTUAL
INFORMATION
WELL
AS
FOR
IMPROVING
WELLBEING
MCNANEY
ET
AL
HAVE
ARE
COLLECTED
AND
USED
INCLUDING
LOCATION
TIME
THE
ROLES
OF
DESIGNED
A
WEARABLE
ACOUSTIC
MONITOR
WAM
DEVICE
THE
PEOPLE
PRESENT
AND
RFID
TAGGED
ARTIFACTS
IN
ORDER
TO
WHICH
PROVIDES
SUPPORT
IN
VARIOUS
ASPECTS
OF
SOCIAL
AND
HELP
IN
DECISION
MAKING
AND
COMMUNICATION
EMOTIONAL
WELLBEING
BY
INFERRING
LEVELS
OF
SOCIAL
INTERAC
THERE
HAVE
BEEN
SOME
EFFORTS
TO
CREATE
AMI
BASED
TION
AND
VOCAL
FEATURES
OF
EMOTIONALITY
IT
CAN
MONITOR
AND
MIDDLEWARE
FOR
HEALTHCARE
RODRI
GUEZ
ET
AL
DESCRIBE
EVALUATE
THE
LEVEL
OF
THE
WEARER
VOICE
BY
IDENTIFYING
VOCAL
DEVELOPMENT
OF
SALSA
AN
AGENT
BASED
MIDDLEWARE
TO
FEATURES
SUCH
AS
AMPLITUDE
PITCH
RATE
OF
SPEECH
AND
PAUSE
FACILITATE
RESPONDING
TO
THE
PARTICULAR
DEMANDS
OF
PATIENTS
LENGTH
IN
ORDER
TO
PROVIDE
INSIGHT
INTO
THE
EMOTIONALITY
OF
AND
HOSPITAL
PERSONNEL
SALSA
TAKES
INTO
ACCOUNT
THE
THE
WEARER
AT
A
GIVEN
TIME
THIS
FEATURE
ALLOWS
THE
INDI
DISTRIBUTED
ACCESS
NATURE
OF
DOCTORS
WHICH
IS
A
RESULT
OF
VIDUAL
TO
REFLECT
ON
THE
CONTEXTS
OR
SITUATIONS
WHICH
PROVE
THEIR
HIGH
MOBILITY
A
DOCTOR
HAS
TO
ACCESS
PATIENTS
CLINICAL
PARTICULARLY
STRESSFUL
OR
PLEASURABLE
AND
MAY
AFFECT
FUTURE
RECORDS
ACCESS
MEDICAL
DEVICES
DISTRIBUTED
THROUGHOUT
THE
BEHAVIORS
ANOTHER
INTERESTING
APPLICATION
OF
ENVIRONMEN
PREMISES
AND
COMMUNICATE
WITH
COLLEAGUES
SPREAD
TAL
SENSORS
AND
AMI
TO
EMOTIONAL
WELLBEING
IS
AFFECTAURA
THROUGHOUT
THE
HOSPITAL
IN
ORDER
TO
TRACK
THE
LOCATION
OF
PROJECT
THIS
SYSTEM
CONTINUOUSLY
PREDICTS
USERS
PEOPLE
RODRIGUEZ
ET
AL
USE
RF
SIGNAL
STRENGTH
BETWEEN
VALENCE
AROUSAL
AND
ENGAGEMENT
BASED
ON
INFORMATION
MOBILE
DEVICES
AND
APS
AND
BUILD
A
SIGNAL
PROPAGATION
GATHERED
FROM
WEBCAM
KINECT
SENSOR
MICROPHONE
ELEC
MODEL
TO
ESTIMATE
THE
DISTANCE
TRODERMAL
ACTIVITY
SENSOR
GPS
FILE
ACTIVITY
SENSOR
AND
FAVELA
ET
AL
DESCRIBE
SEVERAL
POSSIBLE
SCENARIOS
CALENDAR
SCRAPER
THE
USERS
WERE
ALLOWED
TO
LEVERAGE
CUES
FOR
USING
AMI
IN
HOSPITALS
AND
BUILD
THEIR
FRAMEWORKS
FROM
AFFECTAURA
TO
CONSTRUCT
STORIES
ABOUT
THEIR
DAYS
EVEN
AROUND
THOSE
SCENARIOS
FOR
EXAMPLE
DR
GARCIA
IS
CHECK
AFTER
THEY
HAD
FORGOTTEN
PARTICULAR
INCIDENTS
OR
THEIR
RE
ING
THE
PATIENT
IN
BED
WHEN
HE
IS
ALERTED
THAT
A
NEW
LATED
EMOTIONAL
TONES
ANOTHER
PROJECT
EMOSONET
MESSAGE
HAS
ARRIVED
HIS
HANDHELD
DEVICE
DISPLAYS
A
INTRODUCES
AN
EMOTION
AWARE
SOCIAL
NETWORK
FOR
THE
PUR
HOSPITAL
FLOOR
MAP
INFORMING
HIM
THAT
THE
X
RAY
RESULTS
OF
POSE
OF
INCREASING
EMOTIONAL
WELLBEING
THE
FRAMEWORK
ANOTHER
PATIENT
ARE
AVAILABLE
HE
APPROACHES
THE
NEAREST
USES
SENSORS
AND
BEHAVIOR
ANALYSIS
METHODS
IN
ORDER
TO
PUBLIC
DISPLAY
THAT
DETECTS
HIS
PRESENCE
AND
PROVIDES
HIM
INFER
USERS
STRESS
LEVEL
AUTOMATICALLY
WITH
MINIMAL
USER
WITH
A
PERSONALIZED
VIEW
DR
GARCIA
SELECTS
THE
MESSAGE
EFFORT
IT
ALSO
USES
AUDIO
ANIMATION
AND
VIBROTACTILE
FEED
ON
BED
WHICH
OPENS
WINDOWS
DISPLAYING
THE
PATIENT
BACK
FOR
ENHANCED
ENGAGEMENT
ANOTHER
SYSTEM
NAMED
MEDICAL
RECORD
AND
THE
X
RAY
IMAGE
RECENTLY
TAKEN
AWARE
MONARCA
DEVELOPS
AND
VALIDATES
SOLUTIONS
FOR
OF
THE
CONTEXT
OF
THE
SITUATION
THE
SYSTEM
AUTOMATICALLY
MULTIPARAMETRIC
LONG
TERM
MONITORING
OF
BEHAVIORAL
AND
OPENS
A
WINDOW
WITH
THE
HOSPITAL
MEDICAL
GUIDE
THAT
PHYSIOLOGICAL
INFORMATION
RELEVANT
TO
BIPOLAR
DISORDER
IN
RELATES
TO
THE
PATIENT
CURRENT
DIAGNOSIS
AND
AN
ADDITIONAL
VOL
NO
DECEMBER
PROCEEDINGS
OF
THE
IEEE
ACAMPORA
ET
AL
A
SURVEY
ON
AMBIENT
INTELLIGENCE
IN
HEALTHCARE
ONE
WITH
PREVIOUS
SIMILAR
CASES
TO
SUPPORT
THE
PHYSICIANS
CONTENT
AND
YIELDING
PERFORMANCES
BETTER
THAN
CONVEN
ANALYSIS
WHILE
DR
GARCIA
IS
ANALYZING
THE
X
RAY
IMAGE
HE
TIONAL
DATA
MINING
APPROACHES
THANKS
TO
THESE
INNOVATIVE
NOTICES
ON
THE
MAP
THAT
A
RESIDENT
PHYSICIAN
IS
NEARBY
AND
FEATURES
IN
THE
FUTURE
IT
WILL
BE
POSSIBLE
TO
DESIGN
AND
CALLS
HIM
UP
TO
SHOW
HIM
THIS
INTERESTING
CLINICAL
CASE
DEVELOP
SMART
ENVIRONMENTS
CHARACTERIZED
BY
AN
INTELLI
KOFOD
PETERSEN
ET
AL
ALSO
DESCRIBE
USING
AMI
GENCE
SIMILAR
TO
HAL
MORE
SPECIFICALLY
THESE
TECHNOLOGY
TO
SUPPORT
HEALTHCARE
WORKERS
COOPERATING
IN
ENVIRONMENTS
WILL
BE
ABLE
TO
NOT
ONLY
INSTANTLY
RECOGNIZE
PATIENT
DIAGNOSIS
AND
TREATMENT
BY
USING
CONTEXT
INFORMA
WHO
HE
WAS
INTERACTING
WITH
BUT
ALSO
WHETHER
HE
COULD
LIP
TION
GOAL
RECOGNITION
AND
CASE
BASED
REASONING
GERIATRIC
READ
JUDGE
AESTHETICS
OF
VISUAL
SKETCHES
RECOGNIZE
EMO
AMI
GERAMI
IS
ANOTHER
AMI
HOSPITAL
PROJECT
WHICH
HELPS
TIONS
SUBTLY
EXPRESSED
BY
PEOPLE
AND
RESPOND
TO
THESE
DOCTORS
AND
NURSES
TO
MONITOR
PATIENTS
AND
TO
BETTER
MAN
EMOTIONS
IN
AN
ADAPTIVE
PERSONALIZED
WAY
CONSEQUENTLY
AGE
THEIRS
TASKS
FOR
EXAMPLE
IT
KEEPS
TRACK
OF
THE
THEY
WILL
INCREASE
THE
HUMAN
HEALTH
BY
PROVIDING
THERAPY
PATIENTS
LOCATIONS
USING
RFID
TECHNOLOGY
AND
GENERATES
AND
HEALTH
SUPPORT
WITHOUT
INTERVENTION
OF
MEDICAL
STAFF
ALARMS
IF
NEEDED
IT
ALSO
ALLOCATES
TASKS
TO
NURSES
BASED
ON
VARIOUS
CONTEXTUAL
INFORMATION
SUCH
AS
THE
AVAILABILITY
OF
NEARBY
NURSES
AND
THEIR
PROFILE
INFORMATION
B
DESIGN
AND
HUMAN
FACTORS
THE
NEXT
GENERATION
OF
AMI
SYSTEMS
WILL
TRY
TO
IMPROVE
THE
QUALITY
OF
HUMAN
LIFE
BY
MEANS
OF
INCREASINGLY
INNO
V
ONGOING
CHALLENGES
AND
FUTURE
RESEARCH
DIRECTIONS
PROCEEDINGS
OF
THE
IEEE
VOL
NO
DECEMBER
VATIVE
APPLICATIONS
IN
THE
HEALTHCARE
DOMAIN
OR
IN
AN
IMPLICIT
WAY
BY
ASSURING
HIGH
COMFORT
TOGETHER
WITH
AN
INTELLIGENT
USAGE
OF
SCARCE
RESOURCES
THIS
BENEFIT
WILL
BE
A
ARTIFICIAL
INTELLIGENCE
SINCE
THE
BIRTH
OF
MODERN
COMPUTING
AROUND
THE
SCIENTISTS
AND
DOCTORS
ALIKE
HAVE
ALWAYS
BEEN
CAP
TIVATED
BY
THE
POTENTIAL
THAT
AI
METHODOLOGIES
MIGHT
HAVE
IN
MEDICINE
AND
HEALTHCARE
APPLICATIONS
INDEED
CONVENTIONAL
AI
METHODS
SUCH
AS
MACHINE
LEARNING
EXPERT
SYSTEMS
KNOWLEDGE
REPRESENTATION
TECHNIQUES
HAVE
BEEN
STRONGLY
EXPLOITED
FOR
DESIGNING
AND
IMPLEMENTING
MEDICAL
APPLICATIONS
BELONGING
TO
THE
FOLLOWING
AREAS
DIAGNOSIS
PROGNOSIS
MEDICAL
TRAINING
AND
SO
ON
EXPERT
OR
KNOWLEDGE
BASED
SYSTEMS
ARE
THE
MOST
COMMON
TYPE
OF
AI
APPLICATION
IN
MEDICINE
THEY
CONTAIN
MEDICAL
KNOWL
EDGE
USUALLY
ABOUT
A
VERY
SPECIFICALLY
DEFINED
TASK
AND
ARE
ABLE
TO
REASON
WITH
DATA
FROM
INDIVIDUAL
PATIENTS
TO
COME
UP
WITH
REASONED
CONCLUSIONS
BY
USING
TYPICALLY
A
SET
OF
RULES
BASED
ON
SOME
LOGIC
INFERENCE
WHEN
THERE
IS
NOT
ENOUGH
KNOWLEDGE
FOR
DESIGNING
MEDICAL
EXPERT
SYSTEMS
MACHINE
LEARNING
APPROACHES
CAN
BE
USED
FOR
ANALYZING
A
COLLECTION
OF
CLINICAL
CASES
PRODUCING
A
SYSTEMATIC
DESCRIP
TION
OF
THAT
CLINICAL
KNOWLEDGE
THAT
CHARACTERIZES
THE
CLINICAL
CONDITIONS
OF
A
GIVE
PATIENT
OR
A
DISEASE
MOREOVER
MAINLY
ACHIEVED
BY
DESIGNING
INTELLIGENT
ENVIRONMENTS
COMPLETELY
PERVADED
BY
DIFFERENT
KIND
OF
SENSORS
WHOSE
WIRELESS
INTERCONNECTION
COULD
RESULT
IN
A
LARGER
HUMAN
EXPOSURE
TO
RF
ELECTROMAGNETIC
FIELDS
ALTHOUGH
THE
ELEC
TROMAGNETIC
FIELDS
FROM
WIRELESS
SENSORS
ARE
WEAK
A
LONG
TIME
EXPOSITION
CAN
RAISE
CONCERNS
ABOUT
POSSIBLE
HEALTH
HAZARDS
INDEED
SOME
RECENT
STUDIES
INDICATED
A
DIRECT
LINK
BETWEEN
EXPOSURE
TO
RADIATION
FROM
WIRELESS
DEVICES
AND
AN
INCREASED
RISK
OF
ACOUSTIC
NEURONAL
A
CANCER
OF
THE
NERVE
CONNECTING
THE
EAR
TO
THE
BRAIN
FOR
THIS
REASON
THE
NEXT
GENERATION
OF
AMI
SYSTEMS
MUST
BE
DESIGNED
BY
TAKING
INTO
ACCOUNT
ADDITIONAL
FACTORS
SUCH
AS
SENSOR
POSITIONING
SENSOR
MOBILITY
SENSOR
RADIATION
AND
SO
ON
BY
FOLLOWING
THESE
DESIGN
GUIDELINES
FUTURE
AMI
FRAMEWORKS
WILL
BE
FULLY
SUITABLE
FOR
ENHANCING
HUMAN
HEALTH
WITHOUT
PROVID
ING
DANGEROUS
SIDE
EFFECTS
THIS
CHALLENGE
CAN
ONLY
BE
TACKLED
WITH
THE
JOINT
EFFORTS
OF
COMPUTER
SCIENTISTS
ARCHI
TECTS
DOCTORS
PHYSICISTS
AND
TELECOMMUNICATION
ENGI
NEERS
MOREOVER
GOVERNMENT
REGULATORY
AUTHORITIES
NEED
TO
DIRECT
POLICY
DECISIONS
INTELLIGENTLY
TO
MAINTAIN
A
USEFUL
AND
SAFE
FUTURE
OF
HUMANS
TECHNIQUES
FOR
KNOWLEDGE
REPRESENTATION
E
G
ONTOLOGIES
HAVE
BEEN
USED
TO
FORMALLY
GATHER
MEDICAL
KNOWLEDGE
AND
IMPLEMENT
TUTORING
SYSTEMS
FOR
YOUNG
DOCTORS
OR
NURSES
THESE
ARE
ONLY
SOME
SAMPLES
OF
AI
APPLIED
TO
HEALTHCARE
DOMAIN
BUT
IN
GENERAL
ALL
OF
AI
HEALTHCARE
SYSTEMS
HAVE
TO
DEAL
WITH
MANIPULATIONS
AND
TRANSFORMATION
OF
DATA
AND
KNOWLEDGE
IN
THIS
SCENARIO
APPROACHES
BASED
ON
PERVA
SIVE
OR
UBIQUITOUS
HARDWARE
WILL
BE
VERY
USEFUL
FOR
ENHANCING
THE
CURRENT
STATE
OF
THE
ART
OF
AI
IN
HEALTHCARE
INDEED
AMI
FEATURES
COULD
ALLOW
SYSTEMS
DESIGNERS
TO
DEVELOP
COMPLEX
SOFTWARE
ARCHITECTURES
CAPA
BLE
OF
ANALYZING
KNOWLEDGE
SPREAD
EVERYWHERE
IN
SUR
ROUNDING
ENVIRONMENTS
AND
AS
A
CONSEQUENCE
LEARNING
C
SECURITY
AND
INFRASTRUCTURE
THE
WEALTH
OF
DATA
THAT
IS
COLLECTED
IN
AMI
SYSTEMS
CAN
BE
BENEFICIAL
IN
MANY
ASPECTS
HOWEVER
IT
ALSO
OPENS
UP
MANY
SECURITY
ISSUES
PARTICULARLY
FOR
HEALTHCARE
SYSTEMS
PRIVACY
AND
SECURITY
ARE
ALREADY
VERY
COMPLEX
ISSUES
AND
THE
ADDITION
OF
A
LARGE
NUMBER
OF
SENSORS
AND
DEVICES
WILL
RESULT
IN
ADDITIONAL
CHALLENGES
WRIGHT
ET
AL
DISCUSS
SEVERAL
AMI
SECURITY
ISSUES
AND
CALL
FOR
THE
NEED
TO
DEVELOP
SAFEGUARDS
THEY
DESCRIBE
VARIOUS
SCENARIOS
WHERE
AMI
MIGHT
RESULT
IN
SERIOUS
SECURITY
BREACHES
FOR
EXAMPLE
BURGLARS
MIGHT
OBTAIN
VARIOUS
DETAILS
ABOUT
AN
OLDER
ADULT
LIVING
ALONE
AND
HIS
HABITS
FOR
LEAVING
HOME
AT
A
PARTICULAR
DISTRIBUTED
EXPERT
SYSTEMS
CLASSIFYING
DISEASES
OR
OTHER
HEALTH
DISORDERS
DEPENDING
UPON
THE
ENVIRONMENTAL
HAL
COMPUTER
THE
SUPERLATIVE
STAR
OF
THE
CLASSIC
KUBRICK
AND
CLARKE
FILM
A
SPACE
ODYSSEY
ACAMPORA
ET
AL
A
SURVEY
ON
AMBIENT
INTELLIGENCE
IN
HEALTHCARE
HOUR
AND
USE
SUCH
INFORMATION
FOR
BREAKING
INTO
THE
SMART
ACCEPTANCE
OF
AMI
SYSTEM
IN
GENERAL
FACILITATE
HUMAN
HOME
SYSTEM
POTENTIALLY
EVEN
ENDANGERING
THE
ELDERLY
CONTACT
BE
ORIENTED
TOWARD
COMMUNITY
AND
CULTURAL
LIFE
LACK
OF
INTERPRETABILITY
AND
OVERLY
RESTRICTED
ACCESS
ENHANCEMENT
INSPIRE
TRUST
AND
CONFIDENCE
AND
BE
MIGHT
ALSO
POSE
SOME
ISSUES
FOR
EXAMPLE
OUT
OF
DATE
CONTROLLABLE
BY
ORDINARY
PEOPLEVTHERE
SHOULD
BE
AN
OFF
HEALTH
MONITORING
DEVICES
MIGHT
RESULT
IN
FATAL
MISDIAG
SWITCH
WITHIN
REACH
NOSIS
BY
PARAMEDICS
IN
AN
ACCIDENT
OR
THEY
MIGHT
NOT
ALLOW
OVERRELIANCE
ON
AMI
SYSTEMS
MIGHT
HAVE
ITS
OWN
DANGERS
THE
PARAMEDICS
TO
ACCESS
SUCH
INFORMATION
IN
CASE
OF
IN
FOR
THE
INDIVIDUALS
WITH
HEALTH
NEEDS
AND
MIGHT
RESULT
IN
THE
COMPATIBLE
DEVICES
USED
IN
DIFFERENT
GEOGRAPHICAL
REGIONS
EARLY
LOSS
OF
THE
ABILITY
AND
CONFIDENCE
TO
MANAGE
THEIR
LIFE
BOHN
ET
AL
AS
WELL
AS
VAN
HEERDE
DISCUSS
CARE
MUST
BE
TAKEN
TO
ENSURE
THAT
AMI
TECHNOLOGY
IS
NOT
THE
POTENTIAL
SECURITY
DANGERS
OF
AMI
DUE
TO
THE
ABILITY
OF
LIMITED
TO
THE
AFFLUENT
INDIVIDUALS
BECAUSE
LESS
PRIVILEGED
SUCH
SYSTEMS
TO
COLLECTS
LARGE
AMOUNTS
OF
DATA
ABOUT
EACH
INDIVIDUALS
CAN
ALSO
BENEFIT
FROM
THE
BENEFITS
OF
AMI
INDIVIDUAL
THEY
ALSO
WARN
AGAINST
THE
FUTURE
POSSIBILITY
OF
FEAR
OF
DECREASED
COMMUNICATION
AND
PATIENT
ISOLATION
AN
INVISIBLE
AND
COMPREHENSIVE
SURVEILLANCE
NETWORK
IS
ANOTHER
ETHICAL
ISSUE
THAT
MANY
RESEARCHERS
HAVE
BROUGHT
FRIEDEWALD
ET
AL
NOTE
THAT
THE
UNIDIRECTIONAL
FLOW
OF
UP
IDENTIFYING
WHERE
THE
PROBLEM
LIES
IN
A
MISDIAGNOSIS
WILL
INFORMATION
IN
AMI
SYSTEMS
MIGHT
RESULT
IN
AN
ASYMMETRIC
BECOME
MORE
AND
MORE
DIFFICULT
IN
SUCH
A
COMPLEX
SYSTEM
DATA
DISTRIBUTION
FOR
EXAMPLE
HEALTH
PROVIDERS
HAVE
AND
WILL
RESULT
IN
MANY
ETHICAL
AND
LEGAL
DISCUSSIONS
ACCESS
TO
EVERY
DETAIL
OF
A
DAILY
LIFE
OF
AN
INDIVIDUAL
BUT
THE
INDIVIDUALS
MIGHT
NOT
HAVE
ENOUGH
INFORMATION
TO
DECIDE
AND
CHOOSE
AMONG
THEIR
PROVIDERS
OR
EVEN
IF
THEY
HAVE
VI
CONCLUSION
ACCESS
THEY
MIGHT
LACK
THE
SOPHISTICATED
MEANS
NECESSARY
AMI
PARADIGM
REPRESENTS
THE
VISION
OF
THE
NEXT
WAVE
OF
TO
PROCESS
SUCH
COMPLEX
WEB
OF
INFORMATION
COMPUTING
BY
RELYING
ON
VARIOUS
COMPUTING
AND
NETWORK
SENSORS
WHICH
ARE
USED
IN
AMI
SYSTEMS
MIGHT
ALSO
BE
A
ING
TECHNIQUES
AMI
PROMISES
THE
SUCCESSFUL
ACQUISITION
SOURCE
OF
CONCERN
FOR
EXAMPLE
RFID
TAGS
HAVE
ALREADY
AND
INTERPRETATION
OF
CONTEXTUAL
INFORMATION
AND
OFFERS
AN
BEEN
SUBJECT
OF
MANY
SECURITY
DISCUSSIONS
THE
FACT
THAT
AN
UNOBTRUSIVE
AND
INTUITIVE
USER
INTERFACE
THANKS
TO
THESE
OBJECT
WITH
AN
RFID
TAG
CAN
BE
UNIQUELY
IDENTIFIED
AND
FEATURES
AMI
SYSTEMS
HAVE
THE
POTENTIAL
TO
ENHANCE
OUR
TRACKED
BACK
TO
ITS
USER
MIGHT
BRING
UP
MANY
PRIVACY
ISSUES
EVERYDAY
LIFE
IN
MANY
DIFFERENT
ASPECTS
AND
IN
PARTICULAR
ALSO
MANY
AMI
SENSORS
AND
DEVICES
WILL
RELY
ON
WIRELESS
ONE
OF
THE
AREAS
WHICH
PROMISES
THE
WIDESPREAD
USE
OF
PROTOCOLS
FOR
COMMUNICATION
AND
AS
WIRELESS
COMMUNICA
THIS
INNOVATIVE
PARADIGM
IS
THE
HEALTHCARE
DOMAIN
TIONS
ARE
EASIER
TO
INTERCEPT
ALL
COMMUNICATIONS
SHOULD
BE
IN
THIS
SURVEY
WE
EXPLORED
THE
APPLICATION
OF
AMI
IN
ENCRYPTED
AND
MADE
SECURE
PERSONAL
MONITORING
DEVICES
HEALTHCARE
FROM
VARIOUS
PERSPECTIVES
WE
DISCUSSED
THE
USE
SHOULD
AUTHENTICATE
THE
IDENTITY
OF
THEIR
USERS
USING
OF
AMI
IN
HEALTHCARE
BASED
ON
INDIVIDUALS
MEDICAL
UNOBTRUSIVE
BIOMETRICS
OR
POSSIBLY
KEY
PHYSIOLOGICAL
SIGNS
CONDITIONS
SUCH
AS
PHYSICAL
OR
MENTAL
DISABILITIES
CHRONIC
TO
AVOID
ANY
DATA
TAMPERING
OWNER
AWARE
DEVICES
DISEASE
OR
REHABILITATION
SITUATIONS
FROM
A
DIFFERENT
IN
GENERAL
KOTZ
ET
AL
IDENTIFY
THREE
PARTICULAR
PERSPECTIVE
WE
DISCUSSED
CURRENT
TECHNOLOGY
AND
INFRA
FEATURES
OF
REMOTE
HOME
HEALTHCARE
THAT
HAVE
IMPLICATIONS
STRUCTURE
SUCH
AS
SMART
ENVIRONMENTS
ASSISTIVE
ROBOTS
FOR
PRIVACY
MORE
MEDICAL
DATA
WILL
BE
COLLECTED
ABOUT
A
WEARABLE
SENSORS
AND
SMART
FABRICS
MORE
IMPORTANTLY
WE
PATIENT
OVER
EXTENDED
PERIODS
BROADER
HEALTH
DATA
WILL
PROVIDED
A
HIGH
LEVEL
DESCRIPTION
OF
VARIOUS
AMI
METHOD
BE
COLLECTED
ABOUT
THE
PATIENT
PHYSIOLOGICAL
DATA
INFOR
OLOGIES
IN
THE
HEALTHCARE
DOMAIN
SUCH
AS
AUTOMATED
MATION
ABOUT
AN
INDIVIDUAL
LIFESTYLE
ACTIVITIES
ETC
AND
DECISION
MAKING
PLANNING
TECHNIQUES
ACTIVITY
RECOGNI
A
BROADER
RANGE
OF
APPLICATIONS
WILL
USE
THE
COLLECTED
TION
AND
OTHER
NUMEROUS
TECHNIQUES
DATA
TO
ALLOW
FOR
PROVISION
OF
HEALTHCARE
IN
SUCH
A
SYSTEM
HOWEVER
WE
ARE
AWARE
THAT
THE
GOALS
SET
UP
FOR
AMI
IN
AND
AT
THE
SAME
TIME
TO
MAINTAIN
PRIVACY
A
PRIVACY
BY
HEALTHCARE
ARE
NOT
EASILY
REACHABLE
AND
THERE
ARE
STILL
DESIGN
PBD
APPROACH
CAN
BE
CONSIDERED
PBD
MANY
CHALLENGES
TO
BE
FACED
AND
CONSEQUENTLY
THIS
RE
ADVOCATES
FULL
PRIVACY
PROVISIONS
DURING
DESIGN
IN
A
SEARCH
FIELD
IS
GETTING
MORE
AND
MORE
IMPETUS
RESEARCHERS
PROACTIVE
MANNER
IN
OTHER
WORDS
ONCE
THE
USER
PRIVACY
WITH
DIFFERENT
BACKGROUNDS
ARE
ENHANCING
THE
CURRENT
STATE
REQUIREMENTS
HAVE
BEEN
DETERMINED
THEN
THE
DESIGN
OF
OF
THE
ART
OF
AMI
IN
HEALTHCARE
BY
ADDRESSING
FUNDAMENTAL
THE
SENSOR
SYSTEM
ITSELF
CAN
BE
COMPLETED
PROBLEMS
RELATED
TO
HUMAN
FACTORS
INTELLIGENCE
DESIGN
AND
IMPLEMENTATION
AND
SECURITY
SOCIAL
AND
ETHICAL
ISSUES
AS
D
SOCIAL
AND
ETHICAL
ISSUES
A
RESULT
WE
ARE
CONFIDENT
THAT
THIS
SYNERGIC
APPROACH
WILL
THE
INITIAL
EUROPEAN
COMMISSION
ISTAG
REPORT
MATERIALIZE
THE
COMPLETE
VISION
OF
AMI
AND
ITS
FULL
IDENTIFIED
SEVERAL
CHARACTERISTICS
NECESSARY
FOR
SOCIAL
APPLICATION
IN
HEALTHCARE
AND
HUMAN
WELLBEING
THE
COLLECTIVE
INTELLIGENT
BEHAVIOUR
OF
INSECT
OR
ANIMAL
GROUPS
IN
NATURE
SUCH
AS
FLOCKS
OF
BIRDS
COLONIES
OF
ANTS
SCHOOLS
OF
FISH
SWARMS
OF
BEES
AND
TERMITES
HAVE
ATTRACTED
THE
ATTENTION
OF
RESEARCHERS
THE
AGGREGATE
BEHAVIOUR
OF
INSECTS
OR
ANIMALS
IS
CALLED
SWARM
BEHAVIOUR
ENTOMOLOGISTS
HAVE
STUDIED
THIS
COLLECTIVE
BEHAVIOUR
TO
MODEL
BIOLOGICAL
SWARMS
AND
ENGINEERS
APPLIED
THESE
MODELS
AS
A
FRAMEWORK
FOR
SOLVING
COMPLEX
REAL
WORLD
PROBLEMS
THIS
BRANCH
OF
ARTIFICIAL
INTELLIGENCE
WHICH
DEALS
WITH
THE
COLLECTIVE
BEHAVIOUR
OF
SWARMS
THROUGH
COMPLEX
INTERACTION
OF
INDIVIDUALS
WITHOUT
SUPERVISION
IS
REFERRED
TO
AS
SWARM
INTELLIGENCE
BONABEAU
DEFINED
SWARM
INTELLIGENCE
AS
ANY
ATTEMPT
TO
DESIGN
ALGORITHMS
OR
DISTRIBUTED
PROBLEM
SOLVING
DEVICES
INSPIRED
BY
THE
COLLECTIVE
BEHAVIOUR
OF
THE
SOCIAL
INSECT
COLONIES
AND
OTHER
ANIMAL
SOCIETIES
SWARM
INTEL
LIGENCE
HAS
SOME
ADVANTAGES
SUCH
AS
SCALABILITY
FAULT
TOLERANCE
ADAPTATION
SPEED
MODULARITY
AUTONOMY
AND
PARALLELISM
THE
KEY
COMPONENTS
OF
SWARM
INTELLIGENCE
ARE
SELF
ORGANIZATION
AND
DIVISION
OF
LABOUR
IN
A
SELF
ORGANISING
SYSTEM
EACH
OF
THE
COVERED
UNITS
MAY
RESPOND
TO
LOCAL
STIMULI
INDIVIDUALLY
AND
ACT
TOGETHER
TO
ACCOMPLISH
A
GLOBAL
TASK
VIA
DIVISION
OF
LABOUR
WITHOUT
A
CENTRALIZED
SUPERVISION
THE
ENTIRE
SYSTEM
CAN
ADAPT
TO
INTERNAL
AND
EXTERNAL
CHANGES
EFFICIENTLY
BONABEAU
ET
AL
HAVE
CHARACTERIZED
FOUR
BASIC
PROPERTIES
ON
WHICH
SELF
ORGANIZATION
RELIES
POSITIVE
FEEDBACK
NEGATIVE
FEEDBACK
FLUC
TUATIONS
AND
MULTIPLE
INTERACTIONS
POSITIVE
FEEDBACK
MEANS
THAT
AN
INDIVIDUAL
RECRUITS
OTHER
INDIVIDUALS
BY
SOME
DIREC
TIVE
SUCH
AS
DANCING
OF
BEES
IN
ORDER
TO
LEAD
SOME
OTHER
BEES
ONTO
A
SPECIFIC
FOOD
SOURCE
SITE
NEGATIVE
FEEDBACK
AVOIDS
ALL
INDIVIDUALS
ACCUMULATING
ON
THE
SAME
TASK
BY
COUNTERBALANCING
THE
ATTRACTION
NEGATIVELY
SUCH
AS
ABANDONING
THE
EXHAUSTED
FOOD
SOURCE
FLUCTUATIONS
ARE
RANDOM
BEHAVIOURS
OF
INDIVIDUALS
IN
ORDER
TO
EXPLORE
NEW
STATES
SUCH
AS
RANDOM
FLIGHTS
OF
SCOUTS
IN
A
BEE
SWARM
MULTIPLE
INTERACTIONS
ARE
THE
BASIS
OF
THE
TASKS
TO
BE
CARRIED
OUT
BY
CERTAIN
RULES
BEE
SWARMS
EXHIBIT
MANY
INTELLIGENT
BEHAVIOURS
IN
THEIR
TASKS
SUCH
AS
NEST
SITE
BUILDING
MARRIAGE
FORAGING
NAVIGATION
AND
TASK
SELECTION
THERE
IS
AN
EFFICIENT
TASK
SELECTION
MECHANISM
IN
A
BEE
SWARM
THAT
CAN
BE
ADAPTIVELY
CHANGED
BY
THE
STATE
OF
THE
HIVE
AND
THE
ENVIRONMENT
FORAGING
IS
ANOTHER
CRUCIAL
TASK
FOR
BEES
FORAGE
SELECTION
DEPENDS
ON
RECRUITMENT
FOR
AND
ABANDONMENT
OF
FOOD
SOURCES
THERE
ARE
THREE
TYPES
OF
BEES
ASSOCIATED
WITH
THE
FORAGING
TASK
WITH
RESPECT
TO
THEIR
SELECTION
MECHANISMS
EMPLOYED
BEES
FLY
ONTO
THE
SOURCES
WHICH
THEY
ARE
EXPLOITING
ONLOOKER
BEES
CHOOSE
THE
SOURCES
BY
WATCHING
CORRESPONDING
AUTHOR
TEL
FAX
E
MAIL
ADDRESSES
BAHRIYE
ERCIYES
EDU
TR
B
AKAY
KARABOGA
ERCIYES
EDU
TR
D
KARABOGA
SEE
FRONT
MATTER
ELSEVIER
INC
ALL
RIGHTS
RESERVED
DOI
J
INS
CONTENTS
LISTS
AVAILABLE
AT
SCIENCEDIRECT
INFORMATION
SCIENCES
JOURNAL
HOMEPAGE
WWW
ELSEVIER
COM
LOCATE
INS
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
THE
DANCES
PERFORMED
BY
EMPLOYED
BEES
AND
SCOUTS
CHOOSE
SOURCES
RANDOMLY
BY
MEANS
OF
SOME
INTERNAL
MOTIVATION
OR
POS
SIBLE
EXTERNAL
CLUE
THE
EXCHANGE
OF
INFORMATION
AMONG
BEES
IS
THE
MOST
IMPORTANT
OCCURRENCE
IN
THE
FORMATION
OF
THE
COL
LECTIVE
KNOWLEDGE
THE
MOST
IMPORTANT
PART
OF
THE
HIVE
IN
TERMS
OF
EXCHANGING
INFORMATION
IS
THE
DANCING
AREA
COMMUNICATION
AMONG
BEES
RELATED
TO
THE
QUALITY
OF
FOOD
SOURCES
TAKES
PLACE
IN
THE
DANCING
AREA
VARIOUS
DANCES
ARE
PER
FORMED
ON
THE
DANCING
AREA
SUCH
AS
WAGGLE
ROUND
TREMBLE
DEPENDING
ON
THE
DISTANCE
OF
THE
DISCOVERED
SOURCE
ALTHOUGH
THE
ANT
COLONY
OPTIMIZATION
ACO
ALGORITHM
SIMULATING
THE
BEHAVIOUR
OF
ANT
COLONIES
AND
PARTICLE
SWARM
OPTIMIZATION
PSO
ALGORITHM
MIMICKING
FLOCKS
OF
BIRDS
ARE
THE
MOST
POPULAR
INTELLIGENCE
BASED
OPTIMIZATION
ALGORITHMS
THERE
ARE
SOME
ALGORITHMS
PRESENTED
IN
THE
LITERATURE
BASED
ON
THE
FORAGING
BEHAVIOUR
OF
A
BEE
SWARM
TERESHKO
DEVELOPED
A
MODEL
OF
FORAGING
BEHAVIOUR
OF
A
HONEYBEE
COLONY
BASED
ON
REACTION
DIFFUSION
EQUATIONS
LUCIC
AND
TEODOROVIC
DEVELOPED
THE
BEE
SYSTEM
BASED
ON
THE
FORAGING
BEHAVIOUR
OF
A
BEE
COLONY
FOR
SOLVING
DIFFICULT
COMBINATORIAL
OPTIMIZATION
PROBLEMS
ANOTHER
ALGORITHM
IS
BEEADHOC
PROPOSED
BY
WEDDE
AND
FAROOQ
WHICH
IS
A
ROUTING
ALGORITHM
FOR
ENERGY
EFFICIENT
ROUTING
IN
MOBILE
AD
HOC
NETWORKS
BEEADHOC
IS
ALSO
INSPIRED
BY
THE
FORAGING
PRINCIPLES
OF
HONEY
BEES
YANG
PRESENTED
A
VIRTUAL
BEE
ALGORITHM
VBA
TO
SOLVE
NUMERICAL
OPTIMIZATION
PROBLEMS
KARABOGA
INTRODUCED
A
BEE
SWARM
ALGORITHM
CALLED
THE
ARTIFICIAL
BEE
COLONY
ABC
ALGORITHM
THAT
SIMULATES
THE
FORAGING
BEHAVIOUR
OF
BEES
FOR
MULTIMODAL
AND
MULTI
DIMENSIONAL
NUMERICAL
OPTIMIZATION
PROBLEMS
PHAM
ET
AL
ALSO
DESCRIBED
THE
BEES
ALGORITHM
WHICH
MIMICS
THE
FORAGING
BEHAVIOUR
OF
HONEY
BEES
GHOSH
AND
MARSHALL
PROPOSED
A
MODEL
OF
LEARNING
AND
COLLECTIVE
DECISION
MAKING
IN
HONEY
BEES
ENGAGED
IN
FORAGING
THEY
EMPLOYED
THEIR
MODEL
FOR
A
SWARM
OF
ROBOTS
DRIAS
AND
YAHI
INTRODUCED
A
META
HEURISTIC
NAMED
BEES
SWARM
OPTIMIZATION
BSO
BASED
ON
THE
BEHAVIOUR
OF
REAL
BEES
FOR
SOLVING
MAXIMUM
WEIGHT
SATISFIABILITY
PROBLEMS
CHONG
ET
AL
DESCRIBED
A
BEE
COLONY
OPTIMIZATION
ALGORITHM
BASED
ON
THE
FORAGING
BAHAVIOUR
AND
THE
WAGGLE
DANCE
THE
ALGORITHM
WAS
APPLIED
TO
JOB
SHOP
SCHEDULING
BAIG
AND
RASHID
PRESENTED
HONEY
BEE
FORAGING
HBF
ALGORITHM
WHICH
SIMULATES
THE
FORAGING
BEHAVIOUR
OF
THE
HONEY
BEES
AND
PERFORMS
SWARM
BASED
COLLECTIVE
FORAGING
IN
PROMISING
NEIGHBORHOODS
WITH
INDIVIDUAL
SCOUTING
SEARCHES
IN
OTHER
AREAS
QUIJANO
AND
PASSINO
INTRODUCED
A
FORAGING
MODEL
OF
HONEY
BEES
FOR
SOLVING
A
CLASS
OF
OPTIMAL
RESOURCE
ALLOCATION
PROBLEMS
LU
AND
ZHOU
DEVELOPED
BEE
COLLECTING
POLLEN
ALGORITHM
BCPA
BY
SIMULATING
THE
HONEYBEES
POLLEN
COLLECTING
BEHAVIOUR
FOR
SOLVING
THE
TRAVELLING
SALESMAN
PROBLEM
KO
ET
AL
PROPOSED
A
SELF
ADAPTIVE
GRID
COMPUTING
PROTOCOL
CALLED
HONEYADAPT
WHICH
IS
BASED
ON
ADAPTIVE
BEE
FORAGING
BEHAVIOUR
IN
NATURE
IN
THIS
WORK
SOME
MODIFICATIONS
TO
THE
STANDARD
ABC
ALGORITHM
ARE
INTRODUCED
AND
THE
PERFORMANCE
OF
THE
MODIFIED
ABC
ALGORITHM
IS
INVESTIGATED
FOR
REAL
PARAMETER
OPTIMIZATION
ON
BOTH
BASIC
AND
COMPOSITE
FUNCTIONS
PRESENTED
AT
THE
CONGRESS
OF
EVOLUTIONARY
COMPUTATION
EFFECTS
OF
THE
PERTURBATION
RATE
THAT
CONTROLS
THE
FREQUENCY
OF
PARAM
ETER
CHANGE
THE
SCALING
FACTOR
STEP
SIZE
THAT
DETERMINES
THE
MAGNITUDE
OF
CHANGE
IN
PARAMETERS
WHILE
PRODUCING
A
NEIGH
BORING
SOLUTION
AND
THE
LIMIT
PARAMETER
ON
THE
PERFORMANCE
OF
THE
ABC
ALGORITHM
ARE
INVESTIGATED
ON
REAL
PARAMETER
OPTIMIZATION
THE
REST
OF
THE
PAPER
IS
ORGANIZED
AS
FOLLOWS
IN
SECTION
THE
ABC
ALGORITHM
IS
DESCRIBED
IN
SECTION
THE
WORKS
RELATED
TO
THE
ABC
ALGORITHM
ARE
SUMMARIZED
AND
THEN
THE
MODIFICATIONS
TO
THE
BASIC
ABC
ALGORITHM
ARE
INTRODUCED
IN
SECTION
IN
SECTION
EXPERIMENTS
ARE
PRESENTED
AND
THE
RESULTS
ARE
DISCUSSED
AND
IN
SECTION
A
THOROUGH
COMPARATIVE
ANALYSIS
INCLUD
ING
THE
ALGORITHMS
CONSIDERED
IN
THIS
STUDY
IS
PRESENTED
ARTIFICIAL
BEE
COLONY
ALGORITHM
IN
A
REAL
BEE
COLONY
SOME
TASKS
ARE
PERFORMED
BY
SPECIALIZED
INDIVIDUALS
THESE
SPECIALIZED
BEES
TRY
TO
MAXIMIZE
THE
NEC
TAR
AMOUNT
STORED
IN
THE
HIVE
USING
EFFICIENT
DIVISION
OF
LABOUR
AND
SELF
ORGANIZATION
THE
ARTIFICIAL
BEE
COLONY
ABC
ALGO
RITHM
PROPOSED
BY
KARABOGA
IN
FOR
REAL
PARAMETER
OPTIMIZATION
IS
A
RECENTLY
INTRODUCED
OPTIMIZATION
ALGORITHM
WHICH
SIMULATES
THE
FORAGING
BEHAVIOUR
OF
A
BEE
COLONY
THE
MINIMAL
MODEL
OF
SWARM
INTELLIGENT
FORAGE
SELECTION
IN
A
HONEY
BEE
COLONY
WHICH
THE
ABC
ALGORITHM
SIMULATES
CONSISTS
OF
THREE
KINDS
OF
BEES
EMPLOYED
BEES
ONLOOKER
BEES
AND
SCOUT
BEES
HALF
OF
THE
COLONY
CONSISTS
OF
EMPLOYED
BEES
AND
THE
OTHER
HALF
INCLUDES
ONLOOKER
BEES
EMPLOYED
BEES
ARE
RESPONSIBLE
FOR
EXPLOITING
THE
NECTAR
SOURCES
EXPLORED
BEFORE
AND
GIVING
INFORMATION
TO
THE
WAITING
BEES
ONLOOKER
BEES
IN
THE
HIVE
ABOUT
THE
QUALITY
OF
THE
FOOD
SOURCE
SITES
WHICH
THEY
ARE
EXPLOITING
ONLOOKER
BEES
WAIT
IN
THE
HIVE
AND
DECIDE
ON
A
FOOD
SOURCE
TO
EXPLOIT
BASED
ON
THE
INFORMATION
SHARED
BY
THE
EMPLOYED
BEES
SCOUTS
EITHER
RANDOMLY
SEARCH
THE
ENVI
RONMENT
IN
ORDER
TO
FIND
A
NEW
FOOD
SOURCE
DEPENDING
ON
AN
INTERNAL
MOTIVATION
OR
BASED
ON
POSSIBLE
EXTERNAL
CLUES
THIS
EMERGENT
INTELLIGENT
BEHAVIOUR
IN
FORAGING
BEES
CAN
BE
SUMMARIZED
AS
FOLLOWS
AT
THE
INITIAL
PHASE
OF
THE
FORAGING
PROCESS
THE
BEES
START
TO
EXPLORE
THE
ENVIRONMENT
RANDOMLY
IN
ORDER
TO
FIND
A
FOOD
SOURCE
AFTER
FINDING
A
FOOD
SOURCE
THE
BEE
BECOMES
AN
EMPLOYED
FORAGER
AND
STARTS
TO
EXPLOIT
THE
DISCOVERED
SOURCE
THE
EMPLOYED
BEE
RETURNS
TO
THE
HIVE
WITH
THE
NECTAR
AND
UNLOADS
THE
NECTAR
AFTER
UNLOADING
THE
NECTAR
SHE
CAN
GO
BACK
TO
HER
DISCOVERED
SOURCE
SITE
DIRECTLY
OR
SHE
CAN
SHARE
INFORMATION
ABOUT
HER
SOURCE
SITE
BY
PERFORMING
A
DANCE
ON
THE
DANCE
AREA
IF
HER
SOURCE
IS
EXHAUSTED
SHE
BECOMES
A
SCOUT
AND
STARTS
TO
RANDOMLY
SEARCH
FOR
A
NEW
SOURCE
ONLOOKER
BEES
WAITING
IN
THE
HIVE
WATCH
THE
DANCES
ADVERTISING
THE
PROFITABLE
SOURCES
AND
CHOOSE
A
SOURCE
SITE
DEPENDING
ON
THE
FREQUENCY
OF
A
DANCE
PROPORTIONAL
TO
THE
QUALITY
OF
THE
SOURCE
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
IN
THE
ABC
ALGORITHM
PROPOSED
BY
KARABOGA
THE
POSITION
OF
A
FOOD
SOURCE
REPRESENTS
A
POSSIBLE
SOLUTION
TO
THE
OPTIMIZA
TION
PROBLEM
AND
THE
NECTAR
AMOUNT
OF
A
FOOD
SOURCE
CORRESPONDS
TO
THE
PROFITABILITY
FITNESS
OF
THE
ASSOCIATED
SOLUTION
EACH
FOOD
SOURCE
IS
EXPLOITED
BY
ONLY
ONE
EMPLOYED
BEE
IN
OTHER
WORDS
THE
NUMBER
OF
EMPLOYED
BEES
IS
EQUAL
TO
THE
NUM
BER
OF
FOOD
SOURCES
EXISTING
AROUND
THE
HIVE
NUMBER
OF
SOLUTIONS
IN
THE
POPULATION
THE
EMPLOYED
BEE
WHOSE
FOOD
SOURCE
HAS
BEEN
ABANDONED
BECOMES
A
SCOUT
USING
THE
ANALOGY
BETWEEN
EMERGENT
INTELLIGENCE
IN
FORAGING
OF
BEES
AND
THE
ABC
ALGORITHM
THE
UNITS
OF
THE
BASIC
ABC
ALGORITHM
CAN
BE
EXPLAINED
AS
FOLLOWS
PRODUCING
INITIAL
FOOD
SOURCE
SITES
IF
THE
SEARCH
SPACE
IS
CONSIDERED
TO
BE
THE
ENVIRONMENT
OF
THE
HIVE
THAT
CONTAINS
THE
FOOD
SOURCE
SITES
THE
ALGORITHM
STARTS
WITH
RANDOMLY
PRODUCING
FOOD
SOURCE
SITES
THAT
CORRESPOND
TO
THE
SOLUTIONS
IN
THE
SEARCH
SPACE
INITIAL
FOOD
SOURCES
ARE
PRO
DUCED
RANDOMLY
WITHIN
THE
RANGE
OF
THE
BOUNDARIES
OF
THE
PARAMETERS
X
IJ
XMIN
J
Þ
J
À
XMIN
J
Þ
WHERE
I
SN
J
D
SN
IS
THE
NUMBER
OF
FOOD
SOURCES
AND
D
IS
THE
NUMBER
OF
OPTIMIZATION
PARAMETERS
IN
ADDITION
COUNTERS
WHICH
STORE
THE
NUMBERS
OF
TRIALS
OF
SOLUTIONS
ARE
RESET
TO
IN
THIS
PHASE
AFTER
INITIALIZATION
THE
POPULATION
OF
THE
FOOD
SOURCES
SOLUTIONS
IS
SUBJECTED
TO
REPEAT
CYCLES
OF
THE
SEARCH
PROCESSES
OF
THE
EMPLOYED
BEES
THE
ONLOOKER
BEES
AND
THE
SCOUT
BEES
TERMINATION
CRITERIA
FOR
THE
ABC
ALGORITHM
MIGHT
BE
REACHING
A
MAXIMUM
CYCLE
NUMBER
MCN
OR
MEETING
AN
ERROR
TOLERANCE
SENDING
EMPLOYED
BEES
TO
THE
FOOD
SOURCE
SITES
AS
MENTIONED
EARLIER
EACH
EMPLOYED
BEE
IS
ASSOCIATED
WITH
ONLY
ONE
FOOD
SOURCE
SITE
HENCE
THE
NUMBER
OF
FOOD
SOURCE
SITES
IS
EQUAL
TO
THE
NUMBER
OF
EMPLOYED
BEES
AN
EMPLOYED
BEE
PRODUCES
A
MODIFICATION
ON
THE
POSITION
OF
THE
FOOD
SOURCE
SOLUTION
IN
HER
MEMORY
DEPENDING
ON
LOCAL
INFORMATION
VISUAL
INFORMATION
AND
FINDS
A
NEIGHBORING
FOOD
SOURCE
AND
THEN
EVALUATES
ITS
QUALITY
IN
ABC
FINDING
A
NEIGHBORING
FOOD
SOURCE
IS
DEFINED
BY
T
IJ
X
IJ
Þ
IJ
ÐX
IJ
À
X
KJ
Þ
WITHIN
THE
NEIGBOURHOOD
OF
EVERY
FOOD
SOURCE
SITE
REPRESENTED
BY
X
I
A
FOOD
SOURCE
T
I
IS
DETERMINED
BY
CHANGING
ONE
PARAM
ETER
OF
X
I
IN
EQ
J
IS
A
RANDOM
INTEGER
IN
THE
RANGE
D
AND
K
SN
IS
A
RANDOMLY
CHOSEN
INDEX
THAT
HAS
TO
BE
DIFFERENT
FROM
I
IJ
IS
A
UNIFORMLY
DISTRIBUTED
REAL
RANDOM
NUMBER
IN
THE
RANGE
AS
CAN
BE
SEEN
FROM
EQ
AS
THE
DIFFERENCE
BETWEEN
THE
PARAMETERS
OF
THE
X
I
J
AND
X
K
J
DECREASES
THE
PERTURBATION
ON
THE
POSITION
X
I
J
DECREASES
THUS
AS
THE
SEARCH
APPROACHES
TO
THE
OPTIMAL
SOLUTION
IN
THE
SEARCH
SPACE
THE
STEP
LENGTH
IS
ADAP
TIVELY
REDUCED
IF
A
PARAMETER
VALUE
PRODUCED
BY
THIS
OPERATION
EXCEEDS
ITS
PREDETERMINED
BOUNDARIES
THE
PARAMETER
CAN
BE
SET
TO
AN
ACCEPTABLE
VALUE
IN
THIS
WORK
THE
VALUE
OF
THE
PARAMETER
EXCEEDING
ITS
BOUNDARY
IS
SET
TO
ITS
BOUNDARIES
IF
X
I
XMAX
I
THEN
X
I
XMAX
I
AFTER
IF
X
I
PRODUCINGT
XMIN
I
THEN
X
I
I
WITHIN
XMIN
I
THE
BOUNDARIES
A
FITNESS
VALUE
FOR
A
MINIMIZATION
PROBLEM
CAN
BE
ASSIGNED
TO
THE
SOLUTIONT
I
BY
FITNESS
I
WHERE
F
I
Þ
F
I
Þ
Þ
ABSÐF
I
IF
F
I
P
Þ
IF
F
I
IS
THE
COST
VALUE
OF
THE
SOLUTION
T
I
FOR
MAXIMIZATION
PROBLEMS
THE
COST
FUNCTION
CAN
BE
DIRECTLY
USED
AS
A
FITNESS
FUNCTION
SENTING
A
THE
GREEDY
SELECTION
IS
APPLIED
BETWEEN
X
I
AND
NECTAR
AMOUNT
OF
THE
FOOD
SOURCES
AT
X
I
AND
T
I
T
I
THEN
IF
THE
BETTER
ONE
IS
SELECTED
DEPENDING
ON
FITNESS
VALUES
REPRE
THE
SOURCE
AT
T
I
IS
SUPERIOR
TO
THAT
OF
X
I
IN
TERMS
OF
PROFITABILITY
THE
EMPLOYED
BEE
MEMORIZES
THE
NEW
POSITION
AND
FORGETS
THE
OLD
ONE
OTHERWISE
THE
PREVIOUS
POSITION
IS
KEPT
IN
MEMORY
IF
X
I
CANNOT
BE
IMPROVED
ITS
COUNTER
HOLDING
THE
NUMBER
OF
TRIALS
IS
INCREMENTED
BY
OTHERWISE
THE
COUNTER
IS
RESET
TO
CALCULATING
PROBABILITY
VALUES
INVOLVED
IN
PROBABILISTIC
SELECTION
AFTER
ALL
EMPLOYED
BEES
COMPLETE
THEIR
SEARCHES
THEY
SHARE
THEIR
INFORMATION
RELATED
TO
THE
NECTAR
AMOUNTS
AND
THE
POSI
TIONS
OF
THEIR
SOURCES
WITH
THE
ONLOOKER
BEES
ON
THE
DANCE
AREA
THIS
IS
THE
MULTIPLE
INTERACTION
FEATURE
OF
THE
ARTIFICIAL
BEES
OF
ABC
AN
ONLOOKER
BEE
EVALUATES
THE
NECTAR
INFORMATION
TAKEN
FROM
ALL
EMPLOYED
BEES
AND
CHOOSES
A
FOOD
SOURCE
SITE
WITH
A
PROBABILITY
RELATED
TO
ITS
NECTAR
AMOUNT
THIS
PROBABILISTIC
SELECTION
DEPENDS
ON
THE
FITNESS
VALUES
OF
THE
SOLUTIONS
IN
THE
POP
ULATION
A
FITNESS
BASED
SELECTION
SCHEME
MIGHT
BE
A
ROULETTE
WHEEL
RANKING
BASED
STOCHASTIC
UNIVERSAL
SAMPLING
TOURNA
MENT
SELECTION
OR
ANOTHER
SELECTION
SCHEME
IN
BASIC
ABC
ROULETTE
WHEEL
SELECTION
SCHEME
IN
WHICH
EACH
SLICE
IS
PROPORTIONAL
IN
SIZE
TO
THE
FITNESS
VALUE
IS
EMPLOYED
P
I
P
SN
FITNESS
FITNESS
I
I
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
IN
THIS
PROBABILISTIC
SELECTION
SCHEME
AS
THE
NECTAR
AMOUNT
OF
FOOD
SOURCES
THE
FITNESS
OF
SOLUTIONS
INCREASES
THE
NUMBER
OF
ONLOOKERS
VISITING
THEM
INCREASES
TOO
THIS
IS
THE
POSITIVE
FEEDBACK
FEATURE
OF
ABC
FOOD
SOURCE
SITE
SELECTION
BY
ONLOOKERS
BASED
ON
THE
INFORMATION
PROVIDED
BY
EMPLOYED
BEES
IN
THE
ABC
ALGORITHM
A
RANDOM
REAL
NUMBER
WITHIN
THE
RANGE
IS
GENERATED
FOR
EACH
SOURCE
IF
THE
PROBABILITY
VALUE
P
I
IN
EQ
ASSOCIATED
WITH
THAT
SOURCE
IS
GREATER
THAN
THIS
RANDOM
NUMBER
THEN
THE
ONLOOKER
BEE
PRODUCES
A
MODIFICATION
ON
INITIAL
FOOD
POSITIONS
CALCULATE
NECTAR
AMOUNTS
DETERMINE
NEIGHBORS
OF
THE
CHOSEN
FOOD
SOURCES
BY
THE
EMPLOYED
BEES
CALCULATE
NECTAR
AMOUNTS
CALCULATE
NECTAR
AMOUNT
SELECTION
DETERMINE
A
NEIGHBOR
OF
THE
CHOSEN
FOOD
SOURCE
BY
THE
ONLOOKER
NO
ALL
ONLOOKERS
DISTRIBUTED
YES
MEMORIZE
THE
POSITION
OF
BEST
FOOD
SOURCE
FIND
THE
ABANDONED
FOOD
SOURCES
PRODUCE
NEW
POSITIONS
FOR
THE
ABANDONED
FOOD
SOURCES
ARE
TERMINATION
CRITERIA
SATISFIED
YES
FINAL
FOOD
POSITIONS
NO
FIG
FLOWCHART
OF
THE
ARTIFICIAL
BEE
COLONY
ALGORITHM
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
THE
POSITION
OF
THIS
FOOD
SOURCE
SITE
BY
USING
EQ
AS
IN
THE
CASE
OF
THE
EMPLOYED
BEE
AFTER
THE
SOURCE
IS
EVALUATED
GREEDY
SELECTION
IS
APPLIED
AND
THE
ONLOOKER
BEE
EITHER
MEMORIZES
THE
NEW
POSITION
BY
FORGETTING
THE
OLD
ONE
OR
KEEPS
THE
OLD
ONE
IF
SOLUTION
X
I
CANNOT
BE
IMPROVED
ITS
COUNTER
HOLDING
TRIALS
IS
INCREMENTED
BY
OTHERWISE
THE
COUNTER
IS
RESET
TO
THIS
PRO
CESS
IS
REPEATED
UNTIL
ALL
ONLOOKERS
ARE
DISTRIBUTED
ONTO
FOOD
SOURCE
SITES
ABANDONMENT
CRITERIA
LIMIT
AND
SCOUT
PRODUCTION
IN
A
CYCLE
AFTER
ALL
EMPLOYED
BEES
AND
ONLOOKER
BEES
COMPLETE
THEIR
SEARCHES
THE
ALGORITHM
CHECKS
TO
SEE
IF
THERE
IS
ANY
EXHAUSTED
SOURCE
TO
BE
ABANDONED
IN
ORDER
TO
DECIDE
IF
A
SOURCE
IS
TO
BE
ABANDONED
THE
COUNTERS
WHICH
HAVE
BEEN
UPDATED
DURING
SEARCH
ARE
USED
IF
THE
VALUE
OF
THE
COUNTER
IS
GREATER
THAN
THE
CONTROL
PARAMETER
OF
THE
ABC
ALGORITHM
KNOWN
AS
THE
LIMIT
THEN
THE
SOURCE
ASSOCIATED
WITH
THIS
COUNTER
IS
ASSUMED
TO
BE
EXHAUSTED
AND
IS
ABANDONED
THE
FOOD
SOURCE
ABAN
DONED
BY
ITS
BEE
IS
REPLACED
WITH
A
NEW
FOOD
SOURCE
DISCOVERED
BY
THE
SCOUT
WHICH
REPRESENTS
THE
NEGATIVE
FEEDBACK
MECH
ANISM
AND
FLUCTUATION
PROPERTY
IN
THE
SELF
ORGANIZATION
OF
ABC
THIS
IS
SIMULATED
BY
PRODUCING
A
SITE
POSITION
RANDOMLY
AND
REPLACING
IT
WITH
THE
ABANDONED
ONE
ASSUME
THAT
THE
ABANDONED
SOURCE
IS
X
I
THEN
THE
SCOUT
RANDOMLY
DISCOVERS
A
NEW
FOOD
SOURCE
TO
BE
REPLACED
WITH
X
I
THIS
OPERATION
CAN
BE
DEFINED
AS
IN
IN
BASIC
ABC
IT
IS
ASSUMED
THAT
ONLY
ONE
SOURCE
CAN
BE
EXHAUSTED
IN
EACH
CYCLE
AND
ONLY
ONE
EMPLOYED
BEE
CAN
BE
A
SCOUT
IF
MORE
THAN
ONE
COUNTER
EXCEEDS
THE
LIMIT
VALUE
ONE
OF
THE
MAXIMUM
ONES
MIGHT
BE
CHOSEN
PROGRAMMATICALLY
ALL
THESE
UNITS
AND
INTERACTIONS
BETWEEN
THEM
ARE
SHOWN
AS
A
FLOWCHART
ON
FIG
PREVIOUS
WORK
ON
THE
ABC
ALGORITHM
THE
ABC
ALGORITHM
WAS
FIRST
APPLIED
TO
NUMERICAL
OPTIMIZATION
PERFORMANCE
OF
THE
ABC
ALGORITHM
WAS
COMPARED
TO
THOSE
OF
THE
GENETIC
ALGORITHM
GA
PARTICLE
SWARM
INSPIRED
EVOLUTIONARY
ALGORITHM
PS
EA
AND
TO
THOSE
OF
DIFFER
ENTIAL
EVOLUTION
DE
PSO
AND
EVOLUTIONARY
ALGORITHM
EA
ON
A
LIMITED
NUMBER
OF
BASIC
TEST
PROBLEMS
THE
EFFECT
OF
REGION
SCALING
ON
ALGORITHMS
INCLUDING
ABC
DE
AND
PSO
ALGORITHMS
WAS
STUDIED
IN
THE
ABC
ALGORITHM
WAS
EXTENDED
FOR
CONSTRAINED
OPTIMIZATION
PROBLEMS
IN
AND
WAS
APPLIED
TO
TRAIN
NEURAL
NETWORKS
TO
MEDICAL
PATTERN
CLASSIFICATION
AND
CLUSTERING
PROBLEMS
TO
SOLVE
TSP
PROBLEMS
FENGLEI
ET
AL
ALSO
STUDIED
THE
CONTROL
MECHANISM
OF
LOCAL
OPTI
MAL
SOLUTION
IN
ORDER
TO
IMPROVE
THE
GLOBAL
SEARCH
ABILITY
OF
THE
ALGORITHM
SINGH
USED
THE
ARTIFICIAL
BEE
COLONY
ALGO
RITHM
FOR
THE
LEAF
CONSTRAINED
MINIMUM
SPANNING
TREE
LCMST
PROBLEM
CALLED
ABC
LCMST
AND
COMPARED
THE
APPROACH
AGAINST
GA
ACO
AND
TABU
SEARCH
TS
IN
IT
IS
REPORTED
THAT
ABC
LCMST
OUTPERFORMS
THE
OTHER
APPROACHES
IN
TERMS
OF
THE
BEST
AND
AVERAGE
SOLUTION
QUALITIES
AND
COMPUTATIONAL
TIME
RAO
ET
AL
APPLIED
THE
ABC
ALGORITHM
TO
NETWORK
RECON
FIGURATION
PROBLEM
IN
A
RADIAL
DISTRIBUTION
SYSTEM
IN
ORDER
TO
MINIMIZE
THE
REAL
POWER
LOSS
IMPROVE
VOLTAGE
PROFILE
AND
BAL
ANCE
FEEDER
LOAD
SUBJECT
TO
THE
RADIAL
NETWORK
STRUCTURE
IN
WHICH
ALL
LOADS
MUST
BE
ENERGIZED
THE
RESULTS
OBTAINED
BY
THE
ABC
ALGORITHM
WERE
BETTER
THAN
THE
OTHER
METHODS
COMPARED
IN
THE
STUDY
IN
TERMS
OF
QUALITY
OF
THE
SOLUTION
AND
COMPUTA
TION
EFFICIENCY
BENDES
AND
OZKAN
USED
THE
ABC
ALGORITHM
FOR
SOLVING
DIRECT
LINEAR
TRANSFORMATION
DLT
WHICH
IS
ONE
OF
THE
CAMERA
CALIBRATION
METHODS
BY
ESTABLISHING
A
RELATION
BETWEEN
OBJECT
COORDINATE
AND
IMAGE
PLANE
LINEARLY
RESULTS
PRODUCED
BY
THE
ABC
ALGORITHM
WERE
COMPARED
AGAINST
THOSE
OF
THE
DE
ALGORITHM
KARABOGA
USED
THE
ABC
ALGORITHM
IN
THE
SIGNAL
PROCESSING
AREA
FOR
DESIGNING
DIGITAL
IIR
FILTERS
QINGXIAN
AND
HAIJUN
PROPOSED
A
MODIFICATION
IN
THE
INITIALI
ZATION
SCHEME
BY
MAKING
THE
INITIAL
GROUP
SYMMETRICAL
AND
THE
BOLTZMANN
SELECTION
MECHANISM
WAS
EMPLOYED
INSTEAD
OF
ROULETTE
WHEEL
SELECTION
FOR
IMPROVING
THE
CONVERGENCE
ABILITY
OF
THE
ABC
ALGORITHM
HEMAMALINI
AND
SIMON
PROPOSED
AN
ECONOMIC
LOAD
DISPATCH
WITH
VALVE
POINT
EFFECT
BY
USING
THE
ABC
ALGORITHM
QUAN
AND
SHI
INTEGRATED
A
SEARCH
ITER
ATION
OPERATOR
BASED
ON
THE
FIXED
POINT
THEOREM
OF
CONTRACTIVE
MAPPING
IN
BANACH
SPACES
WITH
THE
ABC
ALGORITHM
IN
ORDER
TO
IMPROVE
CONVERGENCE
RATE
PAWAR
ET
AL
APPLIED
THE
ABC
ALGORITHM
TO
SOME
PROBLEMS
IN
MECHANICAL
ENGINEERING
INCLUD
ING
MULTI
OBJECTIVE
OPTIMIZATION
OF
ELECTRO
CHEMICAL
MACHINING
PROCESS
PARAMETERS
OPTIMIZATION
OF
PROCESS
PARAMETERS
OF
THE
ABRASIVE
FLOW
MACHINING
PROCESS
AND
THE
MILLING
PROCESS
IN
ORDER
TO
MAXIMIZE
THE
EXPLOITATION
CAPACITY
OF
THE
ONLOOKER
STAGE
TSAI
ET
AL
INTRODUCED
THE
NEWTONIAN
LAW
OF
UNIVERSAL
GRAVITATION
IN
THE
ONLOOKER
PHASE
OF
THE
BASIC
ABC
ALGO
RITHM
IN
WHICH
ONLOOKERS
ARE
SELECTED
BASED
ON
A
ROULETTE
WHEEL
INTERACTIVE
ABC
IABC
BAYKASOGLU
ET
AL
INCORPORATED
THE
ABC
ALGORITHM
WITH
SHIFT
NEIGHBORHOOD
SEARCHES
AND
GREEDY
RANDOMIZED
ADAPTIVE
SEARCH
HEURISTIC
AND
APPLIED
IT
TO
THE
GENERALIZED
ASSIGNMENT
PROBLEM
MODIFIED
ARTIFICIAL
BEE
COLONY
ALGORITHM
THE
BASIC
VERSION
OF
THE
ARTIFICIAL
BEE
COLONY
ALGORITHM
HAS
ONLY
ONE
CONTROL
PARAMETER
LIMIT
APART
FROM
THE
COMMON
CONTROL
PARAMETERS
OF
THE
POPULATION
BASED
ALGORITHMS
SUCH
AS
POPULATION
SIZE
OR
COLONY
SIZE
SN
AND
MAXIMUM
GENERATION
NUMBER
OR
MAXIMUM
CYCLE
NUMBER
MCN
THE
BASIC
VERSION
OF
THE
ABC
ALGORITHM
IS
VERY
EFFICIENT
FOR
MULTIMODAL
AND
MULTI
DIMENSIONAL
BASIC
FUNCTIONS
HOWEVER
THE
CONVERGENCE
RATE
OF
THE
ALGORITHM
IS
POORER
WHEN
WORKING
WITH
CONSTRAINED
PROB
LEMS
COMPOSITE
FUNCTIONS
AND
SOME
NON
SEPARABLE
FUNCTIONS
THIS
ISSUE
ARISES
FROM
THE
STOCHASTIC
VARIATION
PROCESS
IN
WHICH
NEW
SOLUTIONS
ARE
PRODUCED
FROM
THE
PARENT
SOLUTIONS
IN
THIS
PROCESS
SOME
SEARCH
PARAMETERS
SUCH
AS
PERTURBATION
FREQUENCY
OR
MAGNITUDE
OF
THE
PERTURBATION
ARE
IMPORTANT
SINCE
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
THEY
AFFECT
THE
DISTRIBUTION
OF
NEW
SOLUTIONS
IN
ORDER
TO
IMPROVE
THE
CONVERGENCE
RATE
SOME
MODIFICATIONS
HAVE
BEEN
INTRO
DUCED
IN
THE
PERTURBATION
PROCESS
OF
THE
BASIC
ABC
ALGORITHM
FREQUENCY
OF
THE
PERTURBATION
ONE
OF
THE
MODIFICATIONS
IN
THE
ABC
ALGORITHM
IS
CONTROLLING
THE
FREQUENCY
OF
PERTURBATION
IN
THE
BASIC
VERSION
OF
ABC
THIS
FREQUENCY
IS
FIXED
IN
BASIC
ABC
WHILE
PRODUCING
A
NEW
SOLUTION
T
I
CHANGING
ONLY
ONE
PARAMETER
OF
THE
PARENT
SOLUTION
X
I
RESULTS
IN
A
SLOW
CONVERGENCE
RATE
IN
ORDER
TO
OVERCOME
THIS
ISSUE
THE
ABC
ALGORITHM
IS
MODIFIED
BY
INTRODUCING
A
CONTROL
PARAMETER
MODIFICATION
RATE
MR
BY
MEANS
OF
THIS
MODIFICATION
FOR
EACH
PARAMETER
X
IJ
AN
UNIFORMLY
DISTRIBUTED
RANDOM
TABLE
BASIC
UNIMODAL
AND
MULTIMODAL
TEST
FUNCTIONS
EMPLOYED
IN
THE
FIRST
PART
OF
THE
EXPERIMENTS
F
F
X
SEARCH
RANGE
INITIALIZATION
RANGE
FORMULAE
SPHERE
FÐ
D
D
F
ÐXÞ
P
D
I
ROSENBROCK
FÐ
D
D
F
ÐXÞ
P
Þ
ÐX
I
ACKLEY
FÐ
À
I
Þ
À
D
D
F
EXP
Q
FFIFFIFFIFFIFFIFFIFFIFFIFFIFFIFFIFFIFFIFFIFFIFFIFFIFFIFFI
D
P
D
À
EXP
D
Þ
Þ
E
GRIEWANK
FÐ
I
P
D
P
X
I
Þ
D
D
F
ÐXÞ
P
D
Þ
WEIERSTRASS
FÐ
P
D
I
À
Q
D
COS
D
D
F
ÐXÞ
P
K
MAX
H
P
X
I
FFI
I
I
ÀD
AK
COS
P
B
K
ÐX
I
Þ
P
K
MAX
K
A
B
K
MAX
RASTRIGIN
FÐ
D
D
F
ÐXÞ
P
D
I
À
P
X
I
Þ
Þ
NONCONTINUOUS
RASTRIGIN
FÐ
D
D
F
ÐXÞ
P
D
I
À
P
Y
I
Þ
Þ
Y
I
SCHWEFEL
FÐ
X
I
I
J
Þ
JX
I
D
D
F
ÐXÞ
JX
I
J
À
P
P
D
À
X
I
SIN
P
FFIFFIFFIFFIFFIFFIFFI
JX
I
J
TABLE
MEAN
OF
BEST
RESULTS
OBTAINED
THROUGH
INDEPENDENT
RUNS
ON
BASIC
FUNCTIONS
D
MAX
EVAL
MM
MULTIMODAL
UM
UNIMODAL
UM
UM
MM
MM
SPHERE
ROSENBROCK
ACKLEY
GRIEWANK
PSO
W
PSO
CF
PSO
W
LOCAL
PSO
CF
LOCAL
UPSO
FDR
FIPS
CPSO
H
CLPSO
ABC
MR
SF
LIMIT
BASIC
31EÀ009
SF
MR
LIMIT
ASF
LIMIT
MR
SF
78EÀ016
IS
NUMBER
R
IJ
MODIFIED
AS
IN
THE
EQ
T
IJ
X
X
IJ
IJ
Þ
IJ
ÐX
IJ
À
X
KJ
Þ
IF
R
IJ
MR
OTHERWISE
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
TABLE
MEAN
OF
BEST
RESULTS
OBTAINED
THROUGH
INDEPENDENT
RUNS
ON
BASIC
FUNCTIONS
D
MAX
EVAL
MM
MULTIMODAL
UM
UNIMODAL
MM
MM
MM
MM
WEIERSTRASS
NCRASTRIGIN
SCHWEFEL
PSO
W
PSO
CF
PSO
W
LOCAL
PSO
CF
LOCAL
UPSO
FDR
FIPS
CPSO
H
CLPSO
ABC
MR
SF
LIMIT
BASIC
15EÀ007
SF
MR
LIMIT
ASF
LIMIT
MR
SF
32EÀ002
E
E
MR
SPHERE
ROSENBROCK
A
EFFECT
OF
MR
ON
UNIMODAL
FUNC
TIONS
SPHERE
ROSENBROCK
R
O
R
R
E
C
EFFECT
OF
SF
ON
UNIMODAL
FUNCTIONS
ACKLEY
GRIEWANK
WEIERSTRASS
RASTRIGIN
NONCONTINUOUS
RASTRIGIN
SCHWEFEL
D
EFFECT
OF
SF
ON
MULTIMODAL
FUNC
TIONS
R
O
R
R
ACKLEY
GRIEWANK
R
O
R
R
WEIERSTRASS
RASTRIGIN
NONCONTINUOUS
RASTRIGIN
SCHWEFEL
MR
B
EFFECT
OF
MR
ON
MULTIMODAL
FUNC
TIONS
MR
E
E
E
MR
SPHERE
ROSENBROCK
R
O
R
R
R
O
R
R
R
O
R
R
E
EFFECT
OF
LIMIT
ON
UNIMODAL
FUNC
TIONS
ACKLEY
GRIEWANK
WEIERSTRASS
RASTRIGIN
NONCONTINUOUS
RASTRIGIN
SCHWEFEL
LIMIT
F
EFFECT
OF
LIMIT
ON
MULTIMODAL
FUNCTIONS
FIG
MEAN
OF
BEST
FUNCTION
VALUES
FOR
DIFFERENT
CONTROL
PARAMETER
SETTINGS
LIMIT
IS
PRODUCED
AND
IF
THE
RANDOM
NUMBER
IS
LESS
THAN
MR
THEN
THE
PARAMETER
X
IJ
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
SPHERE
ROSENBROCK
R
O
R
R
E
CYCLE
CYCLE
A
CONVERGENCE
GRAPHS
OF
UNIMODAL
FUNCTIONS
R
O
R
R
E
ACKLEY
GRIEWANK
WEIERSTRASS
RASTRIGIN
NONCONTINUOUS
RASTRIGIN
SCHWEFEL
3000
B
CONVERGENCE
GRAPHS
OF
MULTIMODAL
FUNCTIONS
FIG
CONVERGENCE
GRAPHS
OF
THE
ABC
ALGORITHM
ON
BASIC
FUNCTIONS
TABLE
MEAN
AND
STANDARD
DEVIATIONS
OF
ERROR
VALUES
OBTAINED
FROM
THE
ABC
ALGORITHM
WITH
DIFFERENT
COLONY
SIZES
CS
FOR
BASIC
FUNCTIONS
WITH
DIFFERENT
DIMENSIONS
D
CS
FUNCTIONS
D
SPHERE
ROSENBROCK
ACKLEY
GRIEWANK
WEIERSTRASS
RASTRIGIN
NCRASTRIGIN
SCHWEFEL
SPHERE
ROSENBROCK
ACKLEY
25EÀ003
GRIEWANK
WEIERSTRASS
RASTRIGIN
03EÀ001
NCRASTRIGIN
SCHWEFEL
SPHERE
ROSENBROCK
002
ACKLEY
98EÀ004
GRIEWANK
WEIERSTRASS
RASTRIGIN
NCRASTRIGIN
SCHWEFEL
002
WHERE
K
SN
IS
RANDOMLY
CHOSEN
INDEX
THAT
HAS
TO
BE
DIFFERENT
FROM
I
AND
MR
IS
THE
MODIFICATION
RATE
WHICH
TAKES
VALUE
BETWEEN
AND
A
LOWER
VALUE
OF
MR
MAY
CAUSE
SOLUTIONS
TO
IMPROVE
SLOWLY
WHILE
A
HIGHER
ONE
MAY
CAUSE
TOO
MUCH
DIVERSITY
IN
A
SOLUTION
AND
HENCE
IN
THE
POPULATION
MAGNITUDE
OF
THE
PERTURBATION
ANOTHER
MODIFICATION
IS
RELATED
TO
THE
RATIO
OF
THE
VARIANCE
OPERATOR
OF
THE
BASIC
ABC
ALGORITHM
IN
BASIC
ABC
A
RANDOM
PERTURBATION
WHICH
AVOIDS
GETTING
STUCK
AT
LOCAL
MINIMA
IS
ADDED
TO
THE
CURRENT
SOLUTION
IN
ORDER
TO
PRODUCE
A
NEW
SOLUTION
THIS
RANDOM
PERTURBATION
IS
THE
DIFFERENCE
OF
THE
SOLUTIONS
X
I
AND
X
K
WEIGHTED
BY
A
RANDOM
REAL
NUMBER
IJ
THE
VALUE
OF
IJ
VARIES
WITHIN
THE
RANGE
IN
THE
BASIC
ABC
WHILE
IT
VARIES
WITHIN
THE
RANGE
ÀSF
SF
IN
THE
MODIFIED
ABC
ALGORITHM
HENCE
MAGNITUDE
OF
THE
PERTURBATION
IS
CONTROLLED
BY
A
CONTROL
PARAMETER
CALLED
THE
SCALING
FACTOR
SF
THIS
VALUE
IS
SET
BE
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
TABLE
TIME
COMPLEXITY
OF
THE
ABC
ALGORITHM
ON
ROSENBROCK
FUNCTION
D
DIMENSION
T
T
B
T
COMPLEXITY
ÐÐ
T
B
À
T
Þ
T
Þ
D
D
D
TABLE
VALUES
FOR
THE
CONTROL
PARAMETERS
OF
THE
ABC
ALGORITHM
USED
FOR
HYBRID
FUNCTIONS
D
DIMENSION
OF
THE
PROBLEM
COLONY
SIZE
D
MAX
CYCLE
NUMBER
LIMIT
MR
SF
TABLE
TIME
COMPLEXITY
OF
THE
ABC
ALGORITHM
ON
COMPOSITE
FUNCTION
D
DIMENSION
T
T
T
B
COMPLEXITY
ÐÐ
T
B
À
T
Þ
T
Þ
D
D
D
TABLE
D
COLONY
SIZE
LIMIT
CYCLE
MAX
FES
MR
MTE
MEAN
OF
TERM
ERR
OF
RUNS
STE
STD
OF
TERM
ERR
OF
RUNS
FES
PROB
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
MTE
STE
FORE
RUNNING
THE
ALGORITHM
A
LOWER
VALUE
OF
SF
ALLOWS
THE
SEARCH
TO
FINE
TUNING
THE
PROCESS
IN
SMALL
STEPS
WHILE
CAUSING
SLOW
CONVERGENCE
A
LARGER
VALUE
OF
SF
SPEEDS
UP
THE
SEARCH
BUT
IT
REDUCES
THE
EXPLOITATION
CAPABILITY
OF
THE
PERTURBATION
PROCESS
FOR
SOME
CLASSES
OF
PROBLEMS
LOWER
VALUES
OF
SF
ARE
APPROPRIATE
WHILE
FOR
SOME
HIGHER
ONES
ARE
CONVENIENT
FOR
THIS
REASON
THE
MODIFIED
ALGORITHM
MAY
CHANGE
SF
AUTOMATICALLY
DURING
THE
SEARCH
CALLED
ADAPTIVE
SF
ASF
AUTOMATIC
TUNING
OF
SF
IS
CONDUCTED
BY
USING
RECHENBERG
MUTATION
RULE
WHICH
STATES
THAT
THE
RATIO
OF
SUCCESSFUL
MUTATIONS
TO
ALL
MUTATIONS
SHOULD
BE
CHANGING
STEP
SIZE
ACCORDING
TO
RULE
IN
EVERY
M
NUMBER
OF
CYCLES
IS
PERFORMED
AS
IN
THE
EQ
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
TABLE
D
COLONY
SIZE
LIMIT
CYCLE
MAX
FES
MR
MTE
MEAN
OF
TERM
ERR
OF
RUNS
STE
STD
OF
TERM
ERR
OF
RUNS
FES
PROB
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
MTE
STE
TABLE
D
COLONY
SIZE
LIMIT
CYCLE
MAX
FES
MR
MTE
MEAN
OF
TERM
ERR
OF
RUNS
STE
STD
OF
TERM
ERR
OF
RUNS
FES
PROB
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
MTE
STE
SFÐTÞ
Ã
IF
UÐMÞ
SFÐT
Þ
SFÐTÞ
IF
UÐMÞ
SFÐTÞ
IF
UÐMÞ
IF
THE
ALGORITHM
CANNOT
IMPROVE
THE
SOLUTION
WITH
RESPECT
TO
RECHENBERG
RULE
THAT
IS
THE
RATIO
OF
SUCCESSFUL
MUTATIONS
TO
ALL
MUTATIONS
U
M
IS
LESS
THAN
SF
IS
DECREASED
IF
U
M
IS
GREATER
THAN
THEN
SF
IS
INCREASED
IN
ORDER
TO
SPEED
UP
THE
SEARCH
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
TABLE
D
COLONY
SIZE
LIMIT
CYCLE
MAX
FES
MR
MTE
MEAN
OF
TERM
ERR
OF
RUNS
STE
STD
OF
TERM
ERR
OF
RUNS
FES
PROB
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
MTE
STE
TABLE
D
COLONY
SIZE
LIMIT
CYCLE
MAX
FES
MR
MTE
MEAN
OF
TERM
ERR
OF
RUNS
STE
STD
OF
TERM
ERR
OF
RUNS
FES
PROB
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
MTE
STE
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
TABLE
D
COLONY
SIZE
LIMIT
CYCLE
MAX
FES
MR
MTE
MEAN
OF
TERM
ERR
OF
RUNS
STE
STD
OF
TERM
ERR
OF
RUNS
FES
PROB
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
MTE
STE
TABLE
D
COLONY
SIZE
LIMIT
CYCLE
MAX
FES
MR
MTE
MEAN
OF
TERM
ERR
OF
RUNS
STE
STD
OF
TERM
ERR
OF
RUNS
FES
PROB
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
MTE
10EÀ01
STE
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
TABLE
D
COLONY
SIZE
LIMIT
CYCLE
MAX
FES
MR
MTE
MEAN
OF
TERM
ERR
OF
RUNS
STE
STD
OF
TERM
ERR
OF
RUNS
FES
PROB
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
68E
WORST
MEAN
STD
MTE
STE
TABLE
D
COLONY
SIZE
LIMIT
CYCLE
MAX
FES
MR
MTE
MEAN
OF
TERM
ERR
OF
RUNS
STE
STD
OF
TERM
ERR
OF
RUNS
FES
PROB
BEST
MEDIAN
WORST
MEAN
STD
BEST
MEDIAN
WORST
MEAN
STD
16EÀ01
BEST
MEDIAN
19TH
WORST
MEAN
STD
BEST
MEDIAN
19TH
WORST
84E
MEAN
STD
MTE
70E
70E
STE
54EÀ01
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
E
E
E
B
CONVERGENCE
OF
FUNCTIONS
R
O
R
R
O
R
R
O
R
R
R
R
FUNCTION
EVALUATIONS
X
FUNCTION
EVALUATIONS
X
FUNCTION
EVALUATIONS
X
A
CONVERGENCE
OF
FUNCTIONS
C
CONVERGENCE
OF
FUNCTIONS
R
O
R
R
E
R
O
R
R
E
FUNCTION
EVALUATIONS
X
D
CONVERGENCE
OF
FUNCTIONS
FUNCTION
EVALUATIONS
X
E
CONVERGENCE
OF
FUNCTIONS
FIG
LOGARITHMIC
SCALED
BEST
FUNCTION
ERROR
OF
MEDIAN
RUNS
OF
RUNS
FOR
DIMENSION
OF
FUNCTIONS
IN
THE
SET
NUMBERS
IN
THE
LEGEND
CORRESPOND
TO
THE
FUNCTION
NUMBER
TABLE
RESULTS
OF
STATE
OF
ART
ALGORITHMS
FOR
HYBRID
FUNCTIONS
DIMENSION
COLONY
SIZE
CYCLE
FOR
ABC
PSO
RDL
RECOMBINATION
WITH
DYNAMIC
LINKAGE
DISCOVERY
IN
PSO
DMS
PSO
DYNAMIC
MULTI
SWARM
PARTICLE
SWARM
OPTIMIZER
WITH
LOCAL
SEARCH
SPC
PNX
DE
DIFFERENTIAL
EVOLUTION
SADE
SELF
ADAPTIVE
DIFFERENTIAL
EVOLUTION
RESTART
CMA
ES
RESTART
COVARIANCE
MATRIX
ADAPTATION
EVOLUTION
STRATEGY
WITH
INCREASING
POPULATION
SIZE
PSO
RDL
MEAN
47EÀ07
STD
22EÀ07
DMS
PSO
MEAN
STD
SPC
PNX
MEAN
STD
DE
MEAN
STD
SADE
MEAN
STD
RESTART
CMA
ES
MEAN
STD
71EÀ09
ABC
MEAN
STD
68E
ABC
SF
MEAN
STD
54E
ABC
SF
MEAN
STD
ABC
SF
MEAN
STD
ABC
MR
MEAN
STD
ABC
MR
MEAN
57E
STD
ABC
MR
MEAN
STD
ABC
MR
MEAN
STD
ABC
MR
MEAN
STD
ABC
ASF
MR
MEAN
41EÀ12
STD
31EÀ04
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
THE
PSEUDO
CODE
OF
THE
ABC
ALGORITHM
IS
GIVEN
BELOW
INITIALIZE
THE
POPULATION
OF
SOLUTIONS
X
I
J
I
SN
J
D
TRIAL
I
TRIAL
I
IS
THE
NON
IMPROVEMENT
NUMBER
OF
THE
SOLUTION
X
I
USED
FOR
ABANDONMENT
EVALUATE
THE
POPULATION
CYCLE
REPEAT
PRODUCE
A
NEW
FOOD
SOURCE
POPULATION
FOR
EMPLOYED
BEE
FOR
I
TO
SN
DO
PRODUCE
A
NEW
FOOD
SOURCE
T
I
FOR
THE
EMPLOYED
BEE
OF
THE
FOOD
SOURCE
X
I
BY
USING
IN
THE
CASE
OF
MODIFIED
ABC
ALGORITHM
BY
USING
AND
EVALUATE
ITS
QUALITY
APPLY
A
GREEDY
SELECTION
PROCESS
BETWEEN
T
I
AND
X
I
AND
SELECT
THE
BETTER
ONE
IF
SOLUTION
X
I
DOES
NOT
IMPROVE
TRIAL
I
TRIAL
I
OTHERWISE
TRIAL
I
END
FOR
CALCULATE
THE
PROBABILITY
VALUES
P
I
BY
FOR
THE
SOLUTIONS
USING
FITNESS
VALUES
PRODUCE
A
NEW
FOOD
SOURCE
POPULATION
FOR
ONLOOKERS
T
I
REPEAT
IF
RANDOM
P
I
PRODUCE
A
NEW
THEN
T
IJ
FOOD
SOURCE
BY
IN
THE
CASE
OF
THE
MODIFIED
ABC
ALGORITHM
BY
USING
FOR
THE
ONLOOKER
BEE
APPLY
A
GREEDY
SELECTION
PROCESS
BETWEEN
T
I
AND
X
I
AND
SELECT
THE
BETTER
ONE
IF
SOLUTION
X
I
DOES
NOT
IMPROVE
TRIAL
I
TRIAL
I
OTHERWISE
TRIAL
I
T
T
END
IF
UNTIL
T
SN
DETERMINE
SCOUT
IF
MAX
TRIAL
I
LIMIT
THEN
REPLACE
X
I
WITH
A
NEW
RANDOMLY
PRODUCED
SOLUTION
BY
END
IF
MEMORIZE
THE
BEST
SOLUTION
ACHIEVED
SO
FAR
CYCLE
CYCLE
UNTIL
CYCLE
MAXIMUM
CYCLE
NUMBER
EXPERIMENTS
AND
DISCUSSION
WE
HAVE
TESTED
THE
ABC
ALGORITHM
AND
ITS
VARIANTS
IN
TWO
GROUPS
OF
FUNCTIONS
THE
FIRST
GROUP
CONSISTS
OF
BASIC
FUNCTIONS
AND
THE
SECOND
ONE
HAS
ONE
SET
OF
COMPOSITE
FUNCTIONS
EXPERIMENTS
ON
BASIC
FUNCTIONS
IN
THE
FIRST
PART
OF
THE
EXPERIMENTS
IN
ORDER
TO
ASSESS
THE
PERFORMANCE
OF
THE
ABC
ALGORITHM
WE
CONSIDERED
BASIC
FUNCTIONS
USED
IN
AND
GIVEN
IN
TABLE
THERE
ARE
TWO
GROUPS
OF
FUNCTIONS
IN
THE
TABLE
THE
FIRST
GROUP
CONSISTS
OF
UNIMODAL
FUNCTIONS
SPHERE
AND
ROSENBROCK
SPHERE
FUNCTION
IS
A
CONTINUOUS
CONVEX
AND
UNIMODAL
FUNCTION
SINCE
THE
GLOBAL
OPTIMUM
OF
THE
ROSENBROCK
FUNCTION
IS
INSIDE
A
LONG
NARROW
PARABOLIC
SHAPED
FLAT
VALLEY
AND
THE
VARIABLES
ARE
DEPENDENT
THE
GRADIENTS
GEN
ERALLY
DO
NOT
POINT
TOWARDS
THE
OPTIMUM
AND
IT
IS
DIFFICULT
TO
CONVERGE
THE
GLOBAL
OPTIMUM
THE
SECOND
GROUP
CONSISTS
OF
MUL
TIMODAL
FUNCTIONS
ACKLEY
GRIEWANK
WEIERSTRASS
RASTRIGIN
NONCONTINUOUS
RASTRIGIN
AND
SCHWEFEL
THE
ACKLEY
FUNCTION
HAS
A
SURFACE
WITH
MANY
LOCAL
OPTIMA
DUE
TO
ITS
EXPONENTIAL
TERM
THE
VARIABLES
OF
GRIEWANK
FUNCTION
HAVE
INTERDEPENDENCE
SINCE
THE
FUNCTION
HAS
A
PRODUCT
TERM
THE
MULTIMODALITY
IS
REMOVED
BY
THE
INCREMENT
IN
DIMENSIONALITY
N
AND
THE
PROBLEM
SEEMS
UNIMODAL
THE
WEIERSTRASS
FUNCTION
IS
CONTINUOUS
EVERYWHERE
BUT
DIFFERENTIABLE
NOWHERE
NON
CONTINUOUS
AND
CON
TINUOUS
RASTRIGIN
FUNCTIONS
ARE
BASED
ON
THE
SPHERE
FUNCTION
WITH
THE
ADDITION
OF
COSINE
MODULATION
TO
PRODUCE
MANY
LOCAL
MINIMA
THE
SURFACE
OF
SCHWEFEL
FUNCTION
IS
COMPOSED
OF
NUMEROUS
PEAKS
AND
VALLEYS
THE
SECOND
BEST
MINIMUM
OF
THE
FUNC
TION
IS
FAR
FROM
THE
GLOBAL
MINIMUM
AND
THE
GLOBAL
MINIMUM
IS
NEAR
THE
BOUNDARIES
OF
THE
SEARCH
DOMAIN
IN
THE
EXPERIMENTS
THE
POPULATION
SIZE
WAS
AND
THE
MAXIMUM
NUMBER
OF
FUNCTION
EVALUATIONS
WAS
FOR
DIMENSIONAL
PROBLEMS
ALL
EXPERIMENTS
WERE
CONDUCTED
TIMES
INDEPENDENTLY
FOR
EACH
FUNCTION
WHILE
MAKING
THIS
COMPREHENSIVE
STUDY
WE
EXAMINED
THE
ABC
ALGORITHM
UNDER
DIFFERENT
CONTROL
PARAMETER
SETTINGS
NUMBER
OF
PARAMETERS
CHANGED
IN
EACH
CYCLE
STEP
SIZE
IN
THE
PRODUCTION
OF
NEIGHBORING
SOLUTIONS
AND
LIMIT
THE
RESULTS
OBTAINED
BY
ABC
ALGORITHM
WITH
DIFFERENT
CONTROL
PARAMETERS
ARE
COMPARED
AGAINST
THE
RESULTS
OF
PSO
VARIANTS
PRESENTED
IN
SETTINGS
OF
THE
PSO
VARIANTS
CAN
BE
FOUND
IN
PSO
W
PSO
WITH
INERTIA
FACTOR
PSO
CF
PSO
WITH
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
TABLE
RESULTS
OF
STATE
OF
ART
ALGORITHMS
FOR
HYBRID
FUNCTIONS
DIMENSION
COLONY
SIZE
CYCLE
FOR
ABC
PSO
RDL
RECOMBINATION
WITH
DYNAMIC
LINKAGE
DISCOVERY
IN
PSO
DMS
PSO
DYNAMIC
MULTI
SWARM
PARTICLE
SWARM
OPTIMIZER
WITH
LOCAL
SEARCH
SPC
PNX
DE
DIFFERENTIAL
EVOLUTION
SADE
SELF
ADAPTIVE
DIFFERENTIAL
EVOLUTION
RESTART
CMA
ES
RESTART
COVARIANCE
MATRIX
ADAPTATION
EVOLUTION
STRATEGY
WITH
INCREASING
POPULATION
SIZE
PSO
RDL
MEAN
STD
DMS
PSO
MEAN
STD
SPC
PNX
MEAN
STD
21E
DE
MEAN
55EÀ01
STD
SADE
MEAN
STD
RESTART
CMA
ES
MEAN
STD
89EÀ03
ABC
SF
MEAN
STD
ABC
SF
MEAN
STD
ABC
SF
MEAN
STD
ABC
SF
MEAN
STD
65E
ABC
MR
MEAN
STD
ABC
MR
MEAN
STD
ABC
MR
MEAN
STD
ABC
MR
MEAN
STD
ABC
MR
MEAN
04E
STD
ABC
ASF
MR
MEAN
52EÀ02
65E
STD
CONSTRICTION
FACTOR
PSO
W
LOCAL
PSO
WITH
INERTIA
FACTOR
USING
A
LOCAL
NEIGHBORHOOD
PSO
CF
LOCAL
PSO
WITH
CONSTRIC
TION
FACTOR
USING
LOCAL
NEIGHBORHOOD
UPSO
UNIFIED
PSO
COMBINING
LOCAL
AND
GLOBAL
NEIGHBORHOOD
TOPOLOGIES
FDR
PSO
FITNESS
DISTANCE
RATIO
BASED
PSO
USES
THE
NEIGHBOR
WITH
HIGHER
FITNESS
FIPS
FULLY
INFORMED
PARTICLE
SWARM
CPSO
H
COOPERATIVE
PSO
CLPSO
COMPREHENSIVE
LEARNING
PSO
ARE
THE
VERSIONS
OF
PSO
WHICH
ARE
INVESTI
GATED
IN
WHILE
MAKING
AN
EXPERIMENTAL
COMPARISON
IF
THE
DIFFERENCE
OF
ERROR
RATES
IS
LESS
THAN
THIS
DIFFERENCE
IS
CONSID
ERED
AS
INSIGNIFICANT
IN
A
PRACTICAL
SENSE
THE
WINNER
ALGORITHM
FOR
EACH
PROBLEM
WAS
GIVEN
IN
BOLDFACE
IN
THE
TABLES
IF
IT
WAS
SIGNIFICANTLY
DIFFERENT
COMPARISON
RESULTS
OBTAINED
BY
PSO
VARIANTS
AND
THE
ABC
ALGORITHM
WITH
DIFFERENT
CON
TROL
PARAMETERS
SET
FOR
SPHERE
ROSENBROCK
ACKLEY
AND
GRIEWANK
FUNCTIONS
ARE
GIVEN
IN
TABLE
AND
FOR
WEIERSTRASS
RASTRIGIN
NON
CONTINUOUS
RASTRIGIN
AND
SCHWEFEL
FUNCTIONS
ARE
GIVEN
IN
TABLE
FROM
THE
RESULTS
FOR
THE
ROSENBROCK
FUNCTION
THE
ABC
ALGORITHM
THAT
ADJUSTS
STEP
SIZE
AUTOMATICALLY
PRODUCES
THE
BEST
RESULT
FOR
THE
GRIEWANK
AND
SCHWEFEL
FUNCTIONS
CLPSO
PERFORMS
THE
BEST
OF
THE
OTHER
FUNCTIONS
SPHERE
ACKLEY
RASTRIGIN
NCRASTRIGIN
CLPSO
AND
BASIC
ABC
ALGORITHMS
EXHIBIT
SIMILAR
PERFORMANCE
FOR
ALL
FUNCTIONS
EXCEPT
THE
ROSENBROCK
FUNCTION
INITIALIZATION
RANGES
FOR
THE
ALGORITHMS
WERE
DIFFERENT
FROM
THE
SEARCH
RANGES
INITIAL
RANGES
AND
SEARCH
RANGES
FOR
FUNCTIONS
CAN
BE
FOUND
IN
TABLE
THE
ABC
ALGORITHM
IS
ROBUST
AGAINST
INITIALIZATION
CONDITIONS
SINCE
THE
SCOUT
UNIT
HELPS
THE
SEARCH
SPACE
TO
BE
EXPLORED
EFFICIENTLY
THE
MODIFICATION
RATE
MR
SCALING
FACTOR
SF
AND
LIMIT
ARE
CONTROL
PARAMETERS
OF
THE
ABC
ALGORITHM
WHICH
NEEDED
TO
BE
TUNED
FOR
BETTER
PERFORMANCE
WE
INVESTIGATED
THE
EFFECT
OF
THE
CONTROL
PARAMETERS
ON
THE
PERFORMANCE
OF
THE
ABC
ALGO
RITHM
BY
MANUALLY
TRYING
SOME
DIFFERENT
VALUES
BEFORE
THE
RUN
THE
RESULTS
PRESENTED
IN
TABLES
WERE
DEMONSTRATED
IN
THE
FIG
A
F
FROM
THESE
FIGURES
GENERALLY
THE
BASIC
VERSION
OF
THE
ABC
ALGORITHM
IN
WHICH
MR
JUST
ONE
PARAMETER
IS
CHANGED
AND
SF
IS
IS
IN
THE
RANGE
IS
A
BETTER
CHOICE
THAN
OTHER
STRUCTURES
TRIED
OUT
FOR
BOTH
UNIMODAL
AND
MULTIMODAL
BASIC
FUNCTIONS
MR
PARAMETER
IS
MORE
IMPORTANT
FOR
THE
ABC
ALGORITHM
ON
HYBRID
FUNCTIONS
WHICH
ARE
ROTATED
AND
SHIFTED
VERSIONS
OF
FUNCTION
COMBINATIONS
FOR
LIMIT
CONTROL
PARAMETER
IS
MORE
APPROPRIATE
THAN
OTHER
VALUES
FOR
BOTH
UNIMODAL
AND
MULTIMODAL
FUNCTIONS
THIS
VALUE
CAN
CHANGE
DEPENDING
ON
THE
DIMENSION
OF
THE
PROBLEM
CONVERGENCE
RATES
OF
THE
BASIC
ABC
ALGORITHM
ARE
SHOWN
IN
FIG
A
FOR
UNIMODAL
BASIC
FUNCTIONS
AND
IN
FIG
B
FOR
MULTIMODAL
BASIC
FUNCTIONS
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
TABLE
RESULTS
OF
STATE
OF
ART
ALGORITHMS
FOR
HYBRID
FUNCTIONS
DIMENSION
COLONY
SIZE
CYCLE
FOR
ABC
PSO
RDL
RECOMBINATION
WITH
DYNAMIC
LINKAGE
DISCOVERY
IN
PSO
DMS
PSO
DYNAMIC
MULTI
SWARM
PARTICLE
SWARM
OPTIMIZER
WITH
LOCAL
SEARCH
SPC
PNX
DE
DIFFERENTIAL
EVOLUTION
SADE
SELF
ADAPTIVE
DIFFERENTIAL
EVOLUTION
RESTART
CMA
ES
RESTART
COVARIANCE
MATRIX
ADAPTATION
EVOLUTION
STRATEGY
WITH
INCREASING
POPULATION
SIZE
PSO
RDL
MEAN
STD
DMS
PSO
MEAN
STD
SPC
PNX
MEAN
54E
STD
DE
MEAN
STD
SADE
MEAN
STD
06EÀ01
11E
RESTART
CMA
ES
MEAN
28E
STD
42E
ABC
SF
MEAN
STD
ABC
SF
MEAN
44E
STD
ABC
SF
MEAN
03EÀ01
STD
68E
50E
ABC
SF
MEAN
52E
STD
ABC
MR
MEAN
STD
ABC
MR
MEAN
88E
72E
STD
ABC
MR
MEAN
STD
ABC
MR
MEAN
STD
ABC
MR
MEAN
91EÀ02
35E
STD
ABC
ASF
MR
MEAN
STD
04E
74EÀ01
ON
THE
SCALABILITY
AND
TIME
COMPLEXITY
OF
ABC
IT
IS
GENERALLY
DIFFICULT
FOR
OPTIMIZATION
ALGORITHMS
TO
SOLVE
HIGH
DIMENSIONAL
PROBLEMS
PERFORMANCE
OF
AN
ALGORITHM
DETE
RIORATES
AS
THE
PROBLEM
DIMENSION
INCREASES
IN
ORDER
TO
COPE
WITH
THIS
PROBLEM
THE
ALGORITHM
NEEDS
MORE
INFORMATION
ABOUT
THE
SEARCH
SPACE
TO
DIRECT
THE
SOLUTIONS
TO
THE
OPTIMA
INCREASING
THE
POPULATION
SIZE
OR
THE
NUMBER
OF
EVALUATIONS
EXPONENTIALLY
MIGHT
IMPROVE
THE
PERFORMANCE
BUT
THE
PERFORMANCE
IN
CASE
OF
A
HIGH
DIMENSION
PROBLEM
IS
ALSO
RELATED
TO
THE
LANDSCAPE
OF
THE
PROBLEM
MOREOVER
IT
IS
MORE
DIFFICULT
FOR
THE
ALGORITHM
TO
SOLVE
A
HIGH
DIMENSIONAL
PROBLEM
WHEN
THERE
IS
AN
EPISTATIC
INTERACTION
BETWEEN
THE
PARAMETERS
MANY
LOCAL
OPTIMA
MISLEADINGNESS
AND
HARD
STRUCTURAL
PROPERTIES
OF
THE
SEARCH
SPACE
THIS
IS
DEFINED
AS
SCALABILITY
PROBLEM
IN
ORDER
TO
ANALYZE
THE
SCALABILITY
OF
ABC
WE
INVESTIGATED
THE
PERFORMANCE
OF
ABC
WITH
RESPECT
TO
GROWING
DIMENSIONS
FOR
THIS
EXPERIMENT
FUNCTIONS
GIVEN
IN
TABLE
WITH
DIFFERENT
DIMENSIONS
INCLUDING
AND
WERE
USED
THE
SCALABILITY
TEST
WAS
REPEATED
FOR
THE
COLONY
SIZES
OF
AND
MEAN
AND
STANDARD
DEVIATION
OF
ERRORS
FOR
THE
FUNCTIONS
FOR
EACH
CASE
WERE
REPORTED
IN
TABLE
WHEN
THE
PROBLEM
DIMENSION
WAS
INCREASED
FROM
TO
AND
THEN
TO
THE
PERFORMANCE
OF
THE
ABC
ALGORITHM
WAS
INFLUENCED
FROM
THIS
CHANGE
AS
EXPECTED
HOWEVER
AS
SEEN
FROM
THE
TABLE
AN
INCREASE
IN
PROBLEM
DIMEN
SION
DID
NOT
REQUIRE
EXPONENTIAL
INCREMENT
IN
POPULATION
SIZE
OR
EVALUATION
NUMBER
THEREFORE
IT
CAN
BE
STATED
THAT
THE
ABC
ALGORITHM
IS
NOT
VERY
SENSITIVE
TO
INCREMENTS
IN
PROBLEM
DIMENSIONS
AND
HAS
A
GOOD
SCALABILITY
THE
EFFECT
OF
SCALABILITY
ON
THE
COMPUTATIONAL
COMPLEXITY
OF
THE
ABC
ALGORITHM
WAS
ALSO
ANALYZED
FOR
THIS
PURPOSE
TIME
COMPLEXITY
OF
THE
ABC
ALGORITHM
FOR
ROSENBROCK
FUNCTION
WITH
DIFFERENT
DIMENSIONS
WAS
CALCULATED
AS
DESCRIBED
IN
ROSENBROCK
FUNCTION
WAS
CHOSEN
SINCE
IT
HAS
INTERACTION
BETWEEN
ITS
PARAMETERS
IN
ORDER
TO
DETERMINE
THE
TIME
COMPLEXITY
AFTER
CODE
EXECUTION
TIME
T
AND
EXECUTION
TIME
OF
ROSENBROCK
FUNCTION
FOR
EVALUATIONS
T
WERE
CALCULATED
MEAN
OF
FIVE
EXECUTIONS
TIME
OF
ABC
ON
ROSENBROCK
FUNCTION
ITY
OF
THE
ALGORITHM
WAS
DETERMINED
BY
ÐÐ
T
B
À
T
Þ
T
Þ
THROUGH
AND
GIVEN
IN
TABLE
EVALUATIONS
TABLE
Ð
SHOWS
B
T
Þ
WAS
THAT
COMPUTED
T
B
INCREASES
THEN
BY
THE
LESS
COMPLEX
THAN
A
FACTOR
OF
DIMENSION
INCREMENT
CONSEQUENTLY
IT
CAN
BE
STATED
THAT
THE
TIME
COMPLEXITY
OF
THE
ABC
ALGORITHM
DOES
NOT
DEPEND
ON
THE
PROBLEM
DIMENSION
EXCESSIVELY
AND
IT
SCALES
WITH
O
N
BY
ONLOOKERS
A
NEW
POPULATION
IS
FORMED
BY
SEARCHING
THE
NEIGHBORHOODS
OF
THE
SOLUTIONS
CHOSEN
DEPENDING
ON
THEIR
QUALITY
SINCE
THE
NUMBER
OF
ONLOOKERS
IS
EQUAL
TO
SN
IN
EACH
CYCLE
SEARCHES
ARE
CONDUCTED
BY
EMPLOYED
BEES
AND
ON
LOOKER
BEES
HENCE
WHEN
THE
MAXIMUM
CYCLE
NUMBER
MCN
IS
REACHED
TOTALLY
SEARCHES
ARE
CARRIED
OUT
SO
THE
SEARCH
COMPLEXITY
OF
ABC
IS
PROPORTIONAL
TO
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
TABLE
RESULTS
OF
STATE
OF
ART
ALGORITHMS
FOR
HYBRID
FUNCTIONS
DIMENSION
COLONY
SIZE
CYCLE
FOR
ABC
PSO
RDL
RECOMBINATION
WITH
DYNAMIC
LINKAGE
DISCOVERY
IN
PSO
DMS
PSO
DYNAMIC
MULTI
SWARM
PARTICLE
SWARM
OPTIMIZER
WITH
LOCAL
SEARCH
SPC
PNX
DE
DIFFERENTIAL
EVOLUTION
SADE
SELF
ADAPTIVE
DIFFERENTIAL
EVOLUTION
RESTART
CMA
ES
RESTART
COVARIANCE
MATRIX
ADAPTATION
EVOLUTION
STRATEGY
WITH
INCREASING
POPULATION
SIZE
PSO
RDL
MEAN
STD
DMS
PSO
MEAN
STD
01E
35E
01E
SPC
PNX
MEAN
10E
STD
DE
MEAN
STD
01E
04E
SADE
MEAN
01E
19E
13E
STD
17E
01E
RESTART
CMA
ES
MEAN
13E
26E
STD
ABC
SF
MEAN
51E
STD
11E
ABC
SF
MEAN
77E
04E
09E
STD
60E
ABC
SF
MEAN
12E
STD
ABC
SF
MEAN
93E
61E
STD
ABC
MR
MEAN
98E
50E
16E
04E
STD
13E
19E
ABC
MR
MEAN
25E
83E
STD
17E
12E
ABC
MR
MEAN
03E
19E
STD
60E
19E
ABC
MR
MEAN
61E
STD
44E
ABC
MR
MEAN
34E
STD
71E
21E
22E
ABC
ASF
MR
MEAN
75E
71E
30E
STD
62E
EXPERIMENTS
ON
COMPOSITE
FUNCTIONS
IN
THE
SECOND
PART
OF
THE
EXPERIMENTS
WE
TESTED
THE
ABC
ALGORITHM
AND
ITS
MODIFIED
VERSIONS
ON
THE
REAL
PARAMETER
OPTI
MIZATION
PROBLEMS
DEFINED
IN
SOME
ALGORITHMS
PRODUCE
GOOD
RESULTS
ON
SOME
FUNCTIONS
WHILE
THEY
CANNOT
ACHIEVE
DE
SIRED
PERFORMANCE
ON
SOME
OTHERS
IF
AN
ALGORITHM
HAS
AN
OPERATOR
FOR
PRODUCING
NEIGHBORING
SOLUTIONS
BY
COPYING
ONE
PARAMETER
TO
ANOTHER
IT
CAN
CONVERGE
TO
THE
GLOBAL
OPTIMA
QUICKLY
WHEN
THE
GLOBAL
OPTIMUM
LIES
ON
SYMMETRIC
DIMENSIONS
A
SIMILAR
SITUATION
IS
WHEN
THE
GLOBAL
OPTIMA
ARE
AT
THE
ORIGIN
WHEN
AN
ALGORITHM
HAS
LOCAL
SEARCH
CAPABILITY
FINDING
THE
GLOBAL
OPTIMUM
IS
SIMPLER
FOR
THIS
REASON
IN
COMPOSITE
PROBLEMS
ARE
CONSTRUCTED
BY
COMBINING
SIMPLE
FUNCTIONS
VIA
THE
GAUSSIAN
FUNCTION
IN
ORDER
TO
OBTAIN
MORE
CHALLENGING
PROBLEMS
COMPOSITION
FUNCTIONS
ARE
RANDOMLY
LOCATED
ASYM
METRICAL
AND
MULTIMODAL
PROBLEMS
FUNCTIONS
IN
THE
SET
HAVE
DIFFERENT
CHARACTERISTICS
AND
THEY
ARE
CATEGORIZED
IN
A
SYSTEM
ATIC
MANNER
THAT
WILL
DETERMINE
HOW
THE
ALGORITHMS
BEHAVE
UNDER
THE
COMMON
EVALUATION
CRITERIA
SPECIFIED
FOR
THIS
SET
CONTAINS
TOTAL
FUNCTIONS
COMPRISING
UNIMODAL
MULTIMODAL
SHIFTED
ROTATED
AND
HYBRID
COMPOSITION
FUNC
TIONS
DETAILED
INFORMATION
ABOUT
THESE
FUNCTIONS
IS
AVAILABLE
IN
THE
ABC
ALGORITHM
WAS
INITIALIZED
UNIFORMLY
WITHIN
THE
SEARCH
SPACE
EXCEPT
FOR
AND
PROBLEMS
INITIAL
RANGES
FOR
THESE
TWO
PROBLEMS
ARE
SPECIFIED
IN
THE
REPORT
OTHER
PROBLEMS
EXCEPT
AND
HAVE
THE
GLOBAL
OPTIMUM
WITHIN
BOUNDS
FOR
DIMENSION
D
VALUES
OF
AND
WERE
EMPLOYED
THE
ABC
ALGORITHM
WAS
TERMINATED
WHEN
THE
NUMBER
OF
FUNCTION
EVALUATIONS
REACHED
THE
MAXFES
OR
THE
ERROR
OF
FUNCTION
VALUE
WAS
EQUAL
TO
OR
LESS
IN
MAXIMUM
FUNCTION
EVAL
UATION
SIZES
WERE
AND
FOR
PROBLEM
DIMENSIONS
AND
RESPECTIVELY
FOR
FAIR
COMPARISON
THE
SAME
EVALUATION
NUMBERS
AS
IN
WERE
EMPLOYED
THE
ABC
ALGORITHM
WAS
RUN
THROUGH
CYCLES
FOR
ALL
DIMENSIONS
THEREFORE
THE
COLONY
SIZES
WERE
AND
FOR
THE
DIMENSIONS
AND
RESPECTIVELY
FOR
EACH
FUNCTION
THE
ALGO
RITHM
WAS
RUN
TIMES
ERROR
VALUES
WERE
SORTED
FROM
THE
BEST
TO
WORST
AND
BESIDE
THE
BEST
AND
THE
WORST
MEDIAN
AND
19TH
FUNCTION
VALUES
ARE
REPORTED
IN
TABLES
FOR
D
TABLES
FOR
D
TABLES
FOR
D
IN
FIG
A
E
LOGARITHMIC
SCALED
CONVERGENCE
GRAPHS
OF
PROBLEMS
FOR
D
OF
MEDIAN
RUN
ARE
PRESENTED
IN
THE
EXPERIMENTS
WE
TRIED
DIFFERENT
MODIFICATION
RATES
FOR
SOME
FUNCTIONS
FUNCTIONS
AND
BETTER
RESULTS
WERE
OBTAINED
WITH
LOWER
VALUES
OF
MR
WHILE
FOR
SOME
FUNCTIONS
FUNCTIONS
AND
USING
HIGHER
MR
VALUES
PRODUCED
BET
TER
RESULTS
FOR
THIS
REASON
WE
HAVE
CHOSEN
AN
AVERAGE
VALUE
FOR
MR
AND
SET
IT
TO
LIMIT
WAS
SET
TO
FOR
ALL
FUNCTIONS
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
TABLE
RESULTS
OF
STATE
OF
ART
ALGORITHMS
FOR
HYBRID
FUNCTIONS
DIMENSION
COLONY
SIZE
CYCLE
FOR
ABC
PSO
RDL
RECOMBINATION
WITH
DYNAMIC
LINKAGE
DISCOVERY
IN
PSO
DMS
PSO
DYNAMIC
MULTI
SWARM
PARTICLE
SWARM
OPTIMIZER
WITH
LOCAL
SEARCH
SPC
PNX
DE
DIFFERENTIAL
EVOLUTION
SADE
SELF
ADAPTIVE
DIFFERENTIAL
EVOLUTION
RESTART
CMA
ES
RESTART
COVARIANCE
MATRIX
ADAPTATION
EVOLUTION
STRATEGY
WITH
INCREASING
POPULATION
SIZE
PSO
RDL
MEAN
94E
87E
STD
12E
87E
54E
DMS
PSO
MEAN
36E
30E
STD
51E
SPC
PNX
MEAN
06E
STD
69E
37E
22E
38EÀ01
DE
MEAN
72E
STD
00E
48E
00E
SADE
MEAN
00E
76E
STD
15E
00E
15E
RESTART
CMA
ES
MEAN
00E
00E
STD
00E
86E
00
22E
00
ABC
SF
MEAN
07E
02
02
98E
02
02
00E
02
STD
44E
ABC
SF
MEAN
02
02
02
02
00E
02
STD
02
78E
ABC
SF
MEAN
80E
02
26E
02
08E
02
02
00E
02
STD
82E
64E
02
ABC
SF
MEAN
84E
02
02
01E
02
02
00E
02
STD
02
87E
ABC
MR
MEAN
76E
02
38E
02
00E
02
02
00E
02
STD
00E
00
02
ABC
MR
MEAN
02
02
02
02
00E
02
STD
62E
00
93E
ABC
MR
MEAN
08E
02
02
49E
02
02
00E
02
STD
02
00
02
ABC
MR
MEAN
02
02
77E
02
02
00E
02
STD
68E
97E
00
ABC
MR
MEAN
39E
02
02
09E
02
02
00E
02
STD
13E
02
32E
02
86E
ABC
ASF
MR
MEAN
81E
02
20E
02
66E
02
02
00E
02
STD
02
11E
00
07E
AND
DIMENSIONS
NUMBER
OF
SOLUTIONS
IN
THE
POPULATION
WAS
AND
FOR
DIMENSIONS
AND
RESPECTIVELY
VALUES
OF
CONTROL
PARAMETERS
ARE
LISTED
ON
TABLE
IN
ORDER
TO
POINT
OUT
THE
RELATION
BETWEEN
DIMENSION
AND
COMPLEXITY
FOR
DIFFERENT
DIMENSIONS
ALGORITHM
COMPLEXITY
WAS
CALCULATED
AS
IN
BASIC
FUNCTIONS
AS
FOR
BASIC
FUNCTIONS
CODE
EXECUTION
TIME
T
EXECUTION
TIME
OF
FUNCTION
FOR
EVALUATIONS
CULATED
THE
T
COMPLEXITY
AND
FOR
FIVE
OF
THE
RUNS
ALGORITHM
MEAN
OF
WAS
THE
THEN
ALGORITHM
DETERMINED
EXECUTION
BY
ÐÐ
TIMES
B
T
À
ON
FUNCTION
B
T
Þ
T
Þ
AND
FOR
EVALUATIONS
T
WERE
CAL
GIVEN
IN
TABLE
OUR
SYSTEM
WAS
WIN
DOWS
XP
ON
PENTIUM
R
M
GHZ
PROCESSOR
WITH
GB
OF
RAM
AND
THE
PROGRAMMING
LANGUAGE
USED
WAS
DELPHI
FROM
THE
RESULTS
IN
TABLES
FOR
D
THE
ABC
ALGORITHM
REACHED
THE
GIVEN
ACCURACY
ON
FUNCTIONS
AND
IN
CASE
WHERE
DIMENSION
WAS
THE
ABC
ALGORITHM
REACHED
THE
GIVEN
ACCURACY
ON
FUNCTIONS
AND
WHILE
WHEN
D
IT
REACHED
THAT
JUST
ON
FUNCTIONS
AND
THE
ABC
ALGORITHM
WAS
NOT
EXECUTED
USING
AN
OPTIMAL
CONTROL
PARAMETER
SET
WHILE
PRODUCING
THE
RESULTS
GIVEN
IN
TABLES
WE
TRIED
DIFFERENT
PARAMETER
VALUES
FOR
MR
SF
AND
LIMIT
AND
COMPARED
THE
PERFORMANCE
OF
ABC
AGAINST
OTHER
ALGO
RITHMS
THAT
ARE
INCLUDED
IN
THE
SPECIAL
SESSION
OF
ON
REAL
PARAMETER
OPTIMIZATION
RECOMBINATION
WITH
DYNAMIC
LINK
AGE
DISCOVERY
IN
PARTICLE
SWARM
OPTIMIZATION
PSO
RDL
DYNAMIC
MULTI
SWARM
PARTICLE
SWARM
OPTIMIZER
WITH
LOCAL
SEARCH
DMS
PSO
SPC
PNX
DIFFERENTIAL
EVOLUTION
SELF
ADAPTIVE
DIFFERENTIAL
EVOLUTION
SADE
RESTART
COVARIANCE
MATRIX
ADAPTATION
EVOLUTION
STRATEGY
RESTART
CMA
ES
THE
DIMENSION
WAS
COLONY
SIZE
WAS
AND
MAX
IMUM
EVALUATION
NUMBER
WAS
FOR
CONTROL
PARAMETER
MR
VALUES
FOR
SF
VALUES
AND
ADAPTIVE
SCALING
WERE
EMPLOYED
COMPARISON
RESULTS
ARE
GIVEN
IN
THE
TABLES
IN
ORDER
TO
DEMONSTRATE
THE
RESULTS
BETTER
VALUES
IN
THE
TABLES
ARE
PRE
SENTED
IN
FIG
A
FIG
L
FROM
THE
RESULTS
IN
THE
TABLES
AND
FIGURES
ALL
ALGORITHMS
SHOW
SIMILAR
PERFORMANCES
ON
FUNCTIONS
AND
ON
FUNCTION
THE
ABC
ALGORITHM
SHOWS
BETTER
PERFORMANCE
BY
THE
INCREMENT
IN
MR
PARAMETER
AND
ADAPTIVE
SCALING
THIS
MEANS
THAT
THE
ABC
ALGORITHM
NEEDS
MORE
PARAMETERS
TO
BE
MUTATED
IN
THE
NEIGHBORHOOD
OF
THE
CURRENT
SOLUTION
FOR
FUNCTION
BECAUSE
THE
FUNCTION
IS
NON
SEPARABLE
FOR
FUNCTION
REDUCING
SCALING
FACTOR
AFFECTS
THE
PERFORMANCE
OF
THE
ABC
ALGORITHM
NEGATIVELY
OTHER
ALGORITHMS
SHOW
SIMILAR
PERFORMANCE
FOR
FUNCTION
FOR
FUNCTION
THE
ABC
ALGORITHM
PRO
DUCES
THE
BEST
RESULTS
WHEN
MR
IS
INCREMENTED
IN
ADDITION
DECREASING
THE
STEP
SIZE
WORSENS
THE
PERFORMANCE
OF
THE
ABC
ALGORITHM
FOR
FUNCTION
OTHER
ALGORITHMS
OUTPERFORM
ABC
IN
ALL
CASES
FOR
FUNCTION
DMS
PSO
PSO
RDL
RESTART
CMA
ES
AND
ABC
ALGORITHM
WITH
ASF
DEMONSTRATE
EQUAL
PERFORMANCES
PERFORMANCE
OF
THE
ABC
ALGORITHM
ON
FUNCTION
IS
AFFECTED
FIG
COMPARISON
OF
THE
STATE
OF
ART
ALGORITHMS
AND
THE
VARIANTS
OF
THE
ABC
ALGORITHM
FOR
COMPOSITE
FUNCTIONS
AND
RESTART
CMAES
IS
BETTER
WHILE
ON
FUNCTIONS
AND
THE
DMS
PSO
ALGORITHM
IS
BETTER
ON
FUNCTION
SPC
PNX
DE
SADE
AND
RESTART
CMAES
ALGORITHMS
PERFORM
EQUALLY
ON
FUNCTION
ABC
PRODUCES
THE
BEST
PERFORMANCE
HOWEVER
IT
SHOULD
BE
NOTED
THAT
LOWER
VALUES
OF
SF
PRODUCE
BETTER
RESULTS
A
COMPARATIVE
DISCUSSION
ON
EVOLUTIONARY
COMPUTING
PARADIGMS
VS
ABC
IN
THE
PREVIOUS
SECTIONS
COMPARATIVE
RESULTS
OF
PSO
DE
ES
AND
ABC
VARIANTS
WERE
PRESENTED
IN
THIS
SECTION
WE
OFFER
A
THOROUGH
COMPARATIVE
ANALYSIS
BY
CONSIDERING
STANDARD
VERSIONS
OF
THESE
ALGORITHMS
EXPLORATION
WHICH
IS
THE
ABILITY
TO
SEARCH
THE
SOLUTION
SPACE
TO
FIND
PROMISING
NEW
SOLUTIONS
AND
EXPLOITATION
WHICH
IS
THE
ABILITY
TO
FIND
THE
OPTIMUM
SOLUTION
IN
THE
NEIGHBORHOOD
OF
A
GOOD
SOLUTION
ARE
TWO
IMPORTANT
ASPECTS
IN
EVOLUTIONARY
COMPUTING
PARADIGMS
HOWEVER
DIFFERENT
ALGORITHMS
IN
EVOLUTIONARY
COMPUTING
EMPLOY
DIFFERENT
OPERATORS
FOR
EXPLORATION
AND
EXPLOITATION
IN
ES
A
MUTANT
VECTOR
IS
CREATED
BY
ADDING
A
NORMALLY
DISTRIBUTED
RANDOM
STEP
SIZE
TO
EACH
VECTOR
COMPONENT
IN
BASIC
ABC
A
STEP
SIZE
WHICH
IS
A
RANDOMLY
WEIGHTED
DIFFERENCE
OF
THE
CURRENT
SOLUTION
AND
A
SOLUTION
RANDOMLY
SELECTED
IS
B
AKAY
D
KARABOGA
INFORMATION
SCIENCES
APPLIED
TO
ONLY
ONE
COMPONENT
OF
THE
CURRENT
SOLUTION
TO
PRODUCE
A
NEIGHBORING
SOLUTION
RECENT
VERSIONS
OF
ES
SUCH
AS
CMA
ES
USE
SELF
ADAPTIVE
MECHANISMS
FOR
STEP
SIZE
EARLIER
VERSIONS
OF
ES
AND
ABC
DO
NOT
HAVE
A
RECOMBINATION
OPERATOR
A
FITNESS
BASED
PROBABILISTIC
SELECTION
SCHEME
USED
IN
THE
ABC
ALGORITHM
DOES
NOT
EXIST
IN
ES
ONE
ADVANTAGE
OF
ABC
OVER
ES
IS
THE
DIVERSIFICATION
CONTROLLED
BY
THE
RANDOM
SELECTION
PROCESS
IN
THE
SCOUT
BEES
PHASE
WHICH
MAKES
ABC
ESCAPE
FROM
LOCAL
MINIMA
IN
PSO
A
NEW
POSITION
VECTOR
IS
CALCULATED
USING
THE
PARTICLE
CURRENT
AND
BEST
SOLUTION
AND
THE
SWARM
BEST
SOLUTION
WHILE
IN
ABC
A
NEW
SOLUTION
VECTOR
IS
CALCULATED
USING
THE
EMPLOYED
BEE
CURRENT
SOLUTION
AND
A
RANDOMLY
CHOSEN
SOLUTION
IN
PSO
THE
NEW
SOLUTION
IS
REPLACED
WITH
THE
OLD
ONE
WITHOUT
CONSIDERING
WHICH
ONE
IS
BETTER
HOWEVER
IN
ABC
A
GREEDY
SELECTION
SCHEME
IS
APPLIED
BETWEEN
THE
NEW
SOLUTION
AND
THE
OLD
ONE
AND
THE
BETTER
ONE
IS
PREFERRED
FOR
INCLUSION
IN
THE
POPULATION
IN
THIS
WAY
THE
INFORMATION
OF
A
GOOD
MEMBER
OF
THE
POPULATION
IS
DISTRIBUTED
AMONG
THE
OTHER
MEMBERS
DUE
TO
THE
GREEDY
SELECTION
MECHANISM
EMPLOYED
ABC
ALSO
USES
A
PROBABILISTIC
SELECTION
SCHEME
IN
THE
ONLOOKER
BEES
PHASE
IN
ADDITION
TO
THIS
GREEDY
SELECTION
SCHEME
THE
ABC
ALGORITHM
ALSO
HAS
A
SCOUT
PHASE
WHICH
PROVIDES
DIVERSITY
IN
THE
POP
ULATION
BY
ALLOWING
NEW
RANDOM
SOLUTIONS
TO
BE
INSERTED
INTO
THE
POPULATION
INSTEAD
OF
THE
SOLUTIONS
WHICH
DO
NOT
PROVIDE
IMPROVEMENTS
WHILE
THE
PSO
ALGORITHM
DOES
NOT
HAVE
SUCH
A
PROCESS
MOREOVER
PSO
HAS
MORE
CONTROL
PARAMETERS
THAN
ABC
THE
NEIGHBORING
SOLUTION
PRODUCTION
MECHANISM
USED
IN
ABC
IS
SIMILAR
TO
THE
SELF
ADAPTING
MUTATION
PROCESS
OF
DE
FROM
THIS
POINT
OF
VIEW
IN
DE
AND
ABC
ALGORITHMS
THE
SOLUTIONS
IN
THE
POPULATION
DIRECTLY
AFFECT
THE
MUTATION
OPERATION
SINCE
THE
OPERATION
IS
BASED
ON
THE
DIFFERENCE
BETWEEN
THEM
HOWEVER
IN
DE
THE
DIFFERENCE
IS
WEIGHTED
BY
A
CONSTANT
SCALING
FACTOR
WHILE
IN
ABC
IT
IS
WEIGHTED
BY
A
RANDOM
STEP
SIZE
UNLIKE
DE
IN
ABC
THERE
IS
NO
EXPLICIT
CROSSOVER
ALTHOUGH
BOTH
ALGORITHMS
EMPLOY
GREEDY
SELECTION
BETWEEN
THE
CURRENT
SOLUTION
AND
A
NEW
SOLUTION
IN
DE
THERE
IS
NO
OPERATION
AS
IN
THE
SCOUT
BEES
PHASE
OF
ABC
TO
INSERT
A
RANDOM
SOLUTION
INTO
THE
POPULATION
DURING
A
SEARCH
THEREFORE
ALTHOUGH
THE
LOCAL
CONVERGENCE
SPEED
OF
A
STANDARD
DE
IS
QUITE
GOOD
IT
MIGHT
RESULT
IN
THE
PREMATURE
CONVERGENCE
IN
OPTIMIZING
MULTIMODAL
PROBLEMS
IF
A
SUFFICIENT
DIVERSITY
IS
NOT
PROVIDED
WITHIN
THE
INITIAL
POPULATION
THE
PERFORMANCE
OF
ABC
IS
VERY
GOOD
IN
TERMS
OF
THE
LOCAL
AND
THE
GLOBAL
OPTIMIZATION
DUE
TO
THE
SELECTION
SCHEMES
EM
PLOYED
AND
THE
NEIGHBORING
PRODUCTION
MECHANISM
USED
ABC
BALANCES
EXPLORATION
AND
EXPLOITATION
EFFICIENTLY
CONCLUSION
IN
THIS
WORK
WE
INVESTIGATED
THE
PERFORMANCE
OF
STANDARD
AND
MODIFIED
VERSIONS
OF
THE
ARTIFICIAL
BEE
COLONY
ALGORITHM
AND
COMPARED
THEIR
PERFORMANCES
AGAINST
STATE
OF
THE
ART
ALGORITHMS
PRESENTED
IN
THE
LITERATURE
BESIDES
COMPARING
THE
ARTI
FICIAL
BEE
COLONY
ALGORITHM
AGAINST
SOME
OTHER
ALGORITHMS
COMPARISONS
BETWEEN
ITS
OWN
VERSIONS
WERE
ALSO
CONDUCTED
ALTHOUGH
THE
STANDARD
ABC
ALGORITHM
MODIFIES
ONLY
ONE
PARAMETER
WHILE
PRODUCING
A
NEW
NEIGHBORING
SOLUTION
THE
MOD
IFIED
ABC
ALGORITHM
EMPLOYS
A
CONTROL
PARAMETER
THAT
DETERMINES
HOW
MANY
PARAMETERS
TO
BE
MODIFIED
FOR
THE
PRODUCTION
OF
A
NEIGHBORING
SOLUTION
A
SCALING
FACTOR
THAT
TUNES
THE
STEP
SIZE
ADAPTIVELY
WAS
INTRODUCED
FROM
THE
RESULTS
IT
CAN
BE
CON
CLUDED
THAT
THE
STANDARD
ABC
ALGORITHM
CAN
EFFICIENTLY
SOLVE
BASIC
FUNCTIONS
WHILE
THE
MODIFIED
ABC
ALGORITHM
PRODUCES
PROMISING
RESULTS
ON
HYBRID
FUNCTIONS
COMPARED
TO
STATE
OF
THE
ART
ALGORITHMS
BIG
DATA
HAS
BEEN
ONE
OF
THE
CURRENT
AND
FUTURE
RESEARCH
FRONTIERS
IN
THIS
YEAR
GARTNER
LISTED
THE
TOP
STRATEGIC
TECH
NOLOGY
TRENDS
FOR
AND
TOP
CRITICAL
TECH
TRENDS
FOR
THE
NEXT
FIVE
YEARS
AND
BIG
DATA
IS
LISTED
IN
THE
BOTH
TWO
IT
IS
RIGHT
TO
SAY
THAT
BIG
DATA
WILL
REVOLUTIONIZE
MANY
FIELDS
INCLUDING
BUSINESS
THE
SCIENTIFIC
RESEARCH
PUBLIC
ADMINISTRATION
AND
SO
ON
FOR
THE
DEFINITION
OF
THE
BIG
DATA
THERE
ARE
VARIOUS
DIFFERENT
EXPLANATIONS
FROM
TO
DOUG
LANEY
USED
VOLUME
VELOCITY
AND
VARIETY
KNOWN
AS
TO
CHARACTERIZE
THE
CONCEPT
OF
BIG
DATA
THE
TERM
VOLUME
IS
THE
SIZE
OF
THE
DATA
SET
VELOCITY
INDICATES
THE
SPEED
OF
DATA
IN
AND
OUT
AND
VARIETY
DESCRIBES
THE
RANGE
OF
DATA
TYPES
AND
SOURCES
SOMETIMES
PEOPLE
EXTEND
ANOTHER
V
ACCORDING
TO
THEIR
SPECIAL
REQUIREMENTS
THE
FOURTH
V
CAN
BE
VALUE
VARIABILITY
OR
VIRTUAL
MORE
COMMONLY
BIG
DATA
IS
A
COLLECTION
OF
VERY
HUGE
DATA
SETS
WITH
A
GREAT
DIVERSITY
OF
TYPES
SO
THAT
IT
BECOMES
DIF
FICULT
TO
PROCESS
BY
USING
STATE
OF
THE
ART
DATA
PROCESSING
APPROACHES
OR
TRADITIONAL
DATA
PROCESSING
PLATFORMS
IN
GART
NER
RETRIEVED
AND
GAVE
A
MORE
DETAILED
DEFINITION
AS
BIG
DATA
ARE
HIGH
VOLUME
HIGH
VELOCITY
AND
OR
HIGH
VARIETY
CORRESPONDING
AUTHOR
E
MAIL
ADDRESSES
PHILIP
CHEN
IEEE
ORG
C
L
PHILIP
CHEN
CYZHANGFST
GMAIL
COM
C
Y
ZHANG
SEE
FRONT
MATTER
ELSEVIER
INC
ALL
RIGHTS
RESERVED
HTTP
DX
DOI
ORG
J
INS
C
L
PHILIP
CHEN
CONTENTS
LISTS
AVAILABLE
AT
SCIENCEDIRECT
INFORMATION
SCIENCES
JOURNAL
HOMEPAGE
WWW
ELSEVIER
COM
LOCATE
INS
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
INFORMATION
ASSETS
THAT
REQUIRE
NEW
FORMS
OF
PROCESSING
TO
ENABLE
ENHANCED
DECISION
MAKING
INSIGHT
DISCOVERY
AND
PROCESS
OPTIMIZATION
MORE
GENERALLY
A
DATA
SET
CAN
BE
CALLED
BIG
DATA
IF
IT
IS
FORMIDABLE
TO
PERFORM
CAPTURE
CURATION
ANALYSIS
AND
VISUALIZATION
ON
IT
AT
THE
CURRENT
TECHNOLOGIES
WITH
DIVERSIFIED
DATA
PROVISIONS
SUCH
AS
SENSOR
NETWORKS
TELESCOPES
SCIENTIFIC
EXPERIMENTS
AND
HIGH
THROUGHPUT
INSTRU
MENTS
THE
DATASETS
INCREASE
AT
EXPONENTIAL
RATE
AS
DEMONSTRATED
IN
FIG
SOURCE
FROM
THE
OFF
THE
SHELF
TECHNIQUES
AND
TECHNOLOGIES
THAT
WE
READY
USED
TO
STORE
AND
ANALYSE
DATA
CANNOT
WORK
EFFICIENTLY
AND
SATISFACTORILY
THE
CHALLENGES
ARISE
FROM
DATA
CAPTURE
AND
DATA
CURATION
TO
DATA
ANALYSIS
AND
DATA
VISUALIZATION
IN
MANY
INSTANCES
SCIENCE
IS
LEGGING
BEHIND
THE
REAL
WORLD
IN
THE
CAPABILITIES
OF
DISCOVERING
THE
VALUABLE
KNOWLEDGE
FROM
MASSIVE
VOLUME
OF
DATA
BASED
ON
PRECIOUS
KNOWLEDGE
WE
NEED
TO
DEVELOP
AND
CREATE
NEW
TECHNIQUES
AND
TECHNOLOGIES
TO
EXCAVATE
BIG
DATA
AND
BENEFIT
OUR
SPECIFIED
PURPOSES
BIG
DATA
HAS
CHANGED
THE
WAY
THAT
WE
ADOPT
IN
DOING
BUSINESSES
MANAGEMENTS
AND
RESEARCHES
DATA
INTENSIVE
SCIENCE
ESPECIALLY
IN
DATA
INTENSIVE
COMPUTING
IS
COMING
INTO
THE
WORLD
THAT
AIMS
TO
PROVIDE
THE
TOOLS
THAT
WE
NEED
TO
HANDLE
THE
BIG
DATA
PROBLEMS
DATA
INTENSIVE
SCIENCE
IS
EMERGING
AS
THE
FOURTH
SCIENTIFIC
PARADIGM
IN
TERMS
OF
THE
PREVIOUS
THREE
NAMELY
EMPIRICAL
SCIENCE
THEORETICAL
SCIENCE
AND
COMPUTATIONAL
SCIENCE
THOUSAND
YEARS
AGO
SCIENTISTS
DESCRIBING
THE
NAT
URAL
PHENOMENON
ONLY
BASED
ON
HUMAN
EMPIRICAL
EVIDENCES
SO
WE
CALL
THE
SCIENCE
AT
THAT
TIME
AS
EMPIRICAL
SCIENCE
IT
IS
ALSO
THE
BEGINNING
OF
SCIENCE
AND
CLASSIFIED
AS
THE
FIRST
PARADIGM
THEN
THEORETICAL
SCIENCE
EMERGED
HUNDREDS
YEARS
AGO
AS
THE
SECOND
PARADIGM
SUCH
AS
NEWTON
MOTION
LAWS
AND
KEPLER
LAWS
HOWEVER
IN
TERMS
OF
MANY
COMPLEX
PHENOMENON
AND
PROBLEMS
SCIENTISTS
HAVE
TO
TURN
TO
SCIENTIFIC
SIMULATIONS
SINCE
THEORETICAL
ANALYSIS
IS
HIGHLY
COMPLICATED
AND
SOME
TIMES
UNAVAILABLE
AND
INFEASIBLE
AFTERWARDS
THE
THIRD
SCIENCE
PARADIGM
WAS
BORN
AS
COMPUTATIONAL
BRANCH
SIMULATIONS
IN
LARGE
OF
FIELDS
GENERATE
A
HUGE
VOLUME
OF
DATA
FROM
THE
EXPERIMENTAL
SCIENCE
AT
THE
SAME
TIME
MORE
AND
MORE
LARGE
DATA
SETS
ARE
GENERATED
IN
MANY
PIPELINES
THERE
IS
NO
DOUBT
THAT
THE
WORLD
OF
SCIENCE
HAS
CHANGED
JUST
BECAUSE
OF
THE
INCREASING
DATA
INTENSIVE
APPLICATIONS
THE
TECHNIQUES
AND
TECHNOLOGIES
FOR
THIS
KIND
OF
DATA
INTENSIVE
SCIENCE
ARE
TOTALLY
DISTINCT
WITH
THE
PREVIOUS
THREE
THEREFORE
DATA
INTENSIVE
SCIENCE
IS
VIEWED
AS
A
NEW
AND
FOURTH
SCIENCE
PARADIGM
FOR
SCIENTIFIC
DISCOV
ERIES
IN
SECTION
WE
WILL
DISCUSS
SEVERAL
TRANSPARENT
BIG
DATA
APPLICATIONS
AROUND
THREE
FIELDS
THE
OPPORTUNITIES
AND
CHAL
LENGES
AROUSED
FROM
BIG
DATA
PROBLEMS
WILL
BE
INTRODUCED
IN
SECTION
THEN
WE
GIVE
A
DETAILED
DEMONSTRATION
OF
STATE
OF
THE
ART
TECHNIQUES
AND
TECHNOLOGIES
TO
HANDLE
DATA
INTENSIVE
APPLICATIONS
IN
SECTION
WHERE
BIG
DATA
TOOLS
DISCUSSED
THERE
WILL
GIVE
A
HELPFUL
GUIDE
FOR
EXPERTISE
USERS
IN
SECTION
A
NUMBER
OF
PRINCIPLES
FOR
DESIGNING
EFFECTIVE
BIG
DATA
SYS
TEMS
ARE
LISTED
ONE
OF
THE
MOST
IMPORTANT
PARTS
OF
THIS
PAPER
WHICH
PROVIDES
SEVERAL
UNDERLYING
TECHNIQUES
TO
SETTLE
BIG
DATA
PROBLEMS
IS
RANGED
IN
SECTION
IN
THE
LAST
SECTION
WE
DRAW
A
CONCLUSION
BIG
DATA
PROBLEMS
AS
MORE
AND
MORE
FIELDS
INVOLVE
BIG
DATA
PROBLEMS
RANGING
FROM
GLOBAL
ECONOMY
TO
SOCIETY
ADMINISTRATION
AND
FROM
SCIENTIFIC
RESEARCHES
TO
NATIONAL
SECURITY
WE
HAVE
ENTERED
THE
ERA
OF
BIG
DATA
RECENTLY
A
REPORT
FROM
MCKINSEY
INSTI
TUTE
GIVES
TRANSFORMATIVE
POTENTIALS
OF
BIG
DATA
IN
FIVE
DOMAINS
HEALTH
CARE
OF
THE
UNITED
STATES
PUBLIC
SECTOR
ADMINISTRATION
OF
EUROPEAN
UNION
RETAIL
OF
THE
UNITED
STATES
GLOBAL
MANUFACTURING
AND
PERSONAL
LOCATION
DATA
THEIR
RESEARCH
CLAIMS
THAT
FIG
DATA
DELUGE
THE
INCREASE
OF
DATA
SIZE
HAS
SURPASSED
THE
CAPABILITIES
OF
COMPUTATION
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
BIG
DATA
CAN
MAKE
PROMINENT
GROWTH
OF
THE
WORLD
ECONOMY
BY
ENHANCING
THE
PRODUCTIVITY
AND
COMPETITIVENESS
OF
ENTER
PRISES
AND
ALSO
THE
PUBLIC
ADMINISTRATIONS
BIG
DATA
HAS
A
DEEP
RELATIONSHIP
WITH
E
SCIENCE
WHICH
IS
COMPUTATIONALLY
INTENSIVE
SCIENCE
WHICH
USUALLY
IS
IMPLE
MENTED
IN
DISTRIBUTED
COMPUTING
SYSTEMS
MANY
ISSUES
ON
BIG
DATA
APPLICATIONS
CAN
BE
RESOLVED
BY
E
SCIENCE
WHICH
REQUIRE
GRID
COMPUTING
E
SCIENCES
INCLUDE
PARTICLE
PHYSICS
BIO
INFORMATICS
EARTH
SCIENCES
AND
SOCIAL
SIMULATIONS
IT
ALSO
PRO
VIDES
TECHNOLOGIES
THAT
ENABLE
DISTRIBUTED
COLLABORATION
SUCH
AS
THE
ACCESS
GRID
PARTICLE
PHYSICS
HAS
A
WELL
DEVELOPED
E
SCI
ENCE
INFRASTRUCTURE
IN
PARTICULAR
BECAUSE
OF
ITS
NEED
FOR
ADEQUATE
COMPUTING
FACILITIES
FOR
THE
ANALYSIS
OF
RESULTS
AND
STORAGE
OF
DATA
ORIGINATING
FROM
THE
EUROPEAN
ORGANIZATION
FOR
NUCLEAR
RESEARCH
CERN
LARGE
HADRON
COLLIDER
WHICH
STARTED
TAKING
DATA
IN
E
SCIENCE
IS
A
BIG
CONCEPT
WITH
MANY
SUB
FIELDS
SUCH
AS
E
SOCIAL
SCIENCE
WHICH
CAN
BE
REGARDED
AS
A
HIGHER
DEVELOPMENT
IN
E
SCIENCE
IT
PLAYS
A
ROLE
AS
A
PART
OF
SOCIAL
SCIENCE
TO
COLLECT
PROCESS
AND
ANALYSE
THE
SOCIAL
AND
BEHAVIORAL
DATA
OTHER
BIG
DATA
APPLICATIONS
LIES
IN
MANY
SCIENTIFIC
DISCIPLINES
LIKE
ASTRONOMY
ATMOSPHERIC
SCIENCE
MEDICINE
GENOMICS
BIOLOGIC
BIOGEOCHEMISTRY
AND
OTHER
COMPLEX
AND
INTERDISCIPLINARY
SCIENTIFIC
RESEARCHES
WEB
BASED
APPLICATIONS
ENCOUNTER
BIG
DATA
FREQUENTLY
SUCH
AS
RECENT
HOT
SPOTS
SOCIAL
COMPUTING
INCLUDING
SOCIAL
NETWORK
ANALYSIS
ONLINE
COMMUNITIES
REC
OMMENDER
SYSTEMS
REPUTATION
SYSTEMS
AND
PREDICTION
MARKETS
INTERNET
TEXT
AND
DOCUMENTS
INTERNET
SEARCH
INDEXING
ALTERNATIVELY
THERE
ARE
COUNTLESS
SENSOR
AROUND
US
THEY
GENERATE
SUMLESS
SENSOR
DATA
THAT
NEED
TO
BE
UTILIZED
FOR
INSTANCE
INTELLIGENT
TRANSPORTATION
SYSTEMS
ITS
ARE
BASED
ON
THE
ANALYSIS
OF
LARGE
VOLUMES
OF
COMPLEX
SENSOR
DATA
LARGE
SCALE
E
COMMERCE
ARE
PARTICULARLY
DATA
INTENSIVE
AS
IT
INVOLVES
LARGE
NUMBER
OF
CUSTOMERS
AND
TRANSACTIONS
IN
THE
FOLLOWING
SUBSECTIONS
WE
WILL
BRIEFLY
INTRODUCE
SEVERAL
APPLICATIONS
OF
THE
BIG
DATA
PROBLEMS
IN
COMMERCE
AND
BUSINESS
SOCIETY
ADMINISTRATION
AND
SCIENTIFIC
RESEARCH
FIELDS
BIG
DATA
IN
COMMERCE
AND
BUSINESS
ACCORDING
TO
ESTIMATES
THE
VOLUME
OF
BUSINESS
DATA
WORLDWIDE
ACROSS
ALMOST
COMPANIES
DOUBLES
EVERY
YEARS
TAKING
RETAIL
INDUSTRY
AS
AN
EXAMPLE
WE
TRY
TO
GIVE
A
BRIEF
DEMONSTRATION
FOR
THE
FUNCTIONALITIES
OF
BIG
DATA
IN
COMMERCIAL
ACTIVITIES
THERE
ARE
AROUND
MILLION
TRANSACTIONS
PER
DAY
IN
WAL
MART
STORES
WORLDWIDE
FOR
SEEKING
FOR
HIGHER
COMPETITIVENESS
IN
RETAIL
WAL
MART
RECENTLY
COLLABORATED
WITH
HEWLETT
PACKARD
TO
ESTABLISH
A
DATA
WAREHOUSE
WHICH
HAS
A
CAPABILITY
TO
STORE
PETABYTES
SEE
THE
SIZE
OF
DATA
UNIT
IN
APPENDIX
A
OF
DATA
I
E
TRILLION
BYTES
TRACING
EVERY
PUR
CHASE
RECORD
FROM
THEIR
POINT
OF
SALE
TERMINALS
TAKING
ADVANTAGE
OF
SOPHISTICATED
MACHINE
LEARNING
TECHNIQUES
TO
EXPLOIT
THE
KNOWLEDGE
HIDDEN
IN
THIS
HUGE
VOLUME
OF
DATA
THEY
SUCCESSFULLY
IMPROVE
EFFICIENCY
OF
THEIR
PRICING
STRATEGIES
AND
ADVER
TISING
CAMPAIGNS
THE
MANAGEMENT
OF
THEIR
INVENTORY
AND
SUPPLY
CHAINS
ALSO
SIGNIFICANTLY
BENEFITS
FROM
THE
LARGE
SCALE
WAREHOUSE
IN
THE
ERA
OF
INFORMATION
ALMOST
EVERY
BIG
COMPANY
ENCOUNTERS
BIG
DATA
PROBLEMS
ESPECIALLY
FOR
MULTINATIONAL
CORPORA
TIONS
ON
THE
ONE
HAND
THOSE
COMPANIES
MOSTLY
HAVE
A
LARGE
NUMBER
OF
CUSTOMERS
AROUND
THE
WORLD
ON
THE
OTHER
HAND
THERE
ARE
VERY
LARGE
VOLUME
AND
VELOCITY
OF
THEIR
TRANSACTION
DATA
FOR
INSTANCE
FICO
FALCON
CREDIT
CARD
FRAUD
DETECTION
SYS
TEM
MANAGES
OVER
BILLION
VALID
ACCOUNTS
AROUND
THE
WORLD
THERE
ARE
ABOVE
BILLION
PIECES
OF
CONTENT
GENERATED
ON
FACE
BOOK
EVERY
DAY
THE
SAME
PROBLEM
HAPPENS
IN
EVERY
INTERNET
COMPANIES
THE
LIST
COULD
GO
ON
AND
ON
AS
WE
WITNESS
THE
FUTURE
BUSINESSES
BATTLE
FIELDS
FOCUSING
ON
BIG
DATA
BIG
DATA
IN
SOCIETY
ADMINISTRATION
PUBLIC
ADMINISTRATION
ALSO
INVOLVES
BIG
DATA
PROBLEMS
ON
ONE
SIDE
THE
POPULATION
OF
ONE
COUNTRY
USUALLY
IS
VERY
LARGE
FOR
ANOTHER
PEOPLE
IN
EACH
AGE
LEVEL
NEED
DIFFERENT
PUBLIC
SERVICES
FOR
EXAMPLES
KIDS
AND
TEENAGERS
NEED
MORE
EDU
CATION
THE
ELDERS
REQUIRE
HIGHER
LEVEL
OF
HEALTH
CARE
EVERY
PERSON
IN
ONE
SOCIETY
GENERATES
A
LOT
OF
DATA
IN
EACH
PUBLIC
SECTION
SO
THE
TOTAL
NUMBER
OF
DATA
ABOUT
PUBLIC
ADMINISTRATION
IN
ONE
NATION
IS
EXTREMELY
HUGE
FOR
INSTANCE
THERE
ARE
ALMOST
TERABYTES
OF
DATA
COLLECTED
BY
THE
US
LIBRARY
OF
CONGRESS
BY
THE
OBAMA
ADMINISTRATION
ANNOUNCED
THE
BIG
DATA
RE
SEARCH
AND
DEVELOPMENT
INITIATIVE
IN
WHICH
INVESTIGATE
ADDRESSING
IMPORTANT
PROBLEMS
FACING
THE
GOVERNMENT
BY
MAKE
USE
OF
BIG
DATA
THE
INITIATIVE
WAS
CONSTITUTIVE
OF
DIFFERENT
BIG
DATA
PROGRAMS
INVOLVING
SIX
DEPARTMENTS
THE
SIM
ILAR
THING
ALSO
HAPPENED
IN
EUROPE
GOVERNMENTS
AROUND
THE
WORLD
ARE
FACING
ADVERSE
CONDITIONS
TO
IMPROVE
THEIR
PRODUCTIVITY
NAMELY
THEY
ARE
REQUIRED
TO
BE
MORE
EFFECTIVE
IN
PUBLIC
ADMINISTRATION
PARTICULARLY
IN
THE
RECENT
GLOBAL
RECESSION
MANY
GOV
ERNMENTS
HAVE
TO
PROVIDE
A
HIGHER
LEVEL
OF
PUBLIC
SERVICES
WITH
SIGNIFICANT
BUDGETARY
CONSTRAINTS
THEREFORE
THEY
SHOULD
TAKE
BIG
DATA
AS
A
POTENTIAL
BUDGET
RESOURCE
AND
DEVELOP
TOOLS
TO
GET
ALTERNATIVE
SOLUTIONS
TO
DECREASE
BIG
BUDGET
DEFICITS
AND
REDUCE
NATIONAL
DEBT
LEVELS
ACCORDING
TO
MCKINSEY
REPORT
BIG
DATA
FUNCTIONALITIES
SUCH
AS
RESERVING
INFORMATIVE
PATTERNS
AND
KNOWLEDGE
PROVIDE
THE
PUBLIC
SECTOR
A
CHANCE
TO
IMPROVE
PRODUCTIVITY
AND
HIGHER
LEVELS
OF
EFFICIENCY
AND
EFFECTIVENESS
EUROPEAN
PUB
LIC
SECTOR
COULD
POTENTIALLY
REDUCE
EXPENDITURE
OF
ADMINISTRATIVE
ACTIVITIES
BY
PERCENT
INCREASING
BILLION
TO
BILLION
VALUES
OR
EVEN
MORE
THIS
ESTIMATE
IS
UNDER
EFFICIENCY
GAINS
AND
A
REDUCTION
IN
THE
DIFFERENCE
BETWEEN
ACTUAL
AND
HTTP
WWW
WHITEHOUSE
GOV
BLOG
BIG
DATA
BIG
DEAL
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
POTENTIAL
AGGREGATE
OF
TAX
REVENUE
THESE
FUNCTIONALITIES
COULD
SPEED
UP
YEAR
PRODUCTIVITY
GROWTH
BY
UP
TO
PERCENTAGE
POINTS
OVER
THE
NEXT
DECADE
BIG
DATA
IN
SCIENTIFIC
RESEARCH
MANY
SCIENTIFIC
FIELDS
HAVE
ALREADY
BECOME
HIGHLY
DATA
DRIVEN
WITH
THE
DEVELOPMENT
OF
COMPUTER
SCIENCES
FOR
INSTANCE
ASTRONOMY
METEOROLOGY
SOCIAL
COMPUTING
BIOINFORMATICS
AND
COMPUTATIONAL
BIOLOGY
ARE
GREATLY
BASED
ON
DATA
INTENSIVE
SCIENTIFIC
DISCOVERY
AS
LARGE
VOLUME
OF
DATA
WITH
VARIOUS
TYPES
GENERATED
OR
PRODUCED
IN
THESE
SCI
ENCE
FIELDS
HOW
TO
PROBE
KNOWLEDGE
FROM
THE
DATA
PRODUCED
BY
LARGE
SCALE
SCIENTIFIC
SIMULATION
IT
IS
A
CERTAIN
BIG
DATA
PROBLEM
WHICH
THE
ANSWER
IS
STILL
UNSATISFIABLE
OR
UNKNOWN
FOR
INSTANCES
A
SOPHISTICATED
TELESCOPE
IS
REGARDED
AS
A
VERY
LARGE
DIGITAL
CAMERA
WHICH
GENERATE
HUGE
NUMBER
OF
UNI
VERSAL
IMAGES
FOR
EXAMPLE
THE
LARGE
SYNOPTIC
SURVEY
TELESCOPE
LSST
WILL
RECORD
TRILLION
BYTES
OF
IMAGE
DATA
IN
A
SINGLE
DAY
THE
SIZE
OF
THE
DATA
EQUALS
TO
TWO
ENTIRE
SLOAN
DIGITAL
SKY
SURVEYS
DAILY
ASTRONOMERS
WILL
UTILIZE
COMPUTING
FACILITIES
AND
ADVANCED
ANALYSIS
METHODS
TO
THIS
DATA
TO
INVESTIGATE
THE
ORIGINS
OF
THE
UNIVERSE
THE
LARGE
HADRON
COLLIDER
LHC
IS
A
PARTICLE
ACCELERATOR
THAT
CAN
GENERATE
TERABYTES
OF
DATA
PER
DAY
THE
PATTERNS
IN
THOSE
DATA
CAN
GIVE
US
AN
UNPRECEDENTED
UNDERSTANDING
THE
NATURE
OF
THE
UNIVERSE
PETABYTES
OF
CLIMATE
OBSERVATIONS
AND
SIMULATIONS
WERE
CON
SERVED
ON
THE
DISCOVERY
SUPERCOMPUTING
CLUSTER
IN
THE
NASA
CENTER
FOR
CLIMATE
SIMULATION
NCCS
THE
VOLUME
OF
HUMAN
GENOME
INFORMATION
IS
ALSO
SO
LARGE
THAT
DECODING
THEM
ORIGINALLY
TOOK
A
DECADE
TO
PROCESS
OTHERWISE
A
LOT
OF
OTHER
E
SCIENCE
PROJECTS
ARE
PROPOSED
OR
UNDERWAY
IN
A
WIDE
VARIETY
OF
OTHER
RESEARCH
FIELDS
RANGE
FROM
ENVIRONMENTAL
SCI
ENCE
OCEANOGRAPHY
AND
GEOLOGY
TO
BIOLOGY
AND
SOCIOLOGY
ONE
COMMON
POINT
EXISTS
IN
THESE
DISCIPLINES
IS
THAT
THEY
GEN
ERATE
ENORMOUS
DATA
SETS
THAT
AUTOMATED
ANALYSIS
IS
HIGHLY
REQUIRED
ADDITIONALLY
CENTRALIZED
REPOSITORY
IS
NECESSARY
AS
IT
IS
IMPRACTICAL
TO
REPLICATE
COPIES
FOR
REMOTE
INDIVIDUAL
RESEARCH
GROUPS
THEREFORE
CENTRALIZED
STORAGE
AND
ANALYSIS
AP
PROACHES
DRIVE
THE
WHOLE
SYSTEM
DESIGNS
BIG
DATA
OPPORTUNITIES
AND
CHALLENGES
OPPORTUNITIES
RECENTLY
SEVERAL
US
GOVERNMENT
AGENCIES
SUCH
AS
THE
NATIONAL
INSTITUTES
OF
HEALTH
NIH
AND
THE
NATIONAL
SCIENCE
FOUNDATION
NSF
ASCERTAIN
THAT
THE
UTILITIES
OF
BIG
DATA
TO
DATA
INTENSIVE
DECISION
MAKING
HAVE
PROFOUND
INFLUENCES
IN
THEIR
FUTURE
DEVELOPMENTS
CONSEQUENTLY
THEY
ARE
TRYING
TO
DEVELOPING
BIG
DATA
TECHNOLOGIES
AND
TECHNIQUES
TO
FACIL
ITATE
THEIR
MISSIONS
AFTER
US
GOVERNMENT
PASSED
A
LARGE
SCALE
BIG
DATA
INITIATIVE
THIS
INITIATIVE
IS
VERY
HELPFUL
FOR
BUILDING
NEW
CAPABILITIES
FOR
EXPLOITING
INFORMATIVE
KNOWLEDGE
AND
FACILITATE
DECISION
MAKERS
FROM
THE
NETWORKING
INFORMATION
TECHNOLOGY
RESEARCH
AND
DEVELOPMENT
NITRD
PROGRAM
WHICH
IS
RECENTLY
RECOGNIZED
BY
PRESIDENT
COUNCIL
OF
ADVISORS
ON
SCIENCE
AND
TECHNOLOGY
PCAST
WE
KNOW
THAT
THE
BRIDGES
BETWEEN
BIG
DATA
AND
KNOWLEDGE
HIDDEN
IN
IT
ARE
HIGHLY
CRUCIAL
IN
ALL
AREAS
OF
NATIONAL
PRIORITY
THIS
INITIATIVE
WILL
ALSO
LAY
THE
GROUNDWORK
FOR
COM
PLEMENTARY
BIG
DATA
ACTIVITIES
SUCH
AS
BIG
DATA
INFRASTRUCTURE
PROJECTS
PLATFORMS
DEVELOPMENT
AND
TECHNIQUES
IN
SETTLING
COMPLEX
DATA
DRIVEN
PROBLEMS
IN
SCIENCES
AND
ENGINEERING
FINALLY
THEY
WILL
BE
PUT
INTO
PRACTICE
AND
BENEFIT
SOCIETY
ACCORDING
TO
THE
REPORT
FROM
MCKINSEY
INSTITUTE
THE
EFFECTIVE
USE
OF
BIG
DATA
HAS
THE
UNDERLYING
BENEFITS
TO
TRANSFORM
ECONOMIES
AND
DELIVERING
A
NEW
WAVE
OF
PRODUCTIVE
GROWTH
TAKING
ADVANTAGES
OF
VALUABLE
KNOWLEDGE
BEYOND
BIG
DATA
WILL
BECOME
THE
BASIC
COMPETITION
FOR
TODAY
ENTERPRISES
AND
WILL
CREATE
NEW
COMPETITORS
WHO
ARE
ABLE
TO
ATTRACT
EMPLOYEES
THAT
HAVE
THE
CRITICAL
SKILLS
ON
BIG
DATA
RESEARCHERS
POLICY
AND
DECISION
MAKERS
HAVE
TO
RECOGNIZE
THE
POTENTIAL
OF
HARNESSING
BIG
DATA
TO
UNCOVER
THE
NEXT
WAVE
OF
GROWTH
IN
THEIR
FIELDS
THERE
ARE
MANY
ADVANTAGES
IN
BUSINESS
SECTION
THAT
CAN
BE
OBTAINED
THROUGH
HARNESSING
BIG
DATA
AS
ILLUSTRATED
IN
FIG
INCLUDING
INCREASING
OPERATIONAL
EFFICIENCY
INFORMING
STRATEGIC
DIRECTION
DEVELOPING
BETTER
CUSTOMER
SERVICE
IDENTIFYING
AND
DEVELOPING
NEW
PRODUCTS
AND
SERVICES
FIG
BIG
DATA
OPPORTUNITIES
ABOVE
OF
ENTERPRISES
THINK
BIG
DATA
WILL
HELP
THEM
IN
INCREASING
OPERATIONAL
EFFICIENCY
ETC
IDENTIFYING
NEW
CUSTOMERS
AND
MARKETS
ETC
THE
VERTICAL
AXIS
DENOTES
THE
PERCENTAGES
THAT
HOW
MANY
ENTERPRISES
THINK
BIG
DATA
CAN
HELP
THEM
WITH
RESPECT
TO
SPECIFIC
PURPOSES
BY
LIBERAL
ESTIMATES
BIG
DATA
COULD
PRODUCE
BILLION
POTENTIAL
ANNUAL
VALUE
TO
US
HEALTH
CARE
AND
BIL
LION
TO
EUROPEAN
PUBLIC
ADMINISTRATION
THERE
WILL
BE
BILLION
POTENTIAL
ANNUAL
CONSUMER
SURPLUS
FROM
USING
PERSONAL
LOCATION
DATA
GLOBALLY
AND
GIVE
A
POTENTIAL
INCREASE
WITH
ONLY
IN
UNITED
STATES
BIG
DATA
PRODUCE
TO
DEEP
ANALYTICAL
TALENT
POSITIONS
AND
MILLION
DATA
SAVVY
MANAGERS
UNDOUBTEDLY
BIG
DATA
IS
USUALLY
JUICY
AND
LUCRATIVE
IF
EXPLORED
CORRECTLY
CHALLENGES
OPPORTUNITIES
ARE
ALWAYS
FOLLOWED
BY
CHALLENGES
ON
THE
ONE
HAND
BIG
DATA
BRING
MANY
ATTRACTIVE
OPPORTUNITIES
ON
THE
OTHER
HAND
WE
ARE
ALSO
FACING
A
LOT
OF
CHALLENGES
WHEN
HANDLE
BIG
DATA
PROBLEMS
DIFFICULTIES
LIE
IN
DATA
CAPTURE
STORAGE
SEARCHING
SHARING
ANALYSIS
AND
VISUALIZATION
IF
WE
CANNOT
SURMOUNT
THOSE
CHALLENGES
BIG
DATA
WILL
BECOME
A
GOLD
ORE
BUT
WE
DO
NOT
HAVE
THE
CAPABILITIES
TO
EXPLORE
IT
ESPECIALLY
WHEN
INFORMATION
SURPASS
OUR
CAPABILITY
TO
HARNESS
ONE
CHALLENGE
IS
EXISTING
IN
COMPUTER
ARCHITECTURE
FOR
SEVERAL
DECADES
THAT
IS
CPU
HEAVY
BUT
I
O
POOR
THIS
SYSTEM
IMBALANCE
STILL
RESTRAINT
THE
DEVELOPMENT
OF
THE
DISCOVERY
FROM
BIG
DATA
THE
CPU
PERFORMANCE
IS
DOUBLING
EACH
MONTHS
FOLLOWING
THE
MOORE
LAW
AND
THE
PERFORMANCE
OF
DISK
DRIVES
IS
ALSO
DOUBLING
AT
THE
SAME
RATE
HOWEVER
THE
DISKS
ROTATIONAL
SPEED
HAS
SLIGHTLY
IMPROVED
OVER
THE
LAST
DECADE
THE
CONSE
QUENCE
OF
THIS
IMBALANCE
IS
THAT
RANDOM
I
O
SPEEDS
HAVE
IMPROVED
MODERATELY
WHILE
SEQUENTIAL
I
O
SPEEDS
INCREASE
WITH
DENSITY
SLOWLY
MOREOVER
INFORMATION
IS
INCREASING
AT
EXPONENTIAL
RATE
SIMULTANEOUSLY
BUT
THE
IMPROVEMENT
OF
INFORMA
TION
PROCESSING
METHODS
IS
ALSO
RELATIVELY
SLOWER
IN
A
LOT
OF
IMPORTANT
BIG
DATA
APPLICATIONS
THE
STATE
OF
THE
ART
TECH
NIQUES
AND
TECHNOLOGIES
CANNOT
IDEALLY
SOLVE
THE
REAL
PROBLEMS
ESPECIALLY
FOR
REAL
TIME
ANALYSIS
SO
PARTIALLY
SPEAKING
UNTIL
NOW
WE
DO
NOT
HAVE
THE
PROPER
TOOLS
TO
EXPLOIT
THE
GOLD
ORES
COMPLETELY
TYPICALLY
THE
ANALYSIS
PROCESS
IS
SHOWN
IN
FIG
WHERE
THE
KNOWLEDGE
IS
DISCOVERED
IN
DATA
MINING
CHALLENGES
IN
BIG
DATA
ANALYSIS
INCLUDE
DATA
INCONSISTENCE
AND
INCOMPLETENESS
SCALABILITY
TIMELINESS
AND
DATA
SECURITY
AS
THE
PRIOR
STEP
TO
DATA
ANALYSIS
DATA
MUST
BE
WELL
CONSTRUCTED
HOWEVER
CONSIDERING
VARIETY
OF
DATA
SETS
IN
BIG
DATA
PROBLEMS
IT
IS
STILL
A
BIG
CHALLENGE
FOR
US
TO
PURPOSE
EFFICIENT
REPRESENTATION
ACCESS
AND
ANALYSIS
OF
UNSTRUCTURED
OR
SEMI
STRUCTURED
DATA
IN
THE
FURTHER
RESEARCHES
HOW
CAN
THE
DATA
BE
PREPROCESSED
IN
ORDER
TO
IMPROVE
THE
QUALITY
DATA
AND
THE
ANALYSIS
RESULTS
BEFORE
WE
BEGIN
DATA
ANALYSIS
AS
THE
SIZES
OF
DATA
SET
ARE
OFTEN
VERY
HUGE
SOMETIMES
SEVERAL
GIGABYTES
OR
MORE
AND
THEIR
ORIGIN
FROM
HETEROGENEOUS
SOURCES
CURRENT
REAL
WORLD
DATABASES
ARE
SEVERELY
SUSCEPTIBLE
TO
INCONSISTENT
INCOM
PLETE
AND
NOISY
DATA
THEREFORE
A
NUMBER
OF
DATA
PREPROCESSING
TECHNIQUES
INCLUDING
DATA
CLEANING
DATA
INTEGRATION
DATA
TRANSFORMATION
AND
DATE
REDUCTION
CAN
BE
APPLIED
TO
REMOVE
NOISE
AND
CORRECT
INCONSISTENCIES
DIFFERENT
CHALLENGES
ARISE
IN
EACH
SUB
PROCESS
WHEN
IT
COMES
TO
DATA
DRIVEN
APPLICATIONS
IN
THE
FOLLOWING
SUBSECTIONS
WE
WILL
GIVE
A
BRIEF
DIS
CUSSION
ABOUT
CHALLENGES
WE
ARE
FACING
FOR
EACH
SUB
PROCESS
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
FIG
KNOWLEDGE
DISCOVERY
PROCESS
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
DATA
CAPTURE
AND
STORAGE
DATA
SETS
GROW
IN
SIZE
BECAUSE
THEY
ARE
INCREASINGLY
BEING
GATHERED
BY
UBIQUITOUS
INFORMATION
SENSING
MOBILE
DEVICES
AERIAL
SENSORY
TECHNOLOGIES
REMOTE
SENSING
SOFTWARE
LOGS
CAMERAS
MICROPHONES
RADIO
FREQUENCY
IDENTIFICATION
READERS
WIRELESS
SENSOR
NETWORKS
AND
SO
ON
THERE
ARE
QUINTILLION
BYTES
OF
DATA
CREATED
EVERY
DAY
AND
THIS
NUMBER
KEEPS
INCREAS
ING
EXPONENTIALLY
THE
WORLD
TECHNOLOGICAL
CAPACITY
TO
STORE
INFORMATION
HAS
ROUGHLY
DOUBLED
ABOUT
EVERY
YEARS
SINCE
THE
IN
MANY
FIELDS
LIKE
FINANCIAL
AND
MEDICAL
DATA
OFTEN
BE
DELETED
JUST
BECAUSE
THERE
IS
NO
ENOUGH
SPACE
TO
STORE
THESE
DATA
THESE
VALUABLE
DATA
ARE
CREATED
AND
CAPTURED
AT
HIGH
COST
BUT
IGNORED
FINALLY
THE
BULK
STORAGE
REQUIREMENTS
FOR
EXPERIMENTAL
DATA
BASES
ARRAY
STORAGE
FOR
LARGE
SCALE
SCIENTIFIC
COMPUTATIONS
AND
LARGE
OUTPUT
FILES
ARE
REVIEWED
IN
BIG
DATA
HAS
CHANGED
THE
WAY
WE
CAPTURE
AND
STORE
DATA
INCLUDING
DATA
STORAGE
DEVICE
DATA
STORAGE
ARCHITECTURE
DATA
ACCESS
MECHANISM
AS
WE
REQUIRE
MORE
STORAGE
MEDIUMS
AND
HIGHER
I
O
SPEED
TO
MEET
THE
CHALLENGES
THERE
IS
NO
DOUBT
THAT
WE
NEED
GREAT
INNOVATIONS
FIRSTLY
THE
ACCESSIBILITY
OF
BIG
DATA
IS
ON
THE
TOP
PRIORITY
OF
THE
KNOWLEDGE
DISCOVERY
PROCESS
BIG
DATA
SHOULD
BE
ACCESSED
EASILY
AND
PROMPTLY
FOR
FURTHER
ANALYSIS
FULLY
OR
PARTIALLY
BREAK
THE
RESTRAINT
CPU
HEAVY
BUT
I
O
POOR
IN
ADDITION
THE
UNDER
DEVELOPING
STORAGE
TECHNOLOGIES
SUCH
AS
SOLID
STATE
DRIVE
SSD
AND
PHASE
CHANGE
MEMORY
PCM
MAY
HELP
US
ALLEVIATE
THE
DIFFICULTIES
BUT
THEY
ARE
FAR
FROM
ENOUGH
ONE
SIGNIFICANT
SHIFT
IS
ALSO
UNDER
WAY
THAT
IS
THE
TRANSFORMATIVE
CHANGE
OF
THE
TRADITIONAL
I
O
SUBSYSTEMS
IN
THE
PAST
DECADES
THE
PERSISTENT
DATA
WERE
STORED
BY
USING
HARD
DISK
DRIVES
HDDS
AS
WE
KNOWN
HDDS
HAD
MUCH
SLOWER
RANDOM
I
O
PERFORMANCE
THAN
SEQUENTIAL
I
O
PERFORMANCE
AND
DATA
PROCESSING
ENGINES
FORMATTED
THEIR
DATA
AND
DESIGNED
THEIR
QUERY
PROCESSING
METHODS
TO
WORK
AROUND
THIS
LIMITATION
BUT
HDDS
ARE
INCREASINGLY
BEING
REPLACED
BY
SSDS
TODAY
AND
OTHER
TECHNOLOGIES
SUCH
AS
PCM
ARE
ALSO
AROUND
THE
CORNER
THESE
CURRENT
STORAGE
TECHNOLOGIES
CANNOT
POSSESS
THE
SAME
HIGH
PERFORMANCE
FOR
BOTH
THE
SEQUENTIAL
AND
RANDOM
I
O
SIMULTANEOUSLY
WHICH
REQUIRES
US
TO
RETHINK
HOW
TO
DESIGN
STORAGE
SUBSYSTEMS
FOR
BIG
DATA
PROCESSING
SYSTEMS
DIRECT
ATTACHED
STORAGE
DAS
NETWORK
ATTACHED
STORAGE
NAS
AND
STORAGE
AREA
NETWORK
SAN
ARE
THE
ENTERPRISE
STOR
AGE
ARCHITECTURES
THAT
WERE
COMMONLY
USED
HOWEVER
ALL
THESE
EXISTING
STORAGE
ARCHITECTURES
HAVE
SEVERE
DRAWBACKS
AND
LIMITATIONS
WHEN
IT
COMES
TO
LARGE
SCALE
DISTRIBUTED
SYSTEMS
AGGRESSIVE
CONCURRENCY
AND
PER
SERVER
THROUGHPUT
ARE
THE
ESSENTIAL
REQUIREMENTS
FOR
THE
APPLICATIONS
ON
HIGHLY
SCALABLE
COMPUTING
CLUSTERS
AND
TODAY
STORAGE
SYSTEMS
LACK
THE
BOTH
OPTIMIZING
DATA
ACCESS
IS
A
POPULAR
WAY
TO
IMPROVE
THE
PERFORMANCE
OF
DATA
INTENSIVE
COMPUTING
THESE
TECHNIQUES
INCLUDE
DATA
REPLICATION
MIGRATION
DISTRIBUTION
AND
ACCESS
PARALLELISM
IN
THE
PERFORMANCE
RELIABILITY
AND
SCALABILITY
IN
DATA
ACCESS
PLATFORMS
WERE
DISCUSSED
DATA
ACCESS
PLATFORMS
SUCH
AS
CASTOR
DCACHE
GPFS
AND
SCALLA
XROOTD
ARE
EMPLOYED
TO
DEMONSTRATE
THE
LARGE
SCALE
VALIDATION
AND
PERFORMANCE
MEASUREMENT
DATA
STORAGE
AND
SEARCH
SCHEMES
ALSO
LEAD
TO
HIGH
OVERHEAD
AND
LATENCY
DISTRIBUTED
DATA
CENTRIC
STORAGE
IS
A
GOOD
APPROACH
IN
LARGE
SCALE
WIRELESS
SEN
SOR
NETWORKS
WSNS
SHEN
ZHAO
AND
LI
PROPOSED
A
DISTRIBUTED
SPATIAL
TEMPORAL
SIMILARITY
DATA
STORAGE
SCHEME
TO
PROVIDE
EFFICIENT
SPATIAL
TEMPORAL
AND
SIMILARITY
DATA
SEARCHING
SERVICE
IN
WSNS
THE
COLLECTIVE
BEHAVIOR
OF
INDIVIDUALS
THAT
COOPER
ATE
IN
A
SWARM
PROVIDE
APPROACH
TO
ACHIEVE
SELF
ORGANIZATION
IN
DISTRIBUTED
SYSTEMS
DATA
TRANSMISSION
CLOUD
DATA
STORAGE
IS
POPULARLY
USED
AS
THE
DEVELOPMENT
OF
CLOUD
TECHNOLOGIES
WE
KNOW
THAT
THE
NETWORK
BANDWIDTH
CAPACITY
IS
THE
BOTTLENECK
IN
CLOUD
AND
DISTRIBUTED
SYSTEMS
ESPECIALLY
WHEN
THE
VOLUME
OF
COMMUNICATION
IS
LARGE
ON
THE
OTHER
SIDE
CLOUD
STORAGE
ALSO
LEAD
TO
DATA
SECURITY
PROBLEMS
AS
THE
REQUIREMENTS
OF
DATA
INTEGRITY
CHECKING
MANY
SCHEMES
WERE
PROPOSED
UNDER
DIFFERENT
SYSTEMS
AND
SECURITY
MODELS
DATA
CURATION
DATA
CURATION
IS
AIMED
AT
DATA
DISCOVERY
AND
RETRIEVAL
DATA
QUALITY
ASSURANCE
VALUE
ADDITION
REUSE
AND
PRESERVATION
OVER
TIME
THIS
FIELD
SPECIFICALLY
INVOLVES
A
NUMBER
OF
SUB
FIELDS
INCLUDING
AUTHENTICATION
ARCHIVING
MANAGEMENT
PRESERVATION
RETRIEVAL
AND
REPRESENTATION
THE
EXISTING
DATABASE
MANAGEMENT
TOOLS
ARE
UNABLE
TO
PROCESS
BIG
DATA
THAT
GROW
SO
LARGE
AND
COMPLEX
THIS
SITUATION
WILL
CONTINUE
AS
THE
BENEFITS
OF
EXPLOITING
BIG
DATA
ALLOWING
RESEARCHERS
TO
ANALYSE
BUSINESS
TRENDS
PREVENT
DISEASES
AND
COMBAT
CRIME
THOUGH
THE
SIZE
OF
BIG
DATA
KEEPS
INCREASING
EXPONENTIALLY
CURRENT
CAPABILITY
TO
WORK
WITH
IS
ONLY
IN
THE
RELATIVELY
LOWER
LEVELS
OF
PETABYTES
EXABYTES
AND
ZETTABYTES
OF
DATA
THE
CLASSICAL
APPROACH
OF
MANAGING
STRUCTURED
DATA
INCLUDES
TWO
PARTS
ONE
IS
A
SCHEMA
TO
STORAGE
THE
DATA
SET
AND
ANOTHER
IS
A
RELATIONAL
DATABASE
FOR
DATA
RE
TRIEVAL
FOR
MANAGING
LARGE
SCALE
DATASETS
IN
A
STRUCTURED
WAY
DATA
WAREHOUSES
AND
DATA
MARTS
ARE
TWO
POPULAR
APPROACHES
A
DATA
WAREHOUSE
IS
A
RELATIONAL
DATABASE
SYSTEM
THAT
IS
USED
TO
STORE
AND
ANALYZE
DATA
ALSO
REPORT
THE
RESULTS
TO
USERS
THE
DATA
MART
IS
BASED
ON
A
DATA
WAREHOUSE
AND
FACILITATE
THE
ACCESS
AND
ANALYSIS
OF
THE
DATA
WAREHOUSE
A
DATA
WAREHOUSE
IS
MAINLY
RESPONSIBLE
TO
STORE
DATA
THAT
IS
SOURCED
FROM
THE
OPERATIONAL
SYSTEMS
THE
PREPROCESSING
OF
THE
DATA
IS
NECESSARY
BEFORE
IT
IS
STORED
SUCH
AS
DATA
CLEANING
TRANSFORMATION
AND
CATALOGUING
AFTER
THESE
PREPROCESSING
THE
DATA
IS
AVAILABLE
FOR
HIGHER
LEVEL
ONLINE
DATA
MINING
FUNCTIONS
THE
DATA
WAREHOUSE
AND
MARTS
ARE
STANDARD
QUERY
LANGUAGE
SQL
BASED
DAT
ABASES
SYSTEMS
NOSQL
DATABASE
ALSO
CALLED
NOT
ONLY
SQL
IS
A
CURRENT
APPROACH
FOR
LARGE
AND
DISTRIBUTED
DATA
MANAGEMENT
AND
DATABASE
DESIGN
ITS
NAME
EASILY
LEADS
TO
MISUNDERSTANDING
THAT
NOSQL
MEANS
NOT
SQL
ON
THE
CONTRARY
NOSQL
DOES
NOT
AVOID
SQL
WHILE
IT
IS
TRUE
THAT
SOME
NOSQL
SYSTEMS
ARE
ENTIRELY
NON
RELATIONAL
OTHERS
SIMPLY
AVOID
SELECTED
RELATIONAL
FUNCTIONALITY
SUCH
AS
FIXED
TABLE
SCHEMAS
AND
JOIN
OPERATIONS
THE
MAINSTREAM
BIG
DATA
PLATFORMS
ADOPT
NOSQL
TO
BREAK
AND
TRANSCEND
THE
RIGIDITY
OF
NORMALIZED
RDBMS
SCHEMAS
FOR
INSTANCE
HBASE
IS
ONE
OF
THE
MOST
FAMOUS
USED
NOSQL
DATABASES
SEE
FIG
HOWEVER
MANY
BIG
DATA
ANALYTIC
PLATFORMS
LIKE
SQLSTREAM
AND
CLOUDERA
IMPALA
SERIES
STILL
USE
SQL
IN
ITS
DATA
BASE
SYSTEMS
BECAUSE
SQL
IS
MORE
RELIABLE
AND
SIMPLER
QUERY
LANGUAGE
WITH
HIGH
PERFORMANCE
IN
STREAM
BIG
DATA
REAL
TIME
ANALYTICS
TO
STORE
AND
MANAGE
UNSTRUCTURED
DATA
OR
NON
RELATIONAL
DATA
NOSQL
EMPLOYS
A
NUMBER
OF
SPECIFIC
APPROACHES
FIRSTLY
DATA
STORAGE
AND
MANAGEMENT
ARE
SEPARATED
INTO
TWO
INDEPENDENT
PARTS
THIS
IS
CONTRARY
TO
RELATIONAL
DATABASES
WHICH
TRY
TO
MEET
THE
CONCERNS
IN
THE
TWO
SIDES
SIMULTANEOUSLY
THIS
DESIGN
GIVES
NOSQL
DATABASES
SYSTEMS
A
LOT
OF
ADVANTAGES
IN
THE
STORAGE
PART
WHICH
IS
ALSO
CALLED
KEY
VALUE
STORAGE
NOSQL
FOCUSES
ON
THE
SCALABILITY
OF
DATA
STORAGE
WITH
HIGH
PERFORMANCE
IN
THE
MANAGEMENT
PART
NOSQL
PROVIDES
LOW
LEVEL
ACCESS
MECHANISM
IN
WHICH
DATA
MANAGEMENT
TASKS
CAN
BE
IMPLEMENTED
IN
THE
APPLICATION
LAYER
RATHER
THAN
HAVING
DATA
MANAGEMENT
LOGIC
SPREAD
ACROSS
IN
SQL
OR
DB
SPECIFIC
STORED
PROCEDURE
LAN
GUAGES
THEREFORE
NOSQL
SYSTEMS
ARE
VERY
FLEXIBLE
FOR
DATA
MODELING
AND
EASY
TO
UPDATE
APPLICATION
DEVELOPMENTS
AND
DEPLOYMENTS
MOST
NOSQL
DATABASES
HAVE
AN
IMPORTANT
PROPERTY
NAMELY
THEY
ARE
COMMONLY
SCHEMA
FREE
INDEED
THE
BIGGEST
ADVAN
TAGE
OF
SCHEMA
FREE
DATABASES
IS
THAT
IT
ENABLES
APPLICATIONS
TO
QUICKLY
MODIFY
THE
STRUCTURE
OF
DATA
AND
DOES
NOT
NEED
TO
REWRITE
TABLES
ADDITIONALLY
IT
POSSESSES
GREATER
FLEXIBILITY
WHEN
THE
STRUCTURED
DATA
IS
HETEROGENEOUSLY
STORED
IN
THE
DATA
MANAGEMENT
LAYER
THE
DATA
IS
ENFORCED
TO
BE
INTEGRATED
AND
VALID
THE
MOST
POPULAR
NOSQL
DATABASE
IS
APACHE
CASSANDRA
CASSANDRA
WHICH
WAS
ONCE
FACEBOOK
PROPRIETARY
DATABASE
WAS
RELEASED
AS
OPEN
SOURCE
IN
OTHER
NOSQL
IMPLEMENTA
TIONS
INCLUDE
SIMPLEDB
GOOGLE
BIGTABLE
APACHE
HADOOP
MAPREDUCE
MEMCACHEDB
AND
VOLDEMORT
COMPANIES
THAT
USE
NOSQL
INCLUDE
TWITTER
LINKEDIN
AND
NETFLIX
DATA
ANALYSIS
THE
FIRST
IMPRESSION
OF
BIG
DATA
IS
ITS
VOLUME
SO
THE
BIGGEST
AND
MOST
IMPORTANT
CHALLENGE
IS
SCALABILITY
WHEN
WE
DEAL
WITH
THE
BIG
DATA
ANALYSIS
TASKS
IN
THE
LAST
FEW
DECADES
RESEARCHERS
PAID
MORE
ATTENTIONS
TO
ACCELERATE
ANALYSIS
ALGORITHMS
TO
COPE
WITH
INCREASING
VOLUMES
OF
DATA
AND
SPEED
UP
PROCESSORS
FOLLOWING
THE
MOORE
LAW
FOR
THE
FORMER
IT
IS
NECESSARY
TO
DEVELOP
SAMPLING
ON
LINE
AND
MULTIRESOLUTION
ANALYSIS
METHODS
IN
THE
ASPECT
OF
BIG
DATA
ANALYTICAL
TECHNIQUES
INCRE
MENT
ALGORITHMS
HAVE
GOOD
SCALABILITY
PROPERTY
NOT
FOR
ALL
MACHINE
LEARNING
ALGORITHMS
SOME
RESEARCHERS
DEVOTE
INTO
THIS
AREA
AS
THE
DATA
SIZE
IS
SCALING
MUCH
FASTER
THAN
CPU
SPEEDS
THERE
IS
A
NATURAL
DRAMATIC
SHIFT
IN
PROCESSOR
TECHNOLOGY
ALTHOUGH
THE
CLOCK
CYCLE
FREQUENCY
OF
PROCESSORS
IS
DOUBLING
FOLLOWING
MOORE
LAW
THE
CLOCK
SPEEDS
STILL
HIGHLY
LAG
BEHIND
ALTERNATIVELY
PROCESSORS
ARE
BEING
EMBEDDED
WITH
INCREASING
NUMBERS
OF
CORES
THIS
SHIFT
IN
PROCESSORS
LEADS
TO
THE
DEVELOPMENT
OF
PARALLEL
COMPUTING
FOR
THOSE
REAL
TIME
BIG
DATA
APPLICATIONS
LIKE
NAVIGATION
SOCIAL
NETWORKS
FINANCE
BIOMEDICINE
ASTRONOMY
INTELLIGENT
TRANSPORT
SYSTEMS
AND
INTERNET
OF
THING
TIMELINESS
IS
AT
THE
TOP
PRIORITY
HOW
CAN
WE
GRANTEE
THE
TIMELINESS
OF
RESPONSE
WHEN
THE
VOLUME
OF
DATA
WILL
BE
PROCESSED
IS
VERY
LARGE
IT
IS
STILL
A
BIG
CHALLENGE
FOR
STREAM
PROCESSING
INVOLVED
BY
BIG
DATA
IT
IS
RIGHT
TO
SAY
THAT
BIG
DATA
NOT
ONLY
HAVE
PRODUCED
MANY
CHALLENGE
AND
CHANGED
THE
DIRECTIONS
OF
THE
DEVELOPMENT
OF
THE
HARDWARE
BUT
ALSO
IN
SOFTWARE
ARCHITECTURES
THAT
IS
THE
SWERVE
TO
CLOUD
COMPUTING
WHICH
AGGREGATES
MULTIPLE
DISPARATE
WORKLOADS
INTO
A
LARGE
CLUSTER
OF
PROCESSORS
IN
THIS
DIRECTION
DISTRIBUTED
COMPUTING
IS
BEING
DEVELOPED
AT
HIGH
SPEED
RECENTLY
WE
WILL
GIVE
A
MORE
DETAIL
DISCUSSION
ABOUT
IT
IN
NEXT
SECTION
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
FIG
HBASE
NOSQL
DATABASE
SYSTEM
ARCHITECTURE
SOURCE
FROM
APACHE
HADOOP
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
DATA
SECURITY
SURFACES
WITH
GREAT
ATTENTIONS
SIGNIFICANT
SECURITY
PROBLEMS
INCLUDE
DATA
SECURITY
PROTECTION
INTELLECTUAL
PROPERTY
PROTECTION
PERSONAL
PRIVACY
PROTECTION
COMMERCIAL
SECRETS
AND
FINANCIAL
INFORMATION
PROTECTION
MOST
DEVEL
OPED
AND
DEVELOPING
COUNTRIES
HAVE
ALREADY
MADE
RELATED
DATA
PROTECTION
LAWS
TO
ENHANCE
THE
SECURITY
RESEARCH
GROUPS
AND
INDIVIDUALS
NEED
TO
CAREFULLY
CONSIDER
THE
LEGISLATION
OF
WHERE
THEY
STORE
AND
PROCESS
DATA
TO
MAKE
SURE
THAT
THEY
ARE
IN
COM
PLIANCE
WITH
THE
REGULATIONS
FOR
BIG
DATA
RELATED
APPLICATIONS
DATA
SECURITY
PROBLEMS
ARE
MORE
AWKWARD
FOR
SEVERAL
REASONS
FIRSTLY
THE
SIZE
OF
BIG
DATA
IS
EXTREMELY
LARGE
CHANNELLING
THE
PROTECTION
APPROACHES
SECONDLY
IT
ALSO
LEADS
TO
MUCH
HEAVIER
WORKLOAD
OF
THE
SECURITY
OTHERWISE
MOST
BIG
DATA
ARE
STORED
IN
A
DISTRIBUTED
WAY
AND
THE
THREATS
FROM
NETWORKS
ALSO
CAN
AGGRAVATE
THE
PROBLEMS
DATA
VISUALIZATION
THE
MAIN
OBJECTIVE
OF
DATA
VISUALIZATION
IS
TO
REPRESENT
KNOWLEDGE
MORE
INTUITIVELY
AND
EFFECTIVELY
BY
USING
DIF
FERENT
GRAPHS
TO
CONVEY
INFORMATION
EASILY
BY
PROVIDING
KNOWLEDGE
HIDDEN
IN
THE
COMPLEX
AND
LARGE
SCALE
DATA
SETS
BOTH
AESTHETIC
FORM
AND
FUNCTIONALITY
ARE
NECESSARY
INFORMATION
THAT
HAS
BEEN
ABSTRACTED
IN
SOME
SCHEMATIC
FORMS
INCLUDING
ATTRIBUTES
OR
VARIABLES
FOR
THE
UNITS
OF
INFORMATION
IS
ALSO
VALUABLE
FOR
DATA
ANALYSIS
THIS
WAY
IS
MUCH
MORE
INTUITIVE
THAN
SOPHISTICATED
APPROACHES
ONLINE
MARKETPLACE
EBAY
HAVE
HUNDREDS
OF
MILLION
ACTIVE
USERS
AND
BILLIONS
OF
GOODS
SOLD
EACH
MONTH
AND
THEY
GENERATE
A
LOT
OF
DATA
TO
MAKE
ALL
THAT
DATA
UNDERSTANDABLE
EBAY
TURNED
TO
BIG
DATA
VISUALIZATION
TOOL
TABLEAU
WHICH
HAS
CAPABILITY
TO
TRANSFORM
LARGE
COMPLEX
DATA
SETS
INTO
INTUITIVE
PICTURES
THE
RESULTS
ARE
ALSO
INTER
ACTIVE
BASED
ON
THEM
EBAY
EMPLOYEES
CAN
VISUALIZE
SEARCH
RELEVANCE
AND
QUALITY
TO
MONITOR
THE
LATEST
CUSTOMER
FEEDBACK
AND
CONDUCT
SENTIMENT
ANALYSIS
FOR
BIG
DATA
APPLICATIONS
IT
IS
PARTICULARLY
DIFFICULT
TO
CONDUCT
DATA
VISUALIZATION
BECAUSE
OF
THE
LARGE
SIZE
AND
HIGH
DIMEN
SION
OF
BIG
DATA
HOWEVER
CURRENT
BIG
DATA
VISUALIZATION
TOOLS
MOSTLY
HAVE
POOR
PERFORMANCES
IN
FUNCTIONALITIES
SCALABILITY
AND
RESPONSE
TIME
WHAT
WE
NEED
TO
DO
IS
RETHINKING
THE
WAY
WE
VISUALIZE
BIG
DATA
NOT
LIKE
THE
WAY
WE
ADOPT
BEFORE
FOR
EXAMPLE
THE
HISTORY
MECHANISMS
FOR
INFORMATION
VISUALIZATION
ALSO
ARE
DATA
INTENSIVE
AND
NEED
MORE
EFFICIENT
AP
PROACHES
UNCERTAINTY
CAN
LEAD
TO
A
GREAT
CHALLENGE
TO
EFFECTIVE
UNCERTAINTY
AWARE
VISUALIZATION
AND
ARISE
IN
ANY
STAGE
OF
A
VISUAL
ANALYTICS
PROCESS
NEW
FRAMEWORK
FOR
MODELING
UNCERTAINTY
AND
CHARACTERIZING
THE
EVOLUTION
OF
THE
UNCER
TAINTY
INFORMATION
ARE
HIGHLY
NECESSARY
THROUGH
ANALYTICAL
PROCESSES
THE
SHORTAGE
OF
TALENT
WILL
BE
A
SIGNIFICANT
CONSTRAINT
TO
CAPTURE
VALUES
FROM
BIG
DATA
IN
THE
UNITED
STATES
BIG
DATA
IS
EXPECTED
TO
RAPIDLY
BECOME
A
KEY
DETERMINANT
OF
COMPETITION
ACROSS
MANY
SECTORS
HOWEVER
THIS
AREA
DEMANDS
FOR
DEEP
ANALYTICAL
POSITIONS
ON
BIG
DATA
COULD
EXCEED
THE
SUPPLY
BEING
PRODUCED
ON
CURRENT
TRENDS
BY
TO
POSITIONS
FURTHERMORE
THIS
KIND
OF
HUMAN
RESOURCE
IS
MORE
DIFFICULT
TO
EDUCATE
IT
USUALLY
TAKES
MANY
YEARS
TO
TRAIN
BIG
DATA
ANALYSTS
THAT
MUST
HAVE
INTRINSIC
MATHEMATICAL
ABILITIES
AND
RELATED
PROFESSIONAL
KNOWLEDGE
WE
BELIEVE
THAT
THE
SAME
SIT
UATION
ALSO
HAPPENED
IN
OTHER
NATIONS
NOT
MATTER
DEVELOPED
COUNTRIES
OR
DEVELOPING
COUNTRIES
AROUND
THE
WORLD
IT
IS
FORE
SEEABLE
THAT
THERE
WILL
BE
ANOTHER
HOT
COMPETITION
ABOUT
HUMAN
RESOURCES
IN
BIG
DATA
DEVELOPMENTS
AFTER
REVIEW
A
NUMBER
OF
CHALLENGES
THE
OPTIMISTS
TAKE
A
BROAD
VIEW
CHALLENGES
AND
HIDDEN
BENEFITS
THEY
HAVE
ENOUGH
CONFIDENCE
THAT
WE
HAVE
THE
CAPABILITIES
TO
OVERCOME
ALL
THE
OBSTACLES
AS
NEW
TECHNIQUES
AND
TECHNOLOGIES
ARE
DEVELOPED
THERE
ARE
MANY
CRITIQUES
AND
NEGATIVE
OPINIONS
FROM
THE
PESSIMISTS
SOME
RESEARCHERS
THINK
BIG
DATA
WILL
LEAD
TO
THE
END
OF
THEORY
AND
DOUBT
WHETHER
IT
CAN
HELP
US
TO
MAKE
BETTER
DECISIONS
WHATEVER
THE
MAINSTREAM
PERSPECTIVES
ARE
MOST
POSITIVE
SO
A
LARGE
NUMBER
OF
BIG
DATA
TECHNIQUES
AND
TECHNOLOGIES
HAVE
BEEN
DEVELOPED
OR
UNDER
DEVELOPING
BIG
DATA
TOOLS
TECHNIQUES
AND
TECHNOLOGIES
TO
CAPTURE
THE
VALUE
FROM
BIG
DATA
WE
NEED
TO
DEVELOP
NEW
TECHNIQUES
AND
TECHNOLOGIES
FOR
ANALYZING
IT
UNTIL
NOW
SCI
ENTISTS
HAVE
DEVELOPED
A
WIDE
VARIETY
OF
TECHNIQUES
AND
TECHNOLOGIES
TO
CAPTURE
CURATE
ANALYZE
AND
VISUALIZE
BIG
DATA
EVEN
SO
THEY
ARE
FAR
AWAY
FROM
MEETING
VARIETY
OF
NEEDS
THESE
TECHNIQUES
AND
TECHNOLOGIES
CROSS
A
NUMBER
OF
DISCIPLINE
INCLUD
ING
COMPUTER
SCIENCE
ECONOMICS
MATHEMATICS
STATISTICS
AND
OTHER
EXPERTISES
MULTIDISCIPLINARY
METHODS
ARE
NEEDED
TO
DIS
COVERY
THE
VALUABLE
INFORMATION
FROM
BIG
DATA
WE
WILL
DISCUSS
CURRENT
TECHNIQUES
AND
TECHNOLOGIES
FOR
EXPLOITING
DATA
INTENSIVE
APPLICATIONS
WE
NEED
TOOLS
PLATFORMS
TO
MAKE
SENSE
OF
BIG
DATA
CURRENT
TOOLS
CONCENTRATE
ON
THREE
CLASSES
NAMELY
BATCH
PROCESSING
TOOLS
STREAM
PROCESSING
TOOLS
AND
INTERACTIVE
ANALYSIS
TOOLS
MOST
BATCH
PROCESSING
TOOLS
ARE
BASED
ON
THE
APACHE
HADOOP
INFRASTRUCTURE
SUCH
AS
MAHOUT
AND
DRYAD
THE
LATTER
IS
MORE
LIKE
NECESSARY
FOR
REAL
TIME
ANALYTIC
FOR
STREAM
DATA
APPLICA
TIONS
STORM
AND
ARE
GOOD
EXAMPLES
FOR
LARGE
SCALE
STREAMING
DATA
ANALYTIC
PLATFORMS
THE
INTERACTIVE
ANALYSIS
PROCESSES
THE
DATA
IN
AN
INTERACTIVE
ENVIRONMENT
ALLOWING
USERS
TO
UNDERTAKE
THEIR
OWN
ANALYSIS
OF
INFORMATION
THE
USER
IS
DIRECTLY
CONNECTED
TO
THE
COMPUTER
AND
HENCE
CAN
INTERACT
WITH
IT
IN
REAL
TIME
THE
DATA
CAN
BE
REVIEWED
COMPARED
AND
ANALYZED
IN
TABULAR
OR
GRAPHIC
FORMAT
OR
BOTH
AT
THE
SAME
TIME
GOOGLE
DREMEL
AND
APACHE
DRILL
ARE
BIG
DATA
PLATFORMS
BASED
ON
INTER
ACTIVE
ANALYSIS
IN
THE
FOLLOWING
SUB
SECTIONS
WE
LL
DISCUSS
SEVERAL
TOOLS
FOR
EACH
CLASS
MORE
INFORMATION
ABOUT
BIG
DATA
TOOLS
CAN
BE
FOUND
IN
APPENDIX
C
BIG
DATA
TECHNIQUES
BIG
DATA
NEEDS
EXTRAORDINARY
TECHNIQUES
TO
EFFICIENTLY
PROCESS
LARGE
VOLUME
OF
DATA
WITHIN
LIMITED
RUN
TIMES
REASONABLY
BIG
DATA
TECHNIQUES
ARE
DRIVEN
BY
SPECIFIED
APPLICATIONS
FOR
EXAMPLE
WAL
MART
APPLIES
MACHINE
LEARNING
AND
STATISTICAL
TECHNIQUES
TO
EXPLORE
PATTERNS
FROM
THEIR
LARGE
VOLUME
OF
TRANSACTION
DATA
THESE
PATTERNS
CAN
PRODUCE
HIGHER
COMPETITIVE
NESS
IN
PRICING
STRATEGIES
AND
ADVERTISING
CAMPAIGNS
TAOBAO
A
CHINESE
COMPANY
LIKE
EBAY
ADOPTS
LARGE
STREAM
DATA
MINING
TECHNIQUES
ON
USERS
BROWSE
DATA
RECORDED
ON
ITS
WEBSITE
AND
EXPLOITS
A
GOOD
DEAL
OF
VALUABLE
INFORMATION
TO
SUPPORT
THEIR
DECISION
MAKING
BIG
DATA
TECHNIQUES
INVOLVE
A
NUMBER
OF
DISCIPLINES
INCLUDING
STATISTICS
DATA
MINING
MACHINE
LEARNING
NEURAL
NETWORKS
SOCIAL
NETWORK
ANALYSIS
SIGNAL
PROCESSING
PATTERN
RECOGNITION
OPTIMIZATION
METHODS
AND
VISUALIZATION
APPROACHES
THERE
ARE
MANY
SPECIFIC
TECHNIQUES
IN
THESE
DISCIPLINES
AND
THEY
OVERLAP
WITH
EACH
OTHER
HOURLY
ILLUSTRATED
AS
FIG
OPTIMIZATION
METHODS
HAVE
BEEN
APPLIED
TO
SOLVE
QUANTITATIVE
PROBLEMS
IN
A
LOT
OF
FIELDS
SUCH
AS
PHYSICS
BIOLOGY
ENGI
NEERING
AND
ECONOMICS
IN
SEVERAL
COMPUTATIONAL
STRATEGIES
FOR
ADDRESSING
GLOBAL
OPTIMIZATION
PROBLEMS
ARE
DIS
CUSSED
SUCH
AS
SIMULATED
ANNEALING
ADAPTIVE
SIMULATED
ANNEALING
QUANTUM
ANNEALING
AS
WELL
AS
GENETIC
ALGORITHM
WHICH
NATURALLY
LENDS
ITSELF
TO
PARALLELISM
AND
THEREFORE
CAN
BE
HIGHLY
EFFICIENT
STOCHASTIC
OPTIMIZATION
INCLUDING
GENETIC
PROGRAMMING
EVOLUTIONARY
PROGRAMMING
AND
PARTICLE
SWARM
OPTIMIZATION
ARE
USEFUL
AND
SPECIFIC
OPTIMIZATION
TECHNIQUES
INSPIRED
BY
THE
PROCESS
OF
NATURE
HOWEVER
THEY
OFTEN
HAVE
HIGH
COMPLEXITY
IN
MEMORY
AND
TIME
CONSUMPTION
MANY
RE
SEARCH
WORKS
HAVE
BEEN
DONE
TO
SCALE
UP
THE
LARGE
SCALE
OPTIMIZATION
BY
COOPERATIVE
CO
EVOLUTIONARY
ALGO
RITHMS
REAL
TIME
OPTIMIZATION
IS
ALSO
REQUIRED
IN
MANY
BIG
DATA
APPLICATION
SUCH
AS
WSNS
AND
ITSS
DATA
REDUCTION
AND
PARALLELIZATION
ARE
ALSO
ALTERNATIVE
APPROACHES
IN
OPTIMIZATION
PROBLEMS
STATISTICS
IS
THE
SCIENCE
TO
COLLECT
ORGANIZE
AND
INTERPRET
DATA
STATISTICAL
TECHNIQUES
ARE
USED
TO
EXPLOIT
CORRELATIONSHIPS
AND
CAUSAL
RELATIONSHIPS
BETWEEN
DIFFERENT
OBJECTIVES
NUMERICAL
DESCRIPTIONS
ARE
ALSO
PROVIDED
BY
STATISTICS
HOWEVER
STAN
DARD
STATISTICAL
TECHNIQUES
ARE
USUALLY
NOT
WELL
SUITED
TO
MANAGE
BIG
DATA
AND
MANY
RESEARCHERS
HAVE
PROPOSED
EXTENSIONS
OF
CLASSICAL
TECHNIQUES
OR
COMPLETELY
NEW
METHODS
AUTHORS
IN
PROPOSED
EFFICIENT
APPROXIMATE
ALGORITHM
FOR
LARGE
SCALE
MULTIVARIATE
MONOTONIC
REGRESSION
WHICH
IS
AN
APPROACH
FOR
ESTIMATING
FUNCTIONS
THAT
ARE
MONOTONIC
WITH
RE
SPECT
TO
INPUT
VARIABLES
ANOTHER
TREND
OF
DATA
DRIVEN
STATISTICAL
ANALYSIS
FOCUSES
ON
SCALE
AND
PARALLEL
IMPLEMENTATION
OF
STA
TISTICAL
ALGORITHMS
A
SURVEY
OF
PARALLEL
STATISTICS
CAN
BE
FOUND
IN
AND
SEVERAL
PARALLEL
STATISTICS
ALGORITHMS
ARE
DISCUSSED
IN
STATISTICAL
COMPUTING
AND
STATISTICAL
LEARNING
ARE
THE
TWO
HOT
RESEARCH
SUB
FIELDS
DATA
MINING
IS
A
SET
OF
TECHNIQUES
TO
EXTRACT
VALUABLE
INFORMATION
PATTERNS
FROM
DATA
INCLUDING
CLUSTERING
ANALYSIS
CLASSIFICATION
REGRESSION
AND
ASSOCIATION
RULE
LEARNING
IT
INVOLVES
THE
METHODS
FROM
MACHINE
LEARNING
AND
STATISTICS
BIG
DATA
MINING
IS
MORE
CHALLENGING
COMPARED
WITH
TRADITIONAL
DATA
MINING
ALGORITHMS
TAKING
CLUSTERING
AS
AN
EXAMPLE
A
NATURAL
WAY
OF
CLUSTERING
BIG
DATA
IS
TO
EXTEND
EXISTING
METHODS
SUCH
AS
HIERARCHICAL
CLUSTERING
K
MEAN
AND
FUZZY
C
MEAN
SO
THAT
THEY
CAN
COPE
WITH
THE
HUGE
WORKLOADS
MOST
EXTENSIONS
USUALLY
RELY
ON
ANALYZING
A
CERTAIN
AMOUNT
OF
SAMPLES
OF
BIG
DATA
AND
VARY
IN
HOW
THE
SAMPLE
BASED
RESULTS
ARE
USED
TO
DERIVE
A
PARTITION
FOR
THE
OVERALL
DATA
THIS
KIND
OF
CLUSTERING
ALGORITHMS
INCLUDE
CLARA
CLUSTERING
LARGE
APPLICATIONS
ALGORITHM
CLARANS
CLUSTER
ING
LARGE
APPLICATIONS
BASED
UPON
RANDOMIZED
SEARCH
BIRCH
BALANCED
ITERATIVE
REDUCING
USING
CLUSTER
HIERARCHIES
ALGORITHM
AND
SO
ON
GENETIC
ALGORITHMS
ARE
ALSO
APPLIED
TO
CLUSTERING
AS
OPTIMIZATION
CRITERION
TO
REFLECT
THE
GOODNESS
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
FIG
BIG
DATA
TECHNIQUES
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
CLUSTERING
BIG
DATA
IS
ALSO
DEVELOPING
TO
DISTRIBUTED
AND
PARALLEL
IMPLEMENTATION
TAKING
DISCRIMINANT
ANALYSIS
AS
ANOTHER
EXAMPLE
RESEARCHERS
TRY
TO
DEVELOP
EFFECTIVE
ALGORITHM
FOR
LARGE
SCALE
DISCRIMINANT
ANALYSIS
THE
EMPHA
SIS
IS
ON
THE
REDUCTION
OF
COMPUTATIONAL
COMPLEXITY
TAKING
BIOINFORMATICS
AS
ANOTHER
EXAMPLE
IT
BECOMES
INCREASINGLY
DATA
DRIVEN
THAT
LEADS
TO
PARADIGM
CHANGE
FROM
TRADITIONAL
SINGLE
GENE
BIOLOGY
TO
THE
APPROACHES
THAT
COMBINE
INTEGRATIVE
DATABASE
ANALYSIS
AND
DATA
MINING
THIS
NEW
PARADIGM
ENABLES
THE
SYNTHESIS
OF
LARGE
SCALE
PORTRAITS
OF
GENOME
FUNCTION
MACHINE
LEARNING
IS
AN
IMPORTANT
SUBJECTION
OF
ARTIFICIAL
INTELLIGENCE
WHICH
IS
AIMED
TO
DESIGN
ALGORITHMS
THAT
ALLOW
COMPUTERS
TO
EVOLVE
BEHAVIORS
BASED
ON
EMPIRICAL
DATA
THE
MOST
OBVIOUS
CHARACTERISTIC
OF
MACHINE
LEARNING
IS
TO
DISCOVERY
KNOWLEDGE
AND
MAKE
INTELLIGENT
DECISIONS
AUTOMATICALLY
WHEN
BIG
DATA
IS
CONCERNED
WE
NEED
TO
SCALE
UP
MACHINE
LEARNING
ALGORITHMS
BOTH
SUPERVISED
LEARNING
AND
UNSUPERVISED
LEARNING
TO
COPE
WITH
IT
DEEP
MACHINE
LEARNING
HAS
BECOME
A
NEW
RESEARCH
FRONTIER
IN
ARTIFICIAL
INTELLIGENCE
IN
ADDITION
THERE
ARE
SEVERAL
FRAMEWORKS
LIKE
MAP
REDUCE
DRYADLINQ
AND
IBM
PARALLEL
MACHINE
LEARNING
TOOLBOX
THAT
HAVE
CAPABILITIES
TO
SCALE
UP
MACHINE
LEARNING
FOR
EXAMPLE
SUP
PORT
VECTOR
MACHINE
SVM
WHICH
IS
A
VERY
FUNDAMENTAL
ALGORITHM
USED
IN
CLASSIFICATION
AND
REGRESSION
PROBLEMS
SUFFERS
FROM
SERIOUS
SCALABILITY
PROBLEM
IN
BOTH
MEMORY
USE
AND
COMPUTATION
TIME
PARALLEL
SVM
PSVM
ARE
INTRODUCED
RECENTLY
TO
REDUCE
MEMORY
AND
TIME
CONSUMPTION
THERE
ARE
MANY
SCALE
MACHINE
LEARNING
ALGORITHMS
BUT
MANY
IMPORTANT
SPECIFIC
SUB
FIELDS
IN
LARGE
SCALE
MACHINE
LEARNING
SUCH
AS
LARGE
SCALE
RECOMMENDER
SYSTEMS
NATURAL
LANGUAGE
PROCESSING
ASSOCIATION
RULE
LEARNING
ENSEMBLE
LEARNING
STILL
FACE
THE
SCALABILITY
PROBLEMS
ARTIFICIAL
NEURAL
NETWORK
ANN
IS
A
MATURE
TECHNIQUES
AND
HAS
A
WIDE
RANGE
OF
APPLICATION
COVERAGE
ITS
SUCCESSFUL
APPLICATIONS
CAN
BE
FOUND
IN
PATTERN
RECOGNITION
IMAGE
ANALYSIS
ADAPTIVE
CONTROL
AND
OTHER
AREAS
MOST
OF
THE
CURRENTLY
EMPLOYED
ANNS
FOR
ARTIFICIAL
INTELLIGENCE
ARE
BASED
ON
STATISTICAL
ESTIMATIONS
CLASSIFICATION
OPTIMIZATION
AND
CONTROL
THEORY
IT
IS
GENERALLY
ACKNOWLEDGED
THE
MORE
HIDDEN
LAYERS
AND
NODES
IN
A
NEURAL
NETWORK
THE
HIGHER
ACCU
RACY
THEY
CAN
PRODUCE
HOWEVER
THE
COMPLEXITY
IN
A
NEURAL
NETWORK
ALSO
INCREASES
THE
LEARNING
TIME
THEREFORE
THE
LEARN
ING
PROCESS
IN
A
NEURAL
NETWORKS
OVER
BIG
DATA
IS
SEVERELY
TIME
AND
MEMORY
CONSUMING
NEURAL
PROCESSING
OF
LARGE
SCALE
DATA
SETS
OFTEN
LEADS
TO
VERY
LARGE
NETWORKS
THEN
THERE
ARE
TWO
MAIN
CHALLENGES
IN
THIS
SITUATION
ONE
IS
THAT
THE
CONVENTIONAL
TRAINING
ALGORITHMS
PERFORM
VERY
POORLY
AND
THE
OTHER
IS
THAT
THE
TRAINING
TIME
AND
MEMORY
LIMITATIONS
ARE
INCREASINGLY
INTRACTABLE
NATURALLY
TWO
COMMON
APPROACHES
CAN
BE
EMPLOYED
IN
THIS
SITUATION
ONE
IS
TO
RE
DUCE
THE
DATA
SIZE
BY
SOME
SAMPLING
METHODS
AND
THE
STRUCTURE
OF
THE
NEURAL
NETWORK
MAYBE
REMAINS
THE
SAME
THE
OTHER
ONE
IS
TO
SCALE
UP
NEURAL
NETWORKS
IN
PARALLEL
AND
DISTRIBUTED
WAYS
FOR
EXAMPLE
THE
COMBINATION
OF
DEEP
LEARNING
AND
PARALLEL
TRAINING
IMPLEMENTATION
TECHNIQUES
PROVIDES
POTENTIAL
WAYS
TO
PROCESS
BIG
DATA
VISUALIZATION
APPROACHES
ARE
THE
TECHNIQUES
USED
TO
CREATE
TABLES
IMAGES
DIAGRAMS
AND
OTHER
INTUITIVE
DISPLAY
WAYS
TO
UNDERSTAND
DATA
BIG
DATA
VISUALIZATION
IS
NOT
THAT
EASY
LIKE
TRADITIONAL
RELATIVE
SMALL
DATA
SETS
BECAUSE
OF
THE
COMPLEXITY
IN
OR
THE
EXTENSION
OF
TRADITIONAL
VISUALIZATION
APPROACHES
ARE
ALREADY
EMERGED
BUT
FAR
AWAY
FROM
ENOUGH
WHEN
IT
COMES
TO
LARGE
SCALE
DATA
VISUALIZATION
MANY
RESEARCHERS
USE
FEATURE
EXTRACTION
AND
A
GEOMETRIC
MODELING
TO
SIGNIFICANTLY
REDUCE
THE
DATA
SIZE
BEFORE
THE
ACTUAL
DATA
RENDERING
FOR
MORE
CLOSELY
AND
INTUITIVELY
DATA
INTER
PRETATION
SOME
RESEARCHERS
TRY
TO
RUN
BATCH
MODE
SOFTWARE
RENDERING
OF
THE
DATA
AT
THE
HIGHEST
POSSIBLE
RESOLUTION
IN
A
PAR
ALLEL
WAY
CHOOSING
PROPER
DATA
REPRESENTATION
IS
ALSO
VERY
IMPORTANT
WHEN
WE
TRY
TO
VISUALIZE
BIG
DATA
IN
AUTHOR
TRIED
TO
COMPACT
DATA
AND
GIVE
A
GOOD
APPROXIMATION
TO
LARGE
SCALE
DATA
SOCIAL
NETWORK
ANALYSIS
SNA
WHICH
HAS
EMERGED
AS
A
KEY
TECHNIQUE
IN
MODERN
SOCIOLOGY
VIEWS
SOCIAL
RELATIONSHIPS
IN
TERMS
OF
NETWORK
THEORY
AND
IT
CONSISTS
OF
NODES
AND
TIES
IT
HAS
ALSO
GAINED
A
SIGNIFICANT
FOLLOWING
IN
ANTHROPOLOGY
BIOLOGY
COMMUNICATION
STUDIES
ECONOMICS
GEOGRAPHY
HISTORY
INFORMATION
SCIENCE
ORGANIZATIONAL
STUDIES
SOCIAL
PSYCHOLOGY
DEVELOPMENT
STUDIES
AND
SOCIOLINGUISTICS
AND
IS
NOW
COMMONLY
AVAILABLE
AS
A
CONSUMER
TOOL
SNA
INCLUDE
SOCIAL
SYSTEM
DE
SIGN
HUMAN
BEHAVIOR
MODELING
SOCIAL
NETWORK
VISUALIZATION
SOCIAL
NETWORKS
EVOLUTION
ANALYSIS
AND
GRAPH
QUERY
AND
MINING
RECENTLY
ONLINE
SOCIAL
NETWORKS
AND
SOCIAL
MEDIA
ANALYSIS
HAVE
BECOME
POPULAR
ONE
OF
THE
MAIN
OBSTACLES
REGARDING
SNA
IS
THE
VASTNESS
OF
BIG
DATA
ANALYSIS
OF
A
NETWORK
CONSISTING
OF
MILLIONS
OR
BILLIONS
OF
CONNECTED
OBJECTS
IS
USUALLY
COMPUTATIONALLY
COSTLY
TWO
HOT
RESEARCH
FRONTIERS
SOCIAL
COMPUTING
AND
CLOUD
COMPUTING
ARE
IN
FAVOR
OF
SNA
TO
SOME
DEGREE
HIGHER
LEVEL
BIG
DATA
TECHNOLOGIES
INCLUDE
DISTRIBUTED
FILE
SYSTEMS
DISTRIBUTED
COMPUTATIONAL
SYSTEMS
MASSIVELY
PARALLEL
PROCESSING
MPP
SYSTEMS
DATA
MINING
BASED
ON
GRID
COMPUTING
CLOUD
BASED
STORAGE
AND
COMPUTING
RESOURCES
AS
WELL
AS
GRANULAR
COMPUTING
AND
BIOLOGICAL
COMPUTING
THESE
TECHNOLOGIES
WILL
BE
INTRO
DUCED
IN
THE
FOLLOWING
SUB
SECTIONS
MANY
RESEARCHERS
REGARD
THE
CURSE
OF
DIMENSIONALITY
AS
ONE
ASPECT
OF
BIG
DATA
PROBLEMS
INDEED
BIG
DATA
SHOULD
NOT
BE
CONSTRICTED
IN
DATA
VOLUME
BUT
ALL
TAKE
THE
HIGH
DIMENSION
CHARACTERISTIC
OF
DATA
INTO
CONSIDERATION
IN
FACT
PROCESSING
HIGH
DIMENSIONAL
DATA
IS
ALREADY
A
TOUGH
TASK
IN
CURRENT
SCIENTIFIC
RESEARCH
THE
STATE
OF
THE
ART
TECHNIQUES
FOR
HANDLING
HIGH
DIMENSIONAL
DATA
INTUITIVELY
FALL
INTO
DIMENSION
REDUCTION
NAMELY
WE
TRY
TO
MAP
THE
HIGH
DIMENSIONAL
DATA
SPACE
INTO
LOWER
DIMENSIONAL
SPACE
WITH
LESS
LOSS
OF
INFORMATION
AS
POSSIBLE
THERE
ARE
A
LARGE
NUMBER
OF
METHODS
TO
REDUCE
DIMENSION
LINEAR
MAPPING
METHODS
SUCH
AS
PRINCIPAL
COMPONENT
ANALYSIS
PCA
AND
FACTOR
ANALYSIS
ARE
POPULAR
LINEAR
DIMENSION
REDUCTION
TECHNIQUES
NON
LINEAR
TECHNIQUES
INCLUDE
KERNEL
PCA
MANIFOLD
LEARNING
TECHNIQUES
SUCH
AS
ISOMAP
LOCALLY
LINEAR
EMBEDDING
LLE
HESSIAN
LLE
LAPLACIAN
EIGENMAPS
AND
LTSA
RECENTLY
A
GENERATIVE
DEEP
NETWORKS
CALLED
AUTOENCODER
PERFORM
VERY
WELL
AS
NON
LINEAR
DIMENSIONALITY
REDUCTION
RANDOM
PROJECTION
IN
DIMENSIONALITY
REDUCTION
ALSO
HAVE
BEEN
WELL
DEVELOPED
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
BIG
DATA
TOOLS
BASED
ON
BATCH
PROCESSING
ONE
OF
THE
MOST
FAMOUS
AND
POWERFUL
BATCH
PROCESS
BASED
BIG
DATA
TOOLS
IS
APACHE
HADOOP
IT
PROVIDES
INFRASTRUCTURES
AND
PLATFORMS
FOR
OTHER
SPECIFIC
BIG
DATA
APPLICATIONS
A
NUMBER
OF
SPECIFIED
BIG
DATA
SYSTEMS
TABLE
ARE
BUILT
ON
HADOOP
AND
HAVE
SPECIAL
USAGES
IN
DIFFERENT
DOMAINS
FOR
EXAMPLE
DATA
MINING
AND
MACHINE
LEARNING
USED
IN
BUSINESS
AND
COMMERCE
APACHE
HADOOP
AND
MAP
REDUCE
APACHE
HADOOP
IS
ONE
OF
THE
MOST
WELL
ESTABLISHED
SOFTWARE
PLATFORMS
THAT
SUPPORT
DATA
INTENSIVE
DISTRIBUTED
APPLICA
TIONS
IT
IMPLEMENTS
THE
COMPUTATIONAL
PARADIGM
NAMED
MAP
REDUCE
APACHE
HADOOP
SEE
FIG
PLATFORM
CONSISTS
OF
THE
HADOOP
KERNEL
MAP
REDUCE
AND
HADOOP
DISTRIBUTED
FILE
SYSTEM
HDFS
AS
WELL
AS
A
NUMBER
OF
RELATED
PROJECTS
INCLUDING
APACHE
HIVE
APACHE
HBASE
AND
SO
ON
MAP
REDUCE
WHICH
IS
A
PROGRAMMING
MODEL
AND
AN
EXECUTION
FOR
PROCESSING
AND
GENERATING
LARGE
VOLUME
OF
DATA
SETS
WAS
PIONEERED
BY
GOOGLE
AND
DEVELOPED
BY
YAHOO
AND
OTHER
WEB
COMPANIES
MAP
REDUCE
IS
BASED
ON
THE
DIVIDE
AND
CONQUER
METHOD
AND
WORKS
BY
RECURSIVELY
BREAKING
DOWN
A
COMPLEX
PROBLEM
INTO
MANY
SUB
PROBLEMS
UNTIL
THESE
SUB
PROBLEMS
IS
SCALABLE
FOR
SOLVING
DIRECTLY
AFTER
THAT
THESE
SUB
PROBLEMS
ARE
ASSIGNED
TO
A
CLUSTER
OF
WORKING
NOTES
AND
SOLVED
IN
SEPARATE
AND
PARALLEL
WAYS
FINALLY
THE
SOLUTIONS
TO
THE
SUB
PROBLEMS
ARE
THEN
COMBINED
TO
GIVE
A
SOLUTION
TO
THE
ORIGINAL
PROBLEM
THE
DIVIDE
AND
CONQUER
METHOD
IS
IMPLEMENTED
BY
TWO
STEPS
MAP
STEP
AND
REDUCE
STEP
IN
TERMS
OF
HADOOP
CLUSTER
THERE
ARE
TWO
KINDS
OF
NODES
IN
HADOOP
INFRASTRUCTURE
THEY
ARE
MASTER
NODES
AND
WORKER
NODES
THE
MASTER
NODE
TAKES
THE
INPUT
DIVIDES
IT
INTO
SMALLER
SUB
PROBLEMS
AND
DISTRIBUTES
THEM
TO
WORKER
NODES
IN
MAP
STEP
AFTERWARDS
THE
MASTER
NODE
COLLECTS
THE
AN
SWERS
TO
ALL
THE
SUB
PROBLEMS
AND
COMBINES
THEM
IN
SOME
WAY
TO
FORM
THE
OUTPUT
IN
REDUCE
STEP
WITH
THE
ADDITION
OF
MAP
REDUCE
HADOOP
WORKS
AS
A
POWERFUL
SOFTWARE
FRAMEWORK
FOR
EASILY
WRITING
APPLICA
TIONS
WHICH
PROCESS
VAST
QUANTITIES
OF
DATA
IN
PARALLEL
ON
LARGE
CLUSTERS
PERHAPS
THOUSANDS
OF
NODES
OF
COMMODITY
HARD
WARE
IN
A
RELIABLE
FAULT
TOLERANT
MANNER
WE
GIVE
A
FAMOUS
AND
PROTOTYPICAL
EXAMPLE
THAT
COUNTS
THE
OCCURRENCE
NUMBER
OF
EACH
WORD
IN
A
SET
OF
DOCUMENTS
FOR
MAP
REDUCE
FRAMEWORK
WHERE
THE
TWO
MAIN
FUNCTIONS
MAP
AND
REDUCE
ARE
GIVEN
IN
THE
FOLLOWING
MORE
DETAILED
JAVA
CODE
FROM
HADOOP
IS
ATTACHED
IN
APPENDIX
B
THE
MAP
STEPS
ARE
IMPLEMENTED
ON
HADOOP
CLUSTER
IN
A
PARALLEL
WAY
AND
A
LARGE
NUMBER
OF
LISTS
OF
INTERMEDIATE
DATA
PAIRS
WITH
THE
FORM
KEY
C
ARE
PRODUCED
WHERE
KEY
REPRESENTS
A
SPECIFIED
WORD
AND
THE
PARAMETER
C
INDICATES
THE
COUNT
OF
THE
WORD
APPEARANCE
IN
REDUCE
STEPS
THOSE
LISTS
OF
DATA
PAIRS
ARE
INTEGRATED
TO
THE
FINAL
RESULTS
RECURSIVELY
IN
THE
MAIN
FUNCTION
AS
ILLUSTRATED
IN
FIG
THERE
ARE
A
MASTER
JOBTRACKER
AND
A
NUMBER
OF
SLAVES
TASKTRACKER
IN
THE
MAP
REDUCE
FRAME
WORK
THE
MASTER
NODE
IS
IN
CHARGE
OF
JOB
SCHEDULING
AND
TASK
DISTRIBUTION
FOR
THE
SLAVES
THE
SLAVES
IMPLEMENT
THE
TASKS
EXACTLY
AS
ASSIGNED
BY
THE
MASTER
AS
LONG
AS
THE
SYSTEMS
START
TO
RUN
THE
MASTER
NODE
KEEPS
MONITORING
ALL
THE
DATA
NODES
IF
THERE
IS
A
DATA
NODES
FAILED
TO
EXECUTE
THE
RELATED
TASKS
THE
MASTER
NODE
WILL
ASK
THE
DATA
NODE
OR
ANOTHER
DATA
NODE
TO
RE
EXECUTE
THE
FAILED
TASKS
IN
PRACTICE
APPLICATIONS
SPECIFY
THE
INPUT
FILES
AND
OUTPUT
LOCATIONS
AND
SUBMIT
THEIR
MAP
AND
RE
DUCE
FUNCTIONS
VIA
INTERACTIONS
OF
CLIENT
INTERFACES
THESE
PARAMETERS
ARE
IMPORTANT
TO
CONSTRUCT
A
JOB
CONFIGURATION
AFTER
THAT
THE
HADOOP
JOB
CLIENT
SUBMITS
THE
JOB
AND
CONFIGURATION
TO
THE
JOBTRACKER
ONCE
JOBTRACKER
RECEIVE
ALL
THE
NECESSARY
INFORMATION
IT
WILL
DISTRIBUTE
THE
SOFTWARE
CONFIGURATION
TO
THE
TASKTRACKERS
SCHEDULE
TASKS
AND
MONITOR
THEM
PROVIDE
STA
TUS
AND
DIAGNOSTIC
INFORMATION
TO
THE
JOB
CLIENT
FROM
THE
FOREGOING
WE
KNOW
THAT
COORDINATION
PLAYS
A
VERY
IMPORTANT
ROLE
IN
HADOOP
IT
ENSURES
THE
PERFORMANCE
OF
A
HADOOP
JOB
IN
ANDREW
PAVLO
GAVE
AN
OVERALL
DISCUSSION
ON
PROPERTIES
OF
MAP
REDUCE
FRAMEWORK
AS
WELL
AS
OTHER
APPROACHES
TO
LARGE
SCALE
DATA
ANALYSIS
MANY
DATA
MINING
ALGORITHMS
HAVE
BEEN
DESIGNED
TO
ACCOMMODATE
MAP
REDUCE
FOR
EXAMPLE
DATA
CUBE
MATERIALIZATION
AND
MINING
EFFICIENT
SKYLINE
COMPUTATION
AND
SCALABLE
BOOSTING
METHODS
DRYAD
DRYAD
IS
ANOTHER
POPULAR
PROGRAMMING
MODELS
FOR
IMPLEMENTING
PARALLEL
AND
DISTRIBUTED
PROGRAMS
THAT
CAN
SCALE
UP
CAPABILITY
OF
PROCESSING
FROM
A
VERY
SMALL
CLUSTER
TO
A
LARGE
CLUSTER
IT
BASES
ON
DATAFLOW
GRAPH
PROCESSING
THE
INFRA
TABLE
BIG
DATA
TOOLS
BASED
ON
BATCH
PROCESSING
NAME
SPECIFIED
USE
ADVANTAGE
APACHE
HADOOP
INFRASTRUCTURE
AND
PLATFORM
HIGH
SCALABILITY
RELIABILITY
COMPLETENESS
DRYAD
INFRASTRUCTURE
AND
PLATFORM
HIGH
PERFORMANCE
DISTRIBUTED
EXECUTION
ENGINE
GOOD
PROGRAMMABILITY
APACHE
MAHOUT
MACHINE
LEARNING
ALGORITHMS
IN
BUSINESS
GOOD
MATURITY
JASPERSOFT
BI
SUITE
BUSINESS
INTELLIGENCE
SOFTWARE
COST
EFFECTIVE
SELF
SERVICE
BI
AT
SCALE
PENTAHO
BUSINESS
ANALYTICS
BUSINESS
ANALYTICS
PLATFORM
ROBUSTNESS
SCALABILITY
FLEXIBILITY
IN
KNOWLEDGE
DISCOVERY
SKYTREE
SERVER
MACHINE
LEARNING
AND
ADVANCED
ANALYTICS
PROCESS
MASSIVE
DATASETS
ACCURATELY
AT
HIGH
SPEEDS
TABLEAU
DATA
VISUALIZATION
BUSINESS
ANALYTICS
FASTER
SMART
FIT
BEAUTIFUL
AND
EASE
OF
USE
DASHBOARDS
KARMASPHERE
STUDIO
AND
ANALYST
BIG
DATA
WORKSPACE
COLLABORATIVE
AND
STANDARDS
BASED
UNCONSTRAINED
ANALYTICS
AND
SELF
SERVICE
TALEND
OPEN
STUDIO
DATA
MANAGEMENT
AND
APPLICATION
INTEGRATION
EASY
TO
USE
ECLIPSE
BASED
GRAPHICAL
ENVIRONMENT
STRUCTURE
FOR
RUNNING
DRYAD
CONSISTS
OF
A
CLUSTER
OF
COMPUTING
NODES
AND
A
PROGRAMMER
USE
THE
RESOURCES
OF
A
COMPUTER
CLUSTER
TO
RUNNING
THEIR
PROGRAMS
IN
A
DISTRIBUTED
WAY
INDEED
DRYAD
PROGRAMMERS
CAN
USE
THOUSANDS
OF
MACHINES
EACH
OF
THEM
WITH
MULTIPLE
PROCESSORS
OR
CORES
ONE
BONUS
IS
THAT
PROGRAMMERS
DOES
NOT
NEED
TO
KNOW
ANYTHING
ABOUT
CONCURRENT
PROGRAMMING
A
DRYAD
APPLICATION
RUNS
A
COMPUTATIONAL
DIRECTED
GRAPH
WHICH
IS
COMPOSED
OF
COMPUTATIONAL
VERTICES
AND
COMMUNICATION
CHANNELS
THE
COMPUTATION
IS
STRUCTURED
AS
ILLUSTRATED
IN
FIG
GRAPH
VERTICES
REPRESENT
THE
PROGRAMS
WHILE
GRAPH
EDGES
DENOTE
THE
CHANNELS
A
DRYAD
PROGRAMMER
WRITES
SEVERAL
SEQUENTIAL
PROGRAMS
AND
CONNECTS
THEM
USING
ONE
WAY
CHANNELS
A
DRYAD
JOB
IS
TO
GENERATOR
A
GRAPH
AND
IT
HAS
CAPABILITY
TO
SYNTHESIZE
ANY
DIRECTED
ACYCLIC
GRAPH
THESE
GENERATED
GRAPHS
CAN
ALSO
BE
UPDATED
AFTER
EXECUTION
IN
ORDER
TO
DEAL
WITH
THE
UNEXPECTED
EVENTS
IN
THE
COMPUTATION
DRYAD
PROVIDES
A
LARGE
NUMBER
OF
FUNCTIONALITY
INCLUDING
GENERATING
THE
JOB
GRAPH
SCHEDULING
THE
PROCESSES
ON
THE
AVAIL
ABLE
MACHINES
HANDLING
TRANSIENT
FAILURES
IN
THE
CLUSTER
COLLECTING
PERFORMANCE
METRICS
VISUALIZING
THE
JOB
INVOKING
USER
DEFINED
POLICIES
AND
DYNAMICALLY
UPDATING
THE
JOB
GRAPH
IN
RESPONSE
TO
THESE
POLICY
DECISIONS
WITHOUT
AWARENESS
OF
THE
SEMANTICS
OF
THE
VERTICES
FIG
SCHEMATICALLY
SHOWS
THE
IMPLEMENTATION
SCHEMA
OF
DRYAD
THERE
IS
A
CENTRALIZED
JOB
MANAGER
TO
SUPERVISE
EVERY
DRYAD
JOB
IT
USES
A
SMALL
SET
OF
CLUSTER
SERVICES
TO
CONTROL
THE
EXECUTION
OF
THE
VERTICES
ON
THE
CLUSTER
BECAUSE
DRYAD
ENCOMPASSES
OTHER
COMPUTATIONAL
FRAMEWORKS
LIKE
MAP
REDUCE
AND
THE
RELATIONAL
ALGEBRA
IT
IS
MORE
COM
PLEX
AND
POWERFUL
IN
SOME
DEGREE
OTHERWISE
DRYAD
IS
A
SELF
CONTAINED
SYSTEM
WITH
COMPLETE
FUNCTIONS
INCLUDING
JOB
CRE
ATION
AND
MANAGEMENT
RESOURCE
MANAGEMENT
JOB
MONITORING
AND
VISUALIZATION
FAULT
TOLERANCE
RE
EXECUTION
THEREFORE
FIG
MAP
REDUCE
OVERVIEW
SOLID
ARROWS
ARE
FOR
MAP
FLOWS
AND
FEINT
ARROWS
ARE
FOR
REDUCE
FLOWS
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
FIG
HADOOP
SYSTEM
ARCHITECTURE
FIG
THE
STRUCTURE
OF
DRYAD
JOBS
MANY
SOFTWARE
HAVE
BEEN
BUILT
ON
TOP
DRYAD
INCLUDING
MICROSOFT
SERVER
INTEGRATION
SERVICES
SSIS
AND
DRYAD
LINQ
APACHE
MAHOUT
THE
APACHE
MAHOUT
AIMS
TO
PROVIDE
SCALABLE
AND
COMMERCIAL
MACHINE
LEARNING
TECHNIQUES
FOR
LARGE
SCALE
AND
INTEL
LIGENT
DATA
ANALYSIS
APPLICATIONS
MANY
RENOWNED
BIG
COMPANIES
SUCH
AS
GOOGLE
AMAZON
YAHOO
IBM
TWITTER
AND
FACE
BOOK
HAVE
IMPLEMENTED
SCALABLE
MACHINE
LEARNING
ALGORITHMS
IN
THEIR
PROJECTS
MANY
OF
THEIR
PROJECTS
INVOLVE
WITH
BIG
DATA
PROBLEMS
AND
APACHE
MAHOUT
PROVIDES
A
TOOL
TO
ALLEVIATE
THE
BIG
CHALLENGES
MAHOUT
CORE
ALGORITHMS
INCLUDING
CLUSTERING
CLASSIFICATION
PATTERN
MINING
REGRESSION
DIMENSION
REDUCTION
EVOLUTION
ARY
ALGORITHMS
AND
BATCH
BASED
COLLABORATIVE
FILTERING
RUN
ON
TOP
OF
HADOOP
PLATFORM
VIA
THE
MAP
REDUCE
FRAMEWORK
THESE
ALGORITHMS
IN
THE
LIBRARIES
HAVE
BEEN
WELL
DESIGNED
AND
OPTIMIZED
TO
HAVE
GOOD
PERFORMANCE
AND
CAPABILITIES
A
NUM
BER
OF
NON
DISTRIBUTED
ALGORITHMS
ARE
ALSO
CONTAINED
THE
GOAL
OF
MAHOUT
IS
TO
BUILD
A
VIBRANT
RESPONSIVE
DIVERSE
COMMUNITY
TO
FACILITATE
DISCUSSIONS
NOT
ONLY
ON
THE
PROJECT
ITSELF
BUT
ALSO
ON
POTENTIAL
USE
CASES
THE
BUSINESS
USERS
NEED
TO
PURCHASE
APACHE
SOFTWARE
LICENSE
FOR
MAHOUT
MORE
DETAILED
CONTENT
CAN
BE
FOUND
ON
THE
WEB
SITE
HTTP
MAHOUT
APACHE
ORG
JASPERSOFT
BI
SUITE
THE
JASPERSOFT
PACKAGE
IS
AN
OPEN
SOURCE
SOFTWARE
THAT
PRODUCE
REPORTS
FROM
DATABASE
COLUMNS
THE
SOFTWARE
HAS
ALREADY
BEEN
INSTALLED
IN
MANY
BUSINESS
INFORMATION
SYSTEMS
IT
IS
AN
SCALABLE
BIG
DATA
ANALYTICICAL
PLATFORM
AND
FAST
TO
GET
STARTED
WITH
NO
NEED
FOR
ETL
JASPERSOFT
HAS
A
CAPABILITY
OF
FAST
DATA
VISUALIZATION
ON
POPULAR
STORAGE
PLATFORMS
INCLUDING
MON
GODB
CASSANDRA
REDIS
RIAK
AND
COUCHDB
HADOOP
IS
ALSO
REPRESENTED
VERY
WELL
BY
JASPERREPORTS
WHICH
PROVIDES
A
HIVE
CONNECTOR
TO
HBASE
BECAUSE
IT
IS
INTEGRATED
WITH
ALL
THE
LEADING
BIG
DATA
PLATFORMS
USERS
HAVE
THE
FLEXIBILITY
TO
CHOOSE
WHAT
WORKS
BEST
FOR
THEIR
OWN
PROJECTS
ONE
IMPORTANT
PROPERTY
OF
JASPERSOFT
IS
THAT
IT
CAN
QUICKLY
EXPLORE
BIG
DATA
WITHOUT
EXTRACTION
TRANSFORMATION
ETL
AND
LOADING
AS
CONNECTED
DIRECTLY
TO
MAINSTREAM
BIG
DATA
STORES
WHETHER
OR
NOT
THEY
HAVE
A
SQL
INTERFACE
IT
EXPLORES
LARGE
SCALE
DATA
USING
VISUALIZATIONS
POWERED
BY
A
TERABYTE
SCALE
COLUMNAR
BASED
IN
MEMORY
ENGINE
OPTIMIZING
PERFOR
MANCE
THROUGH
AN
IN
MEMORY
ENGINE
THAT
CAN
PUSH
DOWN
QUERY
PROCESSING
TO
THE
UNDERLYING
DATA
STORE
IF
NECESSARY
JASPER
SOFT
ALSO
HAVE
A
ABILITY
TO
BUILD
POWERFUL
REPORTS
AND
DASHBOARDS
INTERACTIVELY
AND
DIRECTLY
FROM
BIG
DATA
STORE
WITHOUT
ETL
REQUIREMENT
THESE
REPORTS
CAN
BE
SHARED
WITH
ANYONE
INSIDE
OR
OUTSIDE
USER
ORGANIZATIONS
OR
EMBEDDED
IN
USER
APPLICATIONS
PENTAHO
BUSINESS
ANALYTICS
PENTAHO
IS
ANOTHER
SOFTWARE
PLATFORM
FOR
BIG
DATA
IT
ALSO
GENERATE
REPORTS
FROM
BOTH
STRUCTURED
AND
UNSTRUCTURED
LARGE
VOLUME
OF
DATA
PENTAHO
PLAYS
AS
A
BUSINESS
ANALYTIC
PLATFORM
FOR
BIG
DATA
TO
PROVIDE
PROFESSIONAL
SERVICES
FOR
BUSINESS
MEN
WITH
FACILE
ACCESS
INTEGRATION
VISUALIZATION
AND
EXPLORATION
OF
DATA
THEREFORE
PENTAHO
CAN
ENABLE
BUSINESS
USERS
TO
MAKE
DATA
DRIVEN
DECISIONS
THAT
HAVE
A
POSITIVE
EFFECT
ON
THE
PERFORMANCE
OF
THEIR
ORGANIZATION
THE
TECHNIQUES
EMBEDDED
IN
IT
HAVE
SEVERAL
PROPERTIES
INCLUDING
GOOD
SECURITY
SCALABILITY
AND
ACCESSIBILITY
SIMILAR
WITH
JASPERSOFT
THERE
IS
A
CHAIN
BETWEEN
PENTAHO
TOOL
AND
MANY
OF
THE
MOST
POPULAR
NOSQL
DATABASES
SUCH
AS
MONGODB
AND
CASSANDRA
ONCE
THE
CONNECTION
TO
DATABASES
IS
ESTABLISHED
USERS
CAN
DRILL
UP
AND
DRILL
DOWN
THE
COLUMNS
INTO
DIFFERENT
INFORMATION
GRANULES
BUSINESS
USERS
CAN
ACCESS
THEIR
DATA
THOUGH
A
WEB
BASED
INTERFACE
THAT
PENTAHO
PROVIDED
WITH
ITS
EASY
WAY
TO
USE
WIZ
ARD
BASED
APPROACH
BUSINESS
USERS
CAN
TURN
THEIR
DATA
INTO
INSIGHT
AND
MAKE
INFORMATION
DRIVEN
DECISIONS
VERY
FAST
THE
GRAPHICAL
PROGRAMMING
INTERFACE
DEVELOPED
BY
PENTAHO
SUCH
AS
KETTLE
AND
PENTAHO
DATA
INTEGRATION
ARE
VERY
POWERFUL
TOOLS
TO
PROCESS
MASSIVE
DATA
PENTAHO
ALSO
DEVELOPS
SOFTWARES
THAT
ARE
BASED
ON
HADOOP
CLUSTERS
TO
DRAW
HDFS
FILE
DATA
AND
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
FIG
DRYAD
ARCHITECTURE
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
HBASE
DATA
SO
USERS
JUST
NEED
TO
WRITE
THEIR
CODE
AND
SEND
THEM
OUT
TO
EXECUTE
ON
THE
CLUSTER
BY
THIS
WAY
THE
DATA
ANA
LYTICAL
PROCESSES
ARE
HIGHLY
ESCALATED
SKYTREE
SERVER
SKYTREE
SERVER
IS
THE
FIRST
GENERAL
PURPOSE
MACHINE
LEARNING
AND
ADVANCED
ANALYTICS
SYSTEM
DESIGNED
TO
ACCURATELY
PROCESS
MASSIVE
DATASETS
AT
HIGH
SPEEDS
IT
OFFERS
MANY
SOPHISTICATED
MACHINE
LEARNING
ALGORITHMS
IT
IS
EASY
TO
USE
AND
USERS
JUST
NEED
TO
TYPE
THE
RIGHT
COMMAND
INTO
A
COMMAND
LINE
SKYTREE
SERVER
HAS
FIVE
SPECIFIC
USE
CASES
NAMELY
RECOMMENDA
TION
SYSTEMS
ANOMALY
OUTLIER
IDENTIFICATION
PREDICTIVE
ANALYTICS
CLUSTERING
AND
MARKET
SEGMENTATION
AND
SIMILARITY
SEARCH
SKYTREE
IS
MORE
FOCUSED
ON
REAL
TIME
ANALYTICS
THEREFORE
IT
IS
OPTIMIZED
TO
IMPLEMENT
A
NUMBER
OF
SOPHISTICATED
MA
CHINE
LEARNING
ALGORITHMS
ON
BIG
DATA
VIA
A
MECHANISM
WHICH
THE
COMPANY
CLAIMS
CAN
BE
TIMES
FASTER
THAN
OTHER
CONGENERIC
PLATFORMS
IT
ALSO
CAN
HANDLE
STRUCTURED
AND
UNSTRUCTURED
DATA
FROM
RELATIONAL
DATABASES
HDFS
FLAT
FILES
COMMON
STATISTICAL
PACKAGES
AND
MACHINE
LEARNING
LIBRARIES
TABLEAU
TABLEAU
HAS
THREE
MAIN
PRODUCTS
TO
PROCESS
LARGE
SCALE
DATA
SET
INCLUDING
TABLEAU
DESKTOP
TABLEAU
SEVER
AND
TAB
LEAU
PUBLIC
TABLEAU
DESKTOP
IS
A
VISUALIZATION
TOOL
THAT
MAKES
IT
EASY
TO
VISUALIZE
DATA
AND
LOOK
AT
IT
IN
A
DIFFERENT
AND
INTU
ITIVE
WAY
THE
TOOL
IS
OPTIMIZED
TO
GIVE
USER
ALL
THE
COLUMNS
FOR
THE
DATA
AND
LET
USERS
MIX
THEM
TABLEAU
SERVER
IS
A
BUSINESS
INTELLIGENCE
SYSTEM
THAT
PROVIDES
BROWSER
BASED
ANALYTICS
AND
TABLEAU
PUBLIC
IS
USED
TO
CREATE
INTERACTIVE
VISUALS
TABLEAU
ALSO
EMBED
HADOOP
INFRASTRUCTURE
IT
EMPLOYS
HIVE
TO
STRUCTURE
THE
QUERIES
AND
CACHE
THE
INFORMATION
FOR
IN
MEMORY
ANALYTICS
CACHING
HELPS
TO
REDUCE
THE
LATENCY
OF
A
HADOOP
CLUSTER
THEREFORE
IT
CAN
PROVIDE
AN
INTERACTIVE
MECHA
NISM
BETWEEN
USERS
AND
BIG
DATA
APPLICATIONS
KARMASPHERE
STUDIO
AND
ANALYST
KARMASPHERE
IS
ANOTHER
HADOOP
BASED
BIG
DATA
PLATFORM
FOR
BUSINESS
DATA
ANALYSIS
IT
PROVIDES
A
NEW
APPROACH
FOR
SELF
SERVICE
ACCESS
AND
ANALYTICS
TO
BIG
DATA
IN
A
FAST
EFFICIENT
AND
COLLABORATIVE
WAY
KARMASPHERE
IS
NATIVELY
DESIGNED
FOR
HADOOP
PLATFORM
IT
PROVIDES
USERS
AN
INTEGRATED
AND
USER
FRIENDLY
WORKSPACE
FOR
PROCESSING
THEIR
BIG
DATA
APPLICATIONS
AND
PRESENTING
THE
WORKFLOWS
FROM
THE
POINT
OF
ITS
PERFORMANCE
IT
HAS
CAPABILITY
TO
DISCOVERY
BUSINESS
INSIGHT
FROM
HUGE
AMOUNTS
OF
DATA
INCLUDING
DATA
INGESTION
ITERATIVE
ANALYSIS
VISUALIZATION
AND
REPORTING
KARMASPHERE
STUDIO
IS
A
SET
OF
PLUG
INS
BUILT
ON
TOP
OF
ECLIPSE
IN
THIS
WELL
DESIGNED
INTEGRATED
DEVELOPMENT
ENVIRONMENT
USERS
CAN
EASILY
WRITE
AND
IMPLEMENT
THEIR
HADOOP
JOBS
ON
THE
PLATFORM
KARMASPHERE
ANALYST
IS
A
BIG
DATA
TOOL
WHICH
IS
DESIGNED
BY
KARMASPHERE
TO
ESCALATE
THE
ANALYTICAL
PROCESS
ON
HADOOP
CLUSTERS
IN
ADDITION
KARMASPHERE
ANALYST
ALSO
EMBEDS
HIVE
PROJECT
FOR
PROCESSING
STRUCTURED
AND
UNSTRUCTURED
DATA
ON
HA
DOOP
CLUSTERS
TECHNICAL
ANALYSTS
SQL
PROGRAMMERS
AND
DATABASE
ADMINISTRATOR
CAN
EXPERIMENT
WITH
HADOOP
IN
GRAPHICAL
ENVIRONMENT
THIS
ALSO
MAKES
KARMASPHERE
ANALYST
TO
BE
AN
ENTERPRISE
CLASS
BIG
DATA
PLATFORM
TALEND
OPEN
STUDIO
TALEND
OPEN
STUDIO
IS
AN
OPEN
SOURCE
SOFTWARE
FOR
BIG
DATA
APPLICATIONS
THAT
PROVIDES
USERS
GRAPHICAL
ENVIRONMENT
TO
CONDUCT
THEIR
ANALYSIS
VISUALLY
IT
IS
DEVELOPED
FROM
APACHE
HADOOP
AND
INVOLVES
HDFS
PIG
HCATALOG
HBASE
SQOOP
OR
HIVE
USERS
CAN
RESOLVE
THEIR
BIG
DATA
PROBLEMS
IN
THIS
PLATFORM
WITHOUT
THE
NEED
TO
WRITE
COMPLICATED
JAVA
CODE
WHICH
CANNOT
BE
AVOIDED
IN
HADOOP
BY
USING
TALEND
STUDIO
USERS
CAN
BUILD
UP
THEIR
OWN
TASKS
THROUGH
DRAGGING
AND
DROPPING
VARIETIES
OF
ICONS
ONTO
A
CANVAS
STRINGING
TOGETHER
BLOCKS
VISUALLY
CAN
BE
SIMPLE
AFTER
USERS
GET
A
FEEL
FOR
WHAT
THE
COMPONENTS
ACTUALLY
DO
AND
DO
NOT
DO
VISUAL
PROGRAMMING
SEEMS
LIKE
A
SUPERORDINATE
GOAL
BUT
THE
ICONS
CAN
NEVER
REPRESENT
THE
MECHANISMS
WITH
ENOUGH
DETAIL
TO
MAKE
IT
POSSIBLE
TO
DEEPLY
UNDERSTAND
TALEND
OPEN
STUDIO
ALSO
PROVIDES
REALLY
SIMPLE
SYNDICATION
RSS
FEED
AND
ITS
COMPONENTS
MAYBE
COLLECT
THE
RSS
AND
ADD
PROXYING
IF
NEEDED
STREAM
PROCESSING
BIG
DATA
TOOLS
HADOOP
DOES
WELL
IN
PROCESSING
LARGE
AMOUNT
OF
DATA
IN
PARALLEL
IT
PROVIDES
A
GENERAL
PARTITIONING
MECHANISM
TO
DISTRIB
UTE
AGGREGATION
WORKLOAD
ACROSS
DIFFERENT
MACHINES
NEVERTHELESS
HADOOP
IS
DESIGNED
FOR
BATCH
PROCESSING
IT
IS
A
MULTI
PUR
POSE
ENGINE
BUT
NOT
A
REAL
TIME
AND
HIGH
PERFORMANCE
ENGINE
SINCE
THERE
ARE
HIGH
THROUGHOUT
LATENCY
IN
ITS
IMPLEMENTATIONS
FOR
CERTAIN
STREAM
DATA
APPLICATIONS
SUCH
AS
PROCESSING
LOG
FILES
INDUSTRY
WITH
SENSOR
MACHINE
TO
MA
CHINE
AND
TELEMATICS
REQUIRES
REAL
TIME
RESPONSE
FOR
PROCESSING
LARGE
AMOUNT
OF
STREAM
DATA
IN
THOSE
APPLICATIONS
STREAM
PROCESSING
FOR
REAL
TIME
ANALYTICS
IS
MIGHTILY
NECESSARY
STREAM
BIG
DATA
HAS
HIGH
VOLUME
HIGH
VELOCITY
AND
COMPLEX
DATA
TYPES
INDEED
WHEN
THE
HIGH
VELOCITY
AND
TIME
DIMENSION
ARE
CONCERNED
IN
APPLICATIONS
THAT
INVOLVE
REAL
TIME
PROCESS
ING
THERE
ARE
A
NUMBER
OF
DIFFERENT
CHALLENGES
TO
MAP
REDUCE
FRAMEWORK
THEREFORE
THE
REAL
TIME
BIG
DATA
PLATFORMS
SUCH
AS
SQLSTREAM
STORM
AND
STREAMCLOUD
ARE
DESIGNED
SPECIALLY
FOR
REAL
TIME
STREAM
DATA
ANALYTICS
REAL
TIME
PROCESSING
MEANS
THAT
THE
ONGOING
DATA
PROCESSING
HIGHLY
REQUIRES
A
VERY
LOW
LATENCY
OF
RESPONSE
HENCE
THERE
IS
NOT
TOO
MUCH
DATA
ACCUMULATION
AT
THE
TIME
DIMENSION
FOR
PROCESSING
IN
GENERAL
BIG
DATA
MAY
BE
COLLECTED
AND
STORED
IN
A
DISTRIBUTED
ENVIRONMENT
NOT
IN
ONE
DATA
CENTER
IN
THE
GENERAL
MAP
REDUCE
FRAMEWORK
THE
REDUCE
PHASE
STARTS
TO
WORK
ONLY
AFTER
THE
MAP
PHASE
FINISH
UP
BUT
MOST
OF
ALL
ALL
THE
INTERMEDIATE
DATA
GENERATED
IN
MAP
PHASE
IS
SAVED
IN
THE
TABLE
BIG
DATA
TOOLS
BASED
ON
STREAM
PROCESSING
NAME
SPECIFIED
USE
ADVANTAGES
STORM
REALTIME
COMPUTATION
SYSTEM
SCALABLE
FAULT
TOLERANT
AND
IS
EASY
TO
SET
UP
AND
OPERATE
PROCESSING
CONTINUOUS
UNBOUNDED
STREAMS
OF
DATA
PROVEN
DISTRIBUTED
SCALABLE
FAULT
TOLERANT
PLUGGABLE
PLATFORM
SQLSTREAM
SERVER
SENSOR
AND
TELEMATICS
APPLICATIONS
SQL
BASED
REAL
TIME
STREAMING
BIG
DATA
PLATFORM
SPLUNK
COLLECT
AND
HARNESS
MACHINE
DATA
FAST
AND
EASY
TO
USE
DYNAMIC
ENVIRONMENTS
SCALES
FROM
LAPTOP
TO
DATACENTER
APACHE
KAFKA
DISTRIBUTED
PUBLISH
SUBSCRIBE
MESSAGING
SYSTEM
HIGH
THROUGHPUT
STREAM
OF
IMMUTABLE
ACTIVITY
DATA
SAP
HANA
PLATFORM
FOR
REAL
TIME
BUSINESS
FAST
IN
MEMORY
COMPUTING
AND
REALTIME
ANALYTIC
DISK
BEFORE
SUBMIT
TO
THE
REDUCERS
FOR
NEXT
PHASE
ALL
THESE
LEAD
TO
SIGNIFICANT
LATENCY
OF
THE
PROCESSING
THE
HIGH
LATENCY
CHARACTERISTIC
OF
HADOOP
MAKES
IT
ALMOST
IMPOSSIBLE
FOR
REAL
TIME
ANALYTICS
SEVERAL
BIG
DATA
TOOLS
BASED
ON
STREAM
PROCESSING
HAVE
BEEN
DEVELOPED
OR
UNDER
DEVELOPING
ONE
OF
THE
MOST
FAMOUS
PLATFORMS
IS
STORM
AND
OTHERS
INCLUDE
SQLSTREAM
SPLUNK
APACHE
KAFKA
AND
SAP
HANA
SEE
TABLE
STORM
STORM
IS
A
DISTRIBUTED
AND
FAULT
TOLERANT
REAL
TIME
COMPUTATION
SYSTEM
FOR
PROCESSING
LIMITLESS
STREAMING
DATA
IT
IS
RELEASED
AS
OPEN
SOURCE
AND
FREE
FOR
REMOULDING
STORM
IS
SPECIFICALLY
DESIGNED
FOR
REAL
TIME
PROCESSING
CONTRASTS
WITH
HADOOP
WHICH
IS
FOR
BATCH
PROCESSING
IT
IS
ALSO
VERY
EASY
TO
SET
UP
AND
OPERATE
AND
GUARANTEES
ALL
THE
DATA
WILL
BE
PROCESSED
IT
IS
ALSO
SCALABLE
AND
FAULT
TOLERANT
TO
PROVIDE
COMPETITIVE
PERFORMANCES
STORM
IS
EFFICIENT
THAT
A
BENCHMARK
CLOCKED
IT
AT
OVER
A
MILLION
TUPLES
PROCESSED
PER
SECOND
PER
NODE
THEREFORE
IT
HAS
MANY
APPLICATIONS
SUCH
AS
REAL
TIME
ANALYTICS
INTER
ACTIVE
OPERATION
SYSTEM
ON
LINE
MACHINE
LEARNING
CONTINUOUS
COMPUTATION
DISTRIBUTED
RPC
AND
ETL
A
STORM
CLUSTER
IS
OSTENSIBLY
SIMILAR
TO
A
HADOOP
CLUSTER
WHEREAS
ON
STORM
USERS
RUN
DIFFERENT
TOPOLOGIES
FOR
DIFFERENT
STORM
TASKS
HOWEVER
HADOOP
PLATFORM
IMPLEMENTS
MAP
REDUCE
JOBS
FOR
CORRESPONDING
APPLICATIONS
THERE
ARE
A
NUMBER
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
FIG
A
STORM
TOPOLOGY
EXAMPLE
FIG
A
STORM
CLUSTER
OF
DIFFERENCES
BETWEEN
MAP
REDUCE
JOBS
AND
TOPOLOGIES
THE
KEY
ONE
IS
THAT
A
MAP
REDUCE
JOB
EVENTUALLY
FINISHES
WHEREAS
A
TOPOLOGY
PROCESSES
MESSAGES
ALL
THE
TIME
OR
UNTIL
USERS
TERMINATE
IT
TO
IMPLEMENT
REAL
TIME
COMPUTATION
ON
STORM
USERS
NEED
TO
CREATE
DIFFERENT
TOPOLOGIES
A
TOPOLOGY
ILLUSTRATED
IN
FIG
IS
A
GRAPH
OF
COMPUTATION
AND
CAN
BE
CREATED
AND
SUBMITTED
IN
ANY
PROGRAMMING
LANGUAGE
THERE
ARE
TWO
KINDS
OF
NODE
IN
TOPOLOGIES
NAMELY
SPOUTS
AND
BOLTS
A
SPOUT
IS
ONE
OF
THE
STARTING
POINTS
IN
THE
GRAPH
WHICH
DENOTES
SOURCE
OF
STREAMS
A
BOLT
PROCESSES
INPUT
STREAMS
AND
OUTPUTS
NEW
STREAMS
EACH
NODE
IN
A
TOPOLOGY
CONTAINS
PROCESSING
LOGIC
AND
LINKS
BETWEEN
NODES
INDICATE
HOW
DATA
SHOULD
BE
PROCESSED
BETWEEN
NODES
THEREFORE
A
TOPOLOGY
IS
A
GRAPH
REPRESENT
ING
THE
TRANSFORMATIONS
OF
THE
STREAM
AND
EACH
NODE
IN
THE
TOPOLOGY
EXECUTES
IN
PARALLEL
A
STORM
CLUSTER
CONSISTS
OF
TWO
KINDS
OF
WORKING
NODES
AS
ILLUSTRATED
IN
FIG
THEY
ARE
ONLY
ONE
MASTER
NODE
AND
SEVERAL
WORKER
NODES
THE
MASTER
NODE
AND
WORKER
NODES
IMPLEMENT
TWO
KINDS
OF
DAEMONS
NIMBUS
AND
SUPERVISOR
RESPECTIVELY
THE
TWO
DAEMONS
HAVE
SIMILAR
FUNCTIONS
WITH
ACCORDING
JOBTRACKER
AND
TASKTRACKER
IN
MAP
REDUCE
FRAMEWORK
NIMBUS
IS
IN
CHARGE
OF
DISTRIBUTING
CODE
ACROSS
THE
STORM
CLUSTER
SCHEDULING
WORKS
ASSIGNING
TASKS
TO
WORKER
NODES
MONITORING
THE
WHOLE
SYSTEM
IF
THERE
IS
A
FAILURE
IN
THE
CLUSTER
THE
NIMBUS
WILL
DETECT
IT
AND
RE
EXECUTE
THE
CORRESPONDING
TASK
THE
SUPER
VISOR
COMPLIES
WITH
TASKS
ASSIGNED
BY
NIMBUS
AND
STARTS
OR
STOPS
WORKER
PROCESSES
AS
NECESSARY
BASED
ON
THE
INSTRUCTIONS
OF
NIMBUS
THE
WHOLE
COMPUTATIONAL
TOPOLOGY
IS
PARTITIONED
AND
DISTRIBUTED
TO
A
NUMBER
OF
WORKER
PROCESSES
EACH
WORKER
PROCESS
IMPLEMENTS
A
PART
OF
THE
TOPOLOGY
HOW
CAN
NIMBUS
AND
THE
SUPERVISORS
WORK
SWIMMINGLY
AND
COMPLETE
THE
JOB
FAST
ANOTHER
KIND
OF
DAEMON
CALLED
ZOOKEEPER
PLAY
AN
IMPORTANT
ROLE
TO
COORDINATE
THE
SYSTEM
IT
RECORDS
ALL
STATES
OF
THE
NIMBUS
AND
SUPERVISORS
ON
LOCAL
DISK
IS
A
GENERAL
PURPOSE
DISTRIBUTED
SCALABLE
FAULT
TOLERANT
PLUGGABLE
COMPUTING
PLATFORM
FOR
PROCESSING
CONTIN
UOUS
UNBOUNDED
STREAMS
OF
DATA
IT
WAS
INITIALLY
RELEASED
BY
YAHOO
IN
AND
HAS
BECOME
AN
APACHE
INCUBATOR
PROJECT
SINCE
ALLOWS
PROGRAMMERS
TO
EASILY
DEVELOP
APPLICATIONS
AND
POSSESSES
HAS
SEVERAL
COMPETITIVE
PROPERTIES
INCLUDING
ROBUSTNESS
DECENTRALIZATION
SCALABILITY
CLUSTER
MANAGEMENT
AND
EXTENSIBILITY
THE
CORE
PLATFORM
OF
IS
WRITTEN
IN
JAVA
THE
IMPLEMENTATION
OF
A
JOB
IS
DESIGNED
TO
BE
MODULAR
AND
PLUGGABLE
FOR
EASILY
AND
DYNAMICALLY
PROCESSING
LARGE
SCALE
STREAM
DATA
ALSO
EMPLOYS
APACHE
ZOOKEEPER
TO
MANAGE
ITS
CLUSTER
LIKE
STORM
DOES
HAS
BEEN
PUT
TO
USE
IN
PRODUCTION
SYSTEMS
AT
YAHOO
FOR
PROCESSING
THOUSANDS
OF
SEARCH
QUERIES
AND
GOOD
PERFORMANCES
SHOW
UP
IN
OTHER
APPLICATIONS
SQLSTREAM
SERVER
SQLSTREAM
IS
ANOTHER
BIG
DATA
PLATFORM
THAT
IS
DESIGNED
FOR
PROCESSING
LARGE
SCALE
STREAMING
DATA
IN
REAL
TIME
IT
FO
CUSES
ON
INTELLIGENT
AND
AUTOMATIC
OPERATIONS
OF
STREAMING
BIG
DATA
SQLSTREAM
IS
APPROPRIATE
TO
DISCOVERY
PATTERNS
FROM
LARGE
AMOUNTS
OF
UNSTRUCTURED
LOG
FILE
SENSOR
NETWORK
AND
OTHER
MACHINE
GENERATED
DATA
THE
NEW
RELEASE
SQLSTREAM
SER
VER
HAS
GOOD
PERFORMANCES
IN
REAL
TIME
DATA
COLLECTION
TRANSFORMATION
AND
SHARING
WHICH
IS
IN
FAVOR
OF
REAL
TIME
BIG
DATA
MANAGEMENT
AND
ANALYTICS
THE
STANDARD
SQL
LANGUAGE
ARE
STILL
ADOPTED
IN
THE
UNDERLYING
OPERATIONS
SQLSTREAM
WORKS
VERY
FAST
AS
IT
USES
IN
MEMORY
PROCESSING
ALSO
CALLED
NODATABASE
TECHNOLOGY
THE
DATA
WILL
NOT
BE
STORED
IN
THE
DISKS
INSTEAD
OF
THE
ARRIVING
DATA
ARE
REGARDED
AS
STREAMS
AND
PROCESSED
IN
MEMORY
USING
STREAMING
SQL
QUE
RIES
STREAMING
SQL
IS
DEVELOPED
FROM
STRAND
SQL
BY
TAKING
ADVANTAGE
OF
MULTI
CORE
COMPUTING
AND
ACHIEVES
MASSIVELY
PAR
ALLEL
STREAMING
DATA
PROCESSING
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
FIG
BIG
DATA
PLATFORMS
SPLUNK
SPLUNK
IS
A
REAL
TIME
AND
INTELLIGENT
BIG
DATA
PLATFORM
FOR
EXPLOITING
INFORMATIONS
FROM
MACHINE
GENERATED
BIG
DATA
IT
HAS
BEEN
USED
IN
MANY
FAMOUS
COMPANIES
SUCH
AS
AMAZEN
HEROKU
AND
SENTHUB
SPLUNK
COMBINES
THE
UP
TO
THE
MOMENT
CLOUD
TECHNOLOGIES
AND
BIG
DATA
TO
HELP
USERS
TO
SEARCH
MONITOR
AND
ANALYZE
THEIR
MACHINE
GENERATED
DATA
VIA
A
WEB
INTER
FACE
IT
EXHIBITS
THE
RESULTS
IN
AN
INTUITIVE
WAY
SUCH
AS
GRAPHS
REPORTS
AND
ALERTS
SPLUNK
IS
DESIGNED
TO
PROVIDE
METRICS
FOR
MANY
APPLICATION
DIAGNOSE
PROBLEMS
FOR
SYSTEM
AND
IT
INFRASTRUCTURES
AND
ALSO
PROVIDE
INTELLIGENCE
FOR
BUSINESS
OPERATIONS
SPLUNK
STORM
IS
A
CLOUD
VERSION
OF
SPLUNK
BIG
DATA
ANALYTICS
SPLUNK
IS
VERY
DIFFERENT
FROM
THE
OTHER
STREAM
PROCESSING
TOOLS
ITS
PECULIARITIES
INCLUDE
INDEXING
STRUCTURED
OR
UNSTRUC
TURED
MACHINE
GENERATED
DATA
REAL
TIME
SEARCHING
REPORTING
ANALYTICAL
RESULTS
AND
DASHBOARDS
THEREFORE
LOG
FILES
ARE
A
GREAT
APPLICATION
FOR
IT
APACHE
KAFKA
KAFKA
IS
A
HIGH
THROUGHPUT
MESSAGING
SYSTEM
THAT
WAS
INCIPIENTLY
DEVELOPED
AT
LINKEDIN
IT
WORKS
AS
A
TOOL
TO
MAN
AGE
STREAMING
AND
OPERATIONAL
DATA
VIA
IN
MEMORY
ANALYTICAL
TECHNIQUES
FOR
OBTAINING
REAL
TIME
DECISION
MAKING
AS
A
DIS
TRIBUTED
PUBLISH
SUBSCRIBE
MESSAGING
SYSTEM
KAFKA
HAS
FOUR
MAIN
CHARACTERISTICS
PERSISTENT
MESSAGING
WITH
O
DISK
STRUCTURES
HIGH
THROUGHPUT
SUPPORT
FOR
DISTRIBUTED
PROCESSING
AND
SUPPORT
FOR
PARALLEL
DATA
LOAD
INTO
HADOOP
IT
ALREADY
HAS
WIDE
USAGES
IN
A
NUMBER
OF
DIFFERENT
COMPANIES
AS
DATA
PIPELINES
AND
MESSAGING
TOOLS
IN
RECENT
YEARS
ACTIVITY
AND
OPERATIONAL
DATA
PLAY
AN
IMPORTANT
ROLE
TO
EXTRACT
FEATURES
OF
WEBSITES
ACTIVITY
DATA
IS
THE
RECORD
OF
VARIOUS
HUMAN
ACTIONS
ON
LINE
SUCH
AS
WEBPAGE
CONTENT
COPY
CONTENT
CLICKLIST
AND
SEARCHING
KEY
WORDS
IT
IS
VALU
ABLE
TO
LOG
THESE
ACTIVITIES
OUT
INTO
CANNED
FILE
AND
AGGREGATE
THEM
FOR
SUBSEQUENT
ANALYSIS
OPERATIONAL
DATA
IS
DATA
TO
DE
SCRIBE
THE
PERFORMANCE
OF
SERVERS
FOR
INSTANCES
CPU
AND
IO
USAGE
REQUEST
TIMES
SERVICE
LOGS
ETC
THE
KNOWLEDGE
DISCOVERY
OF
OPERATIONAL
DATA
IS
HELPFUL
FOR
REAL
TIME
OPERATION
MANAGEMENT
KAFKA
COMBINES
OFF
LINE
AND
ON
LINE
PROCESSING
TO
PROVIDE
REAL
TIME
COMPUTATION
AND
PRODUCE
AD
HOC
SOLUTION
FOR
THESE
TWO
KINDS
OF
DATA
SAP
HANA
SAP
HANA
IS
AN
IN
MEMORY
ANALYTICS
PLATFORM
THAT
AIMS
TO
PROVIDE
REAL
TIME
ANALYSIS
ON
BUSINESS
PROCESSES
PREDIC
TIVE
ANALYSIS
AND
SENTIMENT
DATA
PROCESSING
SAP
HANA
DATABASE
IS
THE
CORE
PART
OF
THE
REAL
TIME
PLATFORM
IT
IS
A
LITTLE
BIT
DIFFERENT
FROM
OTHER
DATABASE
SYSTEMS
OPERATIONAL
REPORTING
DATA
WAREHOUSING
AND
PREDICTIVE
AND
TEXT
ANALYSIS
ON
BIG
DATA
ARE
THREE
HANA
SPECIFIC
REAL
TIME
ANALYTICS
SAP
HANA
WORKS
WITH
VERY
LARGE
SCOPE
OF
APPLICATIONS
WHETHER
OR
NOT
THEY
ARE
FROM
SAP
SUCH
AS
DEMOGRAPHICS
AND
SOCIAL
MEDIA
INTERACTIONS
BIG
DATA
TOOLS
BASED
ON
INTERACTIVE
ANALYSIS
IN
RECENT
YEARS
OPEN
SOURCE
BIG
DATA
SYSTEMS
HAVE
EMERGED
TO
ADDRESS
THE
NEED
NOT
ONLY
FOR
SCALABLE
BATCH
PROCESSING
AND
STREAM
PROCESSING
BUT
ALSO
INTERACTIVE
ANALYSIS
PROCESSING
THE
INTERACTIVE
ANALYSIS
PRESENTS
THE
DATA
IN
AN
INTERACTIVE
ENVIRONMENT
ALLOWING
USERS
TO
UNDERTAKE
THEIR
OWN
ANALYSIS
OF
INFORMATION
USER
ARE
DIRECTLY
CONNECTED
TO
THE
COMPUTER
AND
HENCE
CAN
INTERACT
WITH
IT
IN
REAL
TIME
THE
DATA
CAN
BE
REVIEWED
COMPARED
AND
ANALYZED
IN
TABULAR
OR
GRAPHIC
FORMAT
OR
BOTH
AT
THE
SAME
TIME
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
FIG
LAMBDA
ARCHITECTURE
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
GOOGLE
DREMEL
IN
GOOGLE
PROPOSED
AN
INTERACTIVE
ANALYSIS
SYSTEM
NAMED
DREMEL
WHICH
IS
SCALABLE
FOR
PROCESSING
NESTED
DATA
DREMEL
HAS
A
VERY
DIFFERENT
ARCHITECTURE
COMPARED
WITH
WELL
KNOWN
APACHE
HADOOP
AND
ACTS
AS
A
SUCCESSFUL
COMPLE
MENT
OF
MAP
REDUCE
BASED
COMPUTATIONS
IT
HAS
CAPABILITY
TO
RUN
AGGREGATION
QUERIES
OVER
TRILLION
ROW
TABLES
IN
SECONDS
BY
MEANS
OF
COMBINING
MULTI
LEVEL
EXECUTION
TREES
AND
COLUMNAR
DATA
LAYOUT
THE
SYSTEM
SCALES
TO
THOUSANDS
OF
CPUS
AND
PET
ABYTES
OF
DATA
AND
HAS
THOUSANDS
OF
USERS
AT
GOOGLE
APACHE
DRILL
APACHE
DRILL
IS
ANOTHER
DISTRIBUTED
SYSTEM
FOR
INTERACTIVE
ANALYSIS
OF
BIG
DATA
IT
IS
SIMILAR
TO
GOOGLE
DREMEL
FOR
DRILL
THERE
ARE
MORE
FLEXIBILITY
TO
SUPPORT
A
VARIOUS
OF
DIFFERENT
QUERY
LANGUAGES
DATA
FORMATS
AND
DATA
SOURCES
LIKE
DREMEL
DRILL
IS
ALSO
SPECIFICALLY
DESIGNED
TO
EFFICIENTLY
EXPLOIT
NESTED
DATA
IT
HAS
AN
OBJECTIVE
TO
SCALE
UP
ON
SERVERS
OR
MORE
AND
REACHES
THE
CAPABILITY
TO
PROCESS
PETABYES
OF
DATA
AND
TRILLIONS
OF
RECORDS
IN
SECONDS
DRILL
AND
DREMEL
ARE
EXPERTS
IN
LARGE
SCALE
AD
HOC
QUERYING
OF
DATA
THEY
USE
HDFS
FOR
STORAGE
AND
THE
MAP
REDUCE
TO
PERFORM
BATCH
ANALYSIS
BY
SEARCHING
DATA
EITHER
STORED
IN
COLUMNAR
FORM
OR
WITHIN
A
DISTRIBUTED
FILE
SYSTEM
IT
IS
POSSIBLE
TO
SCAN
OVER
PETABYTES
OF
DATA
IN
SECONDS
TO
RESPONSE
AD
HOC
QUERIES
DRILL
CAN
BE
VIEWED
AS
THE
OPEN
SOURCE
VERSION
OF
DRE
MEL
GOOGLE
ALSO
PROVIDES
DREMEL
AS
A
SERVICE
WITH
ITS
BIGQUERY
OFFERING
OTHER
COMPANIES
CAN
DESIGN
THEIR
OWN
BIG
DATA
TOOLS
ACCORDING
TO
THEIR
SPECIAL
USAGES
EVERY
BIG
DATA
PLATFORM
HAS
ITS
FOCUS
SOME
OF
THEM
ARE
DESIGNED
FOR
BATCH
PROCESSING
SOME
ARE
GOOD
AT
REAL
TIME
ANA
LYTIC
EACH
BIG
DATA
PLATFORM
ALSO
HAS
SPECIFIC
FUNCTIONALITY
FOR
EXAMPLE
STATISTICAL
ANALYSIS
MACHINE
LEARNING
AND
DATA
STREAM
PROCESSING
WE
USE
FIG
TO
ILLUSTRATE
THEIR
DISADVANTAGES
AND
ADVANTAGES
IN
WHICH
THE
CAPABILITY
OF
REAL
TIME
PRO
CESSING
INCREASE
RESPONSE
TIME
DECREASE
FROM
LEFT
TO
RIGHT
AND
HANDLING
CAPABILITY
OF
BATCH
PROCESSING
INCREASE
FROM
BOTTOM
TO
UP
PRINCIPLES
FOR
DESIGNING
BIG
DATA
SYSTEMS
BIG
DATA
ANALYTICS
ARE
DOOMED
TO
BE
MORE
COMPLICATED
THAN
TRADITIONAL
DATA
ANALYSIS
SYSTEMS
HOW
DO
WE
IMPLEMENT
COMPLEX
DATA
INTENSIVE
TASKS
WITH
SATISFACTORY
EFFICIENCY
ESPECIALLY
IN
REAL
TIME
THE
ANSWER
IS
THE
CAPABILITY
TO
MASSIVELY
PARALLELIZE
THE
ANALYTICAL
ALGORITHMS
IN
SUCH
A
WAY
THAT
ALL
THE
PROCESSING
HAPPEN
ENTIRELY
IN
MEMORY
AND
CAN
LINEARLY
SCALE
UP
AND
DOWN
ON
DEMAND
WHEN
TRYING
TO
EXPLOIT
BIG
DATA
WE
NOT
ONLY
NEED
TO
DEVELOP
NEW
TECHNOLOGIES
BUT
ALSO
NEW
THINKING
WAYS
IN
DESIGNING
BIG
DATA
ANALYTICS
SYSTEMS
WE
SUMMARIZE
SEVEN
NECESSARY
PRINCIPLES
TO
GUIDE
THE
DEVELOPMENT
OF
THIS
KIND
OF
BURNING
ISSUES
BIG
DATA
ANALYTICS
IN
A
HIGHLY
DISTRIBUTED
SYSTEM
CANNOT
BE
ACHIEVABLE
WITHOUT
THE
FOLLOWING
PRINCIPLES
PRINCIPLE
GOOD
ARCHITECTURES
AND
FRAMEWORKS
ARE
NECESSARY
AND
ON
THE
TOP
PRIORITY
BIG
DATA
CANNOT
BE
SOLVED
EFFECTIVELY
AND
APPROVINGLY
IF
THERE
ARE
NO
GOOD
AND
PROPER
ARCHITECTURE
FOR
THE
WHOLE
BIG
DATA
SYSTEMS
IN
TRADITIONAL
INFORMATION
ARCHITECTURE
DATA
SOURCES
THAT
USE
INTEGRATION
TECHNIQUES
TO
TRANSFER
DATA
INTO
A
DBMS
DATA
WAREHOUSE
OR
OPERATIONAL
DATA
STORE
AND
THEN
OFFER
A
WIDE
VARIETY
OF
ANALYTICAL
TECHNIQUES
TO
REVEAL
THE
DATA
THEN
SOME
ORGANIZATIONS
HAVE
APPLIED
OVERSIGHT
AND
STANDARDIZATION
ACROSS
PROJECTS
AND
PERHAPS
HAVE
MATURED
THE
INFORMATION
ARCHITECTURE
CAPABILITY
THROUGH
MANAGING
IT
HOWEVER
BIG
DATA
SYSTEMS
NEED
HIGH
LEVEL
ARCHITECTURE
THAN
TRADITIONAL
ONE
MANY
DISTRIBUTED
AND
PARALLEL
PROCESSING
ARCHITECTURES
HAVE
ALREADY
BEEN
PROPOSED
TO
ADDRESS
BIG
DATA
PROBLEMS
THERE
ARE
DISTINCT
TECHNOLOGY
STRATEGIES
FOR
REAL
TIME
AND
BATCH
PROCESSING
REQUIREMENTS
FOR
REAL
TIME
KEY
VALUE
DATA
STORES
SUCH
AS
NOSQL
ALLOW
FOR
HIGH
PERFORMANCE
INDEX
BASED
RETRIEVAL
FOR
BATCH
PROCESSING
MAP
REDUCE
CAN
BE
APPLIED
ACCORDING
TO
A
SPECIFIC
DATA
DISCOVERY
STRATEGY
FOR
DIFFERENT
DATA
INTENSIVE
APPLICATIONS
WE
SHOULD
DESIGN
DIFFERENT
AND
APPROPRIATE
ARCHITECTURES
IN
THE
BEGINNING
OF
EVERYTHING
FOR
EXAMPLE
THE
LAMBDA
ARCHITECTURE
SOLVES
THE
PROBLEM
OF
COMPUTING
ARBITRARY
FUNCTIONS
ON
ARBITRARY
DATA
IN
REAL
TIME
BY
DECOMPOSING
THE
PROBLEM
INTO
THREE
LAYERS
THE
BATCH
LAYER
THE
SERVING
LAYER
AND
THE
SPEED
LAYER
FIG
BUT
THIS
ARCHITECTURE
CANNOT
FIT
ALL
THE
BIG
DATA
APPLICATIONS
PRINCIPLE
SUPPORT
A
VARIETY
OF
ANALYTICAL
METHODS
BIG
DATA
APPLICATIONS
OFTEN
PRODUCE
COMPLEX
TASKS
THAT
MAKE
IT
IMPOSSIBLE
TO
BE
RESOLVED
BY
USING
ONE
OR
A
FEW
OF
DISCIPLINES
AND
ANALYTICAL
METHODS
THE
MODERN
DATA
SCIENCE
CONSTANTLY
INVOLVES
A
WIDE
RANGE
OF
SUBJECTS
AND
APPROACHES
THEY
RANGE
FROM
DATA
MINING
STATISTICAL
ANALYSIS
MACHINE
LEARNING
DISTRIBUTED
PROGRAMMING
AND
VISUALIZATION
TO
REAL
TIME
ANALYSIS
IN
MEMORY
ANALYSIS
AND
HUMAN
COMPUTER
INTERACTION
THESE
METHODS
ARE
OFTEN
SYNCHRONOUSLY
EMPLOYED
IN
DIFFERENT
BIG
DATA
PLATFORM
PRINCIPLE
NO
SIZE
FITS
ALL
WHEN
IT
COMES
TO
BIG
DATA
ANALYTICS
THERE
IS
NO
ONE
SIZE
WHICH
CAN
FIT
ALL
SOLUTIONS
ACCORDING
TO
IBM
LATIN
AMERICA
BIG
DATA
SALES
LEADER
LEONARDO
GONZÁLEZ
EVERY
BIG
DATA
TOOL
HAS
ITS
OWN
LIMITATIONS
BUT
IF
USERS
USE
THE
PROPER
TOOLS
FOR
DIFFERENT
TASKS
THEY
ALSO
CAN
PARTIALLY
OBTAIN
SIGNIFICANT
BENEFITS
BY
USING
THOSE
TOOLS
AS
THE
INFORMATION
KEEPS
INCREASING
AT
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
EXPONENTIAL
RATE
TODAY
BIG
DATA
PROBLEM
WILL
SURELY
BECOME
THE
SMALL
DATA
SET
PROBLEM
IN
THE
FUTURE
THEREFORE
HOW
CAN
WE
DEAL
WITH
THE
BIG
BIG
DATA
PROBLEMS
UNTIL
NOW
WE
CANNOT
ANSWER
THIS
QUESTION
BUT
THIS
QUESTION
WILL
GIVE
US
SOME
DIRECTIONS
WHEN
WE
TRY
TO
DESIGN
DATA
INTENSIVE
SYSTEMS
ESPECIALLY
FOR
REAL
TIME
ANALYTICS
PRINCIPLE
BRING
THE
ANALYSIS
TO
DATA
AS
THE
SIZE
OF
BIG
DATA
SET
IS
EXTREMELY
LARGE
IT
IS
UNADVISABLE
AND
INFEASIBLE
TO
COLLECT
AND
MOVE
DATA
TO
ONLY
ONE
OR
SEVERAL
CENTERS
FOR
ANALYSIS
DATA
DRIVEN
ANALYSIS
NEEDS
CONTRARY
ANALYSIS
DIRECTION
WHICH
NEEDS
TO
BRING
THE
ANALYSIS
TASKS
TO
DATA
SITES
IN
DATA
INTENSIVE
COMPUTATION
PROBLEMS
DATA
IS
THE
DRIVER
NOT
ANALYTICAL
HUMAN
OR
MACHINES
TOGETHER
WITH
SYSTEMATIC
THINKING
THIS
PRINCIPLE
IS
ALSO
RESONANT
WITH
THE
FOLLOWING
ONES
PRINCIPLE
PROCESSING
MUST
BE
DISTRIBUTABLE
FOR
IN
MEMORY
COMPUTATION
IF
THE
FOURTH
PRINCIPLE
HOLDS
AS
EXPECTED
WE
NATURALLY
REQUIRE
THE
PROCESSING
MUST
BE
DISTRIBUTABLE
SINCE
THE
ANALYSIS
WHICH
WILL
BE
CARRIED
OUT
ON
DIFFERENT
DATA
SITES
MUST
BE
DISTRIBUTED
TO
DATA
LOCATIONS
IN
MEMORY
ANALYTIC
WHICH
PROBES
DATA
STORED
IN
RAM
RATHER
THAN
ON
DISK
AS
IS
TRADITIONALLY
THE
CASE
IS
BECOMING
POPULAR
BECAUSE
IT
SPEEDS
UP
THE
ANALYSIS
PROCESS
EVEN
AS
DATA
VOLUMES
EXPLODE
IN
MEMORY
ANALYTIC
IS
ALSO
HIGHLY
NECESSARY
FOR
REAL
TIME
ANALYTIC
WITH
THE
DEVELOPMENT
OF
HARD
DISK
DRIVES
THERE
ARE
ALMOST
NO
DIFFERENCES
BETWEEN
MEMORY
AND
HARD
DISK
IN
I
O
SPEED
THINKING
ABOUT
THAT
WE
BELIEVE
THAT
APPLICATIONS
BASED
ON
REAL
TIME
ANALYTIC
WILL
HIGHLY
BENEFIT
FROM
IN
MEMORY
ANALYTIC
OR
IN
MEMORY
LIKE
ANALYTIC
PRINCIPLE
DATA
STORAGE
MUST
BE
DISTRIBUTABLE
FOR
IN
MEMORY
STORAGE
AS
A
GREAT
PORTION
OF
BIG
DATA
PROBLEMS
INVOLVE
WITH
THE
DATA
AND
THE
INFORMATION
IS
GENERATED
AT
DIFFERENT
ADDRESSES
AND
DIFFERENT
TIME
THIS
PRINCIPLE
IS
ALREADY
MET
BUT
FOR
THE
CASE
THAT
DATA
GENERATED
OR
ACCUMULATED
AT
DATA
CENTER
THE
DATA
ALSO
NEED
TO
BE
PARTITIONED
INTO
A
NUMBER
OF
PARTS
FOR
IN
MEMORY
ANALYTIC
THE
POPULAR
AND
POTENTIAL
TECHNOLOGY
CLOUD
COMPUTING
MAKE
THE
DATA
STORAGE
IN
CLOUD
THIS
IS
VERY
APPULSIVE
IN
THE
BIG
DATA
PROBLEM
SOLVING
ONCE
THE
DATA
AND
SERVICES
ARE
STORED
IN
THE
CLOUD
USERS
JUST
LIKE
CARRY
OUT
THEIR
BIG
DATA
CALCULATIONS
ON
AN
UNIMAGINATIVE
AND
POWERFUL
SUPERCOMPUTER
THE
REAL
INFRASTRUCTURES
ARE
HIDDEN
IN
THE
CLOUD
THEREFORE
SOME
DATA
DRIVEN
APPLICATIONS
CAN
BE
REALIZED
PRINCIPLE
COORDINATION
IS
NEEDED
BETWEEN
PROCESSING
AND
DATA
UNITS
TO
IMPROVE
SCALABILITY
AS
WELL
AS
EFFICIENCY
AND
FAULT
TOLERANCE
OF
BIG
DATA
SYSTEMS
COORDINATION
BETWEEN
DIFFERENT
PROCESSING
UNITS
AND
DATA
UNITS
ON
A
CLUSTER
IS
HIGHLY
NECESSARY
AND
ESSENTIAL
THAT
IS
WHY
BOTH
STORM
AND
EMPLOY
INDEPENDENT
AND
SPECIALIZED
CLUSTER
MANAGEMENT
FRAMEWORKS
ZOOKEEPER
TO
CONTROL
THE
WHOLE
DATA
PROCESS
THIS
PRINCIPLE
GUARANTEES
THE
LOW
LATENCY
OF
RESPONSE
WHICH
IS
PARTICULARLY
REQUIRED
IN
REAL
TIME
ANALYTICS
UNDERLYING
TECHNOLOGIES
AND
FUTURE
RESEARCHES
THE
ADVANCED
TECHNIQUES
AND
TECHNOLOGIES
FOR
DEVELOPING
BIG
DATA
SCIENCE
IS
WITH
THE
PURPOSE
OF
ADVANCING
AND
INVENT
ING
THE
MORE
SOPHISTICATED
AND
SCIENTIFIC
METHODS
OF
MANAGING
ANALYZING
VISUALIZING
AND
EXPLOITING
INFORMATIVE
KNOWLEDGE
FROM
LARGE
DIVERSE
DISTRIBUTED
AND
HETEROGENEOUS
DATA
SETS
THE
ULTIMATE
AIMS
ARE
TO
PROMOTE
THE
DEVELOPMENT
AND
INNO
VATION
OF
BIG
DATA
SCIENCES
FINALLY
TO
BENEFIT
ECONOMIC
AND
SOCIAL
EVOLUTIONS
IN
A
LEVEL
THAT
IS
IMPOSSIBLE
BEFORE
BIG
DATA
TECHNIQUES
AND
TECHNOLOGIES
SHOULD
STIMULATE
THE
DEVELOPMENT
OF
NEW
DATA
ANALYTIC
TOOLS
AND
ALGORITHMS
AND
TO
FACILITATE
SCALABLE
ACCESSIBLE
AND
SUSTAINABLE
DATA
INFRASTRUCTURE
SO
AS
TO
INCREASE
UNDERSTANDING
OF
HUMAN
AND
SOCIAL
PROCESSES
AND
INTERACTIONS
AS
WE
DISCUSSED
THE
NOVEL
BIG
DATA
TOOLS
TECHNIQUES
AND
INFRASTRUCTURES
WILL
ENABLE
BREAKTHROUGH
DISCOV
ERIES
AND
INNOVATION
IN
SCIENCE
ENGINEERING
MEDICINE
COMMERCE
EDUCATION
AND
NATIONAL
SECURITY
LAYING
THE
FOUNDATIONS
FOR
COMPETITIVENESS
FOR
MANY
DECADES
TO
COME
A
PARADIGM
SHIFT
IN
SCIENTIFIC
INVESTIGATION
IS
ON
THE
WAY
AS
NOVEL
MATHEMATICAL
AND
STATISTICAL
TECHNIQUES
NEW
DATA
MIN
ING
TOOLS
ADVANCED
MACHINE
LEARNING
ALGORITHMS
AS
WELL
AS
OTHER
DATA
ANALYTICAL
DISCIPLINES
ARE
WELL
ESTABLISHED
IN
THE
FU
TURE
CONSEQUENTLY
A
NUMBER
OF
AGENCIES
ARE
DEVELOPING
BIG
DATA
STRATEGIES
TO
FACILITATE
THEIR
MISSIONS
THEY
FOCUS
ON
COMMON
INTERESTS
IN
BIG
DATA
RESEARCHES
ACROSS
THE
US
NATIONAL
INSTITUTES
OF
HEALTH
AND
THE
US
NATIONAL
SCIENCE
FOUNDATION
IN
THE
FOLLOWING
SUBSECTIONS
WE
WILL
DISCUSS
SEVERAL
ONGOING
OR
UNDERLYING
TECHNIQUES
AND
TECHNOLOGIES
TO
HARNESS
BIG
DATA
INCLUDING
GRANULAR
COMPUTING
CLOUD
COMPUTING
BIOLOGICAL
COMPUTING
SYSTEMS
AND
QUANTUM
COMPUTING
GRANULAR
COMPUTING
WHEN
WE
TALK
ABOUT
BIG
DATA
THE
FIRST
PROPERTY
OF
IT
IS
ITS
SIZE
AS
GRANULAR
COMPUTING
GRC
IS
A
GENERAL
COMPUTATION
THEORY
FOR
EFFECTIVELY
USING
GRANULES
SUCH
AS
CLASSES
CLUSTERS
SUBSETS
GROUPS
AND
INTERVALS
TO
BUILD
AN
EFFICIENT
COMPUTA
TIONAL
MODEL
FOR
COMPLEX
APPLICATIONS
WITH
HUGE
AMOUNTS
OF
DATA
INFORMATION
AND
KNOWLEDGE
THEREFORE
IT
IS
VERY
NATURAL
TO
EMPLOY
GRANULAR
COMPUTING
TECHNIQUES
TO
EXPLORE
BIG
DATA
INTUITIVELY
GRANULAR
COMPUTING
CAN
REDUCE
THE
DATA
SIZE
INTO
DIFFERENT
LEVEL
OF
GRANULARITY
UNDER
CERTAIN
CIRCUMSTANCES
SOME
BIG
DATA
PROBLEMS
CAN
BE
READILY
SOLVED
IN
SUCH
WAY
GRC
IS
A
BURGEONING
CONCEPTUAL
AND
COMPUTING
PARADIGM
OF
KNOWLEDGE
DISCOVERY
IN
SOME
DEGREE
IT
HAS
BEEN
MOTIVATED
BY
THE
URGENT
NEED
FOR
EFFICIENT
PROCESSING
OF
BIG
DATA
ALTHOUGH
THE
CONCEPT
OF
BIG
DATA
HAVE
NOT
BE
PROPOSED
WHEN
GRC
IS
DEVELOPING
IN
FACT
GRC
LEADS
A
SIGNIFICANT
TRANSFORM
FROM
THE
CURRENT
MACHINE
CENTRIC
TO
HUMAN
CENTRIC
APPROACH
TO
INFOR
MATION
AND
KNOWLEDGE
THEORETICAL
FOUNDATIONS
OF
GRANULAR
COMPUTING
ARE
EXCEPTIONALLY
SOUND
AND
INVOLVE
SET
THEORY
SUCH
AS
INTERVAL
BOX
AND
BALL
FUZZY
SETS
ROUGH
SETS
AND
RANDOM
SETS
LINKED
TOGETHER
IN
A
HIGHLY
COMPREHENSIVE
TREATMENT
OF
THIS
PARADIGM
IN
PIECEWISE
INTERVAL
APPROXIMATION
AND
GRANULAR
BOX
REGRESSION
ARE
DISCUSSED
TO
CONDUCT
DATA
ANALYSIS
SU
AND
HIS
CO
AUTHORS
INTRODUCED
A
NEW
STRUCTURE
OF
RADIAL
BASIS
FUNCTION
NETWORKS
RBFNS
THAT
CAN
SUC
CESSFULLY
MODEL
SYMBOLIC
INTERVAL
VALUED
DATA
IF
BIG
DATA
CAN
BE
TRANSFORM
INTO
RESPECTIVE
SYMBOLIC
DATA
SOME
ALGORITHMS
IN
NEURAL
NETWORKS
AND
MACHINE
LEARNING
COME
INTO
PLAY
AS
WELL
KNOWN
GRC
IS
CALLED
BY
A
JOINT
NAME
FOR
A
VARIETY
OF
ALGORITHMS
RATHER
THAN
ONE
EXACT
ALGORITHM
THAT
IS
CALLED
GRANULAR
COMPUTING
GRC
IS
CONCERNED
WITH
CONSTRUCTING
AND
PROCESSING
CARRIED
OUT
AT
DIFFERENT
LEVEL
OF
INFORMATION
GRANULES
THE
INFORMATION
REPRESENTED
BY
DIFFERENT
LEVEL
OF
GRANULES
SHOW
UP
DISTINCT
KNOWLEDGE
FEATURES
AND
PATTERNS
WHERE
THE
IRRELEVANT
FEATURES
ARE
HIDDEN
AND
VALUABLE
ONES
ARE
HIGHLIGHTED
TAKING
SATELLITE
IMAGES
AS
A
EXAMPLE
THE
INTERESTS
OF
RE
SEARCHES
WITHIN
THE
LOW
RESOLUTION
IMAGES
MAY
ARE
THE
CLOUD
PATTERNS
THAT
PRESENT
TYPHOONS
OR
OTHER
WEATHER
PHENOMENA
HOWEVER
IN
HIGH
RESOLUTION
SATELLITE
IMAGES
THESE
LARGE
SCALE
ATMOSPHERIC
PHENOMENA
ARE
IGNORED
AND
SMALL
TARGETS
AP
PEAR
SUCH
AS
A
MAP
OF
A
CITY
OR
A
SCENE
OF
A
STREET
THE
SAME
IS
GENERALLY
TRUE
FOR
ALL
DATA
IN
DIFFERENT
GRANULARITIES
OF
INFOR
MATION
DIFFERENT
FEATURES
AND
PATTERNS
EMERGE
HENCE
BASED
ON
THIS
FACT
GRC
IS
SIGNIFICANTLY
USEFUL
TO
DESIGN
MORE
EFFECTIVE
MACHINE
LEARNING
ALGORITHMS
AND
DATA
MINING
APPROACHES
THERE
ARE
A
FEW
OF
TYPES
OF
GRANULARITY
THAT
ARE
OFTEN
ADOPTED
IN
DATA
MINING
AND
MACHINE
LEARNING
INCLUDING
VARIABLE
GRANULATION
VARIABLE
TRANSFORMATION
VARIABLE
AGGREGATION
SYSTEM
GRANULATION
AGGREGATION
CONCEPT
GRANULATION
COMPO
NENT
ANALYSIS
EQUIVALENCE
CLASS
GRANULATION
AND
COMPONENT
GRANULATION
AS
YOU
KNOWN
THE
INFORMATION
HIDDEN
IN
BIG
DATA
MAYBE
WILL
LOSE
PARTIALLY
IF
THE
DATA
SIZE
IS
REDUCED
TO
SMALL
ONES
NOT
ALL
THE
BIG
DATA
APPLICATIONS
CAN
USE
THE
GRC
TECHNIQUES
AS
THE
PROCESS
IN
FIG
IT
DEPENDS
THE
CONFIDENCE
AND
ACCURACY
OF
RESULTS
THE
SYSTEM
REQUIRED
FOR
EXAMPLE
FINANCIAL
DATA
IN
BANKS
AND
GOVERNMENT
ARE
VERY
SENSITIVE
AND
REQUIRE
HIGH
ACCU
RACY
IN
SOME
SPECIAL
ANALYSIS
AND
THE
SENSOR
DATA
GENERATED
BY
USERS
IN
ITS
NEED
TO
BE
PROCESSED
AND
RESPONDED
ONE
BY
ONE
IN
THESE
CASES
GRC
DOSE
NOT
WORK
WELL
AND
WE
NEED
OTHER
SOLUTIONS
CLOUD
COMPUTING
THE
DEVELOPMENT
OF
VIRTUALIZATION
TECHNOLOGIES
HAVE
MADE
SUPERCOMPUTING
MORE
ACCESSIBLE
AND
AFFORDABLE
POWERFUL
COMPUTING
INFRASTRUCTURES
HIDDEN
IN
VIRTUALIZATION
SOFTWARE
MAKE
SYSTEMS
TO
BE
LIKE
A
TRUE
PHYSICAL
COMPUTER
BUT
WITH
THE
FLEXIBLE
SPECIFICATION
OF
DETAILS
SUCH
AS
NUMBER
OF
PROCESSORS
MEMORY
AND
DISK
SIZE
AND
OPERATING
SYSTEM
THE
USE
OF
THESE
VIRTUAL
COMPUTERS
IS
KNOWN
AS
CLOUD
COMPUTING
WHICH
HAS
BEEN
ONE
OF
THE
MOST
ROBUST
BIG
DATA
TECHNIQUES
THE
NAME
OF
CLOUD
COMPUTING
COMES
FROM
THE
USE
OF
A
CLOUD
SHAPED
SYMBOL
AS
AN
ABSTRACTION
FOR
THE
COMPLEX
INFRASTRUCTURE
IT
CONTAINS
IN
SYSTEM
DIAGRAMS
IT
ENTRUSTS
REMOTE
SERVICES
WITH
A
USER
DATA
SOFTWARE
AND
COMPUTATION
THE
COMBINATION
OF
VIRTUAL
MACHINES
AND
LARGE
NUMBERS
OF
AFFORDABLE
PROCESSORS
HAS
MADE
IT
POSSIBLE
FOR
INTERNET
BASED
COMPANIES
TO
INVEST
IN
LARGE
SCALE
COMPUTATIONAL
CLUSTERS
AND
ADVANCED
DATA
STORAGE
SYSTEMS
AS
ILLUSTRATED
IN
FIG
CLOUD
COMPUTING
NOT
ONLY
DELIVERS
APPLICATIONS
AND
SERVICES
OVER
THE
INTERNET
IT
ALSO
HAS
BEEN
EXTENDED
TO
INFRASTRUCTURE
AS
A
SERVICE
FOR
EXAMPLE
AMAZON
AND
PLATFORM
AS
A
SERVICE
SUCH
AS
GOOGLE
APPENGINE
AND
MICROSOFT
AZURE
INFRASTRUCTURE
VENDORS
PROVIDE
HARDWARE
AND
A
SOFTWARE
STACK
INCLUDING
OPERATING
SYSTEM
DATABASE
MIDDLEWARE
AND
PERHAPS
SINGLE
INSTANCE
OF
A
CONVENTIONAL
APPLICATION
THEREFORE
IT
SHOWS
OUT
ILLUSION
OF
INFINITE
RESOURCES
WITHOUT
UP
FRONT
COST
AND
FINE
GRAINED
BILLING
IT
LEADS
TO
THE
UTILITY
COMPUTING
I
E
PAY
AS
YOU
GO
COMPUTING
SURPRISINGLY
THE
CLOUD
COMPUTING
OPTIONS
AVAILABLE
TODAY
ARE
ALREADY
WELL
MATCHED
TO
THE
MAJOR
THEMES
OF
NEED
THOUGH
SOME
OF
US
MIGHT
NOT
SEE
IT
BIG
DATA
FORMS
A
FRAMEWORK
FOR
DISCUSSING
CLOUD
COMPUTING
OPTIONS
DEPENDING
ON
SPECIAL
NEED
USERS
CAN
GO
INTO
THE
MARKETPLACE
AND
BUY
INFRASTRUCTURE
SERVICES
FROM
PROVIDERS
LIKE
GOOGLE
AND
AMAZON
SOFTWARE
AS
A
SER
VICE
SAAS
FROM
A
WHOLE
CREW
OF
COMPANIES
STARTING
AT
SALESFORCE
AND
PROCEEDING
THROUGH
NETSUITE
JOBSCIENCE
AND
ZUORA
A
LIST
THAT
IS
ALMOST
NEVER
ENDING
ANOTHER
BONUS
BROUGHT
BY
CLOUD
ENVIRONMENTS
IS
CLOUD
STORAGE
WHICH
PROVIDES
A
POSSIBLE
TOOL
FOR
STORING
BIG
DATA
CLOUD
STORAGE
HAVE
GOOD
EXTENSIBILITY
AND
SCALABILITY
IN
STORING
INFORMATION
AS
DEMON
STRATED
IN
FIG
CLOUD
COMPUTING
IS
A
HIGHLY
FEASIBLE
TECHNOLOGY
AND
ATTRACT
A
LARGE
NUMBER
OF
RESEARCHERS
TO
DEVELOP
IT
AND
TRY
TO
APPLY
TO
BIG
DATA
PROBLEMS
USUALLY
WE
NEED
TO
COMBINE
THE
DISTRIBUTED
MAPREDUCE
AND
CLOUD
COMPUTING
TO
GET
AN
EFFECTIVE
ANSWER
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
FIG
GRC
CAN
BE
A
OPTION
IN
SOME
DEGREE
FOR
PROVIDING
PETABYTE
SCALE
COMPUTING
CLOUDVIEW
IS
A
FRAMEWORK
FOR
STORAGE
PROCESSING
AND
ANALYSIS
OF
MASSIVE
MACHINE
MAINTENANCE
DATA
IN
A
CLOUD
COMPUTING
ENVIRONMENT
WHICH
IS
FORMULATED
USING
THE
MAP
REDUCE
MODEL
AND
REACHES
REAL
TIME
RESPONSE
IN
THE
AUTHORS
EXTENDED
MAP
REDUCE
FILTERING
AGGREGATION
PROGRAMMING
MODEL
IN
CLOUD
ENVIRONMENT
AND
BOOSTS
THE
PERFORMANCE
OF
COMPLEX
ANALYSIS
QUERIES
APART
FROM
ITS
FLEXIBILITY
CLOUD
COMPUTING
ADDRESSES
ONE
OF
THE
CHALLENGES
RELATING
TO
TRANSFERRING
AND
SHARING
DATA
BE
CAUSE
DATA
SETS
AND
ANALYSIS
RESULTS
HELD
IN
THE
CLOUD
CAN
BE
SHARED
WITH
OTHERS
THERE
ARE
A
FEW
DISADVANTAGES
IN
CLOUD
COMPUTING
THE
OBVIOUS
ONE
IS
THE
TIME
AND
COST
THAT
ARE
REQUIRED
TO
UPLOAD
AND
DOWNLOAD
LARGE
QUANTITIES
OF
DATA
IN
THE
CLOUD
ENVIRONMENT
OTHERWISE
IT
BECOMES
MORE
DIFFICULT
TO
CONTROL
OVER
THE
DISTRIBUTION
OF
THE
COMPUTATION
AND
THE
UNDER
LYING
HARDWARE
FURTHERMORE
THERE
ARE
PRIVACY
CONCERNS
RELATING
TO
THE
HOSTING
OF
DATA
SETS
ON
PUBLICLY
ACCESSIBLE
SERVERS
AS
WELL
AS
ISSUES
RELATED
TO
STORAGE
OF
DATA
FROM
HUMAN
STUDIES
IT
IS
RIGHT
TO
SAY
THAT
BIG
DATA
PROBLEMS
WILL
PUSH
THE
CLOUD
COMPUTING
TO
A
HIGH
LEVEL
OF
DEVELOPMENT
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
FIG
CLOUD
COMPUTING
LOGICAL
DIAGRAM
FIG
CLOUD
STORAGE
BIO
INSPIRED
COMPUTING
HUMAN
BRAIN
MAYBE
CAN
GIVE
A
HAND
TO
HELP
US
TO
RETHINK
THE
WAY
WE
INTERACT
WITH
BIG
DATA
IT
CAPTURES
AND
PROCESSES
MYRIAD
OF
SENSORY
DATA
RECEIVED
MOMENT
OF
EVERY
DAY
IN
AN
EFFICIENT
AND
ROBUST
WAY
HUMAN
BRAIN
MANAGES
AROUND
A
THOU
SAND
TB
OF
DATA
AND
NO
NEURON
IN
THE
BRAIN
RUNS
FASTER
THAN
KHZ
WHICH
IS
ABOUT
THE
SPEED
OF
A
GENERAL
PC
IN
HOW
EVER
HUMAN
BEING
DOES
NOT
FEEL
HEAVY
HEADED
WHILE
OUR
BRAIN
BOOTS
UP
THAT
IS
BECAUSE
THE
BIOLOGICAL
COMPUTING
SYSTEM
OF
OUR
BRAIN
WORKS
IN
A
DISTINCT
WAY
COMPARED
WITH
TODAY
COMPUTER
OUR
BRAIN
DOES
NOT
NEED
TO
LOCATE
AND
VIEW
LARGE
FILES
WITH
COMPLEX
INFORMATION
SETS
THE
INFORMATION
IS
PARTITIONED
AND
INDIVIDUALLY
STORED
AS
SIMPLE
DATA
ELEMENTS
IN
THE
BRAIN
TISSUE
THE
PROCESSING
FOR
INFORMATION
IN
HUMAN
BRAIN
IS
ALSO
EXECUTED
IN
HIGHLY
DISTRIBUTED
AND
PARALLEL
WAYS
THE
MULTI
LOCATED
STORAGE
SCHEMA
AND
SYNCHRONOUS
PARALLEL
PROCESSING
APPROACHES
MAKE
OUR
BRAIN
WORKING
SO
FAST
AND
EFFICIENTLY
BIOLOGICAL
COMPUTING
MODELS
ILLUSTRATED
IN
FIG
ARE
BETTER
APPROPRIATE
FOR
BIG
DATA
BECAUSE
THEY
HAVE
MECHANISMS
WITH
HIGH
EFFICIENCY
TO
ORGANIZE
ACCESS
AND
PROCESS
DATA
IN
WAYS
THAT
ARE
MORE
PRACTICAL
FOR
THE
RANGING
AND
NEARLY
INFINITE
INPUTS
WE
DEAL
WITH
EVERY
DAY
FOR
TODAY
TECHNOLOGY
ALL
OF
INFORMATION
IS
LOCKED
AWAY
IN
BACKWARD
STYLE
DATA
COLLECTIONS
THAT
ARE
FIXED
AND
UNWIELDY
HOWEVER
IF
WE
CAN
STORE
ALL
THAT
INFORMATION
IN
A
SYSTEM
WHICH
IS
MODELED
MORE
ON
BIOLOGY
RATHER
THAN
TRADITIONAL
WAYS
AND
THEN
APPLY
SIGNIFICANT
AND
INCREASING
PROCESSING
POWER
AND
INTELLIGENT
ALGORITHMS
TO
ANA
LYZE
RATHER
THAN
JUST
MOVE
IT
AROUND
MECHANICALLY
THEN
WE
HAVE
THE
POSSIBILITY
OF
GENERATING
AND
INTERACTING
WITH
THE
WORLD
AND
THE
CHARACTERS
OF
SUPERNATURAL
COMPUTATIONAL
INTELLIGENCE
WHICH
IS
INSPIRED
BY
NATURE
IS
A
SET
OF
COMPUTATIONAL
METHODOLOGIES
AND
APPROACHES
TO
ADDRESS
COMPLEX
REAL
WORLD
PROBLEMS
WE
HAVE
REASON
TO
BELIEVE
THAT
COMPUTATIONAL
SYSTEMS
CAN
ALSO
BE
ILLUMINATED
BY
BIOLOGICAL
SYSTEMS
BIOLOGICALLY
INSPIRED
COMPUTING
MAYBE
PROVIDES
TOOLS
TO
SOLVE
BIG
DATA
PROBLEMS
FROM
HARDWARE
DESIGN
TO
SOFT
WARE
DESIGN
IN
ANALOGY
TO
NATURE
BIO
INSPIRED
HARDWARE
SYSTEMS
CAN
BE
CLASSIFIED
AS
THREE
AXES
PHYLOGENY
ONTOGENY
AND
EPIGENESIS
IN
AUTHORS
GIVE
A
REVIEW
AN
EMERGING
ENGINEERING
DISCIPLINE
TO
PROGRAM
CELL
BEHAVIORS
BY
EMBEDDING
SYNTHETIC
GENE
NETWORKS
THAT
PERFORM
COMPUTATION
COMMUNICATIONS
AND
SIGNAL
PROCESSING
WANG
AND
SUN
PROPOSED
A
BIO
INSPIRED
COST
MINIMIZATION
MECHANISM
FOR
DATA
INTENSIVE
SERVICE
PROVISION
IT
UTILIZES
BIO
INSPIRED
MECHANISMS
TO
SEARCH
AND
FIND
THE
OPTIMAL
DATA
SERVICE
SOLUTION
CONSIDERING
COST
OF
DATA
MANAGEMENT
AND
SERVICE
MAINTENANCE
TADASHI
GAVE
A
REVIEW
FOR
BIOLOGICAL
COMMUNICATION
MOLECULAR
COMMUNICATION
INSPIRED
BY
THE
CELL
AND
CELL
TO
CELL
COMMU
NICATION
THE
DATA
TRANSFORMATION
AND
THE
COMMUNICATION
BETWEEN
DIFFERENT
COMPUTING
UNITS
IN
BIG
DATA
SYSTEMS
MAYBE
BORROW
SOME
USEFUL
IDEAS
FROM
CELLS
IN
TWO
HARDWARE
PROCESSING
ARCHITECTURE
FOR
MODELING
LARGE
NETWORKS
OF
LEA
KY
INTEGRATE
AND
FIRE
NEURONS
THAT
INTEGRATE
BIO
INSPIRED
NEURAL
PROCESSING
MODELS
INTO
REAL
WORLD
CONTROL
ENVIRONMENTS
SERGIO
DEMONSTRATED
SELF
SYNCHRONIZATION
MECHANISM
WHICH
BORROWED
FROM
BIOLOGICAL
SYSTEMS
AS
THE
BASIC
TOOL
FOR
ACHIEVING
GLOBALLY
OPTIMAL
DISTRIBUTED
DECISIONS
IN
A
WIRELESS
SENSOR
NETWORK
BIOCOMPUTERS
IS
INSPIRED
AND
DEVELOPED
BY
BIOLOGICAL
MOLECULES
SUCH
AS
DNA
AND
PROTEINS
TO
CONDUCT
COMPUTATIONAL
CAL
CULATIONS
INVOLVING
STORING
RETRIEVING
AND
PROCESSING
DATA
A
SIGNIFICANT
FEATURE
OF
BIOCOMPUTER
IS
THAT
IT
INTEGRATES
BIOLOG
ICALLY
DERIVED
MATERIALS
TO
PERFORM
COMPUTATIONAL
FUNCTIONS
AND
RECEIVE
INTELLIGENT
AND
EFFICIENT
PERFORMANCE
AS
DEMONSTRATED
IN
FIG
A
BIOCOMPUTER
IS
COMPOSED
OF
A
PATHWAY
OR
SERIES
OF
METABOLIC
PATHWAYS
INVOLVING
BIOLOGICAL
MATE
RIALS
THAT
ARE
ENGINEERED
TO
BEHAVE
IN
A
CERTAIN
MANNER
BASED
UPON
THE
CONDITIONS
AS
INPUT
OF
THE
SYSTEM
THE
RESULTING
PATH
WAY
OF
REACTIONS
THAT
TAKES
PLACE
CONSTITUTES
AN
OUTPUT
WHICH
IS
BASED
ON
THE
ENGINEERING
DESIGN
OF
THE
BIOCOMPUTER
AND
CAN
BE
INTERPRETED
AS
A
FORM
OF
COMPUTATIONAL
ANALYSIS
THERE
ARE
THREE
KINDS
OF
DISTINGUISHABLE
BIOCOMPUTERS
INCLUDING
BIO
CHEMICAL
COMPUTERS
BIOMECHANICAL
COMPUTERS
AND
BIOELECTRONIC
COMPUTERS
ONCE
THE
BIG
DATA
TECHNOLOGIES
AND
TECHNIQUES
GET
MATURE
ENOUGH
THE
FOLLOWING
INFORMATION
REVOLUTION
WILL
INCREDIBLY
CHANGE
THE
WAY
WE
PROCESS
DATA
THE
COMPUTING
SYSTEMS
BECOME
EXPONENTIALLY
FASTER
COMPARED
WITH
CURRENT
STATUS
AND
NOVEL
DATA
STORAGE
SYSTEMS
USING
BIOLOGICAL
MODELS
PROVIDE
SMARTER
INTERACTIONS
INEVITABLE
DATA
LOSSES
AND
AMBIGUITY
GEN
UINE
COMPUTATIONAL
INTELLIGENCE
ENABLES
HUMAN
LIKE
ANALYSIS
OF
MASSIVE
QUANTITIES
OF
DATA
IT
IS
TRUE
THAT
THE
FUTURE
CON
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
FIG
BIOLOGY
COMPUTING
PARADIGM
STRUCTED
BY
BIO
INSPIRED
TECHNOLOGIES
ARE
SO
REMARKABLE
THAT
A
LARGE
AMOUNT
OF
FUNDS
AND
HUMAN
RESOURCES
ARE
POURED
INTO
RELATED
RESEARCH
ACTIVITIES
QUANTUM
COMPUTING
A
QUANTUM
COMPUTER
HAS
MEMORY
THAT
IS
EXPONENTIALLY
LARGER
THAN
ITS
APPARENT
PHYSICAL
SIZE
AND
CAN
MANIPULATE
AN
EXPO
NENTIAL
SET
OF
INPUTS
SIMULTANEOUSLY
IT
ALSO
CAN
COMPUTE
IN
THE
TWILIGHT
ZONE
OF
HILBERT
SPACE
THIS
EXPONENTIAL
IMPROVEMENT
IN
COMPUTER
SYSTEMS
MIGHT
BE
POSSIBLE
AND
REAL
POWERFUL
COMPUTER
IS
EMERGING
IF
A
REAL
QUANTUM
COMPUTER
EXISTED
NOW
WE
COULD
SOLVE
PROBLEMS
THAT
ARE
EXCEPTIONALLY
DIFFICULT
ON
CURRENT
COMPUTERS
OF
COURSE
INCLUDING
TODAY
BIG
DATA
PROB
LEMS
ALTHOUGH
IT
IS
VERY
HARD
TO
DEVELOP
QUANTUM
COMPUTER
THE
MAIN
TECHNICAL
DIFFICULTY
IN
BUILDING
A
QUANTUM
COMPUTER
COULD
SOON
BE
THE
THING
THAT
MAKES
IT
POSSIBLE
TO
BUILD
ONE
FOR
EXAMPLE
D
WARE
SYSTEMS
COMPANY
DEVELOPED
THEIR
QUAN
TUM
COMPUTER
CALLED
D
WAVE
ONE
WITH
QUBITS
PROCESSOR
AND
D
WAVE
TWO
WITH
QUBITS
PROCESSOR
ON
AND
RESPECTIVELY
IN
ESSENCE
QUANTUM
COMPUTING
IS
TO
HARNESS
AND
EXPLOIT
THE
POWERFUL
LAWS
OF
QUANTUM
MECHANICS
TO
PROCESS
INFOR
MATION
IN
A
TRADITIONAL
COMPUTER
INFORMATION
IS
PRESENTED
BY
LONG
STRINGS
OF
BITS
WHICH
ENCODE
EITHER
A
ZERO
OR
A
ONE
DIF
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
FIG
BIOCOMPUTERS
SOURCE
FROM
TABLE
A
SIZES
OF
DATA
UNITS
NAME
EQUALS
TO
SIZE
IN
BYTES
BIT
BIT
NIBBLE
BITS
BYTE
BITS
KILOBYTE
BYTES
MEGABYTE
KILOBYTES
GIGABYTE
MEGABYTES
TERRABYTE
GIGABYTES
PETABYTE
TERRABYTES
EXABYTE
PETABYTES
846
ZETTABYTE
EXABYTES
424
YOTTABYTE
ZETTABYTES
706
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
FERENTLY
A
QUANTUM
COMPUTER
USES
QUANTUM
BITS
OR
QUBITS
THE
DIFFERENCE
BETWEEN
QUBIT
AND
BIT
IS
THAT
A
QUBIT
IS
A
QUANTUM
SYSTEM
THAT
ENCODES
THE
ZERO
AND
THE
ONE
INTO
TWO
DISTINGUISHABLE
QUANTUM
STATES
BECAUSE
QUBITS
BEHAVE
QUANTUMLY
WE
CAN
CAPITALIZE
ON
THE
PHENOMENA
OF
SUPERPOSITION
AND
ENTANGLEMENT
FOR
EXAMPLE
QUBITS
IN
QUANTUM
SYSTEMS
REQUIRE
COMPLEX
VALUES
TO
BE
STORED
IN
CLASSICAL
COMPUTER
SYSTEMS
NIELSEN
AND
CHUANG
POINTED
OUT
THAT
TRYING
TO
STORE
ALL
THESE
COMPLEX
NUMBERS
WOULD
NOT
BE
POSSIBLE
ON
ANY
CONCEIVABLE
CLASSICAL
COMPUTER
MANY
CERTAIN
PROBLEMS
CAN
BE
SOLVED
MUCH
FASTER
BY
LARGER
SCALE
QUANTUM
COMPUTERS
COMPARED
WITH
CLASSICAL
COMPUT
ERS
THAT
IS
BECAUSE
THAT
QUANTUM
ALGORITHMS
SUCH
AS
SIMON
ALGORITHM
SHOR
ALGORITHM
AND
OTHER
ALGORITHMS
FOR
SIMU
LATING
QUANTUM
SYSTEMS
ARE
MORE
EFFICIENT
AND
FASTER
THAN
TRADITIONAL
ONES
QUANTUM
COMPUTATION
DOES
NOT
VIOLATE
THE
CHURCH
TURING
THESIS
AS
CLASSICAL
COMPUTERS
ALSO
CAN
SIMULATE
AN
ARBITRARY
QUANTUM
ALGORITHM
WITH
UNLIMITED
RESOURCES
DESPITE
QUANTUM
COMPUTING
IS
STILL
IN
A
FLEDGING
PERIOD
QUANTUM
COMPUTATIONAL
OPERATIONS
HAVE
BEEN
EXECUTED
UNDER
A
SMALL
NUMBER
OF
QUANTUM
BITS
IN
PRACTICAL
EXPERIMENTS
AS
THE
THEORETICAL
RESEARCH
CONTINUES
TO
BE
ADVANCED
INDEED
THERE
ARE
A
NUMBER
OF
UNIVERSITY
INSTITUTES
NATIONAL
GOVERNMENTS
AND
MILITARY
FUNDING
RESEARCH
GROUPS
ARE
WORKING
ON
QUANTUM
COMPUTING
STUDIES
TO
DEVELOP
QUANTUM
COMPUTERS
FOR
BOTH
CIVILIAN
AND
NATIONAL
SECURITY
PURPOSES
CONCLUSION
AS
WE
HAVE
ENTERED
AN
ERA
OF
BIG
DATA
WHICH
IS
THE
NEXT
FRONTIER
FOR
INNOVATION
COMPETITION
AND
PRODUCTIVITY
A
NEW
WAVE
OF
SCIENTIFIC
REVOLUTION
IS
ABOUT
TO
BEGIN
FORTUNATELY
WE
WILL
WITNESS
THE
COMING
TECHNOLOGICAL
LEAPFROGGING
IN
THIS
SURVEY
PAPER
WE
GIVE
A
BRIEF
OVERVIEW
ON
BIG
DATA
PROBLEMS
INCLUDING
BIG
DATA
OPPORTUNITIES
AND
CHALLENGES
CURRENT
TECHNIQUES
AND
TECHNOLOGIES
WE
ALSO
PROPOSE
SEVERAL
POTENTIAL
TECHNIQUES
TO
SOLVE
THE
PROBLEM
INCLUDING
CLOUD
COMPUTING
QUANTUM
COMPUTING
AND
BIOLOGICAL
COMPUTING
ALTHOUGH
THOSE
TECHNOLOGIES
ARE
STILL
UNDER
DEVELOPMENT
WE
HAVE
CONFIDENCE
THAT
IN
THE
COMING
FUTURE
WE
WILL
RECEIVE
SEVERAL
GREAT
BREAKTHROUGHS
IN
THOSE
AREAS
UNDOUBTEDLY
TODAY
AND
FUTURE
BIG
DATA
PROB
LEMS
WILL
BENEFIT
FROM
THOSE
PROGRESSES
THERE
IS
NO
DOUBT
THAT
BIG
DATA
ANALYTICS
IS
STILL
IN
THE
INITIAL
STAGE
OF
DEVELOPMENT
SINCE
EXISTING
BIG
DATA
TECHNIQUES
AND
TOOLS
ARE
VERY
LIMITED
TO
SOLVE
THE
REAL
BIG
DATA
PROBLEMS
COMPLETELY
IN
WHICH
SOME
OF
THEM
EVEN
CANNOT
BE
VIEWED
AS
BIG
DATA
TOOLS
IN
THE
TRUE
SENSE
THEREFORE
MORE
SCIENTIFIC
INVESTMENTS
FROM
BOTH
GOVERNMENTS
AND
ENTERPRISES
SHOULD
BE
POURED
INTO
THIS
SCIENTIFIC
PARADIGM
TO
CAPTURE
HUGE
VALUES
FROM
BIG
DATA
FROM
HARDWARE
TO
SOFTWARE
WE
IMMINENTLY
REQUIRE
MORE
ADVANCED
STORAGE
AND
I
O
TECHNIQUES
MORE
FAVORABLE
COMPUTER
ARCHITECTURES
MORE
EFFICIENT
DATA
INTENSIVE
TECHNIQUES
CLOUD
COMPUTING
SOCIAL
COMPUTING
AND
BIOLOGICAL
COMPUTING
ETC
AND
MORE
PROGRESSIVE
TECHNOLOGIES
BIG
DATA
PLATFORMS
WITH
SOUND
ARCHITECTURE
INFRASTRUCTURE
APPROACH
AND
PROPERTIES
BIG
DATA
ALSO
MEANS
BIG
SYSTEMS
BIG
CHALLENGES
AND
BIG
PROFITS
SO
MORE
RESEARCH
WORKS
IN
THESE
SUB
FIELDS
ARE
NECESSARY
TO
RESOLVE
IT
WE
ARE
FORTUNATELY
WITNESSING
THE
BIRTH
AND
DEVELOPMENT
OF
BIG
DATA
AND
NO
PERSON
CAN
SETTLE
IT
ALONE
HUMAN
RESOURCES
CAPITAL
INVESTMENTS
AND
CREATIVE
IDEAS
ARE
FUNDAMENTAL
COMPONENTS
OF
DEVELOPMENT
OF
BIG
DATA
ACKNOWLEDGMENTS
THIS
WORK
WAS
SUPPORTED
IN
PART
BY
THE
NATIONAL
BASIC
RESEARCH
PROGRAM
OF
CHINA
UNDER
GRANT
AND
THE
MACAU
SCIENCE
AND
TECHNOLOGY
DEVELOPMENT
FUND
UNDER
GRANT
AND
UNIVERSITY
OF
MACAU
MULTIYEAR
RE
SEARCH
GRANTS
APPENDIX
A
SIZES
OF
DATA
UNITS
SEE
TABLE
A
APPENDIX
B
WORDCOUNT
JAVA
PACKAGE
ORG
MYORG
IMPORT
JAVA
IO
IOEXCEPTION
IMPORT
JAVA
UTIL
IMPORT
ORG
APACHE
HADOOP
FS
PATH
IMPORT
ORG
APACHE
HADOOP
CONF
IMPORT
ORG
APACHE
HADOOP
IO
IMPORT
ORG
APACHE
HADOOP
MAPRED
IMPORT
ORG
APACHE
HADOOP
UTIL
CONTINUED
ON
NEXT
PAGE
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
PUBLIC
CLASS
WORDCOUNT
PUBLIC
STATICCLASS
MAP
EXTENDS
MAPREDUCEBASE
IMPLEMENTS
MAPPER
LONGWRITABLE
TEXT
TEXT
INTWRITABLE
PRIVATE
FINAL
STATIC
INTWRITABLE
ONE
NEW
INTWRITABLE
PRIVATE
TEXT
WORD
NEW
TEXT
PUBLIC
VOID
MAP
LONGWRITABLE
KEY
TEXT
VALUE
OUTPUTCOLLECTOR
TEXT
INTWRITABL
OUTPUT
REPORTER
REPORTER
THROWS
IOEXCEPTION
STRING
LINE
VALUE
TOSTRING
STRINGTOKENIZER
TOKENIZER
NEW
STRINGTOKENIZER
LINE
WHILE
TOKENIZER
HASMORETOKENS
WORD
SET
TOKENIZER
NEXTTOKEN
OUTPUT
COLLECT
WORD
ONE
PUBLIC
STATIC
CLASS
REDUCE
EXTENDS
MAPREDUCEBASE
IMPLEMENTS
REDUCER
TEXT
INTWRITABLE
TEXT
INTWRITABLE
PUBLIC
VOID
REDUCE
TEXT
KEY
ITERATOR
INTWRITABLE
VALUES
OUTPUTCOLLECTOR
TEXT
INTWRITABLE
OUTPUT
REPORTER
REPORTER
THROWS
IOEXCEPTION
INT
SUM
WHILE
VALUES
HASNEXT
SUM
VALUES
NEXT
GET
OUTPUT
COLLECT
KEY
NEW
INTWRITABLE
SUM
PUBLIC
STATIC
VOID
MAIN
STRING
ARGS
THROWS
EXCEPTION
JOBCONF
CONF
NEW
JOBCONF
WORDCOUNT
CLASS
CONF
SETJOBNAME
WORDCOUNT
CONF
SETOUTPUTKEYCLASS
TEXT
CLASS
CONF
SETOUTPUTVALUECLASS
INTWRITABLE
CLASS
CONF
SETMAPPERCLASS
MAP
CLASS
CONF
SETCOMBINERCLASS
REDUCE
CLASS
CONF
SETREDUCERCLASS
REDUCE
CLASS
CONF
SETINPUTFORMAT
TEXTINPUTFORMAT
CLASS
CONF
SETOUTPUTFORMAT
TEXTOUTPUTFORMAT
CLASS
FILEINPUTFORMAT
SETINPUTPATHS
CONF
NEW
PATH
ARGS
FILEOUTPUTFORMAT
SETOUTPUTPATH
CONF
NEW
PATH
ARGS
JOBCLIENT
RUNJOB
CONF
SOURCE
FROM
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
APPENDIX
C
BIG
DATA
VENDORS
BIG
DATA
VENDORS
VENDOR
DATA
LOCATION
NEW
YORK
NY
WEBSITE
HTTP
WWW
COM
INDEX
PHP
FEATURED
BIG
DATA
PRODUCTS
HOSTED
ANALYTICAL
PLATFORM
FOR
BIG
DATA
USING
BIG
TABLE
TYPE
DATA
STRUCTURES
FOR
CONSOLIDATION
AND
ANALYSIS
VENDOR
LOCATION
NEW
YORK
NY
PALO
ALTO
CA
LONDON
GREAT
BRITAIN
DUBLIN
IRELAND
WEBSITE
HTTP
WWW
COM
FEATURED
BIG
DATA
PRODUCTS
COMMERCIAL
SUPPORT
AND
SERVICES
FOR
MONGODB
VENDOR
ACXIOM
LOCATION
VARIOUS
GLOBAL
LOCATIONS
WEBSITE
HTTP
ACXIOM
COM
FEATURED
BIG
DATA
PRODUCTS
DATA
ANALYTICS
AND
PROCESSING
WITH
AN
EMPHASIS
ON
MARKETING
DATA
AND
SERVICES
VENDOR
AMAZON
WEB
SERVICES
LOCATION
GLOBAL
WEBSITE
HTTP
AWS
AMAZON
COM
FEATURED
BIG
DATA
PRODUCTS
PROVIDER
OF
CLOUD
BASED
DATABASE
STORAGE
PROCESSING
AND
VIRTUAL
NETWORKING
SERVICES
VENDOR
ASTER
DATA
LOCATION
SAN
CARLOS
CA
WEBSITE
HTTP
WWW
ASTERDATA
COM
FEATURED
BIG
DATA
PRODUCTS
DATA
ANALYTIC
SERVICES
USING
MAP
REDUCE
TECHNOLOGY
VENDOR
CALPONT
LOCATION
FRISCO
TX
WEBSITE
HTTP
WWW
CALPONT
COM
FEATURED
BIG
DATA
PRODUCTS
INFINIDB
ENTERPRISE
IS
A
COLUMN
SORTED
DATABASE
THAT
ALSO
PROVIDES
MASSIVELY
PARALLEL
PROCESSING
CAPABILITIES
VENDOR
CLOUDERA
LOCATION
PALO
ALTO
AND
SAN
FRANCISCO
CA
WEBSITE
HTTP
WWW
CLOUDERA
COM
FEATURED
BIG
DATA
PRODUCTS
DISTRIBUTOR
OF
COMMERCIAL
IMPLEMENTATION
OF
APACHE
HADOOP
WITH
SERVICES
AND
SUPPORT
VENDOR
COUCHBASE
LOCATION
MOUNTAIN
VIEW
CA
WEBSITE
HTTP
WWW
COUCHBASE
COM
FEATURED
BIG
DATA
PRODUCTS
COMMERCIAL
SPONSOR
OF
THE
COUCHBASE
SERVER
MAP
REDUCE
ORIENTED
DATABASE
AS
WELL
AS
APACHE
COUCHDB
AND
MEMCACHED
VENDOR
DATAMEER
LOCATION
SAN
MATEO
CA
WEBSITE
HTTP
WWW
DATAMEER
COM
FEATURED
BIG
DATA
PRODUCTS
DATA
VISUALIZATION
SERVICES
FOR
APACHE
HADOOP
DATA
STORES
VENDOR
DATASIFT
LOCATION
SAN
FRANCISCO
CA
READING
UNITED
KINGDOM
WEBSITE
HTTP
DATASIFT
COM
FEATURED
BIG
DATA
PRODUCTS
SOCIAL
MEDIA
DATA
ANALYTICAL
SERVICES
LICENSED
RE
SYNDICATOR
OF
TWITTER
VENDOR
DATASTAX
LOCATION
SAN
MATEO
CA
AUSTIN
TX
WEBSITE
HTTP
WWW
DATASTAX
COM
FEATURED
BIG
DATA
PRODUCTS
DISTRIBUTOR
OF
COMMERCIAL
IMPLEMENTATION
OF
APACHE
CASSANDRA
WITH
SERVICES
AND
SUPPORT
CONTINUED
ON
NEXT
PAGE
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
VENDOR
DIGITAL
REASONING
LOCATION
FRANKLIN
TN
WEBSITE
HTTP
WWW
DIGITALREASONING
COM
FEATURED
BIG
DATA
PRODUCTS
SYNTHESYS
A
HOSTED
AND
LOCAL
BUSINESS
INTELLIGENCE
DATA
ANALYSICS
TOOL
VENDOR
EMC
LOCATION
VARIOUS
GLOBAL
LOCATIONS
WEBSITE
HTTP
WWW
EMC
COM
FEATURED
BIG
DATA
PRODUCTS
MAKERS
OF
GREENPLUM
A
MASSIVELY
PARALLEL
PROCESSING
DATA
STORE
ANALYTICS
SOLUTION
VENDOR
ESRI
LOCATION
VARIOUS
GLOBAL
LOCATIONS
WEBSITE
HTTP
WWW
ESRI
COM
FEATURED
BIG
DATA
PRODUCTS
GIS
DATA
ANALYTICAL
SERVICES
VENDOR
FEEDZAI
LOCATION
UNITED
KINGDOM
WEBSITE
HTTP
WWW
FEEDZAI
COM
FEATURED
BIG
DATA
PRODUCTS
FEEDZAI
PULSE
A
REAL
TIME
BUSINESS
INTELLIGENCE
APPLIANCE
VENDOR
HADAPT
LOCATION
CAMBRIDGE
MA
WEBSITE
HTTP
WWW
HADAPT
COM
FEATURED
BIG
DATA
PRODUCTS
DATA
ANALYTIC
SERVICES
FOR
APACHE
HADOOP
DATA
STORES
VENDOR
HORTONWORKS
LOCATION
SUNNYVALE
CA
WEBSITE
HTTP
HORTONWORKS
COM
FEATURED
BIG
DATA
PRODUCTS
DISTRIBUTOR
OF
COMMERCIAL
IMPLEMENTATION
OF
APACHE
HADOOP
WITH
SERVICES
AND
SUPPORT
VENDOR
HPCC
SYSTEMS
LOCATION
ALPHARETTA
GA
WEBSITE
HTTP
HPCCSYSTEMS
COM
FEATURED
BIG
DATA
PRODUCTS
HPCC
HIGH
PERFORMANCE
COMPUTING
CLUSTER
AN
OPEN
SOURCE
MASSIVE
PARALLEL
PROCESSING
COMPUTING
DATABASE
VENDOR
IBM
LOCATION
VARIOUS
GLOBAL
LOCATIONS
WEBSITE
HTTP
WWW
IBM
COM
FEATURED
BIG
DATA
PRODUCTS
HARDWARE
DATA
ANALYTICAL
SERVICES
AND
A
MASSIVE
PARALLEL
PROCESSING
DATABASE
VENDOR
IMPETUS
LOCATION
SAN
JOSE
CA
NOIDA
INDIA
INDORE
INDIA
BANGALORE
INDIA
WEBSITE
HTTP
IMPETUS
COM
FEATURED
BIG
DATA
PRODUCTS
DATA
ANALYTIC
AND
MANAGEMENT
SERVICES
FOR
APACHE
HADOOP
DATA
STORES
VENDOR
INFOBRIGHT
LOCATION
TORONTO
ON
DUBLIN
IRELAND
CHICAGO
IL
WEBSITE
HTTP
WWW
INFOBRIGHT
COM
FEATURED
BIG
DATA
PRODUCTS
INFOBRIGHT
A
COLUMN
STORE
DATABASE
WITH
SERVICES
AND
SUPPORT
VENDOR
JASPERSOFT
LOCATION
VARIOUS
GLOBAL
LOCATIONS
WEBSITE
HTTP
WWW
JASPERSOFT
COM
FEATURED
BIG
DATA
PRODUCTS
DATA
ANALYTIC
SERVICES
FOR
APACHE
HADOOP
DATA
STORES
VENDOR
KARMASPHERE
LOCATION
CUPERTINO
CA
WEBSITE
HTTP
WWW
KARMASPHERE
COM
FEATURED
BIG
DATA
PRODUCTS
DATA
ANALYTIC
AND
DEVELOPMENT
SERVICES
FOR
APACHE
HADOOP
DATA
STORES
VENDOR
LUCID
IMAGINATION
LOCATION
REDWOOD
CITY
CA
WEBSITE
HTTP
WWW
LUCIDIMAGINATION
COM
C
L
PHILIP
CHEN
C
Y
ZHANG
INFORMATION
SCIENCES
FEATURED
BIG
DATA
PRODUCTS
DISTRIBUTOR
OF
COMMERCIAL
IMPLEMENTATION
OF
APACHE
LUCENE
AND
APACHE
SOLR
WITH
SERVICES
AND
SUPPORT
PROVIDER
OF
LUCIDWORKS
ENTERPRISE
SEARCH
SOFTWARE
VENDOR
MAPR
TECHNOLOGIES
LOCATION
SAN
JOSE
CA
HYDERABAD
INDIA
WEBSITE
HTTP
WWW
MAPR
COM
FEATURED
BIG
DATA
PRODUCTS
DISTRIBUTOR
OF
COMMERCIAL
IMPLEMENTATION
OF
APACHE
HADOOP
WITH
SERVICES
AND
SUPPORT
VENDOR
MARKLOGIC
LOCATION
VARIOUS
GLOBAL
LOCATIONS
WEBSITE
HTTP
WWW
MARKLOGIC
COM
FEATURED
BIG
DATA
PRODUCTS
DATA
ANALYIC
AND
VISUALIZATION
SERVICES
VENDOR
NETEZZA
CORP
LOCATION
VARIOUS
GLOBAL
LOCATIONS
WEBSITE
HTTP
WWW
NETEZZA
COM
FEATURED
BIG
DATA
PRODUCTS
MASSIVELY
PARALLEL
PROCESSING
DATA
APPLIANCES
ANALYTIC
SERVICES
VENDOR
ORACLE
LOCATION
VARIOUS
GLOBAL
LOCATIONS
WEBSITE
HTTP
WWW
ORACLE
COM
FEATURED
BIG
DATA
PRODUCTS
VARIOUS
HARDWARE
AND
SOFTWARE
OFFERINGS
INCLUDING
BIG
DATA
APPLIANCE
MYSQL
CLUSTER
EXADATA
DATABASE
MACHINE
VENDOR
PARACCEL
LOCATION
CAMPBELL
CA
SAN
DIEGO
CA
WOKINGHAM
UNITED
KINGDOM
WEBSITE
HTTP
WWW
PARACCEL
COM
FEATURED
BIG
DATA
PRODUCTS
DATA
ANALYICS
USING
COLUMN
STORE
TECHNOLOGY
VENDOR
PENTAHO
LOCATION
VARIOUS
GLOBAL
LOCATIONS
WEBSITE
HTTP
WWW
PENTAHO
COM
FEATURED
BIG
DATA
PRODUCTS
DATA
ANALYTIC
SERVICES
FOR
APACHE
HADOOP
DATA
STORES
VENDOR
PERVASIVE
SOFTWARE
LOCATION
AUSTIN
TX
WEBSITE
HTTP
WWW
PERVASIVE
COM
FEATURED
BIG
DATA
PRODUCTS
DATA
ANALYTIC
SERVICES
FOR
APACHE
HADOOP
DATA
STORES
BASED
ON
HIVE
VENDOR
PLATFORM
COMPUTING
LOCATION
VARIOUS
GLOBAL
LOCATIONS
WEBSITE
HTTP
WWW
PLATFORM
COM
FEATURED
BIG
DATA
PRODUCTS
DISTRIBUTOR
OF
COMMERCIAL
IMPLEMENTATION
OF
APACHE
HADOOP
WITH
SERVICES
AND
SUPPORT
VENDOR
RACKSPACE
LOCATION
GLOBAL
WEBSITE
HTTP
WWW
RACKSPACE
COM
FEATURED
BIG
DATA
PRODUCTS
PROVIDER
OF
CLOUD
BASED
DATABASE
STORAGE
AND
PROCESSING
SERVICES
VENDOR
REVOLUTION
ANALYTICS
LOCATION
PALO
ALTO
CA
SEATTLE
WA
WEBSITE
HTTP
WWW
REVOLUTIONANALYTICS
COM
FEATURED
BIG
DATA
PRODUCTS
DATA
ANALYTIC
AND
VISUALIZATION
SERVICES
USING
R
BASED
SOFTWARE
VENDOR
SPLUNK
LOCATION
VARIOUS
GLOBAL
LOCATIONS
WEBSITE
HTTP
WWW
SPLUNK
COM
FEATURED
BIG
DATA
PRODUCTS
DATA
ANALYTIC
AND
VISUALIZATION
SERVICES
USING
LOGGING
ORIENTED
SOFTWARE
VENDOR
TABLEAU
SOFTWARE
LOCATION
SEATTLE
WA
KIRKLAND
WA
SAN
MATEO
CA
SURREY
UNITED
KINGDOM
PARIS
FRANCE
WEBSITE
HTTP
WWW
TABLEAUSOFTWARE
COM
FEATURED
BIG
DATA
PRODUCTS
BUSINESS
INTELLIGENCE
AND
DATA
ANALYTIC
SOFTWARE
CONTINUED
ON
NEXT
PAGE
SINCE
ITS
ORIGINAL
PUBLICATION
UTAUT
HAS
SERVED
AS
A
BASE
LINE
MODEL
AND
HAS
BEEN
APPLIED
TO
THE
STUDY
OF
A
VARIETY
OF
TECHNOLOGIES
IN
BOTH
ORGANIZATIONAL
AND
NON
ORGANIZATIONAL
SETTINGS
THERE
HAVE
BEEN
MANY
APPLICATIONS
AND
REPLICATIONS
OF
THE
ENTIRE
MODEL
OR
PART
OF
THE
MODEL
IN
ORGANIZATIONAL
SETTINGS
THAT
HAVE
CONTRIBUTED
TO
FORTIFYING
ITS
GENERALIZABILITY
E
G
NEUFELD
ET
AL
THERE
ARE
THREE
BROAD
TYPES
OF
UTAUT
EXTENSIONS
INTEGRATIONS
THE
FIRST
TYPE
OF
EXTENSION
INTEGRATION
EXAMINED
UTAUT
IN
NEW
CONTEXTS
SUCH
AS
NEW
TECHNOLOGIES
E
G
COLLABORATIVE
TECHNOLOGY
HEALTH
INFORMA
TION
SYSTEMS
CHANG
ET
AL
NEW
USER
POPULATIONS
E
G
HEALTHCARE
PROFESSIONALS
CONSUMERS
YI
ET
AL
AND
NEW
CULTURAL
SETTINGS
E
G
CHINA
INDIA
GUPTA
ET
AL
THE
SECOND
TYPE
IS
THE
ADDITION
OF
NEW
CONSTRUCTS
IN
ORDER
TO
EXPAND
THE
SCOPE
OF
THE
ENDOGENOUS
THEORETICAL
MECHANISMS
OUTLINED
IN
UTAUT
E
G
CHAN
ET
AL
SUN
ET
AL
FINALLY
THE
THIRD
TYPE
IS
THE
INCLUSION
OF
EXOGENOUS
PREDICTORS
OF
THE
UTAUT
VARIABLES
E
G
NEUFELD
ET
AL
YI
ET
AL
THESE
EXTENSIVE
REPLICATIONS
APPLICATIONS
AND
EXTEN
SIONS
INTEGRATIONS
OF
UTAUT
HAVE
BEEN
VALUABLE
IN
EXPANDING
OUR
UNDERSTANDING
OF
TECHNOLOGY
ADOPTION
AND
EXTENDING
THE
THEORETICAL
BOUNDARIES
OF
THE
THEORY
HOWEVER
OUR
REVIEW
OF
THIS
BODY
OF
WORK
REVEALED
THAT
MOST
STUDIES
USING
UTAUT
EMPLOYED
ONLY
A
SUBSET
OF
THE
CONSTRUCTS
PARTICULARLY
BY
DROPPING
THE
MODERATORS
SEE
AL
GAHTANI
ET
AL
ARMIDA
THUS
WHILE
THE
VARIOUS
STUDIES
CON
TRIBUTE
TO
UNDERSTANDING
THE
UTILITY
OF
UTAUT
IN
DIFFERENT
CONTEXTS
THERE
IS
STILL
THE
NEED
FOR
A
SYSTEMATIC
INVESTIGATION
AND
THEORIZING
OF
THE
SALIENT
FACTORS
THAT
WOULD
APPLY
TO
A
CONSUMER
TECHNOLOGY
USE
CONTEXT
BUILDING
ON
THE
PAST
EXTENSIONS
TO
UTAUT
THE
OBJECTIVE
OF
OUR
WORK
IS
TO
PAY
PARTICULAR
ATTENTION
TO
THE
CONSUMER
USE
CONTEXT
AND
DEVELOP
COMPARED
TO
GENERAL
THEORIES
IN
MORE
RECENT
YEARS
THEORIES
THAT
FOCUS
ON
A
SPECIFIC
CONTEXT
AND
IDENTIFY
RELEVANT
PREDICTORS
AND
MECHANISMS
ARE
CON
SIDERED
TO
BE
VITAL
IN
PROVIDING
A
RICH
UNDERSTANDING
OF
A
FOCAL
PHENOMENON
AND
TO
MEANINGFULLY
EXTEND
THEORIES
SPECI
FICALLY
BOTH
JOHNS
AND
ALVESSON
AND
KÄRREMAN
NOTE
THAT
NEW
CONTEXTS
CAN
RESULT
IN
SEVERAL
TYPES
OF
IMPORTANT
CHANGES
IN
THEORIES
SUCH
AS
RENDERING
ORIGINALLY
THEORIZED
RELATIONSHIPS
TO
BE
NONSIGNIFICANT
CHANGING
THE
DIRECTION
OF
RELATIONSHIPS
ALTERING
THE
MAGNITUDE
OF
RELATIONSHIPS
AND
CREATING
NEW
RELATIONSHIPS
EACH
CHANGE
CAN
REVEAL
THE
BREAK
DOWN
OF
THEORIES
THAT
RESULTS
IN
THE
CREATION
OF
NEW
KNOWLEDGE
ALVESSON
AND
KÄRREMAN
IN
THE
CASE
OF
UTAUT
WHICH
WAS
ORIGINALLY
DEVELOPED
TO
EXPLAIN
EMPLOYEE
TECH
NOLOGY
ACCEPTANCE
AND
USE
IT
WILL
BE
CRITICAL
TO
EXAMINE
HOW
IT
CAN
BE
EXTENDED
TO
OTHER
CONTEXTS
SUCH
AS
THE
CONTEXT
OF
CONSUMER
TECHNOLOGIES
WHICH
IS
A
MULTIBILLION
DOLLAR
INDUSTRY
GIVEN
THE
NUMBER
OF
TECHNOLOGY
DEVICES
APPLICATIONS
AND
SERVICES
TARGETED
AT
CONSUMERS
STOFEGA
AND
LLAMAS
MIS
QUARTERLY
VOL
NO
MARCH
AGAINST
THIS
BACKDROP
THE
STUDY
OF
THE
BOUNDARY
CONDITIONS
AND
EXTENSIONS
TO
UTAUT
IN
A
CONSUMER
CONTEXT
REPRESENTS
AN
OPPORTUNITY
TO
MAKE
AN
IMPORTANT
THEORETICAL
CONTRIBUTION
SPECIFICALLY
IN
THE
CONTEXT
OF
TECHNOLOGY
ADOPTION
DETRACTORS
AND
PROPONENTS
OF
MODELS
SUCH
AS
THE
TECHNOLOGY
ACCEPTANCE
MODEL
ТАМ
HAVE
NOTED
THE
NEED
TO
EXPAND
THE
SPACE
OF
THEORETICAL
MECHANISMS
SEE
BAGOZZI
BENBASAT
AND
BARKI
VENKATESH
ET
AL
THIS
PAPER
PRESENTS
BY
IDENTIFYING
KEY
ADDITIONAL
CONSTRUCTS
AND
RELATIONSHIPS
TO
BE
INTEGRATED
INTO
UTAUT
THUS
TAILORING
IT
TO
A
CONSUMER
USE
CONTEXT
IN
KEEPING
WITH
THE
GENERAL
IDEAS
OUTLINED
BY
ALVESSON
AND
KÄRREMAN
AND
BY
JOHNS
ABOUT
HOW
TO
EXTEND
A
THEORY
BY
LEVER
AGING
A
NEW
CONTEXT
AND
THE
IDEAS
PRESENTED
IN
THE
JOURNAL
OF
THE
AIS
SPECIAL
ISSUE
ON
ТАМ
E
G
BAGOZZI
VENKATESH
ET
AL
WE
ACCOMPLISH
THIS
GOAL
BY
IDENTIFYING
THREE
KEY
CONSTRUCTS
FROM
PRIOR
RESEARCH
ON
BOTH
GENERAL
ADOPTION
AND
USE
OF
TECHNOLOGIES
AND
CONSUMER
ADOPTION
AND
USE
OF
TECHNOLOGIES
ALTERING
SOME
OF
THE
EXISTING
RELATIONSHIPS
IN
THE
ORIGINAL
CONCEPTUALIZATION
OF
UTAUT
AND
INTRODUCING
NEW
RELATIONSHIPS
FIRST
BOTH
CONSUMER
BEHAVIOR
AND
IS
RESEARCH
HAVE
THEORIZED
AND
FOUND
VARIOUS
CONSTRUCTS
RELATED
TO
HEDONIC
MOTIVATION
E
G
ENJOYMENT
ARE
IMPORTANT
IN
CONSUMER
PRODUCT
AND
OR
TECHNOLOGY
USE
E
G
BROWN
AND
VENKATESH
HOLBROOK
AND
HIRSCHMAN
NYSVEEN
ET
AL
VAN
DER
HEIJDEN
INTEGRATING
HEDONIC
MOTIVA
TION
WILL
COMPLEMENT
UTAUT
STRONGEST
PREDICTOR
THAT
EMPHASIZES
UTILITY
SECOND
IN
CONSUMER
CONTEXTS
UNLIKE
WORKPLACE
CONTEXTS
USERS
ARE
RESPONSIBLE
FOR
THE
COSTS
AND
SUCH
COSTS
BESIDES
BEING
IMPORTANT
CAN
DOMINATE
CONSUMER
ADOPTION
DECISIONS
SEE
BROWN
AND
VENKATESH
CHAN
ET
AL
COULTER
AND
COULTER
DODDS
ET
AL
ADDING
A
CONSTRUCT
RELATED
TO
PRICE
COST
WILL
COMPLEMENT
UTAUT
EXISTING
RESOURCE
CONSIDERATIONS
THAT
FOCUS
ONLY
ON
TIME
AND
EFFORT
FINALLY
RECENT
WORK
HAS
CHALLENGED
THE
ROLE
OF
BEHAVIORAL
INTENTION
AS
THE
KEY
PREDICTOR
OF
TECHNOLOGY
USE
AND
INTRODUCED
A
NEW
THEORETICAL
CONSTRUCT
I
E
HABIT
AS
ANOTHER
CRITICAL
PREDICTOR
OF
TECHNOLOGY
USE
E
G
DAVIS
AND
VENKATESH
KIM
AND
MALHOTRA
KIM
ET
AL
LIMAYEM
ET
AL
INTEGRATING
HABIT
INTO
UTAUT
WILL
COMPLEMENT
THE
THEORY
FOCUS
ON
INTENTIONALITY
AS
THE
OVERARCHING
MECHANISM
AND
KEY
DRIVER
OF
BEHAVIOR
IN
FACT
HABIT
AS
A
KEY
ALTERNATIVE
MECHANISM
HAS
BEEN
LAUDED
AS
A
VALUABLE
NEXT
STEP
IN
THE
JAIS
SPECIAL
ISSUE
ON
ТАМ
THE
COLLECTION
OF
THESE
WORKS
EXAMINING
THE
ROLE
OF
HABIT
ALBEIT
OPERATIONALIZED
DIFFERENTLY
IN
EACH
OF
THE
PAPERS
CONCLUDES
THAT
HABIT
HAS
A
DIRECT
EFFECT
ON
TECHNOLOGY
USE
AND
OR
HABIT
WEAKENS
OR
LIMITS
THE
STRENGTH
OF
THE
RELATIONSHIP
BETWEEN
BEHAVIORAL
INTENTION
AND
TECHNOLOGY
USE
SUCH
AN
INTEGRATION
OF
MULTIPLE
STREAMS
OF
WORK
TO
SHED
LIGHT
ON
PHENOMENA
OF
INTEREST
IS
IMPORTANT
FROM
A
SCIENTIFIC
STANDPOINT
GIOIA
AND
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
VENKATESH
ET
AL
CONSUMER
ACCEPTANCE
AND
USE
OF
IT
PETRI
GREENWOOD
BEYOND
THESE
CHANGES
RELATIVE
SUMER
CONTEXT
THEN
WE
DISCUSS
THE
NEW
CONSTRUCTS
ADDED
TO
TO
THE
ORIGINAL
UT
AUT
CONCEPTUALIZATION
WE
WILL
DROP
EXTEND
UTAUT
I
E
HEDONIC
MOTIVATION
PRICE
VALUE
AND
VOLUNTARINESS
WHICH
IS
ONE
OF
THE
MODERATORS
AND
ADD
A
LINK
HABIT
TO
FORMULATE
BETWEEN
FACILITATING
CONDITIONS
MODERATED
BY
AGE
GENDER
AND
EXPERIENCE
AND
BEHAVIORAL
INTENTION
WE
WILL
ALSO
INCLUDE
MODERATED
RELATIONSHIPS
MODERATED
BY
AGE
GENDER
UNIFIED
THEORY
OF
ACCEPTANCE
AND
USE
OF
AND
EXPERIENCE
PER
THE
ORIGINAL
UT
AUT
PERTAINING
TO
THE
TECHNOLOGY
UTAUT
THREE
NEW
CONSTRUCTS
BASED
ON
A
REVIEW
OF
THE
EXTANT
LITERATURE
VENKATESH
ET
AL
THIS
WORK
IS
EXPECTED
TO
MAKE
IMPORTANT
THEORETICAL
AND
DEVELOPED
UTAUT
AS
A
COMPREHENSIVE
SYNTHESIS
OF
MANAGERIAL
CONTRIBUTIONS
IT
SITS
AT
THE
CONFLUENCE
OF
SEVERAL
PRIOR
TECHNOLOGY
ACCEPTANCE
RESEARCH
UTAUT
HAS
FOUR
KEY
SUB
STREAMS
RELATED
TO
TECHNOLOGY
ACCEPTANCE
AND
USE
CONSTRUCTS
I
E
PERFORMANCE
EXPECTANCY
EFFORT
EXPECTANCY
RESEARCH
ТАМ
AND
UTAUT
E
G
VENKATESH
ET
AL
SOCIAL
INFLUENCE
AND
FACILITATING
CONDITIONS
THAT
INFLUENCE
EXTENSIONS
TO
ТАМ
E
G
VAN
DER
HEIJDEN
QUESTIONS
BEHAVIORAL
INTENTION
TO
USE
A
TECHNOLOGY
AND
OR
TECHNOLOGY
AND
CRITICISMS
ABOUT
ТАМ
E
G
BENBASAT
AND
BARKI
USE
WE
ADAPT
THESE
CONSTRUCTS
AND
DEFINITIONS
FROM
UTAUT
VENKATESH
ET
AL
TECHNOLOGY
USE
E
G
BURTON
JONES
TO
THE
CONSUMER
TECHNOLOGY
ACCEPTANCE
AND
USE
CONTEXT
AND
STRAUB
AND
IS
CONTINUANCE
E
G
BHATTACHERJEE
HERE
PERFORMANCE
EXPECTANCY
IS
DEFINED
AS
THE
DEGREE
TO
HONG
ET
AL
THONG
ET
AL
AND
HABIT
E
G
WHICH
USING
A
TECHNOLOGY
WILL
PROVIDE
BENEFITS
TO
CONSUMERS
LIMAYEM
ET
AL
BY
BUILDING
ON
AND
EXTENDING
PRIOR
IN
PERFORMING
CERTAIN
ACTIVITIES
EFFORT
EXPECTANCY
IS
THE
WORK
WITHIN
THIS
BROAD
STREAM
WE
EXPECT
TO
MAKE
THREE
KEY
DEGREE
OF
EASE
ASSOCIATED
WITH
CONSUMERS
USE
OF
TECHNOLOGY
CONTRIBUTIONS
FIRST
BY
INCORPORATING
THREE
SALIENT
CONSTRUCTS
SOCIAL
INFLUENCE
IS
THE
EXTENT
TO
WHICH
CONSUMERS
PERCEIVE
INTO
UTAUT
WE
EXPAND
THE
OVERALL
NOMOLOGICAL
NETWORK
THAT
IMPORTANT
OTHERS
E
G
FAMILY
AND
FRIENDS
BELIEVE
THEY
RELATED
TO
TECHNOLOGY
USE
THE
IMPORTANCE
OF
THE
HABIT
EXTEN
SHOULD
USE
A
PARTICULAR
TECHNOLOGY
AND
FACILITATING
CONDITIONS
SION
FOR
INSTANCE
IS
EVEN
ENDORSED
BY
DETRACTORS
SUCH
AS
REFER
TO
CONSUMERS
PERCEPTIONS
OF
THE
RESOURCES
AND
SUPPORT
BENBASAT
AND
BARKI
WHO
NOTED
THAT
IT
HAS
BEEN
LARGELY
AVAILABLE
TO
PERFORM
A
BEHAVIOR
E
G
BROWN
AND
VENKATESH
OVERLOOKED
IN
THIS
STREAM
OF
WORK
MORE
BROADLY
BOTH
VENKATESH
ET
AL
ACCORDING
TO
UTAUT
PERFOR
BAGOZZI
AND
VENKATESH
ET
AL
HAVE
CALLED
FOR
MANCE
EXPECTANCY
EFFORT
EXPECTANCY
AND
SOCIAL
INFLUENCE
ARE
ALTERNATIVE
THEORETICAL
MECHANISMS
IN
ORDER
TO
FOSTER
PROGRESS
THEORIZED
TO
INFLUENCE
BEHAVIORAL
INTENTION
TO
USE
A
TECH
IN
THIS
MATURE
STREAM
OF
WORK
THE
INTEGRATION
OF
HEDONIC
NOLOGY
WHILE
BEHAVIORAL
INTENTION
AND
FACILITATING
CONDITIONS
MOTIVATION
PRICE
VALUE
AND
HABIT
BRINGS
SUCH
NEW
MECH
DETERMINE
TECHNOLOGY
USE
ALSO
INDIVIDUAL
DIFFERENCE
VARI
ANISMS
I
E
AFFECT
MONETARY
CONSTRAINTS
AND
AUTOMATICKY
ABLES
NAMELY
AGE
GENDER
AND
EXPERIENCE
NOTE
THAT
WE
DROP
TIED
TO
THE
NEW
CONSTRUCTS
INTO
THE
LARGELY
COGNITION
AND
VOLUNTARINESS
WHICH
IS
PART
OF
THE
ORIGINAL
UTAUT
ARE
INTENTION
BASED
UTAUT
SECOND
BY
ADAPTING
AND
EXTENDING
THEORIZED
TO
MODERATE
VARIOUS
UTAUT
RELATIONSHIPS
THE
UTAUT
TO
INCLUDE
NEW
CONSTRUCTS
AND
ALTERING
EXISTING
LIGHTER
LINES
IN
FIGURE
SHOW
THE
ORIGINAL
UTAUT
ALONG
WITH
RELATIONSHIPS
THIS
WORK
FURTHERS
THE
GENERALIZABILITY
OF
THE
ONE
MODIFICATION
NOTED
ABOVE
THAT
WAS
NECESSARY
TO
MAKE
UTAUT
TO
A
DIFFERENT
CONTEXT
I
E
CONSUMER
IT
THAT
IS
AN
THE
THEORY
APPLICABLE
TO
THIS
CONTEXT
IMPORTANT
STEP
TO
ADVANCE
A
THEORY
SEE
ALVESSON
AND
KÄRREMAN
JOHNS
FINALLY
FROM
A
PRACTICAL
STAND
POINT
THE
RICH
UNDERSTANDING
GAINED
CAN
HELP
ORGANIZATIONS
IN
THE
CONSUMER
TECHNOLOGY
INDUSTRY
BETTER
DESIGN
AND
MARKET
TO
THE
ORIGINAL
CONCEPTUALIZATION
OF
UTAUT
WE
DROP
VOLUNTARINESS
TECHNOLOGIES
TO
CONSUMERS
IN
VARIOUS
DEMOGRAPHIC
GROUPS
AT
AS
A
MODERATING
VARIABLE
THIS
CHANGE
IS
NECESSARY
TO
MAKE
UTAUT
APPLI
VARIOUS
STAGES
OF
THE
USE
CURVE
CABLE
IN
THE
CONTEXT
OF
A
VOLUNTARY
BEHAVIOR
SUCH
AS
THE
ONE
WE
ARE
STUDYING
I
E
VOLUNTARY
TECHNOLOGY
ACCEPTANCE
AND
USE
AMONG
CONSUMERS
WHILE
IN
GENERAL
VOLUNTARINESS
CAN
BE
PERCEIVED
AS
A
CONTINUUM
FROM
ABSOLUTELY
MANDATORY
TO
ABSOLUTELY
VOLUNTARY
CONSUMERS
HAVE
NO
ORGANIZATIONAL
MAN
THEORY
DATE
AND
THUS
MOST
CONSUMER
BEHAVIORS
ARE
COMPLETELY
VOLUNTARY
RESULTING
IN
NO
VARIANCE
IN
THE
VOLUNTARINESS
CONSTRUCT
THUS
WE
DROP
VOLUNTARINESS
AS
BACKGROUND
A
RELEVANT
CONSTRUCT
FROM
THE
MODEL
THIS
WILL
ONLY
AFFECT
ONE
RELATIONSHIP
I
E
THE
SOCIAL
INFLUENCE
BEHAVIORAL
INTENTION
RELATIONSHIP
THIS
SOCIAL
INFLUENCE
TO
BEHAVIORAL
INTENTION
RELATIONSHIP
THUS
REDUCES
TO
A
FOUR
WAY
IN
THIS
SECTION
WE
PRESENT
AN
OVERVIEW
OF
THE
UNIFIED
THEORY
INTERACTION
EFFECT
OF
SOCIAL
INFLUENCE
X
GENDER
X
AGE
X
EXPERIENCE
ON
OF
ACCEPTANCE
AND
USE
OF
TECHNOLOGY
UTAUT
AND
EXPLAIN
THE
BASIC
MODIFICATIONS
WE
MAKE
TO
FIT
UTAUT
TO
THE
CON
BEHAVIORAL
INTENTION
INSTEAD
OF
THE
ORIGINAL
FIVE
WAY
INTERACTION
IN
UTAUT
THERE
IS
EVIDENCE
OF
SUCH
A
FOUR
WAY
INTERACTION
IN
THE
VOLUNTARY
USERS
SUB
SAMPLE
IN
THE
SPLIT
SAMPLE
ANALYSIS
REPORTED
IN
MORRIS
ET
AL
MIS
QUARTERLY
VOL
NO
MARCH
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
VENKATESH
ET
AI
CONSUMER
ACCEPTANCE
AND
USE
OF
IT
IN
ORDER
TO
EXAMINE
THE
PRIOR
RESEARCH
ON
UT
AUT
WE
REVIEWED
PAPERS
PUBLISHED
IN
THE
AIS
SENIOR
SCHOLARS
BASKET
OF
EIGHT
JOURNALS
AND
THEN
EXPANDED
OUR
SEARCH
TO
INCLUDE
OTHER
JOURNALS
AND
CONFERENCE
PROCEEDINGS
THIS
LED
US
TO
OVER
ARTICLES
THAT
WE
THEN
CAREFULLY
EXAMINED
FOR
PATTERNS
WE
FOUND
THAT
MANY
OF
THE
ARTICLES
CITED
THE
ORIGINAL
UT
AUT
ARTICLE
AS
A
GENERAL
REFERENCE
TO
THE
BODY
OF
WORK
ON
ADOPTION
AND
NEITHER
DID
THEY
APPLY
NOR
EXTEND
UT
AUT
OUR
REVIEW
AND
SYNTHESIS
CONFIRM
THAT
THERE
HAS
BEEN
SOME
WORK
IN
FURTHERING
UT
AUT
DESPITE
THESE
CONTRIBUTIONS
IT
IS
WORTH
NOTING
THAT
MOST
PUBLISHED
STUDIES
HAVE
ONLY
STUDIED
A
SUBSET
OF
THE
UT
AUT
CONSTRUCTS
THE
EXTENSIONS
PARTICULARLY
THE
ADDITION
OF
NEW
CONSTRUCTS
HAVE
BEEN
HELPFUL
TO
EXPAND
THE
THEORETICAL
HORIZONS
OF
UT
AUT
HOWEVER
THE
ADDITION
OF
CONSTRUCTS
HAS
BEEN
ON
AN
AD
HOC
BASIS
WITHOUT
CAREFUL
THEO
RETICAL
CONSIDERATION
TO
THE
CONTEXT
BEING
STUDIED
AND
THE
WORKS
HAVE
NOT
NECESSARILY
ATTEMPTED
TO
SYSTEMATICALLY
CHOOSE
THEORETICALLY
COMPLEMENTARY
MECHANISMS
TO
WHAT
IS
ALREADY
CAPTURED
IN
UT
AUT
SUCH
COMPLEMENTARY
CONSTRUCTS
CAN
HELP
EXPAND
THE
SCOPE
AND
GENERALIZABILITY
OF
UT
AUT
IDENTIFYING
CONSTRUCTS
TO
INCORPORATE
INTO
UTAUT
BUILDING
ON
OUR
DISCUSSION
IN
THE
INTRODUCTION
HERE
WE
PRESENT
AN
OVERVIEW
OF
THE
THREE
CONSTRUCTS
WE
ADD
TO
UTAUT
AND
DISCUSS
THE
DETAILS
OF
THE
THREE
CONSTRUCTS
WE
ADOPT
AN
APPROACH
THAT
COMPLEMENTS
THE
CURRENT
CONSTRUCTS
IN
UTAUT
FIRST
UTAUT
TAKES
AN
APPROACH
THAT
EMPHASIZES
THE
IMPOR
TANCE
OF
UTILITARIAN
VALUE
EXTRINSIC
MOTIVATION
THE
CONSTRUCT
TIED
TO
UTILITY
NAMELY
PERFORMANCE
EXPECTANCY
HAS
CONSIS
TENTLY
BEEN
SHOWN
TO
BE
THE
STRONGEST
PREDICTOR
OF
BEHAVIORAL
INTENTION
SEE
VENKATESH
ET
AL
COMPLEMENTING
THIS
PERSPECTIVE
FROM
MOTIVATION
THEORY
IS
INTRINSIC
OR
HEDONIC
MOTIVATION
VALLERAND
HEDONIC
MOTIVATION
HAS
BEEN
INCLUDED
AS
A
KEY
PREDICTOR
IN
MUCH
CONSUMER
BEHAVIOR
RESEARCH
HOLBROOK
AND
HIRSCHMAN
AND
PRIOR
IS
RESEARCH
IN
THE
CONSUMER
TECHNOLOGY
USE
CONTEXT
BROWN
AND
VENKATESH
SECOND
FROM
THE
PERSPECTIVE
OF
EFFORT
EXPECTANCY
IN
ORGANIZATIONAL
SETTINGS
EMPLOYEES
ASSESS
TIME
AND
EFFORT
IN
FORMING
VIEWS
ABOUT
THE
OVERALL
EFFORT
ASSOCIATED
MIS
QUARTERLY
VOL
NO
MARCH
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
VENKATESH
ET
AL
CONSUMER
ACCEPTANCE
AND
USE
OF
IT
WITH
THE
ACCEPTANCE
AND
USE
OF
TECHNOLOGIES
IN
A
CONSUMER
COST
FOR
USING
THEM
DODDS
ET
AL
THE
PRICE
VALUE
IS
TECHNOLOGY
USE
CONTEXT
PRICE
IS
ALSO
AN
IMPORTANT
FACTOR
AS
POSITIVE
WHEN
THE
BENEFITS
OF
USING
A
TECHNOLOGY
ARE
PERCEIVED
UNLIKE
WORKPLACE
TECHNOLOGIES
CONSUMERS
HAVE
TO
BEAR
THE
TO
BE
GREATER
THAN
THE
MONETARY
COST
AND
SUCH
PRICE
VALUE
HAS
COSTS
ASSOCIATED
WITH
THE
PURCHASE
OF
DEVICES
AND
SERVICES
A
POSITIVE
IMPACT
ON
INTENTION
THUS
WE
ADD
PRICE
VALUE
AS
A
CONSISTENT
WITH
THIS
ARGUMENT
MUCH
CONSUMER
BEHAVIOR
PREDICTOR
OF
BEHAVIORAL
INTENTION
TO
USE
A
TECHNOLOGY
RESEARCH
HAS
INCLUDED
CONSTRUCTS
RELATED
TO
COST
TO
EXPLAIN
CONSUMERS
ACTIONS
DODDS
ET
AL
FINALLY
UT
AUT
AND
RELATED
MODELS
HINGE
ON
INTENTIONALITY
AS
A
KEY
UNDERLYING
EXPERIENCE
AND
HABIT
THEORETICAL
MECHANISM
THAT
DRIVES
BEHAVIOR
MANY
INCLUDING
DETRACTORS
OF
THIS
CLASS
OF
MODELS
HAVE
ARGUED
THAT
THE
INCLU
FINALLY
WE
ADD
HABIT
TO
UTAUT
PRIOR
RESEARCH
ON
TECH
SION
OF
ADDITIONAL
THEORETICAL
MECHANISMS
IS
IMPORTANT
IN
A
NOLOGY
USE
HAS
INTRODUCED
TWO
RELATED
YET
DISTINCT
CONSTRUCTS
USE
RATHER
THAN
INITIAL
ACCEPTANCE
CONTEXT
HABIT
HAS
BEEN
NAMELY
EXPERIENCE
AND
HABIT
EXPERIENCE
AS
CONCEPTUALIZED
SHOWN
TO
BE
A
CRITICAL
FACTOR
PREDICTING
TECHNOLOGY
USE
E
G
IN
PRIOR
RESEARCH
E
G
KIM
AND
MALHOTRA
VENKATESH
ET
KIM
AND
MALHOTRA
KIM
ET
AL
LIMAYEM
ET
AL
AL
REFLECTS
AN
OPPORTUNITY
TO
USE
A
TARGET
TECHNOLOGY
BASED
ON
THE
ABOVE
GAPS
IN
UTAUT
AND
THE
ASSO
AND
IS
TYPICALLY
OPERATIONALIZED
AS
THE
PASSAGE
OF
TIME
FROM
CIATED
THEORETICAL
EXPLANATION
PROVIDED
WE
INTEGRATE
HEDONIC
THE
INITIAL
USE
OF
A
TECHNOLOGY
BY
AN
INDIVIDUAL
FOR
INSTANCE
MOTIVATION
PRICE
VALUE
AND
HABIT
INTO
UTAUT
IN
ORDER
TO
KIM
ET
AL
MEASURE
HAS
FIVE
CATEGORIES
WITH
DIFFERENT
TAILOR
IT
TO
THE
CONSUMER
TECHNOLOGY
USE
CONTEXT
PERIODS
OF
EXPERIENCE
VENKATESH
ET
AL
OPERATIONA
LIZED
EXPERIENCE
AS
THREE
LEVELS
BASED
ON
PASSAGE
OF
TIME
POST
TRAINING
WAS
WHEN
THE
SYSTEM
WAS
INITIALLY
AVAILABLE
FOR
HEDONIC
MOTIVATION
USE
MONTH
LATER
AND
MONTHS
LATER
HABIT
HAS
BEEN
DEFINED
AS
THE
EXTENT
TO
WHICH
PEOPLE
TEND
TO
PERFORM
HEDONIC
MOTIVATION
IS
DEFINED
AS
THE
FUN
OR
PLEASURE
DERIVED
BEHAVIORS
AUTOMATICALLY
BECAUSE
OF
LEARNING
LIMAYEM
ET
AL
FROM
USING
A
TECHNOLOGY
AND
IT
HAS
BEEN
SHOWN
TO
PLAY
AN
WHILE
KIM
ET
AL
EQUATE
HABIT
WITH
AUTOMATICITY
IMPORTANT
ROLE
IN
DETERMINING
TECHNOLOGY
ACCEPTANCE
AND
ALTHOUGH
USE
CONCEPTUALIZED
RATHER
SIMILARLY
HABIT
HAS
BEEN
BROWN
AND
VENKATESH
IN
IS
RESEARCH
SUCH
HEDONIC
OPERATIONALIZED
IN
TWO
DISTINCT
WAYS
FIRST
HABIT
IS
VIEWED
AS
MOTIVATION
CONCEPTUALIZED
AS
PERCEIVED
ENJOYMENT
HAS
PRIOR
BEEN
BEHAVIOR
SEE
KIM
AND
MALHOTRA
AND
SECOND
FOUND
TO
INFLUENCE
TECHNOLOGY
ACCEPTANCE
AND
USE
DIRECTLY
HABIT
IS
MEASURED
AS
THE
EXTENT
TO
WHICH
AN
INDIVIDUAL
BELIEVES
E
G
VAN
DER
HEIJDEN
THONG
ET
AL
IN
THE
CON
THE
BEHAVIOR
TO
BE
AUTOMATIC
E
G
LIMAYEM
ET
AL
SUMER
CONTEXT
HEDONIC
MOTIVATION
HAS
ALSO
BEEN
FOUND
CONSEQUENTLY
TO
BE
THERE
ARE
AT
LEAST
TWO
KEY
DISTINCTIONS
BETWEEN
AN
IMPORTANT
DETERMINANT
OF
TECHNOLOGY
ACCEPTANCE
AND
EXPERIENCE
USE
AND
HABIT
ONE
DISTINCTION
IS
THAT
EXPERIENCE
IS
A
E
G
BROWN
AND
VENKATESH
CHILDERS
ET
AL
NECESSARY
BUT
NOT
SUFFICIENT
CONDITION
FOR
THE
FORMATION
OF
THUS
WE
ADD
HEDONIC
MOTIVATION
AS
A
PREDICTOR
OF
CONSUMERS
HABIT
A
SECOND
DISTINCTION
IS
THAT
THE
PASSAGE
OF
CHRONO
BEHAVIORAL
INTENTION
TO
USE
A
TECHNOLOGY
LOGICAL
TIME
I
E
EXPERIENCE
CAN
RESULT
IN
THE
FORMATION
OF
DIFFERING
LEVELS
OF
HABIT
DEPENDING
ON
THE
EXTENT
OF
INTERACTION
AND
FAMILIARITY
THAT
IS
DEVELOPED
WITH
A
TARGET
TECHNOLOGY
F
OR
PRICE
VALUE
INSTANCE
IN
A
SPECIFIC
PERIOD
OF
TIME
SAY
MONTHS
DIFFERENT
INDIVIDUALS
CAN
FORM
DIFFERENT
LEVELS
OF
HABIT
DEPENDING
ON
AN
IMPORTANT
DIFFERENCE
BETWEEN
A
CONSUMER
USE
SETTING
THEIR
AND
USE
OF
A
TARGET
TECHNOLOGY
THIS
IS
PERHAPS
WHAT
THE
ORGANIZATIONAL
USE
SETTING
WHERE
UTAUT
WAS
DEVELOPED
PROMPTED
LIMAYEM
ET
AL
TO
INCLUDE
PRIOR
USE
AS
A
IS
THAT
CONSUMERS
USUALLY
BEAR
THE
MONETARY
COST
OF
SUCH
PREDICTOR
USE
OF
HABIT
AND
LIKEWISE
KIM
AND
MALHOTRA
WHEREAS
EMPLOYEES
DO
NOT
THE
COST
AND
PRICING
STRUCTURE
CONTROLLED
FOR
EXPERIENCE
WITH
THE
TARGET
TECHNOLOGY
IN
THEIR
MAY
HAVE
A
SIGNIFICANT
IMPACT
ON
CONSUMERS
TECHNOLOGY
ATTEMPT
USE
TO
UNDERSTAND
THE
IMPACT
OF
HABIT
ON
TECHNOLOGY
USE
FOR
INSTANCE
THERE
IS
EVIDENCE
THAT
THE
POPULARITY
OF
AJZEN
SHORT
AND
FISHBEIN
ALSO
NOTED
THAT
FEEDBACK
FROM
MESSAGING
SERVICES
SMS
IN
CHINA
IS
DUE
TO
THE
LOW
PREVIOUS
PRICING
EXPERIENCES
WILL
INFLUENCE
VARIOUS
BELIEFS
AND
OF
SMS
RELATIVE
TO
OTHER
TYPES
OF
MOBILE
INTERNET
APPLICATIONS
CONSEQUENTLY
FUTURE
BEHAVIORAL
PERFORMANCE
IN
THIS
CONTEXT
CHAN
ET
AL
IN
MARKETING
RESEARCH
THE
MONETARY
HABIT
COST
IS
A
PERCEPTUAL
CONSTRUCT
THAT
REFLECTS
THE
RESULTS
OF
PRIOR
PRICE
IS
USUALLY
CONCEPTUALIZED
TOGETHER
WITH
THE
QUALITY
EXPERIENCES
OF
PRODUCTS
OR
SERVICES
TO
DETERMINE
THE
PERCEIVED
VALUE
OF
PRO
DUCTS
OR
SERVICES
ZEITHAML
WE
FOLLOW
THESE
IDEAS
THE
EMPIRICAL
AND
FINDINGS
ABOUT
THE
ROLE
OF
HABIT
IN
TECHNOLOGY
DEFINE
PRICE
VALUE
AS
CONSUMERS
COGNITIVE
TRADEOFF
BETWEEN
USE
HAVE
DELINEATED
DIFFERENT
UNDERLYING
PROCESSES
BY
WHICH
THE
PERCEIVED
BENEFITS
OF
THE
APPLICATIONS
AND
THE
MONETARY
HABIT
INFLUENCES
TECHNOLOGY
USE
RELATED
TO
THE
OPERATION
MIS
QUARTERLY
VOL
NO
MARCH
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
VENKATESH
ET
AI
CONSUMER
ACCEPTANCE
AND
USE
OF
IT
ALIZATION
OF
HABIT
AS
PRIOR
USE
KIM
AND
MALHOTRA
FOUND
THAT
PRIOR
USE
WAS
A
STRONG
PREDICTOR
OF
FUTURE
TECHNOLOGY
USE
GIVEN
THAT
THERE
ARE
DETRACTORS
TO
THE
OPERATIONALIZATION
OF
HABIT
AS
PRIOR
USE
SEE
AJZEN
SOME
WORK
SUCH
AS
THAT
OF
LIMAYEM
ET
AL
HAS
EMBRACED
A
SURVEY
AND
PERCEPTION
BASED
APPROACH
TO
THE
MEASUREMENT
OF
HABIT
SUCH
AN
OPERATIONALIZATION
OF
HABIT
HAS
BEEN
SHOWN
TO
HAVE
A
DIRECT
EFFECT
ON
TECHNOLOGY
USE
OVER
AND
ABOVE
THE
EFFECT
OF
INTENTION
AND
ALSO
TO
MODERATE
THE
EFFECT
OF
INTENTION
ON
TECHNOLOGY
USE
SUCH
THAT
INTENTION
IS
LESS
IMPORTANT
WITH
INCREASING
HABIT
LIMAYEM
ET
AL
SIMILAR
FINDINGS
IN
THE
CONTEXT
OF
OTHER
BEHAVIORS
HAVE
BEEN
REPORTED
IN
PSYCHOLOGY
RESEARCH
SEE
OUELLETTE
AND
WOOD
IN
THIS
WORK
WE
ADOPT
THE
ABOVE
DISCUSSED
CONCEPTUAL
DEFINI
TIONS
OF
EXPERIENCE
AND
HABIT
AS
WE
WILL
ALSO
NOTE
LATER
WE
OPERATIONALIZE
EXPERIENCE
IN
KEEPING
WITH
MUCH
PRIOR
RESEARCH
AS
THE
PASSAGE
OF
TIME
FROM
THE
INITIAL
USE
OF
A
TARGET
TECH
NOLOGY
AND
WE
OPERATIONALIZE
HABIT
IN
KEEPING
WITH
LIMAYEM
ET
AL
AS
A
SELF
REPORTED
PERCEPTION
HYPOTHESIS
DEVELOPMENT
IN
THIS
SECTION
WE
PRESENT
THE
HYPOTHESES
THAT
WE
INCORPORATE
TO
EXTEND
UT
AUT
TO
THE
CONSUMER
CONTEXT
FIGURE
SHOWS
THE
ORIGINAL
UTAUT
AND
OUR
PROPOSED
EXTENSIONS
IMPACT
OF
FACILITATING
CONDITIONS
MODERATED
BY
AGE
GENDER
AND
EXPERIENCE
THE
FIRST
CHANGE
THAT
WE
MAKE
TO
TAILOR
UTAUT
TO
THE
CON
SUMER
TECHNOLOGY
USE
CONTEXT
IS
THE
ADDITION
OF
A
DIRECT
RELA
TIONSHIP
FROM
FACILITATING
CONDITIONS
TO
BEHAVIORAL
INTENTION
OVER
AND
ABOVE
THE
EXISTING
RELATIONSHIP
BETWEEN
FACILITATING
CONDITIONS
AND
TECHNOLOGY
USE
IN
UTAUT
FACILITATING
CONDI
TIONS
IS
HYPOTHESIZED
TO
INFLUENCE
TECHNOLOGY
USE
DIRECTLY
BASED
ON
THE
IDEA
THAT
IN
AN
ORGANIZATIONAL
ENVIRONMENT
FACILITATING
CONDITIONS
CAN
SERVE
AS
THE
PROXY
FOR
ACTUAL
BEHAVIORAL
CONTROL
AND
INFLUENCE
BEHAVIOR
DIRECTLY
AJZEN
THIS
IS
BECAUSE
MANY
ASPECTS
OF
FACILITATING
CONDI
TIONS
SUCH
AS
TRAINING
AND
SUPPORT
PROVIDED
WILL
BE
FREELY
AVAILABLE
WITHIN
AN
ORGANIZATION
AND
FAIRLY
INVARIANT
ACROSS
USERS
IN
CONTRAST
THE
FACILITATION
IN
THE
ENVIRONMENT
THAT
IS
AVAILABLE
TO
EACH
CONSUMER
CAN
VARY
SIGNIFICANTLY
ACROSS
APPLICATION
VENDORS
TECHNOLOGY
GENERATIONS
MOBILE
DEVICES
AND
SO
ON
IN
THIS
CONTEXT
FACILITATING
CONDITIONS
WILL
ACT
MORE
LIKE
PERCEIVED
BEHAVIORAL
CONTROL
IN
THE
THEORY
OF
PLANNED
BEHAVIOR
TPB
AND
INFLUENCE
BOTH
INTENTION
AND
BEHAVIOR
AJZEN
SPECIFICALLY
A
CONSUMER
WHO
HAS
ACCESS
TO
A
FAVORABLE
SET
OF
FACILITATING
CONDITIONS
IS
MORE
MIS
QUARTERLY
VOL
NO
MARCH
LIKELY
TO
HAVE
A
HIGHER
INTENTION
TO
USE
A
TECHNOLOGY
FOR
INSTANCE
IF
WE
WERE
TO
CONSIDER
MOBILE
INTERNET
CONSUMERS
HAVE
DIFFERENT
LEVELS
OF
ACCESS
TO
INFORMATION
AND
OTHER
RESOURCES
THAT
FACILITATE
THEIR
USE
SUCH
AS
ONLINE
TUTORIALS
IN
GENERAL
ALL
THINGS
BEING
EQUAL
A
CONSUMER
WITH
A
LOWER
LEVEL
OF
FACILITATING
CONDITIONS
WILL
HAVE
LOWER
INTENTION
TO
USE
MOBILE
INTERNET
ALSO
CONSUMERS
WITH
DIFFERENT
PHONES
MAY
EXPERIENCE
DIFFERENT
RATES
OF
DATA
TRANSFER
AND
CONSEQUENTLY
HAVE
DIFFERENT
LEVELS
OF
INTENTION
TO
USE
MOBILE
INTERNET
THUS
IN
THE
CONSUMER
CONTEXT
WE
FOLLOW
THE
GENERAL
MODEL
OF
TPB
AND
LINK
FACILITATING
CONDITIONS
TO
BOTH
BEHAVIORAL
INTENTION
AND
BEHAVIOR
WE
EXPECT
THE
EFFECT
OF
FACILITATING
CONDITIONS
ON
BEHAVIORAL
INTENTION
TO
BE
MODERATED
BY
AGE
GENDER
AND
EXPERIENCE
OLDER
CONSUMERS
TEND
TO
FACE
MORE
DIFFICULTY
IN
PROCESSING
NEW
OR
COMPLEX
INFORMATION
THUS
AFFECTING
THEIR
LEARNING
OF
NEW
TECHNOLOGIES
MORRIS
ET
AL
PLUDE
AND
HOY
ER
THIS
DIFFICULTY
MAY
BE
ATTRIBUTED
TO
THE
DECLINE
IN
COGNITIVE
AND
MEMORY
CAPABILITIES
ASSOCIATED
WITH
THE
AGING
PROCESS
POSNER
HENCE
COMPARED
TO
YOUNGER
CON
SUMERS
OLDER
CONSUMERS
TEND
TO
PLACE
GREATER
IMPORTANCE
ON
THE
AVAILABILITY
OF
ADEQUATE
SUPPORT
HALL
AND
MANSFIELD
MOREOVER
MEN
MORE
THAN
WOMEN
ARE
WILLING
TO
SPEND
MORE
EFFORT
TO
OVERCOME
DIFFERENT
CONSTRAINTS
AND
DIFFI
CULTIES
TO
PURSUE
THEIR
GOALS
WITH
WOMEN
TENDING
TO
FOCUS
MORE
ON
THE
MAGNITUDE
OF
EFFORT
INVOLVED
AND
THE
PROCESS
TO
ACHIEVE
THEIR
OBJECTIVES
HENNING
AND
JARDIM
ROTTER
AND
PORTUGAL
VENKATESH
AND
MORRIS
THUS
MEN
TEND
TO
RELY
LESS
ON
FACILITATING
CONDITIONS
WHEN
CONSIDERING
USE
OF
A
NEW
TECHNOLOGY
WHEREAS
WOMEN
TEND
TO
PLACE
GREATER
EMPHASIS
ON
EXTERNAL
SUPPORTING
FACTORS
THIS
CAN
ALSO
BE
EXPLAINED
PARTLY
BY
THE
COGNITIONS
RELATED
TO
GENDER
ROLES
IN
SOCIETY
WHERE
MEN
TEND
TO
BE
MORE
TASK
ORIENTED
E
G
LYNOTT
AND
MCCANDLESS
EXPERIENCE
CAN
ALSO
MODERATE
THE
RELATIONSHIP
BETWEEN
FACILITATING
CONDITIONS
AND
BEHAVIORAL
INTENTION
GREATER
EXPERIENCE
CAN
LEAD
TO
GREATER
FAMILIARITY
WITH
THE
TECHNOLOGY
AND
BETTER
KNOWLEDGE
STRUCTURES
TO
FACILI
TATE
USER
LEARNING
THUS
REDUCING
USER
DEPENDENCE
ON
EXTERNAL
SUPPORT
ALBA
AND
HUTCHINSON
LIKEWISE
A
META
ANALYSIS
SHOWED
THAT
USERS
WITH
LESS
EXPERIENCE
OR
FAMILIARITY
WILL
DEPEND
MORE
ON
FACILITATING
CONDITIONS
NOTANI
MOREOVER
GENDER
AGE
AND
EXPERIENCE
HAVE
A
JOINT
IMPACT
ON
THE
LINK
BETWEEN
FACILITATING
CONDITIONS
AND
INTENTION
GENDER
DIFFERENCES
IN
TASK
ORIENTATION
AND
EMPHASIS
ON
INSTRUMEN
TALITY
WILL
BECOME
MORE
PRONOUNCED
WITH
INCREASING
AGE
MORRIS
ET
AL
AS
PEOPLE
BECOME
OLDER
PARTICULARLY
FROM
TEENAGERS
TO
ADULTS
THE
DIFFERENTIATION
OF
THEIR
GENDER
ROLES
WILL
BE
MORE
SIGNIFICANT
THUS
OLDER
WOMEN
WILL
PLACE
MORE
OF
AN
EMPHASIS
ON
FACILITATING
CONDITIONS
INDEED
THERE
IS
EMPIRICAL
EVIDENCE
THAT
GENDER
DIFFERENCES
IN
THE
IMPOR
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
VENKATESH
ET
AL
CONSUMER
ACCEPTANCE
AND
USE
OF
IT
TANCE
OF
FACILITATING
CONDITIONS
BECOME
MORE
PRONOUNCED
WITH
NOLOGY
USE
DECISIONS
CONSEQUENTLY
THE
MODERATING
EFFECT
OF
INCREASING
AGE
MORRIS
ET
AL
VENKATESH
ET
AL
IN
EXPERIENCE
WILL
DIFFER
ACROSS
AGE
AND
GENDER
THUS
WE
CONCERT
WITH
AGE
AND
GENDER
EXPERIENCE
CAN
FURTHER
MODERATE
HYPOTHESIZE
THE
RELATIONSHIP
BETWEEN
FACILITATING
CONDITIONS
AND
BEHAVIORAL
INTENTION
THIS
IS
BECAUSE
WHEN
CONSUMERS
HAVE
NOT
DEVEL
AGE
GENDER
AND
EXPERIENCE
WILL
MODERATE
THE
EFFECT
OF
OPED
THEIR
KNOWLEDGE
AND
SKILLS
I
E
WHEN
THEY
HAVE
LESS
HEDONIC
MOTIVATION
ON
BEHAVIORAL
INTENTION
SUCH
THAT
THE
EXPERIENCE
THE
IMPACTS
OF
AGE
AND
GENDER
ON
CONSUMER
EFFECT
WILL
BE
STRONGER
AMONG
YOUNGER
MEN
IN
EARLY
LEARNING
WILL
BE
MORE
SIGNIFICANT
THAN
WHEN
THEY
HAVE
STAGES
OF
EXPERIENCE
WITH
A
TECHNOLOGY
ACQUIRED
ENOUGH
KNOWLEDGE
OR
EXPERTISE
ABOUT
THE
TECHNOLOGY
I
E
WHEN
THEY
HAVE
MORE
EXPERIENCE
THE
DEPENDENCE
ON
FACILITATING
CONDITIONS
IS
OF
GREATER
IMPORTANCE
TO
OLDER
IMPACT
OF
PRICE
VALUE
MODERATED
BY
WOMEN
IN
THE
EARLY
STAGES
OF
TECHNOLOGY
USE
BECAUSE
AS
AGE
AND
GENDER
DISCUSSED
EARLIER
THEY
PLACE
GREATER
EMPHASIS
ON
REDUCING
THE
LEARNING
EFFORT
REQUIRED
IN
USING
NEW
TECHNOLOGY
THUS
WE
WE
EXPECT
THE
EFFECT
OF
PRICE
VALUE
ON
BEHAVIORAL
INTENTION
TO
HYPOTHESIZE
BE
MODERATED
BY
AGE
AND
GENDER
AGAIN
WE
DRAW
FROM
THEORIES
ABOUT
SOCIAL
ROLES
E
G
BAKAN
DEAUX
AND
HI
AGE
GENDER
AND
EXPERIENCE
WILL
MODERATE
THE
EFFECT
OF
LEWIS
IN
THEORIZING
ABOUT
THE
DIFFERENTIAL
IMPORTANCE
OF
FACILITATING
CONDITIONS
ON
BEHAVIORAL
INTENTION
SUCH
THAT
PRICE
VALUE
AMONG
MEN
VERSUS
WOMEN
AND
AMONG
YOUNGER
THE
EFFECT
WILL
BE
STRONGER
AMONG
OLDER
WOMEN
IN
EARLY
VERSUS
OLDER
INDIVIDUALS
THIS
LITERATURE
SUGGESTS
THAT
MEN
AND
STAGES
OF
EXPERIENCE
WITH
A
TECHNOLOGY
WOMEN
TYPICALLY
TAKE
ON
DIFFERENT
SOCIAL
ROLES
AND
EXHIBIT
DIFFERENT
ROLE
BEHAVIORS
PARTICULARLY
MEN
TEND
TO
BE
INDEPEN
DENT
COMPETITIVE
AND
MAKE
DECISIONS
BASED
ON
SELECTIVE
IMPACT
OF
HEDONIC
MOTIVATION
MODERATED
BY
INFORMATION
AND
HEURISTICS
WHILE
WOMEN
ARE
MORE
INTER
AGE
GENDER
AND
EXPERIENCE
DEPENDENT
COOPERATIVE
AND
CONSIDER
MORE
DETAILS
BAKAN
DEAUX
AND
KITE
CONSEQUENTLY
IN
A
CONSUMER
WE
EXPECT
THE
EFFECT
OF
HEDONIC
MOTIVATION
ON
BEHAVIORAL
CONTEXT
WOMEN
ARE
LIKELY
TO
PAY
MORE
ATTENTION
TO
THE
PRICES
INTENTION
TO
BE
MODERATED
BY
AGE
GENDER
AND
EXPERIENCE
DUE
OF
PRODUCTS
AND
SERVICES
AND
WILL
BE
MORE
COST
CONSCIOUS
THAN
TO
DIFFERENCES
IN
CONSUMERS
INNOVATIVENESS
NOVELTY
SEEKING
MEN
FURTHER
WOMEN
ARE
TYPICALLY
MORE
INVOLVED
IN
PUR
AND
PERCEPTIONS
OF
NOVELTY
OF
A
TARGET
TECHNOLOGY
INNOVA
CHASING
AND
THUS
MORE
RESPONSIBLE
AND
CAREFUL
WITH
MONEY
TIVENESS
IS
THE
DEGREE
TO
WHICH
AN
INDIVIDUAL
IS
RECEPTIVE
TO
THAN
MEN
ARE
SLAMA
AND
TASHCHIAN
GIVEN
THE
NEW
IDEAS
AND
MAKES
INNOVATION
DECISIONS
INDEPENDENTLY
PENCHANT
OF
MEN
TO
PLAY
WITH
TECHNOLOGIES
THE
PRICE
VALUE
MIDGLEY
AND
DOWLING
P
NOVELTY
SEEKING
IS
THE
ASSIGNED
BY
MEN
TO
TECHNOLOGIES
WILL
LIKELY
BE
HIGHER
THAN
THE
TENDENCY
OF
AN
INDIVIDUAL
TO
SEEK
OUT
NOVEL
INFORMATION
OR
VALUE
ASSIGNED
BY
WOMEN
TO
THE
SAME
TECHNOLOGIES
MORE
STIMULI
HIRSCHMAN
SUCH
INNOVATIVENESS
AND
NOVELTY
OVER
THIS
GENDER
DIFFERENCE
INDUCED
BY
SOCIAL
ROLE
STEREOTYPES
SEEKING
CAN
ADD
TO
THE
HEDONIC
MOTIVATION
TO
USE
ANY
PRODUCT
WILL
BE
AMPLIFIED
WITH
AGING
BECAUSE
OLDER
WOMEN
ARE
MORE
HOLBROOK
AND
HIRSCHMAN
WHEN
CONSUMERS
BEGIN
TO
LIKELY
TO
ENGAGE
IN
SUCH
ACTIVITIES
AS
TAKING
CARE
OF
THEIR
USE
A
PARTICULAR
TECHNOLOGY
THEY
WILL
PAY
MORE
ATTENTION
TO
ITS
FAMILIES
DEAUX
AND
LEWIS
THUS
OLDER
WOMEN
WILL
BE
NOVELTY
E
G
THE
NEW
INTERFACE
AND
FUNCTIONALITY
OF
IPHONE
MORE
PRICE
SENSITIVE
DUE
TO
THEIR
SOCIAL
ROLE
AS
GATEKEEPERS
OF
AND
MAY
EVEN
USE
IT
FOR
THE
NOVELTY
HOLBROOK
AND
HIRSCHMAN
FAMILY
EXPENDITURES
THIS
IMPLIES
THAT
THE
MONETARY
VALUE
OF
AS
EXPERIENCE
INCREASES
THE
ATTRACTIVENESS
OF
THE
PRODUCTS
AND
SERVICES
BEARS
GREATER
IMPORTANCE
TO
OLDER
NOVELTY
THAT
CONTRIBUTES
TO
THE
EFFECT
OF
HEDONIC
MOTIVATION
ON
WOMEN
THUS
WE
HYPOTHESIZE
TECHNOLOGY
USE
WILL
DIMINISH
AND
CONSUMERS
WILL
USE
THE
TECHNOLOGY
FOR
MORE
PRAGMATIC
PURPOSES
SUCH
AS
GAINS
IN
AGE
AND
GENDER
WILL
MODERATE
THE
EFFECT
OF
PRICE
VALUE
ON
EFFICIENCY
OR
EFFECTIVENESS
THUS
HEDONIC
MOTIVATION
WILL
BEHAVIORAL
INTENTION
SUCH
THAT
THE
EFFECT
WILL
BE
STRONGER
PLAY
A
LESS
IMPORTANT
ROLE
IN
DETERMINING
TECHNOLOGY
USE
WITH
AMONG
WOMEN
PARTICULARLY
OLDER
WOMEN
INCREASING
EXPERIENCE
FURTHER
AGE
AND
GENDER
HAVE
BEEN
FOUND
TO
BE
ASSOCIATED
WITH
CONSUMER
TECHNOLOGY
INNOVATIVE
NESS
LEE
ET
AL
IN
THE
EARLY
STAGES
OF
USING
A
NEW
TECH
IMPACTS
OF
HABIT
MODERATED
BY
NOLOGY
YOUNGER
MEN
TEND
TO
EXHIBIT
A
GREATER
TENDENCY
TO
AGE
GENDER
AND
EXPERIENCE
SEEK
NOVELTY
AND
INNOVATIVENESS
E
G
CHAU
AND
HUI
THIS
GREATER
TENDENCY
WILL
IN
TURN
INCREASE
THE
RELATIVE
IMPOR
THE
ISSUE
OF
WHETHER
THE
EFFECT
OF
HABIT
OPERATES
DIRECTLY
ON
TANCE
OF
HEDONIC
MOTIVATION
IN
YOUNGER
MEN
EARLY
TECH
BEHAVIOR
OR
THROUGH
BEHAVIORAL
INTENTION
HAS
BEEN
EXTENSIVELY
MIS
QUARTERLY
VOL
NO
MARCH
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
VENKATESH
ET
AI
CONSUMER
ACCEPTANCE
AND
USE
OF
IT
DISCUSSED
IN
PRIOR
RESEARCH
E
G
AARTS
AND
DIJKSTERHUIS
AJZEN
KIM
ET
AL
IN
THE
CURRENT
WORK
WE
FOLLOW
THE
NAMING
CONVENTION
BY
KIM
ET
AL
REFERRING
TO
THE
HABITUATION
PROPOSITION
AS
THE
HABIT
AUTOMATICITY
PERSPECTIVE
HAP
AND
THE
ONE
CONSISTENT
WITH
TPB
AS
THE
INSTANT
ACTIVA
TION
PERSPECTIVE
IAP
STAYING
FAITHFUL
TO
TPB
IAP
ASSUMES
THAT
REPEATED
PERFORMANCE
OF
A
BEHAVIOR
CAN
RESULT
IN
WELL
ESTABLISHED
ATTITUDES
AND
INTENTIONS
THAT
CAN
BE
TRIGGERED
BY
ATTITUDE
OBJECTS
OR
CUES
IN
THE
ENVIRONMENT
AJZEN
AND
FISHBEIN
ONCE
ACTIVATED
ATTITUDES
AND
INTENTIONS
WILL
AUTOMATICALLY
GUIDE
BEHAVIOR
WITHOUT
THE
NEED
FOR
CONSCIOUS
MENTAL
ACTIVITIES
SUCH
AS
BELIEF
FORMATION
OR
RETRIEVAL
FAZIO
FOR
INSTANCE
AFTER
AN
EXTENDED
PERIOD
OF
REPEATED
CHECKING
OF
E
MAIL
ON
MOBILE
DEVICES
DURING
COMMUTING
A
CONSUMER
MAY
HAVE
DEVELOPED
A
POSITIVE
VIEW
TOWARD
MOBILE
INTERNET
TECHNOLOGY
E
G
CHECKING
E
MAIL
USING
MOBILE
INTERNET
DURING
COMMUTING
IS
USEFUL
AND
AN
ASSOCIATED
BEHAVIORAL
INTENTION
E
G
I
WILL
CHECK
E
MAIL
USING
MOBILE
INTERNET
DURING
MY
COMMUTE
THIS
INTENTION
IS
THUS
STORED
IN
THE
CONSCIOUS
MIND
OF
THE
CONSUMER
WHEN
ENTERING
A
CAR
OR
TAXI
THE
ENVIRONMENT
OR
CONTEXT
CAN
SPONTANEOUSLY
TRIGGER
THE
POSITIVE
VIEW
AND
INTENTION
THAT
IN
TURN
RESULTS
IN
THE
BEHAVIOR
E
G
PULLING
OUT
THE
MOBILE
DEVICE
AND
CHECKING
E
MAIL
FOLLOWING
THIS
LINE
OF
REASONING
STRONGER
HABIT
WILL
LEAD
TO
A
STORED
INTENTION
THAT
IN
TURN
WILL
INFLUENCE
BEHAVIOR
IN
CONTRAST
THE
HAP
ASSUMES
THAT
REPEATED
PERFORMANCE
OF
A
BEHAVIOR
PRODUCES
HABITUATION
AND
BEHAVIOR
CAN
BE
ACTIVATED
DIRECTLY
BY
STIMULUS
CUES
OUELLETTE
AND
WOOD
RONIS
ET
AL
VERPLANKEN
ET
AL
ON
FUTURE
OCCASIONS
BEING
IN
A
SIMILAR
SITUATION
IS
SUFFICIENT
TO
TRIGGER
THE
AUTOMATIC
RESPONSE
WITHOUT
CONSCIOUS
COGNITIVE
MEDIATION
I
E
ATTITUDE
OR
INTENTION
UNLIKE
THE
IAP
THE
HAP
SUGGESTS
THAT
HABIT
IS
ESTABLISHED
MAINLY
THROUGH
THE
REINFORCEMENT
OF
THE
STIMULUS
ACTION
LINK
SIMILAR
TO
THAT
IN
CONDITIONING
AJZEN
FOR
INSTANCE
IF
HABIT
IS
ESTABLISHED
AS
HAP
SUGGESTS
A
CONSUMER
WILL
WITHOUT
THINKING
REACT
IMMEDIATELY
TO
THE
CONTEXT
OF
ENTERING
A
SUBWAY
CAR
OR
TAXI
BY
PULLING
OUT
HIS
HER
MOBILE
PHONE
AND
CHECK
E
MAIL
HERE
THE
CONTEXT
CUE
I
E
TRANS
PORTATION
VEHICLE
HAS
BEEN
DIRECTLY
ASSOCIATED
WITH
THE
ACTION
I
E
CHECKING
E
MAIL
ON
A
MOBILE
DEVICE
AND
NO
ATTITUDES
OR
INTENTIONS
ARE
INVOLVED
THUS
THE
KEY
DIFFERENCE
BETWEEN
THE
IAP
AND
THE
HAP
IS
WHETHER
CONSCIOUS
COGNITIVE
PROCESSING
FOR
THE
MAKEUP
OF
INTENTION
IS
INVOLVED
BETWEEN
THE
STIMULUS
AND
THE
ACTION
AS
WE
HAVE
DISCUSSED
WHILE
THERE
ARE
COMPETING
PERSPECTIVES
ON
HOW
HABIT
AFFECTS
BEHAVIOR
THERE
IS
SOME
AGREEMENT
AT
AN
ABSTRACT
LEVEL
THAT
SUGGESTS
A
CRITICAL
ROLE
PLAYED
BY
INFORMA
TION
AND
CUE
PROCESSING
BASICALLY
CONSUMERS
NEED
TO
FIRST
PERCEIVE
AND
PROCESS
THE
CONTEXTUAL
CUES
FROM
THE
ENVIRON
MIS
QUARTERLY
VOL
NO
MARCH
MENT
ONCE
FAMILIAR
CUES
ARE
OBSERVED
THE
ASSOCIATION
BETWEEN
THE
CUES
AND
THE
RESPONSE
EITHER
DIRECT
ACTION
OR
STORED
INTENTION
WILL
BE
AUTOMATICALLY
ESTABLISHED
THE
BEHAVIOR
IS
PERFORMED
AS
A
RESULT
OF
THE
AUTOMATIC
ASSOCIATION
THUS
BOTH
THE
HAP
AND
THE
IAP
REQUIRE
A
STABLE
ENVIRONMENT
SO
LONG
AS
THE
CONTEXT
REMAINS
RELATIVELY
UNCHANGED
ROUTINIZED
BEHAVIOR
IS
PERFORMED
IN
A
LARGELY
AUTOMATIC
FASHION
WITH
MINIMAL
CONSCIOUS
CONTROL
AJZEN
HOWEVER
RAPID
CHANGE
IS
THE
DEFINING
CHARACTER
OF
THE
ENVIRONMENT
ESPECIALLY
IN
THE
CONSUMER
TECHNOLOGY
MARKET
MEHRMANN
BOTH
THE
INFORMATION
APPLIANCES
AND
THE
CONTEXT
IN
WHICH
CONSUMERS
USE
THEM
CHANGE
RAPIDLY
AND
CONSTANTLY
FOR
EXAMPLE
MOBILE
DEVICES
HAVE
EVOLVED
IM
MENSELY
SINCE
BOTH
IN
DESIGN
AND
FUNCTION
FROM
EARLY
ANALOG
MODELS
THAT
COULD
ONLY
BE
USED
TO
MAKE
PHONE
CALLS
TO
THE
LATEST
MOBILE
COMPUTING
DEVICES
SUCH
AS
IPHONE
THAT
CAN
TAKE
PICTURES
AND
VIDEOS
PLAY
VIDEOS
AND
RUN
ONE
OF
THE
THOUSANDS
OF
APPLICATIONS
AVAILABLE
FROM
THE
APPLE
APP
STORE
CONSUMER
INTERACTION
WITH
MOBILE
DEVICES
HAS
ALSO
CHANGED
DRAMATICALLY
FROM
BEING
MAINLY
BASED
ON
A
PHONE
PARADIGM
IN
THE
EARLY
DAYS
TO
TOUCH
SCREENS
NOWADAYS
THUS
INSTEAD
OF
A
STABLE
ENVIRONMENT
THE
ENVIRONMENT
SURROUNDING
CONSUMER
TECHNOLOGY
USE
IS
CONSTANTLY
CHANGING
IN
THIS
REGARD
THE
TRIGGERING
PROCESS
OF
HABIT
I
E
CUE
PRO
CESSING
AND
ASSOCIATION
BECOMES
IMPORTANT
IN
DETERMINING
THE
SUBSEQUENT
EFFECTS
OF
HABIT
ON
EITHER
BEHAVIORAL
INTENTION
OR
USE
IF
CONSUMERS
PERCEIVE
THE
CHANGING
ENVIRONMENT
AS
RELATIVELY
STABLE
THE
ASSOCIATION
BETWEEN
THE
STIMULUS
CUES
AND
INTENTIONS
OR
ACTIONS
CAN
BE
ESTABLISHED
AND
TRIGGERED
IF
NOT
CONSUMER
BEHAVIOR
MAY
BE
LESS
OR
NOT
SUBJECT
TO
THE
CONTROL
OF
HABIT
HERE
INDIVIDUAL
DIFFERENCES
IN
INFORMATION
PROCESSING
AND
ASSOCIATION
IN
MEMORY
MAY
PLAY
AN
IMPORTANT
ROLE
IN
MODERATING
THE
EFFECT
OF
HABIT
IF
A
CONSUMER
IS
LESS
SENSITIVE
TO
CHANGES
IN
THE
CONTEXT
OR
HAS
LESS
TENDENCY
COGNITIVE
CAPACITY
TO
PROCESS
ENVIRONMENTAL
INFORMATION
IN
A
CONTROLLED
AND
DETAILED
MANNER
HE
OR
SHE
WILL
DEPEND
MORE
ON
ESTABLISHED
HABIT
TO
GUIDE
HIS
OR
HER
BEHAVIOR
VERPLANKEN
AND
WOOD
FOR
INSTANCE
WHEN
IN
A
SUBWAY
CAR
WHERE
THE
ENVIRONMENTAL
CUES
KEEP
CHANGING
CONSUMERS
WHO
ARE
MORE
SENSITIVE
TO
THE
CHANGES
IN
THE
ENVIRONMENT
WILL
BE
LESS
LIKELY
TO
MAINTAIN
THEIR
OLD
BEHAVIORAL
PATTERN
RELATED
TO
THE
USE
OF
A
MOBILE
DEVICE
TO
ACCESS
THE
INTERNET
E
G
THEY
MAY
BE
DISTRACTED
BY
PEOPLE
AROUND
THEM
AND
MAY
NOT
USE
THEIR
BLACKBERRY
DEVICES
TO
READ
E
MAIL
WHILE
IN
THE
SUBWAY
CAR
IN
CONTRAST
CONSUMERS
WHO
ARE
LESS
AWARE
OF
THE
ENVIRONMENT
WILL
TEND
TO
IGNORE
THE
VARIETY
OF
ENVIRONMENTAL
CUES
AND
STICK
WWW
WEBDESIGNERDEPOT
COM
THE
EVOLUTION
OF
CELL
PHONE
DESIGN
BETWEEN
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
01
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
VENKATESH
ET
AI
CONSUMER
ACCEPTANCE
AND
USE
OF
IT
TO
THEIR
ROUTINIZED
BEHAVIOR
I
E
ALWAYS
CHECKING
E
MAIL
JUDGMENTS
OR
DECISIONS
E
G
FARINA
MEYERS
LEVY
AND
USING
THEIR
BLACKBERRY
DEVICES
UPON
ENTERING
A
SUBWAY
CAR
TYBOUT
THIS
IS
MAINLY
DUE
TO
THE
FACT
THAT
MEN
TEND
TO
PROCESS
STIMULI
AND
INFORMATION
IN
A
SCHEMA
BASED
MANNER
IN
SUM
THERE
ARE
TWO
CAUSAL
PATHWAYS
BY
WHICH
HABIT
AND
TEND
TO
IGNORE
SOME
RELEVANT
DETAILS
WHILE
WOMEN
TEND
TO
ULTIMATELY
INFLUENCES
USE
BOTH
HINGE
ON
INFORMATION
AND
CUE
PROCESS
INFORMATION
IN
A
PIECE
MEAL
AND
MORE
DETAILED
MANNER
PROCESSING
ACROSS
INDIVIDUALS
WE
EXPECT
BOTH
PATHWAYS
TO
MEYERS
LEVY
AND
MAHESWARAN
THUS
IT
FOLLOWS
THAT
BE
OPERATIONAL
TO
VARYING
EXTENTS
WE
NEXT
DISCUSS
THREE
WOMEN
WILL
BE
MORE
SENSITIVE
TO
NEW
CUES
OR
CUE
CHANGES
IN
INDIVIDUAL
DIFFERENCE
VARIABLES
THAT
WE
EXPECT
TO
AFFECT
CON
THE
ENVIRONMENT
AND
PAY
ATTENTION
TO
SUCH
CHANGES
THAT
WILL
IN
SUMERS
CUE
PROCESSING
AND
ASSOCIATION
PROCESS
THUS
MODER
TURN
WEAKEN
THE
EFFECT
OF
HABIT
ON
INTENTION
OR
BEHAVIOR
ATING
THE
EFFECTS
OF
HABIT
ON
BEHAVIORAL
INTENTION
AND
USE
FINALLY
EXPERIENCE
WILL
WORK
IN
TANDEM
WITH
AGE
AND
GENDER
FIRST
EXPERIENCE
MAINLY
AFFECTS
THE
STRENGTH
OF
THE
ASSOCIATION
TO
MODERATE
THE
EFFECT
OF
HABIT
ON
BEHAVIOR
THE
STRENGTH
BETWEEN
CONTEXTUAL
CUES
AND
INTENTION
OR
BEHAVIOR
THE
ENING
EFFECT
OF
EXPERIENCE
ON
HABIT
VARIES
ACROSS
DIFFERENT
RELATIONSHIP
BETWEEN
EXPERIENCE
AND
HABIT
IS
FORMED
AND
COHORTS
DEFINED
BY
AGE
AND
GENDER
AS
AGE
INCREASES
GENDER
STRENGTHENED
AS
A
RESULT
OF
REPEATED
BEHAVIOR
LIMAYEM
ET
AL
DIFFERENCES
IN
LEARNING
ABOUT
TECHNOLOGIES
FROM
EXPERIENCE
NEWELL
AND
ROSENBLOOM
HABIT
IS
A
LEARNED
OUT
BECOME
MORE
PRONOUNCED
AGING
LEADS
TO
A
DECREASING
CAPA
COME
AND
ONLY
AFTER
A
RELATIVELY
LONG
PERIOD
OF
EXTENSIVE
BILITY
OF
INFORMATION
PROCESSING
AS
WOMEN
TEND
TO
PROCESS
PRACTICE
CAN
IT
BE
STORED
IN
LONG
TERM
MEMORY
AND
OVERRIDE
INFORMATION
IN
A
MORE
DETAILED
AND
SUBTLE
MANNER
THAN
MEN
DO
OTHER
BEHAVIOR
PATTERNS
LUSTIG
ET
AL
ALTHOUGH
IT
IS
DARLEY
AND
SMITH
OLDER
MEN
TEND
TO
RELY
MORE
ON
POSSIBLE
FOR
A
HABIT
TO
BE
FORMED
THROUGH
REPETITION
IN
A
SHORT
HEURISTICS
AND
SCHEMA
ACQUIRED
FROM
USAGE
EXPERIENCES
TO
PERIOD
OF
TIME
THE
LONGER
THE
ELAPSED
TIME
THE
MORE
OPPOR
DETERMINE
THEIR
BEHAVIORAL
INTENTION
PAYING
LITTLE
ATTENTION
TO
TUNITIES
I
E
NUMBER
OF
CUE
OCCURRENCES
CONSUMERS
HAVE
TO
ENVIRONMENT
CUES
THEREFORE
OLDER
MEN
WITH
MORE
USAGE
CREATE
AN
ASSOCIATION
BETWEEN
CUES
AND
BEHAVIOR
CONSUMERS
EXPERIENCE
WILL
RELY
MOST
ON
THEIR
HABITS
AGAIN
RETURNING
TO
WITH
MORE
EXPERIENCE
OF
USING
A
PARTICULAR
TECHNOLOGY
WILL
OUR
EARLIER
EXAMPLE
AFTER
FORMING
THE
HABIT
OF
CHECKING
DEVELOP
A
COGNITIVE
LOCK
IN
THAT
CREATES
A
BARRIER
TO
BEHAVIORAL
MOBILE
E
MAIL
THAT
RESULTED
FROM
PRIOR
EXPERIENCE
OLDER
MEN
CHANGES
MURRAY
AND
HAUBL
THE
RESPONSE
TO
CUES
THEN
WHO
USE
MOBILE
E
MAIL
FOR
A
LONGER
PERIOD
OF
TIME
WILL
PAY
THE
BECOMES
STRONGER
WITH
INCREASING
EXPERIENCE
WITH
A
TECH
LEAST
ATTENTION
TO
MOST
OF
THE
NEW
CUES
OR
CUE
CHANGES
IN
THE
NOLOGY
I
E
PASSAGE
OF
TIME
THUS
HABIT
WILL
HAVE
STRONGER
SUBWAY
CAR
ENVIRONMENT
SUCH
AS
PASSENGERS
ENTERING
LEAVING
EFFECT
ON
INTENTION
AND
USE
FOR
MORE
EXPERIENCED
CONSUMERS
THE
SUBWAY
CAR
AND
FOCUS
ONLY
ON
THEIR
HABITUAL
ACTION
OF
CHECKING
E
MAIL
ON
THEIR
MOBILE
DEVICES
IN
CONTRAST
WOMEN
SECOND
AGE
AND
GENDER
REFLECT
PEOPLE
DIFFERENCES
IN
INFOR
PARTICULARLY
YOUNGER
WOMEN
WITH
LESS
EXPERIENCE
OF
USING
MATION
PROCESSING
I
E
CUE
PERCEPTION
AND
PROCESSING
PRO
MOBILE
E
MAIL
ARE
MORE
LIKELY
TO
IMMEDIATELY
NOTICE
CHANGES
CESS
THAT
IN
TURN
CAN
AFFECT
THEIR
RELIANCE
ON
HABIT
TO
GUIDE
IN
THEIR
ENVIRONMENT
AND
PAY
ATTENTION
TO
THE
CUES
THIS
WILL
BEHAVIOR
IT
HAS
BEEN
FOUND
THAT
OLDER
PEOPLE
TEND
TO
RELY
WEAKEN
THE
AUTOMATIC
ASSOCIATION
BETWEEN
THE
SUBWAY
CAR
LARGELY
ON
AUTOMATIC
INFORMATION
PROCESSING
HASHER
AND
ENVIRONMENT
AND
CHECKING
E
MAIL
USING
THE
MOBILE
DEVICE
ZACKS
JENNINGS
AND
JACOBY
WITH
THEIR
HABITS
THUS
DECREASING
THE
EFFECT
OF
HABIT
ON
INTENTION
AND
THE
PREVENTING
OR
SUPPRESSING
NEW
LEARNING
LUSTIG
ET
AL
CONSEQUENT
BEHAVIOR
AMONG
YOUNGER
WOMEN
WITH
LESS
ONCE
OLDER
CONSUMERS
HAVE
FORMED
A
HABIT
BY
REPEATED
USE
OF
EXPERIENCE
IN
SUM
WE
EXPECT
THE
EFFECT
OF
HABIT
TO
BE
A
PARTICULAR
TECHNOLOGY
IT
IS
DIFFICULT
FOR
THEM
TO
OVERRIDE
THEIR
STRONGEST
AMONG
OLDER
MEN
ESPECIALLY
WHEN
THEY
HAVE
HABIT
TO
ADAPT
TO
A
CHANGED
ENVIRONMENT
IN
THE
EARLIER
SIGNIFICANT
EXPERIENCE
WITH
A
TECHNOLOGY
THUS
WE
EXAMPLE
OF
HABITUAL
BEHAVIOR
OF
USING
THEIR
MOBILE
DEVICES
TO
HYPOTHESIZE
CHECK
E
MAIL
WHEN
ENTERING
A
SUBWAY
CAR
OLDER
PEOPLE
ARE
LESS
LIKELY
TO
BE
DISTRACTED
BY
CHANGES
IN
THE
SUBWAY
CAR
THAN
A
AGE
GENDER
AND
EXPERIENCE
WILL
MODERATE
THE
EFFECT
YOUNGER
PEOPLE
AND
WILL
REVERT
TO
THEIR
HABITUAL
ACTION
OF
OF
HABIT
ON
BEHAVIORAL
INTENTION
SUCH
THAT
THE
EFFECT
CHECKING
E
MAIL
USING
THEIR
MOBILE
DEVICES
MOREOVER
WILL
BE
STRONGER
FOR
OLDER
MEN
WITH
HIGH
LEVELS
OF
GENDER
DIFFERENCES
WILL
FURTHER
MODERATE
THE
EFFECT
OF
HABIT
EXPERIENCE
WITH
THE
TECHNOLOGY
RESEARCH
HAS
SHOWN
THAT
WOMEN
TEND
TO
PAY
MORE
ATTENTION
TO
DETAILS
AND
ELABORATE
ON
DETAILS
IN
THEIR
MESSAGES
THAN
MEN
DO
B
AGE
GENDER
AND
EXPERIENCE
WILL
MODERATE
THE
EFFECT
E
G
GILLIGAN
KRUGMAN
IN
THE
CONTEXT
OF
CON
OF
HABIT
ON
TECHNOLOGY
USE
SUCH
THAT
THE
EFFECT
WILL
SUMER
DECISION
MAKING
WOMEN
HAVE
BEEN
FOUND
TO
EXHIBIT
BE
STRONGER
FOR
OLDER
MEN
WITH
HIGH
LEVELS
OF
GREATER
SENSITIVITY
TO
DETAILS
THAN
MEN
EXHIBIT
WHEN
MAKING
EXPERIENCE
WITH
THE
TECHNOLOGY
MIS
QUARTERLY
VOL
NO
MARCH
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
01
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
VENKATESH
ET
AI
CONSUMER
ACCEPTANCE
AND
USE
OF
IT
IMPACT
OF
BEHAVIORAL
INTENTION
MODERATED
BY
EXPERIENCE
WITH
INCREASING
EXPERIENCE
CONSUMERS
HAVE
MORE
OPPOR
TUNITIES
TO
REINFORCE
THEIR
HABIT
BECAUSE
THEY
HAVE
MORE
TIME
TO
ENCOUNTER
THE
CUES
AND
PERFORM
THE
ASSOCIATED
BEHAVIOR
KIM
AND
MALHOTRA
WITH
INCREASING
EXPERIENCE
ROU
TINE
BEHAVIOR
BECOMES
AUTOMATIC
AND
IS
GUIDED
MORE
BY
THE
ASSOCIATED
CUES
JASPERSON
ET
AL
AS
A
RESULT
THE
EFFECT
OF
BEHAVIORAL
INTENTION
ON
TECHNOLOGY
USE
WILL
DECREASE
AS
EXPERIENCE
INCREASES
STUDIES
IN
PSYCHOLOGY
HAVE
FOUND
THAT
EXPERIENCE
CAN
MODERATE
THE
EFFECT
OF
BEHAVIORAL
INTENTION
ON
BEHAVIOR
FOR
EXAMPLE
VERPLANKEN
ET
AL
SHOWED
IN
A
FIELD
STUDY
THAT
THE
FREQUENCY
OF
CAR
USE
REDUCES
THE
EFFECT
OF
BEHAVIORAL
INTENTION
ON
FUTURE
CAR
USE
FOLLOWING
THE
HAP
RATIONALE
GREATER
USAGE
EXPERIENCE
IMPLIES
MORE
OPPORTUNITIES
TO
STRENGTHEN
THE
LINK
BETWEEN
CUES
AND
BEHAVIOR
WHICH
THEN
FACILITATES
HABITUALIZATION
OUELLETTE
AND
WOOD
AND
WEAKENS
THE
LINK
BETWEEN
BEHAVIORAL
INTENTION
AND
USE
KIM
ET
AL
THUS
WE
HYPOTHESIZE
EXPERIENCE
WILL
MODERATE
THE
EFFECT
OF
BEHAVIORAL
INTENTION
ON
USE
SUCH
THAT
THE
EFFECT
WILL
BE
STRONGER
FOR
CONSUMERS
WITH
LESS
EXPERIENCE
METHOD
MOBILE
INTERNET
TECHNOLOGY
OUR
TARGET
POPULATION
WAS
THE
CURRENT
USERS
OF
MOBILE
INTERNET
TECHNOLOGY
OUR
STUDY
WAS
CONDUCTED
IN
HONG
KONG
IN
THE
CONTEXT
OF
CONSUMER
USE
OF
MOBILE
INTERNET
TECHNOLOGY
MOBILE
INTERNET
SUPPORTS
AN
ASSORTMENT
OF
DIGITAL
DATA
SERVICES
THAT
CAN
BE
ACCESSED
USING
A
MOBILE
DEVICE
OVER
A
WIDE
GEO
GRAPHIC
AREA
MOBILE
INTERNET
ENABLES
PEOPLE
TO
EXCHANGE
MESSAGES
PICTURES
AND
E
MAIL
CHECK
FLIGHT
SCHEDULES
BOOK
CONCERT
TICKETS
AND
ENJOY
GAMES
WHILE
ON
THE
ROAD
IN
A
CONSUMER
CONTEXT
THE
USE
OF
MOBILE
INTERNET
IS
A
VOLUNTARY
DECISION
MEASUREMENT
ALL
OF
THE
SCALES
WERE
ADAPTED
FROM
PRIOR
RESEARCH
THE
ITEMS
ARE
INCLUDED
IN
THE
APPENDIX
THE
SCALES
FOR
THE
UT
AUT
CONSTRUCTS
I
E
PERFORMANCE
EXPECTANCY
EFFORT
EXPECTANCY
SOCIAL
INFLUENCE
FACILITATING
CONDITIONS
AND
BEHAVIORAL
INTEN
TION
WERE
ADAPTED
FROM
VENKATESH
ET
AL
THE
HABIT
SCALE
WAS
DRAWN
FROM
LIMAYEM
AND
HIRT
THE
SCALE
FOR
MIS
QUARTERLY
VOL
NO
MARCH
HEDONIC
MOTIVATION
WAS
ADAPTED
FROM
KIM
ET
AL
AND
THE
PRICE
VALUE
SCALE
WAS
ADAPTED
FROM
DODDS
ET
AL
ALL
ITEMS
WERE
MEASURED
USING
A
SEVEN
POINT
LIKERT
SCALE
WITH
THE
ANCHORS
BEING
STRONGLY
DISAGREE
AND
STRONGLY
AGREE
AGE
WAS
MEASURED
IN
YEARS
GENDER
WAS
CODED
USING
A
OR
DUMMY
VARIABLE
WHERE
REPRESENTED
WOMEN
EXPERIENCE
WAS
MEASURED
IN
MONTHS
USE
WAS
MEASURED
AS
A
FORMATIVE
COMPOSITE
INDEX
OF
BOTH
VARIETY
AND
FREQUENCY
OF
MOBILE
INTERNET
USE
A
LIST
OF
SIX
POPULAR
MOBILE
INTERNET
APPLICATIONS
IN
HONG
KONG
WAS
PROVIDED
AND
RESPONDENTS
WERE
ASKED
TO
INDICATE
THEIR
USAGE
FREQUENCY
FOR
EACH
APPLICATION
THE
ANCHORS
OF
THE
SEVEN
POINT
SCALE
RANGED
FROM
NEVER
TO
MANY
TIMES
PER
DAY
ACCORDING
TO
SHARMA
ET
AL
OUR
MEASUREMENT
OF
TECHNOLOGY
USE
ESSENTIALLY
CON
SISTS
OF
BEHAVIOR
ANCHORED
SCALES
THAT
MAY
BE
SUBJECT
TO
RELATIVELY
HIGH
COMMON
METHOD
VARIANCE
CMV
THAT
IS
HIGH
ITEM
CHARACTERISTICS
EFFECTS
HOWEVER
AS
ALSO
NOTED
IN
SHARMA
ET
AL
THE
TEMPORAL
SEPARATION
BETWEEN
TWO
MEASURES
CAN
REDUCE
THE
EFFECT
OF
CMV
THAT
IS
LOW
MEASURE
MENT
CONTEXT
EFFECTS
AS
WE
MEASURED
USE
FOUR
MONTHS
AFTER
WE
OBTAINED
THE
DATA
FOR
THE
KEY
PREDICTORS
THE
OVERALL
IMPACT
OF
CMV
IS
REDUCED
WE
CREATED
A
QUESTIONNAIRE
IN
ENGLISH
THAT
WAS
REVIEWED
FOR
CONTENT
VALIDITY
BY
A
GROUP
OF
UNIVERSITY
STAFF
AND
A
GROUP
OF
IS
ACADEMICS
AS
THE
QUESTIONNAIRE
WAS
ADMINISTERED
IN
CHINESE
THE
LANGUAGE
USED
PREDOMINANTLY
BY
THE
LOCAL
RESI
DENTS
IN
HONG
KONG
WE
TRANSLATED
THE
ENGLISH
QUESTIONNAIRE
TO
CHINESE
AND
THEN
BACK
TO
ENGLISH
TO
ENSURE
TRANSLATION
EQUIVALENCE
BRISLIN
A
PROFESSIONAL
TRANSLATOR
AND
TWO
RESEARCH
ASSISTANTS
INDEPENDENTLY
TRANSLATED
THE
ORIGINAL
ITEMS
IN
ENGLISH
INTO
CHINESE
THEY
ANALYZED
THE
INDEPENDENTLY
TRANSLATED
CHINESE
VERSIONS
OF
THE
ITEMS
AND
CAME
TO
AN
AGREE
MENT
ON
THE
FINAL
VERSION
FOR
THE
QUESTIONNAIRE
THE
QUESTION
NAIRE
WAS
THEN
TRANSLATED
BACK
INTO
ENGLISH
BY
ANOTHER
PROFESSIONAL
TRANSLATOR
TO
CONFIRM
TRANSLATION
EQUIVALENCE
THE
QUESTIONNAIRE
WAS
PILOT
TESTED
AMONG
A
GROUP
OF
CON
SUMERS
WHO
WERE
NOT
INCLUDED
IN
THE
MAIN
SURVEY
WE
FOUND
PRELIMINARY
EVIDENCE
THAT
THE
SCALES
WERE
RELIABLE
AND
VALID
PARTICIPANTS
AND
DATA
COLLECTION
PROCEDURE
IN
HONG
KONG
HAD
A
MOBILE
PHONE
PENETRATION
RATE
OF
OVER
PERCENT
THIS
HIGH
PENETRATION
RATE
SUGGESTS
THAT
EVERY
RESIDENT
IN
HONG
KONG
IS
A
POTENTIAL
CONSUMER
OF
MOBILE
INTERNET
THE
DIFFUSION
RATE
OF
MOBILE
INTERNET
IN
HONG
KONG
REACHED
PERCENT
IN
TO
REACH
OUT
TO
AS
MANY
RESIDENTS
AS
POSSIBLE
WE
CONDUCTED
AN
ONLINE
SURVEY
THROUGH
A
POPULAR
WEB
PORTAL
THIS
WEB
PORTAL
PRO
VIDES
RESIDENTS
WITH
A
WIDE
ARRAY
OF
E
GOVERNMENT
SERVICES
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
01
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
VENKATESH
ET
AI
CONSUMER
ACCEPTANCE
AND
USE
OF
IT
SUCH
AS
FILING
TAX
RETURNS
BOOKING
PUBLIC
FACILITIES
CHECKING
NANT
VALIDITY
WITH
TWO
EXCEPTIONS
ONE
PERFORMANCE
EXPEC
TRAFFIC
INFORMATION
APPOINTMENT
BOOKING
FOR
VARIOUS
GOVERN
TANCY
ITEM
AND
ONE
HABIT
ITEM
WERE
DELETED
DUE
TO
THEIR
LOW
MENT
SERVICES
AND
RENEWAL
OF
DRIVING
LICENSES
LOADINGS
AND
HIGH
CROSS
LOADINGS
USE
WHICH
WAS
MODELED
USING
SIX
FORMATIVE
INDICATORS
HAD
WEIGHTS
BETWEEN
WE
CONDUCTED
A
TWO
STAGE
ONLINE
SURVEY
DURING
THE
FIRST
AND
STAGE
WE
COLLECTED
DATA
ON
THE
EXOGENOUS
VARIABLES
AND
INTENTION
TO
USE
MOBILE
INTERNET
A
BANNER
ADVERTISEMENT
FOR
THE
SURVEY
WAS
PLACED
ON
THE
WEB
PORTAL
FOR
FOUR
WEEKS
AS
STRUCTURAL
MODEL
AN
INCENTIVE
RESPONDENTS
WERE
ENTERED
INTO
A
LUCKY
DRAW
TO
WIN
VARIOUS
PRIZES
TO
ELIMINATE
RESPONDENTS
WHO
PARTICI
WE
USED
TWO
METHODS
TO
ASSESS
CMV
WE
FIRST
FOLLOWED
THE
PATED
IN
THE
SURVEY
MORE
THAN
ONCE
THEY
WERE
REQUIRED
TO
APPROACH
OF
LIANG
ET
AL
USING
PLS
WE
SPECIFIED
A
PROVIDE
THEIR
MOBILE
PHONE
NUMBER
AND
IDENTITY
CARD
NUMBER
METHOD
FACTOR
TOGETHER
WITH
THE
ORIGINAL
LATENT
VARIABLES
IN
THE
LATER
THOSE
RESPONDENTS
WITH
REPEATED
ENTRIES
WERE
DROPPED
MEASUREMENT
MODEL
AND
CALCULATED
THE
SQUARED
FACTOR
FROM
DATA
ANALYSIS
THERE
WERE
VALID
RESPONDENTS
TO
THE
LOADINGS
FOR
BOTH
THE
METHOD
FACTOR
AND
THE
SUBSTANTIVE
FACTORS
FIRST
STAGE
OF
THE
ONLINE
SURVEY
IN
THE
SECOND
STAGE
OF
THE
I
E
ORIGINAL
LATENT
VARIABLES
THE
AVERAGE
VARIANCE
EX
ONLINE
SURVEY
WE
CONTACTED
THE
PREVIOUS
RESPONDENTS
FOUR
PLAINED
BY
THE
SUBSTANTIVE
FACTORS
WAS
AROUND
WHILE
THAT
MONTHS
LATER
TO
COLLECT
THEIR
MOBILE
INTERNET
USE
WE
RECEIVED
BY
THE
METHOD
FACTOR
WAS
UNDER
02
THUS
SUGGESTING
THAT
COM
RESPONSES
TO
THE
SECOND
STAGE
OF
THE
ONLINE
SURVEY
AS
MON
METHOD
BIAS
IS
NOT
A
CONCERN
IN
OUR
STUDY
NEXT
WE
ONLY
CURRENT
USERS
OF
MOBILE
INTERNET
COULD
RESPOND
TO
QUES
FOLLOWED
RICHARDSON
ET
AL
SUGGESTION
OF
THE
CFA
TIONS
ABOUT
HABIT
AND
EXPERIENCE
WE
REMOVED
THE
RESPONDENTS
MARKER
TECHNIQUE
THAT
INVOLVES
THE
ADDITION
OF
A
THEORETICALLY
WITH
NO
PRIOR
EXPERIENCE
OF
MOBILE
INTERNET
LEAVING
US
WITH
IRRELEVANT
MARKER
VARIABLE
IN
THE
ANALYSIS
SEE
ALSO
LINDELL
AND
A
FINAL
SAMPLE
OF
CONSUMERS
WOMEN
TO
TEST
FOR
WHITNEY
MALHOTRA
ET
AL
WE
FOLLOWED
MALHOTRA
NONRESPONSE
BIAS
WE
COMPARED
THE
DEMOGRAPHIC
CHARACTER
ET
AL
APPROACH
FOR
THE
POST
HOC
ESTIMATION
OF
CMV
ISTICS
OF
THE
RESPONDENTS
IN
THE
TWO
WAVES
OF
DATA
COLLECTION
AND
FOUND
NO
SIGNIFICANT
DIFFERENCES
LIKEWISE
A
COMPARISON
OF
THE
DEMOGRAPHIC
CHARACTERISTICS
OF
THE
RESPONDENTS
AND
THE
AND
CHOSE
THE
SECOND
SMALLEST
POSITIVE
CORRELATION
BETWEEN
TWO
MANIFEST
VARIABLES
02
AS
A
CONSERVATIVE
ESTIMATE
AFTER
THE
DEDUCTION
OF
THIS
VALUE
FROM
ALL
CORRELATIONS
WE
NONRESPONDENTS
IN
THE
SECOND
WAVE
SHOWED
NO
SIGNIFICANT
RERAN
OUR
ANALYSIS
NO
SIGNIFICANT
DIFFERENCE
WAS
FOUND
BE
DIFFERENCES
TWEEN
THE
ORIGINAL
CORRELATION
ESTIMATES
AND
THE
ADJUSTED
ONES
THUS
THIS
TEST
ALSO
SHOWED
THAT
CMV
IS
LESS
OF
A
CONCERN
IN
OUR
STUDY
RESULTS
WE
EXAMINED
THE
CORRELATION
TABLE
FOR
EVIDENCE
OF
MULTI
COLLINEARITY
AMONG
THE
EXOGENOUS
CONSTRUCTS
SEE
TABLE
WE
USED
PARTIAL
LEAST
SQUARES
PLS
TO
TEST
OUR
MODEL
BECAUSE
THE
HIGHEST
CORRELATION
BETWEEN
THE
EXOGENOUS
CONSTRUCTS
WAS
WE
CAPABLE
HAVE
OF
QUITE
TESTING
A
NUMBER
THESE
EFFECTS
OF
INTERACTION
CHIN
ET
AL
TERMS
AND
USING
TERMS
PLS
THE
IS
TO
THE
REDUCE
VARIABLES
MULTICOLLINEARITY
USED
TO
CREATE
INTERACTION
AMONG
THE
TERMS
INTERACTION
WERE
SMART
PLS
SOFTWARE
WE
FIRST
EXAMINED
THE
MEASUREMENT
MEAN
CENTERED
BEFORE
CREATING
THE
INTERACTION
TERMS
JACCARD
VARIOUS
MODEL
STRUCTURAL
TO
ASSESS
MODELS
RELIABILITY
AND
VALIDITY
BEFORE
TESTING
ET
ORIGINAL
THE
AL
UTAUT
THIS
PAPER
METHOD
VENKATESH
IS
CONSISTENT
ET
AL
WITH
THAT
TO
USED
FURTHER
IN
THE
TEST
FOR
MULTICOLLINEARITY
WE
COMPUTED
VARIANCE
INFLATION
FACTORS
VIFS
AND
THEY
WERE
FOUND
TO
BE
AROUND
AND
LESS
MEASUREMENT
MODEL
THAN
THE
CONSERVATIVE
THRESHOLD
OF
THUS
SUGGESTING
THAT
MULTICOLLINEARITY
WAS
NOT
A
MAJOR
ISSUE
IN
OUR
STUDY
TABLES
AND
PRESENT
THE
MEASUREMENT
MODEL
WE
RESULTS
RAN
FOUR
SEPARATE
MODELS
TO
TEST
THE
SUPPORT
FOR
BASELINE
INCLUDING
INFORMATION
ABOUT
RELIABILITY
VALIDITY
CORRELATIONS
UTAUT
DIRECT
EFFECTS
ONLY
BASELINE
UTAUT
DIRECT
AND
AND
FACTOR
LOADINGS
THE
INTERNAL
CONSISTENCY
RELIABILITIES
MODERATED
EFFECTS
DIRECT
EFFECTS
ONLY
AND
ICRS
OF
MULTI
ITEM
SCALES
MODELED
WITH
REFLECTIVE
INDICATORS
DIRECT
AND
MODERATED
EFFECTS
TABLE
REPORTS
THE
WAS
OR
GREATER
SUGGESTING
THAT
THE
SCALES
WERE
RESULTS
RELIABLE
OF
PREDICTING
BEHAVIORAL
INTENTION
AND
USE
IN
KEEPING
THE
AVERAGE
VARIANCE
EXTRACTED
AVE
WAS
GREATER
THAN
WITH
UTAUT
IN
WE
COMPUTED
COHEN
F
SQUARE
ALL
CASES
AND
GREATER
THAN
THE
SQUARE
OF
THE
CORRELATIONS
TO
CHECK
THUS
THE
EFFECT
SIZE
OF
EACH
OF
THE
MAIN
EFFECT
VARIABLES
SUGGESTING
DISCRIMINANT
VALIDITY
THE
PATTERN
OF
LOADINGS
AND
THE
AND
INTERACTION
TERMS
BY
CONVENTION
F
SQUARE
EFFECT
CROSS
LOADINGS
SUPPORTED
INTERNAL
CONSISTENCY
AND
SIZES
DISCRIMI
OF
02
AND
ARE
TERMED
SMALL
MEDIUM
MIS
QUARTERLY
VOL
NO
MARCH
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
01
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
VENKATESH
ET
AI
CONSUMER
ACCEPTANCE
AND
USE
OF
IT
CONSTRUCT
FACTOR
FACTOR
FACTOR
FACTOR
FACTOR
FACTOR
FACTOR
FACTOR
PERFORMANCE
EXPECTANCY
ICR
Ш
ËËÏ
Ш
EFFORT
EXPECTANCY
ICR
Ш
JS
SII
ÏÔ
ÍÕ
TŠ
M
ЛБ
A
F
UENCE
Т
Ш
ICR
O
OZ
09
TEL
LÌ
FACILITATING
CONDITIONS
ICR
M
LI
TŠ
TL
LÌ
TŠ
RD
NICNRVATÍON
ICR
НМЗ
Т5
ALUE
HTÎ
Ь
Ш
ТЭ
НТЗ
05
ВИ
TÏ
M
TI
RDA
ÌO
AO
NTENTÌON
MEAN
SD
PE
Ï
EE
SI
Ï
FC
HM
TŠ
PV
TÍ
BI
TIÃ
LÌ
GDR
H
NO
NA
AGE
03
NA
EXP
ТЗ
ÔÎ
NA
HT
ББ
03
05
USE
M
NA
NOTES
PE
PERFORMANCE
EXPECTANCY
EE
EFFORT
EXPECTANCY
SI
SOCIAL
INFLUENCE
FC
FACILITATING
CONDITIONS
HM
HEDONIC
MOTIVATIO
PV
PRICE
VALUE
BL
BEHAVIORAL
INTENTION
GDR
GENDER
AGE
AGE
EXP
EXPERIENCE
HT
HABIT
P
05
P
01
P
001
ALL
OTHER
CORRELATIONS
ARE
INSIGNIFICANT
DIAGONAL
ELEMENTS
ARE
AVES
AND
OFF
DIAGONAL
ELEMENTS
ARE
CORRELATIONS
MIS
QUARTERLY
VOL
NO
MARCH
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
01
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
VENKATESH
ET
AL
CONSUMER
ACCEPTANCE
AND
USE
OF
IT
DV
BEHAVIORAL
INTENTION
UTAUT
D
ONLY
D
I
D
ONLY
D
I
W
ADJ
PERFORMANCE
EXPECTANCY
PE
03
EFFORT
EXPECTANCY
EE
AT
M
SOCIAL
INFLUENCE
SI
FACILITATING
CONDITIONS
FC
HEDONIC
MOTIVATION
HM
03
PRICE
VALUE
PV
02
HABIT
HT
M
GENDER
GDR
00
00
AGE
AGE
02
01
EXPERIENCE
EXP
01
01
GDR
X
AGE
AGE
X
EXP
M
GDR
X
EXP
NO
ЪЗ
GDR
X
AGE
X
EXP
01
02
PE
X
GDR
NO
EE
X
GDR
SI
X
GDR
03
00
FC
X
GDR
ХЮ
HM
X
GDR
02
PV
X
GDR
03
HT
X
GDR
NO
PE
X
AGE
03
NO
EE
X
AGE
M
SI
X
AGE
FC
X
AGE
HM
X
AGE
M
PV
X
AGE
M
HT
X
AGE
NO
EE
X
EXP
01
02
SI
X
EXP
NO
M
FC
X
EXP
NO
HM
X
EXP
ÕÍ
HT
X
EXP
ХЮ
PE
X
GDR
X
AGE
EE
X
GDR
X
AGE
SI
X
GDR
X
AGE
M
FC
X
GDR
X
AGE
HM
X
GDR
X
AGE
M
PV
X
GDR
X
AGE
HT
X
GDR
X
AGE
EE
X
GDR
X
EXP
SI
X
GDR
X
EXP
FC
X
GDR
X
EXP
HM
X
GDR
X
EXP
Ж
HT
X
GDR
X
EXP
EE
X
AGE
X
EXP
05
MIS
QUARTERLY
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
01
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
VENKATESH
ET
AI
CONSUMER
ACCEPTANCE
AND
USE
OF
IT
DV
BEHAVIORAL
INTENTION
UTAUT
SI
X
AGE
X
EXP
TF
FC
X
AGE
X
EXP
ÕÍ
HM
X
AGE
X
EXP
NO
HT
X
AGE
X
EXP
M
EE
X
GDR
X
AGE
X
EXP
TVF
SI
X
GDR
X
AGE
X
EXP
FC
X
GDR
X
AGE
X
EXP
XPI
HM
X
GDR
X
AGE
X
EXP
HT
X
GDR
X
AGE
X
EXP
DV
TECHNOLOGY
USE
D
ONLY
D
L
D
ONLY
D
L
Ж
ADJ
BEHAVIORAL
INTENTION
BL
HABIT
HT
ГР
FACILITATING
CONDITIONS
FC
03
08
AGE
AGE
M
GENDER
GDR
01
04
EXPERIENCE
EXP
04
02
BL
X
EXP
M
AGE
X
EXP
GDR
X
EXP
03
Õ4
GDR
X
AGE
X
EXP
NO
HT
X
GDR
M
FC
X
AGE
04
Õ2
HT
X
AGE
ХЮ
HT
X
EXP
M
FC
X
AGE
X
EXP
TF
HT
X
AGE
X
EXP
ÔÏ
HT
X
GDR
X
AGE
X
EXP
NOTES
D
ONLY
DIRECT
EFFECTS
ONLY
P
001
P
01
P
AND
LARGE
RESPECTIVELY
HIGHER
ORDER
COHEN
INTERAC
VARIABLES
HAD
EFFECT
X
GDR
X
AGE
X
EXP
SIZES
AND
SI
X
GDR
X
BETWEEN
AGE
X
EXP
WHEN
ME
BASED
ON
A
POWER
PREDICTING
ANALYSIS
BL
AND
FC
X
AGE
X
EXP
WHEN
PREDICTING
WE
USE
CONCLU
SAMPLE
SIZE
WE
THE
RESULTS
WOULD
SUPPORT
THE
APPLICABILITY
AND
HAVE
VALIDITY
OF
UTAUT
QUITE
EFFECTS
AS
A
THEORETICAL
BASE
TO
PREDICT
CONSUMERS
BEHAVIORAL
INTEN
TIONS
AND
TECHNOLOGY
USE
THE
VARIANCE
IN
BEHAVIORAL
AS
SHOWN
IN
TABLE
INTENTION
EXPLAINED
BY
UTAUT
THE
WITH
DIRECT
BASIC
EFFECTS
ONLY
AND
STRUC
FIRMED
WHEN
INTERACTION
UTAUT
WITH
MODERATED
EFFECTS
ALSO
WAS
TERMS
QUITE
GOOD
AT
WER
SIGNIFICANT
EFFECTS
PERCENT
AND
PERCENT
FOR
RESPECTIVELY
PERFORMANCE
AND
THE
VARIANCE
EXPECTANCY
EE
EXPLAINED
IN
TECHNOLOGY
AND
USE
WAS
SOCIAL
PERCENT
AND
PERCENT
INFLU
INTENTION
BL
RESPECTIVELY
AND
WE
RERAN
BOTH
THE
TESTS
WITH
ONLY
BL
SIGNIFICANT
AND
PATHS
IN
FACI
HAD
SIGNIFICANT
THE
IMPACTS
MODEL
TO
EXAMINE
THE
CHANGE
IN
ON
WE
FOUND
USE
THAT
WHE
INCLUDED
SIGNIFICANT
DECREASED
BY
LESS
THAN
PERCENT
PATH
COEFFICIE
MIS
QUARTERLY
VOL
NO
MARC
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
01
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
VENKATESH
ET
AI
CONSUMER
ACCEPTANCE
AND
USE
OF
IT
OUR
HYPOTHESES
PERTAINED
TO
NEW
MODERATED
RELATIONSHIPS
AS
NUMBER
OF
IS
RESEARCH
STREAMS
RELATED
TO
INDIVIDUAL
USE
OF
NOTED
EARLIER
ABOUT
THE
ROLE
OF
FACILITATING
CONDITIONS
FC
TECHNOLOGY
WHILE
THE
EXISTENCE
OF
MANY
TAM
BASED
STUDIES
HEDONIC
MOTIVATION
HM
PRICE
VALUE
PV
HABIT
HT
AND
DO
PROMPT
THE
VIEW
THAT
THIS
IS
AN
OVER
RESEARCHED
AREA
INTERACTION
TERMS
AS
PREDICTORS
GIVEN
THE
COMPLEXITY
OF
THE
BENBASAT
AND
BARKI
OUR
STUDY
SHOWS
THAT
UTAUT
IS
PROPOSED
RELATIONSHIPS
BEYOND
THE
BETA
COEFFICIENTS
REPORTED
A
POWERFUL
FRAMEWORK
GOODHUE
AND
WHEN
IT
IS
IN
TABLE
WE
CONDUCTED
SPLIT
SAMPLE
ANALYSES
AND
PLOTS
TO
EXTENDED
WITH
RELEVANT
CONSTRUCTS
BAGOZZI
IT
CAN
UNDERSTAND
THE
PATTERN
OF
RESULTS
WE
REPORT
THE
SUPPORT
FOR
CONTRIBUTE
TO
THE
UNDERSTANDING
OF
IMPORTANT
PHENOMENA
HERE
OUR
HYPOTHESES
BASED
ON
THE
CUMULATIVE
EVIDENCE
FROM
THE
CONSUMER
USE
OF
TECHNOLOGIES
IN
GENERAL
VARIOUS
TESTS
WE
CONDUCTED
MOST
OF
OUR
HYPOTHESES
WERE
SUPPORTED
THE
DIRECT
EFFECTS
ONLY
EXPLAINED
PERCENT
OF
THE
VARIANCE
IN
BEHAVIORAL
INTENTION
AND
THE
THEORETICAL
CONTRIBUTIONS
INCLUDING
INTERACTION
TERMS
EXPLAINED
PERCENT
OF
THE
VARIANCE
IN
BEHAVIORAL
INTENTION
LIKEWISE
IN
EXPLAINING
OUR
MAJOR
THEORETICAL
CONTRIBUTION
IS
IN
MODIFYING
UTAUT
TECHNOLOGY
USE
DIRECT
EFFECTS
ONLY
MODEL
AND
FOR
THE
CONSUMER
TECHNOLOGY
ACCEPTANCE
AND
USE
CONTEXT
BY
MODERATED
MODEL
EXPLAINED
PERCENT
AND
PERCENT
OF
THE
DOING
SO
WE
EXTEND
THE
GENERALIZABILITY
OF
UTAUT
FROM
AN
VARIANCE
RESPECTIVELY
ALL
OF
THESE
REPRESENT
SIGNIFICANT
JUMPS
ORGANIZATIONAL
TO
A
CONSUMER
CONTEXT
PRIOR
TECHNOLOGY
IN
VARIANCE
EXPLAINED
COMPARED
TO
THE
BASELINE
ORIGINAL
ACCEPTANCE
AND
USE
RESEARCH
HAS
INVESTIGATED
THE
PHENOMENON
UTAUT
IN
ORGANIZATIONAL
CONTEXTS
WHERE
PERFORMANCE
EXPECTANCY
IS
THE
MAIN
DRIVER
OF
EMPLOYEES
TECHNOLOGY
USE
INTENTIONS
AND
THE
FIRST
TWO
HYPOTHESES
PERTAIN
TO
THE
MODERATED
EFFECTS
BEHAVIORS
OF
IN
THE
CASE
OF
CONSUMERS
ACCEPTANCE
AND
USE
OF
FACILITATING
CONDITIONS
AND
HEDONIC
MOTIVATION
ON
BEHAVIORAL
TECHNOLOGY
OTHER
DRIVERS
COME
TO
THE
FORE
TWO
SUCH
DRIVERS
INTENTION
HI
WHICH
PREDICTED
THAT
AGE
GENDER
AND
INCLUDED
EXPERI
IN
ARE
HEDONIC
MOTIVATION
AND
PRICE
VALUE
ENCE
WILL
MODERATE
THE
EFFECT
OF
FC
ON
BI
WAS
PARTIALLY
HEDONIC
SUP
MOTIVATION
IS
A
CRITICAL
DETERMINANT
OF
BEHAVIORAL
PORTED
AS
ONLY
GENDER
AND
AGE
WERE
SIGNIFICANT
MODERATORS
INTENTION
BUT
AND
WAS
FOUND
TO
BE
A
MORE
IMPORTANT
DRIVER
THAN
EXPERIENCE
WAS
NOT
THE
PATTERN
RELATED
TO
THESE
TWO
PERFORMANCE
MODERA
EXPECTANCY
IS
IN
NON
ORGANIZATIONAL
CONTEXTS
TORS
WAS
CONSISTENT
WITH
HI
IN
THAT
FC
WAS
MOST
IMPORTANT
FURTHER
TO
WE
DELINEATED
HOW
VARIOUS
INDIVIDUAL
CHARACTERISTICS
OLDER
WOMEN
IT
IS
QUITE
LIKELY
THAT
AS
FC
DEALS
WITH
NAMELY
BROADER
GENDER
AGE
AND
EXPERIENCE
JOINTLY
MODERATE
THE
INFRASTRUCTURE
AND
SUPPORT
ISSUES
IT
WILL
ALWAYS
BE
IMPORTANT
EFFECT
OF
HEDONIC
MOTIVATION
ON
BEHAVIORAL
INTENTION
SOME
TO
THOSE
WHO
VALUE
IT
EVEN
IF
THEY
HAVE
SIGNIFICANT
EXPERIENCE
INTERESTING
RESULTS
ARE
THAT
THE
EFFECT
OF
HEDONIC
MOTIVATION
ON
WITH
THE
TARGET
TECHNOLOGY
WHICH
PREDICTED
THAT
BEHAVIORAL
AGE
INTENTION
IS
STRONGER
FOR
YOUNGER
MEN
WITH
LESS
GENDER
AND
EXPERIENCE
WILL
MODERATE
THE
EFFECT
OF
EXPERIENCE
HM
ON
BI
WITH
A
TECHNOLOGY
WHILE
THE
EFFECT
OF
PRICE
VALUE
SUCH
THAT
IT
WILL
BE
STRONGER
AMONG
YOUNGER
MEN
WAS
IN
EARLY
MORE
IMPORTANT
TO
OLDER
WOMEN
THUS
THE
ADDITION
OF
STAGES
OF
EXPERIENCE
WAS
SUPPORTED
WHICH
PREDICTED
HEDONIC
MOTIVATION
PRICE
VALUE
AND
THEIR
INTERACTIONS
WITH
THAT
AGE
AND
GENDER
WOULD
MODERATE
THE
EFFECT
OF
PV
UTAUT
ON
BI
MODERATORS
ARE
CRUCIAL
IN
EXPANDING
THE
SCOPE
AND
SUCH
THAT
IT
WILL
BE
STRONGER
FOR
OLDER
WOMEN
WAS
SUPPORTED
GENERALIZABILITY
OF
UTAUT
TO
THE
CONSUMER
ENVIRONMENT
THE
NEXT
SET
OF
HYPOTHESES
RELATE
TO
THE
ROLE
OF
HABIT
ON
BI
AND
USE
IT
WAS
THEORIZED
IN
A
AND
B
THAT
HABIT
AS
EFFECT
HEDONIC
IS
ARE
UBIQUITOUS
IN
THE
CONSUMER
IT
MARKET
SUCH
WILL
BE
STRONGER
AMONG
OLDER
MEN
IN
LATER
STAGES
AS
MOBILE
OF
EX
GAMES
AND
VIDEOS
ON
IPHONES
HEDONIC
MOTIVATION
PERIENCE
THIS
PATTERN
WAS
BORNE
OUT
THE
LAST
HYPOTHESIS
PLAYS
AN
IMPORTANT
ROLE
IN
PREDICTING
INTENTIONS
FOR
HEDONIC
IS
WAS
TO
COMPLEMENT
THE
ROLE
OF
HABIT
AS
A
PREDICTOR
E
G
SPECI
VAN
DER
HEIJDEN
WE
INTEGRATED
HEDONIC
MOTIVA
FICALLY
STATED
THAT
THE
EFFECT
OF
BI
ON
USE
WILL
DECLINE
TION
INTO
WITH
UTAUT
AND
THEORIZED
THE
MODERATING
EFFECTS
OF
INCREASING
EXPERIENCE
WE
FOUND
THAT
THIS
HYPOTHESIS
CONSUMER
WAS
DEMOGRAPHICS
ON
THE
RELATIONSHIP
BETWEEN
HEDONIC
ALSO
SUPPORTED
MOTIVATION
AND
INTENTION
WHILE
VAN
DER
HEIJDEN
FOCUSED
SOLELY
ON
HEDONIC
IS
IN
OUR
CONTEXT
OF
CONSUMER
USE
OF
MOBILE
INTERNET
BOTH
UTILITARIAN
FEATURES
E
G
THE
BUSINESS
DISCUSSION
AND
PRODUCTIVITY
APPLICATIONS
ON
IPHONE
SUCH
AS
QUICKOFFICE
AND
HEDONIC
FEATURES
E
G
MOBILE
GAMES
AND
ENTERTAINMENT
APPLICATIONS
ON
IPHONE
COEXIST
OUR
EMPIRICAL
RESULTS
SUGGEST
OUR
PAPER
CONTRIBUTES
TO
IS
RESEARCH
BY
PROVIDING
THE
THAT
LOGICAL
IN
SUCH
A
CONTEXT
OF
CONSUMER
USE
OF
IT
IN
GENERAL
BOTH
COMPANION
IN
A
CONSUMER
USE
SETTING
TO
UTAUT
UTILITARIAN
VENKA
BENEFITS
AND
HEDONIC
BENEFITS
ARE
IMPORTANT
DRIVERS
TESH
ET
AL
THAT
WAS
DEVELOPED
FOR
AN
EMPLOYEE
OF
ACCEPT
TECHNOLOGY
USE
FUTURE
WORK
CAN
EXAMINE
OTHER
KEY
CON
ANCE
AND
USE
SETTING
OUR
MODEL
SITS
AT
THE
CONFLUENCE
STRUCTS
OF
THAT
A
ARE
SALIENT
TO
DIFFERENT
RESEARCH
CONTEXTS
WHEN
MIS
QUARTERLY
VOL
NO
MARCH
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
01
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
VENKATESH
ET
AI
CONSUMER
ACCEPTANCE
AND
USE
OF
IT
BUILDING
THE
MODELS
FOR
INSTANCE
IN
THE
CONTEXT
OF
SOCIAL
COMPUTING
SOCIAL
OUTCOMES
SUCH
AS
HIGHER
STATUS
IN
THE
COM
MUNITY
OR
BEING
UNIQUE
IN
THE
GROUP
MAY
BE
IMPORTANT
ADDI
TIONAL
DRIVERS
OF
IT
USE
WE
INTEGRATE
PRICE
VALUE
INTO
THE
UT
AUT
FRAMEWORK
TO
ADDRESS
THE
COST
ISSUE
OF
TECHNOLOGY
USE
IN
THE
CONSUMER
SETTING
WHILE
THERE
ARE
STUDIES
THAT
HAVE
EXAMINED
THE
ROLE
OF
VALUE
IN
CONSUMER
ADOPTION
OF
IT
E
G
KIM
ET
AL
WE
EXTEND
IT
TO
CONTINUED
USE
AND
WE
THEORIZED
THE
MODER
ATING
EFFECTS
OF
AGE
AND
GENDER
ON
THE
RELATIONSHIP
BETWEEN
PRICE
VALUE
AND
INTENTION
OUR
RESEARCH
HIGHLIGHTS
THE
IMPOR
TANCE
OF
PRICE
VALUE
IN
CONSUMER
DECISION
MAKING
REGARDING
TECHNOLOGY
USE
AND
THE
MODERATING
EFFECTS
OF
THE
CONSUMER
DEMOGRAPHIC
PROFILE
THAT
IS
ROOTED
IN
MECHANISMS
RELATED
TO
SOCIAL
ROLES
FUTURE
RESEARCH
MAY
BUILD
ON
OUR
STUDY
TO
EXAMINE
HOW
THE
PRICING
OF
APPLICATIONS
AND
THE
CONSEQUENT
VALUE
STRUCTURE
OF
THE
APPLICATION
PORTFOLIO
CAN
INFLUENCE
CONSUMER
TECHNOLOGY
USE
PATTERNS
I
E
THE
RELATIVE
FREQUENCY
OF
USE
OF
DIFFERENT
APPLICATIONS
FOR
INSTANCE
RESEARCHERS
MAY
STUDY
HOW
PERCEIVED
VALUE
OF
APPLICATIONS
CAN
INFLUENCE
CONSUMER
USE
PATTERNS
WHEN
DIFFERENT
BUNDLING
STRATEGIES
SUCH
AS
PURE
BUNDLING
VERSUS
MIXED
BUNDLING
ARE
ADOPTED
BY
IT
APPLICATION
VENDORS
E
G
HITT
AND
CHEN
ANOTHER
IMPORTANT
ASPECT
OF
THE
EXTENSION
OF
UT
AUT
TO
THE
CONSUMER
CONTEXT
INVOLVES
THE
INFLUENCE
OF
FACILITATING
CONDI
TIONS
WHILE
THE
ORIGINAL
UT
AUT
ONLY
PROPOSED
A
PATH
FROM
FACILITATING
CONDITIONS
TO
ACTUAL
BEHAVIOR
IN
A
CONSUMER
CON
TEXT
WE
THEORIZED
FACILITATING
CONDITIONS
MODERATED
BY
GENDER
AND
AGE
TO
ALSO
INFLUENCE
BEHAVIORAL
INTENTION
IN
PARTICULAR
WE
FOUND
THAT
THE
EFFECT
OF
FACILITATING
CONDITIONS
ON
BEHAVIORAL
INTENTION
IS
MORE
PRONOUNCED
FOR
OLDER
WOMEN
THIS
PARTICULAR
GROUP
OF
CONSUMERS
VIEWS
AVAILABILITY
OF
RESOURCES
KNOWLEDGE
AND
SUPPORT
AS
ESSENTIAL
TO
ACCEPTANCE
OF
A
NEW
TECHNOLOGY
WE
ALSO
FOUND
EMPIRICAL
SUPPORT
FOR
THE
ORIGINAL
UT
AUT
WITH
THE
REMAINING
CONSTRUCTS
PERFORMING
AS
EXPECTED
IN
THE
CONSUMER
CONTEXT
THE
EFFECTS
OF
PERFORMANCE
EXPECTANCY
EFFORT
EXPECTANCY
AND
SOCIAL
INFLUENCE
ON
BEHAVIORAL
INTENTION
WERE
ALL
MODERATED
BY
INDIVIDUAL
CHARACTERISTICS
I
E
DIFFERENT
COMBINATIONS
OF
AGE
GENDER
AND
EXPERIENCE
SIMILARLY
THE
EFFECT
OF
FACILITATING
CONDITIONS
ON
TECHNOLOGY
USE
WAS
MODERATED
BY
AGE
AND
EXPERIENCE
ONE
NOTABLE
DIFFERENCE
BETWEEN
THE
FINDINGS
RELATED
TO
UT
AUT
AND
IS
THE
EFFECT
OF
BEHAVIORAL
INTENTION
ON
TECHNOLOGY
USE
WHILE
BEHAVIORAL
INTENTION
HAD
A
POSITIVE
DIRECT
EFFECT
ON
USE
IN
UTAUT
IN
THE
CONSUMER
CONTEXT
IN
THE
EFFECT
WAS
MODERATED
BY
EXPERIENCE
WITH
THE
TARGET
TECHNOLOGY
ANOTHER
MAJOR
THEORETICAL
CONTRIBUTION
OF
THIS
WORK
IS
IN
THE
INTEGRATION
OF
HABIT
INTO
UTAUT
RESEARCHERS
SUCH
AS
BEN
MIS
QUARTERLY
VOL
NO
MARCH
BASAT
AND
BARKI
HAVE
CALLED
FOR
MORE
RESEARCH
INTO
HABIT
WHICH
IS
UNDER
STUDIED
IN
THE
IS
LITERATURE
WHILE
OTHERS
E
G
BAGOZZI
HAVE
CALLED
FOR
ALTERNATIVE
THEORETICAL
MECHANISMS
IN
PREDICTING
TECHNOLOGY
USE
IN
ORDER
TO
FURTHER
THE
PROGRESS
IN
THIS
MATURE
STREAM
OF
WORK
WHILE
LIMAYEM
ET
AL
HAVE
INTEGRATED
HABIT
INTO
EXPECTATION
CONFIRMATION
THEORY
ЕСТ
WE
HAVE
INTEGRATED
HABIT
INTO
UTAUT
WHICH
REFLECTS
AN
EARLIER
UNIFICATION
OF
EIGHT
PRIOR
MODELS
OF
TECHNOLOGY
ACCEPTANCE
AND
USE
OUR
TREATMENT
OF
HABIT
REFLECTS
THE
TWO
MAIN
THEORETICAL
PERSPECTIVES
OF
HABIT
OUELLETTE
AND
WOOD
THE
STORED
INTENTION
VIEW
E
G
AJZEN
AND
THE
AUTOMATICITY
VIEW
E
G
LIMAYEM
ET
AL
AGE
GENDER
AND
EXPERIENCE
WERE
HYPOTHESIZED
TO
MODERATE
THE
EFFECTS
OF
HABIT
ON
INTENTION
AND
USE
OUR
RESEARCH
HAS
DEMONSTRATED
THAT
WHEN
PREDICTING
CONTINUED
USE
OF
IT
UTAUT
PREDICTORS
HEDONIC
MOTIVATION
PRICE
VALUE
AND
HABIT
PLAY
IMPORTANT
ROLES
FUTURE
RESEARCH
CAN
EXTEND
OUR
MODEL
AND
EXAMINE
POTENTIAL
INTERVENTIONS
TO
FOSTER
OR
BREAK
HABITS
IN
THE
CONTEXT
OF
CONTINUED
IT
USE
FOR
EXAMPLE
ACCORDING
TO
THE
AUTOMATICITY
VIEW
CHANGES
IN
THE
ENVIRON
MENTAL
OR
CONTEXT
CUES
CAN
ALREADY
BREAK
THE
AUTOMATIC
CUE
BEHAVIOR
LINK
IN
CONTRAST
FOLLOWING
THE
STORED
INTENTION
VIEW
CHANGES
IN
THE
BELIEFS
THAT
FORMALLY
LED
TO
THE
STORED
INTENTION
ARE
MORE
EFFECTIVE
IN
CHANGING
HABITS
IN
WE
MODELED
HABIT
AS
HAVING
BOTH
A
DIRECT
EFFECT
ON
USE
AND
AN
INDIRECT
EFFECT
THROUGH
BEHAVIORAL
INTENTION
THIS
IS
THE
FIRST
STUDY
OF
WHICH
WE
ARE
AWARE
THAT
THEORIZED
THE
MODERATING
EFFECTS
OF
DEMOGRAPHIC
CHARACTERISTICS
ON
THE
HABIT
INTENTION
AND
HABIT
USE
RELATIONSHIPS
WE
HAVE
DEVEL
OPED
HYPOTHESES
REGARDING
HOW
AGE
GENDER
AND
EXPERIENCE
JOINTLY
MODERATE
THE
EFFECT
OF
HABIT
ON
TECHNOLOGY
USE
BASED
ON
THE
UNDERLYING
PROCESS
OF
HABIT
ACTIVATION
AND
ENFORCEMENT
WE
FOUND
THAT
OLDER
MEN
WITH
EXTENSIVE
USAGE
EXPERIENCE
TEND
TO
RELY
MORE
ON
HABIT
TO
DRIVE
TECHNOLOGY
USE
THROUGH
BOTH
THE
STORED
INTENTION
PATH
AND
THE
INSTANT
ACTIVATION
PATH
WE
THUS
EXTEND
THE
NOMOLOGICAL
NETWORK
RELATED
TO
TECH
NOLOGY
USE
TO
INCLUDE
A
NEW
SET
OF
CONSTRUCTS
AND
ASSOCIATED
THEORETICAL
MECHANISMS
IN
SUMMARY
INCORPORATES
NOT
ONLY
THE
MAIN
RELA
TIONSHIPS
FROM
UTAUT
BUT
ALSO
NEW
CONSTRUCTS
AND
RELATION
SHIPS
THAT
EXTEND
THE
APPLICABILITY
OF
UTAUT
TO
THE
CONSUMER
CONTEXT
WE
HAVE
PROVIDED
EMPIRICAL
SUPPORT
FOR
THE
APPLI
CABILITY
OF
TO
THE
CONSUMER
CONTEXT
VIA
A
TWO
STAGE
ONLINE
SURVEY
OF
MOBILE
INTERNET
CONSUMERS
THE
VARIANCE
EXPLAINED
IN
BOTH
BEHAVIORAL
INTENTION
PERCENT
AND
TECHNOLOGY
USE
PERCENT
ARE
SUBSTANTIAL
COMPARED
TO
THE
BASELINE
UTAUT
THAT
EXPLAINED
PERCENT
AND
PERCENT
OF
THE
VARIANCE
IN
INTENTION
AND
USE
RESPECTIVELY
THE
RESULTS
FROM
ARE
ALSO
COMPARABLE
TO
THOSE
OBTAINED
IN
VENKATESH
ET
AL
STUDY
OF
UTAUT
IN
THE
ORGANIZA
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
01
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
VENKATESH
ET
AI
CONSUMER
ACCEPTANCE
AND
USE
OF
IT
TIONAL
CONTEXT
PERCENT
AND
PERCENT
RESPECTIVELY
THIS
APPLICATIONS
FEATURES
AND
DEPTH
OF
USE
I
E
THE
FREQUENCY
OF
SUGGESTS
THAT
THE
PROPOSED
EXTENSIONS
ARE
CRITICAL
TO
MAKING
USE
FUTURE
RESEARCH
CAN
BUILD
ON
OUR
STUDY
BY
INCLUDING
THE
PREDICTIVE
VALIDITY
OF
UT
AUT
IN
A
CONSUMER
CONTEXT
COM
MORE
STRUCTURAL
ELEMENTS
OF
USE
SUCH
AS
THOSE
RELATED
TO
USER
PARABLE
TO
WHAT
WAS
FOUND
IN
THE
ORIGINAL
UT
AUT
STUDIES
IN
AND
TASKS
BURTON
JONES
AND
STRAUB
TO
EXAMINE
THE
AN
ORGANIZATIONAL
CONTEXT
IN
LIGHT
OF
THESE
FINDINGS
COM
EXPLANATORY
POWER
OF
BEHAVIORAL
INTENTION
AND
HABIT
FOR
PARISONS
TO
OTHER
MODELS
SUCH
AS
THE
MODEL
OF
ADOPTION
OF
INSTANCE
THE
PREDICTIVE
POWER
OF
HABIT
MAY
INCREASE
RELATIVE
TECHNOLOGY
IN
THE
HOUSEHOLD
MATH
BROWN
AND
VENKATESH
TO
THAT
OF
BEHAVIORAL
INTENTION
WHEN
USERS
DAILY
TASKS
ARE
WILL
BE
OF
VALUE
OUR
MODEL
INCORPORATES
IDEAS
FROM
INCLUDED
IN
THE
MEASUREMENT
OF
USE
AS
DAILY
ROUTINE
TASKS
ARE
MATH
BUT
AN
EMPIRICAL
COMPARISON
AND
INCORPORATION
OF
THE
MORE
SUBJECT
TO
THE
INFLUENCE
OF
HABIT
HOUSEHOLD
LIFECYCLE
AS
IN
BROWN
AND
VENKATESH
COULD
BE
A
FRUITFUL
FUTURE
STUDY
THE
ISSUE
OF
COMMON
METHOD
VARIANCE
CMV
HAS
BEEN
IDENTIFIED
AS
A
MAJOR
METHODOLOGICAL
CONCERN
ASSOCIATED
WITH
TAM
BASED
RESEARCH
E
G
MALHOTRA
ET
AL
SHARMA
ET
AL
LIMITATIONS
AND
FUTURE
RESEARCH
STRAUB
AND
BURTON
JONES
META
ANALYSIS
BASED
INVESTIGATIONS
HAVE
REVEALED
MIXED
RESULTS
WHILE
MALHOTRA
THE
FIRST
LIMITATION
CONCERNS
GENERALIZABILITY
OF
THE
FINDINGS
ET
AL
FOUND
CMV
WAS
NOT
A
SERIOUS
ISSUE
IN
THE
AS
OUR
STUDY
WAS
CONDUCTED
IN
HONG
KONG
WHICH
HAS
GENERAL
A
VERY
ТАМ
FRAMEWORK
SHARMA
ET
AL
SUGGESTED
THAT
HIGH
PENETRATION
RATE
FOR
MOBILE
PHONES
THE
FINDINGS
UNDER
MAY
NOT
CERTAIN
CONDITIONS
THE
LINK
BETWEEN
PERCEIVED
APPLY
TO
COUNTRIES
THAT
ARE
LESS
TECHNOLOGICALLY
ADVANCED
USEFULNESS
AND
TECHNOLOGY
USE
IS
SUBJECT
TO
RELATIVELY
HIGH
SECOND
AS
OUR
SAMPLE
IS
SOMEWHAT
SKEWED
WITH
A
MEAN
CMV
AGE
WHILE
EXAMINING
THE
CMV
IN
TAM
UTAUT
BASED
AROUND
THE
FINDINGS
MAY
NOT
APPLY
TO
THOSE
RESEARCH
WHO
ARE
IS
NOT
THE
MAJOR
GOAL
OF
OUR
PAPER
WE
DID
NOT
FIND
SIGNIFICANTLY
OLDER
THIRD
WE
HAVE
STUDIED
ONLY
ONE
CMV
TYPE
TO
OF
BE
A
CONCERN
IN
OUR
STUDY
EVEN
SO
FUTURE
RESEARCH
TECHNOLOGY
I
E
MOBILE
INTERNET
FUTURE
RESEARCH
CAN
SHOULD
BUILD
ADOPT
A
MORE
RIGOROUS
DESIGN
TO
REDUCE
MEASUREMENT
ON
OUR
STUDY
BY
TESTING
IN
DIFFERENT
COUNTRIES
AND
METHOD
BIASES
FUTURE
RESEARCH
USING
DIFFERENT
OBJECTIVE
DIFFERENT
AGE
GROUPS
AND
DIFFERENT
TECHNOLOGIES
FINALLY
MEASURES
WE
OF
USE
CAN
HELP
FURTHER
RULE
OUT
CMV
FUTURE
INCLUDED
HEDONIC
MOTIVATION
PRICE
VALUE
AND
HABIT
RESEARCH
AS
PRE
USING
EXPERIMENTS
THAT
MANIPULATE
THE
PREDICTORS
DICTORS
BASED
ON
KEY
COMPLEMENTARY
THEORETICAL
PERSPECTIVES
AND
USING
THE
SCALES
AS
MANIPULATION
CHECKS
CAN
FURTHER
HELP
TO
THE
THEORETICAL
MECHANISMS
IN
UTAUT
FUTURE
RESEARCH
REDUCE
CMV
CONCERNS
CAN
IDENTIFY
OTHER
RELEVANT
FACTORS
THAT
MAY
HELP
INCREASE
THE
APPLICABILITY
OF
UTAUT
TO
A
WIDE
RANGE
OF
CONSUMER
TECHNOLOGY
USE
CONTEXTS
MANAGERIAL
IMPLICATIONS
OUR
MEASURE
OF
BEHAVIOR
IS
SELF
REPORTED
THERE
IS
NOT
ONLY
OUR
EMPIRICAL
FINDING
ABOUT
PRICE
VALUE
HAS
IMPLICATIONS
FOR
SIGNIFICANT
VARIANCE
ACROSS
STUDIES
IN
HOW
TECHNOLOGY
USE
IS
THE
PRICING
STRATEGY
OF
CONSUMER
IT
APPLICATION
VENDORS
CONCEPTUALIZED
AND
MEASURED
BUT
ALSO
CONTINUING
CONCEPTUAL
PARTICULARLY
OUR
STUDY
SUGGESTS
THAT
PERCEIVED
BENEFITS
OVER
MEASUREMENT
PROGRESS
WITH
RESPECT
TO
THE
USE
CONSTRUCT
MONETARY
SACRIFICE
I
E
THE
PRICE
VALUE
OF
IT
APPLICATIONS
CAN
ACCORDING
TO
BURTON
JONES
AND
STRAUB
TECHNOLOGY
USE
INFLUENCE
CONSUMERS
TECHNOLOGY
USE
FOR
INSTANCE
THE
CUR
HAS
BEEN
CONCEPTUALIZED
AND
MEASURED
AS
EXTENT
OF
USE
E
G
RENT
COST
STRUCTURE
OF
MOBILE
INTERNET
APPLICATIONS
IS
MAINLY
VENKATESH
AND
DAVIS
BREADTH
OF
USE
E
G
SAGA
AND
BASED
ON
THE
NETWORK
TRAFFIC
GENERATED
BY
EACH
TYPE
OF
APPLI
ZMUD
VARIETY
OF
USE
E
G
IGBARIA
ET
AL
THONG
CATION
WITH
MULTIMEDIA
CONTENTS
PRICED
AT
THE
HIGHEST
LEVEL
USERS
COGNITIVE
ABSORPTION
INTO
THE
SYSTEM
AGARWAL
HOWEVER
THIS
PRICING
PATTERN
MAY
NOT
REFLECT
THE
RELATIVE
AND
KARAHANNA
ETC
THUS
THE
INTERPRETATION
OF
A
VALUE
ATTACHED
TO
DIFFERENT
APPLICATIONS
BY
CONSUMERS
IT
STUDY
RESULTS
AND
COMPARISON
ACROSS
STUDIES
ON
THE
VARIANCE
APPLICATION
VENDORS
SHOULD
FIRST
FOCUS
ON
THE
REAL
VALUE
OF
IN
USE
EXPLAINED
IS
CONTINGENT
UPON
THE
CONCEPTUALIZATION
OF
THEIR
OFFERINGS
FOR
CONSUMERS
FOR
INSTANCE
WHILE
MOBILE
THE
USE
CONSTRUCT
FOLLOWING
THE
CONVENTION
OF
BURTON
JONES
VIDEO
APPLICATIONS
SUCH
AS
MOVIE
EPISODES
ARE
PRICED
HIGH
AND
STRAUB
OUR
FOCUS
OF
TECHNOLOGY
USE
IN
THE
CURRENT
DUE
TO
THE
NETWORK
TRAFFIC
THEY
GENERATE
THE
REAL
VALUE
I
E
STUDY
IS
AT
THE
SYSTEM
ELEMENT
I
E
BREADTH
AND
EXTENT
DEPTH
HEDONIC
BENEFITS
OF
THESE
TYPE
OF
APPLICATIONS
IS
STILL
QUES
OF
THE
USE
ACCORDINGLY
OUR
MEASUREMENT
OF
TECHNOLOGY
USE
TIONABLE
AS
CONSUMERS
MAY
NOT
BE
ABLE
TO
CONCENTRATE
FULLY
ON
IS
A
FORMATIVE
INDEX
OF
SIX
QUESTIONS
SEE
APPENDIX
ON
CON
THE
MOVIES
WHEN
WATCHING
THEM
ON
THE
SMALL
SCREEN
OF
THE
SUMERS
USAGE
FREQUENCIES
OF
THE
SIX
MOST
POPULAR
MOBILE
MOBILE
DEVICES
WHILE
ON
THE
MOVE
XU
ET
AL
THUS
INTERNET
APPLICATIONS
IN
HONG
KONG
THUS
OUR
MEASURE
INCOR
FROM
A
CONSUMER
PERSPECTIVE
THE
HEDONIC
BENEFITS
OF
MOBILE
PORATES
BOTH
THE
BREADTH
OF
USE
I
E
NUMBER
OF
DIFFERENT
MOVIES
MAY
NOT
BE
HIGH
ENOUGH
TO
JUSTIFY
THE
PRICE
THUS
MIS
QUARTERLY
VOL
NO
MARCH
THIS
CONTENT
DOWNLOADED
FROM
ON
MON
JUL
01
UTC
ALL
USE
SUBJECT
TO
HTTP
ABOUT
JSTOR
ORG
TERMS
VENKATESH
ET
AI
CONSUMER
ACCEPTANCE
AND
USE
OF
IT
HAVING
LOW
OR
EVEN
NEGATIVE
PRICE
VALUE
IN
CONTRAST
APPLI
CATIONS
LESS
RICH
IN
MEDIA
SUCH
AS
MOBILE
PICTURE
SHARING
THAT
EMPHASIZE
IMMEDIATE
EXPERIENCE
SHARING
AMONG
FRIENDS
MAY
BE
OF
HIGHER
PRICE
VALUE
TO
CONSUMERS
BECAUSE
OF
THEIR
SOCIAL
VALUE
AND
TIMELINESS
OUR
STUDY
SUGGESTS
THAT
TO
MAXIMIZE
PROFIT
VENDORS
SHOULD
OPTIMIZE
THE
PRICING
OF
DIFFERENT
APPLI
CATIONS
BASED
ON
THEIR
UTILITARIAN
HEDONIC
OR
OTHER
TYPES
OF
VALUE
TO
CONSUMERS
OUR
RESULTS
SUGGEST
THAT
THERE
IS
A
SIGNIFICANT
IMPACT
OF
CON
SUMERS
HABIT
ON
PERSONAL
TECHNOLOGY
USE
WHEN
THEY
FACE
AN
ENVIRONMENT
THAT
IS
DIVERSIFIED
AND
EVER
CHANGING
IN
ADDITION
TO
THE
DIRECT
AND
AUTOMATIC
EFFECT
OF
HABIT
ON
TECHNOLOGY
USE
HABIT
ALSO
OPERATES
AS
A
STORED
INTENTION
PATH
TO
INFLUENCE
BEHAVIOR
THIS
DEMANDS
MORE
MARKETING
COMMUNICATION
EFFORTS
TO
STRENGTHEN
BOTH
THE
STORED
INTENTION
AND
ITS
LINK
TO
BEHAVIOR
FOR
INSTANCE
WHEN
MULTIMEDIA
MESSAGING
SERVICE
MMS
WAS
INTRODUCED
MOBILE
SERVICE
PROVIDERS
ROLLED
OUT
ADVERTISEMENTS
TO
EMPHASIZE
A
VARIETY
OF
SCENARIOS
WHERE
THE
SERVICE
CAN
BE
USED
SUCH
AS
EXPERIENCE
SHARING
WITH
FRIENDS
SENDING
GREETING
CARDS
TO
FAMILY
MEMBERS
FIELD
WORKERS
TAKING
PICTURES
ON
THE
SPOT
ETC
THESE
ADVERTISEMENTS
HELPED
TO
ENHANCE
THE
STORED
INTENTION
I
E
I
CAN
USE
MMS
IN
A
VARIETY
OF
CONTEXTS
AND
ITS
LINK
TO
THE
BEHAVIOR
IN
DIFFERENT
USAGE
CONTEXTS
IN
RETROSPECT
EMPHASIZING
THE
APPLICATION
OF
MOBILE
INTERNET
IN
VARIED
CONTEXTS
AND
OCCASIONS
MAY
BE
A
USEFUL
STRATEGY
TO
POTENTIALLY
INCREASE
THE
HABITUAL
USE
OF
IT
APPLICATIONS
MOREOVER
OUR
RESULTS
SUGGEST
THAT
THE
IMPACT
OF
HABIT
ON
BEHAVIOR
DIFFERS
WITH
AGE
GENDER
AND
EXPERIENCE
SPECIFICALLY
OLDER
MEN
WITH
EXTENSIVE
EXPERIENCE
MORE
THAN
OTHERS
TEND
TO
BE
DRIVEN
BY
HABIT
THUS
WHEN
THE
GOAL
IS
TO
FACILITATE
CHANGES
IN
CONSUMERS
HABITUAL
USAGE
AS
IN
THE
CASE
OF
LAUNCHING
A
NEW
TECHNOLOGY
MORE
RESOURCES
MAY
NEED
TO
BE
TARGETED
AT
OLDER
MEN
WITH
SIGNIFICANT
EXPERIENCE
BECAUSE
THEY
MAY
HAVE
GREAT
DIFFICULTY
IN
CHANGING
THEIR
HABITS
IN
CONTRAST
WHEN
IT
APPLICATION
PROVIDERS
WANT
TO
MAINTAIN
CONSUMERS
HABITUAL
USE
MORE
ATTENTION
SHOULD
BE
PAID
TO
YOUNGER
WOMEN
AS
THEY
ARE
MOST
SENSITIVE
TO
CHANGES
IN
THE
ENVIRONMENT
FINALLY
THE
SIGNIFICANCE
OF
THE
MODERATED
EFFECTS
IN
OUR
MODEL
SUGGESTS
THAT
MANAGERS
CAN
USE
A
MARKET
SEGMENTATION
STRATEGY
TO
FACILITATE
CONSUMER
TECHNOLOGY
USE
OUR
RESULTS
SHOW
THAT
DIFFERENT
COHORTS
OF
CONSUMERS
ATTACH
DIFFERENT
WEIGHTS
TO
VARIOUS
FACTORS
THAT
INFLUENCE
THEIR
TECHNOLOGY
USE
WHICH
CAN
POTENTIALLY
BE
ATTRIBUTED
TO
THE
DIFFERENTIAL
LEARNING
ABILITIES
AND
SOCIAL
ROLES
ACROSS
AGE
EXPERIENCE
AND
GENDER
FIRST
WE
FOUND
THAT
WHEN
OLDER
WOMEN
ARE
IN
THE
EARLY
STAGES
OF
USING
A
PARTICULAR
TECHNOLOGY
THEY
RELY
MORE
ON
EXTERNAL
RESOURCES
TO
FACILITATE
THEIR
CONTINUED
USE
OF
THE
TECHNOLOGY
THIS
SUGGESTS
THAT
ON
GOING
FACILITATIONS
DESIGNED
FOR
OLDER
WOMEN
SHOULD
BE
PROVIDED
BY
IT
APPLICATION
VENDORS
IF
THEY
MIS
QUARTERLY
VOL
NO
MARCH
WANT
TO
KEEP
THIS
GROUP
OF
CONSUMERS
ON
TRACK
FOR
INSTANCE
CUSTOMER
HELP
THROUGH
A
CALL
CENTER
INSTANT
MESSAGING
SER
VICES
OR
A
CONSUMER
COMMUNITY
CAN
TAKE
SPECIAL
CARE
OF
OLDER
WOMEN
USERS
WHO
ARE
NEW
TO
IT
APPLICATIONS
SECOND
WE
FOUND
THAT
YOUNGER
MEN
IN
THE
EARLY
STAGES
OF
EXPERIENCE
ARE
MOTIVATED
MORE
BY
THE
HEDONIC
BENEFITS
GAINED
FROM
USING
A
TECHNOLOGY
THIS
IMPLIES
THAT
HEDONIC
APPLICATIONS
OF
THE
TECHNOLOGY
THAT
ARE
INTERESTING
TO
YOUNGER
MEN
SUCH
AS
MOBILE
GAMING
MUSIC
AND
VIDEOS
IN
THE
CASE
OF
MOBILE
DATA
SERVICES
CAN
BE
BUNDLED
TOGETHER
WITH
SPECIAL
PROMOTIONS
TO
ATTRACT
YOUNGER
MEN
NEW
TO
THE
TECHNOLOGY
FINALLY
WE
FOUND
THAT
OLDER
WOMEN
MORE
THAN
OTHERS
EMPHASIZE
PRICE
VALUE
OF
THE
TECHNOLOGY
THIS
SUGGESTS
THAT
OLDER
WOMEN
ARE
MORE
PRICE
SENSITIVE
THAN
OTHER
COHORTS
OF
CONSUMERS
THUS
FROM
THE
PERSPECTIVE
OF
IT
APPLICATION
VENDORS
RELATIVELY
SIMPLE
AND
UTILITARIAN
TECHNOLOGY
APPLICATIONS
CAN
BE
PROMOTED
WITH
SPECIAL
DISCOUNTS
TO
OLDER
WOMEN
USERS
WHILE
PREMIUM
PRICING
OF
HEDONIC
APPLICATIONS
MAY
BE
ADOPTED
AND
TARGETED
AT
YOUNGER
MEN
IN
SUMMARY
OUR
STUDY
SUGGESTS
THAT
THE
CONSUMER
TECHNOLOGY
INDUSTRY
SHOULD
BETTER
DESIGN
AND
MARKET
TECHNOLOGIES
TO
CONSUMERS
IN
VARIOUS
DEMOGRAPHIC
GROUPS
AT
VARIOUS
STAGES
OF
THE
USE
CURVE
CONCLUSIONS
THE
CURRENT
STUDY
SHOWED
THAT
IN
THE
CONTEXT
OF
CONSUMERS
USE
OF
TECHNOLOGY
THE
EFFECTS
OF
HEDONIC
MOTIVATION
PRICE
VALUE
AND
HABIT
ARE
COMPLEX
FIRST
THE
IMPACT
OF
HEDONIC
MOTIVATION
ON
BEHAVIORAL
INTENTION
IS
MODERATED
BY
AGE
GENDER
AND
EXPERIENCE
SECOND
THE
EFFECT
OF
PRICE
VALUE
ON
BEHAVIORAL
INTENTION
IS
MODERATED
BY
AGE
AND
GENDER
FINALLY
HABIT
HAS
BOTH
DIRECT
AND
MEDIATED
EFFECTS
ON
TECHNOLOGY
USE
AND
THESE
EFFECTS
ARE
MODERATED
BY
INDIVIDUAL
DIFFERENCES
THUS
BOTH
THE
TPB
BASED
VIEW
OF
HABIT
I
E
AS
STORED
INTEN
TION
AND
THE
MORE
RECENT
AUTOMATIC
ACTIVATION
VIEW
OF
HABIT
I
E
AS
A
DIRECT
LINK
BETWEEN
STIMULUS
AND
BEHAVIOR
ARE
FUNCTIONING
TOGETHER
IN
DETERMINING
CONSUMER
USE
OF
TECH
NOLOGY
MOREOVER
THE
STRENGTH
AND
ACTIVATION
OF
HABIT
DIFFERS
ACROSS
AGE
GENDER
AND
EXPERIENCE
OVERALL
OUR
STUDY
CON
FIRMED
THE
IMPORTANT
ROLES
OF
HEDONIC
MOTIVATION
PRICE
VALUE
AND
HABIT
IN
INFLUENCING
TECHNOLOGY
USE
AND
IN
WHICH
IS
TAILORED
TO
THE
CONTEXT
OF
CONSUMER
ACCEPTANCE
AND
USE
OF
TECHNOLOGY
PYTHON
SEQUENCE
TYPES
IN
THIS
CHAPTER
WE
EXPLORE
PYTHON
VARIOUS
SEQUENCE
CLASSES
NAMELY
THE
BUILT
IN
LIST
TUPLE
AND
STR
CLASSES
THERE
IS
SIGNIFICANT
COMMONALITY
BETWEEN
THESE
CLASSES
MOST
NOTABLY
EACH
SUPPORTS
INDEXING
TO
ACCESS
AN
INDIVIDUAL
ELEMENT
OF
A
SEQUENCE
USING
A
SYNTAX
SUCH
AS
SEQ
K
AND
EACH
USES
A
LOW
LEVEL
CONCEPT
KNOWN
AS
AN
ARRAY
TO
REPRESENT
THE
SEQUENCE
HOWEVER
THERE
ARE
SIGNIFICANT
DIFFERENCES
IN
THE
ABSTRACTIONS
THAT
THESE
CLASSES
REPRESENT
AND
IN
THE
WAY
THAT
INSTANCES
OF
THESE
CLASSES
ARE
REPRESENTED
INTERNALLY
BY
PYTHON
BECAUSE
THESE
CLASSES
ARE
USED
SO
WIDELY
IN
PYTHON
PROGRAMS
AND
BECAUSE
THEY
WILL
BECOME
BUILDING
BLOCKS
UPON
WHICH
WE
WILL
DEVELOP
MORE
COMPLEX
DATA
STRUCTURES
IT
IS
IMPERATIVE
THAT
WE
ESTAB
LISH
A
CLEAR
UNDERSTANDING
OF
BOTH
THE
PUBLIC
BEHAVIOR
AND
INNER
WORKINGS
OF
THESE
CLASSES
PUBLIC
BEHAVIORS
A
PROPER
UNDERSTANDING
OF
THE
OUTWARD
SEMANTICS
FOR
A
CLASS
IS
A
NECESSITY
FOR
A
GOOD
PROGRAMMER
WHILE
THE
BASIC
USAGE
OF
LISTS
STRINGS
AND
TUPLES
MAY
SEEM
STRAIGHTFORWARD
THERE
ARE
SEVERAL
IMPORTANT
SUBTLETIES
REGARDING
THE
BEHAVIORS
AS
SOCIATED
WITH
THESE
CLASSES
SUCH
AS
WHAT
IT
MEANS
TO
MAKE
A
COPY
OF
A
SEQUENCE
OR
TO
TAKE
A
SLICE
OF
A
SEQUENCE
HAVING
A
MISUNDERSTANDING
OF
A
BEHAVIOR
CAN
EASILY
LEAD
TO
INADVERTENT
BUGS
IN
A
PROGRAM
THEREFORE
WE
ESTABLISH
AN
ACCURATE
MEN
TAL
MODEL
FOR
EACH
OF
THESE
CLASSES
THESE
IMAGES
WILL
HELP
WHEN
EXPLORING
MORE
ADVANCED
USAGE
SUCH
AS
REPRESENTING
A
MULTIDIMENSIONAL
DATA
SET
AS
A
LIST
OF
LISTS
IMPLEMENTATION
DETAILS
A
FOCUS
ON
THE
INTERNAL
IMPLEMENTATIONS
OF
THESE
CLASSES
SEEMS
TO
GO
AGAINST
OUR
STATED
PRINCIPLES
OF
OBJECT
ORIENTED
PROGRAMMING
IN
SECTION
WE
EMPHASIZED
THE
PRINCIPLE
OF
ENCAPSULATION
NOTING
THAT
THE
USER
OF
A
CLASS
NEED
NOT
KNOW
ABOUT
THE
INTERNAL
DETAILS
OF
THE
IMPLEMENTATION
WHILE
IT
IS
TRUE
THAT
ONE
ONLY
NEEDS
TO
UNDERSTAND
THE
SYNTAX
AND
SEMANTICS
OF
A
CLASS
PUBLIC
INTERFACE
IN
ORDER
TO
BE
ABLE
TO
WRITE
LEGAL
AND
CORRECT
CODE
THAT
USES
INSTANCES
OF
THE
CLASS
THE
EFFICIENCY
OF
A
PROGRAM
DEPENDS
GREATLY
ON
THE
EFFICIENCY
OF
THE
COMPONENTS
UPON
WHICH
IT
RELIES
ASYMPTOTIC
AND
EXPERIMENTAL
ANALYSES
IN
DESCRIBING
THE
EFFICIENCY
OF
VARIOUS
OPERATIONS
FOR
PYTHON
SEQUENCE
CLASSES
WE
WILL
RELY
ON
THE
FORMAL
ASYMPTOTIC
ANALYSIS
NOTATIONS
ESTABLISHED
IN
CHAPTER
WE
WILL
ALSO
PERFORM
EXPERIMENTAL
ANALYSES
OF
THE
PRIMARY
OPERATIONS
TO
PROVIDE
EMPIRICAL
EVIDENCE
THAT
IS
CONSISTENT
WITH
THE
MORE
THEORETICAL
ASYMPTOTIC
ANALYSES
LOW
LEVEL
ARRAYS
LOW
LEVEL
ARRAYS
TO
ACCURATELY
DESCRIBE
THE
WAY
IN
WHICH
PYTHON
REPRESENTS
THE
SEQUENCE
TYPES
WE
MUST
FIRST
DISCUSS
ASPECTS
OF
THE
LOW
LEVEL
COMPUTER
ARCHITECTURE
THE
PRIMARY
MEMORY
OF
A
COMPUTER
IS
COMPOSED
OF
BITS
OF
INFORMATION
AND
THOSE
BITS
ARE
TYP
ICALLY
GROUPED
INTO
LARGER
UNITS
THAT
DEPEND
UPON
THE
PRECISE
SYSTEM
ARCHITECTURE
SUCH
A
TYPICAL
UNIT
IS
A
BYTE
WHICH
IS
EQUIVALENT
TO
BITS
A
COMPUTER
SYSTEM
WILL
HAVE
A
HUGE
NUMBER
OF
BYTES
OF
MEMORY
AND
TO
KEEP
TRACK
OF
WHAT
INFORMATION
IS
STORED
IN
WHAT
BYTE
THE
COMPUTER
USES
AN
ABSTRACTION
KNOWN
AS
A
MEMORY
ADDRESS
IN
EFFECT
EACH
BYTE
OF
MEMORY
IS
ASSOCIATED
WITH
A
UNIQUE
NUMBER
THAT
SERVES
AS
ITS
ADDRESS
MORE
FORMALLY
THE
BINARY
REPRESENTATION
OF
THE
NUMBER
SERVES
AS
THE
ADDRESS
IN
THIS
WAY
THE
COMPUTER
SYSTEM
CAN
REFER
TO
THE
DATA
IN
BYTE
VERSUS
THE
DATA
IN
BYTE
FOR
EXAMPLE
MEMORY
ADDRESSES
ARE
TYPICALLY
COORDINATED
WITH
THE
PHYSICAL
LAYOUT
OF
THE
MEMORY
SYSTEM
AND
SO
WE
OFTEN
PORTRAY
THE
NUMBERS
IN
SEQUENTIAL
FASHION
FIGURE
PROVIDES
SUCH
A
DIAGRAM
WITH
THE
DESIGNATED
MEMORY
ADDRESS
FOR
EACH
BYTE
FIGURE
A
REPRESENTATION
OF
A
PORTION
OF
A
COMPUTER
MEMORY
WITH
INDIVIDUAL
BYTES
LABELED
WITH
CONSECUTIVE
MEMORY
ADDRESSES
DESPITE
THE
SEQUENTIAL
NATURE
OF
THE
NUMBERING
SYSTEM
COMPUTER
HARDWARE
IS
DESIGNED
IN
THEORY
SO
THAT
ANY
BYTE
OF
THE
MAIN
MEMORY
CAN
BE
EFFICIENTLY
ACCESSED
BASED
UPON
ITS
MEMORY
ADDRESS
IN
THIS
SENSE
WE
SAY
THAT
A
COMPUTER
MAIN
MEM
ORY
PERFORMS
AS
RANDOM
ACCESS
MEMORY
RAM
THAT
IS
IT
IS
JUST
AS
EASY
TO
RETRIEVE
BYTE
AS
IT
IS
TO
RETRIEVE
BYTE
IN
PRACTICE
THERE
ARE
COMPLICATING
FACTORS
INCLUDING
THE
USE
OF
CACHES
AND
EXTERNAL
MEMORY
WE
ADDRESS
SOME
OF
THOSE
ISSUES
IN
CHAPTER
USING
THE
NOTATION
FOR
ASYMPTOTIC
ANALYSIS
WE
SAY
THAT
ANY
INDIVIDUAL
BYTE
OF
MEMORY
CAN
BE
STORED
OR
RETRIEVED
IN
O
TIME
IN
GENERAL
A
PROGRAMMING
LANGUAGE
KEEPS
TRACK
OF
THE
ASSOCIATION
BETWEEN
AN
IDENTIFIER
AND
THE
MEMORY
ADDRESS
IN
WHICH
THE
ASSOCIATED
VALUE
IS
STORED
FOR
EXAMPLE
IDENTIFIER
X
MIGHT
BE
ASSOCIATED
WITH
ONE
VALUE
STORED
IN
MEMORY
WHILE
Y
IS
ASSOCIATED
WITH
ANOTHER
VALUE
STORED
IN
MEMORY
A
COMMON
PROGRAMMING
TASK
IS
TO
KEEP
TRACK
OF
A
SEQUENCE
OF
RELATED
OBJECTS
FOR
EXAMPLE
WE
MAY
WANT
A
VIDEO
GAME
TO
KEEP
TRACK
OF
THE
TOP
TEN
SCORES
FOR
THAT
GAME
RATHER
THAN
USE
TEN
DIFFERENT
VARIABLES
FOR
THIS
TASK
WE
WOULD
PREFER
TO
USE
A
SINGLE
NAME
FOR
THE
GROUP
AND
USE
INDEX
NUMBERS
TO
REFER
TO
THE
HIGH
SCORES
IN
THAT
GROUP
CHAPTER
ARRAY
BASED
SEQUENCES
A
GROUP
OF
RELATED
VARIABLES
CAN
BE
STORED
ONE
AFTER
ANOTHER
IN
A
CONTIGUOUS
PORTION
OF
THE
COMPUTER
MEMORY
WE
WILL
DENOTE
SUCH
A
REPRESENTATION
AS
AN
ARRAY
AS
A
TANGIBLE
EXAMPLE
A
TEXT
STRING
IS
STORED
AS
AN
ORDERED
SEQUENCE
OF
INDIVIDUAL
CHARACTERS
IN
PYTHON
EACH
CHARACTER
IS
REPRESENTED
USING
THE
UNICODE
CHARACTER
SET
AND
ON
MOST
COMPUTING
SYSTEMS
PYTHON
INTERNALLY
REPRESENTS
EACH
UNICODE
CHARACTER
WITH
BITS
I
E
BYTES
THEREFORE
A
SIX
CHARACTER
STRING
SUCH
AS
SAMPLE
WOULD
BE
STORED
IN
CONSECUTIVE
BYTES
OF
MEMORY
AS
DIAGRAMMED
IN
FIGURE
FIGURE
A
PYTHON
STRING
EMBEDDED
AS
AN
ARRAY
OF
CHARACTERS
IN
THE
COMPUTER
MEMORY
WE
ASSUME
THAT
EACH
UNICODE
CHARACTER
OF
THE
STRING
REQUIRES
TWO
BYTES
OF
MEMORY
THE
NUMBERS
BELOW
THE
ENTRIES
ARE
INDICES
INTO
THE
STRING
WE
DESCRIBE
THIS
AS
AN
ARRAY
OF
SIX
CHARACTERS
EVEN
THOUGH
IT
REQUIRES
BYTES
OF
MEMORY
WE
WILL
REFER
TO
EACH
LOCATION
WITHIN
AN
ARRAY
AS
A
CELL
AND
WILL
USE
AN
INTEGER
INDEX
TO
DESCRIBE
ITS
LOCATION
WITHIN
THE
ARRAY
WITH
CELLS
NUMBERED
STARTING
WITH
AND
SO
ON
FOR
EXAMPLE
IN
FIGURE
THE
CELL
OF
THE
ARRAY
WITH
INDEX
HAS
CONTENTS
L
AND
IS
STORED
IN
BYTES
AND
OF
MEMORY
EACH
CELL
OF
AN
ARRAY
MUST
USE
THE
SAME
NUMBER
OF
BYTES
THIS
REQUIREMENT
IS
WHAT
ALLOWS
AN
ARBITRARY
CELL
OF
THE
ARRAY
TO
BE
ACCESSED
IN
CONSTANT
TIME
BASED
ON
ITS
INDEX
IN
PARTICULAR
IF
ONE
KNOWS
THE
MEMORY
ADDRESS
AT
WHICH
AN
ARRAY
STARTS
E
G
IN
FIGURE
THE
NUMBER
OF
BYTES
PER
ELEMENT
E
G
FOR
A
UNICODE
CHARACTER
AND
A
DESIRED
INDEX
WITHIN
THE
ARRAY
THE
APPROPRIATE
MEMORY
ADDRESS
CAN
BE
COMPUTED
USING
THE
CALCULATION
START
CELLSIZE
INDEX
BY
THIS
FORMULA
THE
CELL
AT
INDEX
BEGINS
PRECISELY
AT
THE
START
OF
THE
ARRAY
THE
CELL
AT
INDEX
BEGINS
PRECISELY
CELLSIZE
BYTES
BEYOND
THE
START
OF
THE
ARRAY
AND
SO
ON
AS
AN
EXAMPLE
CELL
OF
FIGURE
BEGINS
AT
MEMORY
LOCATION
OF
COURSE
THE
ARITHMETIC
FOR
CALCULATING
MEMORY
ADDRESSES
WITHIN
AN
ARRAY
CAN
BE
HANDLED
AUTOMATICALLY
THEREFORE
A
PROGRAMMER
CAN
ENVISION
A
MORE
TYPICAL
HIGH
LEVEL
ABSTRACTION
OF
AN
ARRAY
OF
CHARACTERS
AS
DIAGRAMMED
IN
FIGURE
A
M
P
L
E
FIGURE
A
HIGHER
LEVEL
ABSTRACTION
FOR
THE
STRING
PORTRAYED
IN
FIGURE
LOW
LEVEL
ARRAYS
REFERENTIAL
ARRAYS
AS
ANOTHER
MOTIVATING
EXAMPLE
ASSUME
THAT
WE
WANT
A
MEDICAL
INFORMATION
SYSTEM
TO
KEEP
TRACK
OF
THE
PATIENTS
CURRENTLY
ASSIGNED
TO
BEDS
IN
A
CERTAIN
HOSPITAL
IF
WE
ASSUME
THAT
THE
HOSPITAL
HAS
BEDS
AND
CONVENIENTLY
THAT
THOSE
BEDS
ARE
NUM
BERED
FROM
TO
WE
MIGHT
CONSIDER
USING
AN
ARRAY
BASED
STRUCTURE
TO
MAINTAIN
THE
NAMES
OF
THE
PATIENTS
CURRENTLY
ASSIGNED
TO
THOSE
BEDS
FOR
EXAMPLE
IN
PYTHON
WE
MIGHT
USE
A
LIST
OF
NAMES
SUCH
AS
RENE
JOSEPH
JANET
JONAS
HELEN
VIRGINIA
TO
REPRESENT
SUCH
A
LIST
WITH
AN
ARRAY
PYTHON
MUST
ADHERE
TO
THE
REQUIREMENT
THAT
EACH
CELL
OF
THE
ARRAY
USE
THE
SAME
NUMBER
OF
BYTES
YET
THE
ELEMENTS
ARE
STRINGS
AND
STRINGS
NATURALLY
HAVE
DIFFERENT
LENGTHS
PYTHON
COULD
ATTEMPT
TO
RESERVE
ENOUGH
SPACE
FOR
EACH
CELL
TO
HOLD
THE
MAXIMUM
LENGTH
STRING
NOT
JUST
OF
CURRENTLY
STORED
STRINGS
BUT
OF
ANY
STRING
WE
MIGHT
EVER
WANT
TO
STORE
BUT
THAT
WOULD
BE
WASTEFUL
INSTEAD
PYTHON
REPRESENTS
A
LIST
OR
TUPLE
INSTANCE
USING
AN
INTERNAL
STORAGE
MECHANISM
OF
AN
ARRAY
OF
OBJECT
REFERENCES
AT
THE
LOWEST
LEVEL
WHAT
IS
STORED
IS
A
CONSECUTIVE
SEQUENCE
OF
MEMORY
ADDRESSES
AT
WHICH
THE
ELEMENTS
OF
THE
SE
QUENCE
RESIDE
A
HIGH
LEVEL
DIAGRAM
OF
SUCH
A
LIST
IS
SHOWN
IN
FIGURE
FIGURE
AN
ARRAY
STORING
REFERENCES
TO
STRINGS
ALTHOUGH
THE
RELATIVE
SIZE
OF
THE
INDIVIDUAL
ELEMENTS
MAY
VARY
THE
NUMBER
OF
BITS
USED
TO
STORE
THE
MEMORY
ADDRESS
OF
EACH
ELEMENT
IS
FIXED
E
G
BITS
PER
ADDRESS
IN
THIS
WAY
PYTHON
CAN
SUPPORT
CONSTANT
TIME
ACCESS
TO
A
LIST
OR
TUPLE
ELEMENT
BASED
ON
ITS
INDEX
IN
FIGURE
WE
CHARACTERIZE
A
LIST
OF
STRINGS
THAT
ARE
THE
NAMES
OF
THE
PATIENTS
IN
A
HOSPITAL
IT
IS
MORE
LIKELY
THAT
A
MEDICAL
INFORMATION
SYSTEM
WOULD
MANAGE
MORE
COMPREHENSIVE
INFORMATION
ON
EACH
PATIENT
PERHAPS
REPRESENTED
AS
AN
IN
STANCE
OF
A
PATIENT
CLASS
FROM
THE
PERSPECTIVE
OF
THE
LIST
IMPLEMENTATION
THE
SAME
PRINCIPLE
APPLIES
THE
LIST
WILL
SIMPLY
KEEP
A
SEQUENCE
OF
REFERENCES
TO
THOSE
OB
JECTS
NOTE
AS
WELL
THAT
A
REFERENCE
TO
THE
NONE
OBJECT
CAN
BE
USED
AS
AN
ELEMENT
OF
THE
LIST
TO
REPRESENT
AN
EMPTY
BED
IN
THE
HOSPITAL
CHAPTER
ARRAY
BASED
SEQUENCES
THE
FACT
THAT
LISTS
AND
TUPLES
ARE
REFERENTIAL
STRUCTURES
IS
SIGNIFICANT
TO
THE
SE
MANTICS
OF
THESE
CLASSES
A
SINGLE
LIST
INSTANCE
MAY
INCLUDE
MULTIPLE
REFERENCES
TO
THE
SAME
OBJECT
AS
ELEMENTS
OF
THE
LIST
AND
IT
IS
POSSIBLE
FOR
A
SINGLE
OBJECT
TO
BE
AN
ELEMENT
OF
TWO
OR
MORE
LISTS
AS
THOSE
LISTS
SIMPLY
STORE
REFERENCES
BACK
TO
THAT
OBJECT
AS
AN
EXAMPLE
WHEN
YOU
COMPUTE
A
SLICE
OF
A
LIST
THE
RESULT
IS
A
NEW
LIST
INSTANCE
BUT
THAT
NEW
LIST
HAS
REFERENCES
TO
THE
SAME
ELEMENTS
THAT
ARE
IN
THE
ORIGINAL
LIST
AS
PORTRAYED
IN
FIGURE
FIGURE
THE
RESULT
OF
THE
COMMAND
TEMP
PRIMES
WHEN
THE
ELEMENTS
OF
THE
LIST
ARE
IMMUTABLE
OBJECTS
AS
WITH
THE
INTEGER
IN
STANCES
IN
FIGURE
THE
FACT
THAT
THE
TWO
LISTS
SHARE
ELEMENTS
IS
NOT
THAT
SIGNIFI
CANT
AS
NEITHER
OF
THE
LISTS
CAN
CAUSE
A
CHANGE
TO
THE
SHARED
OBJECT
IF
FOR
EXAMPLE
THE
COMMAND
TEMP
WERE
EXECUTED
FROM
THIS
CONFIGURATION
THAT
DOES
NOT
CHANGE
THE
EXISTING
INTEGER
OBJECT
IT
CHANGES
THE
REFERENCE
IN
CELL
OF
THE
TEMP
LIST
TO
REFERENCE
A
DIFFERENT
OBJECT
THE
RESULTING
CONFIGURATION
IS
SHOWN
IN
FIGURE
FIGURE
THE
RESULT
OF
THE
COMMAND
TEMP
UPON
THE
CONFIGURATION
POR
TRAYED
IN
FIGURE
THE
SAME
SEMANTICS
IS
DEMONSTRATED
WHEN
MAKING
A
NEW
LIST
AS
A
COPY
OF
AN
EXISTING
ONE
WITH
A
SYNTAX
SUCH
AS
BACKUP
LIST
PRIMES
THIS
PRODUCES
A
NEW
LIST
THAT
IS
A
SHALLOW
COPY
SEE
SECTION
IN
THAT
IT
REFERENCES
THE
SAME
ELEMENTS
AS
IN
THE
FIRST
LIST
WITH
IMMUTABLE
ELEMENTS
THIS
POINT
IS
MOOT
IF
THE
CONTENTS
OF
THE
LIST
WERE
OF
A
MUTABLE
TYPE
A
DEEP
COPY
MEANING
A
NEW
LIST
WITH
NEW
ELEMENTS
CAN
BE
PRODUCED
BY
USING
THE
DEEPCOPY
FUNCTION
FROM
THE
COPY
MODULE
LOW
LEVEL
ARRAYS
AS
A
MORE
STRIKING
EXAMPLE
IT
IS
A
COMMON
PRACTICE
IN
PYTHON
TO
INITIALIZE
AN
ARRAY
OF
INTEGERS
USING
A
SYNTAX
SUCH
AS
COUNTERS
THIS
SYNTAX
PRODUCES
A
LIST
OF
LENGTH
EIGHT
WITH
ALL
EIGHT
ELEMENTS
BEING
THE
VALUE
ZERO
TECHNICALLY
ALL
EIGHT
CELLS
OF
THE
LIST
REFERENCE
THE
SAME
OBJECT
AS
PORTRAYED
IN
FIGURE
COUNTERS
FIGURE
THE
RESULT
OF
THE
COMMAND
DATA
AT
FIRST
GLANCE
THE
EXTREME
LEVEL
OF
ALIASING
IN
THIS
CONFIGURATION
MAY
SEEM
ALARMING
HOWEVER
WE
RELY
ON
THE
FACT
THAT
THE
REFERENCED
INTEGER
IS
IMMUTABLE
EVEN
A
COMMAND
SUCH
AS
COUNTERS
DOES
NOT
TECHNICALLY
CHANGE
THE
VALUE
OF
THE
EXISTING
INTEGER
INSTANCE
THIS
COMPUTES
A
NEW
INTEGER
WITH
VALUE
AND
SETS
CELL
TO
REFERENCE
THE
NEWLY
COMPUTED
VALUE
THE
RESULTING
CONFIGURATION
IS
SHOWN
IN
FIGURE
COUNTERS
FIGURE
THE
RESULT
OF
COMMAND
DATA
UPON
THE
LIST
FROM
FIGURE
AS
A
FINAL
MANIFESTATION
OF
THE
REFERENTIAL
NATURE
OF
LISTS
WE
NOTE
THAT
THE
EXTEND
COMMAND
IS
USED
TO
ADD
ALL
ELEMENTS
FROM
ONE
LIST
TO
THE
END
OF
ANOTHER
LIST
THE
EXTENDED
LIST
DOES
NOT
RECEIVE
COPIES
OF
THOSE
ELEMENTS
IT
RECEIVES
REFERENCES
TO
THOSE
ELEMENTS
FIGURE
PORTRAYS
THE
EFFECT
OF
A
CALL
TO
EXTEND
EXTRAS
PRIMES
FIGURE
THE
EFFECT
OF
COMMAND
PRIMES
EXTEND
EXTRAS
SHOWN
IN
LIGHT
GRAY
CHAPTER
ARRAY
BASED
SEQUENCES
COMPACT
ARRAYS
IN
PYTHON
IN
THE
INTRODUCTION
TO
THIS
SECTION
WE
EMPHASIZED
THAT
STRINGS
ARE
REPRESENTED
USING
AN
ARRAY
OF
CHARACTERS
NOT
AN
ARRAY
OF
REFERENCES
WE
WILL
REFER
TO
THIS
MORE
DIRECT
REPRESENTATION
AS
A
COMPACT
ARRAY
BECAUSE
THE
ARRAY
IS
STORING
THE
BITS
THAT
REPRESENT
THE
PRIMARY
DATA
CHARACTERS
IN
THE
CASE
OF
STRINGS
A
M
P
L
E
COMPACT
ARRAYS
HAVE
SEVERAL
ADVANTAGES
OVER
REFERENTIAL
STRUCTURES
IN
TERMS
OF
COMPUTING
PERFORMANCE
MOST
SIGNIFICANTLY
THE
OVERALL
MEMORY
USAGE
WILL
BE
MUCH
LOWER
FOR
A
COMPACT
STRUCTURE
BECAUSE
THERE
IS
NO
OVERHEAD
DEVOTED
TO
THE
EXPLICIT
STORAGE
OF
THE
SEQUENCE
OF
MEMORY
REFERENCES
IN
ADDITION
TO
THE
PRIMARY
DATA
THAT
IS
A
REFERENTIAL
STRUCTURE
WILL
TYPICALLY
USE
BITS
FOR
THE
MEMORY
ADDRESS
STORED
IN
THE
ARRAY
ON
TOP
OF
WHATEVER
NUMBER
OF
BITS
ARE
USED
TO
REPRESENT
THE
OBJECT
THAT
IS
CONSIDERED
THE
ELEMENT
ALSO
EACH
UNICODE
CHARACTER
STORED
IN
A
COMPACT
ARRAY
WITHIN
A
STRING
TYPICALLY
REQUIRES
BYTES
IF
EACH
CHARACTER
WERE
STORED
INDEPENDENTLY
AS
A
ONE
CHARACTER
STRING
THERE
WOULD
BE
SIGNIFICANTLY
MORE
BYTES
USED
AS
ANOTHER
CASE
STUDY
SUPPOSE
WE
WISH
TO
STORE
A
SEQUENCE
OF
ONE
MILLION
BIT
INTEGERS
IN
THEORY
WE
MIGHT
HOPE
TO
USE
ONLY
MILLION
BITS
HOWEVER
WE
ESTIMATE
THAT
A
PYTHON
LIST
WILL
USE
FOUR
TO
FIVE
TIMES
AS
MUCH
MEMORY
EACH
ELEMENT
OF
THE
LIST
WILL
RESULT
IN
A
BIT
MEMORY
ADDRESS
BEING
STORED
IN
THE
PRIMARY
ARRAY
AND
AN
INT
INSTANCE
BEING
STORED
ELSEWHERE
IN
MEMORY
PYTHON
ALLOWS
YOU
TO
QUERY
THE
ACTUAL
NUMBER
OF
BYTES
BEING
USED
FOR
THE
PRIMARY
STORAGE
OF
ANY
OBJECT
THIS
IS
DONE
USING
THE
GETSIZEOF
FUNCTION
OF
THE
SYS
MODULE
ON
OUR
SYSTEM
THE
SIZE
OF
A
TYPICAL
INT
OBJECT
REQUIRES
BYTES
OF
MEMORY
WELL
BEYOND
THE
BYTES
NEEDED
FOR
REPRESENTING
THE
ACTUAL
BIT
NUMBER
IN
ALL
THE
LIST
WILL
BE
USING
BYTES
PER
ENTRY
RATHER
THAN
THE
BYTES
THAT
A
COMPACT
LIST
OF
INTEGERS
WOULD
REQUIRE
ANOTHER
IMPORTANT
ADVANTAGE
TO
A
COMPACT
STRUCTURE
FOR
HIGH
PERFORMANCE
COM
PUTING
IS
THAT
THE
PRIMARY
DATA
ARE
STORED
CONSECUTIVELY
IN
MEMORY
NOTE
WELL
THAT
THIS
IS
NOT
THE
CASE
FOR
A
REFERENTIAL
STRUCTURE
THAT
IS
EVEN
THOUGH
A
LIST
MAINTAINS
CAREFUL
ORDERING
OF
THE
SEQUENCE
OF
MEMORY
ADDRESSES
WHERE
THOSE
ELEMENTS
RESIDE
IN
MEMORY
IS
NOT
DETERMINED
BY
THE
LIST
BECAUSE
OF
THE
WORKINGS
OF
THE
CACHE
AND
MEMORY
HIERARCHIES
OF
COMPUTERS
IT
IS
OFTEN
ADVANTAGEOUS
TO
HAVE
DATA
STORED
IN
MEMORY
NEAR
OTHER
DATA
THAT
MIGHT
BE
USED
IN
THE
SAME
COMPUTATIONS
DESPITE
THE
APPARENT
INEFFICIENCIES
OF
REFERENTIAL
STRUCTURES
WE
WILL
GENERALLY
BE
CONTENT
WITH
THE
CONVENIENCE
OF
PYTHON
LISTS
AND
TUPLES
IN
THIS
BOOK
THE
ONLY
PLACE
IN
WHICH
WE
CONSIDER
ALTERNATIVES
WILL
BE
IN
CHAPTER
WHICH
FOCUSES
ON
THE
IMPACT
OF
MEMORY
USAGE
ON
DATA
STRUCTURES
AND
ALGORITHMS
PYTHON
PROVIDES
SEVERAL
MEANS
FOR
CREATING
COMPACT
ARRAYS
OF
VARIOUS
TYPES
LOW
LEVEL
ARRAYS
PRIMARY
SUPPORT
FOR
COMPACT
ARRAYS
IS
IN
A
MODULE
NAMED
ARRAY
THAT
MODULE
DEFINES
A
CLASS
ALSO
NAMED
ARRAY
PROVIDING
COMPACT
STORAGE
FOR
ARRAYS
OF
PRIMITIVE
DATA
TYPES
A
PORTRAYAL
OF
SUCH
AN
ARRAY
OF
INTEGERS
IS
SHOWN
IN
FIGURE
FIGURE
INTEGERS
STORED
COMPACTLY
AS
ELEMENTS
OF
A
PYTHON
ARRAY
THE
PUBLIC
INTERFACE
FOR
THE
ARRAY
CLASS
CONFORMS
MOSTLY
TO
THAT
OF
A
PYTHON
LIST
HOWEVER
THE
CONSTRUCTOR
FOR
THE
ARRAY
CLASS
REQUIRES
A
TYPE
CODE
AS
A
FIRST
PARAMETER
WHICH
IS
A
CHARACTER
THAT
DESIGNATES
THE
TYPE
OF
DATA
THAT
WILL
BE
STORED
IN
THE
ARRAY
AS
A
TANGIBLE
EXAMPLE
THE
TYPE
CODE
I
DESIGNATES
AN
ARRAY
OF
SIGNED
INTEGERS
TYPICALLY
REPRESENTED
USING
AT
LEAST
BITS
EACH
WE
CAN
DECLARE
THE
ARRAY
SHOWN
IN
FIGURE
AS
PRIMES
ARRAY
I
THE
TYPE
CODE
ALLOWS
THE
INTERPRETER
TO
DETERMINE
PRECISELY
HOW
MANY
BITS
ARE
NEEDED
PER
ELEMENT
OF
THE
ARRAY
THE
TYPE
CODES
SUPPORTED
BY
THE
ARRAY
MODULE
AS
SHOWN
IN
TABLE
ARE
FORMALLY
BASED
UPON
THE
NATIVE
DATA
TYPES
USED
BY
THE
C
PROGRAMMING
LANGUAGE
THE
LANGUAGE
IN
WHICH
THE
THE
MOST
WIDELY
USED
DISTRI
BUTION
OF
PYTHON
IS
IMPLEMENTED
THE
PRECISE
NUMBER
OF
BITS
FOR
THE
C
DATA
TYPES
IS
SYSTEM
DEPENDENT
BUT
TYPICAL
RANGES
ARE
SHOWN
IN
THE
TABLE
CODE
C
DATA
TYPE
TYPICAL
NUMBER
OF
BYTES
B
SIGNED
CHAR
B
UNSIGNED
CHAR
U
UNICODE
CHAR
H
SIGNED
SHORT
INT
H
UNSIGNED
SHORT
INT
I
SIGNED
INT
I
UNSIGNED
INT
L
SIGNED
LONG
INT
L
UNSIGNED
LONG
INT
F
FLOAT
D
FLOAT
TABLE
TYPE
CODES
SUPPORTED
BY
THE
ARRAY
MODULE
THE
ARRAY
MODULE
DOES
NOT
PROVIDE
SUPPORT
FOR
MAKING
COMPACT
ARRAYS
OF
USER
DEFINED
DATA
TYPES
COMPACT
ARRAYS
OF
SUCH
STRUCTURES
CAN
BE
CREATED
WITH
THE
LOWER
LEVEL
SUPPORT
OF
A
MODULE
NAMED
CTYPES
SEE
SECTION
FOR
MORE
DISCUSSION
OF
THE
CTYPES
MODULE
CHAPTER
ARRAY
BASED
SEQUENCES
DYNAMIC
ARRAYS
AND
AMORTIZATION
WHEN
CREATING
A
LOW
LEVEL
ARRAY
IN
A
COMPUTER
SYSTEM
THE
PRECISE
SIZE
OF
THAT
ARRAY
MUST
BE
EXPLICITLY
DECLARED
IN
ORDER
FOR
THE
SYSTEM
TO
PROPERLY
ALLOCATE
A
CONSECUTIVE
PIECE
OF
MEMORY
FOR
ITS
STORAGE
FOR
EXAMPLE
FIGURE
DISPLAYS
AN
ARRAY
OF
BYTES
THAT
MIGHT
BE
STORED
IN
MEMORY
LOCATIONS
THROUGH
FIGURE
AN
ARRAY
OF
BYTES
ALLOCATED
IN
MEMORY
LOCATIONS
THROUGH
BECAUSE
THE
SYSTEM
MIGHT
DEDICATE
NEIGHBORING
MEMORY
LOCATIONS
TO
STORE
OTHER
DATA
THE
CAPACITY
OF
AN
ARRAY
CANNOT
TRIVIALLY
BE
INCREASED
BY
EXPANDING
INTO
SUB
SEQUENT
CELLS
IN
THE
CONTEXT
OF
REPRESENTING
A
PYTHON
TUPLE
OR
STR
INSTANCE
THIS
CONSTRAINT
IS
NO
PROBLEM
INSTANCES
OF
THOSE
CLASSES
ARE
IMMUTABLE
SO
THE
CORRECT
SIZE
FOR
AN
UNDERLYING
ARRAY
CAN
BE
FIXED
WHEN
THE
OBJECT
IS
INSTANTIATED
PYTHON
LIST
CLASS
PRESENTS
A
MORE
INTERESTING
ABSTRACTION
ALTHOUGH
A
LIST
HAS
A
PARTICULAR
LENGTH
WHEN
CONSTRUCTED
THE
CLASS
ALLOWS
US
TO
ADD
ELEMENTS
TO
THE
LIST
WITH
NO
APPARENT
LIMIT
ON
THE
OVERALL
CAPACITY
OF
THE
LIST
TO
PROVIDE
THIS
ABSTRACTION
PYTHON
RELIES
ON
AN
ALGORITHMIC
SLEIGHT
OF
HAND
KNOWN
AS
A
DYNAMIC
ARRAY
THE
FIRST
KEY
TO
PROVIDING
THE
SEMANTICS
OF
A
DYNAMIC
ARRAY
IS
THAT
A
LIST
INSTANCE
MAINTAINS
AN
UNDERLYING
ARRAY
THAT
OFTEN
HAS
GREATER
CAPACITY
THAN
THE
CURRENT
LENGTH
OF
THE
LIST
FOR
EXAMPLE
WHILE
A
USER
MAY
HAVE
CREATED
A
LIST
WITH
FIVE
ELEMENTS
THE
SYSTEM
MAY
HAVE
RESERVED
AN
UNDERLYING
ARRAY
CAPABLE
OF
STORING
EIGHT
OBJECT
REFERENCES
RATHER
THAN
ONLY
FIVE
THIS
EXTRA
CAPACITY
MAKES
IT
EASY
TO
APPEND
A
NEW
ELEMENT
TO
THE
LIST
BY
USING
THE
NEXT
AVAILABLE
CELL
OF
THE
ARRAY
IF
A
USER
CONTINUES
TO
APPEND
ELEMENTS
TO
A
LIST
ANY
RESERVED
CAPACITY
WILL
EVENTUALLY
BE
EXHAUSTED
IN
THAT
CASE
THE
CLASS
REQUESTS
A
NEW
LARGER
ARRAY
FROM
THE
SYSTEM
AND
INITIALIZES
THE
NEW
ARRAY
SO
THAT
ITS
PREFIX
MATCHES
THAT
OF
THE
EXISTING
SMALLER
ARRAY
AT
THAT
POINT
IN
TIME
THE
OLD
ARRAY
IS
NO
LONGER
NEEDED
SO
IT
IS
RECLAIMED
BY
THE
SYSTEM
INTUITIVELY
THIS
STRATEGY
IS
MUCH
LIKE
THAT
OF
THE
HERMIT
CRAB
WHICH
MOVES
INTO
A
LARGER
SHELL
WHEN
IT
OUTGROWS
ITS
PREVIOUS
ONE
WE
GIVE
EMPIRICAL
EVIDENCE
THAT
PYTHON
LIST
CLASS
IS
BASED
UPON
SUCH
A
STRAT
EGY
THE
SOURCE
CODE
FOR
OUR
EXPERIMENT
IS
DISPLAYED
IN
CODE
FRAGMENT
AND
A
SAMPLE
OUTPUT
OF
THAT
PROGRAM
IS
GIVEN
IN
CODE
FRAGMENT
WE
RELY
ON
A
FUNC
TION
NAMED
GETSIZEOF
THAT
IS
AVAILABLE
FROM
THE
SYS
MODULE
THIS
FUNCTION
REPORTS
THE
NUMBER
OF
BYTES
THAT
ARE
BEING
USED
TO
STORE
AN
OBJECT
IN
PYTHON
FOR
A
LIST
IT
REPORTS
THE
NUMBER
OF
BYTES
DEVOTED
TO
THE
ARRAY
AND
OTHER
INSTANCE
VARIABLES
OF
THE
LIST
BUT
NOT
ANY
SPACE
DEVOTED
TO
ELEMENTS
REFERENCED
BY
THE
LIST
DYNAMIC
ARRAYS
AND
AMORTIZATION
IMPORT
SYS
PROVIDES
GETSIZEOF
FUNCTION
DATA
FOR
K
IN
RANGE
N
NOTE
MUST
FIX
CHOICE
OF
N
A
LEN
DATA
NUMBER
OF
ELEMENTS
B
SYS
GETSIZEOF
DATA
ACTUAL
SIZE
IN
BYTES
PRINT
LENGTH
SIZE
IN
BYTES
FORMAT
A
B
DATA
APPEND
NONE
INCREASE
LENGTH
BY
ONE
CODE
FRAGMENT
AN
EXPERIMENT
TO
EXPLORE
THE
RELATIONSHIP
BETWEEN
A
LIST
LENGTH
AND
ITS
UNDERLYING
SIZE
IN
PYTHON
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
LENGTH
SIZE
IN
BYTES
CODE
FRAGMENT
SAMPLE
OUTPUT
FROM
THE
EXPERIMENT
OF
CODE
FRAGMENT
CHAPTER
ARRAY
BASED
SEQUENCES
IN
EVALUATING
THE
RESULTS
OF
THE
EXPERIMENT
WE
DRAW
ATTENTION
TO
THE
FIRST
LINE
OF
OUTPUT
FROM
CODE
FRAGMENT
WE
SEE
THAT
AN
EMPTY
LIST
INSTANCE
ALREADY
REQUIRES
A
CERTAIN
NUMBER
OF
BYTES
OF
MEMORY
ON
OUR
SYSTEM
IN
FACT
EACH
OBJECT
IN
PYTHON
MAINTAINS
SOME
STATE
FOR
EXAMPLE
A
REFERENCE
TO
DENOTE
THE
CLASS
TO
WHICH
IT
BELONGS
ALTHOUGH
WE
CANNOT
DIRECTLY
ACCESS
PRIVATE
INSTANCE
VARIABLES
FOR
A
LIST
WE
CAN
SPECULATE
THAT
IN
SOME
FORM
IT
MAINTAINS
STATE
INFORMATION
AKIN
TO
N
THE
NUMBER
OF
ACTUAL
ELEMENTS
CURRENTLY
STORED
IN
THE
LIST
CAPACITY
THE
MAXIMUM
NUMBER
OF
ELEMENTS
THAT
COULD
BE
STORED
IN
THE
CURRENTLY
ALLOCATED
ARRAY
A
THE
REFERENCE
TO
THE
CURRENTLY
ALLOCATED
ARRAY
INITIALLY
NONE
AS
SOON
AS
THE
FIRST
ELEMENT
IS
INSERTED
INTO
THE
LIST
WE
DETECT
A
CHANGE
IN
THE
UNDERLYING
SIZE
OF
THE
STRUCTURE
IN
PARTICULAR
WE
SEE
THE
NUMBER
OF
BYTES
JUMP
FROM
TO
AN
INCREASE
OF
EXACTLY
BYTES
OUR
EXPERIMENT
WAS
RUN
ON
A
BIT
MACHINE
ARCHITECTURE
MEANING
THAT
EACH
MEMORY
ADDRESS
IS
A
BIT
NUMBER
I
E
BYTES
WE
SPECULATE
THAT
THE
INCREASE
OF
BYTES
REFLECTS
THE
ALLOCATION
OF
AN
UNDERLYING
ARRAY
CAPABLE
OF
STORING
FOUR
OBJECT
REFERENCES
THIS
HYPOTHESIS
IS
CONSISTENT
WITH
THE
FACT
THAT
WE
DO
NOT
SEE
ANY
UNDERLYING
CHANGE
IN
THE
MEMORY
USAGE
AFTER
INSERTING
THE
SECOND
THIRD
OR
FOURTH
ELEMENT
INTO
THE
LIST
AFTER
THE
FIFTH
ELEMENT
HAS
BEEN
ADDED
TO
THE
LIST
WE
SEE
THE
MEMORY
USAGE
JUMP
FROM
BYTES
TO
BYTES
IF
WE
ASSUME
THE
ORIGINAL
BASE
USAGE
OF
BYTES
FOR
THE
LIST
THE
TOTAL
OF
SUGGESTS
AN
ADDITIONAL
BYTES
THAT
PROVIDE
CAPACITY
FOR
UP
TO
EIGHT
OBJECT
REFERENCES
AGAIN
THIS
IS
CONSISTENT
WITH
THE
EXPERIMENT
AS
THE
MEMORY
USAGE
DOES
NOT
INCREASE
AGAIN
UNTIL
THE
NINTH
INSERTION
AT
THAT
POINT
THE
BYTES
CAN
BE
VIEWED
AS
THE
ORIGINAL
PLUS
AN
ADDITIONAL
BYTE
ARRAY
TO
STORE
OBJECT
REFERENCES
THE
INSERTION
PUSHES
THE
OVERALL
MEMORY
USAGE
TO
HENCE
ENOUGH
TO
STORE
UP
TO
ELEMENT
REFERENCES
BECAUSE
A
LIST
IS
A
REFERENTIAL
STRUCTURE
THE
RESULT
OF
GETSIZEOF
FOR
A
LIST
INSTANCE
ONLY
INCLUDES
THE
SIZE
FOR
REPRESENTING
ITS
PRIMARY
STRUCTURE
IT
DOES
NOT
ACCOUNT
FOR
MEMORY
USED
BY
THE
OBJECTS
THAT
ARE
ELEMENTS
OF
THE
LIST
IN
OUR
EXPERIMENT
WE
REPEATEDLY
APPEND
NONE
TO
THE
LIST
BECAUSE
WE
DO
NOT
CARE
ABOUT
THE
CONTENTS
BUT
WE
COULD
APPEND
ANY
TYPE
OF
OBJECT
WITHOUT
AFFECTING
THE
NUMBER
OF
BYTES
REPORTED
BY
GETSIZEOF
DATA
IF
WE
WERE
TO
CONTINUE
SUCH
AN
EXPERIMENT
FOR
FURTHER
ITERATIONS
WE
MIGHT
TRY
TO
DISCERN
THE
PATTERN
FOR
HOW
LARGE
OF
AN
ARRAY
PYTHON
CREATES
EACH
TIME
THE
CA
PACITY
OF
THE
PREVIOUS
ARRAY
IS
EXHAUSTED
SEE
EXERCISES
R
AND
C
BEFORE
EXPLORING
THE
PRECISE
SEQUENCE
OF
CAPACITIES
USED
BY
PYTHON
WE
CONTINUE
IN
THIS
SECTION
BY
DESCRIBING
A
GENERAL
APPROACH
FOR
IMPLEMENTING
DYNAMIC
ARRAYS
AND
FOR
PERFORMING
AN
ASYMPTOTIC
ANALYSIS
OF
THEIR
PERFORMANCE
DYNAMIC
ARRAYS
AND
AMORTIZATION
IMPLEMENTING
A
DYNAMIC
ARRAY
ALTHOUGH
THE
PYTHON
LIST
CLASS
PROVIDES
A
HIGHLY
OPTIMIZED
IMPLEMENTATION
OF
DY
NAMIC
ARRAYS
UPON
WHICH
WE
RELY
FOR
THE
REMAINDER
OF
THIS
BOOK
IT
IS
INSTRUCTIVE
TO
SEE
HOW
SUCH
A
CLASS
MIGHT
BE
IMPLEMENTED
THE
KEY
IS
TO
PROVIDE
MEANS
TO
GROW
THE
ARRAY
A
THAT
STORES
THE
ELEMENTS
OF
A
LIST
OF
COURSE
WE
CANNOT
ACTUALLY
GROW
THAT
ARRAY
AS
ITS
CAPACITY
IS
FIXED
IF
AN
ELEMENT
IS
APPENDED
TO
A
LIST
AT
A
TIME
WHEN
THE
UNDERLYING
ARRAY
IS
FULL
WE
PERFORM
THE
FOLLOWING
STEPS
ALLOCATE
A
NEW
ARRAY
B
WITH
LARGER
CAPACITY
SET
B
I
A
I
FOR
I
N
WHERE
N
DENOTES
CURRENT
NUMBER
OF
ITEMS
SET
A
B
THAT
IS
WE
HENCEFORTH
USE
B
AS
THE
ARRAY
SUPPORTING
THE
LIST
INSERT
THE
NEW
ELEMENT
IN
THE
NEW
ARRAY
AN
ILLUSTRATION
OF
THIS
PROCESS
IS
SHOWN
IN
FIGURE
A
A
B
B
A
B
C
FIGURE
AN
ILLUSTRATION
OF
THE
THREE
STEPS
FOR
GROWING
A
DYNAMIC
ARRAY
A
CREATE
NEW
ARRAY
B
B
STORE
ELEMENTS
OF
A
IN
B
C
REASSIGN
REFERENCE
A
TO
THE
NEW
ARRAY
NOT
SHOWN
IS
THE
FUTURE
GARBAGE
COLLECTION
OF
THE
OLD
ARRAY
OR
THE
INSERTION
OF
THE
NEW
ELEMENT
THE
REMAINING
ISSUE
TO
CONSIDER
IS
HOW
LARGE
OF
A
NEW
ARRAY
TO
CREATE
A
COM
MONLY
USED
RULE
IS
FOR
THE
NEW
ARRAY
TO
HAVE
TWICE
THE
CAPACITY
OF
THE
EXISTING
ARRAY
THAT
HAS
BEEN
FILLED
IN
SECTION
WE
WILL
PROVIDE
A
MATHEMATICAL
ANALYSIS
TO
JUSTIFY
SUCH
A
CHOICE
IN
CODE
FRAGMENT
WE
OFFER
A
CONCRETE
IMPLEMENTATION
OF
DYNAMIC
ARRAYS
IN
PYTHON
OUR
DYNAMICARRAY
CLASS
IS
DESIGNED
USING
IDEAS
DESCRIBED
IN
THIS
SEC
TION
WHILE
CONSISTENT
WITH
THE
INTERFACE
OF
A
PYTHON
LIST
CLASS
WE
PROVIDE
ONLY
LIMITED
FUNCTIONALITY
IN
THE
FORM
OF
AN
APPEND
METHOD
AND
ACCESSORS
LEN
AND
GETITEM
SUPPORT
FOR
CREATING
LOW
LEVEL
ARRAYS
IS
PROVIDED
BY
A
MODULE
NAMED
CTYPES
BECAUSE
WE
WILL
NOT
TYPICALLY
USE
SUCH
A
LOW
LEVEL
STRUCTURE
IN
THE
REMAIN
DER
OF
THIS
BOOK
WE
OMIT
A
DETAILED
EXPLANATION
OF
THE
CTYPES
MODULE
INSTEAD
WE
WRAP
THE
NECESSARY
COMMAND
FOR
DECLARING
THE
RAW
ARRAY
WITHIN
A
PRIVATE
UTIL
ITY
METHOD
MAKE
ARRAY
THE
HALLMARK
EXPANSION
PROCEDURE
IS
PERFORMED
IN
OUR
NONPUBLIC
RESIZE
METHOD
CHAPTER
ARRAY
BASED
SEQUENCES
IMPORT
CTYPES
PROVIDES
LOW
LEVEL
ARRAYS
CLASS
DYNAMICARRAY
A
DYNAMIC
ARRAY
CLASS
AKIN
TO
A
SIMPLIFIED
PYTHON
LIST
DEF
INIT
SELF
CREATE
AN
EMPTY
ARRAY
SELF
N
COUNT
ACTUAL
ELEMENTS
SELF
CAPACITY
DEFAULT
ARRAY
CAPACITY
SELF
A
SELF
MAKE
ARRAY
SELF
CAPACITY
LOW
LEVEL
ARRAY
DEF
LEN
SELF
RETURN
NUMBER
OF
ELEMENTS
STORED
IN
THE
ARRAY
RETURN
SELF
N
DEF
GETITEM
SELF
K
RETURN
ELEMENT
AT
INDEX
K
IF
NOT
K
SELF
N
RAISE
INDEXERROR
INVALID
INDEX
RETURN
SELF
A
K
RETRIEVE
FROM
ARRAY
DEF
APPEND
SELF
OBJ
ADD
OBJECT
TO
END
OF
THE
ARRAY
IF
SELF
N
SELF
CAPACITY
NOT
ENOUGH
ROOM
SELF
RESIZE
SELF
CAPACITY
SO
DOUBLE
CAPACITY
SELF
A
SELF
N
OBJ
SELF
N
DEF
RESIZE
SELF
C
NONPUBLIC
UTITITY
RESIZE
INTERNAL
ARRAY
TO
CAPACITY
C
B
SELF
MAKE
ARRAY
C
NEW
BIGGER
ARRAY
FOR
K
IN
RANGE
SELF
N
FOR
EACH
EXISTING
VALUE
B
K
SELF
A
K
SELF
A
B
USE
THE
BIGGER
ARRAY
SELF
CAPACITY
C
DEF
MAKE
ARRAY
SELF
C
NONPUBLIC
UTITITY
RETURN
NEW
ARRAY
WITH
CAPACITY
C
RETURN
C
CTYPES
PY
OBJECT
SEE
CTYPES
DOCUMENTATION
CODE
FRAGMENT
AN
IMPLEMENTATION
OF
A
DYNAMICARRAY
CLASS
USING
A
RAW
ARRAY
FROM
THE
CTYPES
MODULE
AS
STORAGE
DYNAMIC
ARRAYS
AND
AMORTIZATION
AMORTIZED
ANALYSIS
OF
DYNAMIC
ARRAYS
IN
THIS
SECTION
WE
PERFORM
A
DETAILED
ANALYSIS
OF
THE
RUNNING
TIME
OF
OPERATIONS
ON
DYNAMIC
ARRAYS
WE
USE
THE
BIG
OMEGA
NOTATION
INTRODUCED
IN
SECTION
TO
GIVE
AN
ASYMPTOTIC
LOWER
BOUND
ON
THE
RUNNING
TIME
OF
AN
ALGORITHM
OR
STEP
WITHIN
IT
THE
STRATEGY
OF
REPLACING
AN
ARRAY
WITH
A
NEW
LARGER
ARRAY
MIGHT
AT
FIRST
SEEM
SLOW
BECAUSE
A
SINGLE
APPEND
OPERATION
MAY
REQUIRE
N
TIME
TO
PERFORM
WHERE
N
IS
THE
CURRENT
NUMBER
OF
ELEMENTS
IN
THE
ARRAY
HOWEVER
NOTICE
THAT
BY
DOUBLING
THE
CAPACITY
DURING
AN
ARRAY
REPLACEMENT
OUR
NEW
ARRAY
ALLOWS
US
TO
ADD
N
NEW
ELEMENTS
BEFORE
THE
ARRAY
MUST
BE
REPLACED
AGAIN
IN
THIS
WAY
THERE
ARE
MANY
SIMPLE
APPEND
OPERATIONS
FOR
EACH
EXPENSIVE
ONE
SEE
FIGURE
THIS
FACT
ALLOWS
US
TO
SHOW
THAT
PERFORMING
A
SERIES
OF
OPERATIONS
ON
AN
INITIALLY
EMPTY
DYNAMIC
ARRAY
IS
EFFICIENT
IN
TERMS
OF
ITS
TOTAL
RUNNING
TIME
USING
AN
ALGORITHMIC
DESIGN
PATTERN
CALLED
AMORTIZATION
WE
CAN
SHOW
THAT
PER
FORMING
A
SEQUENCE
OF
SUCH
APPEND
OPERATIONS
ON
A
DYNAMIC
ARRAY
IS
ACTUALLY
QUITE
EFFICIENT
TO
PERFORM
AN
AMORTIZED
ANALYSIS
WE
USE
AN
ACCOUNTING
TECHNIQUE
WHERE
WE
VIEW
THE
COMPUTER
AS
A
COIN
OPERATED
APPLIANCE
THAT
REQUIRES
THE
PAYMENT
OF
ONE
CYBER
DOLLAR
FOR
A
CONSTANT
AMOUNT
OF
COMPUTING
TIME
WHEN
AN
OPERATION
IS
EXECUTED
WE
SHOULD
HAVE
ENOUGH
CYBER
DOLLARS
AVAILABLE
IN
OUR
CURRENT
BANK
ACCOUNT
TO
PAY
FOR
THAT
OPERATION
RUNNING
TIME
THUS
THE
TOTAL
AMOUNT
OF
CYBER
DOLLARS
SPENT
FOR
ANY
COMPUTATION
WILL
BE
PROPORTIONAL
TO
THE
TOTAL
TIME
SPENT
ON
THAT
COMPUTATION
THE
BEAUTY
OF
USING
THIS
ANALYSIS
METHOD
IS
THAT
WE
CAN
OVERCHARGE
SOME
OPERATIONS
IN
ORDER
TO
SAVE
UP
CYBER
DOLLARS
TO
PAY
FOR
OTHERS
CURRENT
NUMBER
OF
ELEMENTS
FIGURE
RUNNING
TIMES
OF
A
SERIES
OF
APPEND
OPERATIONS
ON
A
DYNAMIC
ARRAY
CHAPTER
ARRAY
BASED
SEQUENCES
PROPOSITION
LET
BE
A
SEQUENCE
IMPLEMENTED
BY
MEANS
OF
A
DYNAMIC
ARRAY
WITH
INITIAL
CAPACITY
ONE
USING
THE
STRATEGY
OF
DOUBLING
THE
ARRAY
SIZE
WHEN
FULL
THE
TOTAL
TIME
TO
PERFORM
A
SERIES
OF
N
APPEND
OPERATIONS
IN
STARTING
FROM
BEING
EMPTY
IS
O
N
JUSTIFICATION
LET
US
ASSUME
THAT
ONE
CYBER
DOLLAR
IS
ENOUGH
TO
PAY
FOR
THE
EXECU
TION
OF
EACH
APPEND
OPERATION
IN
EXCLUDING
THE
TIME
SPENT
FOR
GROWING
THE
ARRAY
ALSO
LET
US
ASSUME
THAT
GROWING
THE
ARRAY
FROM
SIZE
K
TO
SIZE
REQUIRES
K
CYBER
DOLLARS
FOR
THE
TIME
SPENT
INITIALIZING
THE
NEW
ARRAY
WE
SHALL
CHARGE
EACH
APPEND
OPERATION
THREE
CYBER
DOLLARS
THUS
WE
OVERCHARGE
EACH
APPEND
OPERATION
THAT
DOES
NOT
CAUSE
AN
OVERFLOW
BY
TWO
CYBER
DOLLARS
THINK
OF
THE
TWO
CYBER
DOLLARS
PROFITED
IN
AN
INSERTION
THAT
DOES
NOT
GROW
THE
ARRAY
AS
BEING
STORED
WITH
THE
CELL
IN
WHICH
THE
ELEMENT
WAS
INSERTED
AN
OVERFLOW
OCCURS
WHEN
THE
ARRAY
HAS
ELEMENTS
FOR
SOME
INTEGER
I
AND
THE
SIZE
OF
THE
ARRAY
USED
BY
THE
ARRAY
REPRESENTING
IS
THUS
DOUBLING
THE
SIZE
OF
THE
ARRAY
WILL
REQUIRE
CYBER
DOLLARS
FORTUNATELY
THESE
CYBER
DOLLARS
CAN
BE
FOUND
STORED
IN
CELLS
THROUGH
SEE
FIGURE
NOTE
THAT
THE
PREVIOUS
OVERFLOW
OCCURRED
WHEN
THE
NUMBER
OF
ELEMENTS
BECAME
LARGER
THAN
FOR
THE
FIRST
TIME
AND
THUS
THE
CYBER
DOLLARS
STORED
IN
CELLS
THROUGH
HAVE
NOT
YET
BEEN
SPENT
THEREFORE
WE
HAVE
A
VALID
AMORTIZATION
SCHEME
IN
WHICH
EACH
OPERATION
IS
CHARGED
THREE
CYBER
DOLLARS
AND
ALL
THE
COMPUT
ING
TIME
IS
PAID
FOR
THAT
IS
WE
CAN
PAY
FOR
THE
EXECUTION
OF
N
APPEND
OPERATIONS
USING
CYBER
DOLLARS
IN
OTHER
WORDS
THE
AMORTIZED
RUNNING
TIME
OF
EACH
APPEND
OPERATION
IS
O
HENCE
THE
TOTAL
RUNNING
TIME
OF
N
APPEND
OPERATIONS
IS
O
N
A
B
FIGURE
ILLUSTRATION
OF
A
SERIES
OF
APPEND
OPERATIONS
ON
A
DYNAMIC
ARRAY
A
AN
CELL
ARRAY
IS
FULL
WITH
TWO
CYBER
DOLLARS
STORED
AT
CELLS
THROUGH
B
AN
APPEND
OPERATION
CAUSES
AN
OVERFLOW
AND
A
DOUBLING
OF
CAPACITY
COPYING
THE
EIGHT
OLD
ELEMENTS
TO
THE
NEW
ARRAY
IS
PAID
FOR
BY
THE
CYBER
DOLLARS
ALREADY
STORED
IN
THE
TABLE
INSERTING
THE
NEW
ELEMENT
IS
PAID
FOR
BY
ONE
OF
THE
CYBER
DOLLARS
CHARGED
TO
THE
CURRENT
APPEND
OPERATION
AND
THE
TWO
CYBER
DOLLARS
PROFITED
ARE
STORED
AT
CELL
DYNAMIC
ARRAYS
AND
AMORTIZATION
GEOMETRIC
INCREASE
IN
CAPACITY
ALTHOUGH
THE
PROOF
OF
PROPOSITION
RELIES
ON
THE
ARRAY
BEING
DOUBLED
EACH
TIME
WE
EXPAND
THE
O
AMORTIZED
BOUND
PER
OPERATION
CAN
BE
PROVEN
FOR
ANY
GEO
METRICALLY
INCREASING
PROGRESSION
OF
ARRAY
SIZES
SEE
SECTION
FOR
DISCUSSION
OF
GEOMETRIC
PROGRESSIONS
WHEN
CHOOSING
THE
GEOMETRIC
BASE
THERE
EXISTS
A
TRADE
OFF
BETWEEN
RUN
TIME
EFFICIENCY
AND
MEMORY
USAGE
WITH
A
BASE
OF
I
E
DOUBLING
THE
ARRAY
IF
THE
LAST
INSERTION
CAUSES
A
RESIZE
EVENT
THE
ARRAY
ESSENTIALLY
ENDS
UP
TWICE
AS
LARGE
AS
IT
NEEDS
TO
BE
IF
WE
INSTEAD
INCREASE
THE
ARRAY
BY
ONLY
OF
ITS
CURRENT
SIZE
I
E
A
GEOMETRIC
BASE
OF
WE
DO
NOT
RISK
WASTING
AS
MUCH
MEMORY
IN
THE
END
BUT
THERE
WILL
BE
MORE
INTERMEDIATE
RESIZE
EVENTS
ALONG
THE
WAY
STILL
IT
IS
POSSIBLE
TO
PROVE
AN
O
AMORTIZED
BOUND
USING
A
CONSTANT
FACTOR
GREATER
THAN
THE
CYBER
DOLLARS
PER
OPERATION
USED
IN
THE
PROOF
OF
PROPOSITION
SEE
EXERCISE
C
THE
KEY
TO
THE
PERFORMANCE
IS
THAT
THE
AMOUNT
OF
ADDITIONAL
SPACE
IS
PROPORTIONAL
TO
THE
CURRENT
SIZE
OF
THE
ARRAY
BEWARE
OF
ARITHMETIC
PROGRESSION
TO
AVOID
RESERVING
TOO
MUCH
SPACE
AT
ONCE
IT
MIGHT
BE
TEMPTING
TO
IMPLEMENT
A
DYNAMIC
ARRAY
WITH
A
STRATEGY
IN
WHICH
A
CONSTANT
NUMBER
OF
ADDITIONAL
CELLS
ARE
RESERVED
EACH
TIME
AN
ARRAY
IS
RESIZED
UNFORTUNATELY
THE
OVERALL
PERFORMANCE
OF
SUCH
A
STRATEGY
IS
SIGNIFICANTLY
WORSE
AT
AN
EXTREME
AN
INCREASE
OF
ONLY
ONE
CELL
CAUSES
EACH
APPEND
OPERATION
TO
RESIZE
THE
ARRAY
LEADING
TO
A
FAMILIAR
N
SUMMATION
AND
N
OVERALL
COST
USING
INCREASES
OF
OR
AT
A
TIME
IS
SLIGHTLY
BETTER
AS
PORTRAYED
IN
FIGURE
BUT
THE
OVERALL
COST
REMAINS
QUADRATIC
CURRENT
NUMBER
OF
ELEMENTS
CURRENT
NUMBER
OF
ELEMENTS
A
B
FIGURE
RUNNING
TIMES
OF
A
SERIES
OF
APPEND
OPERATIONS
ON
A
DYNAMIC
ARRAY
USING
ARITHMETIC
PROGRESSION
OF
SIZES
A
ASSUMES
INCREASE
OF
IN
SIZE
OF
THE
ARRAY
WHILE
B
ASSUMES
INCREASE
OF
CHAPTER
ARRAY
BASED
SEQUENCES
USING
A
FIXED
INCREMENT
FOR
EACH
RESIZE
AND
THUS
AN
ARITHMETIC
PROGRESSION
OF
INTERMEDIATE
ARRAY
SIZES
RESULTS
IN
AN
OVERALL
TIME
THAT
IS
QUADRATIC
IN
THE
NUMBER
OF
OPERATIONS
AS
SHOWN
IN
THE
FOLLOWING
PROPOSITION
INTUITIVELY
EVEN
AN
INCREASE
IN
CELLS
PER
RESIZE
WILL
BECOME
INSIGNIFICANT
FOR
LARGE
DATA
SETS
PROPOSITION
PERFORMING
A
SERIES
OF
N
APPEND
OPERATIONS
ON
AN
INITIALLY
EMPTY
DYNAMIC
ARRAY
USING
A
FIXED
INCREMENT
WITH
EACH
RESIZE
TAKES
TIME
JUSTIFICATION
LET
C
REPRESENT
THE
FIXED
INCREMENT
IN
CAPACITY
THAT
IS
USED
FOR
EACH
RESIZE
EVENT
DURING
THE
SERIES
OF
N
APPEND
OPERATIONS
TIME
WILL
HAVE
BEEN
SPENT
INITIALIZING
ARRAYS
OF
SIZE
C
MC
FOR
M
FN
AND
THEREFORE
THE
OVERALL
TIME
WOULD
BE
PROPORTIONAL
TO
C
MC
BY
PROPOSITION
THIS
SUM
IS
M
M
M
M
N
N
CI
C
I
C
C
C
I
I
THEREFORE
PERFORMING
THE
N
APPEND
OPERATIONS
TAKES
TIME
A
LESSON
TO
BE
LEARNED
FROM
PROPOSITIONS
AND
IS
THAT
A
SUBTLE
DIFFERENCE
IN
AN
ALGORITHM
DESIGN
CAN
PRODUCE
DRASTIC
DIFFERENCES
IN
THE
ASYMPTOTIC
PERFORMANCE
AND
THAT
A
CAREFUL
ANALYSIS
CAN
PROVIDE
IMPORTANT
INSIGHTS
INTO
THE
DESIGN
OF
A
DATA
STRUCTURE
MEMORY
USAGE
AND
SHRINKING
AN
ARRAY
ANOTHER
CONSEQUENCE
OF
THE
RULE
OF
A
GEOMETRIC
INCREASE
IN
CAPACITY
WHEN
APPEND
ING
TO
A
DYNAMIC
ARRAY
IS
THAT
THE
FINAL
ARRAY
SIZE
IS
GUARANTEED
TO
BE
PROPORTIONAL
TO
THE
OVERALL
NUMBER
OF
ELEMENTS
THAT
IS
THE
DATA
STRUCTURE
USES
O
N
MEMORY
THIS
IS
A
VERY
DESIRABLE
PROPERTY
FOR
A
DATA
STRUCTURE
IF
A
CONTAINER
SUCH
AS
A
PYTHON
LIST
PROVIDES
OPERATIONS
THAT
CAUSE
THE
REMOVAL
OF
ONE
OR
MORE
ELEMENTS
GREATER
CARE
MUST
BE
TAKEN
TO
ENSURE
THAT
A
DYNAMIC
ARRAY
GUARANTEES
O
N
MEMORY
USAGE
THE
RISK
IS
THAT
REPEATED
INSERTIONS
MAY
CAUSE
THE
UNDERLYING
ARRAY
TO
GROW
ARBITRARILY
LARGE
AND
THAT
THERE
WILL
NO
LONGER
BE
A
PROPOR
TIONAL
RELATIONSHIP
BETWEEN
THE
ACTUAL
NUMBER
OF
ELEMENTS
AND
THE
ARRAY
CAPACITY
AFTER
MANY
ELEMENTS
ARE
REMOVED
A
ROBUST
IMPLEMENTATION
OF
SUCH
A
DATA
STRUCTURE
WILL
SHRINK
THE
UNDERLYING
ARRAY
ON
OCCASION
WHILE
MAINTAINING
THE
O
AMORTIZED
BOUND
ON
INDIVIDUAL
OP
ERATIONS
HOWEVER
CARE
MUST
BE
TAKEN
TO
ENSURE
THAT
THE
STRUCTURE
CANNOT
RAPIDLY
OSCILLATE
BETWEEN
GROWING
AND
SHRINKING
THE
UNDERLYING
ARRAY
IN
WHICH
CASE
THE
AMORTIZED
BOUND
WOULD
NOT
BE
ACHIEVED
IN
EXERCISE
C
WE
EXPLORE
A
STRATEGY
IN
WHICH
THE
ARRAY
CAPACITY
IS
HALVED
WHENEVER
THE
NUMBER
OF
ACTUAL
ELEMENT
FALLS
BELOW
ONE
FOURTH
OF
THAT
CAPACITY
THEREBY
GUARANTEEING
THAT
THE
ARRAY
CAPACITY
IS
AT
MOST
FOUR
TIMES
THE
NUMBER
OF
ELEMENTS
WE
EXPLORE
THE
AMORTIZED
ANALYSIS
OF
SUCH
A
STRATEGY
IN
EXERCISES
C
AND
C
DYNAMIC
ARRAYS
AND
AMORTIZATION
PYTHON
LIST
CLASS
THE
EXPERIMENTS
OF
CODE
FRAGMENT
AND
AT
THE
BEGINNING
OF
SECTION
PROVIDE
EMPIRICAL
EVIDENCE
THAT
PYTHON
LIST
CLASS
IS
USING
A
FORM
OF
DYNAMIC
ARRAYS
FOR
ITS
STORAGE
YET
A
CAREFUL
EXAMINATION
OF
THE
INTERMEDIATE
ARRAY
CAPACITIES
SEE
EXERCISES
R
AND
C
SUGGESTS
THAT
PYTHON
IS
NOT
USING
A
PURE
GEOMETRIC
PROGRESSION
NOR
IS
IT
USING
AN
ARITHMETIC
PROGRESSION
WITH
THAT
SAID
IT
IS
CLEAR
THAT
PYTHON
IMPLEMENTATION
OF
THE
APPEND
METHOD
EXHIBITS
AMORTIZED
CONSTANT
TIME
BEHAVIOR
WE
CAN
DEMONSTRATE
THIS
FACT
EXPERI
MENTALLY
A
SINGLE
APPEND
OPERATION
TYPICALLY
EXECUTES
SO
QUICKLY
THAT
IT
WOULD
BE
DIFFICULT
FOR
US
TO
ACCURATELY
MEASURE
THE
TIME
ELAPSED
AT
THAT
GRANULARITY
ALTHOUGH
WE
SHOULD
NOTICE
SOME
OF
THE
MORE
EXPENSIVE
OPERATIONS
IN
WHICH
A
RESIZE
IS
PER
FORMED
WE
CAN
GET
A
MORE
ACCURATE
MEASURE
OF
THE
AMORTIZED
COST
PER
OPERATION
BY
PERFORMING
A
SERIES
OF
N
APPEND
OPERATIONS
ON
AN
INITIALLY
EMPTY
LIST
AND
DETER
MINING
THE
AVERAGE
COST
OF
EACH
A
FUNCTION
TO
PERFORM
THAT
EXPERIMENT
IS
GIVEN
IN
CODE
FRAGMENT
FROM
TIME
IMPORT
TIME
IMPORT
TIME
FUNCTION
FROM
TIME
MODULE
DEF
COMPUTE
AVERAGE
N
PERFORM
N
APPENDS
TO
AN
EMPTY
LIST
AND
RETURN
AVERAGE
TIME
ELAPSED
DATA
START
TIME
RECORD
THE
START
TIME
IN
SECONDS
FOR
K
IN
RANGE
N
DATA
APPEND
NONE
END
TIME
RECORD
THE
END
TIME
IN
SECONDS
RETURN
END
START
N
COMPUTE
AVERAGE
PER
OPERATION
CODE
FRAGMENT
MEASURING
THE
AMORTIZED
COST
OF
APPEND
FOR
PYTHON
LIST
CLASS
TECHNICALLY
THE
TIME
ELAPSED
BETWEEN
THE
START
AND
END
INCLUDES
THE
TIME
TO
MANAGE
THE
ITERATION
OF
THE
FOR
LOOP
IN
ADDITION
TO
THE
APPEND
CALLS
THE
EMPIRICAL
RESULTS
OF
THE
EXPERIMENT
FOR
INCREASINGLY
LARGE
VALUES
OF
N
ARE
SHOWN
IN
TABLE
WE
SEE
HIGHER
AVERAGE
COST
FOR
THE
SMALLER
DATA
SETS
PERHAPS
IN
PART
DUE
TO
THE
OVER
HEAD
OF
THE
LOOP
RANGE
THERE
IS
ALSO
NATURAL
VARIANCE
IN
MEASURING
THE
AMORTIZED
COST
IN
THIS
WAY
BECAUSE
OF
THE
IMPACT
OF
THE
FINAL
RESIZE
EVENT
RELATIVE
TO
N
TAKEN
AS
A
WHOLE
THERE
SEEMS
CLEAR
EVIDENCE
THAT
THE
AMORTIZED
TIME
FOR
EACH
APPEND
IS
INDEPENDENT
OF
N
TABLE
AVERAGE
RUNNING
TIME
OF
APPEND
MEASURED
IN
MICROSECONDS
AS
OBSERVED
OVER
A
SEQUENCE
OF
N
CALLS
STARTING
WITH
AN
EMPTY
LIST
CHAPTER
ARRAY
BASED
SEQUENCES
EFFICIENCY
OF
PYTHON
SEQUENCE
TYPES
IN
THE
PREVIOUS
SECTION
WE
BEGAN
TO
EXPLORE
THE
UNDERPINNINGS
OF
PYTHON
LIST
CLASS
IN
TERMS
OF
IMPLEMENTATION
STRATEGIES
AND
EFFICIENCY
WE
CONTINUE
IN
THIS
SECTION
BY
EXAMINING
THE
PERFORMANCE
OF
ALL
OF
PYTHON
SEQUENCE
TYPES
PYTHON
LIST
AND
TUPLE
CLASSES
THE
NONMUTATING
BEHAVIORS
OF
THE
LIST
CLASS
ARE
PRECISELY
THOSE
THAT
ARE
SUPPORTED
BY
THE
TUPLE
CLASS
WE
NOTE
THAT
TUPLES
ARE
TYPICALLY
MORE
MEMORY
EFFICIENT
THAN
LISTS
BECAUSE
THEY
ARE
IMMUTABLE
THEREFORE
THERE
IS
NO
NEED
FOR
AN
UNDERLYING
DYNAMIC
ARRAY
WITH
SURPLUS
CAPACITY
WE
SUMMARIZE
THE
ASYMPTOTIC
EFFICIENCY
OF
THE
NONMUTATING
BEHAVIORS
OF
THE
LIST
AND
TUPLE
CLASSES
IN
TABLE
AN
EXPLANATION
OF
THIS
ANALYSIS
FOLLOWS
TABLE
ASYMPTOTIC
PERFORMANCE
OF
THE
NONMUTATING
BEHAVIORS
OF
THE
LIST
AND
TUPLE
CLASSES
IDENTIFIERS
DATA
AND
DESIGNATE
INSTANCES
OF
THE
LIST
OR
TUPLE
CLASS
AND
N
AND
THEIR
RESPECTIVE
LENGTHS
FOR
THE
CONTAINMENT
CHECK
AND
INDEX
METHOD
K
REPRESENTS
THE
INDEX
OF
THE
LEFTMOST
OCCURRENCE
WITH
K
N
IF
THERE
IS
NO
OCCURRENCE
FOR
COMPARISONS
BETWEEN
TWO
SEQUENCES
WE
LET
K
DENOTE
THE
LEFTMOST
INDEX
AT
WHICH
THEY
DISAGREE
OR
ELSE
K
MIN
CONSTANT
TIME
OPERATIONS
THE
LENGTH
OF
AN
INSTANCE
IS
RETURNED
IN
CONSTANT
TIME
BECAUSE
AN
INSTANCE
EXPLICITLY
MAINTAINS
SUCH
STATE
INFORMATION
THE
CONSTANT
TIME
EFFICIENCY
OF
SYNTAX
DATA
J
IS
ASSURED
BY
THE
UNDERLYING
ACCESS
INTO
AN
ARRAY
EFFICIENCY
OF
PYTHON
SEQUENCE
TYPES
SEARCHING
FOR
OCCURRENCES
OF
A
VALUE
EACH
OF
THE
COUNT
INDEX
AND
CONTAINS
METHODS
PROCEED
THROUGH
ITERATION
OF
THE
SEQUENCE
FROM
LEFT
TO
RIGHT
IN
FACT
CODE
FRAGMENT
OF
SECTION
DEMONSTRATES
HOW
THOSE
BEHAVIORS
MIGHT
BE
IMPLEMENTED
NOTABLY
THE
LOOP
FOR
COMPUTING
THE
COUNT
MUST
PROCEED
THROUGH
THE
ENTIRE
SEQUENCE
WHILE
THE
LOOPS
FOR
CHECKING
CONTAINMENT
OF
AN
ELEMENT
OR
DETERMINING
THE
INDEX
OF
AN
ELEMENT
IMMEDIATELY
EXIT
ONCE
THEY
FIND
THE
LEFTMOST
OCCURRENCE
OF
THE
DESIRED
VALUE
IF
ONE
EXISTS
SO
WHILE
COUNT
ALWAYS
EXAMINES
THE
N
ELEMENTS
OF
THE
SEQUENCE
INDEX
AND
CONTAINS
EXAMINE
N
ELEMENTS
IN
THE
WORST
CASE
BUT
MAY
BE
FASTER
EMPIRICAL
EVIDENCE
CAN
BE
FOUND
BY
SETTING
DATA
LIST
RANGE
AND
THEN
COMPARING
THE
RELATIVE
EFFICIENCY
OF
THE
TEST
IN
DATA
RELATIVE
TO
THE
TEST
IN
DATA
OR
EVEN
THE
FAILED
TEST
IN
DATA
LEXICOGRAPHIC
COMPARISONS
COMPARISONS
BETWEEN
TWO
SEQUENCES
ARE
DEFINED
LEXICOGRAPHICALLY
IN
THE
WORST
CASE
EVALUATING
SUCH
A
CONDITION
REQUIRES
AN
ITERATION
TAKING
TIME
PROPORTIONAL
TO
THE
LENGTH
OF
THE
SHORTER
OF
THE
TWO
SEQUENCES
BECAUSE
WHEN
ONE
SEQUENCE
ENDS
THE
LEXICOGRAPHIC
RESULT
CAN
BE
DETERMINED
HOWEVER
IN
SOME
CASES
THE
RESULT
OF
THE
TEST
CAN
BE
EVALUATED
MORE
EFFICIENTLY
FOR
EXAMPLE
IF
EVALUATING
IT
IS
CLEAR
THAT
THE
RESULT
IS
TRUE
WITHOUT
EXAMINING
THE
RE
MAINDERS
OF
THOSE
LISTS
BECAUSE
THE
SECOND
ELEMENT
OF
THE
LEFT
OPERAND
IS
STRICTLY
LESS
THAN
THE
SECOND
ELEMENT
OF
THE
RIGHT
OPERAND
CREATING
NEW
INSTANCES
THE
FINAL
THREE
BEHAVIORS
IN
TABLE
ARE
THOSE
THAT
CONSTRUCT
A
NEW
INSTANCE
BASED
ON
ONE
OR
MORE
EXISTING
INSTANCES
IN
ALL
CASES
THE
RUNNING
TIME
DEPENDS
ON
THE
CONSTRUCTION
AND
INITIALIZATION
OF
THE
NEW
RESULT
AND
THEREFORE
THE
ASYMPTOTIC
BE
HAVIOR
IS
PROPORTIONAL
TO
THE
LENGTH
OF
THE
RESULT
THEREFORE
WE
FIND
THAT
SLICE
DATA
CAN
BE
CONSTRUCTED
ALMOST
IMMEDIATELY
BECAUSE
IT
HAS
ONLY
EIGHT
ELEMENTS
WHILE
SLICE
DATA
HAS
ONE
MILLION
ELEMENTS
AND
THUS
IS
MORE
TIME
CONSUMING
TO
CREATE
MUTATING
BEHAVIORS
THE
EFFICIENCY
OF
THE
MUTATING
BEHAVIORS
OF
THE
LIST
CLASS
ARE
DESCRIBED
IN
TABLE
THE
SIMPLEST
OF
THOSE
BEHAVIORS
HAS
SYNTAX
DATA
J
VAL
AND
IS
SUPPORTED
BY
THE
SPECIAL
SETITEM
METHOD
THIS
OPERATION
HAS
WORST
CASE
O
RUNNING
TIME
BE
CAUSE
IT
SIMPLY
REPLACES
ONE
ELEMENT
OF
A
LIST
WITH
A
NEW
VALUE
NO
OTHER
ELEMENTS
ARE
AFFECTED
AND
THE
SIZE
OF
THE
UNDERLYING
ARRAY
DOES
NOT
CHANGE
THE
MORE
INTER
ESTING
BEHAVIORS
TO
ANALYZE
ARE
THOSE
THAT
ADD
OR
REMOVE
ELEMENTS
FROM
THE
LIST
CHAPTER
ARRAY
BASED
SEQUENCES
AMORTIZED
TABLE
ASYMPTOTIC
PERFORMANCE
OF
THE
MUTATING
BEHAVIORS
OF
THE
LIST
CLASS
IDEN
TIFIERS
DATA
AND
DESIGNATE
INSTANCES
OF
THE
LIST
CLASS
AND
N
AND
THEIR
RESPECTIVE
LENGTHS
ADDING
ELEMENTS
TO
A
LIST
IN
SECTION
WE
FULLY
EXPLORED
THE
APPEND
METHOD
IN
THE
WORST
CASE
IT
REQUIRES
N
TIME
BECAUSE
THE
UNDERLYING
ARRAY
IS
RESIZED
BUT
IT
USES
O
TIME
IN
THE
AMOR
TIZED
SENSE
LISTS
ALSO
SUPPORT
A
METHOD
WITH
SIGNATURE
INSERT
K
VALUE
THAT
INSERTS
A
GIVEN
VALUE
INTO
THE
LIST
AT
INDEX
K
N
WHILE
SHIFTING
ALL
SUBSEQUENT
ELEMENTS
BACK
ONE
SLOT
TO
MAKE
ROOM
FOR
THE
PURPOSE
OF
ILLUSTRATION
CODE
FRAGMENT
PRO
VIDES
AN
IMPLEMENTATION
OF
THAT
METHOD
IN
THE
CONTEXT
OF
OUR
DYNAMICARRAY
CLASS
INTRODUCED
IN
CODE
FRAGMENT
THERE
ARE
TWO
COMPLICATING
FACTORS
IN
ANALYZING
THE
EFFICIENCY
OF
SUCH
AN
OPERATION
FIRST
WE
NOTE
THAT
THE
ADDITION
OF
ONE
ELEMENT
MAY
REQUIRE
A
RESIZING
OF
THE
DYNAMIC
ARRAY
THAT
PORTION
OF
THE
WORK
REQUIRES
N
WORST
CASE
TIME
BUT
ONLY
O
AMORTIZED
TIME
AS
PER
APPEND
THE
OTHER
EXPENSE
FOR
INSERT
IS
THE
SHIFTING
OF
ELEMENTS
TO
MAKE
ROOM
FOR
THE
NEW
ITEM
THE
TIME
FOR
DEF
INSERT
SELF
K
VALUE
INSERT
VALUE
AT
INDEX
K
SHIFTING
SUBSEQUENT
VALUES
RIGHTWARD
FOR
SIMPLICITY
WE
ASSUME
K
N
IN
THIS
VERION
IF
SELF
N
SELF
CAPACITY
NOT
ENOUGH
ROOM
SELF
RESIZE
SELF
CAPACITY
SO
DOUBLE
CAPACITY
FOR
J
IN
RANGE
SELF
N
K
SHIFT
RIGHTMOST
FIRST
SELF
A
J
SELF
A
J
SELF
A
K
VALUE
STORE
NEWEST
ELEMENT
SELF
N
CODE
FRAGMENT
IMPLEMENTATION
OF
INSERT
FOR
OUR
DYNAMICARRAY
CLASS
EFFICIENCY
OF
PYTHON
SEQUENCE
TYPES
K
N
FIGURE
CREATING
ROOM
TO
INSERT
A
NEW
ELEMENT
AT
INDEX
K
OF
A
DYNAMIC
ARRAY
THAT
PROCESS
DEPENDS
UPON
THE
INDEX
OF
THE
NEW
ELEMENT
AND
THUS
THE
NUMBER
OF
OTHER
ELEMENTS
THAT
MUST
BE
SHIFTED
THAT
LOOP
COPIES
THE
REFERENCE
THAT
HAD
BEEN
AT
INDEX
N
TO
INDEX
N
THEN
THE
REFERENCE
THAT
HAD
BEEN
AT
INDEX
N
TO
N
CONTINUING
UNTIL
COPYING
THE
REFERENCE
THAT
HAD
BEEN
AT
INDEX
K
TO
K
AS
ILLUS
TRATED
IN
FIGURE
OVERALL
THIS
LEADS
TO
AN
AMORTIZED
O
N
K
PERFORMANCE
FOR
INSERTING
AT
INDEX
K
WHEN
EXPLORING
THE
EFFICIENCY
OF
PYTHON
APPEND
METHOD
IN
SECTION
WE
PERFORMED
AN
EXPERIMENT
THAT
MEASURED
THE
AVERAGE
COST
OF
REPEATED
CALLS
ON
VARYING
SIZES
OF
LISTS
SEE
CODE
FRAGMENT
AND
TABLE
WE
HAVE
REPEATED
THAT
EXPERIMENT
WITH
THE
INSERT
METHOD
TRYING
THREE
DIFFERENT
ACCESS
PATTERNS
IN
THE
FIRST
CASE
WE
REPEATEDLY
INSERT
AT
THE
BEGINNING
OF
A
LIST
FOR
N
IN
RANGE
N
DATA
INSERT
NONE
IN
A
SECOND
CASE
WE
REPEATEDLY
INSERT
NEAR
THE
MIDDLE
OF
A
LIST
FOR
N
IN
RANGE
N
DATA
INSERT
N
NONE
IN
A
THIRD
CASE
WE
REPEATEDLY
INSERT
AT
THE
END
OF
THE
LIST
FOR
N
IN
RANGE
N
DATA
INSERT
N
NONE
THE
RESULTS
OF
OUR
EXPERIMENT
ARE
GIVEN
IN
TABLE
REPORTING
THE
AVERAGE
TIME
PER
OPERATION
NOT
THE
TOTAL
TIME
FOR
THE
ENTIRE
LOOP
AS
EXPECTED
WE
SEE
THAT
INSERTING
AT
THE
BEGINNING
OF
A
LIST
IS
MOST
EXPENSIVE
REQUIRING
LINEAR
TIME
PER
OPERATION
INSERTING
AT
THE
MIDDLE
REQUIRES
ABOUT
HALF
THE
TIME
AS
INSERTING
AT
THE
BEGINNING
YET
IS
STILL
N
TIME
INSERTING
AT
THE
END
DISPLAYS
O
BEHAVIOR
AKIN
TO
APPEND
N
K
K
N
K
N
TABLE
AVERAGE
RUNNING
TIME
OF
INSERT
K
VAL
MEASURED
IN
MICROSECONDS
AS
OBSERVED
OVER
A
SEQUENCE
OF
N
CALLS
STARTING
WITH
AN
EMPTY
LIST
WE
LET
N
DENOTE
THE
SIZE
OF
THE
CURRENT
LIST
AS
OPPOSED
TO
THE
FINAL
LIST
CHAPTER
ARRAY
BASED
SEQUENCES
REMOVING
ELEMENTS
FROM
A
LIST
PYTHON
LIST
CLASS
OFFERS
SEVERAL
WAYS
TO
REMOVE
AN
ELEMENT
FROM
A
LIST
A
CALL
TO
POP
REMOVES
THE
LAST
ELEMENT
FROM
A
LIST
THIS
IS
MOST
EFFICIENT
BECAUSE
ALL
OTHER
ELEMENTS
REMAIN
IN
THEIR
ORIGINAL
LOCATION
THIS
IS
EFFECTIVELY
AN
O
OPERATION
BUT
THE
BOUND
IS
AMORTIZED
BECAUSE
PYTHON
WILL
OCCASIONALLY
SHRINK
THE
UNDERLYING
DYNAMIC
ARRAY
TO
CONSERVE
MEMORY
THE
PARAMETERIZED
VERSION
POP
K
REMOVES
THE
ELEMENT
THAT
IS
AT
INDEX
K
N
OF
A
LIST
SHIFTING
ALL
SUBSEQUENT
ELEMENTS
LEFTWARD
TO
FILL
THE
GAP
THAT
RESULTS
FROM
THE
REMOVAL
THE
EFFICIENCY
OF
THIS
OPERATION
IS
O
N
K
AS
THE
AMOUNT
OF
SHIFTING
DEPENDS
UPON
THE
CHOICE
OF
INDEX
K
AS
ILLUSTRATED
IN
FIGURE
NOTE
WELL
THAT
THIS
IMPLIES
THAT
POP
IS
THE
MOST
EXPENSIVE
CALL
USING
N
TIME
SEE
EXPERIMENTS
IN
EXERCISE
R
K
N
FIGURE
REMOVING
AN
ELEMENT
AT
INDEX
K
OF
A
DYNAMIC
ARRAY
THE
LIST
CLASS
OFFERS
ANOTHER
METHOD
NAMED
REMOVE
THAT
ALLOWS
THE
CALLER
TO
SPECIFY
THE
VALUE
THAT
SHOULD
BE
REMOVED
NOT
THE
INDEX
AT
WHICH
IT
RESIDES
FOR
MALLY
IT
REMOVES
ONLY
THE
FIRST
OCCURRENCE
OF
SUCH
A
VALUE
FROM
A
LIST
OR
RAISES
A
VALUEERROR
IF
NO
SUCH
VALUE
IS
FOUND
AN
IMPLEMENTATION
OF
SUCH
BEHAVIOR
IS
GIVEN
IN
CODE
FRAGMENT
AGAIN
USING
OUR
DYNAMICARRAY
CLASS
FOR
ILLUSTRATION
INTERESTINGLY
THERE
IS
NO
EFFICIENT
CASE
FOR
REMOVE
EVERY
CALL
REQUIRES
N
TIME
ONE
PART
OF
THE
PROCESS
SEARCHES
FROM
THE
BEGINNING
UNTIL
FINDING
THE
VALUE
AT
INDEX
K
WHILE
THE
REST
ITERATES
FROM
K
TO
THE
END
IN
ORDER
TO
SHIFT
ELEMENTS
LEFTWARD
THIS
LINEAR
BEHAVIOR
CAN
BE
OBSERVED
EXPERIMENTALLY
SEE
EXERCISE
C
DEF
REMOVE
SELF
VALUE
REMOVE
FIRST
OCCURRENCE
OF
VALUE
OR
RAISE
VALUEERROR
NOTE
WE
DO
NOT
CONSIDER
SHRINKING
THE
DYNAMIC
ARRAY
IN
THIS
VERSION
FOR
K
IN
RANGE
SELF
N
IF
SELF
A
K
VALUE
FOUND
A
MATCH
FOR
J
IN
RANGE
K
SELF
N
SHIFT
OTHERS
TO
FILL
GAP
SELF
A
J
SELF
A
J
SELF
A
SELF
N
NONE
HELP
GARBAGE
COLLECTION
SELF
N
WE
HAVE
ONE
LESS
ITEM
RETURN
EXIT
IMMEDIATELY
RAISE
VALUEERROR
VALUE
NOT
FOUND
ONLY
REACHED
IF
NO
MATCH
CODE
FRAGMENT
IMPLEMENTATION
OF
REMOVE
FOR
OUR
DYNAMICARRAY
CLASS
EFFICIENCY
OF
PYTHON
SEQUENCE
TYPES
EXTENDING
A
LIST
PYTHON
PROVIDES
A
METHOD
NAMED
EXTEND
THAT
IS
USED
TO
ADD
ALL
ELEMENTS
OF
ONE
LIST
TO
THE
END
OF
A
SECOND
LIST
IN
EFFECT
A
CALL
TO
DATA
EXTEND
OTHER
PRODUCES
THE
SAME
OUTCOME
AS
THE
CODE
FOR
ELEMENT
IN
OTHER
DATA
APPEND
ELEMENT
IN
EITHER
CASE
THE
RUNNING
TIME
IS
PROPORTIONAL
TO
THE
LENGTH
OF
THE
OTHER
LIST
AND
AMORTIZED
BECAUSE
THE
UNDERLYING
ARRAY
FOR
THE
FIRST
LIST
MAY
BE
RESIZED
TO
ACCOM
MODATE
THE
ADDITIONAL
ELEMENTS
IN
PRACTICE
THE
EXTEND
METHOD
IS
PREFERABLE
TO
REPEATED
CALLS
TO
APPEND
BECAUSE
THE
CONSTANT
FACTORS
HIDDEN
IN
THE
ASYMPTOTIC
ANALYSIS
ARE
SIGNIFICANTLY
SMALLER
THE
GREATER
EFFICIENCY
OF
EXTEND
IS
THREEFOLD
FIRST
THERE
IS
ALWAYS
SOME
ADVANTAGE
TO
USING
AN
APPROPRIATE
PYTHON
METHOD
BECAUSE
THOSE
METHODS
ARE
OFTEN
IMPLEMENTED
NATIVELY
IN
A
COMPILED
LANGUAGE
RATHER
THAN
AS
INTERPRETED
PYTHON
CODE
SECOND
THERE
IS
LESS
OVERHEAD
TO
A
SINGLE
FUNCTION
CALL
THAT
ACCOMPLISHES
ALL
THE
WORK
VERSUS
MANY
INDIVIDUAL
FUNCTION
CALLS
FINALLY
INCREASED
EFFICIENCY
OF
EXTEND
COMES
FROM
THE
FACT
THAT
THE
RESULTING
SIZE
OF
THE
UPDATED
LIST
CAN
BE
CALCULATED
IN
ADVANCE
IF
THE
SECOND
DATA
SET
IS
QUITE
LARGE
THERE
IS
SOME
RISK
THAT
THE
UNDERLYING
DYNAMIC
ARRAY
MIGHT
BE
RESIZED
MULTIPLE
TIMES
WHEN
USING
REPEATED
CALLS
TO
APPEND
WITH
A
SINGLE
CALL
TO
EXTEND
AT
MOST
ONE
RESIZE
OPERATION
WILL
BE
PERFORMED
EXERCISE
C
EXPLORES
THE
RELATIVE
EFFICIENCY
OF
THESE
TWO
APPROACHES
EXPERIMENTALLY
CONSTRUCTING
NEW
LISTS
THERE
ARE
SEVERAL
SYNTAXES
FOR
CONSTRUCTING
NEW
LISTS
IN
ALMOST
ALL
CASES
THE
ASYMP
TOTIC
EFFICIENCY
OF
THE
BEHAVIOR
IS
LINEAR
IN
THE
LENGTH
OF
THE
LIST
THAT
IS
CREATED
HOW
EVER
AS
WITH
THE
CASE
IN
THE
PRECEDING
DISCUSSION
OF
EXTEND
THERE
ARE
SIGNIFICANT
DIFFERENCES
IN
THE
PRACTICAL
EFFICIENCY
SECTION
INTRODUCES
THE
TOPIC
OF
LIST
COMPREHENSION
USING
AN
EXAMPLE
SUCH
AS
SQUARES
K
K
FOR
K
IN
RANGE
N
AS
A
SHORTHAND
FOR
SQUARES
FOR
K
IN
RANGE
N
SQUARES
APPEND
K
K
EXPERIMENTS
SHOULD
SHOW
THAT
THE
LIST
COMPREHENSION
SYNTAX
IS
SIGNIFICANTLY
FASTER
THAN
BUILDING
THE
LIST
BY
REPEATEDLY
APPENDING
SEE
EXERCISE
C
SIMILARLY
IT
IS
A
COMMON
PYTHON
IDIOM
TO
INITIALIZE
A
LIST
OF
CONSTANT
VALUES
USING
THE
MULTIPLICATION
OPERATOR
AS
IN
N
TO
PRODUCE
A
LIST
OF
LENGTH
N
WITH
ALL
VALUES
EQUAL
TO
ZERO
NOT
ONLY
IS
THIS
SUCCINCT
FOR
THE
PROGRAMMER
IT
IS
MORE
EFFICIENT
THAN
BUILDING
SUCH
A
LIST
INCREMENTALLY
CHAPTER
ARRAY
BASED
SEQUENCES
PYTHON
STRING
CLASS
STRINGS
ARE
VERY
IMPORTANT
IN
PYTHON
WE
INTRODUCED
THEIR
USE
IN
CHAPTER
WITH
A
DISCUSSION
OF
VARIOUS
OPERATOR
SYNTAXES
IN
SECTION
A
COMPREHENSIVE
SUM
MARY
OF
THE
NAMED
METHODS
OF
THE
CLASS
IS
GIVEN
IN
TABLES
A
THROUGH
A
OF
APPENDIX
A
WE
WILL
NOT
FORMALLY
ANALYZE
THE
EFFICIENCY
OF
EACH
OF
THOSE
BEHAV
IORS
IN
THIS
SECTION
BUT
WE
DO
WISH
TO
COMMENT
ON
SOME
NOTABLE
ISSUES
IN
GENERAL
WE
LET
N
DENOTE
THE
LENGTH
OF
A
STRING
FOR
OPERATIONS
THAT
RELY
ON
A
SECOND
STRING
AS
A
PATTERN
WE
LET
M
DENOTE
THE
LENGTH
OF
THAT
PATTERN
STRING
THE
ANALYSIS
FOR
MANY
BEHAVIORS
IS
QUITE
INTUITIVE
FOR
EXAMPLE
METHODS
THAT
PRODUCE
A
NEW
STRING
E
G
CAPITALIZE
CENTER
STRIP
REQUIRE
TIME
THAT
IS
LINEAR
IN
THE
LENGTH
OF
THE
STRING
THAT
IS
PRODUCED
MANY
OF
THE
BEHAVIORS
THAT
TEST
BOOLEAN
CONDITIONS
OF
A
STRING
E
G
ISLOWER
TAKE
O
N
TIME
EXAMINING
ALL
N
CHARACTERS
IN
THE
WORST
CASE
BUT
SHORT
CIRCUITING
AS
SOON
AS
THE
ANSWER
BECOMES
EVIDENT
E
G
ISLOWER
CAN
IMMEDIATELY
RETURN
FALSE
IF
THE
FIRST
CHARACTER
IS
UPPERCASED
THE
COMPARISON
OPERATORS
E
G
FALL
INTO
THIS
CATEGORY
AS
WELL
PATTERN
MATCHING
SOME
OF
THE
MOST
INTERESTING
BEHAVIORS
FROM
AN
ALGORITHMIC
POINT
OF
VIEW
ARE
THOSE
THAT
IN
SOME
WAY
DEPEND
UPON
FINDING
A
STRING
PATTERN
WITHIN
A
LARGER
STRING
THIS
GOAL
IS
AT
THE
HEART
OF
METHODS
SUCH
AS
CONTAINS
FIND
INDEX
COUNT
REPLACE
AND
SPLIT
STRING
ALGORITHMS
WILL
BE
THE
TOPIC
OF
CHAPTER
AND
THIS
PARTICULAR
PROBLEM
KNOWN
AS
PATTERN
MATCHING
WILL
BE
THE
FOCUS
OF
SECTION
A
NAIVE
IM
PLEMENTATION
RUNS
IN
O
MN
TIME
CASE
BECAUSE
WE
CONSIDER
THE
N
M
POSSIBLE
STARTING
INDICES
FOR
THE
PATTERN
AND
WE
SPEND
O
M
TIME
AT
EACH
STARTING
POSITION
CHECKING
IF
THE
PATTERN
MATCHES
HOWEVER
IN
SECTION
WE
WILL
DEVELOP
AN
AL
GORITHM
FOR
FINDING
A
PATTERN
OF
LENGTH
M
WITHIN
A
LONGER
STRING
OF
LENGTH
N
IN
O
N
TIME
COMPOSING
STRINGS
FINALLY
WE
WISH
TO
COMMENT
ON
SEVERAL
APPROACHES
FOR
COMPOSING
LARGE
STRINGS
AS
AN
ACADEMIC
EXERCISE
ASSUME
THAT
WE
HAVE
A
LARGE
STRING
NAMED
DOCUMENT
AND
OUR
GOAL
IS
TO
PRODUCE
A
NEW
STRING
LETTERS
THAT
CONTAINS
ONLY
THE
ALPHABETIC
CHARACTERS
OF
THE
ORIGINAL
STRING
E
G
WITH
SPACES
NUMBERS
AND
PUNCTUATION
REMOVED
IT
MAY
BE
TEMPTING
TO
COMPOSE
A
RESULT
THROUGH
REPEATED
CONCATENATION
AS
FOLLOWS
WARNING
DO
NOT
DO
THIS
LETTERS
START
WITH
EMPTY
STRING
FOR
C
IN
DOCUMENT
IF
C
ISALPHA
LETTERS
C
CONCATENATE
ALPHABETIC
CHARACTER
EFFICIENCY
OF
PYTHON
SEQUENCE
TYPES
WHILE
THE
PRECEDING
CODE
FRAGMENT
ACCOMPLISHES
THE
GOAL
IT
MAY
BE
TERRIBLY
INEFFICIENT
BECAUSE
STRINGS
ARE
IMMUTABLE
THE
COMMAND
LETTERS
C
WOULD
PRESUMABLY
COMPUTE
THE
CONCATENATION
LETTERS
C
AS
A
NEW
STRING
INSTANCE
AND
THEN
REASSIGN
THE
IDENTIFIER
LETTERS
TO
THAT
RESULT
CONSTRUCTING
THAT
NEW
STRING
WOULD
REQUIRE
TIME
PROPORTIONAL
TO
ITS
LENGTH
IF
THE
FINAL
RESULT
HAS
N
CHARACTERS
THE
SERIES
OF
CONCATENATIONS
WOULD
TAKE
TIME
PROPORTIONAL
TO
THE
FAMILIAR
SUM
N
AND
THEREFORE
O
TIME
INEFFICIENT
CODE
OF
THIS
TYPE
IS
WIDESPREAD
IN
PYTHON
PERHAPS
BECAUSE
OF
THE
SOMEWHAT
NATURAL
APPEARANCE
OF
THE
CODE
AND
MISTAKEN
PRESUMPTIONS
ABOUT
HOW
THE
OPERATOR
IS
EVALUATED
WITH
STRINGS
SOME
LATER
IMPLEMENTATIONS
OF
THE
PYTHON
INTERPRETER
HAVE
DEVELOPED
AN
OPTIMIZATION
TO
ALLOW
SUCH
CODE
TO
COMPLETE
IN
LINEAR
TIME
BUT
THIS
IS
NOT
GUARANTEED
FOR
ALL
PYTHON
IMPLEMENTATIONS
THE
OP
TIMIZATION
IS
AS
FOLLOWS
THE
REASON
THAT
A
COMMAND
LETTERS
C
CAUSES
A
NEW
STRING
INSTANCE
TO
BE
CREATED
IS
THAT
THE
ORIGINAL
STRING
MUST
BE
LEFT
UNCHANGED
IF
ANOTHER
VARIABLE
IN
A
PROGRAM
REFERS
TO
THAT
STRING
ON
THE
OTHER
HAND
IF
PYTHON
KNEW
THAT
THERE
WERE
NO
OTHER
REFERENCES
TO
THE
STRING
IN
QUESTION
IT
COULD
IMPLE
MENT
MORE
EFFICIENTLY
BY
DIRECTLY
MUTATING
THE
STRING
AS
A
DYNAMIC
ARRAY
AS
IT
HAPPENS
THE
PYTHON
INTERPRETER
ALREADY
MAINTAINS
WHAT
ARE
KNOWN
AS
REFERENCE
COUNTS
FOR
EACH
OBJECT
THIS
COUNT
IS
USED
IN
PART
TO
DETERMINE
IF
AN
OBJECT
CAN
BE
GARBAGE
COLLECTED
SEE
SECTION
BUT
IN
THIS
CONTEXT
IT
PROVIDES
A
MEANS
TO
DETECT
WHEN
NO
OTHER
REFERENCES
EXIST
TO
A
STRING
THEREBY
ALLOWING
THE
OPTIMIZATION
A
MORE
STANDARD
PYTHON
IDIOM
TO
GUARANTEE
LINEAR
TIME
COMPOSITION
OF
A
STRING
IS
TO
USE
A
TEMPORARY
LIST
TO
STORE
INDIVIDUAL
PIECES
AND
THEN
TO
RELY
ON
THE
JOIN
METHOD
OF
THE
STR
CLASS
TO
COMPOSE
THE
FINAL
RESULT
USING
THIS
TECHNIQUE
WITH
OUR
PREVIOUS
EXAMPLE
WOULD
APPEAR
AS
FOLLOWS
TEMP
START
WITH
EMPTY
LIST
FOR
C
IN
DOCUMENT
IF
C
ISALPHA
TEMP
APPEND
C
APPEND
ALPHABETIC
CHARACTER
LETTERS
JOIN
TEMP
COMPOSE
OVERALL
RESULT
THIS
APPROACH
IS
GUARANTEED
TO
RUN
IN
O
N
TIME
FIRST
WE
NOTE
THAT
THE
SERIES
OF
UP
TO
N
APPEND
CALLS
WILL
REQUIRE
A
TOTAL
OF
O
N
TIME
AS
PER
THE
DEFINITION
OF
THE
AMORTIZED
COST
OF
THAT
OPERATION
THE
FINAL
CALL
TO
JOIN
ALSO
GUARANTEES
THAT
IT
TAKES
TIME
THAT
IS
LINEAR
IN
THE
FINAL
LENGTH
OF
THE
COMPOSED
STRING
AS
WE
DISCUSSED
AT
THE
END
OF
THE
PREVIOUS
SECTION
WE
CAN
FURTHER
IMPROVE
THE
PRACTICAL
EXECUTION
TIME
BY
USING
A
LIST
COMPREHENSION
SYNTAX
TO
BUILD
UP
THE
TEMPORARY
LIST
RATHER
THAN
BY
REPEATED
CALLS
TO
APPEND
THAT
SOLUTION
APPEARS
AS
LETTERS
JOIN
C
FOR
C
IN
DOCUMENT
IF
C
ISALPHA
BETTER
YET
WE
CAN
ENTIRELY
AVOID
THE
TEMPORARY
LIST
WITH
A
GENERATOR
COMPREHENSION
LETTERS
JOIN
C
FOR
C
IN
DOCUMENT
IF
C
ISALPHA
CHAPTER
ARRAY
BASED
SEQUENCES
USING
ARRAY
BASED
SEQUENCES
STORING
HIGH
SCORES
FOR
A
GAME
THE
FIRST
APPLICATION
WE
STUDY
IS
STORING
A
SEQUENCE
OF
HIGH
SCORE
ENTRIES
FOR
A
VIDEO
GAME
THIS
IS
REPRESENTATIVE
OF
MANY
APPLICATIONS
IN
WHICH
A
SEQUENCE
OF
OBJECTS
MUST
BE
STORED
WE
COULD
JUST
AS
EASILY
HAVE
CHOSEN
TO
STORE
RECORDS
FOR
PATIENTS
IN
A
HOSPITAL
OR
THE
NAMES
OF
PLAYERS
ON
A
FOOTBALL
TEAM
NEVERTHELESS
LET
US
FOCUS
ON
STORING
HIGH
SCORE
ENTRIES
WHICH
IS
A
SIMPLE
APPLICATION
THAT
IS
ALREADY
RICH
ENOUGH
TO
PRESENT
SOME
IMPORTANT
DATA
STRUCTURING
CONCEPTS
TO
BEGIN
WE
CONSIDER
WHAT
INFORMATION
TO
INCLUDE
IN
AN
OBJECT
REPRESENTING
A
HIGH
SCORE
ENTRY
OBVIOUSLY
ONE
COMPONENT
TO
INCLUDE
IS
AN
INTEGER
REPRESENTING
THE
SCORE
ITSELF
WHICH
WE
IDENTIFY
AS
SCORE
ANOTHER
USEFUL
THING
TO
INCLUDE
IS
THE
NAME
OF
THE
PERSON
EARNING
THIS
SCORE
WHICH
WE
IDENTIFY
AS
NAME
WE
COULD
GO
ON
FROM
HERE
ADDING
FIELDS
REPRESENTING
THE
DATE
THE
SCORE
WAS
EARNED
OR
GAME
STATISTICS
THAT
LED
TO
THAT
SCORE
HOWEVER
WE
OMIT
SUCH
DETAILS
TO
KEEP
OUR
EXAMPLE
SIMPLE
A
PYTHON
CLASS
GAMEENTRY
REPRESENTING
A
GAME
ENTRY
IS
GIVEN
IN
CODE
FRAGMENT
CLASS
GAMEENTRY
REPRESENTS
ONE
ENTRY
OF
A
LIST
OF
HIGH
SCORES
DEF
INIT
SELF
NAME
SCORE
SELF
NAME
NAME
SELF
SCORE
SCORE
DEF
GET
NAME
SELF
RETURN
SELF
NAME
DEF
GET
SCORE
SELF
RETURN
SELF
SCORE
DEF
STR
SELF
RETURN
FORMAT
SELF
NAME
SELF
SCORE
E
G
BOB
CODE
FRAGMENT
PYTHON
CODE
FOR
A
SIMPLE
GAMEENTRY
CLASS
WE
INCLUDE
METH
ODS
FOR
RETURNING
THE
NAME
AND
SCORE
FOR
A
GAME
ENTRY
OBJECT
AS
WELL
AS
A
METHOD
FOR
RETURNING
A
STRING
REPRESENTATION
OF
THIS
ENTRY
USING
ARRAY
BASED
SEQUENCES
A
CLASS
FOR
HIGH
SCORES
TO
MAINTAIN
A
SEQUENCE
OF
HIGH
SCORES
WE
DEVELOP
A
CLASS
NAMED
SCOREBOARD
A
SCOREBOARD
IS
LIMITED
TO
A
CERTAIN
NUMBER
OF
HIGH
SCORES
THAT
CAN
BE
SAVED
ONCE
THAT
LIMIT
IS
REACHED
A
NEW
SCORE
ONLY
QUALIFIES
FOR
THE
SCOREBOARD
IF
IT
IS
STRICTLY
HIGHER
THAN
THE
LOWEST
HIGH
SCORE
ON
THE
BOARD
THE
LENGTH
OF
THE
DESIRED
SCOREBOARD
MAY
DEPEND
ON
THE
GAME
PERHAPS
OR
SINCE
THAT
LIMIT
MAY
VARY
DEPENDING
ON
THE
GAME
WE
ALLOW
IT
TO
BE
SPECIFIED
AS
A
PARAMETER
TO
OUR
SCOREBOARD
CONSTRUCTOR
INTERNALLY
WE
WILL
USE
A
PYTHON
LIST
NAMED
BOARD
IN
ORDER
TO
MANAGE
THE
GAMEENTRY
INSTANCES
THAT
REPRESENT
THE
HIGH
SCORES
SINCE
WE
EXPECT
THE
SCORE
BOARD
TO
EVENTUALLY
REACH
FULL
CAPACITY
WE
INITIALIZE
THE
LIST
TO
BE
LARGE
ENOUGH
TO
HOLD
THE
MAXIMUM
NUMBER
OF
SCORES
BUT
WE
INITIALLY
SET
ALL
ENTRIES
TO
NONE
BY
ALLOCATING
THE
LIST
WITH
MAXIMUM
CAPACITY
INITIALLY
IT
NEVER
NEEDS
TO
BE
RESIZED
AS
ENTRIES
ARE
ADDED
WE
WILL
MAINTAIN
THEM
FROM
HIGHEST
TO
LOWEST
SCORE
STARTING
AT
INDEX
OF
THE
LIST
WE
ILLUSTRATE
A
TYPICAL
STATE
OF
THE
DATA
STRUCTURE
IN
FIGURE
FIGURE
AN
ILLUSTRATION
OF
AN
ORDERED
LIST
OF
LENGTH
TEN
STORING
REFERENCES
TO
SIX
GAMEENTRY
OBJECTS
IN
THE
CELLS
FROM
INDEX
TO
WITH
THE
REST
BEING
NONE
A
COMPLETE
PYTHON
IMPLEMENTATION
OF
THE
SCOREBOARD
CLASS
IS
GIVEN
IN
CODE
FRAGMENT
THE
CONSTRUCTOR
IS
RATHER
SIMPLE
THE
COMMAND
SELF
BOARD
NONE
CAPACITY
CREATES
A
LIST
WITH
THE
DESIRED
LENGTH
YET
ALL
ENTRIES
EQUAL
TO
NONE
WE
MAINTAIN
AN
ADDITIONAL
INSTANCE
VARIABLE
N
THAT
REPRESENTS
THE
NUMBER
OF
ACTUAL
ENTRIES
CURRENTLY
IN
OUR
TABLE
FOR
CONVENIENCE
OUR
CLASS
SUPPORTS
THE
GETITEM
METHOD
TO
RETRIEVE
AN
ENTRY
AT
A
GIVEN
INDEX
WITH
A
SYNTAX
BOARD
I
OR
NONE
IF
NO
SUCH
ENTRY
EXISTS
AND
WE
SUPPORT
A
SIMPLE
STR
METHOD
THAT
RETURNS
A
STRING
REPRESENTATION
OF
THE
ENTIRE
SCOREBOARD
WITH
ONE
ENTRY
PER
LINE
CHAPTER
ARRAY
BASED
SEQUENCES
CLASS
SCOREBOARD
FIXED
LENGTH
SEQUENCE
OF
HIGH
SCORES
IN
NONDECREASING
ORDER
DEF
INIT
SELF
CAPACITY
INITIALIZE
SCOREBOARD
WITH
GIVEN
MAXIMUM
CAPACITY
ALL
ENTRIES
ARE
INITIALLY
NONE
SELF
BOARD
NONE
CAPACITY
RESERVE
SPACE
FOR
FUTURE
SCORES
SELF
N
NUMBER
OF
ACTUAL
ENTRIES
DEF
GETITEM
SELF
K
RETURN
ENTRY
AT
INDEX
K
RETURN
SELF
BOARD
K
DEF
STR
SELF
RETURN
STRING
REPRESENTATION
OF
THE
HIGH
SCORE
LIST
RETURN
N
JOIN
STR
SELF
BOARD
J
FOR
J
IN
RANGE
SELF
N
DEF
ADD
SELF
ENTRY
CONSIDER
ADDING
ENTRY
TO
HIGH
SCORES
SCORE
ENTRY
GET
SCORE
DOES
NEW
ENTRY
QUALIFY
AS
A
HIGH
SCORE
ANSWER
IS
YES
IF
BOARD
NOT
FULL
OR
SCORE
IS
HIGHER
THAN
LAST
ENTRY
GOOD
SELF
N
LEN
SELF
BOARD
OR
SCORE
SELF
BOARD
GET
SCORE
IF
GOOD
IF
SELF
N
LEN
SELF
BOARD
NO
SCORE
DROPS
FROM
LIST
SELF
N
SO
OVERALL
NUMBER
INCREASES
SHIFT
LOWER
SCORES
RIGHTWARD
TO
MAKE
ROOM
FOR
NEW
ENTRY
J
SELF
N
WHILE
J
AND
SELF
BOARD
J
GET
SCORE
SCORE
SELF
BOARD
J
SELF
BOARD
J
SHIFT
ENTRY
FROM
J
TO
J
J
AND
DECREMENT
J
SELF
BOARD
J
ENTRY
WHEN
DONE
ADD
NEW
ENTRY
CODE
FRAGMENT
PYTHON
CODE
FOR
A
SCOREBOARD
CLASS
THAT
MAINTAINS
AN
ORDERED
SERIES
OF
SCORES
AS
GAMEENTRY
OBJECTS
USING
ARRAY
BASED
SEQUENCES
ADDING
AN
ENTRY
THE
MOST
INTERESTING
METHOD
OF
THE
SCOREBOARD
CLASS
IS
ADD
WHICH
IS
RESPONSIBLE
FOR
CONSIDERING
THE
ADDITION
OF
A
NEW
ENTRY
TO
THE
SCOREBOARD
KEEP
IN
MIND
THAT
EVERY
ENTRY
WILL
NOT
NECESSARILY
QUALIFY
AS
A
HIGH
SCORE
IF
THE
BOARD
IS
NOT
YET
FULL
ANY
NEW
ENTRY
WILL
BE
RETAINED
ONCE
THE
BOARD
IS
FULL
A
NEW
ENTRY
IS
ONLY
RETAINED
IF
IT
IS
STRICTLY
BETTER
THAN
ONE
OF
THE
OTHER
SCORES
IN
PARTICULAR
THE
LAST
ENTRY
OF
THE
SCOREBOARD
WHICH
IS
THE
LOWEST
OF
THE
HIGH
SCORES
WHEN
A
NEW
SCORE
IS
CONSIDERED
WE
BEGIN
BY
DETERMINING
WHETHER
IT
QUALIFIES
AS
A
HIGH
SCORE
IF
SO
WE
INCREASE
THE
COUNT
OF
ACTIVE
SCORES
N
UNLESS
THE
BOARD
IS
ALREADY
AT
FULL
CAPACITY
IN
THAT
CASE
ADDING
A
NEW
HIGH
SCORE
CAUSES
SOME
OTHER
ENTRY
TO
BE
DROPPED
FROM
THE
SCOREBOARD
SO
THE
OVERALL
NUMBER
OF
ENTRIES
REMAINS
THE
SAME
TO
CORRECTLY
PLACE
A
NEW
ENTRY
WITHIN
THE
LIST
THE
FINAL
TASK
IS
TO
SHIFT
ANY
IN
FERIOR
SCORES
ONE
SPOT
LOWER
WITH
THE
LEAST
SCORE
BEING
DROPPED
ENTIRELY
WHEN
THE
SCOREBOARD
IS
FULL
THIS
PROCESS
IS
QUITE
SIMILAR
TO
THE
IMPLEMENTATION
OF
THE
INSERT
METHOD
OF
THE
LIST
CLASS
AS
DESCRIBED
ON
PAGES
IN
THE
CONTEXT
OF
OUR
SCORE
BOARD
THERE
IS
NO
NEED
TO
SHIFT
ANY
NONE
REFERENCES
THAT
REMAIN
NEAR
THE
END
OF
THE
ARRAY
SO
THE
PROCESS
CAN
PROCEED
AS
DIAGRAMMED
IN
FIGURE
FIGURE
ADDING
A
NEW
GAMEENTRY
FOR
JILL
TO
THE
SCOREBOARD
IN
ORDER
TO
MAKE
ROOM
FOR
THE
NEW
REFERENCE
WE
HAVE
TO
SHIFT
THE
REFERENCES
FOR
GAME
ENTRIES
WITH
SMALLER
SCORES
THAN
THE
NEW
ONE
TO
THE
RIGHT
BY
ONE
CELL
THEN
WE
CAN
INSERT
THE
NEW
ENTRY
WITH
INDEX
TO
IMPLEMENT
THE
FINAL
STAGE
WE
BEGIN
BY
CONSIDERING
INDEX
J
SELF
N
WHICH
IS
THE
INDEX
AT
WHICH
THE
LAST
GAMEENTRY
INSTANCE
WILL
RESIDE
AFTER
COMPLET
ING
THE
OPERATION
EITHER
J
IS
THE
CORRECT
INDEX
FOR
THE
NEWEST
ENTRY
OR
ONE
OR
MORE
IMMEDIATELY
BEFORE
IT
WILL
HAVE
LESSER
SCORES
THE
WHILE
LOOP
AT
LINE
CHECKS
THE
COMPOUND
CONDITION
SHIFTING
REFERENCES
RIGHTWARD
AND
DECREMENTING
J
AS
LONG
AS
THERE
IS
ANOTHER
ENTRY
AT
INDEX
J
WITH
A
SCORE
LESS
THAN
THE
NEW
SCORE
CHAPTER
ARRAY
BASED
SEQUENCES
SORTING
A
SEQUENCE
IN
THE
PREVIOUS
SUBSECTION
WE
CONSIDERED
AN
APPLICATION
FOR
WHICH
WE
ADDED
AN
OB
JECT
TO
A
SEQUENCE
AT
A
GIVEN
POSITION
WHILE
SHIFTING
OTHER
ELEMENTS
SO
AS
TO
KEEP
THE
PREVIOUS
ORDER
INTACT
IN
THIS
SECTION
WE
USE
A
SIMILAR
TECHNIQUE
TO
SOLVE
THE
SORTING
PROBLEM
THAT
IS
STARTING
WITH
AN
UNORDERED
SEQUENCE
OF
ELEMENTS
AND
REARRANGING
THEM
INTO
NONDECREASING
ORDER
THE
INSERTION
SORT
ALGORITHM
WE
STUDY
SEVERAL
SORTING
ALGORITHMS
IN
THIS
BOOK
MOST
OF
WHICH
ARE
DESCRIBED
IN
CHAPTER
AS
A
WARM
UP
IN
THIS
SECTION
WE
DESCRIBE
A
NICE
SIMPLE
SORTING
AL
GORITHM
KNOWN
AS
INSERTION
SORT
THE
ALGORITHM
PROCEEDS
AS
FOLLOWS
FOR
AN
ARRAY
BASED
SEQUENCE
WE
START
WITH
THE
FIRST
ELEMENT
IN
THE
ARRAY
ONE
ELEMENT
BY
ITSELF
IS
ALREADY
SORTED
THEN
WE
CONSIDER
THE
NEXT
ELEMENT
IN
THE
ARRAY
IF
IT
IS
SMALLER
THAN
THE
FIRST
WE
SWAP
THEM
NEXT
WE
CONSIDER
THE
THIRD
ELEMENT
IN
THE
ARRAY
WE
SWAP
IT
LEFTWARD
UNTIL
IT
IS
IN
ITS
PROPER
ORDER
WITH
THE
FIRST
TWO
ELEMENTS
WE
THEN
CONSIDER
THE
FOURTH
ELEMENT
AND
SWAP
IT
LEFTWARD
UNTIL
IT
IS
IN
THE
PROPER
ORDER
WITH
THE
FIRST
THREE
WE
CONTINUE
IN
THIS
MANNER
WITH
THE
FIFTH
ELEMENT
THE
SIXTH
AND
SO
ON
UNTIL
THE
WHOLE
ARRAY
IS
SORTED
WE
CAN
EXPRESS
THE
INSERTION
SORT
ALGORITHM
IN
PSEUDO
CODE
AS
SHOWN
IN
CODE
FRAGMENT
ALGORITHM
INSERTIONSORT
A
INPUT
AN
ARRAY
A
OF
N
COMPARABLE
ELEMENTS
OUTPUT
THE
ARRAY
A
WITH
ELEMENTS
REARRANGED
IN
NONDECREASING
ORDER
FOR
K
FROM
TO
N
DO
INSERT
A
K
AT
ITS
PROPER
LOCATION
WITHIN
A
A
A
K
CODE
FRAGMENT
HIGH
LEVEL
DESCRIPTION
OF
THE
INSERTION
SORT
ALGORITHM
THIS
IS
A
SIMPLE
HIGH
LEVEL
DESCRIPTION
OF
INSERTION
SORT
IF
WE
LOOK
BACK
TO
CODE
FRAGMENT
OF
SECTION
WE
SEE
THAT
THE
TASK
OF
INSERTING
A
NEW
EN
TRY
INTO
THE
LIST
OF
HIGH
SCORES
IS
ALMOST
IDENTICAL
TO
THE
TASK
OF
INSERTING
A
NEWLY
CONSIDERED
ELEMENT
IN
INSERTION
SORT
EXCEPT
THAT
GAME
SCORES
WERE
ORDERED
FROM
HIGH
TO
LOW
WE
PROVIDE
A
PYTHON
IMPLEMENTATION
OF
INSERTION
SORT
IN
CODE
FRAG
MENT
USING
AN
OUTER
LOOP
TO
CONSIDER
EACH
ELEMENT
IN
TURN
AND
AN
INNER
LOOP
THAT
MOVES
A
NEWLY
CONSIDERED
ELEMENT
TO
ITS
PROPER
LOCATION
RELATIVE
TO
THE
SORTED
SUBARRAY
OF
ELEMENTS
THAT
ARE
TO
ITS
LEFT
WE
ILLUSTRATE
AN
EXAMPLE
RUN
OF
THE
INSERTION
SORT
ALGORITHM
IN
FIGURE
THE
NESTED
LOOPS
OF
INSERTION
SORT
LEAD
TO
AN
O
RUNNING
TIME
IN
THE
WORST
CASE
THE
MOST
WORK
IS
DONE
IF
THE
ARRAY
IS
INITIALLY
IN
REVERSE
ORDER
ON
THE
OTHER
HAND
IF
THE
INITIAL
ARRAY
IS
NEARLY
SORTED
OR
PERFECTLY
SORTED
INSERTION
SORT
RUNS
IN
O
N
TIME
BECAUSE
THERE
ARE
FEW
OR
NO
ITERATIONS
OF
THE
INNER
LOOP
USING
ARRAY
BASED
SEQUENCES
DEF
INSERTION
SORT
A
SORT
LIST
OF
COMPARABLE
ELEMENTS
INTO
NONDECREASING
ORDER
FOR
K
IN
RANGE
LEN
A
FROM
TO
N
CUR
A
K
CURRENT
ELEMENT
TO
BE
INSERTED
J
K
FIND
CORRECT
INDEX
J
FOR
CURRENT
WHILE
J
AND
A
J
CUR
ELEMENT
A
J
MUST
BE
AFTER
CURRENT
A
J
A
J
J
A
J
CUR
CUR
IS
NOW
IN
THE
RIGHT
PLACE
CODE
FRAGMENT
PYTHON
CODE
FOR
PERFORMING
INSERTION
SORT
ON
A
LIST
CUR
NO
MOVE
MOVE
NO
MOVE
NO
MOVE
MOVE
MOVE
MOVE
DONE
FIGURE
EXECUTION
OF
THE
INSERTION
SORT
ALGORITHM
ON
AN
ARRAY
OF
EIGHT
CHARAC
TERS
EACH
ROW
CORRESPONDS
TO
AN
ITERATION
OF
THE
OUTER
LOOP
AND
EACH
COPY
OF
THE
SEQUENCE
IN
A
ROW
CORRESPONDS
TO
AN
ITERATION
OF
THE
INNER
LOOP
THE
CURRENT
ELEMENT
THAT
IS
BEING
INSERTED
IS
HIGHLIGHTED
IN
THE
ARRAY
AND
SHOWN
AS
THE
CUR
VALUE
CHAPTER
ARRAY
BASED
SEQUENCES
SIMPLE
CRYPTOGRAPHY
AN
INTERESTING
APPLICATION
OF
STRINGS
AND
LISTS
IS
CRYPTOGRAPHY
THE
SCIENCE
OF
SECRET
MESSAGES
AND
THEIR
APPLICATIONS
THIS
FIELD
STUDIES
WAYS
OF
PERFORMING
ENCRYP
TION
WHICH
TAKES
A
MESSAGE
CALLED
THE
PLAINTEXT
AND
CONVERTS
IT
INTO
A
SCRAMBLED
MESSAGE
CALLED
THE
CIPHERTEXT
LIKEWISE
CRYPTOGRAPHY
ALSO
STUDIES
CORRESPONDING
WAYS
OF
PERFORMING
DECRYPTION
WHICH
TAKES
A
CIPHERTEXT
AND
TURNS
IT
BACK
INTO
ITS
ORIGINAL
PLAINTEXT
ARGUABLY
THE
EARLIEST
ENCRYPTION
SCHEME
IS
THE
CAESAR
CIPHER
WHICH
IS
NAMED
AFTER
JULIUS
CAESAR
WHO
USED
THIS
SCHEME
TO
PROTECT
IMPORTANT
MILITARY
MESSAGES
ALL
OF
CAESAR
MESSAGES
WERE
WRITTEN
IN
LATIN
OF
COURSE
WHICH
ALREADY
MAKES
THEM
UNREADABLE
FOR
MOST
OF
US
THE
CAESAR
CIPHER
IS
A
SIMPLE
WAY
TO
OBSCURE
A
MESSAGE
WRITTEN
IN
A
LANGUAGE
THAT
FORMS
WORDS
WITH
AN
ALPHABET
THE
CAESAR
CIPHER
INVOLVES
REPLACING
EACH
LETTER
IN
A
MESSAGE
WITH
THE
LETTER
THAT
IS
A
CERTAIN
NUMBER
OF
LETTERS
AFTER
IT
IN
THE
ALPHABET
SO
IN
AN
ENGLISH
MESSAGE
WE
MIGHT
REPLACE
EACH
A
WITH
D
EACH
B
WITH
E
EACH
C
WITH
F
AND
SO
ON
IF
SHIFTING
BY
THREE
CHARACTERS
WE
CONTINUE
THIS
APPROACH
ALL
THE
WAY
UP
TO
W
WHICH
IS
REPLACED
WITH
Z
THEN
WE
LET
THE
SUBSTITUTION
PATTERN
WRAP
AROUND
SO
THAT
WE
REPLACE
X
WITH
A
Y
WITH
B
AND
Z
WITH
C
CONVERTING
BETWEEN
STRINGS
AND
CHARACTER
LISTS
GIVEN
THAT
STRINGS
ARE
IMMUTABLE
WE
CANNOT
DIRECTLY
EDIT
AN
INSTANCE
TO
ENCRYPT
IT
INSTEAD
OUR
GOAL
WILL
BE
TO
GENERATE
A
NEW
STRING
A
CONVENIENT
TECHNIQUE
FOR
PER
FORMING
STRING
TRANSFORMATIONS
IS
TO
CREATE
AN
EQUIVALENT
LIST
OF
CHARACTERS
EDIT
THE
LIST
AND
THEN
REASSEMBLE
A
NEW
STRING
BASED
ON
THE
LIST
THE
FIRST
STEP
CAN
BE
PER
FORMED
BY
SENDING
THE
STRING
AS
A
PARAMETER
TO
THE
CONSTRUCTOR
OF
THE
LIST
CLASS
FOR
EXAMPLE
THE
EXPRESSION
LIST
BIRD
PRODUCES
THE
RESULT
B
I
R
D
CONVERSELY
WE
CAN
USE
A
LIST
OF
CHARACTERS
TO
BUILD
A
STRING
BY
INVOKING
THE
JOIN
METHOD
ON
AN
EMPTY
STRING
WITH
THE
LIST
OF
CHARACTERS
AS
THE
PARAMETER
FOR
EXAM
PLE
THE
CALL
JOIN
B
I
R
D
RETURNS
THE
STRING
BIRD
USING
CHARACTERS
AS
ARRAY
INDICES
IF
WE
WERE
TO
NUMBER
OUR
LETTERS
LIKE
ARRAY
INDICES
SO
THAT
A
IS
B
IS
C
IS
AND
SO
ON
THEN
WE
CAN
WRITE
THE
CAESAR
CIPHER
WITH
A
ROTATION
OF
R
AS
A
SIMPLE
FORMULA
REPLACE
EACH
LETTER
I
WITH
THE
LETTER
I
R
MOD
WHERE
MOD
IS
THE
MODULO
OPERATOR
WHICH
RETURNS
THE
REMAINDER
AFTER
PERFORMING
AN
INTEGER
DIVISION
THIS
OPERATOR
IS
DENOTED
WITH
IN
PYTHON
AND
IT
IS
EXACTLY
THE
OPERATOR
WE
NEED
TO
EASILY
PERFORM
THE
WRAP
AROUND
AT
THE
END
OF
THE
ALPHABET
FOR
MOD
IS
MOD
IS
AND
MOD
IS
THE
DECRYPTION
ALGORITHM
FOR
THE
CAESAR
CIPHER
IS
JUST
THE
OPPOSITE
WE
REPLACE
EACH
LETTER
WITH
THE
ONE
R
PLACES
BEFORE
IT
WITH
WRAP
AROUND
THAT
IS
LETTER
I
IS
REPLACED
BY
LETTER
I
R
MOD
USING
ARRAY
BASED
SEQUENCES
WE
CAN
REPRESENT
A
REPLACEMENT
RULE
USING
ANOTHER
STRING
TO
DESCRIBE
THE
TRANS
LATION
AS
A
CONCRETE
EXAMPLE
SUPPOSE
WE
ARE
USING
A
CAESAR
CIPHER
WITH
A
THREE
CHARACTER
ROTATION
WE
CAN
PRECOMPUTE
A
STRING
THAT
REPRESENTS
THE
REPLACEMENTS
THAT
SHOULD
BE
USED
FOR
EACH
CHARACTER
FROM
A
TO
Z
FOR
EXAMPLE
A
SHOULD
BE
RE
PLACED
BY
D
B
REPLACED
BY
E
AND
SO
ON
THE
REPLACEMENT
CHARACTERS
IN
ORDER
ARE
DEFGHIJKLMNOPQRSTUVWXYZABC
WE
CAN
SUBSEQUENTLY
USE
THIS
TRANSLATION
STRING
AS
A
GUIDE
TO
ENCRYPT
A
MESSAGE
THE
REMAINING
CHALLENGE
IS
HOW
TO
QUICKLY
LOCATE
THE
REPLACEMENT
FOR
EACH
CHARACTER
OF
THE
ORIGINAL
MESSAGE
FORTUNATELY
WE
CAN
RELY
ON
THE
FACT
THAT
CHARACTERS
ARE
REPRESENTED
IN
UNICODE
BY
INTEGER
CODE
POINTS
AND
THE
CODE
POINTS
FOR
THE
UPPERCASE
LETTERS
OF
THE
LATIN
ALPHABET
ARE
CONSECUTIVE
FOR
SIMPLICITY
WE
RESTRICT
OUR
ENCRYPTION
TO
UPPERCASE
LETTERS
PYTHON
SUPPORTS
FUNCTIONS
THAT
CONVERT
BETWEEN
INTEGER
CODE
POINTS
AND
ONE
CHARACTER
STRINGS
SPECIFICALLY
THE
FUNCTION
ORD
C
TAKES
A
ONE
CHARACTER
STRING
AS
A
PARAMETER
AND
RETURNS
THE
INTEGER
CODE
POINT
FOR
THAT
CHARACTER
CONVERSELY
THE
FUNCTION
CHR
J
TAKES
AN
INTEGER
AND
RETURNS
ITS
ASSOCIATED
ONE
CHARACTER
STRING
IN
ORDER
TO
FIND
A
REPLACEMENT
FOR
A
CHARACTER
IN
OUR
CAESAR
CIPHER
WE
NEED
TO
MAP
THE
CHARACTERS
A
TO
Z
TO
THE
RESPECTIVE
NUMBERS
TO
THE
FORMULA
FOR
DOING
THAT
CONVERSION
IS
J
ORD
C
ORD
A
AS
A
SANITY
CHECK
IF
CHARACTER
C
IS
A
WE
HAVE
THAT
J
WHEN
C
IS
B
WE
WILL
FIND
THAT
ITS
ORDINAL
VALUE
IS
PRE
CISELY
ONE
MORE
THAN
THAT
FOR
A
SO
THEIR
DIFFERENCE
IS
IN
GENERAL
THE
INTEGER
J
THAT
RESULTS
FROM
SUCH
A
CALCULATION
CAN
BE
USED
AS
AN
INDEX
INTO
OUR
PRECOMPUTED
TRANSLATION
STRING
AS
ILLUSTRATED
IN
FIGURE
ENCODER
ARRAY
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
T
U
V
W
X
Y
Z
A
B
C
USING
T
AS
AN
INDEX
IN
UNICODE
ORD
T
ORD
A
HERE
IS
THE
REPLACEMENT
FOR
T
FIGURE
ILLUSTRATING
THE
USE
OF
UPPERCASE
CHARACTERS
AS
INDICES
IN
THIS
CASE
TO
PERFORM
THE
REPLACEMENT
RULE
FOR
CAESAR
CIPHER
ENCRYPTION
IN
CODE
FRAGMENT
WE
DEVELOP
A
PYTHON
CLASS
FOR
PERFORMING
THE
CAESAR
CIPHER
WITH
AN
ARBITRARY
ROTATIONAL
SHIFT
AND
DEMONSTRATE
ITS
USE
WHEN
WE
RUN
THIS
PROGRAM
TO
PERFORM
A
SIMPLE
TEST
WE
GET
THE
FOLLOWING
OUTPUT
SECRET
WKH
HDJOH
LV
LQ
SODB
PHHW
DW
MRH
V
MESSAGE
THE
EAGLE
IS
IN
PLAY
MEET
AT
JOE
THE
CONSTRUCTOR
FOR
THE
CLASS
BUILDS
THE
FORWARD
AND
BACKWARD
TRANSLATION
STRINGS
FOR
THE
GIVEN
ROTATION
WITH
THOSE
IN
HAND
THE
ENCRYPTION
AND
DECRYPTION
ALGORITHMS
ARE
ESSENTIALLY
THE
SAME
AND
SO
WE
PERFORM
BOTH
BY
MEANS
OF
A
NONPUBLIC
UTILITY
METHOD
NAMED
TRANSFORM
CHAPTER
ARRAY
BASED
SEQUENCES
CLASS
CAESARCIPHER
CLASS
FOR
DOING
ENCRYPTION
AND
DECRYPTION
USING
A
CAESAR
CIPHER
DEF
INIT
SELF
SHIFT
CONSTRUCT
CAESAR
CIPHER
USING
GIVEN
INTEGER
SHIFT
FOR
ROTATION
ENCODER
NONE
TEMP
ARRAY
FOR
ENCRYPTION
DECODER
NONE
TEMP
ARRAY
FOR
DECRYPTION
FOR
K
IN
RANGE
ENCODER
K
CHR
K
SHIFT
ORD
A
DECODER
K
CHR
K
SHIFT
ORD
A
SELF
FORWARD
JOIN
ENCODER
WILL
STORE
AS
STRING
SELF
BACKWARD
JOIN
DECODER
SINCE
FIXED
DEF
ENCRYPT
SELF
MESSAGE
RETURN
STRING
REPRESENTING
ENCRIPTED
MESSAGE
RETURN
SELF
TRANSFORM
MESSAGE
SELF
FORWARD
DEF
DECRYPT
SELF
SECRET
RETURN
DECRYPTED
MESSAGE
GIVEN
ENCRYPTED
SECRET
RETURN
SELF
TRANSFORM
SECRET
SELF
BACKWARD
DEF
TRANSFORM
SELF
ORIGINAL
CODE
UTILITY
TO
PERFORM
TRANSFORMATION
BASED
ON
GIVEN
CODE
STRING
MSG
LIST
ORIGINAL
FOR
K
IN
RANGE
LEN
MSG
IF
MSG
K
ISUPPER
J
ORD
MSG
K
ORD
A
INDEX
FROM
TO
MSG
K
CODE
J
REPLACE
THIS
CHARACTER
RETURN
JOIN
MSG
IF
NAME
MAIN
CIPHER
CAESARCIPHER
MESSAGE
THE
EAGLE
IS
IN
PLAY
MEET
AT
JOE
CODED
CIPHER
ENCRYPT
MESSAGE
PRINT
SECRET
CODED
ANSWER
CIPHER
DECRYPT
CODED
PRINT
MESSAGE
ANSWER
CODE
FRAGMENT
A
COMPLETE
PYTHON
CLASS
FOR
THE
CAESAR
CIPHER
MULTIDIMENSIONAL
DATA
SETS
MULTIDIMENSIONAL
DATA
SETS
LISTS
TUPLES
AND
STRINGS
IN
PYTHON
ARE
ONE
DIMENSIONAL
WE
USE
A
SINGLE
INDEX
TO
ACCESS
EACH
ELEMENT
OF
THE
SEQUENCE
MANY
COMPUTER
APPLICATIONS
INVOLVE
MUL
TIDIMENSIONAL
DATA
SETS
FOR
EXAMPLE
COMPUTER
GRAPHICS
ARE
OFTEN
MODELED
IN
EITHER
TWO
OR
THREE
DIMENSIONS
GEOGRAPHIC
INFORMATION
MAY
BE
NATURALLY
REPRE
SENTED
IN
TWO
DIMENSIONS
MEDICAL
IMAGING
MAY
PROVIDE
THREE
DIMENSIONAL
SCANS
OF
A
PATIENT
AND
A
COMPANY
VALUATION
IS
OFTEN
BASED
UPON
A
HIGH
NUMBER
OF
IN
DEPENDENT
FINANCIAL
MEASURES
THAT
CAN
BE
MODELED
AS
MULTIDIMENSIONAL
DATA
A
TWO
DIMENSIONAL
ARRAY
IS
SOMETIMES
ALSO
CALLED
A
MATRIX
WE
MAY
USE
TWO
INDICES
SAY
I
AND
J
TO
REFER
TO
THE
CELLS
IN
THE
MATRIX
THE
FIRST
INDEX
USUALLY
REFERS
TO
A
ROW
NUMBER
AND
THE
SECOND
TO
A
COLUMN
NUMBER
AND
THESE
ARE
TRADITIONALLY
ZERO
INDEXED
IN
COMPUTER
SCIENCE
FIGURE
ILLUSTRATES
A
TWO
DIMENSIONAL
DATA
SET
WITH
INTEGER
VALUES
THIS
DATA
MIGHT
FOR
EXAMPLE
REPRESENT
THE
NUMBER
OF
STORES
IN
VARIOUS
REGIONS
OF
MANHATTAN
FIGURE
ILLUSTRATION
OF
A
TWO
DIMENSIONAL
INTEGER
DATA
SET
WHICH
HAS
ROWS
AND
COLUMNS
THE
ROWS
AND
COLUMNS
ARE
ZERO
INDEXED
IF
THIS
DATA
SET
WERE
NAMED
STORES
THE
VALUE
OF
STORES
IS
AND
THE
VALUE
OF
STORES
IS
A
COMMON
REPRESENTATION
FOR
A
TWO
DIMENSIONAL
DATA
SET
IN
PYTHON
IS
AS
A
LIST
OF
LISTS
IN
PARTICULAR
WE
CAN
REPRESENT
A
TWO
DIMENSIONAL
ARRAY
AS
A
LIST
OF
ROWS
WITH
EACH
ROW
ITSELF
BEING
A
LIST
OF
VALUES
FOR
EXAMPLE
THE
TWO
DIMENSIONAL
DATA
MIGHT
BE
STORED
IN
PYTHON
AS
FOLLOWS
DATA
AN
ADVANTAGE
OF
THIS
REPRESENTATION
IS
THAT
WE
CAN
NATURALLY
USE
A
SYNTAX
SUCH
AS
DATA
TO
REPRESENT
THE
VALUE
THAT
HAS
ROW
INDEX
AND
COLUMN
INDEX
AS
DATA
THE
SECOND
ENTRY
IN
THE
OUTER
LIST
IS
ITSELF
A
LIST
AND
THUS
INDEXABLE
CHAPTER
ARRAY
BASED
SEQUENCES
CONSTRUCTING
A
MULTIDIMENSIONAL
LIST
TO
QUICKLY
INITIALIZE
A
ONE
DIMENSIONAL
LIST
WE
GENERALLY
RELY
ON
A
SYNTAX
SUCH
AS
DATA
N
TO
CREATE
A
LIST
OF
N
ZEROS
ON
PAGE
WE
EMPHASIZED
THAT
FROM
A
TECHNICAL
PERSPECTIVE
THIS
CREATES
A
LIST
OF
LENGTH
N
WITH
ALL
ENTRIES
REFERENCING
THE
SAME
INTEGER
INSTANCE
BUT
THAT
THERE
WAS
NO
MEANINGFUL
CONSEQUENCE
OF
SUCH
ALIASING
BECAUSE
OF
THE
IMMUTABILITY
OF
THE
INT
CLASS
IN
PYTHON
WE
HAVE
TO
BE
CONSIDERABLY
MORE
CAREFUL
WHEN
CREATING
A
LIST
OF
LISTS
IF
OUR
GOAL
WERE
TO
CREATE
THE
EQUIVALENT
OF
A
TWO
DIMENSIONAL
LIST
OF
INTEGERS
WITH
R
ROWS
AND
C
COLUMNS
AND
TO
INITIALIZE
ALL
VALUES
TO
ZERO
A
FLAWED
APPROACH
MIGHT
BE
TO
TRY
THE
COMMAND
DATA
C
R
WARNING
THIS
IS
A
MISTAKE
WHILE
C
IS
INDEED
A
LIST
OF
C
ZEROS
MULTIPLYING
THAT
LIST
BY
R
UNFORTUNATELY
CRE
ATES
A
SINGLE
LIST
WITH
LENGTH
R
C
JUST
AS
RESULTS
IN
LIST
A
BETTER
YET
STILL
FLAWED
ATTEMPT
IS
TO
MAKE
A
LIST
THAT
CONTAINS
THE
LIST
OF
C
ZEROS
AS
ITS
ONLY
ELEMENT
AND
THEN
TO
MULTIPLY
THAT
LIST
BY
R
THAT
IS
WE
COULD
TRY
THE
COMMAND
DATA
C
R
WARNING
STILL
A
MISTAKE
THIS
IS
MUCH
CLOSER
AS
WE
ACTUALLY
DO
HAVE
A
STRUCTURE
THAT
IS
FORMALLY
A
LIST
OF
LISTS
THE
PROBLEM
IS
THAT
ALL
R
ENTRIES
OF
THE
LIST
KNOWN
AS
DATA
ARE
REFERENCES
TO
THE
SAME
INSTANCE
OF
A
LIST
OF
C
ZEROS
FIGURE
PROVIDES
A
PORTRAYAL
OF
SUCH
ALIASING
FIGURE
A
FLAWED
REPRESENTATION
OF
A
DATA
SET
AS
A
LIST
OF
LISTS
CREATED
WITH
THE
COMMAND
DATA
FOR
SIMPLICITY
WE
OVERLOOK
THE
FACT
THAT
THE
VALUES
IN
THE
SECONDARY
LIST
ARE
REFERENTIAL
THIS
IS
TRULY
A
PROBLEM
SETTING
AN
ENTRY
SUCH
AS
DATA
WOULD
CHANGE
THE
FIRST
ENTRY
OF
THE
SECONDARY
LIST
TO
REFERENCE
A
NEW
VALUE
YET
THAT
CELL
OF
THE
SECONDARY
LIST
ALSO
REPRESENTS
THE
VALUE
DATA
BECAUSE
ROW
DATA
AND
ROW
DATA
REFER
TO
THE
SAME
SECONDARY
LIST
MULTIDIMENSIONAL
DATA
SETS
FIGURE
A
VALID
REPRESENTATION
OF
A
DATA
SET
AS
A
LIST
OF
LISTS
FOR
SIMPLIC
ITY
WE
OVERLOOK
THE
FACT
THAT
THE
VALUES
IN
THE
SECONDARY
LISTS
ARE
REFERENTIAL
TO
PROPERLY
INITIALIZE
A
TWO
DIMENSIONAL
LIST
WE
MUST
ENSURE
THAT
EACH
CELL
OF
THE
PRIMARY
LIST
REFERS
TO
AN
INDEPENDENT
INSTANCE
OF
A
SECONDARY
LIST
THIS
CAN
BE
ACCOMPLISHED
THROUGH
THE
USE
OF
PYTHON
LIST
COMPREHENSION
SYNTAX
DATA
C
FOR
J
IN
RANGE
R
THIS
COMMAND
PRODUCES
A
VALID
CONFIGURATION
SIMILAR
TO
THE
ONE
SHOWN
IN
FIG
URE
BY
USING
LIST
COMPREHENSION
THE
EXPRESSION
C
IS
REEVALUATED
FOR
EACH
PASS
OF
THE
EMBEDDED
FOR
LOOP
THEREFORE
WE
GET
R
DISTINCT
SECONDARY
LISTS
AS
DESIRED
WE
NOTE
THAT
THE
VARIABLE
J
IN
THAT
COMMAND
IS
IRRELEVANT
WE
SIMPLY
NEED
A
FOR
LOOP
THAT
ITERATES
R
TIMES
TWO
DIMENSIONAL
ARRAYS
AND
POSITIONAL
GAMES
MANY
COMPUTER
GAMES
BE
THEY
STRATEGY
GAMES
SIMULATION
GAMES
OR
FIRST
PERSON
CONFLICT
GAMES
INVOLVE
OBJECTS
THAT
RESIDE
IN
A
TWO
DIMENSIONAL
SPACE
SOFTWARE
FOR
SUCH
POSITIONAL
GAMES
NEED
A
WAY
OF
REPRESENTING
SUCH
A
TWO
DIMENSIONAL
BOARD
AND
IN
PYTHON
THE
LIST
OF
LISTS
IS
A
NATURAL
CHOICE
TIC
TAC
TOE
AS
MOST
SCHOOL
CHILDREN
KNOW
TIC
TAC
TOE
IS
A
GAME
PLAYED
IN
A
THREE
BY
THREE
BOARD
TWO
PLAYERS
X
AND
O
ALTERNATE
IN
PLACING
THEIR
RESPECTIVE
MARKS
IN
THE
CELLS
OF
THIS
BOARD
STARTING
WITH
PLAYER
X
IF
EITHER
PLAYER
SUCCEEDS
IN
GETTING
THREE
OF
HIS
OR
HER
MARKS
IN
A
ROW
COLUMN
OR
DIAGONAL
THEN
THAT
PLAYER
WINS
THIS
IS
ADMITTEDLY
NOT
A
SOPHISTICATED
POSITIONAL
GAME
AND
IT
NOT
EVEN
THAT
MUCH
FUN
TO
PLAY
SINCE
A
GOOD
PLAYER
O
CAN
ALWAYS
FORCE
A
TIE
TIC
TAC
TOE
SAVING
GRACE
IS
THAT
IT
IS
A
NICE
SIMPLE
EXAMPLE
SHOWING
HOW
TWO
DIMENSIONAL
ARRAYS
CAN
BE
USED
FOR
POSITIONAL
GAMES
SOFTWARE
FOR
MORE
SOPHISTICATED
POSITIONAL
GAMES
SUCH
AS
CHECKERS
CHESS
OR
THE
POPULAR
SIMULATION
GAMES
ARE
ALL
BASED
ON
THE
SAME
APPROACH
WE
ILLUSTRATE
HERE
FOR
USING
A
TWO
DIMENSIONAL
ARRAY
FOR
TIC
TAC
TOE
CHAPTER
ARRAY
BASED
SEQUENCES
OUR
REPRESENTATION
OF
A
BOARD
WILL
BE
A
LIST
OF
LISTS
OF
CHARACTERS
WITH
X
OR
O
DESIGNATING
A
PLAYER
MOVE
OR
DESIGNATING
AN
EMPTY
SPACE
FOR
EXAMPLE
THE
BOARD
CONFIGURATION
O
X
O
X
O
X
WILL
BE
STORED
INTERNALLY
AS
O
X
O
X
O
X
WE
DEVELOP
A
COMPLETE
PYTHON
CLASS
FOR
MAINTAINING
A
TIC
TAC
TOE
BOARD
FOR
TWO
PLAYERS
THAT
CLASS
WILL
KEEP
TRACK
OF
THE
MOVES
AND
REPORT
A
WINNER
BUT
IT
DOES
NOT
PERFORM
ANY
STRATEGY
OR
ALLOW
SOMEONE
TO
PLAY
TIC
TAC
TOE
AGAINST
THE
COMPUTER
THE
DETAILS
OF
SUCH
A
PROGRAM
ARE
BEYOND
THE
SCOPE
OF
THIS
CHAPTER
BUT
IT
MIGHT
NONETHELESS
MAKE
A
GOOD
COURSE
PROJECT
SEE
EXERCISE
P
BEFORE
PRESENTING
THE
IMPLEMENTATION
OF
THE
CLASS
WE
DEMONSTRATE
ITS
PUBLIC
INTERFACE
WITH
A
SIMPLE
TEST
IN
CODE
FRAGMENT
GAME
TICTACTOE
X
MOVES
O
MOVES
GAME
MARK
GAME
MARK
GAME
MARK
GAME
MARK
GAME
MARK
GAME
MARK
GAME
MARK
GAME
MARK
GAME
MARK
PRINT
GAME
WINNER
GAME
WINNER
IF
WINNER
IS
NONE
PRINT
TIE
ELSE
PRINT
WINNER
WINS
CODE
FRAGMENT
A
SIMPLE
TEST
FOR
OUR
TIC
TAC
TOE
CLASS
THE
BASIC
OPERATIONS
ARE
THAT
A
NEW
GAME
INSTANCE
REPRESENTS
AN
EMPTY
BOARD
THAT
THE
MARK
I
J
METHOD
ADDS
A
MARK
AT
THE
GIVEN
POSITION
FOR
THE
CURRENT
PLAYER
WITH
THE
SOFTWARE
MANAGING
THE
ALTERNATING
OF
TURNS
AND
THAT
THE
GAME
BOARD
CAN
BE
PRINTED
AND
THE
WINNER
DETERMINED
THE
COMPLETE
SOURCE
CODE
FOR
THE
TICTACTOE
CLASS
IS
GIVEN
IN
CODE
FRAGMENT
OUR
MARK
METHOD
PERFORMS
ERROR
CHECKING
TO
MAKE
SURE
THAT
VALID
INDICES
ARE
SENT
THAT
THE
POSITION
IS
NOT
ALREADY
OCCUPIED
AND
THAT
NO
FURTHER
MOVES
ARE
MADE
AFTER
SOMEONE
WINS
THE
GAME
MULTIDIMENSIONAL
DATA
SETS
CLASS
TICTACTOE
MANAGEMENT
OF
A
TIC
TAC
TOE
GAME
DOES
NOT
DO
STRATEGY
DEF
INIT
SELF
START
A
NEW
GAME
SELF
BOARD
FOR
J
IN
RANGE
SELF
PLAYER
X
DEF
MARK
SELF
I
J
PUT
AN
X
OR
O
MARK
AT
POSITION
I
J
FOR
NEXT
PLAYER
TURN
IF
NOT
I
AND
J
RAISE
VALUEERROR
INVALID
BOARD
POSITION
IF
SELF
BOARD
I
J
RAISE
VALUEERROR
BOARD
POSITION
OCCUPIED
IF
SELF
WINNER
IS
NOT
NONE
RAISE
VALUEERROR
GAME
IS
ALREADY
COMPLETE
SELF
BOARD
I
J
SELF
PLAYER
IF
SELF
PLAYER
X
SELF
PLAYER
O
ELSE
SELF
PLAYER
X
DEF
IS
WIN
SELF
MARK
CHECK
WHETHER
THE
BOARD
CONFIGURATION
IS
A
WIN
FOR
THE
GIVEN
PLAYER
BOARD
SELF
BOARD
LOCAL
VARIABLE
FOR
SHORTHAND
RETURN
MARK
BOARD
BOARD
BOARD
OR
ROW
MARK
BOARD
BOARD
BOARD
OR
ROW
MARK
BOARD
BOARD
BOARD
OR
ROW
MARK
BOARD
BOARD
BOARD
OR
COLUMN
MARK
BOARD
BOARD
BOARD
OR
COLUMN
MARK
BOARD
BOARD
BOARD
OR
COLUMN
MARK
BOARD
BOARD
BOARD
OR
DIAGONAL
MARK
BOARD
BOARD
BOARD
REV
DIAG
DEF
WINNER
SELF
RETURN
MARK
OF
WINNING
PLAYER
OR
NONE
TO
INDICATE
A
TIE
FOR
MARK
IN
XO
IF
SELF
IS
WIN
MARK
RETURN
MARK
RETURN
NONE
DEF
STR
SELF
RETURN
STRING
REPRESENTATION
OF
CURRENT
GAME
BOARD
ROWS
JOIN
SELF
BOARD
R
FOR
R
IN
RANGE
RETURN
N
N
JOIN
ROWS
CODE
FRAGMENT
A
COMPLETE
PYTHON
CLASS
FOR
MANAGING
A
TIC
TAC
TOE
GAME
CHAPTER
ARRAY
BASED
SEQUENCES
EXERCISES
FOR
HELP
WITH
EXERCISES
PLEASE
VISIT
THE
SITE
WWW
WILEY
COM
COLLEGE
GOODRICH
REINFORCEMENT
R
EXECUTE
THE
EXPERIMENT
FROM
CODE
FRAGMENT
AND
COMPARE
THE
RESULTS
ON
YOUR
SYSTEM
TO
THOSE
WE
REPORT
IN
CODE
FRAGMENT
R
IN
CODE
FRAGMENT
WE
PERFORM
AN
EXPERIMENT
TO
COMPARE
THE
LENGTH
OF
A
PYTHON
LIST
TO
ITS
UNDERLYING
MEMORY
USAGE
DETERMINING
THE
SEQUENCE
OF
ARRAY
SIZES
REQUIRES
A
MANUAL
INSPECTION
OF
THE
OUTPUT
OF
THAT
PROGRAM
REDESIGN
THE
EXPERIMENT
SO
THAT
THE
PROGRAM
OUTPUTS
ONLY
THOSE
VALUES
OF
K
AT
WHICH
THE
EXISTING
CAPACITY
IS
EXHAUSTED
FOR
EXAMPLE
ON
A
SYSTEM
CONSISTENT
WITH
THE
RESULTS
OF
CODE
FRAGMENT
YOUR
PROGRAM
SHOULD
OUTPUT
THAT
THE
SEQUENCE
OF
ARRAY
CAPACITIES
ARE
R
MODIFY
THE
EXPERIMENT
FROM
CODE
FRAGMENT
IN
ORDER
TO
DEMONSTRATE
THAT
PYTHON
LIST
CLASS
OCCASIONALLY
SHRINKS
THE
SIZE
OF
ITS
UNDERLYING
ARRAY
WHEN
ELEMENTS
ARE
POPPED
FROM
A
LIST
R
OUR
DYNAMICARRAY
CLASS
AS
GIVEN
IN
CODE
FRAGMENT
DOES
NOT
SUPPORT
USE
OF
NEGATIVE
INDICES
WITH
GETITEM
UPDATE
THAT
METHOD
TO
BETTER
MATCH
THE
SEMANTICS
OF
A
PYTHON
LIST
R
REDO
THE
JUSTIFICATION
OF
PROPOSITION
ASSUMING
THAT
THE
THE
COST
OF
GROWING
THE
ARRAY
FROM
SIZE
K
TO
SIZE
IS
CYBER
DOLLARS
HOW
MUCH
SHOULD
EACH
APPEND
OPERATION
BE
CHARGED
TO
MAKE
THE
AMORTIZATION
WORK
R
OUR
IMPLEMENTATION
OF
INSERT
FOR
THE
DYNAMICARRAY
CLASS
AS
GIVEN
IN
CODE
FRAGMENT
HAS
THE
FOLLOWING
INEFFICIENCY
IN
THE
CASE
WHEN
A
RE
SIZE
OCCURS
THE
RESIZE
OPERATION
TAKES
TIME
TO
COPY
ALL
THE
ELEMENTS
FROM
AN
OLD
ARRAY
TO
A
NEW
ARRAY
AND
THEN
THE
SUBSEQUENT
LOOP
IN
THE
BODY
OF
INSERT
SHIFTS
MANY
OF
THOSE
ELEMENTS
GIVE
AN
IMPROVED
IMPLEMENTATION
OF
THE
INSERT
METHOD
SO
THAT
IN
THE
CASE
OF
A
RESIZE
THE
ELEMENTS
ARE
SHIFTED
INTO
THEIR
FINAL
POSITION
DURING
THAT
OPERATION
THEREBY
AVOIDING
THE
SUBSEQUENT
SHIFTING
R
LET
A
BE
AN
ARRAY
OF
SIZE
N
CONTAINING
INTEGERS
FROM
TO
N
INCLU
SIVE
WITH
EXACTLY
ONE
REPEATED
DESCRIBE
A
FAST
ALGORITHM
FOR
FINDING
THE
INTEGER
IN
A
THAT
IS
REPEATED
R
EXPERIMENTALLY
EVALUATE
THE
EFFICIENCY
OF
THE
POP
METHOD
OF
PYTHON
LIST
CLASS
WHEN
USING
VARYING
INDICES
AS
A
PARAMETER
AS
WE
DID
FOR
INSERT
ON
PAGE
REPORT
YOUR
RESULTS
AKIN
TO
TABLE
EXERCISES
R
EXPLAIN
THE
CHANGES
THAT
WOULD
HAVE
TO
BE
MADE
TO
THE
PROGRAM
OF
CODE
FRAGMENT
SO
THAT
IT
COULD
PERFORM
THE
CAESAR
CIPHER
FOR
MESSAGES
THAT
ARE
WRITTEN
IN
AN
ALPHABET
BASED
LANGUAGE
OTHER
THAN
ENGLISH
SUCH
AS
GREEK
RUSSIAN
OR
HEBREW
R
THE
CONSTRUCTOR
FOR
THE
CAESARCIPHER
CLASS
IN
CODE
FRAGMENT
CAN
BE
IMPLEMENTED
WITH
A
TWO
LINE
BODY
BY
BUILDING
THE
FORWARD
AND
BACK
WARD
STRINGS
USING
A
COMBINATION
OF
THE
JOIN
METHOD
AND
AN
APPROPRIATE
COMPREHENSION
SYNTAX
GIVE
SUCH
AN
IMPLEMENTATION
R
USE
STANDARD
CONTROL
STRUCTURES
TO
COMPUTE
THE
SUM
OF
ALL
NUMBERS
IN
AN
N
N
DATA
SET
REPRESENTED
AS
A
LIST
OF
LISTS
R
DESCRIBE
HOW
THE
BUILT
IN
SUM
FUNCTION
CAN
BE
COMBINED
WITH
PYTHON
COMPREHENSION
SYNTAX
TO
COMPUTE
THE
SUM
OF
ALL
NUMBERS
IN
AN
N
N
DATA
SET
REPRESENTED
AS
A
LIST
OF
LISTS
CREATIVITY
C
IN
THE
EXPERIMENT
OF
CODE
FRAGMENT
WE
BEGIN
WITH
AN
EMPTY
LIST
IF
DATA
WERE
INITIALLY
CONSTRUCTED
WITH
NONEMPTY
LENGTH
DOES
THIS
AFFECT
THE
SEQUENCE
OF
VALUES
AT
WHICH
THE
UNDERLYING
ARRAY
IS
EXPANDED
PERFORM
YOUR
OWN
EXPERIMENTS
AND
COMMENT
ON
ANY
RELATIONSHIP
YOU
SEE
BETWEEN
THE
INITIAL
LENGTH
AND
THE
EXPANSION
SEQUENCE
C
THE
SHUFFLE
METHOD
SUPPORTED
BY
THE
RANDOM
MODULE
TAKES
A
PYTHON
LIST
AND
REARRANGES
IT
SO
THAT
EVERY
POSSIBLE
ORDERING
IS
EQUALLY
LIKELY
IMPLEMENT
YOUR
OWN
VERSION
OF
SUCH
A
FUNCTION
YOU
MAY
RELY
ON
THE
RANDRANGE
N
FUNCTION
OF
THE
RANDOM
MODULE
WHICH
RETURNS
A
RANDOM
NUMBER
BETWEEN
AND
N
INCLUSIVE
C
CONSIDER
AN
IMPLEMENTATION
OF
A
DYNAMIC
ARRAY
BUT
INSTEAD
OF
COPYING
THE
ELEMENTS
INTO
AN
ARRAY
OF
DOUBLE
THE
SIZE
THAT
IS
FROM
N
TO
WHEN
ITS
CAPACITY
IS
REACHED
WE
COPY
THE
ELEMENTS
INTO
AN
ARRAY
WITH
FN
ADDITIONAL
CELLS
GOING
FROM
CAPACITY
N
TO
CAPACITY
N
FN
PROVE
THAT
PERFORMING
A
SEQUENCE
OF
N
APPEND
OPERATIONS
STILL
RUNS
IN
O
N
TIME
IN
THIS
CASE
C
IMPLEMENT
A
POP
METHOD
FOR
THE
DYNAMICARRAY
CLASS
GIVEN
IN
CODE
FRAG
MENT
THAT
REMOVES
THE
LAST
ELEMENT
OF
THE
ARRAY
AND
THAT
SHRINKS
THE
CAPACITY
N
OF
THE
ARRAY
BY
HALF
ANY
TIME
THE
NUMBER
OF
ELEMENTS
IN
THE
ARRAY
GOES
BELOW
N
C
PROVE
THAT
WHEN
USING
A
DYNAMIC
ARRAY
THAT
GROWS
AND
SHRINKS
AS
IN
THE
PREVIOUS
EXERCISE
THE
FOLLOWING
SERIES
OF
OPERATIONS
TAKES
O
N
TIME
N
APPEND
OPERATIONS
ON
AN
INITIALLY
EMPTY
ARRAY
FOLLOWED
BY
N
POP
OPER
ATIONS
CHAPTER
ARRAY
BASED
SEQUENCES
C
GIVE
A
FORMAL
PROOF
THAT
ANY
SEQUENCE
OF
N
APPEND
OR
POP
OPERATIONS
ON
AN
INITIALLY
EMPTY
DYNAMIC
ARRAY
TAKES
O
N
TIME
IF
USING
THE
STRATEGY
DESCRIBED
IN
EXERCISE
C
C
CONSIDER
A
VARIANT
OF
EXERCISE
C
IN
WHICH
AN
ARRAY
OF
CAPACITY
N
IS
RESIZED
TO
CAPACITY
PRECISELY
THAT
OF
THE
NUMBER
OF
ELEMENTS
ANY
TIME
THE
NUMBER
OF
ELEMENTS
IN
THE
ARRAY
GOES
STRICTLY
BELOW
N
GIVE
A
FORMAL
PROOF
THAT
ANY
SEQUENCE
OF
N
APPEND
OR
POP
OPERATIONS
ON
AN
INITIALLY
EMPTY
DYNAMIC
ARRAY
TAKES
O
N
TIME
C
CONSIDER
A
VARIANT
OF
EXERCISE
C
IN
WHICH
AN
ARRAY
OF
CAPACITY
N
IS
RESIZED
TO
CAPACITY
PRECISELY
THAT
OF
THE
NUMBER
OF
ELEMENTS
ANY
TIME
THE
NUMBER
OF
ELEMENTS
IN
THE
ARRAY
GOES
STRICTLY
BELOW
N
SHOW
THAT
THERE
EXISTS
A
SEQUENCE
OF
N
OPERATIONS
THAT
REQUIRES
TIME
TO
EXECUTE
C
IN
SECTION
WE
DESCRIBED
FOUR
DIFFERENT
WAYS
TO
COMPOSE
A
LONG
STRING
REPEATED
CONCATENATION
APPENDING
TO
A
TEMPORARY
LIST
AND
THEN
JOINING
USING
LIST
COMPREHENSION
WITH
JOIN
AND
USING
GENERA
TOR
COMPREHENSION
WITH
JOIN
DEVELOP
AN
EXPERIMENT
TO
TEST
THE
EFFICIENCY
OF
ALL
FOUR
OF
THESE
APPROACHES
AND
REPORT
YOUR
FINDINGS
C
DEVELOP
AN
EXPERIMENT
TO
COMPARE
THE
RELATIVE
EFFICIENCY
OF
THE
EXTEND
METHOD
OF
PYTHON
LIST
CLASS
VERSUS
USING
REPEATED
CALLS
TO
APPEND
TO
ACCOMPLISH
THE
EQUIVALENT
TASK
C
BASED
ON
THE
DISCUSSION
OF
PAGE
DEVELOP
AN
EXPERIMENT
TO
COMPARE
THE
EFFICIENCY
OF
PYTHON
LIST
COMPREHENSION
SYNTAX
VERSUS
THE
CONSTRUC
TION
OF
A
LIST
BY
MEANS
OF
REPEATED
CALLS
TO
APPEND
C
PERFORM
EXPERIMENTS
TO
EVALUATE
THE
EFFICIENCY
OF
THE
REMOVE
METHOD
OF
PYTHON
LIST
CLASS
AS
WE
DID
FOR
INSERT
ON
PAGE
USE
KNOWN
VALUES
SO
THAT
ALL
REMOVALS
OCCUR
EITHER
AT
THE
BEGINNING
MIDDLE
OR
END
OF
THE
LIST
REPORT
YOUR
RESULTS
AKIN
TO
TABLE
C
THE
SYNTAX
DATA
REMOVE
VALUE
FOR
PYTHON
LIST
DATA
REMOVES
ONLY
THE
FIRST
OCCURRENCE
OF
ELEMENT
VALUE
FROM
THE
LIST
GIVE
AN
IMPLEMENTATION
OF
A
FUNCTION
WITH
SIGNATURE
REMOVE
ALL
DATA
VALUE
THAT
REMOVES
ALL
OCCUR
RENCES
OF
VALUE
FROM
THE
GIVEN
LIST
SUCH
THAT
THE
WORST
CASE
RUNNING
TIME
OF
THE
FUNCTION
IS
O
N
ON
A
LIST
WITH
N
ELEMENTS
NOT
THAT
IT
IS
NOT
EFFICIENT
ENOUGH
IN
GENERAL
TO
RELY
ON
REPEATED
CALLS
TO
REMOVE
C
LET
B
BE
AN
ARRAY
OF
SIZE
N
CONTAINING
INTEGERS
FROM
TO
N
INCLU
SIVE
WITH
EXACTLY
FIVE
REPEATED
DESCRIBE
A
GOOD
ALGORITHM
FOR
FINDING
THE
FIVE
INTEGERS
IN
B
THAT
ARE
REPEATED
C
GIVEN
A
PYTHON
LIST
L
OF
N
POSITIVE
INTEGERS
EACH
REPRESENTED
WITH
K
FLOG
BITS
DESCRIBE
AN
O
N
TIME
METHOD
FOR
FINDING
A
K
BIT
INTEGER
NOT
IN
L
C
ARGUE
WHY
ANY
SOLUTION
TO
THE
PREVIOUS
PROBLEM
MUST
RUN
IN
N
TIME
CHAPTER
NOTES
C
A
USEFUL
OPERATION
IN
DATABASES
IS
THE
NATURAL
JOIN
IF
WE
VIEW
A
DATABASE
AS
A
LIST
OF
ORDERED
PAIRS
OF
OBJECTS
THEN
THE
NATURAL
JOIN
OF
DATABASES
A
AND
B
IS
THE
LIST
OF
ALL
ORDERED
TRIPLES
X
Y
Z
SUCH
THAT
THE
PAIR
X
Y
IS
IN
A
AND
THE
PAIR
Y
Z
IS
IN
B
DESCRIBE
AND
ANALYZE
AN
EFFICIENT
ALGORITHM
FOR
COMPUTING
THE
NATURAL
JOIN
OF
A
LIST
A
OF
N
PAIRS
AND
A
LIST
B
OF
M
PAIRS
C
WHEN
BOB
WANTS
TO
SEND
ALICE
A
MESSAGE
M
ON
THE
INTERNET
HE
BREAKS
M
INTO
N
DATA
PACKETS
NUMBERS
THE
PACKETS
CONSECUTIVELY
AND
INJECTS
THEM
INTO
THE
NETWORK
WHEN
THE
PACKETS
ARRIVE
AT
ALICE
COMPUTER
THEY
MAY
BE
OUT
OF
ORDER
SO
ALICE
MUST
ASSEMBLE
THE
SEQUENCE
OF
N
PACKETS
IN
ORDER
BEFORE
SHE
CAN
BE
SURE
SHE
HAS
THE
ENTIRE
MESSAGE
DESCRIBE
AN
EFFICIENT
SCHEME
FOR
ALICE
TO
DO
THIS
ASSUMING
THAT
SHE
KNOWS
THE
VALUE
OF
N
WHAT
IS
THE
RUNNING
TIME
OF
THIS
ALGORITHM
C
DESCRIBE
A
WAY
TO
USE
RECURSION
TO
ADD
ALL
THE
NUMBERS
IN
AN
N
N
DATA
SET
REPRESENTED
AS
A
LIST
OF
LISTS
PROJECTS
P
WRITE
A
PYTHON
FUNCTION
THAT
TAKES
TWO
THREE
DIMENSIONAL
NUMERIC
DATA
SETS
AND
ADDS
THEM
COMPONENTWISE
P
WRITE
A
PYTHON
PROGRAM
FOR
A
MATRIX
CLASS
THAT
CAN
ADD
AND
MULTIPLY
TWO
DIMENSIONAL
ARRAYS
OF
NUMBERS
ASSUMING
THE
DIMENSIONS
AGREE
APPROPRI
ATELY
FOR
THE
OPERATION
P
WRITE
A
PROGRAM
THAT
CAN
PERFORM
THE
CAESAR
CIPHER
FOR
ENGLISH
MESSAGES
THAT
INCLUDE
BOTH
UPPER
AND
LOWERCASE
CHARACTERS
P
IMPLEMENT
A
CLASS
SUBSTITUTIONCIPHER
WITH
A
CONSTRUCTOR
THAT
TAKES
A
STRING
WITH
THE
UPPERCASE
LETTERS
IN
AN
ARBITRARY
ORDER
AND
USES
THAT
FOR
THE
FORWARD
MAPPING
FOR
ENCRYPTION
AKIN
TO
THE
SELF
FORWARD
STRING
IN
OUR
CAESARCIPHER
CLASS
OF
CODE
FRAGMENT
YOU
SHOULD
DERIVE
THE
BACKWARD
MAPPING
FROM
THE
FORWARD
VERSION
P
REDESIGN
THE
CAESARCIPHER
CLASS
AS
A
SUBCLASS
OF
THE
SUBSTITUTIONCIPHER
FROM
THE
PREVIOUS
PROBLEM
P
DESIGN
A
RANDOMCIPHER
CLASS
AS
A
SUBCLASS
OF
THE
SUBSTITUTIONCIPHER
FROM
EXERCISE
P
SO
THAT
EACH
INSTANCE
OF
THE
CLASS
RELIES
ON
A
RANDOM
PERMUTATION
OF
LETTERS
FOR
ITS
MAPPING
CHAPTER
NOTES
THE
FUNDAMENTAL
DATA
STRUCTURES
OF
ARRAYS
BELONG
TO
THE
FOLKLORE
OF
COMPUTER
SCIENCE
THEY
WERE
FIRST
CHRONICLED
IN
THE
COMPUTER
SCIENCE
LITERATURE
BY
KNUTH
IN
HIS
SEMINAL
BOOK
ON
FUNDAMENTAL
ALGORITHMS
CHAPTER
STACKS
QUEUES
AND
DEQUES
CONTENTS
STACKS
THE
STACK
ABSTRACT
DATA
TYPE
SIMPLE
ARRAY
BASED
STACK
IMPLEMENTATION
REVERSING
DATA
USING
A
STACK
MATCHING
PARENTHESES
AND
HTML
TAGS
QUEUES
THE
QUEUE
ABSTRACT
DATA
TYPE
ARRAY
BASED
QUEUE
IMPLEMENTATION
DOUBLE
ENDED
QUEUES
THE
DEQUE
ABSTRACT
DATA
TYPE
IMPLEMENTING
A
DEQUE
WITH
A
CIRCULAR
ARRAY
DEQUES
IN
THE
PYTHON
COLLECTIONS
MODULE
EXERCISES
STACKS
STACKS
A
STACK
IS
A
COLLECTION
OF
OBJECTS
THAT
ARE
INSERTED
AND
REMOVED
ACCORDING
TO
THE
LAST
IN
FIRST
OUT
LIFO
PRINCIPLE
A
USER
MAY
INSERT
OBJECTS
INTO
A
STACK
AT
ANY
TIME
BUT
MAY
ONLY
ACCESS
OR
REMOVE
THE
MOST
RECENTLY
INSERTED
OBJECT
THAT
REMAINS
AT
THE
SO
CALLED
TOP
OF
THE
STACK
THE
NAME
STACK
IS
DERIVED
FROM
THE
METAPHOR
OF
A
STACK
OF
PLATES
IN
A
SPRING
LOADED
CAFETERIA
PLATE
DISPENSER
IN
THIS
CASE
THE
FUNDAMENTAL
OPERATIONS
INVOLVE
THE
PUSHING
AND
POPPING
OF
PLATES
ON
THE
STACK
WHEN
WE
NEED
A
NEW
PLATE
FROM
THE
DISPENSER
WE
POP
THE
TOP
PLATE
OFF
THE
STACK
AND
WHEN
WE
ADD
A
PLATE
WE
PUSH
IT
DOWN
ON
THE
STACK
TO
BECOME
THE
NEW
TOP
PLATE
PERHAPS
AN
EVEN
MORE
AMUSING
EXAMPLE
IS
A
PEZ
CANDY
DISPENSER
WHICH
STORES
MINT
CANDIES
IN
A
SPRING
LOADED
CONTAINER
THAT
POPS
OUT
THE
TOPMOST
CANDY
IN
THE
STACK
WHEN
THE
TOP
OF
THE
DISPENSER
IS
LIFTED
SEE
FIGURE
STACKS
ARE
A
FUNDAMENTAL
DATA
STRUCTURE
THEY
ARE
USED
IN
MANY
APPLICATIONS
INCLUDING
THE
FOLLOWING
EXAMPLE
INTERNET
WEB
BROWSERS
STORE
THE
ADDRESSES
OF
RECENTLY
VISITED
SITES
IN
A
STACK
EACH
TIME
A
USER
VISITS
A
NEW
SITE
THAT
SITE
ADDRESS
IS
PUSHED
ONTO
THE
STACK
OF
ADDRESSES
THE
BROWSER
THEN
ALLOWS
THE
USER
TO
POP
BACK
TO
PREVIOUSLY
VISITED
SITES
USING
THE
BACK
BUTTON
EXAMPLE
TEXT
EDITORS
USUALLY
PROVIDE
AN
UNDO
MECHANISM
THAT
CANCELS
RE
CENT
EDITING
OPERATIONS
AND
REVERTS
TO
FORMER
STATES
OF
A
DOCUMENT
THIS
UNDO
OPER
ATION
CAN
BE
ACCOMPLISHED
BY
KEEPING
TEXT
CHANGES
IN
A
STACK
FIGURE
A
SCHEMATIC
DRAWING
OF
A
PEZ
DISPENSER
A
PHYSICAL
IMPLEMENTATION
OF
THE
STACK
ADT
PEZ
IS
A
REGISTERED
TRADEMARK
OF
PEZ
CANDY
INC
CHAPTER
STACKS
QUEUES
AND
DEQUES
THE
STACK
ABSTRACT
DATA
TYPE
STACKS
ARE
THE
SIMPLEST
OF
ALL
DATA
STRUCTURES
YET
THEY
ARE
ALSO
AMONG
THE
MOST
IMPORTANT
THEY
ARE
USED
IN
A
HOST
OF
DIFFERENT
APPLICATIONS
AND
AS
A
TOOL
FOR
MANY
MORE
SOPHISTICATED
DATA
STRUCTURES
AND
ALGORITHMS
FORMALLY
A
STACK
IS
AN
ABSTRACT
DATA
TYPE
ADT
SUCH
THAT
AN
INSTANCE
SUPPORTS
THE
FOLLOWING
TWO
METHODS
PUSH
E
ADD
ELEMENT
E
TO
THE
TOP
OF
STACK
POP
REMOVE
AND
RETURN
THE
TOP
ELEMENT
FROM
THE
STACK
AN
ERROR
OCCURS
IF
THE
STACK
IS
EMPTY
ADDITIONALLY
LET
US
DEFINE
THE
FOLLOWING
ACCESSOR
METHODS
FOR
CONVENIENCE
TOP
RETURN
A
REFERENCE
TO
THE
TOP
ELEMENT
OF
STACK
WITHOUT
REMOVING
IT
AN
ERROR
OCCURS
IF
THE
STACK
IS
EMPTY
IS
EMPTY
RETURN
TRUE
IF
STACK
DOES
NOT
CONTAIN
ANY
ELEMENTS
LEN
RETURN
THE
NUMBER
OF
ELEMENTS
IN
STACK
IN
PYTHON
WE
IMPLEMENT
THIS
WITH
THE
SPECIAL
METHOD
LEN
BY
CONVENTION
WE
ASSUME
THAT
A
NEWLY
CREATED
STACK
IS
EMPTY
AND
THAT
THERE
IS
NO
A
PRIORI
BOUND
ON
THE
CAPACITY
OF
THE
STACK
ELEMENTS
ADDED
TO
THE
STACK
CAN
HAVE
ARBITRARY
TYPE
EXAMPLE
THE
FOLLOWING
TABLE
SHOWS
A
SERIES
OF
STACK
OPERATIONS
AND
THEIR
EFFECTS
ON
AN
INITIALLY
EMPTY
STACK
OF
INTEGERS
OPERATION
RETURN
VALUE
STACK
CONTENTS
PUSH
PUSH
LEN
POP
IS
EMPTY
FALSE
POP
IS
EMPTY
TRUE
POP
ERROR
PUSH
PUSH
TOP
PUSH
LEN
POP
PUSH
PUSH
POP
STACKS
SIMPLE
ARRAY
BASED
STACK
IMPLEMENTATION
WE
CAN
IMPLEMENT
A
STACK
QUITE
EASILY
BY
STORING
ITS
ELEMENTS
IN
A
PYTHON
LIST
THE
LIST
CLASS
ALREADY
SUPPORTS
ADDING
AN
ELEMENT
TO
THE
END
WITH
THE
APPEND
METHOD
AND
REMOVING
THE
LAST
ELEMENT
WITH
THE
POP
METHOD
SO
IT
IS
NATURAL
TO
ALIGN
THE
TOP
OF
THE
STACK
AT
THE
END
OF
THE
LIST
AS
SHOWN
IN
FIGURE
TOP
FIGURE
IMPLEMENTING
A
STACK
WITH
A
PYTHON
LIST
STORING
THE
TOP
ELEMENT
IN
THE
RIGHTMOST
CELL
ALTHOUGH
A
PROGRAMMER
COULD
DIRECTLY
USE
THE
LIST
CLASS
IN
PLACE
OF
A
FORMAL
STACK
CLASS
LISTS
ALSO
INCLUDE
BEHAVIORS
E
G
ADDING
OR
REMOVING
ELEMENTS
FROM
ARBITRARY
POSITIONS
THAT
WOULD
BREAK
THE
ABSTRACTION
THAT
THE
STACK
ADT
REPRESENTS
ALSO
THE
TERMINOLOGY
USED
BY
THE
LIST
CLASS
DOES
NOT
PRECISELY
ALIGN
WITH
TRADITIONAL
NOMENCLATURE
FOR
A
STACK
ADT
IN
PARTICULAR
THE
DISTINCTION
BETWEEN
APPEND
AND
PUSH
INSTEAD
WE
DEMONSTRATE
HOW
TO
USE
A
LIST
FOR
INTERNAL
STORAGE
WHILE
PROVIDING
A
PUBLIC
INTERFACE
CONSISTENT
WITH
A
STACK
THE
ADAPTER
PATTERN
THE
ADAPTER
DESIGN
PATTERN
APPLIES
TO
ANY
CONTEXT
WHERE
WE
EFFECTIVELY
WANT
TO
MODIFY
AN
EXISTING
CLASS
SO
THAT
ITS
METHODS
MATCH
THOSE
OF
A
RELATED
BUT
DIFFERENT
CLASS
OR
INTERFACE
ONE
GENERAL
WAY
TO
APPLY
THE
ADAPTER
PATTERN
IS
TO
DEFINE
A
NEW
CLASS
IN
SUCH
A
WAY
THAT
IT
CONTAINS
AN
INSTANCE
OF
THE
EXISTING
CLASS
AS
A
HIDDEN
FIELD
AND
THEN
TO
IMPLEMENT
EACH
METHOD
OF
THE
NEW
CLASS
USING
METHODS
OF
THIS
HIDDEN
INSTANCE
VARIABLE
BY
APPLYING
THE
ADAPTER
PATTERN
IN
THIS
WAY
WE
HAVE
CREATED
A
NEW
CLASS
THAT
PERFORMS
SOME
OF
THE
SAME
FUNCTIONS
AS
AN
EXISTING
CLASS
BUT
REPACKAGED
IN
A
MORE
CONVENIENT
WAY
IN
THE
CONTEXT
OF
THE
STACK
ADT
WE
CAN
ADAPT
PYTHON
LIST
CLASS
USING
THE
CORRESPONDENCES
SHOWN
IN
TABLE
TABLE
REALIZATION
OF
A
STACK
AS
AN
ADAPTATION
OF
A
PYTHON
LIST
L
CHAPTER
STACKS
QUEUES
AND
DEQUES
IMPLEMENTING
A
STACK
USING
A
PYTHON
LIST
WE
USE
THE
ADAPTER
DESIGN
PATTERN
TO
DEFINE
AN
ARRAYSTACK
CLASS
THAT
USES
AN
UN
DERLYING
PYTHON
LIST
FOR
STORAGE
WE
CHOOSE
THE
NAME
ARRAYSTACK
TO
EMPHASIZE
THAT
THE
UNDERLYING
STORAGE
IS
INHERENTLY
ARRAY
BASED
ONE
QUESTION
THAT
REMAINS
IS
WHAT
OUR
CODE
SHOULD
DO
IF
A
USER
CALLS
POP
OR
TOP
WHEN
THE
STACK
IS
EMPTY
OUR
ADT
SUGGESTS
THAT
AN
ERROR
OCCURS
BUT
WE
MUST
DECIDE
WHAT
TYPE
OF
ERROR
WHEN
POP
IS
CALLED
ON
AN
EMPTY
PYTHON
LIST
IT
FORMALLY
RAISES
AN
INDEXERROR
AS
LISTS
ARE
INDEX
BASED
SEQUENCES
THAT
CHOICE
DOES
NOT
SEEM
APPROPRIATE
FOR
A
STACK
SINCE
THERE
IS
NO
ASSUMPTION
OF
INDICES
INSTEAD
WE
CAN
DEFINE
A
NEW
EXCEPTION
CLASS
THAT
IS
MORE
APPROPRIATE
CODE
FRAGMENT
DEFINES
SUCH
AN
EMPTY
CLASS
AS
A
TRIVIAL
SUBCLASS
OF
THE
PYTHON
EXCEPTION
CLASS
CLASS
EMPTY
EXCEPTION
ERROR
ATTEMPTING
TO
ACCESS
AN
ELEMENT
FROM
AN
EMPTY
CONTAINER
PASS
CODE
FRAGMENT
DEFINITION
FOR
AN
EMPTY
EXCEPTION
CLASS
THE
FORMAL
DEFINITION
FOR
OUR
ARRAYSTACK
CLASS
IS
GIVEN
IN
CODE
FRAGMENT
THE
CONSTRUCTOR
ESTABLISHES
THE
MEMBER
SELF
DATA
AS
AN
INITIALLY
EMPTY
PYTHON
LIST
FOR
INTERNAL
STORAGE
THE
REST
OF
THE
PUBLIC
STACK
BEHAVIORS
ARE
IMPLEMENTED
USING
THE
CORRESPONDING
ADAPTATION
THAT
WAS
OUTLINED
IN
TABLE
EXAMPLE
USAGE
BELOW
WE
PRESENT
AN
EXAMPLE
OF
THE
USE
OF
OUR
ARRAYSTACK
CLASS
MIRRORING
THE
OPERATIONS
AT
THE
BEGINNING
OF
EXAMPLE
ON
PAGE
ARRAYSTACK
CONTENTS
PUSH
CONTENTS
PUSH
CONTENTS
PRINT
LEN
CONTENTS
OUTPUTS
PRINT
POP
CONTENTS
OUTPUTS
PRINT
IS
EMPTY
CONTENTS
OUTPUTS
FALSE
PRINT
POP
CONTENTS
OUTPUTS
PRINT
IS
EMPTY
CONTENTS
OUTPUTS
TRUE
PUSH
CONTENTS
PUSH
CONTENTS
PRINT
TOP
CONTENTS
OUTPUTS
PUSH
CONTENTS
PRINT
LEN
CONTENTS
OUTPUTS
PRINT
POP
CONTENTS
OUTPUTS
PUSH
CONTENTS
STACKS
CLASS
ARRAYSTACK
LIFO
STACK
IMPLEMENTATION
USING
A
PYTHON
LIST
AS
UNDERLYING
STORAGE
DEF
INIT
SELF
CREATE
AN
EMPTY
STACK
SELF
DATA
NONPUBLIC
LIST
INSTANCE
DEF
LEN
SELF
RETURN
THE
NUMBER
OF
ELEMENTS
IN
THE
STACK
RETURN
LEN
SELF
DATA
DEF
IS
EMPTY
SELF
RETURN
TRUE
IF
THE
STACK
IS
EMPTY
RETURN
LEN
SELF
DATA
DEF
PUSH
SELF
E
ADD
ELEMENT
E
TO
THE
TOP
OF
THE
STACK
SELF
DATA
APPEND
E
NEW
ITEM
STORED
AT
END
OF
LIST
DEF
TOP
SELF
RETURN
BUT
DO
NOT
REMOVE
THE
ELEMENT
AT
THE
TOP
OF
THE
STACK
RAISE
EMPTY
EXCEPTION
IF
THE
STACK
IS
EMPTY
IF
SELF
IS
EMPTY
RAISE
EMPTY
STACK
IS
EMPTY
RETURN
SELF
DATA
THE
LAST
ITEM
IN
THE
LIST
DEF
POP
SELF
REMOVE
AND
RETURN
THE
ELEMENT
FROM
THE
TOP
OF
THE
STACK
I
E
LIFO
RAISE
EMPTY
EXCEPTION
IF
THE
STACK
IS
EMPTY
IF
SELF
IS
EMPTY
RAISE
EMPTY
STACK
IS
EMPTY
RETURN
SELF
DATA
POP
REMOVE
LAST
ITEM
FROM
LIST
CODE
FRAGMENT
IMPLEMENTING
A
STACK
USING
A
PYTHON
LIST
AS
STORAGE
CHAPTER
STACKS
QUEUES
AND
DEQUES
ANALYZING
THE
ARRAY
BASED
STACK
IMPLEMENTATION
TABLE
SHOWS
THE
RUNNING
TIMES
FOR
OUR
ARRAYSTACK
METHODS
THE
ANALYSIS
DI
RECTLY
MIRRORS
THE
ANALYSIS
OF
THE
LIST
CLASS
GIVEN
IN
SECTION
THE
IMPLEMENTA
TIONS
FOR
TOP
IS
EMPTY
AND
LEN
USE
CONSTANT
TIME
IN
THE
WORST
CASE
THE
O
TIME
FOR
PUSH
AND
POP
ARE
AMORTIZED
BOUNDS
SEE
SECTION
A
TYPICAL
CALL
TO
EITHER
OF
THESE
METHODS
USES
CONSTANT
TIME
BUT
THERE
IS
OCCASIONALLY
AN
O
N
TIME
WORST
CASE
WHERE
N
IS
THE
CURRENT
NUMBER
OF
ELEMENTS
IN
THE
STACK
WHEN
AN
OPERATION
CAUSES
THE
LIST
TO
RESIZE
ITS
INTERNAL
ARRAY
THE
SPACE
USAGE
FOR
A
STACK
IS
O
N
AMORTIZED
TABLE
PERFORMANCE
OF
OUR
ARRAY
BASED
STACK
IMPLEMENTATION
THE
BOUNDS
FOR
PUSH
AND
POP
ARE
AMORTIZED
DUE
TO
SIMILAR
BOUNDS
FOR
THE
LIST
CLASS
THE
SPACE
USAGE
IS
O
N
WHERE
N
IS
THE
CURRENT
NUMBER
OF
ELEMENTS
IN
THE
STACK
AVOIDING
AMORTIZATION
BY
RESERVING
CAPACITY
IN
SOME
CONTEXTS
THERE
MAY
BE
ADDITIONAL
KNOWLEDGE
THAT
SUGGESTS
A
MAXIMUM
SIZE
THAT
A
STACK
WILL
REACH
OUR
IMPLEMENTATION
OF
ARRAYSTACK
FROM
CODE
FRAGMENT
BEGINS
WITH
AN
EMPTY
LIST
AND
EXPANDS
AS
NEEDED
IN
THE
ANALYSIS
OF
LISTS
FROM
SECTION
WE
EMPHASIZED
THAT
IT
IS
MORE
EFFICIENT
IN
PRACTICE
TO
CONSTRUCT
A
LIST
WITH
INITIAL
LENGTH
N
THAN
IT
IS
TO
START
WITH
AN
EMPTY
LIST
AND
APPEND
N
ITEMS
EVEN
THOUGH
BOTH
APPROACHES
RUN
IN
O
N
TIME
AS
AN
ALTERNATE
MODEL
FOR
A
STACK
WE
MIGHT
WISH
FOR
THE
CONSTRUCTOR
TO
ACCEPT
A
PARAMETER
SPECIFYING
THE
MAXIMUM
CAPACITY
OF
A
STACK
AND
TO
INITIALIZE
THE
DATA
MEMBER
TO
A
LIST
OF
THAT
LENGTH
IMPLEMENTING
SUCH
A
MODEL
REQUIRES
SIGNIFICANT
CHANGES
RELATIVE
TO
CODE
FRAGMENT
THE
SIZE
OF
THE
STACK
WOULD
NO
LONGER
BE
SYNONYMOUS
WITH
THE
LENGTH
OF
THE
LIST
AND
PUSHES
AND
POPS
OF
THE
STACK
WOULD
NOT
REQUIRE
CHANGING
THE
LENGTH
OF
THE
LIST
INSTEAD
WE
SUGGEST
MAINTAINING
A
SEPARATE
INTEGER
AS
AN
INSTANCE
VARIABLE
THAT
DENOTES
THE
CURRENT
NUMBER
OF
ELEMENTS
IN
THE
STACK
DETAILS
OF
SUCH
AN
IMPLEMENTATION
ARE
LEFT
AS
EXERCISE
C
STACKS
REVERSING
DATA
USING
A
STACK
AS
A
CONSEQUENCE
OF
THE
LIFO
PROTOCOL
A
STACK
CAN
BE
USED
AS
A
GENERAL
TOOL
TO
REVERSE
A
DATA
SEQUENCE
FOR
EXAMPLE
IF
THE
VALUES
AND
ARE
PUSHED
ONTO
A
STACK
IN
THAT
ORDER
THEY
WILL
BE
POPPED
FROM
THE
STACK
IN
THE
ORDER
AND
THEN
THIS
IDEA
CAN
BE
APPLIED
IN
A
VARIETY
OF
SETTINGS
FOR
EXAMPLE
WE
MIGHT
WISH
TO
PRINT
LINES
OF
A
FILE
IN
REVERSE
ORDER
IN
ORDER
TO
DISPLAY
A
DATA
SET
IN
DECREASING
ORDER
RATHER
THAN
INCREASING
ORDER
THIS
CAN
BE
ACCOMPLISHED
BY
READING
EACH
LINE
AND
PUSHING
IT
ONTO
A
STACK
AND
THEN
WRITING
THE
LINES
IN
THE
ORDER
THEY
ARE
POPPED
AN
IMPLEMENTATION
OF
SUCH
A
PROCESS
IS
GIVEN
IN
CODE
FRAGMENT
DEF
REVERSE
FILE
FILENAME
OVERWRITE
GIVEN
FILE
WITH
ITS
CONTENTS
LINE
BY
LINE
REVERSED
ARRAYSTACK
ORIGINAL
OPEN
FILENAME
FOR
LINE
IN
ORIGINAL
PUSH
LINE
RSTRIP
N
WE
WILL
RE
INSERT
NEWLINES
WHEN
WRITING
ORIGINAL
CLOSE
NOW
WE
OVERWRITE
WITH
CONTENTS
IN
LIFO
ORDER
OUTPUT
OPEN
FILENAME
W
REOPENING
FILE
OVERWRITES
ORIGINAL
WHILE
NOT
IS
EMPTY
OUTPUT
WRITE
POP
N
RE
INSERT
NEWLINE
CHARACTERS
OUTPUT
CLOSE
CODE
FRAGMENT
A
FUNCTION
THAT
REVERSES
THE
ORDER
OF
LINES
IN
A
FILE
ONE
TECHNICAL
DETAIL
WORTH
NOTING
IS
THAT
WE
INTENTIONALLY
STRIP
TRAILING
NEWLINES
FROM
LINES
AS
THEY
ARE
READ
AND
THEN
RE
INSERT
NEWLINES
AFTER
EACH
LINE
WHEN
WRITING
THE
RESULTING
FILE
OUR
REASON
FOR
DOING
THIS
IS
TO
HANDLE
A
SPECIAL
CASE
IN
WHICH
THE
ORIGINAL
FILE
DOES
NOT
HAVE
A
TRAILING
NEWLINE
FOR
THE
FINAL
LINE
IF
WE
EXACTLY
ECHOED
THE
LINES
READ
FROM
THE
FILE
IN
REVERSE
ORDER
THEN
THE
ORIGINAL
LAST
LINE
WOULD
BE
FOL
LOWED
WITHOUT
NEWLINE
BY
THE
ORIGINAL
SECOND
TO
LAST
LINE
IN
OUR
IMPLEMENTATION
WE
ENSURE
THAT
THERE
WILL
BE
A
SEPARATING
NEWLINE
IN
THE
RESULT
THE
IDEA
OF
USING
A
STACK
TO
REVERSE
A
DATA
SET
CAN
BE
APPLIED
TO
OTHER
TYPES
OF
SEQUENCES
FOR
EXAMPLE
EXERCISE
R
EXPLORES
THE
USE
OF
A
STACK
TO
PROVIDE
YET
ANOTHER
SOLUTION
FOR
REVERSING
THE
CONTENTS
OF
A
PYTHON
LIST
A
RECURSIVE
SOLUTION
FOR
THIS
GOAL
WAS
DISCUSSED
IN
SECTION
A
MORE
CHALLENGING
TASK
IS
TO
REVERSE
THE
ORDER
IN
WHICH
ELEMENTS
ARE
STORED
WITHIN
A
STACK
IF
WE
WERE
TO
MOVE
THEM
FROM
ONE
STACK
TO
ANOTHER
THEY
WOULD
BE
REVERSED
BUT
IF
WE
WERE
TO
THEN
REPLACE
THEM
INTO
THE
ORIGINAL
STACK
THEY
WOULD
BE
REVERSED
AGAIN
THEREBY
REVERTING
TO
THEIR
ORIGINAL
ORDER
EXERCISE
C
EXPLORES
A
SOLUTION
FOR
THIS
TASK
CHAPTER
STACKS
QUEUES
AND
DEQUES
MATCHING
PARENTHESES
AND
HTML
TAGS
IN
THIS
SUBSECTION
WE
EXPLORE
TWO
RELATED
APPLICATIONS
OF
STACKS
BOTH
OF
WHICH
INVOLVE
TESTING
FOR
PAIRS
OF
MATCHING
DELIMITERS
IN
OUR
FIRST
APPLICATION
WE
CONSIDER
ARITHMETIC
EXPRESSIONS
THAT
MAY
CONTAIN
VARIOUS
PAIRS
OF
GROUPING
SYMBOLS
SUCH
AS
PARENTHESES
AND
BRACES
AND
BRACKETS
AND
EACH
OPENING
SYMBOL
MUST
MATCH
ITS
CORRESPONDING
CLOSING
SYMBOL
FOR
EXAMPLE
A
LEFT
BRACKET
MUST
MATCH
A
CORRESPONDING
RIGHT
BRACKET
AS
IN
THE
EXPRESSION
X
Y
Z
THE
FOLLOWING
EXAMPLES
FURTHER
ILLUSTRATE
THIS
CONCEPT
CORRECT
CORRECT
INCORRECT
INCORRECT
INCORRECT
WE
LEAVE
THE
PRECISE
DEFINITION
OF
A
MATCHING
GROUP
OF
SYMBOLS
TO
EXERCISE
R
AN
ALGORITHM
FOR
MATCHING
DELIMITERS
AN
IMPORTANT
TASK
WHEN
PROCESSING
ARITHMETIC
EXPRESSIONS
IS
TO
MAKE
SURE
THEIR
DELIMITING
SYMBOLS
MATCH
UP
CORRECTLY
CODE
FRAGMENT
PRESENTS
A
PYTHON
IM
PLEMENTATION
OF
SUCH
AN
ALGORITHM
A
DISCUSSION
OF
THE
CODE
FOLLOWS
DEF
IS
MATCHED
EXPR
RETURN
TRUE
IF
ALL
DELIMITERS
ARE
PROPERLY
MATCH
FALSE
OTHERWISE
LEFTY
OPENING
DELIMITERS
RIGHTY
RESPECTIVE
CLOSING
DELIMS
ARRAYSTACK
FOR
C
IN
EXPR
IF
C
IN
LEFTY
PUSH
C
PUSH
LEFT
DELIMITER
ON
STACK
ELIF
C
IN
RIGHTY
IF
IS
EMPTY
RETURN
FALSE
NOTHING
TO
MATCH
WITH
IF
RIGHTY
INDEX
C
LEFTY
INDEX
POP
RETURN
FALSE
MISMATCHED
RETURN
IS
EMPTY
WERE
ALL
SYMBOLS
MATCHED
CODE
FRAGMENT
FUNCTION
FOR
MATCHING
DELIMITERS
IN
AN
ARITHMETIC
EXPRESSION
STACKS
WE
ASSUME
THE
INPUT
IS
A
SEQUENCE
OF
CHARACTERS
SUCH
AS
X
Y
Z
WE
PERFORM
A
LEFT
TO
RIGHT
SCAN
OF
THE
ORIGINAL
SEQUENCE
USING
A
STACK
TO
FACILITATE
THE
MATCHING
OF
GROUPING
SYMBOLS
EACH
TIME
WE
ENCOUNTER
AN
OPENING
SYMBOL
WE
PUSH
THAT
SYMBOL
ONTO
AND
EACH
TIME
WE
ENCOUNTER
A
CLOSING
SYMBOL
WE
POP
A
SYMBOL
FROM
THE
STACK
ASSUMING
IS
NOT
EMPTY
AND
CHECK
THAT
THESE
TWO
SYMBOLS
FORM
A
VALID
PAIR
IF
WE
REACH
THE
END
OF
THE
EXPRESSION
AND
THE
STACK
IS
EMPTY
THEN
THE
ORIGINAL
EXPRESSION
WAS
PROPERLY
MATCHED
OTHERWISE
THERE
MUST
BE
AN
OPENING
DELIMITER
ON
THE
STACK
WITHOUT
A
MATCHING
SYMBOL
IF
THE
LENGTH
OF
THE
ORIGINAL
EXPRESSION
IS
N
THE
ALGORITHM
WILL
MAKE
AT
MOST
N
CALLS
TO
PUSH
AND
N
CALLS
TO
POP
THOSE
CALLS
RUN
IN
A
TOTAL
OF
O
N
TIME
EVEN
CON
SIDERING
THE
AMORTIZED
NATURE
OF
THE
O
TIME
BOUND
FOR
THOSE
METHODS
GIVEN
THAT
OUR
SELECTION
OF
POSSIBLE
DELIMITERS
HAS
CONSTANT
SIZE
AUXILIARY
TESTS
SUCH
AS
C
IN
LEFTY
AND
RIGHTY
INDEX
C
EACH
RUN
IN
O
TIME
COMBINING
THESE
OPERATIONS
THE
MATCHING
ALGORITHM
ON
A
SEQUENCE
OF
LENGTH
N
RUNS
IN
O
N
TIME
MATCHING
TAGS
IN
A
MARKUP
LANGUAGE
ANOTHER
APPLICATION
OF
MATCHING
DELIMITERS
IS
IN
THE
VALIDATION
OF
MARKUP
LANGUAGES
SUCH
AS
HTML
OR
XML
HTML
IS
THE
STANDARD
FORMAT
FOR
HYPERLINKED
DOCUMENTS
ON
THE
INTERNET
AND
XML
IS
AN
EXTENSIBLE
MARKUP
LANGUAGE
USED
FOR
A
VARIETY
OF
STRUCTURED
DATA
SETS
WE
SHOW
A
SAMPLE
HTML
DOCUMENT
AND
A
POSSIBLE
RENDERING
IN
FIGURE
BODY
CENTER
THE
LITTLE
BOAT
CENTER
P
THE
STORM
TOSSED
THE
LITTLE
BOAT
LIKE
A
CHEAP
SNEAKER
IN
AN
OLD
WASHING
MACHINE
THE
THREE
DRUNKEN
FISHERMEN
WERE
USED
TO
SUCH
TREATMENT
OF
COURSE
BUT
NOT
THE
TREE
SALESMAN
WHO
EVEN
AS
A
STOWAWAY
NOW
FELT
THAT
HE
HAD
OVERPAID
FOR
THE
VOYAGE
P
OL
LI
WILL
THE
SALESMAN
DIE
LI
LI
WHAT
COLOR
IS
THE
BOAT
LI
LI
AND
WHAT
ABOUT
NAOMI
LI
OL
BODY
THE
LITTLE
BOAT
THE
STORM
TOSSED
THE
LITTLE
BOAT
LIKE
A
CHEAP
SNEAKER
IN
AN
OLD
WASHING
MACHINE
THE
THREE
DRUNKEN
FISHERMEN
WERE
USED
TO
SUCH
TREATMENT
OF
COURSE
BUT
NOT
THE
TREE
SALESMAN
WHO
EVEN
AS
A
STOWAWAY
NOW
FELT
THAT
HE
HAD
OVERPAID
FOR
THE
VOYAGE
WILL
THE
SALESMAN
DIE
WHAT
COLOR
IS
THE
BOAT
AND
WHAT
ABOUT
NAOMI
A
B
FIGURE
ILLUSTRATING
HTML
TAGS
A
AN
HTML
DOCUMENT
B
ITS
RENDERING
CHAPTER
STACKS
QUEUES
AND
DEQUES
IN
AN
HTML
DOCUMENT
PORTIONS
OF
TEXT
ARE
DELIMITED
BY
HTML
TAGS
A
SIMPLE
OPENING
HTML
TAG
HAS
THE
FORM
NAME
AND
THE
CORRESPONDING
CLOSING
TAG
HAS
THE
FORM
NAME
FOR
EXAMPLE
WE
SEE
THE
BODY
TAG
ON
THE
FIRST
LINE
OF
FIGURE
A
AND
THE
MATCHING
BODY
TAG
AT
THE
CLOSE
OF
THAT
DOCUMENT
OTHER
COMMONLY
USED
HTML
TAGS
THAT
ARE
USED
IN
THIS
EXAMPLE
INCLUDE
BODY
DOCUMENT
BODY
SECTION
HEADER
CENTER
CENTER
JUSTIFY
P
PARAGRAPH
OL
NUMBERED
ORDERED
LIST
LI
LIST
ITEM
IDEALLY
AN
HTML
DOCUMENT
SHOULD
HAVE
MATCHING
TAGS
ALTHOUGH
MOST
BROWSERS
TOLERATE
A
CERTAIN
NUMBER
OF
MISMATCHING
TAGS
IN
CODE
FRAGMENT
WE
GIVE
A
PYTHON
FUNCTION
THAT
MATCHES
TAGS
IN
A
STRING
REPRESENTING
AN
HTML
DOCUMENT
WE
MAKE
A
LEFT
TO
RIGHT
PASS
THROUGH
THE
RAW
STRING
USING
INDEX
J
TO
TRACK
OUR
PROGRESS
AND
THE
FIND
METHOD
OF
THE
STR
CLASS
TO
LOCATE
THE
AND
CHARACTERS
THAT
DEFINE
THE
TAGS
OPENING
TAGS
ARE
PUSHED
ONTO
THE
STACK
AND
MATCHED
AGAINST
CLOSING
TAGS
AS
THEY
ARE
POPPED
FROM
THE
STACK
JUST
AS
WE
DID
WHEN
MATCHING
DELIMITERS
IN
CODE
FRAGMENT
BY
SIMILAR
ANALYSIS
THIS
ALGORITHM
RUNS
IN
O
N
TIME
WHERE
N
IS
THE
NUMBER
OF
CHARACTERS
IN
THE
RAW
HTML
SOURCE
DEF
IS
MATCHED
HTML
RAW
RETURN
TRUE
IF
ALL
HTML
TAGS
ARE
PROPERLY
MATCH
FALSE
OTHERWISE
ARRAYSTACK
J
RAW
FIND
FIND
FIRST
CHARACTER
IF
ANY
WHILE
J
K
RAW
FIND
J
FIND
NEXT
CHARACTER
IF
K
RETURN
FALSE
INVALID
TAG
TAG
RAW
J
K
STRIP
AWAY
IF
NOT
TAG
STARTSWITH
THIS
IS
OPENING
TAG
PUSH
TAG
ELSE
THIS
IS
CLOSING
TAG
IF
IS
EMPTY
RETURN
FALSE
NOTHING
TO
MATCH
WITH
IF
TAG
POP
RETURN
FALSE
MISMATCHED
DELIMITER
J
RAW
FIND
K
FIND
NEXT
CHARACTER
IF
ANY
RETURN
IS
EMPTY
WERE
ALL
OPENING
TAGS
MATCHED
CODE
FRAGMENT
FUNCTION
FOR
TESTING
IF
AN
HTML
DOCUMENT
HAS
MATCHING
TAGS
QUEUES
QUEUES
ANOTHER
FUNDAMENTAL
DATA
STRUCTURE
IS
THE
QUEUE
IT
IS
A
CLOSE
COUSIN
OF
THE
STACK
AS
A
QUEUE
IS
A
COLLECTION
OF
OBJECTS
THAT
ARE
INSERTED
AND
REMOVED
ACCORDING
TO
THE
FIRST
IN
FIRST
OUT
FIFO
PRINCIPLE
THAT
IS
ELEMENTS
CAN
BE
INSERTED
AT
ANY
TIME
BUT
ONLY
THE
ELEMENT
THAT
HAS
BEEN
IN
THE
QUEUE
THE
LONGEST
CAN
BE
NEXT
REMOVED
WE
USUALLY
SAY
THAT
ELEMENTS
ENTER
A
QUEUE
AT
THE
BACK
AND
ARE
REMOVED
FROM
THE
FRONT
A
METAPHOR
FOR
THIS
TERMINOLOGY
IS
A
LINE
OF
PEOPLE
WAITING
TO
GET
ON
AN
AMUSEMENT
PARK
RIDE
PEOPLE
WAITING
FOR
SUCH
A
RIDE
ENTER
AT
THE
BACK
OF
THE
LINE
AND
GET
ON
THE
RIDE
FROM
THE
FRONT
OF
THE
LINE
THERE
ARE
MANY
OTHER
APPLICATIONS
OF
QUEUES
SEE
FIGURE
STORES
THEATERS
RESERVATION
CENTERS
AND
OTHER
SIMILAR
SERVICES
TYPICALLY
PROCESS
CUSTOMER
REQUESTS
ACCORDING
TO
THE
FIFO
PRINCIPLE
A
QUEUE
WOULD
THEREFORE
BE
A
LOGICAL
CHOICE
FOR
A
DATA
STRUCTURE
TO
HANDLE
CALLS
TO
A
CUSTOMER
SERVICE
CENTER
OR
A
WAIT
LIST
AT
A
RESTAURANT
FIFO
QUEUES
ARE
ALSO
USED
BY
MANY
COMPUTING
DEVICES
SUCH
AS
A
NETWORKED
PRINTER
OR
A
WEB
SERVER
RESPONDING
TO
REQUESTS
A
A
FIGURE
REAL
WORLD
EXAMPLES
OF
A
FIRST
IN
FIRST
OUT
QUEUE
A
PEOPLE
WAITING
IN
LINE
TO
PURCHASE
TICKETS
B
PHONE
CALLS
BEING
ROUTED
TO
A
CUSTOMER
SERVICE
CENTER
CHAPTER
STACKS
QUEUES
AND
DEQUES
THE
QUEUE
ABSTRACT
DATA
TYPE
FORMALLY
THE
QUEUE
ABSTRACT
DATA
TYPE
DEFINES
A
COLLECTION
THAT
KEEPS
OBJECTS
IN
A
SEQUENCE
WHERE
ELEMENT
ACCESS
AND
DELETION
ARE
RESTRICTED
TO
THE
FIRST
ELEMENT
IN
THE
QUEUE
AND
ELEMENT
INSERTION
IS
RESTRICTED
TO
THE
BACK
OF
THE
SEQUENCE
THIS
RESTRICTION
ENFORCES
THE
RULE
THAT
ITEMS
ARE
INSERTED
AND
DELETED
IN
A
QUEUE
ACCORD
ING
TO
THE
FIRST
IN
FIRST
OUT
FIFO
PRINCIPLE
THE
QUEUE
ABSTRACT
DATA
TYPE
ADT
SUPPORTS
THE
FOLLOWING
TWO
FUNDAMENTAL
METHODS
FOR
A
QUEUE
Q
Q
ENQUEUE
E
ADD
ELEMENT
E
TO
THE
BACK
OF
QUEUE
Q
Q
DEQUEUE
REMOVE
AND
RETURN
THE
FIRST
ELEMENT
FROM
QUEUE
Q
AN
ERROR
OCCURS
IF
THE
QUEUE
IS
EMPTY
THE
QUEUE
ADT
ALSO
INCLUDES
THE
FOLLOWING
SUPPORTING
METHODS
WITH
FIRST
BEING
ANALOGOUS
TO
THE
STACK
TOP
METHOD
Q
FIRST
RETURN
A
REFERENCE
TO
THE
ELEMENT
AT
THE
FRONT
OF
QUEUE
Q
WITHOUT
REMOVING
IT
AN
ERROR
OCCURS
IF
THE
QUEUE
IS
EMPTY
Q
IS
EMPTY
RETURN
TRUE
IF
QUEUE
Q
DOES
NOT
CONTAIN
ANY
ELEMENTS
LEN
Q
RETURN
THE
NUMBER
OF
ELEMENTS
IN
QUEUE
Q
IN
PYTHON
WE
IMPLEMENT
THIS
WITH
THE
SPECIAL
METHOD
LEN
BY
CONVENTION
WE
ASSUME
THAT
A
NEWLY
CREATED
QUEUE
IS
EMPTY
AND
THAT
THERE
IS
NO
A
PRIORI
BOUND
ON
THE
CAPACITY
OF
THE
QUEUE
ELEMENTS
ADDED
TO
THE
QUEUE
CAN
HAVE
ARBITRARY
TYPE
EXAMPLE
THE
FOLLOWING
TABLE
SHOWS
A
SERIES
OF
QUEUE
OPERATIONS
AND
THEIR
EFFECTS
ON
AN
INITIALLY
EMPTY
QUEUE
Q
OF
INTEGERS
QUEUES
ARRAY
BASED
QUEUE
IMPLEMENTATION
FOR
THE
STACK
ADT
WE
CREATED
A
VERY
SIMPLE
ADAPTER
CLASS
THAT
USED
A
PYTHON
LIST
AS
THE
UNDERLYING
STORAGE
IT
MAY
BE
VERY
TEMPTING
TO
USE
A
SIMILAR
APPROACH
FOR
SUPPORTING
THE
QUEUE
ADT
WE
COULD
ENQUEUE
ELEMENT
E
BY
CALLING
APPEND
E
TO
ADD
IT
TO
THE
END
OF
THE
LIST
WE
COULD
USE
THE
SYNTAX
POP
AS
OPPOSED
TO
POP
TO
INTENTIONALLY
REMOVE
THE
FIRST
ELEMENT
FROM
THE
LIST
WHEN
DEQUEUING
AS
EASY
AS
THIS
WOULD
BE
TO
IMPLEMENT
IT
IS
TRAGICALLY
INEFFICIENT
AS
WE
DIS
CUSSED
IN
SECTION
WHEN
POP
IS
CALLED
ON
A
LIST
WITH
A
NON
DEFAULT
INDEX
A
LOOP
IS
EXECUTED
TO
SHIFT
ALL
ELEMENTS
BEYOND
THE
SPECIFIED
INDEX
TO
THE
LEFT
SO
AS
TO
FILL
THE
HOLE
IN
THE
SEQUENCE
CAUSED
BY
THE
POP
THEREFORE
A
CALL
TO
POP
ALWAYS
CAUSES
THE
WORST
CASE
BEHAVIOR
OF
N
TIME
WE
CAN
IMPROVE
ON
THE
ABOVE
STRATEGY
BY
AVOIDING
THE
CALL
TO
POP
ENTIRELY
WE
CAN
REPLACE
THE
DEQUEUED
ENTRY
IN
THE
ARRAY
WITH
A
REFERENCE
TO
NONE
AND
MAIN
TAIN
AN
EXPLICIT
VARIABLE
F
TO
STORE
THE
INDEX
OF
THE
ELEMENT
THAT
IS
CURRENTLY
AT
THE
FRONT
OF
THE
QUEUE
SUCH
AN
ALGORITHM
FOR
DEQUEUE
WOULD
RUN
IN
O
TIME
AFTER
SEVERAL
DEQUEUE
OPERATIONS
THIS
APPROACH
MIGHT
LEAD
TO
THE
CONFIGURATION
PORTRAYED
IN
FIGURE
F
FIGURE
ALLOWING
THE
FRONT
OF
THE
QUEUE
TO
DRIFT
AWAY
FROM
INDEX
UNFORTUNATELY
THERE
REMAINS
A
DRAWBACK
TO
THE
REVISED
APPROACH
IN
THE
CASE
OF
A
STACK
THE
LENGTH
OF
THE
LIST
WAS
PRECISELY
EQUAL
TO
THE
SIZE
OF
THE
STACK
EVEN
IF
THE
UNDERLYING
ARRAY
FOR
THE
LIST
WAS
SLIGHTLY
LARGER
WITH
THE
QUEUE
DESIGN
THAT
WE
ARE
CONSIDERING
THE
SITUATION
IS
WORSE
WE
CAN
BUILD
A
QUEUE
THAT
HAS
RELATIVELY
FEW
ELEMENTS
YET
WHICH
ARE
STORED
IN
AN
ARBITRARILY
LARGE
LIST
THIS
OCCURS
FOR
EXAMPLE
IF
WE
REPEATEDLY
ENQUEUE
A
NEW
ELEMENT
AND
THEN
DEQUEUE
ANOTHER
ALLOWING
THE
FRONT
TO
DRIFT
RIGHTWARD
OVER
TIME
THE
SIZE
OF
THE
UNDERLYING
LIST
WOULD
GROW
TO
O
M
WHERE
M
IS
THE
TOTAL
NUMBER
OF
ENQUEUE
OPERATIONS
SINCE
THE
CREATION
OF
THE
QUEUE
RATHER
THAN
THE
CURRENT
NUMBER
OF
ELEMENTS
IN
THE
QUEUE
THIS
DESIGN
WOULD
HAVE
DETRIMENTAL
CONSEQUENCES
IN
APPLICATIONS
IN
WHICH
QUEUES
HAVE
RELATIVELY
MODEST
SIZE
BUT
WHICH
ARE
USED
FOR
LONG
PERIODS
OF
TIME
FOR
EXAMPLE
THE
WAIT
LIST
FOR
A
RESTAURANT
MIGHT
NEVER
HAVE
MORE
THAN
ENTRIES
AT
ONE
TIME
BUT
OVER
THE
COURSE
OF
A
DAY
OR
A
WEEK
THE
OVERALL
NUMBER
OF
ENTRIES
WOULD
BE
SIGNIFICANTLY
LARGER
CHAPTER
STACKS
QUEUES
AND
DEQUES
USING
AN
ARRAY
CIRCULARLY
IN
DEVELOPING
A
MORE
ROBUST
QUEUE
IMPLEMENTATION
WE
ALLOW
THE
FRONT
OF
THE
QUEUE
TO
DRIFT
RIGHTWARD
AND
WE
ALLOW
THE
CONTENTS
OF
THE
QUEUE
TO
WRAP
AROUND
THE
END
OF
AN
UNDERLYING
ARRAY
WE
ASSUME
THAT
OUR
UNDERLYING
ARRAY
HAS
FIXED
LENGTH
N
THAT
IS
GREATER
THAT
THE
ACTUAL
NUMBER
OF
ELEMENTS
IN
THE
QUEUE
NEW
ELEMENTS
ARE
ENQUEUED
TOWARD
THE
END
OF
THE
CURRENT
QUEUE
PROGRESSING
FROM
THE
FRONT
TO
INDEX
N
AND
CONTINUING
AT
INDEX
THEN
FIGURE
ILLUSTRATES
SUCH
A
QUEUE
WITH
FIRST
ELEMENT
E
AND
LAST
ELEMENT
M
F
N
FIGURE
MODELING
A
QUEUE
WITH
A
CIRCULAR
ARRAY
THAT
WRAPS
AROUND
THE
END
IMPLEMENTING
THIS
CIRCULAR
VIEW
IS
NOT
DIFFICULT
WHEN
WE
DEQUEUE
AN
ELEMENT
AND
WANT
TO
ADVANCE
THE
FRONT
INDEX
WE
USE
THE
ARITHMETIC
F
F
N
RE
CALL
THAT
THE
OPERATOR
IN
PYTHON
DENOTES
THE
MODULO
OPERATOR
WHICH
IS
COMPUTED
BY
TAKING
THE
REMAINDER
AFTER
AN
INTEGRAL
DIVISION
FOR
EXAMPLE
DIVIDED
BY
HAS
A
QUOTIENT
OF
WITH
REMAINDER
THAT
IS
SO
IN
PYTHON
EVALUATES
TO
THE
QUOTIENT
WHILE
EVALUATES
TO
THE
REMAINDER
THE
MODULO
OPERATOR
IS
IDEAL
FOR
TREATING
AN
ARRAY
CIRCULARLY
AS
A
CONCRETE
EXAMPLE
IF
WE
HAVE
A
LIST
OF
LENGTH
AND
A
FRONT
INDEX
WE
CAN
ADVANCE
THE
FRONT
BY
FORMALLY
COMPUTING
WHICH
IS
SIMPLY
AS
DIVIDED
BY
IS
WITH
A
REMAINDER
OF
SIMILARLY
ADVANCING
INDEX
RESULTS
IN
INDEX
BUT
WHEN
WE
ADVANCE
FROM
INDEX
THE
LAST
ONE
IN
THE
ARRAY
WE
COMPUTE
WHICH
EVALUATES
TO
INDEX
AS
DIVIDED
BY
HAS
A
REMAINDER
OF
ZERO
A
PYTHON
QUEUE
IMPLEMENTATION
A
COMPLETE
IMPLEMENTATION
OF
A
QUEUE
ADT
USING
A
PYTHON
LIST
IN
CIRCULAR
FASHION
IS
PRESENTED
IN
CODE
FRAGMENTS
AND
INTERNALLY
THE
QUEUE
CLASS
MAINTAINS
THE
FOLLOWING
THREE
INSTANCE
VARIABLES
DATA
IS
A
REFERENCE
TO
A
LIST
INSTANCE
WITH
A
FIXED
CAPACITY
SIZE
IS
AN
INTEGER
REPRESENTING
THE
CURRENT
NUMBER
OF
ELEMENTS
STORED
IN
THE
QUEUE
AS
OPPOSED
TO
THE
LENGTH
OF
THE
DATA
LIST
FRONT
IS
AN
INTEGER
THAT
REPRESENTS
THE
INDEX
WITHIN
DATA
OF
THE
FIRST
ELEMENT
OF
THE
QUEUE
ASSUMING
THE
QUEUE
IS
NOT
EMPTY
WE
INITIALLY
RESERVE
A
LIST
OF
MODERATE
SIZE
FOR
STORING
DATA
ALTHOUGH
THE
QUEUE
FORMALLY
HAS
SIZE
ZERO
AS
A
TECHNICALITY
WE
INITIALIZE
THE
FRONT
INDEX
TO
ZERO
WHEN
FRONT
OR
DEQUEUE
ARE
CALLED
WITH
NO
ELEMENTS
IN
THE
QUEUE
WE
RAISE
AN
INSTANCE
OF
THE
EMPTY
EXCEPTION
DEFINED
IN
CODE
FRAGMENT
FOR
OUR
STACK
QUEUES
CLASS
ARRAYQUEUE
FIFO
QUEUE
IMPLEMENTATION
USING
A
PYTHON
LIST
AS
UNDERLYING
STORAGE
DEFAULT
CAPACITY
MODERATE
CAPACITY
FOR
ALL
NEW
QUEUES
DEF
INIT
SELF
CREATE
AN
EMPTY
QUEUE
SELF
DATA
NONE
ARRAYQUEUE
DEFAULT
CAPACITY
SELF
SIZE
SELF
FRONT
DEF
LEN
SELF
RETURN
THE
NUMBER
OF
ELEMENTS
IN
THE
QUEUE
RETURN
SELF
SIZE
DEF
IS
EMPTY
SELF
RETURN
TRUE
IF
THE
QUEUE
IS
EMPTY
RETURN
SELF
SIZE
DEF
FIRST
SELF
RETURN
BUT
DO
NOT
REMOVE
THE
ELEMENT
AT
THE
FRONT
OF
THE
QUEUE
RAISE
EMPTY
EXCEPTION
IF
THE
QUEUE
IS
EMPTY
IF
SELF
IS
EMPTY
RAISE
EMPTY
QUEUE
IS
EMPTY
RETURN
SELF
DATA
SELF
FRONT
DEF
DEQUEUE
SELF
REMOVE
AND
RETURN
THE
FIRST
ELEMENT
OF
THE
QUEUE
I
E
FIFO
RAISE
EMPTY
EXCEPTION
IF
THE
QUEUE
IS
EMPTY
IF
SELF
IS
EMPTY
RAISE
EMPTY
QUEUE
IS
EMPTY
ANSWER
SELF
DATA
SELF
FRONT
SELF
DATA
SELF
FRONT
NONE
HELP
GARBAGE
COLLECTION
SELF
FRONT
SELF
FRONT
LEN
SELF
DATA
SELF
SIZE
RETURN
ANSWER
CODE
FRAGMENT
ARRAY
BASED
IMPLEMENTATION
OF
A
QUEUE
CONTINUED
IN
CODE
FRAGMENT
CHAPTER
STACKS
QUEUES
AND
DEQUES
DEF
ENQUEUE
SELF
E
ADD
AN
ELEMENT
TO
THE
BACK
OF
QUEUE
IF
SELF
SIZE
LEN
SELF
DATA
SELF
RESIZE
LEN
SELF
DATA
DOUBLE
THE
ARRAY
SIZE
AVAIL
SELF
FRONT
SELF
SIZE
LEN
SELF
DATA
SELF
DATA
AVAIL
E
SELF
SIZE
DEF
RESIZE
SELF
CAP
WE
ASSUME
CAP
LEN
SELF
RESIZE
TO
A
NEW
LIST
OF
CAPACITY
LEN
SELF
OLD
SELF
DATA
KEEP
TRACK
OF
EXISTING
LIST
SELF
DATA
NONE
CAP
ALLOCATE
LIST
WITH
NEW
CAPACITY
WALK
SELF
FRONT
FOR
K
IN
RANGE
SELF
SIZE
ONLY
CONSIDER
EXISTING
ELEMENTS
SELF
DATA
K
OLD
WALK
INTENTIONALLY
SHIFT
INDICES
WALK
WALK
LEN
OLD
USE
OLD
SIZE
AS
MODULUS
SELF
FRONT
FRONT
HAS
BEEN
REALIGNED
CODE
FRAGMENT
ARRAY
BASED
IMPLEMENTATION
OF
A
QUEUE
CONTINUED
FROM
CODE
FRAGMENT
THE
IMPLEMENTATION
OF
LEN
AND
IS
EMPTY
ARE
TRIVIAL
GIVEN
KNOWLEDGE
OF
THE
SIZE
THE
IMPLEMENTATION
OF
THE
FRONT
METHOD
IS
ALSO
SIMPLE
AS
THE
FRONT
INDEX
TELLS
US
PRECISELY
WHERE
THE
DESIRED
ELEMENT
IS
LOCATED
WITHIN
THE
DATA
LIST
ASSUMING
THAT
LIST
IS
NOT
EMPTY
ADDING
AND
REMOVING
ELEMENTS
THE
GOAL
OF
THE
ENQUEUE
METHOD
IS
TO
ADD
A
NEW
ELEMENT
TO
THE
BACK
OF
THE
QUEUE
WE
NEED
TO
DETERMINE
THE
PROPER
INDEX
AT
WHICH
TO
PLACE
THE
NEW
ELEMENT
ALTHOUGH
WE
DO
NOT
EXPLICITLY
MAINTAIN
AN
INSTANCE
VARIABLE
FOR
THE
BACK
OF
THE
QUEUE
WE
COMPUTE
THE
LOCATION
OF
THE
NEXT
OPENING
BASED
ON
THE
FORMULA
AVAIL
SELF
FRONT
SELF
SIZE
LEN
SELF
DATA
NOTE
THAT
WE
ARE
USING
THE
SIZE
OF
THE
QUEUE
AS
IT
EXISTS
PRIOR
TO
THE
ADDITION
OF
THE
NEW
ELEMENT
FOR
EXAMPLE
CONSIDER
A
QUEUE
WITH
CAPACITY
CURRENT
SIZE
AND
FIRST
ELEMENT
AT
INDEX
THE
THREE
ELEMENTS
OF
SUCH
A
QUEUE
ARE
STORED
AT
INDICES
AND
THE
NEW
ELEMENT
SHOULD
BE
PLACED
AT
INDEX
FRONT
SIZE
IN
A
CASE
WITH
WRAP
AROUND
THE
USE
OF
THE
MODULAR
ARITHMETIC
ACHIEVES
THE
DESIRED
CIRCULAR
SEMANTICS
FOR
EXAMPLE
IF
OUR
HYPOTHETICAL
QUEUE
HAD
ELEMENTS
WITH
THE
FIRST
AT
INDEX
OUR
COMPUTATION
OF
EVALUATES
TO
WHICH
IS
PERFECT
SINCE
THE
THREE
EXISTING
ELEMENTS
OCCUPY
INDICES
AND
QUEUES
WHEN
THE
DEQUEUE
METHOD
IS
CALLED
THE
CURRENT
VALUE
OF
SELF
FRONT
DESIGNATES
THE
INDEX
OF
THE
VALUE
THAT
IS
TO
BE
REMOVED
AND
RETURNED
WE
KEEP
A
LOCAL
REFER
ENCE
TO
THE
ELEMENT
THAT
WILL
BE
RETURNED
SETTING
ANSWER
SELF
DATA
SELF
FRONT
JUST
PRIOR
TO
REMOVING
THE
REFERENCE
TO
THAT
OBJECT
FROM
THE
LIST
WITH
THE
ASSIGNMENT
SELF
DATA
SELF
FRONT
NONE
OUR
REASON
FOR
THE
ASSIGNMENT
TO
NONE
RELATES
TO
PYTHON
MECHANISM
FOR
RECLAIMING
UNUSED
SPACE
INTERNALLY
PYTHON
MAINTAINS
A
COUNT
OF
THE
NUMBER
OF
REFERENCES
THAT
EXIST
TO
EACH
OBJECT
IF
THAT
COUNT
REACHES
ZERO
THE
OBJECT
IS
EFFECTIVELY
INACCESSIBLE
THUS
THE
SYSTEM
MAY
RECLAIM
THAT
MEM
ORY
FOR
FUTURE
USE
FOR
MORE
DETAILS
SEE
SECTION
SINCE
WE
ARE
NO
LONGER
RESPONSIBLE
FOR
STORING
A
DEQUEUED
ELEMENT
WE
REMOVE
THE
REFERENCE
TO
IT
FROM
OUR
LIST
SO
AS
TO
REDUCE
THAT
ELEMENT
REFERENCE
COUNT
THE
SECOND
SIGNIFICANT
RESPONSIBILITY
OF
THE
DEQUEUE
METHOD
IS
TO
UPDATE
THE
VALUE
OF
FRONT
TO
REFLECT
THE
REMOVAL
OF
THE
ELEMENT
AND
THE
PRESUMED
PROMOTION
OF
THE
SECOND
ELEMENT
TO
BECOME
THE
NEW
FIRST
IN
MOST
CASES
WE
SIMPLY
WANT
TO
INCREMENT
THE
INDEX
BY
ONE
BUT
BECAUSE
OF
THE
POSSIBILITY
OF
A
WRAP
AROUND
CONFIGURATION
WE
RELY
ON
MODULAR
ARITHMETIC
AS
ORIGINALLY
DESCRIBED
ON
PAGE
RESIZING
THE
QUEUE
WHEN
ENQUEUE
IS
CALLED
AT
A
TIME
WHEN
THE
SIZE
OF
THE
QUEUE
EQUALS
THE
SIZE
OF
THE
UNDERLYING
LIST
WE
RELY
ON
A
STANDARD
TECHNIQUE
OF
DOUBLING
THE
STORAGE
CAPACITY
OF
THE
UNDERLYING
LIST
IN
THIS
WAY
OUR
APPROACH
IS
SIMILAR
TO
THE
ONE
USED
WHEN
WE
IMPLEMENTED
A
DYNAMICARRAY
IN
SECTION
HOWEVER
MORE
CARE
IS
NEEDED
IN
THE
QUEUE
RESIZE
UTILITY
THAN
WAS
NEEDED
IN
THE
CORRESPONDING
METHOD
OF
THE
DYNAMICARRAY
CLASS
AFTER
CREATING
A
TEMPORARY
REFERENCE
TO
THE
OLD
LIST
OF
VALUES
WE
ALLOCATE
A
NEW
LIST
THAT
IS
TWICE
THE
SIZE
AND
COPY
REFERENCES
FROM
THE
OLD
LIST
TO
THE
NEW
LIST
WHILE
TRANSFERRING
THE
CONTENTS
WE
INTENTIONALLY
REALIGN
THE
FRONT
OF
THE
QUEUE
WITH
INDEX
IN
THE
NEW
ARRAY
AS
SHOWN
IN
FIGURE
THIS
REALIGNMENT
IS
NOT
PURELY
COSMETIC
SINCE
THE
MODULAR
ARITH
METIC
DEPENDS
ON
THE
SIZE
OF
THE
ARRAY
OUR
STATE
WOULD
BE
FLAWED
HAD
WE
TRANSFERRED
EACH
ELEMENT
TO
ITS
SAME
INDEX
IN
THE
NEW
ARRAY
F
I
J
K
E
F
G
H
E
F
G
H
I
J
K
F
FIGURE
RESIZING
THE
QUEUE
WHILE
REALIGNING
THE
FRONT
ELEMENT
WITH
INDEX
CHAPTER
STACKS
QUEUES
AND
DEQUES
SHRINKING
THE
UNDERLYING
ARRAY
A
DESIRABLE
PROPERTY
OF
A
QUEUE
IMPLEMENTATION
IS
TO
HAVE
ITS
SPACE
USAGE
BE
N
WHERE
N
IS
THE
CURRENT
NUMBER
OF
ELEMENTS
IN
THE
QUEUE
OUR
ARRAYQUEUE
IMPLE
MENTATION
AS
GIVEN
IN
CODE
FRAGMENTS
AND
DOES
NOT
HAVE
THIS
PROPERTY
IT
EXPANDS
THE
UNDERLYING
ARRAY
WHEN
ENQUEUE
IS
CALLED
WITH
THE
QUEUE
AT
FULL
CA
PACITY
BUT
THE
DEQUEUE
IMPLEMENTATION
NEVER
SHRINKS
THE
UNDERLYING
ARRAY
AS
A
CONSEQUENCE
THE
CAPACITY
OF
THE
UNDERLYING
ARRAY
IS
PROPORTIONAL
TO
THE
MAXIMUM
NUMBER
OF
ELEMENTS
THAT
HAVE
EVER
BEEN
STORED
IN
THE
QUEUE
NOT
THE
CURRENT
NUMBER
OF
ELEMENTS
WE
DISCUSSED
THIS
VERY
ISSUE
ON
PAGE
IN
THE
CONTEXT
OF
DYNAMIC
ARRAYS
AND
IN
SUBSEQUENT
EXERCISES
C
THROUGH
C
OF
THAT
CHAPTER
A
ROBUST
APPROACH
IS
TO
REDUCE
THE
ARRAY
TO
HALF
OF
ITS
CURRENT
SIZE
WHENEVER
THE
NUMBER
OF
ELEMENTS
STORED
IN
IT
FALLS
BELOW
ONE
FOURTH
OF
ITS
CAPACITY
WE
CAN
IMPLEMENT
THIS
STRATEGY
BY
ADDING
THE
FOLLOWING
TWO
LINES
OF
CODE
IN
OUR
DEQUEUE
METHOD
JUST
AFTER
REDUCING
SELF
SIZE
AT
LINE
OF
CODE
FRAGMENT
TO
REFLECT
THE
LOSS
OF
AN
ELEMENT
IF
SELF
SIZE
LEN
SELF
DATA
SELF
RESIZE
LEN
SELF
DATA
ANALYZING
THE
ARRAY
BASED
QUEUE
IMPLEMENTATION
TABLE
DESCRIBES
THE
PERFORMANCE
OF
OUR
ARRAY
BASED
IMPLEMENTATION
OF
THE
QUEUE
ADT
ASSUMING
THE
IMPROVEMENT
DESCRIBED
ABOVE
FOR
OCCASIONALLY
SHRINKING
THE
SIZE
OF
THE
ARRAY
WITH
THE
EXCEPTION
OF
THE
RESIZE
UTILITY
ALL
OF
THE
METHODS
RELY
ON
A
CONSTANT
NUMBER
OF
STATEMENTS
INVOLVING
ARITHMETIC
OPERATIONS
COMPARISONS
AND
ASSIGNMENTS
THEREFORE
EACH
METHOD
RUNS
IN
WORST
CASE
O
TIME
EXCEPT
FOR
ENQUEUE
AND
DEQUEUE
WHICH
HAVE
AMORTIZED
BOUNDS
OF
O
TIME
FOR
REASONS
SIMILAR
TO
THOSE
GIVEN
IN
SECTION
AMORTIZED
TABLE
PERFORMANCE
OF
AN
ARRAY
BASED
IMPLEMENTATION
OF
A
QUEUE
THE
BOUNDS
FOR
ENQUEUE
AND
DEQUEUE
ARE
AMORTIZED
DUE
TO
THE
RESIZING
OF
THE
ARRAY
THE
SPACE
USAGE
IS
O
N
WHERE
N
IS
THE
CURRENT
NUMBER
OF
ELEMENTS
IN
THE
QUEUE
DOUBLE
ENDED
QUEUES
DOUBLE
ENDED
QUEUES
WE
NEXT
CONSIDER
A
QUEUE
LIKE
DATA
STRUCTURE
THAT
SUPPORTS
INSERTION
AND
DELETION
AT
BOTH
THE
FRONT
AND
THE
BACK
OF
THE
QUEUE
SUCH
A
STRUCTURE
IS
CALLED
A
DOUBLE
ENDED
QUEUE
OR
DEQUE
WHICH
IS
USUALLY
PRONOUNCED
DECK
TO
AVOID
CONFUSION
WITH
THE
DEQUEUE
METHOD
OF
THE
REGULAR
QUEUE
ADT
WHICH
IS
PRONOUNCED
LIKE
THE
ABBREVIATION
D
Q
THE
DEQUE
ABSTRACT
DATA
TYPE
IS
MORE
GENERAL
THAN
BOTH
THE
STACK
AND
THE
QUEUE
ADTS
THE
EXTRA
GENERALITY
CAN
BE
USEFUL
IN
SOME
APPLICATIONS
FOR
EXAMPLE
WE
DESCRIBED
A
RESTAURANT
USING
A
QUEUE
TO
MAINTAIN
A
WAITLIST
OCCASSIONALLY
THE
FIRST
PERSON
MIGHT
BE
REMOVED
FROM
THE
QUEUE
ONLY
TO
FIND
THAT
A
TABLE
WAS
NOT
AVAILABLE
TYPICALLY
THE
RESTAURANT
WILL
RE
INSERT
THE
PERSON
AT
THE
FIRST
POSITION
IN
THE
QUEUE
IT
MAY
ALSO
BE
THAT
A
CUSTOMER
AT
THE
END
OF
THE
QUEUE
MAY
GROW
IMPATIENT
AND
LEAVE
THE
RESTAURANT
WE
WILL
NEED
AN
EVEN
MORE
GENERAL
DATA
STRUCTURE
IF
WE
WANT
TO
MODEL
CUSTOMERS
LEAVING
THE
QUEUE
FROM
OTHER
POSITIONS
THE
DEQUE
ABSTRACT
DATA
TYPE
TO
PROVIDE
A
SYMMETRICAL
ABSTRACTION
THE
DEQUE
ADT
IS
DEFINED
SO
THAT
DEQUE
D
SUPPORTS
THE
FOLLOWING
METHODS
D
ADD
FIRST
E
ADD
ELEMENT
E
TO
THE
FRONT
OF
DEQUE
D
D
ADD
LAST
E
ADD
ELEMENT
E
TO
THE
BACK
OF
DEQUE
D
D
DELETE
FIRST
REMOVE
AND
RETURN
THE
FIRST
ELEMENT
FROM
DEQUE
D
AN
ERROR
OCCURS
IF
THE
DEQUE
IS
EMPTY
D
DELETE
LAST
REMOVE
AND
RETURN
THE
LAST
ELEMENT
FROM
DEQUE
D
AN
ERROR
OCCURS
IF
THE
DEQUE
IS
EMPTY
ADDITIONALLY
THE
DEQUE
ADT
WILL
INCLUDE
THE
FOLLOWING
ACCESSORS
D
FIRST
RETURN
BUT
DO
NOT
REMOVE
THE
FIRST
ELEMENT
OF
DEQUE
D
AN
ERROR
OCCURS
IF
THE
DEQUE
IS
EMPTY
D
LAST
RETURN
BUT
DO
NOT
REMOVE
THE
LAST
ELEMENT
OF
DEQUE
D
AN
ERROR
OCCURS
IF
THE
DEQUE
IS
EMPTY
D
IS
EMPTY
RETURN
TRUE
IF
DEQUE
D
DOES
NOT
CONTAIN
ANY
ELEMENTS
LEN
D
RETURN
THE
NUMBER
OF
ELEMENTS
IN
DEQUE
D
IN
PYTHON
WE
IMPLEMENT
THIS
WITH
THE
SPECIAL
METHOD
LEN
CHAPTER
STACKS
QUEUES
AND
DEQUES
EXAMPLE
THE
FOLLOWING
TABLE
SHOWS
A
SERIES
OF
OPERATIONS
AND
THEIR
EFFECTS
ON
AN
INITIALLY
EMPTY
DEQUE
D
OF
INTEGERS
OPERATION
RETURN
VALUE
DEQUE
D
ADD
LAST
D
ADD
FIRST
D
ADD
FIRST
D
FIRST
D
DELETE
LAST
LEN
D
D
DELETE
LAST
D
DELETE
LAST
D
ADD
FIRST
D
LAST
D
ADD
FIRST
D
IS
EMPTY
FALSE
D
LAST
IMPLEMENTING
A
DEQUE
WITH
A
CIRCULAR
ARRAY
WE
CAN
IMPLEMENT
THE
DEQUE
ADT
IN
MUCH
THE
SAME
WAY
AS
THE
ARRAYQUEUE
CLASS
PROVIDED
IN
CODE
FRAGMENTS
AND
OF
SECTION
SO
MUCH
SO
THAT
WE
LEAVE
THE
DETAILS
OF
AN
ARRAYDEQUE
IMPLEMENTATION
TO
EXERCISE
P
WE
RECOMMEND
MAINTAINING
THE
SAME
THREE
INSTANCE
VARIABLES
DATA
SIZE
AND
FRONT
WHENEVER
WE
NEED
TO
KNOW
THE
INDEX
OF
THE
BACK
OF
THE
DEQUE
OR
THE
FIRST
AVAILABLE
SLOT
BEYOND
THE
BACK
OF
THE
DEQUE
WE
USE
MODULAR
ARITHMETIC
FOR
THE
COMPUTATION
FOR
EXAMPLE
OUR
IMPLEMENTATION
OF
THE
LAST
METHOD
USES
THE
INDEX
BACK
SELF
FRONT
SELF
SIZE
LEN
SELF
DATA
OUR
IMPLEMENTATION
OF
THE
ARRAYDEQUE
ADD
LAST
METHOD
IS
ESSENTIALLY
THE
SAME
AS
THAT
FOR
ARRAYQUEUE
ENQUEUE
INCLUDING
THE
RELIANCE
ON
A
RESIZE
UTILITY
LIKE
WISE
THE
IMPLEMENTATION
OF
THE
ARRAYDEQUE
DELETE
FIRST
METHOD
IS
THE
SAME
AS
ARRAYQUEUE
DEQUEUE
IMPLEMENTATIONS
OF
ADD
FIRST
AND
DELETE
LAST
USE
SIMILAR
TECHNIQUES
ONE
SUBTLETY
IS
THAT
A
CALL
TO
ADD
FIRST
MAY
NEED
TO
WRAP
AROUND
THE
BEGINNING
OF
THE
ARRAY
SO
WE
RELY
ON
MODULAR
ARITHMETIC
TO
CIRCULARLY
DECREMENT
THE
INDEX
AS
SELF
FRONT
SELF
FRONT
LEN
SELF
DATA
CYCLIC
SHIFT
THE
EFFICIENCY
OF
AN
ARRAYDEQUE
IS
SIMILAR
TO
THAT
OF
AN
ARRAYQUEUE
WITH
ALL
OPERATIONS
HAVING
O
RUNNING
TIME
BUT
WITH
THAT
BOUND
BEING
AMORTIZED
FOR
OP
ERATIONS
THAT
MAY
CHANGE
THE
SIZE
OF
THE
UNDERLYING
LIST
DOUBLE
ENDED
QUEUES
DEQUES
IN
THE
PYTHON
COLLECTIONS
MODULE
AN
IMPLEMENTATION
OF
A
DEQUE
CLASS
IS
AVAILABLE
IN
PYTHON
STANDARD
COLLECTIONS
MODULE
A
SUMMARY
OF
THE
MOST
COMMONLY
USED
BEHAVIORS
OF
THE
COLLECTIONS
DEQUE
CLASS
IS
GIVEN
IN
TABLE
IT
USES
MORE
ASYMMETRIC
NOMENCLATURE
THAN
OUR
ADT
OUR
DEQUE
ADT
COLLECTIONS
DEQUE
DESCRIPTION
LEN
D
LEN
D
NUMBER
OF
ELEMENTS
D
ADD
FIRST
D
APPENDLEFT
ADD
TO
BEGINNING
D
ADD
LAST
D
APPEND
ADD
TO
END
D
DELETE
FIRST
D
POPLEFT
REMOVE
FROM
BEGINNING
D
DELETE
LAST
D
POP
REMOVE
FROM
END
D
FIRST
D
ACCESS
FIRST
ELEMENT
D
LAST
D
ACCESS
LAST
ELEMENT
TABLE
COMPARISON
OF
OUR
DEQUE
ADT
AND
THE
COLLECTIONS
DEQUE
CLASS
THE
COLLECTIONS
DEQUE
INTERFACE
WAS
CHOSEN
TO
BE
CONSISTENT
WITH
ESTABLISHED
NAMING
CONVENTIONS
OF
PYTHON
LIST
CLASS
FOR
WHICH
APPEND
AND
POP
ARE
PRESUMED
TO
ACT
AT
THE
END
OF
THE
LIST
THEREFORE
APPENDLEFT
AND
POPLEFT
DESIGNATE
AN
OPERA
TION
AT
THE
BEGINNING
OF
THE
LIST
THE
LIBRARY
DEQUE
ALSO
MIMICS
A
LIST
IN
THAT
IT
IS
AN
INDEXED
SEQUENCE
ALLOWING
ARBITRARY
ACCESS
OR
MODIFICATION
USING
THE
D
J
SYNTAX
THE
LIBRARY
DEQUE
CONSTRUCTOR
ALSO
SUPPORTS
AN
OPTIONAL
MAXLEN
PARAMETER
TO
FORCE
A
FIXED
LENGTH
DEQUE
HOWEVER
IF
A
CALL
TO
APPEND
AT
EITHER
END
IS
INVOKED
WHEN
THE
DEQUE
IS
FULL
IT
DOES
NOT
THROW
AN
ERROR
INSTEAD
IT
CAUSES
ONE
ELEMENT
TO
BE
DROPPED
FROM
THE
OPPOSITE
SIDE
THAT
IS
CALLING
APPENDLEFT
WHEN
THE
DEQUE
IS
FULL
CAUSES
AN
IMPLICIT
POP
FROM
THE
RIGHT
SIDE
TO
MAKE
ROOM
FOR
THE
NEW
ELEMENT
THE
CURRENT
PYTHON
DISTRIBUTION
IMPLEMENTS
COLLECTIONS
DEQUE
WITH
A
HYBRID
AP
PROACH
THAT
USES
ASPECTS
OF
CIRCULAR
ARRAYS
BUT
ORGANIZED
INTO
BLOCKS
THAT
ARE
THEM
SELVES
ORGANIZED
IN
A
DOUBLY
LINKED
LIST
A
DATA
STRUCTURE
THAT
WE
WILL
INTRODUCE
IN
THE
NEXT
CHAPTER
THE
DEQUE
CLASS
IS
FORMALLY
DOCUMENTED
TO
GUARANTEE
O
TIME
OPERATIONS
AT
EITHER
END
BUT
O
N
TIME
WORST
CASE
OPERATIONS
WHEN
USING
INDEX
NOTATION
NEAR
THE
MIDDLE
OF
THE
DEQUE
CHAPTER
STACKS
QUEUES
AND
DEQUES
EXERCISES
FOR
HELP
WITH
EXERCISES
PLEASE
VISIT
THE
SITE
WWW
WILEY
COM
COLLEGE
GOODRICH
REINFORCEMENT
R
WHAT
VALUES
ARE
RETURNED
DURING
THE
FOLLOWING
SERIES
OF
STACK
OPERATIONS
IF
EXECUTED
UPON
AN
INITIALLY
EMPTY
STACK
PUSH
PUSH
POP
PUSH
PUSH
POP
POP
PUSH
PUSH
POP
PUSH
PUSH
POP
POP
PUSH
POP
POP
R
SUPPOSE
AN
INITIALLY
EMPTY
STACK
HAS
EXECUTED
A
TOTAL
OF
PUSH
OPERA
TIONS
TOP
OPERATIONS
AND
POP
OPERATIONS
OF
WHICH
RAISED
EMPTY
ERRORS
THAT
WERE
CAUGHT
AND
IGNORED
WHAT
IS
THE
CURRENT
SIZE
OF
R
IMPLEMENT
A
FUNCTION
WITH
SIGNATURE
TRANSFER
T
THAT
TRANSFERS
ALL
ELE
MENTS
FROM
STACK
ONTO
STACK
T
SO
THAT
THE
ELEMENT
THAT
STARTS
AT
THE
TOP
OF
IS
THE
FIRST
TO
BE
INSERTED
ONTO
T
AND
THE
ELEMENT
AT
THE
BOTTOM
OF
ENDS
UP
AT
THE
TOP
OF
T
R
GIVE
A
RECURSIVE
METHOD
FOR
REMOVING
ALL
THE
ELEMENTS
FROM
A
STACK
R
IMPLEMENT
A
FUNCTION
THAT
REVERSES
A
LIST
OF
ELEMENTS
BY
PUSHING
THEM
ONTO
A
STACK
IN
ONE
ORDER
AND
WRITING
THEM
BACK
TO
THE
LIST
IN
REVERSED
ORDER
R
GIVE
A
PRECISE
AND
COMPLETE
DEFINITION
OF
THE
CONCEPT
OF
MATCHING
FOR
GROUPING
SYMBOLS
IN
AN
ARITHMETIC
EXPRESSION
YOUR
DEFINITION
MAY
BE
RECURSIVE
R
WHAT
VALUES
ARE
RETURNED
DURING
THE
FOLLOWING
SEQUENCE
OF
QUEUE
OPERA
TIONS
IF
EXECUTED
ON
AN
INITIALLY
EMPTY
QUEUE
ENQUEUE
ENQUEUE
DEQUEUE
ENQUEUE
ENQUEUE
DEQUEUE
DEQUEUE
ENQUEUE
ENQUEUE
DEQUEUE
ENQUEUE
ENQUEUE
DEQUEUE
DEQUEUE
ENQUEUE
DEQUEUE
DEQUEUE
R
SUPPOSE
AN
INITIALLY
EMPTY
QUEUE
Q
HAS
EXECUTED
A
TOTAL
OF
ENQUEUE
OPERATIONS
FIRST
OPERATIONS
AND
DEQUEUE
OPERATIONS
OF
WHICH
RAISED
EMPTY
ERRORS
THAT
WERE
CAUGHT
AND
IGNORED
WHAT
IS
THE
CURRENT
SIZE
OF
Q
R
HAD
THE
QUEUE
OF
THE
PREVIOUS
PROBLEM
BEEN
AN
INSTANCE
OF
ARRAYQUEUE
THAT
USED
AN
INITIAL
ARRAY
OF
CAPACITY
AND
HAD
ITS
SIZE
NEVER
BEEN
GREATER
THAN
WHAT
WOULD
BE
THE
FINAL
VALUE
OF
THE
FRONT
INSTANCE
VARIABLE
R
CONSIDER
WHAT
HAPPENS
IF
THE
LOOP
IN
THE
ARRAYQUEUE
RESIZE
METHOD
AT
LINES
OF
CODE
FRAGMENT
HAD
BEEN
IMPLEMENTED
AS
FOR
K
IN
RANGE
SELF
SIZE
SELF
DATA
K
OLD
K
RATHER
THAN
OLD
WALK
GIVE
A
CLEAR
EXPLANATION
OF
WHAT
COULD
GO
WRONG
EXERCISES
R
GIVE
A
SIMPLE
ADAPTER
THAT
IMPLEMENTS
OUR
QUEUE
ADT
WHILE
USING
A
COLLECTIONS
DEQUE
INSTANCE
FOR
STORAGE
R
WHAT
VALUES
ARE
RETURNED
DURING
THE
FOLLOWING
SEQUENCE
OF
DEQUE
ADT
OP
ERATIONS
ON
INITIALLY
EMPTY
DEQUE
ADD
FIRST
ADD
LAST
ADD
LAST
ADD
FIRST
BACK
DELETE
FIRST
DELETE
LAST
ADD
LAST
FIRST
LAST
ADD
LAST
DELETE
FIRST
DELETE
FIRST
R
SUPPOSE
YOU
HAVE
A
DEQUE
D
CONTAINING
THE
NUMBERS
IN
THIS
ORDER
SUPPOSE
FURTHER
THAT
YOU
HAVE
AN
INITIALLY
EMPTY
QUEUE
Q
GIVE
A
CODE
FRAGMENT
THAT
USES
ONLY
D
AND
Q
AND
NO
OTHER
VARIABLES
AND
RESULTS
IN
D
STORING
THE
ELEMENTS
IN
THE
ORDER
R
REPEAT
THE
PREVIOUS
PROBLEM
USING
THE
DEQUE
D
AND
AN
INITIALLY
EMPTY
STACK
CREATIVITY
C
SUPPOSE
ALICE
HAS
PICKED
THREE
DISTINCT
INTEGERS
AND
PLACED
THEM
INTO
A
STACK
IN
RANDOM
ORDER
WRITE
A
SHORT
STRAIGHT
LINE
PIECE
OF
PSEUDO
CODE
WITH
NO
LOOPS
OR
RECURSION
THAT
USES
ONLY
ONE
COMPARISON
AND
ONLY
ONE
VARIABLE
X
YET
THAT
RESULTS
IN
VARIABLE
X
STORING
THE
LARGEST
OF
ALICE
THREE
INTEGERS
WITH
PROBABILITY
ARGUE
WHY
YOUR
METHOD
IS
CORRECT
C
MODIFY
THE
ARRAYSTACK
IMPLEMENTATION
SO
THAT
THE
STACK
CAPACITY
IS
LIM
ITED
TO
MAXLEN
ELEMENTS
WHERE
MAXLEN
IS
AN
OPTIONAL
PARAMETER
TO
THE
CONSTRUCTOR
THAT
DEFAULTS
TO
NONE
IF
PUSH
IS
CALLED
WHEN
THE
STACK
IS
AT
FULL
CAPACITY
THROW
A
FULL
EXCEPTION
DEFINED
SIMILARLY
TO
EMPTY
C
IN
THE
PREVIOUS
EXERCISE
WE
ASSUME
THAT
THE
UNDERLYING
LIST
IS
INITIALLY
EMPTY
REDO
THAT
EXERCISE
THIS
TIME
PREALLOCATING
AN
UNDERLYING
LIST
WITH
LENGTH
EQUAL
TO
THE
STACK
MAXIMUM
CAPACITY
C
SHOW
HOW
TO
USE
THE
TRANSFER
FUNCTION
DESCRIBED
IN
EXERCISE
R
AND
TWO
TEMPORARY
STACKS
TO
REPLACE
THE
CONTENTS
OF
A
GIVEN
STACK
WITH
THOSE
SAME
ELEMENTS
BUT
IN
REVERSED
ORDER
C
IN
CODE
FRAGMENT
WE
ASSUME
THAT
OPENING
TAGS
IN
HTML
HAVE
FORM
NAME
AS
WITH
LI
MORE
GENERALLY
HTML
ALLOWS
OPTIONAL
ATTRIBUTES
TO
BE
EXPRESSED
AS
PART
OF
AN
OPENING
TAG
THE
GENERAL
FORM
USED
IS
NAME
FOR
EXAMPLE
A
TABLE
CAN
BE
GIVEN
A
BORDER
AND
ADDITIONAL
PADDING
BY
USING
AN
OPENING
TAG
OF
TABLE
BORDER
CELLPADDING
MODIFY
CODE
FRAG
MENT
SO
THAT
IT
CAN
PROPERLY
MATCH
TAGS
EVEN
WHEN
AN
OPENING
TAG
MAY
INCLUDE
ONE
OR
MORE
SUCH
ATTRIBUTES
C
DESCRIBE
A
NONRECURSIVE
ALGORITHM
FOR
ENUMERATING
ALL
PERMUTATIONS
OF
THE
NUMBERS
N
USING
AN
EXPLICIT
STACK
CHAPTER
STACKS
QUEUES
AND
DEQUES
C
SHOW
HOW
TO
USE
A
STACK
AND
A
QUEUE
Q
TO
GENERATE
ALL
POSSIBLE
SUBSETS
OF
AN
N
ELEMENT
SET
T
NONRECURSIVELY
C
POSTFIX
NOTATION
IS
AN
UNAMBIGUOUS
WAY
OF
WRITING
AN
ARITHMETIC
EXPRES
SION
WITHOUT
PARENTHESES
IT
IS
DEFINED
SO
THAT
IF
OP
IS
A
NORMAL
FULLY
PARENTHESIZED
EXPRESSION
WHOSE
OPERATION
IS
OP
THE
POSTFIX
VERSION
OF
THIS
IS
OP
WHERE
IS
THE
POSTFIX
VERSION
OF
AND
IS
THE
POSTFIX
VERSION
OF
THE
POSTFIX
VERSION
OF
A
SIN
GLE
NUMBER
OR
VARIABLE
IS
JUST
THAT
NUMBER
OR
VARIABLE
FOR
EXAMPLE
THE
POSTFIX
VERSION
OF
IS
DESCRIBE
A
NONRECURSIVE
WAY
OF
EVALUATING
AN
EXPRESSION
IN
POSTFIX
NOTATION
C
SUPPOSE
YOU
HAVE
THREE
NONEMPTY
STACKS
R
AND
T
DESCRIBE
A
SEQUENCE
OF
OPERATIONS
THAT
RESULTS
IN
STORING
ALL
ELEMENTS
ORIGINALLY
IN
T
BELOW
ALL
OF
ORIGINAL
ELEMENTS
WITH
BOTH
SETS
OF
THOSE
ELEMENTS
IN
THEIR
ORIGINAL
ORDER
THE
FINAL
CONFIGURATION
FOR
R
SHOULD
BE
THE
SAME
AS
ITS
ORIGINAL
CONFIGURATION
FOR
EXAMPLE
IF
R
AND
T
THE
FINAL
CONFIGURATION
SHOULD
HAVE
R
AND
C
DESCRIBE
HOW
TO
IMPLEMENT
THE
STACK
ADT
USING
A
SINGLE
QUEUE
AS
AN
INSTANCE
VARIABLE
AND
ONLY
CONSTANT
ADDITIONAL
LOCAL
MEMORY
WITHIN
THE
METHOD
BODIES
WHAT
IS
THE
RUNNING
TIME
OF
THE
PUSH
POP
AND
TOP
METHODS
FOR
YOUR
DESIGN
C
DESCRIBE
HOW
TO
IMPLEMENT
THE
QUEUE
ADT
USING
TWO
STACKS
AS
INSTANCE
VARIABLES
SUCH
THAT
ALL
QUEUE
OPERATIONS
EXECUTE
IN
AMORTIZED
O
TIME
GIVE
A
FORMAL
PROOF
OF
THE
AMORTIZED
BOUND
C
DESCRIBE
HOW
TO
IMPLEMENT
THE
DOUBLE
ENDED
QUEUE
ADT
USING
TWO
STACKS
AS
INSTANCE
VARIABLES
WHAT
ARE
THE
RUNNING
TIMES
OF
THE
METHODS
C
SUPPOSE
YOU
HAVE
A
STACK
CONTAINING
N
ELEMENTS
AND
A
QUEUE
Q
THAT
IS
INITIALLY
EMPTY
DESCRIBE
HOW
YOU
CAN
USE
Q
TO
SCAN
TO
SEE
IF
IT
CONTAINS
A
CERTAIN
ELEMENT
X
WITH
THE
ADDITIONAL
CONSTRAINT
THAT
YOUR
ALGORITHM
MUST
RETURN
THE
ELEMENTS
BACK
TO
IN
THEIR
ORIGINAL
ORDER
YOU
MAY
ONLY
USE
Q
AND
A
CONSTANT
NUMBER
OF
OTHER
VARIABLES
C
MODIFY
THE
ARRAYQUEUE
IMPLEMENTATION
SO
THAT
THE
QUEUE
CAPACITY
IS
LIMITED
TO
MAXLEN
ELEMENTS
WHERE
MAXLEN
IS
AN
OPTIONAL
PARAMETER
TO
THE
CONSTRUCTOR
THAT
DEFAULTS
TO
NONE
IF
ENQUEUE
IS
CALLED
WHEN
THE
QUEUE
IS
AT
FULL
CAPACITY
THROW
A
FULL
EXCEPTION
DEFINED
SIMILARLY
TO
EMPTY
C
IN
CERTAIN
APPLICATIONS
OF
THE
QUEUE
ADT
IT
IS
COMMON
TO
REPEATEDLY
DEQUEUE
AN
ELEMENT
PROCESS
IT
IN
SOME
WAY
AND
THEN
IMMEDIATELY
EN
QUEUE
THE
SAME
ELEMENT
MODIFY
THE
ARRAYQUEUE
IMPLEMENTATION
TO
IN
CLUDE
A
ROTATE
METHOD
THAT
HAS
SEMANTICS
IDENTICAL
TO
THE
COMBINA
TION
Q
ENQUEUE
Q
DEQUEUE
HOWEVER
YOUR
IMPLEMENTATION
SHOULD
BE
MORE
EFFICIENT
THAN
MAKING
TWO
SEPARATE
CALLS
FOR
EXAMPLE
BECAUSE
THERE
IS
NO
NEED
TO
MODIFY
SIZE
EXERCISES
C
ALICE
HAS
TWO
QUEUES
Q
AND
R
WHICH
CAN
STORE
INTEGERS
BOB
GIVES
ALICE
ODD
INTEGERS
AND
EVEN
INTEGERS
AND
INSISTS
THAT
SHE
STORE
ALL
INTEGERS
IN
Q
AND
R
THEY
THEN
PLAY
A
GAME
WHERE
BOB
PICKS
Q
OR
R
AT
RANDOM
AND
THEN
APPLIES
THE
ROUND
ROBIN
SCHEDULER
DESCRIBED
IN
THE
CHAPTER
TO
THE
CHOSEN
QUEUE
A
RANDOM
NUMBER
OF
TIMES
IF
THE
LAST
NUMBER
TO
BE
PROCESSED
AT
THE
END
OF
THIS
GAME
WAS
ODD
BOB
WINS
OTHERWISE
ALICE
WINS
HOW
CAN
ALICE
ALLOCATE
INTEGERS
TO
QUEUES
TO
OPTIMIZE
HER
CHANCES
OF
WINNING
WHAT
IS
HER
CHANCE
OF
WINNING
C
SUPPOSE
BOB
HAS
FOUR
COWS
THAT
HE
WANTS
TO
TAKE
ACROSS
A
BRIDGE
BUT
ONLY
ONE
YOKE
WHICH
CAN
HOLD
UP
TO
TWO
COWS
SIDE
BY
SIDE
TIED
TO
THE
YOKE
THE
YOKE
IS
TOO
HEAVY
FOR
HIM
TO
CARRY
ACROSS
THE
BRIDGE
BUT
HE
CAN
TIE
AND
UNTIE
COWS
TO
IT
IN
NO
TIME
AT
ALL
OF
HIS
FOUR
COWS
MAZIE
CAN
CROSS
THE
BRIDGE
IN
MINUTES
DAISY
CAN
CROSS
IT
IN
MINUTES
CRAZY
CAN
CROSS
IT
IN
MINUTES
AND
LAZY
CAN
CROSS
IT
IN
MINUTES
OF
COURSE
WHEN
TWO
COWS
ARE
TIED
TO
THE
YOKE
THEY
MUST
GO
AT
THE
SPEED
OF
THE
SLOWER
COW
DESCRIBE
HOW
BOB
CAN
GET
ALL
HIS
COWS
ACROSS
THE
BRIDGE
IN
MINUTES
PROJECTS
P
GIVE
A
COMPLETE
ARRAYDEQUE
IMPLEMENTATION
OF
THE
DOUBLE
ENDED
QUEUE
ADT
AS
SKETCHED
IN
SECTION
P
GIVE
AN
ARRAY
BASED
IMPLEMENTATION
OF
A
DOUBLE
ENDED
QUEUE
SUPPORTING
ALL
OF
THE
PUBLIC
BEHAVIORS
SHOWN
IN
TABLE
FOR
THE
COLLECTIONS
DEQUE
CLASS
INCLUDING
USE
OF
THE
MAXLEN
OPTIONAL
PARAMETER
WHEN
A
LENGTH
LIMITED
DEQUE
IS
FULL
PROVIDE
SEMANTICS
SIMILAR
TO
THE
COLLECTIONS
DEQUE
CLASS
WHEREBY
A
CALL
TO
INSERT
AN
ELEMENT
ON
ONE
END
OF
A
DEQUE
CAUSES
AN
ELEMENT
TO
BE
LOST
FROM
THE
OPPOSITE
SIDE
P
IMPLEMENT
A
PROGRAM
THAT
CAN
INPUT
AN
EXPRESSION
IN
POSTFIX
NOTATION
SEE
EXERCISE
C
AND
OUTPUT
ITS
VALUE
P
THE
INTRODUCTION
OF
SECTION
NOTES
THAT
STACKS
ARE
OFTEN
USED
TO
PROVIDE
UNDO
SUPPORT
IN
APPLICATIONS
LIKE
A
WEB
BROWSER
OR
TEXT
EDITOR
WHILE
SUPPORT
FOR
UNDO
CAN
BE
IMPLEMENTED
WITH
AN
UNBOUNDED
STACK
MANY
APPLICATIONS
PROVIDE
ONLY
LIMITED
SUPPORT
FOR
SUCH
AN
UNDO
HISTORY
WITH
A
FIXED
CAPACITY
STACK
WHEN
PUSH
IS
INVOKED
WITH
THE
STACK
AT
FULL
CAPACITY
RATHER
THAN
THROWING
A
FULL
EXCEPTION
AS
DESCRIBED
IN
EXERCISE
C
A
MORE
TYPICAL
SEMANTIC
IS
TO
ACCEPT
THE
PUSHED
ELEMENT
AT
THE
TOP
WHILE
LEAKING
THE
OLDEST
ELEMENT
FROM
THE
BOTTOM
OF
THE
STACK
TO
MAKE
ROOM
GIVE
AN
IMPLEMENTATION
OF
SUCH
A
LEAKYSTACK
ABSTRACTION
USING
A
CIRCULAR
ARRAY
WITH
APPROPRIATE
STORAGE
CAPACITY
THIS
CLASS
SHOULD
HAVE
A
PUBLIC
INTERFACE
SIMILAR
TO
THE
BOUNDED
CAPACITY
STACK
IN
EXERCISE
C
BUT
WITH
THE
DESIRED
LEAKY
SEMANTICS
WHEN
FULL
CHAPTER
STACKS
QUEUES
AND
DEQUES
P
WHEN
A
SHARE
OF
COMMON
STOCK
OF
SOME
COMPANY
IS
SOLD
THE
CAPITAL
GAIN
OR
SOMETIMES
LOSS
IS
THE
DIFFERENCE
BETWEEN
THE
SHARE
SELLING
PRICE
AND
THE
PRICE
ORIGINALLY
PAID
TO
BUY
IT
THIS
RULE
IS
EASY
TO
UNDER
STAND
FOR
A
SINGLE
SHARE
BUT
IF
WE
SELL
MULTIPLE
SHARES
OF
STOCK
BOUGHT
OVER
A
LONG
PERIOD
OF
TIME
THEN
WE
MUST
IDENTIFY
THE
SHARES
ACTUALLY
BE
ING
SOLD
A
STANDARD
ACCOUNTING
PRINCIPLE
FOR
IDENTIFYING
WHICH
SHARES
OF
A
STOCK
WERE
SOLD
IN
SUCH
A
CASE
IS
TO
USE
A
FIFO
PROTOCOL
THE
SHARES
SOLD
ARE
THE
ONES
THAT
HAVE
BEEN
HELD
THE
LONGEST
INDEED
THIS
IS
THE
DE
FAULT
METHOD
BUILT
INTO
SEVERAL
PERSONAL
FINANCE
SOFTWARE
PACKAGES
FOR
EXAMPLE
SUPPOSE
WE
BUY
SHARES
AT
EACH
ON
DAY
SHARES
AT
ON
DAY
SHARES
AT
ON
DAY
AND
THEN
SELL
SHARES
ON
DAY
AT
EACH
THEN
APPLYING
THE
FIFO
PROTOCOL
MEANS
THAT
OF
THE
SHARES
SOLD
WERE
BOUGHT
ON
DAY
WERE
BOUGHT
ON
DAY
AND
WERE
BOUGHT
ON
DAY
THE
CAPITAL
GAIN
IN
THIS
CASE
WOULD
THEREFORE
BE
OR
WRITE
A
PROGRAM
THAT
TAKES
AS
INPUT
A
SEQUENCE
OF
TRANSACTIONS
OF
THE
FORM
BUY
X
SHARE
AT
Y
EACH
OR
SELL
X
SHARE
AT
Y
EACH
ASSUMING
THAT
THE
TRANSACTIONS
OC
CUR
ON
CONSECUTIVE
DAYS
AND
THE
VALUES
X
AND
Y
ARE
INTEGERS
GIVEN
THIS
INPUT
SEQUENCE
THE
OUTPUT
SHOULD
BE
THE
TOTAL
CAPITAL
GAIN
OR
LOSS
FOR
THE
ENTIRE
SEQUENCE
USING
THE
FIFO
PROTOCOL
TO
IDENTIFY
SHARES
P
DESIGN
AN
ADT
FOR
A
TWO
COLOR
DOUBLE
STACK
ADT
THAT
CONSISTS
OF
TWO
STACKS
ONE
RED
AND
ONE
BLUE
AND
HAS
AS
ITS
OPERATIONS
COLOR
CODED
VERSIONS
OF
THE
REGULAR
STACK
ADT
OPERATIONS
FOR
EXAMPLE
THIS
ADT
SHOULD
SUPPORT
BOTH
A
RED
PUSH
OPERATION
AND
A
BLUE
PUSH
OPERATION
GIVE
AN
EFFICIENT
IMPLEMENTATION
OF
THIS
ADT
USING
A
SINGLE
ARRAY
WHOSE
CA
PACITY
IS
SET
AT
SOME
VALUE
N
THAT
IS
ASSUMED
TO
ALWAYS
BE
LARGER
THAN
THE
SIZES
OF
THE
RED
AND
BLUE
STACKS
COMBINED
CHAPTER
NOTES
WE
WERE
INTRODUCED
TO
THE
APPROACH
OF
DEFINING
DATA
STRUCTURES
FIRST
IN
TERMS
OF
THEIR
ADTS
AND
THEN
IN
TERMS
OF
CONCRETE
IMPLEMENTATIONS
BY
THE
CLASSIC
BOOKS
BY
AHO
HOPCROFT
AND
ULLMAN
EXERCISES
C
AND
C
ARE
SIMILAR
TO
INTERVIEW
QUESTIONS
SAID
TO
BE
FROM
A
WELL
KNOWN
SOFTWARE
COMPANY
FOR
FURTHER
STUDY
OF
ABSTRACT
DATA
TYPES
SEE
LISKOV
AND
GUTTAG
CARDELLI
AND
WEGNER
OR
DEMURJIAN
CHAPTER
LINKED
LISTS
CONTENTS
SINGLY
LINKED
LISTS
IMPLEMENTING
A
STACK
WITH
A
SINGLY
LINKED
LIST
IMPLEMENTING
A
QUEUE
WITH
A
SINGLY
LINKED
LIST
CIRCULARLY
LINKED
LISTS
ROUND
ROBIN
SCHEDULERS
IMPLEMENTING
A
QUEUE
WITH
A
CIRCULARLY
LINKED
LIST
DOUBLY
LINKED
LISTS
BASIC
IMPLEMENTATION
OF
A
DOUBLY
LINKED
LIST
IMPLEMENTING
A
DEQUE
WITH
A
DOUBLY
LINKED
LIST
THE
POSITIONAL
LIST
ADT
THE
POSITIONAL
LIST
ABSTRACT
DATA
TYPE
DOUBLY
LINKED
LIST
IMPLEMENTATION
SORTING
A
POSITIONAL
LIST
CASE
STUDY
MAINTAINING
ACCESS
FREQUENCIES
USING
A
SORTED
LIST
USING
A
LIST
WITH
THE
MOVE
TO
FRONT
HEURISTIC
LINK
BASED
VS
ARRAY
BASED
SEQUENCES
EXERCISES
CHAPTER
LINKED
LISTS
IN
CHAPTER
WE
CAREFULLY
EXAMINED
PYTHON
ARRAY
BASED
LIST
CLASS
AND
IN
CHAPTER
WE
DEMONSTRATED
USE
OF
THAT
CLASS
IN
IMPLEMENTING
THE
CLASSIC
STACK
QUEUE
AND
DEQUEUE
ADTS
PYTHON
LIST
CLASS
IS
HIGHLY
OPTIMIZED
AND
OFTEN
A
GREAT
CHOICE
FOR
STORAGE
WITH
THAT
SAID
THERE
ARE
SOME
NOTABLE
DISADVANTAGES
THE
LENGTH
OF
A
DYNAMIC
ARRAY
MIGHT
BE
LONGER
THAN
THE
ACTUAL
NUMBER
OF
ELEMENTS
THAT
IT
STORES
AMORTIZED
BOUNDS
FOR
OPERATIONS
MAY
BE
UNACCEPTABLE
IN
REAL
TIME
SYSTEMS
INSERTIONS
AND
DELETIONS
AT
INTERIOR
POSITIONS
OF
AN
ARRAY
ARE
EXPENSIVE
IN
THIS
CHAPTER
WE
INTRODUCE
A
DATA
STRUCTURE
KNOWN
AS
A
LINKED
LIST
WHICH
PROVIDES
AN
ALTERNATIVE
TO
AN
ARRAY
BASED
SEQUENCE
SUCH
AS
A
PYTHON
LIST
BOTH
ARRAY
BASED
SEQUENCES
AND
LINKED
LISTS
KEEP
ELEMENTS
IN
A
CERTAIN
ORDER
BUT
US
ING
A
VERY
DIFFERENT
STYLE
AN
ARRAY
PROVIDES
THE
MORE
CENTRALIZED
REPRESENTATION
WITH
ONE
LARGE
CHUNK
OF
MEMORY
CAPABLE
OF
ACCOMMODATING
REFERENCES
TO
MANY
ELEMENTS
A
LINKED
LIST
IN
CONTRAST
RELIES
ON
A
MORE
DISTRIBUTED
REPRESENTATION
IN
WHICH
A
LIGHTWEIGHT
OBJECT
KNOWN
AS
A
NODE
IS
ALLOCATED
FOR
EACH
ELEMENT
EACH
NODE
MAINTAINS
A
REFERENCE
TO
ITS
ELEMENT
AND
ONE
OR
MORE
REFERENCES
TO
NEIGHBORING
NODES
IN
ORDER
TO
COLLECTIVELY
REPRESENT
THE
LINEAR
ORDER
OF
THE
SEQUENCE
WE
WILL
DEMONSTRATE
A
TRADE
OFF
OF
ADVANTAGES
AND
DISADVANTAGES
WHEN
CON
TRASTING
ARRAY
BASED
SEQUENCES
AND
LINKED
LISTS
ELEMENTS
OF
A
LINKED
LIST
CANNOT
BE
EFFICIENTLY
ACCESSED
BY
A
NUMERIC
INDEX
K
AND
WE
CANNOT
TELL
JUST
BY
EXAMINING
A
NODE
IF
IT
IS
THE
SECOND
FIFTH
OR
TWENTIETH
NODE
IN
THE
LIST
HOWEVER
LINKED
LISTS
AVOID
THE
THREE
DISADVANTAGES
NOTED
ABOVE
FOR
ARRAY
BASED
SEQUENCES
SINGLY
LINKED
LISTS
A
SINGLY
LINKED
LIST
IN
ITS
SIMPLEST
FORM
IS
A
COLLECTION
OF
NODES
THAT
COLLECTIVELY
FORM
A
LINEAR
SEQUENCE
EACH
NODE
STORES
A
REFERENCE
TO
AN
OBJECT
THAT
IS
AN
ELEMENT
OF
THE
SEQUENCE
AS
WELL
AS
A
REFERENCE
TO
THE
NEXT
NODE
OF
THE
LIST
SEE
FIGURES
AND
MSP
ELEMENT
NEXT
FIGURE
EXAMPLE
OF
A
NODE
INSTANCE
THAT
FORMS
PART
OF
A
SINGLY
LINKED
LIST
THE
NODE
ELEMENT
MEMBER
REFERENCES
AN
ARBITRARY
OBJECT
THAT
IS
AN
ELEMENT
OF
THE
SE
QUENCE
THE
AIRPORT
CODE
MSP
IN
THIS
EXAMPLE
WHILE
THE
NEXT
MEMBER
REFERENCES
THE
SUBSEQUENT
NODE
OF
THE
LINKED
LIST
OR
NONE
IF
THERE
IS
NO
FURTHER
NODE
SINGLY
LINKED
LISTS
LAX
MSP
ATL
BOS
HEAD
TAIL
FIGURE
EXAMPLE
OF
A
SINGLY
LINKED
LIST
WHOSE
ELEMENTS
ARE
STRINGS
INDICATING
AIRPORT
CODES
THE
LIST
INSTANCE
MAINTAINS
A
MEMBER
NAMED
HEAD
THAT
IDENTIFIES
THE
FIRST
NODE
OF
THE
LIST
AND
IN
SOME
APPLICATIONS
ANOTHER
MEMBER
NAMED
TAIL
THAT
IDENTIFIES
THE
LAST
NODE
OF
THE
LIST
THE
NONE
OBJECT
IS
DENOTED
AS
Ø
THE
FIRST
AND
LAST
NODE
OF
A
LINKED
LIST
ARE
KNOWN
AS
THE
HEAD
AND
TAIL
OF
THE
LIST
RESPECTIVELY
BY
STARTING
AT
THE
HEAD
AND
MOVING
FROM
ONE
NODE
TO
ANOTHER
BY
FOLLOWING
EACH
NODE
NEXT
REFERENCE
WE
CAN
REACH
THE
TAIL
OF
THE
LIST
WE
CAN
IDENTIFY
THE
TAIL
AS
THE
NODE
HAVING
NONE
AS
ITS
NEXT
REFERENCE
THIS
PROCESS
IS
COMMONLY
KNOWN
AS
TRAVERSING
THE
LINKED
LIST
BECAUSE
THE
NEXT
REFERENCE
OF
A
NODE
CAN
BE
VIEWED
AS
A
LINK
OR
POINTER
TO
ANOTHER
NODE
THE
PROCESS
OF
TRAVERSING
A
LIST
IS
ALSO
KNOWN
AS
LINK
HOPPING
OR
POINTER
HOPPING
A
LINKED
LIST
REPRESENTATION
IN
MEMORY
RELIES
ON
THE
COLLABORATION
OF
MANY
OBJECTS
EACH
NODE
IS
REPRESENTED
AS
A
UNIQUE
OBJECT
WITH
THAT
INSTANCE
STORING
A
REFERENCE
TO
ITS
ELEMENT
AND
A
REFERENCE
TO
THE
NEXT
NODE
OR
NONE
ANOTHER
OBJECT
REPRESENTS
THE
LINKED
LIST
AS
A
WHOLE
MINIMALLY
THE
LINKED
LIST
INSTANCE
MUST
KEEP
A
REFERENCE
TO
THE
HEAD
OF
THE
LIST
WITHOUT
AN
EXPLICIT
REFERENCE
TO
THE
HEAD
THERE
WOULD
BE
NO
WAY
TO
LOCATE
THAT
NODE
OR
INDIRECTLY
ANY
OTHERS
THERE
IS
NOT
AN
ABSOLUTE
NEED
TO
STORE
A
DIRECT
REFERENCE
TO
THE
TAIL
OF
THE
LIST
AS
IT
COULD
OTHERWISE
BE
LOCATED
BY
STARTING
AT
THE
HEAD
AND
TRAVERSING
THE
REST
OF
THE
LIST
HOWEVER
STORING
AN
EXPLICIT
REFERENCE
TO
THE
TAIL
NODE
IS
A
COMMON
CONVENIENCE
TO
AVOID
SUCH
A
TRAVERSAL
IN
SIMILAR
REGARD
IT
IS
COMMON
FOR
THE
LINKED
LIST
INSTANCE
TO
KEEP
A
COUNT
OF
THE
TOTAL
NUMBER
OF
NODES
THAT
COMPRISE
THE
LIST
COMMONLY
DESCRIBED
AS
THE
SIZE
OF
THE
LIST
TO
AVOID
THE
NEED
TO
TRAVERSE
THE
LIST
TO
COUNT
THE
NODES
FOR
THE
REMAINDER
OF
THIS
CHAPTER
WE
CONTINUE
TO
ILLUSTRATE
NODES
AS
OBJECTS
AND
EACH
NODE
NEXT
REFERENCE
AS
A
POINTER
HOWEVER
FOR
THE
SAKE
OF
SIMPLICITY
WE
ILLUSTRATE
A
NODE
ELEMENT
EMBEDDED
DIRECTLY
WITHIN
THE
NODE
STRUCTURE
EVEN
THOUGH
THE
ELEMENT
IS
IN
FACT
AN
INDEPENDENT
OBJECT
FOR
EXAMPLE
FIGURE
IS
A
MORE
COMPACT
ILLUSTRATION
OF
THE
LINKED
LIST
FROM
FIGURE
HEAD
TAIL
FIGURE
A
COMPACT
ILLUSTRATION
OF
A
SINGLY
LINKED
LIST
WITH
ELEMENTS
EMBEDDED
IN
THE
NODES
RATHER
THAN
MORE
ACCURATELY
DRAWN
AS
REFERENCES
TO
EXTERNAL
OBJECTS
CHAPTER
LINKED
LISTS
INSERTING
AN
ELEMENT
AT
THE
HEAD
OF
A
SINGLY
LINKED
LIST
AN
IMPORTANT
PROPERTY
OF
A
LINKED
LIST
IS
THAT
IT
DOES
NOT
HAVE
A
PREDETERMINED
FIXED
SIZE
IT
USES
SPACE
PROPORTIONALLY
TO
ITS
CURRENT
NUMBER
OF
ELEMENTS
WHEN
USING
A
SINGLY
LINKED
LIST
WE
CAN
EASILY
INSERT
AN
ELEMENT
AT
THE
HEAD
OF
THE
LIST
AS
SHOWN
IN
FIGURE
AND
DESCRIBED
WITH
PSEUDO
CODE
IN
CODE
FRAGMENT
THE
MAIN
IDEA
IS
THAT
WE
CREATE
A
NEW
NODE
SET
ITS
ELEMENT
TO
THE
NEW
ELEMENT
SET
ITS
NEXT
LINK
TO
REFER
TO
THE
CURRENT
HEAD
AND
THEN
SET
THE
LIST
HEAD
TO
POINT
TO
THE
NEW
NODE
HEAD
NEWEST
HEAD
A
NEWEST
HEAD
B
B
FIGURE
INSERTION
OF
AN
ELEMENT
AT
THE
HEAD
OF
A
SINGLY
LINKED
LIST
A
BEFORE
THE
INSERTION
B
AFTER
CREATION
OF
A
NEW
NODE
C
AFTER
REASSIGNMENT
OF
THE
HEAD
REFERENCE
ALGORITHM
ADD
FIRST
L
E
NEWEST
NODE
E
CREATE
NEW
NODE
INSTANCE
STORING
REFERENCE
TO
ELEMENT
E
NEWEST
NEXT
L
HEAD
SET
NEW
NODE
NEXT
TO
REFERENCE
THE
OLD
HEAD
NODE
L
HEAD
NEWEST
SET
VARIABLE
HEAD
TO
REFERENCE
THE
NEW
NODE
L
SIZE
L
SIZE
INCREMENT
THE
NODE
COUNT
CODE
FRAGMENT
INSERTING
A
NEW
ELEMENT
AT
THE
BEGINNING
OF
A
SINGLY
LINKED
LIST
L
NOTE
THAT
WE
SET
THE
NEXT
POINTER
OF
THE
NEW
NODE
BEFORE
WE
REASSIGN
VARIABLE
L
HEAD
TO
IT
IF
THE
LIST
WERE
INITIALLY
EMPTY
I
E
L
HEAD
IS
NONE
THEN
A
NATURAL
CONSEQUENCE
IS
THAT
THE
NEW
NODE
HAS
ITS
NEXT
REFERENCE
SET
TO
NONE
SINGLY
LINKED
LISTS
INSERTING
AN
ELEMENT
AT
THE
TAIL
OF
A
SINGLY
LINKED
LIST
WE
CAN
ALSO
EASILY
INSERT
AN
ELEMENT
AT
THE
TAIL
OF
THE
LIST
PROVIDED
WE
KEEP
A
REFERENCE
TO
THE
TAIL
NODE
AS
SHOWN
IN
FIGURE
IN
THIS
CASE
WE
CREATE
A
NEW
NODE
ASSIGN
ITS
NEXT
REFERENCE
TO
NONE
SET
THE
NEXT
REFERENCE
OF
THE
TAIL
TO
POINT
TO
THIS
NEW
NODE
AND
THEN
UPDATE
THE
TAIL
REFERENCE
ITSELF
TO
THIS
NEW
NODE
WE
GIVE
THE
DETAILS
IN
CODE
FRAGMENT
TAIL
A
TAIL
NEWEST
B
TAIL
NEWEST
C
FIGURE
INSERTION
AT
THE
TAIL
OF
A
SINGLY
LINKED
LIST
A
BEFORE
THE
INSERTION
B
AFTER
CREATION
OF
A
NEW
NODE
C
AFTER
REASSIGNMENT
OF
THE
TAIL
REFERENCE
NOTE
THAT
WE
MUST
SET
THE
NEXT
LINK
OF
THE
TAIL
IN
B
BEFORE
WE
ASSIGN
THE
TAIL
VARIABLE
TO
POINT
TO
THE
NEW
NODE
IN
C
ALGORITHM
ADD
LAST
L
E
NEWEST
NODE
E
CREATE
NEW
NODE
INSTANCE
STORING
REFERENCE
TO
ELEMENT
E
NEWEST
NEXT
NONE
SET
NEW
NODE
NEXT
TO
REFERENCE
THE
NONE
OBJECT
L
TAIL
NEXT
NEWEST
MAKE
OLD
TAIL
NODE
POINT
TO
NEW
NODE
L
TAIL
NEWEST
SET
VARIABLE
TAIL
TO
REFERENCE
THE
NEW
NODE
L
SIZE
L
SIZE
INCREMENT
THE
NODE
COUNT
CODE
FRAGMENT
INSERTING
A
NEW
NODE
AT
THE
END
OF
A
SINGLY
LINKED
LIST
NOTE
THAT
WE
SET
THE
NEXT
POINTER
FOR
THE
OLD
TAIL
NODE
BEFORE
WE
MAKE
VARIABLE
TAIL
POINT
TO
THE
NEW
NODE
THIS
CODE
WOULD
NEED
TO
BE
ADJUSTED
FOR
INSERTING
ONTO
AN
EMPTY
LIST
SINCE
THERE
WOULD
NOT
BE
AN
EXISTING
TAIL
NODE
CHAPTER
LINKED
LISTS
REMOVING
AN
ELEMENT
FROM
A
SINGLY
LINKED
LIST
REMOVING
AN
ELEMENT
FROM
THE
HEAD
OF
A
SINGLY
LINKED
LIST
IS
ESSENTIALLY
THE
REVERSE
OPERATION
OF
INSERTING
A
NEW
ELEMENT
AT
THE
HEAD
THIS
OPERATION
IS
ILLUSTRATED
IN
FIGURE
AND
GIVEN
IN
DETAIL
IN
CODE
FRAGMENT
HEAD
A
HEAD
B
HEAD
C
FIGURE
REMOVAL
OF
AN
ELEMENT
AT
THE
HEAD
OF
A
SINGLY
LINKED
LIST
A
BEFORE
THE
REMOVAL
B
AFTER
LINKING
OUT
THE
OLD
HEAD
C
FINAL
CONFIGURATION
ALGORITHM
REMOVE
FIRST
L
IF
L
HEAD
IS
NONE
THEN
INDICATE
AN
ERROR
THE
LIST
IS
EMPTY
L
HEAD
L
HEAD
NEXT
MAKE
HEAD
POINT
TO
NEXT
NODE
OR
NONE
L
SIZE
L
SIZE
DECREMENT
THE
NODE
COUNT
CODE
FRAGMENT
REMOVING
THE
NODE
AT
THE
BEGINNING
OF
A
SINGLY
LINKED
LIST
UNFORTUNATELY
WE
CANNOT
EASILY
DELETE
THE
LAST
NODE
OF
A
SINGLY
LINKED
LIST
EVEN
IF
WE
MAINTAIN
A
TAIL
REFERENCE
DIRECTLY
TO
THE
LAST
NODE
OF
THE
LIST
WE
MUST
BE
ABLE
TO
ACCESS
THE
NODE
BEFORE
THE
LAST
NODE
IN
ORDER
TO
REMOVE
THE
LAST
NODE
BUT
WE
CANNOT
REACH
THE
NODE
BEFORE
THE
TAIL
BY
FOLLOWING
NEXT
LINKS
FROM
THE
TAIL
THE
ONLY
WAY
TO
ACCESS
THIS
NODE
IS
TO
START
FROM
THE
HEAD
OF
THE
LIST
AND
SEARCH
ALL
THE
WAY
THROUGH
THE
LIST
BUT
SUCH
A
SEQUENCE
OF
LINK
HOPPING
OPERATIONS
COULD
TAKE
A
LONG
TIME
IF
WE
WANT
TO
SUPPORT
SUCH
AN
OPERATION
EFFICIENTLY
WE
WILL
NEED
TO
MAKE
OUR
LIST
DOUBLY
LINKED
AS
WE
DO
IN
SECTION
SINGLY
LINKED
LISTS
IMPLEMENTING
A
STACK
WITH
A
SINGLY
LINKED
LIST
IN
THIS
SECTION
WE
DEMONSTRATE
USE
OF
A
SINGLY
LINKED
LIST
BY
PROVIDING
A
COMPLETE
PYTHON
IMPLEMENTATION
OF
THE
STACK
ADT
SEE
SECTION
IN
DESIGNING
SUCH
AN
IMPLEMENTATION
WE
NEED
TO
DECIDE
WHETHER
TO
MODEL
THE
TOP
OF
THE
STACK
AT
THE
HEAD
OR
AT
THE
TAIL
OF
THE
LIST
THERE
IS
CLEARLY
A
BEST
CHOICE
HERE
WE
CAN
EFFICIENTLY
INSERT
AND
DELETE
ELEMENTS
IN
CONSTANT
TIME
ONLY
AT
THE
HEAD
SINCE
ALL
STACK
OPERATIONS
AFFECT
THE
TOP
WE
ORIENT
THE
TOP
OF
THE
STACK
AT
THE
HEAD
OF
OUR
LIST
TO
REPRESENT
INDIVIDUAL
NODES
OF
THE
LIST
WE
DEVELOP
A
LIGHTWEIGHT
NODE
CLASS
THIS
CLASS
WILL
NEVER
BE
DIRECTLY
EXPOSED
TO
THE
USER
OF
OUR
STACK
CLASS
SO
WE
WILL
FORMALLY
DEFINE
IT
AS
A
NONPUBLIC
NESTED
CLASS
OF
OUR
EVENTUAL
LINKEDSTACK
CLASS
SEE
SECTION
FOR
DISCUSSION
OF
NESTED
CLASSES
THE
DEFINITION
OF
THE
NODE
CLASS
IS
SHOWN
IN
CODE
FRAGMENT
CLASS
NODE
LIGHTWEIGHT
NONPUBLIC
CLASS
FOR
STORING
A
SINGLY
LINKED
NODE
SLOTS
STREAMLINE
MEMORY
USAGE
DEF
INIT
SELF
ELEMENT
NEXT
INITIALIZE
NODE
FIELDS
SELF
ELEMENT
ELEMENT
REFERENCE
TO
USER
ELEMENT
SELF
NEXT
NEXT
REFERENCE
TO
NEXT
NODE
CODE
FRAGMENT
A
LIGHTWEIGHT
NODE
CLASS
FOR
A
SINGLY
LINKED
LIST
A
NODE
HAS
ONLY
TWO
INSTANCE
VARIABLES
ELEMENT
AND
NEXT
WE
INTENTIONALLY
DEFINE
SLOTS
TO
STREAMLINE
THE
MEMORY
USAGE
SEE
PAGE
OF
SECTION
FOR
DISCUSSION
BECAUSE
THERE
MAY
POTENTIALLY
BE
MANY
NODE
INSTANCES
IN
A
SINGLE
LIST
THE
CONSTRUCTOR
OF
THE
NODE
CLASS
IS
DESIGNED
FOR
OUR
CONVENIENCE
ALLOWING
US
TO
SPECIFY
INITIAL
VALUES
FOR
BOTH
FIELDS
OF
A
NEWLY
CREATED
NODE
A
COMPLETE
IMPLEMENTATION
OF
OUR
LINKEDSTACK
CLASS
IS
GIVEN
IN
CODE
FRAG
MENTS
AND
EACH
STACK
INSTANCE
MAINTAINS
TWO
VARIABLES
THE
HEAD
MEM
BER
IS
A
REFERENCE
TO
THE
NODE
AT
THE
HEAD
OF
THE
LIST
OR
NONE
IF
THE
STACK
IS
EMPTY
WE
KEEP
TRACK
OF
THE
CURRENT
NUMBER
OF
ELEMENTS
WITH
THE
SIZE
INSTANCE
VARIABLE
FOR
OTHERWISE
WE
WOULD
BE
FORCED
TO
TRAVERSE
THE
ENTIRE
LIST
TO
COUNT
THE
NUMBER
OF
ELEMENTS
WHEN
REPORTING
THE
SIZE
OF
THE
STACK
THE
IMPLEMENTATION
OF
PUSH
ESSENTIALLY
MIRRORS
THE
PSEUDO
CODE
FOR
INSERTION
AT
THE
HEAD
OF
A
SINGLY
LINKED
LIST
AS
OUTLINED
IN
CODE
FRAGMENT
WHEN
WE
PUSH
A
NEW
ELEMENT
E
ONTO
THE
STACK
WE
ACCOMPLISH
THE
NECESSARY
CHANGES
TO
THE
LINKED
STRUCTURE
BY
INVOKING
THE
CONSTRUCTOR
OF
THE
NODE
CLASS
AS
FOLLOWS
SELF
HEAD
SELF
NODE
E
SELF
HEAD
CREATE
AND
LINK
A
NEW
NODE
NOTE
THAT
THE
NEXT
FIELD
OF
THE
NEW
NODE
IS
SET
TO
THE
EXISTING
TOP
NODE
AND
THEN
SELF
HEAD
IS
REASSIGNED
TO
THE
NEW
NODE
CHAPTER
LINKED
LISTS
CLASS
LINKEDSTACK
LIFO
STACK
IMPLEMENTATION
USING
A
SINGLY
LINKED
LIST
FOR
STORAGE
NESTED
NODE
CLASS
CLASS
NODE
LIGHTWEIGHT
NONPUBLIC
CLASS
FOR
STORING
A
SINGLY
LINKED
NODE
SLOTS
STREAMLINE
MEMORY
USAGE
DEF
INIT
SELF
ELEMENT
NEXT
INITIALIZE
NODE
FIELDS
SELF
ELEMENT
ELEMENT
REFERENCE
TO
USER
ELEMENT
SELF
NEXT
NEXT
REFERENCE
TO
NEXT
NODE
STACK
METHODS
DEF
INIT
SELF
CREATE
AN
EMPTY
STACK
SELF
HEAD
NONE
REFERENCE
TO
THE
HEAD
NODE
SELF
SIZE
NUMBER
OF
STACK
ELEMENTS
DEF
LEN
SELF
RETURN
THE
NUMBER
OF
ELEMENTS
IN
THE
STACK
RETURN
SELF
SIZE
DEF
IS
EMPTY
SELF
RETURN
TRUE
IF
THE
STACK
IS
EMPTY
RETURN
SELF
SIZE
DEF
PUSH
SELF
E
ADD
ELEMENT
E
TO
THE
TOP
OF
THE
STACK
SELF
HEAD
SELF
NODE
E
SELF
HEAD
CREATE
AND
LINK
A
NEW
NODE
SELF
SIZE
DEF
TOP
SELF
RETURN
BUT
DO
NOT
REMOVE
THE
ELEMENT
AT
THE
TOP
OF
THE
STACK
RAISE
EMPTY
EXCEPTION
IF
THE
STACK
IS
EMPTY
IF
SELF
IS
EMPTY
RAISE
EMPTY
STACK
IS
EMPTY
RETURN
SELF
HEAD
ELEMENT
TOP
OF
STACK
IS
AT
HEAD
OF
LIST
CODE
FRAGMENT
IMPLEMENTATION
OF
A
STACK
ADT
USING
A
SINGLY
LINKED
LIST
CON
TINUED
IN
CODE
FRAGMENT
SINGLY
LINKED
LISTS
DEF
POP
SELF
REMOVE
AND
RETURN
THE
ELEMENT
FROM
THE
TOP
OF
THE
STACK
I
E
LIFO
RAISE
EMPTY
EXCEPTION
IF
THE
STACK
IS
EMPTY
IF
SELF
IS
EMPTY
RAISE
EMPTY
STACK
IS
EMPTY
ANSWER
SELF
HEAD
ELEMENT
SELF
HEAD
SELF
HEAD
NEXT
BYPASS
THE
FORMER
TOP
NODE
SELF
SIZE
RETURN
ANSWER
CODE
FRAGMENT
IMPLEMENTATION
OF
A
STACK
ADT
USING
A
SINGLY
LINKED
LIST
CON
TINUED
FROM
CODE
FRAGMENT
WHEN
IMPLEMENTING
THE
TOP
METHOD
THE
GOAL
IS
TO
RETURN
THE
ELEMENT
THAT
IS
AT
THE
TOP
OF
THE
STACK
WHEN
THE
STACK
IS
EMPTY
WE
RAISE
AN
EMPTY
EXCEPTION
AS
ORIGINALLY
DEFINED
IN
CODE
FRAGMENT
OF
CHAPTER
WHEN
THE
STACK
IS
NONEMPTY
SELF
HEAD
IS
A
REFERENCE
TO
THE
FIRST
NODE
OF
THE
LINKED
LIST
THE
TOP
ELEMENT
CAN
BE
IDENTIFIED
AS
SELF
HEAD
ELEMENT
OUR
IMPLEMENTATION
OF
POP
ESSENTIALLY
MIRRORS
THE
PSEUDO
CODE
GIVEN
IN
CODE
FRAGMENT
EXCEPT
THAT
WE
MAINTAIN
A
LOCAL
REFERENCE
TO
THE
ELEMENT
THAT
IS
STORED
AT
THE
NODE
THAT
IS
BEING
REMOVED
AND
WE
RETURN
THAT
ELEMENT
TO
THE
CALLER
OF
POP
THE
ANALYSIS
OF
OUR
LINKEDSTACK
OPERATIONS
IS
GIVEN
IN
TABLE
WE
SEE
THAT
ALL
OF
THE
METHODS
COMPLETE
IN
WORST
CASE
CONSTANT
TIME
THIS
IS
IN
CONTRAST
TO
THE
AMORTIZED
BOUNDS
FOR
THE
ARRAYSTACK
THAT
WERE
GIVEN
IN
TABLE
TABLE
PERFORMANCE
OF
OUR
LINKEDSTACK
IMPLEMENTATION
ALL
BOUNDS
ARE
WORST
CASE
AND
OUR
SPACE
USAGE
IS
O
N
WHERE
N
IS
THE
CURRENT
NUMBER
OF
ELEMENTS
IN
THE
STACK
CHAPTER
LINKED
LISTS
IMPLEMENTING
A
QUEUE
WITH
A
SINGLY
LINKED
LIST
AS
WE
DID
FOR
THE
STACK
ADT
WE
CAN
USE
A
SINGLY
LINKED
LIST
TO
IMPLEMENT
THE
QUEUE
ADT
WHILE
SUPPORTING
WORST
CASE
O
TIME
FOR
ALL
OPERATIONS
BECAUSE
WE
NEED
TO
PERFORM
OPERATIONS
ON
BOTH
ENDS
OF
THE
QUEUE
WE
WILL
EXPLICITLY
MAINTAIN
BOTH
A
HEAD
REFERENCE
AND
A
TAIL
REFERENCE
AS
INSTANCE
VARIABLES
FOR
EACH
QUEUE
THE
NATURAL
ORIENTATION
FOR
A
QUEUE
IS
TO
ALIGN
THE
FRONT
OF
THE
QUEUE
WITH
THE
HEAD
OF
THE
LIST
AND
THE
BACK
OF
THE
QUEUE
WITH
THE
TAIL
OF
THE
LIST
BECAUSE
WE
MUST
BE
ABLE
TO
ENQUEUE
ELEMENTS
AT
THE
BACK
AND
DEQUEUE
THEM
FROM
THE
FRONT
RECALL
FROM
THE
INTRODUCTION
OF
SECTION
THAT
WE
ARE
UNABLE
TO
EFFICIENTLY
REMOVE
ELEMENTS
FROM
THE
TAIL
OF
A
SINGLY
LINKED
LIST
OUR
IMPLEMENTATION
OF
A
LINKEDQUEUE
CLASS
IS
GIVEN
IN
CODE
FRAGMENTS
AND
CLASS
LINKEDQUEUE
FIFO
QUEUE
IMPLEMENTATION
USING
A
SINGLY
LINKED
LIST
FOR
STORAGE
CLASS
NODE
LIGHTWEIGHT
NONPUBLIC
CLASS
FOR
STORING
A
SINGLY
LINKED
NODE
OMITTED
HERE
IDENTICAL
TO
THAT
OF
LINKEDSTACK
NODE
DEF
INIT
SELF
CREATE
AN
EMPTY
QUEUE
SELF
HEAD
NONE
SELF
TAIL
NONE
SELF
SIZE
NUMBER
OF
QUEUE
ELEMENTS
DEF
LEN
SELF
RETURN
THE
NUMBER
OF
ELEMENTS
IN
THE
QUEUE
RETURN
SELF
SIZE
DEF
IS
EMPTY
SELF
RETURN
TRUE
IF
THE
QUEUE
IS
EMPTY
RETURN
SELF
SIZE
DEF
FIRST
SELF
RETURN
BUT
DO
NOT
REMOVE
THE
ELEMENT
AT
THE
FRONT
OF
THE
QUEUE
IF
SELF
IS
EMPTY
RAISE
EMPTY
QUEUE
IS
EMPTY
RETURN
SELF
HEAD
ELEMENT
FRONT
ALIGNED
WITH
HEAD
OF
LIST
CODE
FRAGMENT
IMPLEMENTATION
OF
A
QUEUE
ADT
USING
A
SINGLY
LINKED
LIST
CONTINUED
IN
CODE
FRAGMENT
SINGLY
LINKED
LISTS
DEF
DEQUEUE
SELF
REMOVE
AND
RETURN
THE
FIRST
ELEMENT
OF
THE
QUEUE
I
E
FIFO
RAISE
EMPTY
EXCEPTION
IF
THE
QUEUE
IS
EMPTY
IF
SELF
IS
EMPTY
RAISE
EMPTY
QUEUE
IS
EMPTY
ANSWER
SELF
HEAD
ELEMENT
SELF
HEAD
SELF
HEAD
NEXT
SELF
SIZE
IF
SELF
IS
EMPTY
SPECIAL
CASE
AS
QUEUE
IS
EMPTY
SELF
TAIL
NONE
REMOVED
HEAD
HAD
BEEN
THE
TAIL
RETURN
ANSWER
DEF
ENQUEUE
SELF
E
ADD
AN
ELEMENT
TO
THE
BACK
OF
QUEUE
NEWEST
SELF
NODE
E
NONE
NODE
WILL
BE
NEW
TAIL
NODE
IF
SELF
IS
EMPTY
SELF
HEAD
NEWEST
SPECIAL
CASE
PREVIOUSLY
EMPTY
ELSE
SELF
TAIL
NEXT
NEWEST
SELF
TAIL
NEWEST
UPDATE
REFERENCE
TO
TAIL
NODE
SELF
SIZE
CODE
FRAGMENT
IMPLEMENTATION
OF
A
QUEUE
ADT
USING
A
SINGLY
LINKED
LIST
CONTINUED
FROM
CODE
FRAGMENT
MANY
ASPECTS
OF
OUR
IMPLEMENTATION
ARE
SIMILAR
TO
THAT
OF
THE
LINKEDSTACK
CLASS
SUCH
AS
THE
DEFINITION
OF
THE
NESTED
NODE
CLASS
OUR
IMPLEMENTATION
OF
DEQUEUE
FOR
LINKEDQUEUE
IS
SIMILAR
TO
THAT
OF
POP
FOR
LINKEDSTACK
AS
BOTH
REMOVE
THE
HEAD
OF
THE
LINKED
LIST
HOWEVER
THERE
IS
A
SUBTLE
DIFFERENCE
BECAUSE
OUR
QUEUE
MUST
ACCURATELY
MAINTAIN
THE
TAIL
REFERENCE
NO
SUCH
VARIABLE
WAS
MAINTAINED
FOR
OUR
STACK
IN
GENERAL
AN
OPERATION
AT
THE
HEAD
HAS
NO
EFFECT
ON
THE
TAIL
BUT
WHEN
DEQUEUE
IS
INVOKED
ON
A
QUEUE
WITH
ONE
ELEMENT
WE
ARE
SIMULTANEOUSLY
REMOVING
THE
TAIL
OF
THE
LIST
WE
THEREFORE
SET
SELF
TAIL
TO
NONE
FOR
CONSISTENCY
THERE
IS
A
SIMILAR
COMPLICATION
IN
OUR
IMPLEMENTATION
OF
ENQUEUE
THE
NEWEST
NODE
ALWAYS
BECOMES
THE
NEW
TAIL
YET
A
DISTINCTION
IS
MADE
DEPENDING
ON
WHETHER
THAT
NEW
NODE
IS
THE
ONLY
NODE
IN
THE
LIST
IN
THAT
CASE
IT
ALSO
BECOMES
THE
NEW
HEAD
OTHERWISE
THE
NEW
NODE
MUST
BE
LINKED
IMMEDIATELY
AFTER
THE
EXISTING
TAIL
NODE
IN
TERMS
OF
PERFORMANCE
THE
LINKEDQUEUE
IS
SIMILAR
TO
THE
LINKEDSTACK
IN
THAT
ALL
OPERATIONS
RUN
IN
WORST
CASE
CONSTANT
TIME
AND
THE
SPACE
USAGE
IS
LINEAR
IN
THE
CURRENT
NUMBER
OF
ELEMENTS
CHAPTER
LINKED
LISTS
CIRCULARLY
LINKED
LISTS
IN
SECTION
WE
INTRODUCED
THE
NOTION
OF
A
CIRCULAR
ARRAY
AND
DEMONSTRATED
ITS
USE
IN
IMPLEMENTING
THE
QUEUE
ADT
IN
REALITY
THE
NOTION
OF
A
CIRCULAR
ARRAY
WAS
ARTIFICIAL
IN
THAT
THERE
WAS
NOTHING
ABOUT
THE
REPRESENTATION
OF
THE
ARRAY
ITSELF
THAT
WAS
CIRCULAR
IN
STRUCTURE
IT
WAS
OUR
USE
OF
MODULAR
ARITHMETIC
WHEN
ADVANCING
AN
INDEX
FROM
THE
LAST
SLOT
TO
THE
FIRST
SLOT
THAT
PROVIDED
SUCH
AN
ABSTRACTION
IN
THE
CASE
OF
LINKED
LISTS
THERE
IS
A
MORE
TANGIBLE
NOTION
OF
A
CIRCULARLY
LINKED
LIST
AS
WE
CAN
HAVE
THE
TAIL
OF
THE
LIST
USE
ITS
NEXT
REFERENCE
TO
POINT
BACK
TO
THE
HEAD
OF
THE
LIST
AS
SHOWN
IN
FIGURE
WE
CALL
SUCH
A
STRUCTURE
A
CIRCULARLY
LINKED
LIST
HEAD
TAIL
FIGURE
EXAMPLE
OF
A
SINGLY
LINKED
LIST
WITH
CIRCULAR
STRUCTURE
A
CIRCULARLY
LINKED
LIST
PROVIDES
A
MORE
GENERAL
MODEL
THAN
A
STANDARD
LINKED
LIST
FOR
DATA
SETS
THAT
ARE
CYCLIC
THAT
IS
WHICH
DO
NOT
HAVE
ANY
PARTICULAR
NOTION
OF
A
BEGINNING
AND
END
FIGURE
PROVIDES
A
MORE
SYMMETRIC
ILLUSTRATION
OF
THE
SAME
CIRCULAR
LIST
STRUCTURE
AS
FIGURE
FIGURE
EXAMPLE
OF
A
CIRCULAR
LINKED
LIST
WITH
CURRENT
DENOTING
A
REFERENCE
TO
A
SELECT
NODE
A
CIRCULAR
VIEW
SIMILAR
TO
FIGURE
COULD
BE
USED
FOR
EXAMPLE
TO
DESCRIBE
THE
ORDER
OF
TRAIN
STOPS
IN
THE
CHICAGO
LOOP
OR
THE
ORDER
IN
WHICH
PLAYERS
TAKE
TURNS
DURING
A
GAME
EVEN
THOUGH
A
CIRCULARLY
LINKED
LIST
HAS
NO
BEGINNING
OR
END
PER
SE
WE
MUST
MAINTAIN
A
REFERENCE
TO
A
PARTICULAR
NODE
IN
ORDER
TO
MAKE
USE
OF
THE
LIST
WE
USE
THE
IDENTIFIER
CURRENT
TO
DESCRIBE
SUCH
A
DESIGNATED
NODE
BY
SETTING
CURRENT
CURRENT
NEXT
WE
CAN
EFFECTIVELY
ADVANCE
THROUGH
THE
NODES
OF
THE
LIST
CIRCULARLY
LINKED
LISTS
ROUND
ROBIN
SCHEDULERS
TO
MOTIVATE
THE
USE
OF
A
CIRCULARLY
LINKED
LIST
WE
CONSIDER
A
ROUND
ROBIN
SCHEDULER
WHICH
ITERATES
THROUGH
A
COLLECTION
OF
ELEMENTS
IN
A
CIRCULAR
FASHION
AND
SERVICES
EACH
ELEMENT
BY
PERFORMING
A
GIVEN
ACTION
ON
IT
SUCH
A
SCHEDULER
IS
USED
FOR
EXAMPLE
TO
FAIRLY
ALLOCATE
A
RESOURCE
THAT
MUST
BE
SHARED
BY
A
COLLECTION
OF
CLIENTS
FOR
INSTANCE
ROUND
ROBIN
SCHEDULING
IS
OFTEN
USED
TO
ALLOCATE
SLICES
OF
CPU
TIME
TO
VARIOUS
APPLICATIONS
RUNNING
CONCURRENTLY
ON
A
COMPUTER
A
ROUND
ROBIN
SCHEDULER
COULD
BE
IMPLEMENTED
WITH
THE
GENERAL
QUEUE
ADT
BY
REPEATEDLY
PERFORMING
THE
FOLLOWING
STEPS
ON
QUEUE
Q
SEE
FIGURE
E
Q
DEQUEUE
SERVICE
ELEMENT
E
Q
ENQUEUE
E
FIGURE
THE
THREE
ITERATIVE
STEPS
FOR
ROUND
ROBIN
SCHEDULING
USING
A
QUEUE
IF
WE
USE
OF
THE
LINKEDQUEUE
CLASS
OF
SECTION
FOR
SUCH
AN
APPLICATION
THERE
IS
UNNECESSARY
EFFORT
IN
THE
COMBINATION
OF
A
DEQUEUE
OPERATION
FOLLOWED
SOON
AFTER
BY
AN
ENQUEUE
OF
THE
SAME
ELEMENT
ONE
NODE
IS
REMOVED
FROM
THE
LIST
WITH
APPROPRIATE
ADJUSTMENTS
TO
THE
HEAD
OF
THE
LIST
AND
THE
SIZE
DECREMENTED
AND
THEN
A
NEW
NODE
IS
CREATED
TO
REINSERT
AT
THE
TAIL
OF
THE
LIST
AND
THE
SIZE
IS
INCREMENTED
IF
USING
A
CIRCULARLY
LINKED
LIST
THE
EFFECTIVE
TRANSFER
OF
AN
ITEM
FROM
THE
HEAD
OF
THE
LIST
TO
THE
TAIL
OF
THE
LIST
CAN
BE
ACCOMPLISHED
BY
ADVANCING
A
REFERENCE
THAT
MARKS
THE
BOUNDARY
OF
THE
QUEUE
WE
WILL
NEXT
PROVIDE
AN
IMPLEMENTATION
OF
A
CIRCULARQUEUE
CLASS
THAT
SUPPORTS
THE
ENTIRE
QUEUE
ADT
TOGETHER
WITH
AN
AD
DITIONAL
METHOD
ROTATE
THAT
MOVES
THE
FIRST
ELEMENT
OF
THE
QUEUE
TO
THE
BACK
A
SIMILAR
METHOD
IS
SUPPORTED
BY
THE
DEQUE
CLASS
OF
PYTHON
COLLECTIONS
MODULE
SEE
TABLE
WITH
THIS
OPERATION
A
ROUND
ROBIN
SCHEDULE
CAN
MORE
EFFICIENTLY
BE
IMPLEMENTED
BY
REPEATEDLY
PERFORMING
THE
FOLLOWING
STEPS
SERVICE
ELEMENT
Q
FRONT
Q
ROTATE
CHAPTER
LINKED
LISTS
IMPLEMENTING
A
QUEUE
WITH
A
CIRCULARLY
LINKED
LIST
TO
IMPLEMENT
THE
QUEUE
ADT
USING
A
CIRCULARLY
LINKED
LIST
WE
RELY
ON
THE
INTUITION
OF
FIGURE
IN
WHICH
THE
QUEUE
HAS
A
HEAD
AND
A
TAIL
BUT
WITH
THE
NEXT
REFERENCE
OF
THE
TAIL
LINKED
TO
THE
HEAD
GIVEN
SUCH
A
MODEL
THERE
IS
NO
NEED
FOR
US
TO
EXPLICITLY
STORE
REFERENCES
TO
BOTH
THE
HEAD
AND
THE
TAIL
AS
LONG
AS
WE
KEEP
A
REFERENCE
TO
THE
TAIL
WE
CAN
ALWAYS
FIND
THE
HEAD
BY
FOLLOWING
THE
TAIL
NEXT
REFERENCE
CODE
FRAGMENTS
AND
PROVIDE
AN
IMPLEMENTATION
OF
A
CIRCULARQUEUE
CLASS
BASED
ON
THIS
MODEL
THE
ONLY
TWO
INSTANCE
VARIABLES
ARE
TAIL
WHICH
IS
A
REFERENCE
TO
THE
TAIL
NODE
OR
NONE
WHEN
EMPTY
AND
SIZE
WHICH
IS
THE
CURRENT
NUMBER
OF
ELEMENTS
IN
THE
QUEUE
WHEN
AN
OPERATION
INVOLVES
THE
FRONT
OF
THE
QUEUE
WE
RECOGNIZE
SELF
TAIL
NEXT
AS
THE
HEAD
OF
THE
QUEUE
WHEN
ENQUEUE
IS
CALLED
A
NEW
NODE
IS
PLACED
JUST
AFTER
THE
TAIL
BUT
BEFORE
THE
CURRENT
HEAD
AND
THEN
THE
NEW
NODE
BECOMES
THE
TAIL
IN
ADDITION
TO
THE
TRADITIONAL
QUEUE
OPERATIONS
THE
CIRCULARQUEUE
CLASS
SUPPORTS
A
ROTATE
METHOD
THAT
MORE
EFFICIENTLY
ENACTS
THE
COMBINATION
OF
REMOVING
THE
FRONT
ELEMENT
AND
REINSERTING
IT
AT
THE
BACK
OF
THE
QUEUE
WITH
THE
CIRCULAR
REPRESENTATION
WE
SIMPLY
SET
SELF
TAIL
SELF
TAIL
NEXT
TO
MAKE
THE
OLD
HEAD
BECOME
THE
NEW
TAIL
WITH
THE
NODE
AFTER
THE
OLD
HEAD
BECOMING
THE
NEW
HEAD
CLASS
CIRCULARQUEUE
QUEUE
IMPLEMENTATION
USING
CIRCULARLY
LINKED
LIST
FOR
STORAGE
CLASS
NODE
LIGHTWEIGHT
NONPUBLIC
CLASS
FOR
STORING
A
SINGLY
LINKED
NODE
OMITTED
HERE
IDENTICAL
TO
THAT
OF
LINKEDSTACK
NODE
DEF
INIT
SELF
CREATE
AN
EMPTY
QUEUE
SELF
TAIL
NONE
WILL
REPRESENT
TAIL
OF
QUEUE
SELF
SIZE
NUMBER
OF
QUEUE
ELEMENTS
DEF
LEN
SELF
RETURN
THE
NUMBER
OF
ELEMENTS
IN
THE
QUEUE
RETURN
SELF
SIZE
DEF
IS
EMPTY
SELF
RETURN
TRUE
IF
THE
QUEUE
IS
EMPTY
RETURN
SELF
SIZE
CODE
FRAGMENT
IMPLEMENTATION
OF
A
CIRCULARQUEUE
CLASS
USING
A
CIRCULARLY
LINKED
LIST
AS
STORAGE
CONTINUED
IN
CODE
FRAGMENT
CIRCULARLY
LINKED
LISTS
DEF
FIRST
SELF
RETURN
BUT
DO
NOT
REMOVE
THE
ELEMENT
AT
THE
FRONT
OF
THE
QUEUE
RAISE
EMPTY
EXCEPTION
IF
THE
QUEUE
IS
EMPTY
IF
SELF
IS
EMPTY
RAISE
EMPTY
QUEUE
IS
EMPTY
HEAD
SELF
TAIL
NEXT
RETURN
HEAD
ELEMENT
DEF
DEQUEUE
SELF
REMOVE
AND
RETURN
THE
FIRST
ELEMENT
OF
THE
QUEUE
I
E
FIFO
RAISE
EMPTY
EXCEPTION
IF
THE
QUEUE
IS
EMPTY
IF
SELF
IS
EMPTY
RAISE
EMPTY
QUEUE
IS
EMPTY
OLDHEAD
SELF
TAIL
NEXT
IF
SELF
SIZE
REMOVING
ONLY
ELEMENT
SELF
TAIL
NONE
QUEUE
BECOMES
EMPTY
ELSE
SELF
TAIL
NEXT
OLDHEAD
NEXT
BYPASS
THE
OLD
HEAD
SELF
SIZE
RETURN
OLDHEAD
ELEMENT
DEF
ENQUEUE
SELF
E
ADD
AN
ELEMENT
TO
THE
BACK
OF
QUEUE
NEWEST
SELF
NODE
E
NONE
NODE
WILL
BE
NEW
TAIL
NODE
IF
SELF
IS
EMPTY
NEWEST
NEXT
NEWEST
INITIALIZE
CIRCULARLY
ELSE
NEWEST
NEXT
SELF
TAIL
NEXT
NEW
NODE
POINTS
TO
HEAD
SELF
TAIL
NEXT
NEWEST
OLD
TAIL
POINTS
TO
NEW
NODE
SELF
TAIL
NEWEST
NEW
NODE
BECOMES
THE
TAIL
SELF
SIZE
DEF
ROTATE
SELF
ROTATE
FRONT
ELEMENT
TO
THE
BACK
OF
THE
QUEUE
IF
SELF
SIZE
SELF
TAIL
SELF
TAIL
NEXT
OLD
HEAD
BECOMES
NEW
TAIL
CODE
FRAGMENT
IMPLEMENTATION
OF
A
CIRCULARQUEUE
CLASS
USING
A
CIRCULARLY
LINKED
LIST
AS
STORAGE
CONTINUED
FROM
CODE
FRAGMENT
CHAPTER
LINKED
LISTS
DOUBLY
LINKED
LISTS
IN
A
SINGLY
LINKED
LIST
EACH
NODE
MAINTAINS
A
REFERENCE
TO
THE
NODE
THAT
IS
IMMEDI
ATELY
AFTER
IT
WE
HAVE
DEMONSTRATED
THE
USEFULNESS
OF
SUCH
A
REPRESENTATION
WHEN
MANAGING
A
SEQUENCE
OF
ELEMENTS
HOWEVER
THERE
ARE
LIMITATIONS
THAT
STEM
FROM
THE
ASYMMETRY
OF
A
SINGLY
LINKED
LIST
IN
THE
OPENING
OF
SECTION
WE
EMPHA
SIZED
THAT
WE
CAN
EFFICIENTLY
INSERT
A
NODE
AT
EITHER
END
OF
A
SINGLY
LINKED
LIST
AND
CAN
DELETE
A
NODE
AT
THE
HEAD
OF
A
LIST
BUT
WE
ARE
UNABLE
TO
EFFICIENTLY
DELETE
A
NODE
AT
THE
TAIL
OF
THE
LIST
MORE
GENERALLY
WE
CANNOT
EFFICIENTLY
DELETE
AN
ARBITRARY
NODE
FROM
AN
INTERIOR
POSITION
OF
THE
LIST
IF
ONLY
GIVEN
A
REFERENCE
TO
THAT
NODE
BECAUSE
WE
CANNOT
DETERMINE
THE
NODE
THAT
IMMEDIATELY
PRECEDES
THE
NODE
TO
BE
DELETED
YET
THAT
NODE
NEEDS
TO
HAVE
ITS
NEXT
REFERENCE
UPDATED
TO
PROVIDE
GREATER
SYMMETRY
WE
DEFINE
A
LINKED
LIST
IN
WHICH
EACH
NODE
KEEPS
AN
EXPLICIT
REFERENCE
TO
THE
NODE
BEFORE
IT
AND
A
REFERENCE
TO
THE
NODE
AFTER
IT
SUCH
A
STRUCTURE
IS
KNOWN
AS
A
DOUBLY
LINKED
LIST
THESE
LISTS
ALLOW
A
GREATER
VARIETY
OF
O
TIME
UPDATE
OPERATIONS
INCLUDING
INSERTIONS
AND
DELETIONS
AT
ARBITRARY
POSI
TIONS
WITHIN
THE
LIST
WE
CONTINUE
TO
USE
THE
TERM
NEXT
FOR
THE
REFERENCE
TO
THE
NODE
THAT
FOLLOWS
ANOTHER
AND
WE
INTRODUCE
THE
TERM
PREV
FOR
THE
REFERENCE
TO
THE
NODE
THAT
PRECEDES
IT
HEADER
AND
TRAILER
SENTINELS
IN
ORDER
TO
AVOID
SOME
SPECIAL
CASES
WHEN
OPERATING
NEAR
THE
BOUNDARIES
OF
A
DOUBLY
LINKED
LIST
IT
HELPS
TO
ADD
SPECIAL
NODES
AT
BOTH
ENDS
OF
THE
LIST
A
HEADER
NODE
AT
THE
BEGINNING
OF
THE
LIST
AND
A
TRAILER
NODE
AT
THE
END
OF
THE
LIST
THESE
DUMMY
NODES
ARE
KNOWN
AS
SENTINELS
OR
GUARDS
AND
THEY
DO
NOT
STORE
ELEMENTS
OF
THE
PRIMARY
SEQUENCE
A
DOUBLY
LINKED
LIST
WITH
SUCH
SENTINELS
IS
SHOWN
IN
FIGURE
HEADER
NEXT
PREV
NEXT
NEXT
NEXT
PREV
PREV
PREV
TRAILER
FIGURE
A
DOUBLY
LINKED
LIST
REPRESENTING
THE
SEQUENCE
JFK
PVD
SFO
USING
SENTINELS
HEADER
AND
TRAILER
TO
DEMARCATE
THE
ENDS
OF
THE
LIST
WHEN
USING
SENTINEL
NODES
AN
EMPTY
LIST
IS
INITIALIZED
SO
THAT
THE
NEXT
FIELD
OF
THE
HEADER
POINTS
TO
THE
TRAILER
AND
THE
PREV
FIELD
OF
THE
TRAILER
POINTS
TO
THE
HEADER
THE
REMAINING
FIELDS
OF
THE
SENTINELS
ARE
IRRELEVANT
PRESUMABLY
NONE
IN
PYTHON
FOR
A
NONEMPTY
LIST
THE
HEADER
NEXT
WILL
REFER
TO
A
NODE
CONTAINING
THE
FIRST
REAL
ELEMENT
OF
A
SEQUENCE
JUST
AS
THE
TRAILER
PREV
REFERENCES
THE
NODE
CONTAINING
THE
LAST
ELEMENT
OF
A
SEQUENCE
DOUBLY
LINKED
LISTS
ADVANTAGE
OF
USING
SENTINELS
ALTHOUGH
WE
COULD
IMPLEMENT
A
DOUBLY
LINKED
LIST
WITHOUT
SENTINEL
NODES
AS
WE
DID
WITH
OUR
SINGLY
LINKED
LIST
IN
SECTION
THE
SLIGHT
EXTRA
SPACE
DEVOTED
TO
THE
SENTINELS
GREATLY
SIMPLIFIES
THE
LOGIC
OF
OUR
OPERATIONS
MOST
NOTABLY
THE
HEADER
AND
TRAILER
NODES
NEVER
CHANGE
ONLY
THE
NODES
BETWEEN
THEM
CHANGE
FURTHERMORE
WE
CAN
TREAT
ALL
INSERTIONS
IN
A
UNIFIED
MANNER
BECAUSE
A
NEW
NODE
WILL
ALWAYS
BE
PLACED
BETWEEN
A
PAIR
OF
EXISTING
NODES
IN
SIMILAR
FASHION
EVERY
ELEMENT
THAT
IS
TO
BE
DELETED
IS
GUARANTEED
TO
BE
STORED
IN
A
NODE
THAT
HAS
NEIGHBORS
ON
EACH
SIDE
FOR
CONTRAST
LOOK
BACK
AT
OUR
LINKEDQUEUE
IMPLEMENTATION
FROM
SECTION
ITS
ENQUEUE
METHOD
GIVEN
IN
CODE
FRAGMENT
ADDS
A
NEW
NODE
TO
THE
END
OF
THE
LIST
HOWEVER
ITS
IMPLEMENTATION
REQUIRED
A
CONDITIONAL
TO
MANAGE
THE
SPECIAL
CASE
OF
INSERTING
INTO
AN
EMPTY
LIST
IN
THE
GENERAL
CASE
THE
NEW
NODE
WAS
LINKED
AFTER
THE
EXISTING
TAIL
BUT
WHEN
ADDING
TO
AN
EMPTY
LIST
THERE
IS
NO
EXISTING
TAIL
INSTEAD
IT
IS
NECESSARY
TO
REASSIGN
SELF
HEAD
TO
REFERENCE
THE
NEW
NODE
THE
USE
OF
A
SENTINEL
NODE
IN
THAT
IMPLEMENTATION
WOULD
ELIMINATE
THE
SPECIAL
CASE
AS
THERE
WOULD
ALWAYS
BE
AN
EXISTING
NODE
POSSIBLY
THE
HEADER
BEFORE
A
NEW
NODE
INSERTING
AND
DELETING
WITH
A
DOUBLY
LINKED
LIST
EVERY
INSERTION
INTO
OUR
DOUBLY
LINKED
LIST
REPRESENTATION
WILL
TAKE
PLACE
BETWEEN
A
PAIR
OF
EXISTING
NODES
AS
DIAGRAMMED
IN
FIGURE
FOR
EXAMPLE
WHEN
A
NEW
ELEMENT
IS
INSERTED
AT
THE
FRONT
OF
THE
SEQUENCE
WE
WILL
SIMPLY
ADD
THE
NEW
NODE
BETWEEN
THE
HEADER
AND
THE
NODE
THAT
IS
CURRENTLY
AFTER
THE
HEADER
SEE
FIGURE
HEADER
A
TRAILER
TRAILER
HEADER
B
TRAILER
C
FIGURE
ADDING
AN
ELEMENT
TO
A
DOUBLY
LINKED
LIST
WITH
HEADER
AND
TRAILER
SEN
TINELS
A
BEFORE
THE
OPERATION
B
AFTER
CREATING
THE
NEW
NODE
C
AFTER
LINKING
THE
NEIGHBORS
TO
THE
NEW
NODE
CHAPTER
LINKED
LISTS
HEADER
A
TRAILER
TRAILER
HEADER
B
TRAILER
C
FIGURE
ADDING
AN
ELEMENT
TO
THE
FRONT
OF
A
SEQUENCE
REPRESENTED
BY
A
DOU
BLY
LINKED
LIST
WITH
HEADER
AND
TRAILER
SENTINELS
A
BEFORE
THE
OPERATION
B
AFTER
CREATING
THE
NEW
NODE
C
AFTER
LINKING
THE
NEIGHBORS
TO
THE
NEW
NODE
THE
DELETION
OF
A
NODE
PORTRAYED
IN
FIGURE
PROCEEDS
IN
THE
OPPOSITE
FASH
ION
OF
AN
INSERTION
THE
TWO
NEIGHBORS
OF
THE
NODE
TO
BE
DELETED
ARE
LINKED
DIRECTLY
TO
EACH
OTHER
THEREBY
BYPASSING
THE
ORIGINAL
NODE
AS
A
RESULT
THAT
NODE
WILL
NO
LONGER
BE
CONSIDERED
PART
OF
THE
LIST
AND
IT
CAN
BE
RECLAIMED
BY
THE
SYSTEM
BECAUSE
OF
OUR
USE
OF
SENTINELS
THE
SAME
IMPLEMENTATION
CAN
BE
USED
WHEN
DELETING
THE
FIRST
OR
THE
LAST
ELEMENT
OF
A
SEQUENCE
BECAUSE
EVEN
SUCH
AN
ELEMENT
WILL
BE
STORED
AT
A
NODE
THAT
LIES
BETWEEN
TWO
OTHERS
HEADER
A
TRAILER
TRAILER
HEADER
B
TRAILER
C
FIGURE
REMOVING
THE
ELEMENT
PVD
FROM
A
DOUBLY
LINKED
LIST
A
BEFORE
THE
REMOVAL
B
AFTER
LINKING
OUT
THE
OLD
NODE
C
AFTER
THE
REMOVAL
AND
GARBAGE
COLLECTION
DOUBLY
LINKED
LISTS
BASIC
IMPLEMENTATION
OF
A
DOUBLY
LINKED
LIST
WE
BEGIN
BY
PROVIDING
A
PRELIMINARY
IMPLEMENTATION
OF
A
DOUBLY
LINKED
LIST
IN
THE
FORM
OF
A
CLASS
NAMED
DOUBLYLINKEDBASE
WE
INTENTIONALLY
NAME
THE
CLASS
WITH
A
LEADING
UNDERSCORE
BECAUSE
WE
DO
NOT
INTEND
FOR
IT
TO
PROVIDE
A
COHERENT
PUBLIC
INTERFACE
FOR
GENERAL
USE
WE
WILL
SEE
THAT
LINKED
LISTS
CAN
SUPPORT
GENERAL
INSERTIONS
AND
DELETIONS
IN
O
WORST
CASE
TIME
BUT
ONLY
IF
THE
LOCATION
OF
AN
OPERATION
CAN
BE
SUCCINCTLY
IDENTIFIED
WITH
ARRAY
BASED
SEQUENCES
AN
INTEGER
INDEX
WAS
A
CONVENIENT
MEANS
FOR
DESCRIBING
A
POSITION
WITHIN
A
SEQUENCE
HOWEVER
AN
INDEX
IS
NOT
CONVENIENT
FOR
LINKED
LISTS
AS
THERE
IS
NO
EFFICIENT
WAY
TO
FIND
THE
JTH
ELEMENT
IT
WOULD
SEEM
TO
REQUIRE
A
TRAVERSAL
OF
A
PORTION
OF
THE
LIST
WHEN
WORKING
WITH
A
LINKED
LIST
THE
MOST
DIRECT
WAY
TO
DESCRIBE
THE
LOCATION
OF
AN
OPERATION
IS
BY
IDENTIFYING
A
RELEVANT
NODE
OF
THE
LIST
HOWEVER
WE
PREFER
TO
ENCAPSULATE
THE
INNER
WORKINGS
OF
OUR
DATA
STRUCTURE
TO
AVOID
HAVING
USERS
DI
RECTLY
ACCESS
NODES
OF
A
LIST
IN
THE
REMAINDER
OF
THIS
CHAPTER
WE
WILL
DEVELOP
TWO
PUBLIC
CLASSES
THAT
INHERIT
FROM
OUR
DOUBLYLINKEDBASE
CLASS
TO
PROVIDE
MORE
COHERENT
ABSTRACTIONS
SPECIFICALLY
IN
SECTION
WE
PROVIDE
A
LINKEDDEQUE
CLASS
THAT
IMPLEMENTS
THE
DOUBLE
ENDED
QUEUE
ADT
INTRODUCED
IN
SECTION
THAT
CLASS
ONLY
SUPPORTS
OPERATIONS
AT
THE
ENDS
OF
THE
QUEUE
SO
THERE
IS
NO
NEED
FOR
A
USER
TO
IDENTIFY
AN
INTERIOR
POSITION
WITHIN
THE
LIST
IN
SECTION
WE
INTRODUCE
A
NEW
POSITIONALLIST
ABSTRACTION
THAT
PROVIDES
A
PUBLIC
INTERFACE
THAT
ALLOWS
ARBITRARY
INSERTIONS
AND
DELETIONS
FROM
A
LIST
OUR
LOW
LEVEL
DOUBLYLINKEDBASE
CLASS
RELIES
ON
THE
USE
OF
A
NONPUBLIC
NODE
CLASS
THAT
IS
SIMILAR
TO
THAT
FOR
A
SINGLY
LINKED
LIST
AS
GIVEN
IN
CODE
FRAGMENT
EXCEPT
THAT
THE
DOUBLY
LINKED
VERSION
INCLUDES
A
PREV
ATTRIBUTE
IN
ADDITION
TO
THE
NEXT
AND
ELEMENT
ATTRIBUTES
AS
SHOWN
IN
CODE
FRAGMENT
CLASS
NODE
LIGHTWEIGHT
NONPUBLIC
CLASS
FOR
STORING
A
DOUBLY
LINKED
NODE
SLOTS
STREAMLINE
MEMORY
DEF
INIT
SELF
ELEMENT
PREV
NEXT
INITIALIZE
NODE
FIELDS
SELF
ELEMENT
ELEMENT
USER
ELEMENT
SELF
PREV
PREV
PREVIOUS
NODE
REFERENCE
SELF
NEXT
NEXT
NEXT
NODE
REFERENCE
CODE
FRAGMENT
A
PYTHON
NODE
CLASS
FOR
USE
IN
A
DOUBLY
LINKED
LIST
THE
REMAINDER
OF
OUR
DOUBLYLINKEDBASE
CLASS
IS
GIVEN
IN
CODE
FRAGMENT
THE
CONSTRUCTOR
INSTANTIATES
THE
TWO
SENTINEL
NODES
AND
LINKS
THEM
DIRECTLY
TO
EACH
OTHER
WE
MAINTAIN
A
SIZE
MEMBER
AND
PROVIDE
PUBLIC
SUPPORT
FOR
LEN
AND
IS
EMPTY
SO
THAT
THESE
BEHAVIORS
CAN
BE
DIRECTLY
INHERITED
BY
THE
SUBCLASSES
CHAPTER
LINKED
LISTS
CLASS
DOUBLYLINKEDBASE
A
BASE
CLASS
PROVIDING
A
DOUBLY
LINKED
LIST
REPRESENTATION
CLASS
NODE
LIGHTWEIGHT
NONPUBLIC
CLASS
FOR
STORING
A
DOUBLY
LINKED
NODE
OMITTED
HERE
SEE
PREVIOUS
CODE
FRAGMENT
DEF
INIT
SELF
CREATE
AN
EMPTY
LIST
SELF
HEADER
SELF
NODE
NONE
NONE
NONE
SELF
TRAILER
SELF
NODE
NONE
NONE
NONE
SELF
HEADER
NEXT
SELF
TRAILER
TRAILER
IS
AFTER
HEADER
SELF
TRAILER
PREV
SELF
HEADER
HEADER
IS
BEFORE
TRAILER
SELF
SIZE
NUMBER
OF
ELEMENTS
DEF
LEN
SELF
RETURN
THE
NUMBER
OF
ELEMENTS
IN
THE
LIST
RETURN
SELF
SIZE
DEF
IS
EMPTY
SELF
RETURN
TRUE
IF
LIST
IS
EMPTY
RETURN
SELF
SIZE
DEF
INSERT
BETWEEN
SELF
E
PREDECESSOR
SUCCESSOR
ADD
ELEMENT
E
BETWEEN
TWO
EXISTING
NODES
AND
RETURN
NEW
NODE
NEWEST
SELF
NODE
E
PREDECESSOR
SUCCESSOR
LINKED
TO
NEIGHBORS
PREDECESSOR
NEXT
NEWEST
SUCCESSOR
PREV
NEWEST
SELF
SIZE
RETURN
NEWEST
DEF
DELETE
NODE
SELF
NODE
DELETE
NONSENTINEL
NODE
FROM
THE
LIST
AND
RETURN
ITS
ELEMENT
PREDECESSOR
NODE
PREV
SUCCESSOR
NODE
NEXT
PREDECESSOR
NEXT
SUCCESSOR
SUCCESSOR
PREV
PREDECESSOR
SELF
SIZE
ELEMENT
NODE
ELEMENT
RECORD
DELETED
ELEMENT
NODE
PREV
NODE
NEXT
NODE
ELEMENT
NONE
DEPRECATE
NODE
RETURN
ELEMENT
RETURN
DELETED
ELEMENT
CODE
FRAGMENT
A
BASE
CLASS
FOR
MANAGING
A
DOUBLY
LINKED
LIST
DOUBLY
LINKED
LISTS
THE
OTHER
TWO
METHODS
OF
OUR
CLASS
ARE
THE
NONPUBLIC
UTILITIES
INSERT
BETWEEN
AND
DELETE
NODE
THESE
PROVIDE
GENERIC
SUPPORT
FOR
INSERTIONS
AND
DELETIONS
RE
SPECTIVELY
BUT
REQUIRE
ONE
OR
MORE
NODE
REFERENCES
AS
PARAMETERS
THE
IMPLEMEN
TATION
OF
THE
INSERT
BETWEEN
METHOD
IS
MODELED
UPON
THE
ALGORITHM
THAT
WAS
PREVI
OUSLY
PORTRAYED
IN
FIGURE
IT
CREATES
A
NEW
NODE
WITH
THAT
NODE
FIELDS
INITIAL
IZED
TO
LINK
TO
THE
SPECIFIED
NEIGHBORING
NODES
THEN
THE
FIELDS
OF
THE
NEIGHBORING
NODES
ARE
UPDATED
TO
INCLUDE
THE
NEWEST
NODE
IN
THE
LIST
FOR
LATER
CONVENIENCE
THE
METHOD
RETURNS
A
REFERENCE
TO
THE
NEWLY
CREATED
NODE
THE
IMPLEMENTATION
OF
THE
DELETE
NODE
METHOD
IS
MODELED
UPON
THE
ALGORITHM
PORTRAYED
IN
FIGURE
THE
NEIGHBORS
OF
THE
NODE
TO
BE
DELETED
ARE
LINKED
DIRECTLY
TO
EACH
OTHER
THEREBY
BYPASSING
THE
DELETED
NODE
FROM
THE
LIST
AS
A
FORMALITY
WE
INTENTIONALLY
RESET
THE
PREV
NEXT
AND
ELEMENT
FIELDS
OF
THE
DELETED
NODE
TO
NONE
AFTER
RECORDING
THE
ELEMENT
TO
BE
RETURNED
ALTHOUGH
THE
DELETED
NODE
WILL
BE
IGNORED
BY
THE
REST
OF
THE
LIST
SETTING
ITS
FIELDS
TO
NONE
IS
ADVANTAGEOUS
AS
IT
MAY
HELP
PYTHON
GARBAGE
COLLECTION
SINCE
UNNECESSARY
LINKS
TO
THE
OTHER
NODES
AND
THE
STORED
ELEMENT
ARE
ELIMINATED
WE
WILL
ALSO
RELY
ON
THIS
CONFIGURATION
TO
RECOGNIZE
A
NODE
AS
DEPRECATED
WHEN
IT
IS
NO
LONGER
PART
OF
THE
LIST
IMPLEMENTING
A
DEQUE
WITH
A
DOUBLY
LINKED
LIST
THE
DOUBLE
ENDED
QUEUE
DEQUE
ADT
WAS
INTRODUCED
IN
SECTION
WITH
AN
ARRAY
BASED
IMPLEMENTATION
WE
ACHIEVE
ALL
OPERATIONS
IN
AMORTIZED
O
TIME
DUE
TO
THE
OCCASIONAL
NEED
TO
RESIZE
THE
ARRAY
WITH
AN
IMPLEMENTATION
BASED
UPON
A
DOUBLY
LINKED
LIST
WE
CAN
ACHIEVE
ALL
DEQUE
OPERATION
IN
WORST
CASE
O
TIME
WE
PROVIDE
AN
IMPLEMENTATION
OF
A
LINKEDDEQUE
CLASS
CODE
FRAGMENT
THAT
INHERITS
FROM
THE
DOUBLYLINKEDBASE
CLASS
OF
THE
PRECEDING
SECTION
WE
DO
NOT
PROVIDE
AN
EXPLICIT
INIT
METHOD
FOR
THE
LINKEDDEQUE
CLASS
AS
THE
INHERITED
VERSION
OF
THAT
METHOD
SUFFICES
TO
INITIALIZE
A
NEW
INSTANCE
WE
ALSO
RELY
ON
THE
INHERITED
METHODS
LEN
AND
IS
EMPTY
IN
MEETING
THE
DEQUE
ADT
WITH
THE
USE
OF
SENTINELS
THE
KEY
TO
OUR
IMPLEMENTATION
IS
TO
REMEMBER
THAT
THE
HEADER
DOES
NOT
STORE
THE
FIRST
ELEMENT
OF
THE
DEQUE
IT
IS
THE
NODE
JUST
AFTER
THE
HEADER
THAT
STORES
THE
FIRST
ELEMENT
ASSUMING
THE
DEQUE
IS
NONEMPTY
SIMILARLY
THE
NODE
JUST
BEFORE
THE
TRAILER
STORES
THE
LAST
ELEMENT
OF
THE
DEQUE
WE
USE
THE
INHERITED
INSERT
BETWEEN
METHOD
TO
INSERT
AT
EITHER
END
OF
THE
DEQUE
TO
INSERT
AN
ELEMENT
AT
THE
FRONT
OF
THE
DEQUE
WE
PLACE
IT
IMMEDIATELY
BETWEEN
THE
HEADER
AND
THE
NODE
JUST
AFTER
THE
HEADER
AN
INSERTION
AT
THE
END
OF
DEQUE
IS
PLACED
IMMEDIATELY
BEFORE
THE
TRAILER
NODE
NOTE
THAT
THESE
OPERATIONS
SUCCEED
EVEN
WHEN
THE
DEQUE
IS
EMPTY
IN
SUCH
A
SITUATION
THE
NEW
NODE
IS
PLACED
BETWEEN
THE
TWO
SENTINELS
WHEN
DELETING
AN
ELEMENT
FROM
A
NONEMPTY
DEQUE
WE
RELY
UPON
THE
INHERITED
DELETE
NODE
METHOD
KNOWING
THAT
THE
DESIGNATED
NODE
IS
ASSURED
TO
HAVE
NEIGHBORS
ON
EACH
SIDE
CHAPTER
LINKED
LISTS
CLASS
LINKEDDEQUE
DOUBLYLINKEDBASE
NOTE
THE
USE
OF
INHERITANCE
DOUBLE
ENDED
QUEUE
IMPLEMENTATION
BASED
ON
A
DOUBLY
LINKED
LIST
DEF
FIRST
SELF
RETURN
BUT
DO
NOT
REMOVE
THE
ELEMENT
AT
THE
FRONT
OF
THE
DEQUE
IF
SELF
IS
EMPTY
RAISE
EMPTY
DEQUE
IS
EMPTY
RETURN
SELF
HEADER
NEXT
ELEMENT
REAL
ITEM
JUST
AFTER
HEADER
DEF
LAST
SELF
RETURN
BUT
DO
NOT
REMOVE
THE
ELEMENT
AT
THE
BACK
OF
THE
DEQUE
IF
SELF
IS
EMPTY
RAISE
EMPTY
DEQUE
IS
EMPTY
RETURN
SELF
TRAILER
PREV
ELEMENT
REAL
ITEM
JUST
BEFORE
TRAILER
DEF
INSERT
FIRST
SELF
E
ADD
AN
ELEMENT
TO
THE
FRONT
OF
THE
DEQUE
SELF
INSERT
BETWEEN
E
SELF
HEADER
SELF
HEADER
NEXT
AFTER
HEADER
DEF
INSERT
LAST
SELF
E
ADD
AN
ELEMENT
TO
THE
BACK
OF
THE
DEQUE
SELF
INSERT
BETWEEN
E
SELF
TRAILER
PREV
SELF
TRAILER
BEFORE
TRAILER
DEF
DELETE
FIRST
SELF
REMOVE
AND
RETURN
THE
ELEMENT
FROM
THE
FRONT
OF
THE
DEQUE
RAISE
EMPTY
EXCEPTION
IF
THE
DEQUE
IS
EMPTY
IF
SELF
IS
EMPTY
RAISE
EMPTY
DEQUE
IS
EMPTY
RETURN
SELF
DELETE
NODE
SELF
HEADER
NEXT
USE
INHERITED
METHOD
DEF
DELETE
LAST
SELF
REMOVE
AND
RETURN
THE
ELEMENT
FROM
THE
BACK
OF
THE
DEQUE
RAISE
EMPTY
EXCEPTION
IF
THE
DEQUE
IS
EMPTY
IF
SELF
IS
EMPTY
RAISE
EMPTY
DEQUE
IS
EMPTY
RETURN
SELF
DELETE
NODE
SELF
TRAILER
PREV
USE
INHERITED
METHOD
CODE
FRAGMENT
IMPLEMENTATION
OF
A
LINKEDDEQUE
CLASS
THAT
INHERITS
FROM
THE
DOUBLYLINKEDBASE
CLASS
THE
POSITIONAL
LIST
ADT
THE
POSITIONAL
LIST
ADT
THE
ABSTRACT
DATA
TYPES
THAT
WE
HAVE
CONSIDERED
THUS
FAR
NAMELY
STACKS
QUEUES
AND
DOUBLE
ENDED
QUEUES
ONLY
ALLOW
UPDATE
OPERATIONS
THAT
OCCUR
AT
ONE
END
OF
A
SEQUENCE
OR
THE
OTHER
WE
WISH
TO
HAVE
A
MORE
GENERAL
ABSTRACTION
FOR
EXAMPLE
ALTHOUGH
WE
MOTIVATED
THE
FIFO
SEMANTICS
OF
A
QUEUE
AS
A
MODEL
FOR
CUSTOMERS
WHO
ARE
WAITING
TO
SPEAK
WITH
A
CUSTOMER
SERVICE
REPRESENTATIVE
OR
FANS
WHO
ARE
WAITING
IN
LINE
TO
BUY
TICKETS
TO
A
SHOW
THE
QUEUE
ADT
IS
TOO
LIMITING
WHAT
IF
A
WAITING
CUSTOMER
DECIDES
TO
HANG
UP
BEFORE
REACHING
THE
FRONT
OF
THE
CUSTOMER
SERVICE
QUEUE
OR
WHAT
IF
SOMEONE
WHO
IS
WAITING
IN
LINE
TO
BUY
TICKETS
ALLOWS
A
FRIEND
TO
CUT
INTO
LINE
AT
THAT
POSITION
WE
WOULD
LIKE
TO
DESIGN
AN
ABSTRACT
DATA
TYPE
THAT
PROVIDES
A
USER
A
WAY
TO
REFER
TO
ELEMENTS
ANYWHERE
IN
A
SEQUENCE
AND
TO
PERFORM
ARBITRARY
INSERTIONS
AND
DELETIONS
WHEN
WORKING
WITH
ARRAY
BASED
SEQUENCES
SUCH
AS
A
PYTHON
LIST
INTEGER
IN
DICES
PROVIDE
AN
EXCELLENT
MEANS
FOR
DESCRIBING
THE
LOCATION
OF
AN
ELEMENT
OR
THE
LOCATION
AT
WHICH
AN
INSERTION
OR
DELETION
SHOULD
TAKE
PLACE
HOWEVER
NUMERIC
IN
DICES
ARE
NOT
A
GOOD
CHOICE
FOR
DESCRIBING
POSITIONS
WITHIN
A
LINKED
LIST
BECAUSE
WE
CANNOT
EFFICIENTLY
ACCESS
AN
ENTRY
KNOWING
ONLY
ITS
INDEX
FINDING
AN
ELEMENT
AT
A
GIVEN
INDEX
WITHIN
A
LINKED
LIST
REQUIRES
TRAVERSING
THE
LIST
INCREMENTALLY
FROM
ITS
BEGINNING
OR
END
COUNTING
ELEMENTS
AS
WE
GO
FURTHERMORE
INDICES
ARE
NOT
A
GOOD
ABSTRACTION
FOR
DESCRIBING
A
LOCAL
POSITION
IN
SOME
APPLICATIONS
BECAUSE
THE
INDEX
OF
AN
ENTRY
CHANGES
OVER
TIME
DUE
TO
INSER
TIONS
OR
DELETIONS
THAT
HAPPEN
EARLIER
IN
THE
SEQUENCE
FOR
EXAMPLE
IT
MAY
NOT
BE
CONVENIENT
TO
DESCRIBE
THE
LOCATION
OF
A
PERSON
WAITING
IN
LINE
BY
KNOWING
PRECISELY
HOW
FAR
AWAY
THAT
PERSON
IS
FROM
THE
FRONT
OF
THE
LINE
WE
PREFER
AN
ABSTRACTION
AS
CHARACTERIZED
IN
FIGURE
IN
WHICH
THERE
IS
SOME
OTHER
MEANS
FOR
DESCRIBING
A
POSITION
WE
THEN
WISH
TO
MODEL
SITUATIONS
SUCH
AS
WHEN
AN
IDENTIFIED
PERSON
LEAVES
THE
LINE
BEFORE
REACHING
THE
FRONT
OR
IN
WHICH
A
NEW
PERSON
IS
ADDED
TO
A
LINE
IMMEDIATELY
BEHIND
ANOTHER
IDENTIFIED
PERSON
ME
FIGURE
WE
WISH
TO
BE
ABLE
TO
IDENTIFY
THE
POSITION
OF
AN
ELEMENT
IN
A
SEQUENCE
WITHOUT
THE
USE
OF
AN
INTEGER
INDEX
CHAPTER
LINKED
LISTS
AS
ANOTHER
EXAMPLE
A
TEXT
DOCUMENT
CAN
BE
VIEWED
AS
A
LONG
SEQUENCE
OF
CHARACTERS
A
WORD
PROCESSOR
USES
THE
ABSTRACTION
OF
A
CURSOR
TO
DESCRIBE
A
POSITION
WITHIN
THE
DOCUMENT
WITHOUT
EXPLICIT
USE
OF
AN
INTEGER
INDEX
ALLOWING
OPERATIONS
SUCH
AS
DELETE
THE
CHARACTER
AT
THE
CURSOR
OR
INSERT
A
NEW
CHARACTER
JUST
AFTER
THE
CURSOR
FURTHERMORE
WE
MAY
BE
ABLE
TO
REFER
TO
AN
INHERENT
POSITION
WITHIN
A
DOC
UMENT
SUCH
AS
THE
BEGINNING
OF
A
PARTICULAR
SECTION
WITHOUT
RELYING
ON
A
CHARACTER
INDEX
OR
EVEN
A
SECTION
NUMBER
THAT
MAY
CHANGE
AS
THE
DOCUMENT
EVOLVES
A
NODE
REFERENCE
AS
A
POSITION
ONE
OF
THE
GREAT
BENEFITS
OF
A
LINKED
LIST
STRUCTURE
IS
THAT
IT
IS
POSSIBLE
TO
PERFORM
O
TIME
INSERTIONS
AND
DELETIONS
AT
ARBITRARY
POSITIONS
OF
THE
LIST
AS
LONG
AS
WE
ARE
GIVEN
A
REFERENCE
TO
A
RELEVANT
NODE
OF
THE
LIST
IT
IS
THEREFORE
VERY
TEMPTING
TO
DEVELOP
AN
ADT
IN
WHICH
A
NODE
REFERENCE
SERVES
AS
THE
MECHANISM
FOR
DESCRIBING
A
POSITION
IN
FACT
OUR
DOUBLYLINKEDBASE
CLASS
OF
SECTION
HAS
METHODS
INSERT
BETWEEN
AND
DELETE
NODE
THAT
ACCEPT
NODE
REFERENCES
AS
PARAMETERS
HOWEVER
SUCH
DIRECT
USE
OF
NODES
WOULD
VIOLATE
THE
OBJECT
ORIENTED
DESIGN
PRINCIPLES
OF
ABSTRACTION
AND
ENCAPSULATION
THAT
WERE
INTRODUCED
IN
CHAPTER
THERE
ARE
SEVERAL
REASONS
TO
PREFER
THAT
WE
ENCAPSULATE
THE
NODES
OF
A
LINKED
LIST
FOR
BOTH
OUR
SAKE
AND
FOR
THE
BENEFIT
OF
USERS
OF
OUR
ABSTRACTION
IT
WILL
BE
SIMPLER
FOR
USERS
OF
OUR
DATA
STRUCTURE
IF
THEY
ARE
NOT
BOTHERED
WITH
UNNECESSARY
DETAILS
OF
OUR
IMPLEMENTATION
SUCH
AS
LOW
LEVEL
MANIPULATION
OF
NODES
OR
OUR
RELIANCE
ON
THE
USE
OF
SENTINEL
NODES
NOTICE
THAT
TO
USE
THE
INSERT
BETWEEN
METHOD
OF
OUR
DOUBLYLINKEDBASE
CLASS
TO
ADD
A
NODE
AT
THE
BEGINNING
OF
A
SEQUENCE
THE
HEADER
SENTINEL
MUST
BE
SENT
AS
A
PARAMETER
WE
CAN
PROVIDE
A
MORE
ROBUST
DATA
STRUCTURE
IF
WE
DO
NOT
PERMIT
USERS
TO
DIRECTLY
ACCESS
OR
MANIPULATE
THE
NODES
IN
THAT
WAY
WE
ENSURE
THAT
USERS
CANNOT
INVALIDATE
THE
CONSISTENCY
OF
A
LIST
BY
MISMANAGING
THE
LINKING
OF
NODES
A
MORE
SUBTLE
PROBLEM
ARISES
IF
A
USER
WERE
ALLOWED
TO
CALL
THE
INSERT
BETWEEN
OR
DELETE
NODE
METHOD
OF
OUR
DOUBLYLINKEDBASE
CLASS
SENDING
A
NODE
THAT
DOES
NOT
BELONG
TO
THE
GIVEN
LIST
AS
A
PARAMETER
GO
BACK
AND
LOOK
AT
THAT
CODE
AND
SEE
WHY
IT
CAUSES
A
PROBLEM
BY
BETTER
ENCAPSULATING
THE
INTERNAL
DETAILS
OF
OUR
IMPLEMENTATION
WE
HAVE
GREATER
FLEXIBILITY
TO
REDESIGN
THE
DATA
STRUCTURE
AND
IMPROVE
ITS
PERFORMANCE
IN
FACT
WITH
A
WELL
DESIGNED
ABSTRACTION
WE
CAN
PROVIDE
A
NOTION
OF
A
NON
NUMERIC
POSITION
EVEN
IF
USING
AN
ARRAY
BASED
SEQUENCE
FOR
THESE
REASONS
INSTEAD
OF
RELYING
DIRECTLY
ON
NODES
WE
INTRODUCE
AN
INDE
PENDENT
POSITION
ABSTRACTION
TO
DENOTE
THE
LOCATION
OF
AN
ELEMENT
WITHIN
A
LIST
AND
THEN
A
COMPLETE
POSITIONAL
LIST
ADT
THAT
CAN
ENCAPSULATE
A
DOUBLY
LINKED
LIST
OR
EVEN
AN
ARRAY
BASED
SEQUENCE
SEE
EXERCISE
P
THE
POSITIONAL
LIST
ADT
THE
POSITIONAL
LIST
ABSTRACT
DATA
TYPE
TO
PROVIDE
FOR
A
GENERAL
ABSTRACTION
OF
A
SEQUENCE
OF
ELEMENTS
WITH
THE
ABILITY
TO
IDENTIFY
THE
LOCATION
OF
AN
ELEMENT
WE
DEFINE
A
POSITIONAL
LIST
ADT
AS
WELL
AS
A
SIMPLER
POSITION
ABSTRACT
DATA
TYPE
TO
DESCRIBE
A
LOCATION
WITHIN
A
LIST
A
POSITION
ACTS
AS
A
MARKER
OR
TOKEN
WITHIN
THE
BROADER
POSITIONAL
LIST
A
POSITION
P
IS
UNAF
FECTED
BY
CHANGES
ELSEWHERE
IN
A
LIST
THE
ONLY
WAY
IN
WHICH
A
POSITION
BECOMES
INVALID
IS
IF
AN
EXPLICIT
COMMAND
IS
ISSUED
TO
DELETE
IT
A
POSITION
INSTANCE
IS
A
SIMPLE
OBJECT
SUPPORTING
ONLY
THE
FOLLOWING
METHOD
P
ELEMENT
RETURN
THE
ELEMENT
STORED
AT
POSITION
P
IN
THE
CONTEXT
OF
THE
POSITIONAL
LIST
ADT
POSITIONS
SERVE
AS
PARAMETERS
TO
SOME
METHODS
AND
AS
RETURN
VALUES
FROM
OTHER
METHODS
IN
DESCRIBING
THE
BEHAVIORS
OF
A
POSITIONAL
LIST
WE
BEING
BY
PRESENTING
THE
ACCESSOR
METHODS
SUPPORTED
BY
A
LIST
L
L
FIRST
RETURN
THE
POSITION
OF
THE
FIRST
ELEMENT
OF
L
OR
NONE
IF
L
IS
EMPTY
L
LAST
RETURN
THE
POSITION
OF
THE
LAST
ELEMENT
OF
L
OR
NONE
IF
L
IS
EMPTY
L
BEFORE
P
RETURN
THE
POSITION
OF
L
IMMEDIATELY
BEFORE
POSITION
P
OR
NONE
IF
P
IS
THE
FIRST
POSITION
L
AFTER
P
RETURN
THE
POSITION
OF
L
IMMEDIATELY
AFTER
POSITION
P
OR
NONE
IF
P
IS
THE
LAST
POSITION
L
IS
EMPTY
RETURN
TRUE
IF
LIST
L
DOES
NOT
CONTAIN
ANY
ELEMENTS
LEN
L
RETURN
THE
NUMBER
OF
ELEMENTS
IN
THE
LIST
ITER
L
RETURN
A
FORWARD
ITERATOR
FOR
THE
ELEMENTS
OF
THE
LIST
SEE
SEC
TION
FOR
DISCUSSION
OF
ITERATORS
IN
PYTHON
THE
POSITIONAL
LIST
ADT
ALSO
INCLUDES
THE
FOLLOWING
UPDATE
METHODS
L
ADD
FIRST
E
INSERT
A
NEW
ELEMENT
E
AT
THE
FRONT
OF
L
RETURNING
THE
POSITION
OF
THE
NEW
ELEMENT
L
ADD
LAST
E
INSERT
A
NEW
ELEMENT
E
AT
THE
BACK
OF
L
RETURNING
THE
POSITION
OF
THE
NEW
ELEMENT
L
ADD
BEFORE
P
E
INSERT
A
NEW
ELEMENT
E
JUST
BEFORE
POSITION
P
IN
L
RETURNING
THE
POSITION
OF
THE
NEW
ELEMENT
L
ADD
AFTER
P
E
INSERT
A
NEW
ELEMENT
E
JUST
AFTER
POSITION
P
IN
L
RETURNING
THE
POSITION
OF
THE
NEW
ELEMENT
L
REPLACE
P
E
REPLACE
THE
ELEMENT
AT
POSITION
P
WITH
ELEMENT
E
RETURNING
THE
ELEMENT
FORMERLY
AT
POSITION
P
L
DELETE
P
REMOVE
AND
RETURN
THE
ELEMENT
AT
POSITION
P
IN
L
INVALIDAT
ING
THE
POSITION
FOR
THOSE
METHODS
OF
THE
ADT
THAT
ACCEPT
A
POSITION
P
AS
A
PARAMETER
AN
ERROR
OCCURS
IF
P
IS
NOT
A
VALID
POSITION
FOR
LIST
L
CHAPTER
LINKED
LISTS
NOTE
WELL
THAT
THE
FIRST
AND
LAST
METHODS
OF
THE
POSITIONAL
LIST
ADT
RETURN
THE
ASSOCIATED
POSITIONS
NOT
THE
ELEMENTS
THIS
IS
IN
CONTRAST
TO
THE
CORRESPONDING
FIRST
AND
LAST
METHODS
OF
THE
DEQUE
ADT
THE
FIRST
ELEMENT
OF
A
POSITIONAL
LIST
CAN
BE
DETERMINED
BY
SUBSEQUENTLY
INVOKING
THE
ELEMENT
METHOD
ON
THAT
POSITION
AS
L
FIRST
ELEMENT
THE
ADVANTAGE
OF
RECEIVING
A
POSITION
AS
A
RETURN
VALUE
IS
THAT
WE
CAN
USE
THAT
POSITION
TO
NAVIGATE
THE
LIST
FOR
EXAMPLE
THE
FOLLOWING
CODE
FRAGMENT
PRINTS
ALL
ELEMENTS
OF
A
POSITIONAL
LIST
NAMED
DATA
CURSOR
DATA
FIRST
WHILE
CURSOR
IS
NOT
NONE
PRINT
CURSOR
ELEMENT
PRINT
THE
ELEMENT
STORED
AT
THE
POSITION
CURSOR
DATA
AFTER
CURSOR
ADVANCE
TO
THE
NEXT
POSITION
IF
ANY
THIS
CODE
RELIES
ON
THE
STATED
CONVENTION
THAT
THE
NONE
OBJECT
IS
RETURNED
WHEN
AFTER
IS
CALLED
UPON
THE
LAST
POSITION
THAT
RETURN
VALUE
IS
CLEARLY
DISTINGUISHABLE
FROM
ANY
LEGITIMATE
POSITION
THE
POSITIONAL
LIST
ADT
SIMILARLY
INDICATES
THAT
THE
NONE
VALUE
IS
RETURNED
WHEN
THE
BEFORE
METHOD
IS
INVOKED
AT
THE
FRONT
OF
THE
LIST
OR
WHEN
FIRST
OR
LAST
METHODS
ARE
CALLED
UPON
AN
EMPTY
LIST
THEREFORE
THE
ABOVE
CODE
FRAGMENT
WORKS
CORRECTLY
EVEN
IF
THE
DATA
LIST
IS
EMPTY
BECAUSE
THE
ADT
INCLUDES
SUPPORT
FOR
PYTHON
ITER
FUNCTION
USERS
MAY
RELY
ON
THE
TRADITIONAL
FOR
LOOP
SYNTAX
FOR
SUCH
A
FORWARD
TRAVERSAL
OF
A
LIST
NAMED
DATA
FOR
E
IN
DATA
PRINT
E
MORE
GENERAL
NAVIGATIONAL
AND
UPDATE
METHODS
OF
THE
POSITIONAL
LIST
ADT
ARE
SHOWN
IN
THE
FOLLOWING
EXAMPLE
EXAMPLE
THE
FOLLOWING
TABLE
SHOWS
A
SERIES
OF
OPERATIONS
ON
AN
INITIALLY
EMPTY
POSITIONAL
LIST
L
TO
IDENTIFY
POSITION
INSTANCES
WE
USE
VARIABLES
SUCH
AS
P
AND
Q
FOR
EASE
OF
EXPOSITION
WHEN
DISPLAYING
THE
LIST
CONTENTS
WE
USE
SUBSCRIPT
NOTATION
TO
DENOTE
ITS
POSITIONS
OPERATION
RETURN
VALUE
L
L
ADD
LAST
P
L
FIRST
P
L
ADD
AFTER
P
Q
L
BEFORE
Q
P
L
ADD
BEFORE
Q
R
R
ELEMENT
L
AFTER
P
R
L
BEFORE
P
NONE
L
ADD
FIRST
L
DELETE
L
LAST
L
REPLACE
P
THE
POSITIONAL
LIST
ADT
DOUBLY
LINKED
LIST
IMPLEMENTATION
IN
THIS
SECTION
WE
PRESENT
A
COMPLETE
IMPLEMENTATION
OF
A
POSITIONALLIST
CLASS
USING
A
DOUBLY
LINKED
LIST
THAT
SATISFIES
THE
FOLLOWING
IMPORTANT
PROPOSITION
PROPOSITION
EACH
METHOD
OF
THE
POSITIONAL
LIST
ADT
RUNS
IN
WORST
CASE
O
TIME
WHEN
IMPLEMENTED
WITH
A
DOUBLY
LINKED
LIST
WE
RELY
ON
THE
DOUBLYLINKEDBASE
CLASS
FROM
SECTION
FOR
OUR
LOW
LEVEL
REPRESENTATION
THE
PRIMARY
RESPONSIBILITY
OF
OUR
NEW
CLASS
IS
TO
PROVIDE
A
PUBLIC
INTERFACE
IN
ACCORDANCE
WITH
THE
POSITIONAL
LIST
ADT
WE
BEGIN
OUR
CLASS
DEFINITION
IN
CODE
FRAGMENT
WITH
THE
DEFINITION
OF
THE
PUBLIC
POSITION
CLASS
NESTED
WITHIN
OUR
POSITIONALLIST
CLASS
POSITION
INSTANCES
WILL
BE
USED
TO
REPRESENT
THE
LOCATIONS
OF
ELEMENTS
WITHIN
THE
LIST
OUR
VARIOUS
POSITIONALLIST
METHODS
MAY
END
UP
CREATING
REDUNDANT
POSITION
INSTANCES
THAT
REFERENCE
THE
SAME
UNDERLYING
NODE
FOR
EXAMPLE
WHEN
FIRST
AND
LAST
ARE
THE
SAME
FOR
THAT
REASON
OUR
POSITION
CLASS
DEFINES
THE
EQ
AND
NE
SPECIAL
METHODS
SO
THAT
A
TEST
SUCH
AS
P
Q
EVALUATES
TO
TRUE
WHEN
TWO
POSITIONS
REFER
TO
THE
SAME
NODE
VALIDATING
POSITIONS
EACH
TIME
A
METHOD
OF
THE
POSITIONALLIST
CLASS
ACCEPTS
A
POSITION
AS
A
PARAMETER
WE
WANT
TO
VERIFY
THAT
THE
POSITION
IS
VALID
AND
IF
SO
TO
DETERMINE
THE
UNDERLYING
NODE
ASSOCIATED
WITH
THE
POSITION
THIS
FUNCTIONALITY
IS
IMPLEMENTED
BY
A
NON
PUBLIC
METHOD
NAMED
VALIDATE
INTERNALLY
A
POSITION
MAINTAINS
A
REFERENCE
TO
THE
ASSOCIATED
NODE
OF
THE
LINKED
LIST
AND
ALSO
A
REFERENCE
TO
THE
LIST
INSTANCE
THAT
CON
TAINS
THE
SPECIFIED
NODE
WITH
THE
CONTAINER
REFERENCE
WE
CAN
ROBUSTLY
DETECT
WHEN
A
CALLER
SENDS
A
POSITION
INSTANCE
THAT
DOES
NOT
BELONG
TO
THE
INDICATED
LIST
WE
ARE
ALSO
ABLE
TO
DETECT
A
POSITION
INSTANCE
THAT
BELONGS
TO
THE
LIST
BUT
THAT
REFERS
TO
A
NODE
THAT
IS
NO
LONGER
PART
OF
THAT
LIST
RECALL
THAT
THE
DELETE
NODE
OF
THE
BASE
CLASS
SETS
THE
PREVIOUS
AND
NEXT
REFERENCES
OF
A
DELETED
NODE
TO
NONE
WE
CAN
RECOGNIZE
THAT
CONDITION
TO
DETECT
A
DEPRECATED
NODE
ACCESS
AND
UPDATE
METHODS
THE
ACCESS
METHODS
OF
THE
POSITIONALLIST
CLASS
ARE
GIVEN
IN
CODE
FRAGMENT
AND
THE
UPDATE
METHODS
ARE
GIVEN
IN
CODE
FRAGMENT
ALL
OF
THESE
METHODS
TRIVIALLY
ADAPT
THE
UNDERLYING
DOUBLY
LINKED
LIST
IMPLEMENTATION
TO
SUPPORT
THE
PUB
LIC
INTERFACE
OF
THE
POSITIONAL
LIST
ADT
THOSE
METHODS
RELY
ON
THE
VALIDATE
UTILITY
TO
UNWRAP
ANY
POSITION
THAT
IS
SENT
THEY
ALSO
RELY
ON
A
MAKE
POSITION
UTILITY
TO
WRAP
NODES
AS
POSITION
INSTANCES
TO
RETURN
TO
THE
USER
MAKING
SURE
NEVER
TO
RETURN
A
POSITION
REFERENCING
A
SENTINEL
FOR
CONVENIENCE
WE
HAVE
OVERRIDDEN
THE
INHERITED
INSERT
BETWEEN
UTILITY
METHOD
SO
THAT
OURS
RETURNS
A
POSITION
ASSOCIATED
WITH
THE
NEWLY
CREATED
NODE
WHEREAS
THE
INHERITED
VERSION
RETURNS
THE
NODE
ITSELF
CHAPTER
LINKED
LISTS
CLASS
POSITIONALLIST
DOUBLYLINKEDBASE
A
SEQUENTIAL
CONTAINER
OF
ELEMENTS
ALLOWING
POSITIONAL
ACCESS
NESTED
POSITION
CLASS
CLASS
POSITION
AN
ABSTRACTION
REPRESENTING
THE
LOCATION
OF
A
SINGLE
ELEMENT
DEF
INIT
SELF
CONTAINER
NODE
CONSTRUCTOR
SHOULD
NOT
BE
INVOKED
BY
USER
SELF
CONTAINER
CONTAINER
SELF
NODE
NODE
DEF
ELEMENT
SELF
RETURN
THE
ELEMENT
STORED
AT
THIS
POSITION
RETURN
SELF
NODE
ELEMENT
DEF
EQ
SELF
OTHER
RETURN
TRUE
IF
OTHER
IS
A
POSITION
REPRESENTING
THE
SAME
LOCATION
RETURN
TYPE
OTHER
IS
TYPE
SELF
AND
OTHER
NODE
IS
SELF
NODE
DEF
NE
SELF
OTHER
RETURN
TRUE
IF
OTHER
DOES
NOT
REPRESENT
THE
SAME
LOCATION
RETURN
NOT
SELF
OTHER
OPPOSITE
OF
EQ
UTILITY
METHOD
DEF
VALIDATE
SELF
P
RETURN
POSITION
NODE
OR
RAISE
APPROPRIATE
ERROR
IF
INVALID
IF
NOT
ISINSTANCE
P
SELF
POSITION
RAISE
TYPEERROR
P
MUST
BE
PROPER
POSITION
TYPE
IF
P
CONTAINER
IS
NOT
SELF
RAISE
VALUEERROR
P
DOES
NOT
BELONG
TO
THIS
CONTAINER
IF
P
NODE
NEXT
IS
NONE
CONVENTION
FOR
DEPRECATED
NODES
RAISE
VALUEERROR
P
IS
NO
LONGER
VALID
RETURN
P
NODE
CODE
FRAGMENT
A
POSITIONALLIST
CLASS
BASED
ON
A
DOUBLY
LINKED
LIST
CONTIN
UES
IN
CODE
FRAGMENTS
AND
THE
POSITIONAL
LIST
ADT
UTILITY
METHOD
DEF
MAKE
POSITION
SELF
NODE
RETURN
POSITION
INSTANCE
FOR
GIVEN
NODE
OR
NONE
IF
SENTINEL
IF
NODE
IS
SELF
HEADER
OR
NODE
IS
SELF
TRAILER
RETURN
NONE
BOUNDARY
VIOLATION
ELSE
RETURN
SELF
POSITION
SELF
NODE
LEGITIMATE
POSITION
ACCESSORS
DEF
FIRST
SELF
RETURN
THE
FIRST
POSITION
IN
THE
LIST
OR
NONE
IF
LIST
IS
EMPTY
RETURN
SELF
MAKE
POSITION
SELF
HEADER
NEXT
DEF
LAST
SELF
RETURN
THE
LAST
POSITION
IN
THE
LIST
OR
NONE
IF
LIST
IS
EMPTY
RETURN
SELF
MAKE
POSITION
SELF
TRAILER
PREV
DEF
BEFORE
SELF
P
RETURN
THE
POSITION
JUST
BEFORE
POSITION
P
OR
NONE
IF
P
IS
FIRST
NODE
SELF
VALIDATE
P
RETURN
SELF
MAKE
POSITION
NODE
PREV
DEF
AFTER
SELF
P
RETURN
THE
POSITION
JUST
AFTER
POSITION
P
OR
NONE
IF
P
IS
LAST
NODE
SELF
VALIDATE
P
RETURN
SELF
MAKE
POSITION
NODE
NEXT
DEF
ITER
SELF
GENERATE
A
FORWARD
ITERATION
OF
THE
ELEMENTS
OF
THE
LIST
CURSOR
SELF
FIRST
WHILE
CURSOR
IS
NOT
NONE
YIELD
CURSOR
ELEMENT
CURSOR
SELF
AFTER
CURSOR
CODE
FRAGMENT
A
POSITIONALLIST
CLASS
BASED
ON
A
DOUBLY
LINKED
LIST
CONTIN
UED
FROM
CODE
FRAGMENT
CONTINUES
IN
CODE
FRAGMENT
CHAPTER
LINKED
LISTS
MUTATORS
OVERRIDE
INHERITED
VERSION
TO
RETURN
POSITION
RATHER
THAN
NODE
DEF
INSERT
BETWEEN
SELF
E
PREDECESSOR
SUCCESSOR
ADD
ELEMENT
BETWEEN
EXISTING
NODES
AND
RETURN
NEW
POSITION
NODE
SUPER
INSERT
BETWEEN
E
PREDECESSOR
SUCCESSOR
RETURN
SELF
MAKE
POSITION
NODE
DEF
ADD
FIRST
SELF
E
INSERT
ELEMENT
E
AT
THE
FRONT
OF
THE
LIST
AND
RETURN
NEW
POSITION
RETURN
SELF
INSERT
BETWEEN
E
SELF
HEADER
SELF
HEADER
NEXT
DEF
ADD
LAST
SELF
E
INSERT
ELEMENT
E
AT
THE
BACK
OF
THE
LIST
AND
RETURN
NEW
POSITION
RETURN
SELF
INSERT
BETWEEN
E
SELF
TRAILER
PREV
SELF
TRAILER
DEF
ADD
BEFORE
SELF
P
E
INSERT
ELEMENT
E
INTO
LIST
BEFORE
POSITION
P
AND
RETURN
NEW
POSITION
ORIGINAL
SELF
VALIDATE
P
RETURN
SELF
INSERT
BETWEEN
E
ORIGINAL
PREV
ORIGINAL
DEF
ADD
AFTER
SELF
P
E
INSERT
ELEMENT
E
INTO
LIST
AFTER
POSITION
P
AND
RETURN
NEW
POSITION
ORIGINAL
SELF
VALIDATE
P
RETURN
SELF
INSERT
BETWEEN
E
ORIGINAL
ORIGINAL
NEXT
DEF
DELETE
SELF
P
REMOVE
AND
RETURN
THE
ELEMENT
AT
POSITION
P
ORIGINAL
SELF
VALIDATE
P
RETURN
SELF
DELETE
NODE
ORIGINAL
INHERITED
METHOD
RETURNS
ELEMENT
DEF
REPLACE
SELF
P
E
REPLACE
THE
ELEMENT
AT
POSITION
P
WITH
E
RETURN
THE
ELEMENT
FORMERLY
AT
POSITION
P
ORIGINAL
SELF
VALIDATE
P
OLD
VALUE
ORIGINAL
ELEMENT
TEMPORARILY
STORE
OLD
ELEMENT
ORIGINAL
ELEMENT
E
REPLACE
WITH
NEW
ELEMENT
RETURN
OLD
VALUE
RETURN
THE
OLD
ELEMENT
VALUE
CODE
FRAGMENT
A
POSITIONALLIST
CLASS
BASED
ON
A
DOUBLY
LINKED
LIST
CONTIN
UED
FROM
CODE
FRAGMENTS
AND
SORTING
A
POSITIONAL
LIST
SORTING
A
POSITIONAL
LIST
IN
SECTION
WE
INTRODUCED
THE
INSERTION
SORT
ALGORITHM
IN
THE
CONTEXT
OF
AN
ARRAY
BASED
SEQUENCE
IN
THIS
SECTION
WE
DEVELOP
AN
IMPLEMENTATION
THAT
OPERATES
ON
A
POSITIONALLIST
RELYING
ON
THE
SAME
HIGH
LEVEL
ALGORITHM
IN
WHICH
EACH
ELEMENT
IS
PLACED
RELATIVE
TO
A
GROWING
COLLECTION
OF
PREVIOUSLY
SORTED
ELEMENTS
WE
MAINTAIN
A
VARIABLE
NAMED
MARKER
THAT
REPRESENTS
THE
RIGHTMOST
POSITION
OF
THE
CURRENTLY
SORTED
PORTION
OF
A
LIST
DURING
EACH
PASS
WE
CONSIDER
THE
POSITION
JUST
PAST
THE
MARKER
AS
THE
PIVOT
AND
CONSIDER
WHERE
THE
PIVOT
ELEMENT
BELONGS
RELATIVE
TO
THE
SORTED
PORTION
WE
USE
ANOTHER
VARIABLE
NAMED
WALK
TO
MOVE
LEFTWARD
FROM
THE
MARKER
AS
LONG
AS
THERE
REMAINS
A
PRECEDING
ELEMENT
WITH
VALUE
LARGER
THAN
THE
PIVOT
A
TYPICAL
CONFIGURATION
OF
THESE
VARIABLES
IS
DIAGRAMMED
IN
FIGURE
A
PYTHON
IMPLEMENTATION
OF
THIS
STRATEGY
IS
GIVEN
IN
CODE
WALK
PIVOT
MARKER
FIGURE
OVERVIEW
OF
ONE
STEP
OF
OUR
INSERTION
SORT
ALGORITHM
THE
SHADED
ELEMENTS
THOSE
UP
TO
AND
INCLUDING
MARKER
HAVE
ALREADY
BEEN
SORTED
IN
THIS
STEP
THE
PIVOT
ELEMENT
SHOULD
BE
RELOCATED
IMMEDIATELY
BEFORE
THE
WALK
POSITION
DEF
INSERTION
SORT
L
SORT
POSITIONALLIST
OF
COMPARABLE
ELEMENTS
INTO
NONDECREASING
ORDER
IF
LEN
L
OTHERWISE
NO
NEED
TO
SORT
IT
MARKER
L
FIRST
WHILE
MARKER
L
LAST
PIVOT
L
AFTER
MARKER
NEXT
ITEM
TO
PLACE
VALUE
PIVOT
ELEMENT
IF
VALUE
MARKER
ELEMENT
PIVOT
IS
ALREADY
SORTED
MARKER
PIVOT
PIVOT
BECOMES
NEW
MARKER
ELSE
MUST
RELOCATE
PIVOT
WALK
MARKER
FIND
LEFTMOST
ITEM
GREATER
THAN
VALUE
WHILE
WALK
L
FIRST
AND
L
BEFORE
WALK
ELEMENT
VALUE
WALK
L
BEFORE
WALK
L
DELETE
PIVOT
L
ADD
BEFORE
WALK
VALUE
REINSERT
VALUE
BEFORE
WALK
CODE
FRAGMENT
PYTHON
CODE
FOR
PERFORMING
INSERTION
SORT
ON
A
POSITIONAL
LIST
CHAPTER
LINKED
LISTS
CASE
STUDY
MAINTAINING
ACCESS
FREQUENCIES
THE
POSITIONAL
LIST
ADT
IS
USEFUL
IN
A
NUMBER
OF
SETTINGS
FOR
EXAMPLE
A
PROGRAM
THAT
SIMULATES
A
GAME
OF
CARDS
COULD
MODEL
EACH
PERSON
HAND
AS
A
POSITIONAL
LIST
EXERCISE
P
SINCE
MOST
PEOPLE
KEEP
CARDS
OF
THE
SAME
SUIT
TOGETHER
INSERTING
AND
REMOVING
CARDS
FROM
A
PERSON
HAND
COULD
BE
IMPLEMENTED
USING
THE
METHODS
OF
THE
POSITIONAL
LIST
ADT
WITH
THE
POSITIONS
BEING
DETERMINED
BY
A
NATURAL
ORDER
OF
THE
SUITS
LIKEWISE
A
SIMPLE
TEXT
EDITOR
EMBEDS
THE
NOTION
OF
POSITIONAL
INSERTION
AND
DELETION
SINCE
SUCH
EDITORS
TYPICALLY
PERFORM
ALL
UPDATES
RELATIVE
TO
A
CURSOR
WHICH
REPRESENTS
THE
CURRENT
POSITION
IN
THE
LIST
OF
CHARACTERS
OF
TEXT
BEING
EDITED
IN
THIS
SECTION
WE
CONSIDER
MAINTAINING
A
COLLECTION
OF
ELEMENTS
WHILE
KEEPING
TRACK
OF
THE
NUMBER
OF
TIMES
EACH
ELEMENT
IS
ACCESSED
KEEPING
SUCH
ACCESS
COUNTS
ALLOWS
US
TO
KNOW
WHICH
ELEMENTS
ARE
AMONG
THE
MOST
POPULAR
EXAMPLES
OF
SUCH
SCENARIOS
INCLUDE
A
WEB
BROWSER
THAT
KEEPS
TRACK
OF
A
USER
MOST
ACCESSED
URLS
OR
A
MUSIC
COLLECTION
THAT
MAINTAINS
A
LIST
OF
THE
MOST
FREQUENTLY
PLAYED
SONGS
FOR
A
USER
WE
MODEL
THIS
WITH
A
NEW
FAVORITES
LIST
ADT
THAT
SUPPORTS
THE
LEN
AND
IS
EMPTY
METHODS
AS
WELL
AS
THE
FOLLOWING
ACCESS
E
ACCESS
THE
ELEMENT
E
INCREMENTING
ITS
ACCESS
COUNT
AND
ADDING
IT
TO
THE
FAVORITES
LIST
IF
IT
IS
NOT
ALREADY
PRESENT
REMOVE
E
REMOVE
ELEMENT
E
FROM
THE
FAVORITES
LIST
IF
PRESENT
TOP
K
RETURN
AN
ITERATION
OF
THE
K
MOST
ACCESSED
ELEMENTS
USING
A
SORTED
LIST
OUR
FIRST
APPROACH
FOR
MANAGING
A
LIST
OF
FAVORITES
IS
TO
STORE
ELEMENTS
IN
A
LINKED
LIST
KEEPING
THEM
IN
NONINCREASING
ORDER
OF
ACCESS
COUNTS
WE
ACCESS
OR
REMOVE
AN
ELEMENT
BY
SEARCHING
THE
LIST
FROM
THE
MOST
FREQUENTLY
ACCESSED
TO
THE
LEAST
FREQUENTLY
ACCESSED
REPORTING
THE
TOP
K
MOST
ACCESSED
ELEMENTS
IS
EASY
AS
THEY
ARE
THE
FIRST
K
ENTRIES
OF
THE
LIST
TO
MAINTAIN
THE
INVARIANT
THAT
ELEMENTS
ARE
STORED
IN
NONINCREASING
ORDER
OF
ACCESS
COUNTS
WE
MUST
CONSIDER
HOW
A
SINGLE
ACCESS
OPERATION
MAY
AFFECT
THE
ORDER
THE
ACCESSED
ELEMENT
COUNT
INCREASES
BY
ONE
AND
SO
IT
MAY
BECOME
LARGER
THAN
ONE
OR
MORE
OF
ITS
PRECEDING
NEIGHBORS
IN
THE
LIST
THEREBY
VIOLATING
THE
INVARIANT
FORTUNATELY
WE
CAN
REESTABLISH
THE
SORTED
INVARIANT
USING
A
TECHNIQUE
SIMILAR
TO
A
SINGLE
PASS
OF
THE
INSERTION
SORT
ALGORITHM
INTRODUCED
IN
THE
PREVIOUS
SECTION
WE
CAN
PERFORM
A
BACKWARD
TRAVERSAL
OF
THE
LIST
STARTING
AT
THE
POSITION
OF
THE
ELEMENT
WHOSE
ACCESS
COUNT
HAS
INCREASED
UNTIL
WE
LOCATE
A
VALID
POSITION
AFTER
WHICH
THE
ELEMENT
CAN
BE
RELOCATED
CASE
STUDY
MAINTAINING
ACCESS
FREQUENCIES
USING
THE
COMPOSITION
PATTERN
WE
WISH
TO
IMPLEMENT
A
FAVORITES
LIST
BY
MAKING
USE
OF
A
POSITIONALLIST
FOR
STORAGE
IF
ELEMENTS
OF
THE
POSITIONAL
LIST
WERE
SIMPLY
ELEMENTS
OF
THE
FAVORITES
LIST
WE
WOULD
BE
CHALLENGED
TO
MAINTAIN
ACCESS
COUNTS
AND
TO
KEEP
THE
PROPER
COUNT
WITH
THE
ASSOCIATED
ELEMENT
AS
THE
CONTENTS
OF
THE
LIST
ARE
REORDERED
WE
USE
A
GENERAL
OBJECT
ORIENTED
DESIGN
PATTERN
THE
COMPOSITION
PATTERN
IN
WHICH
WE
DEFINE
A
SINGLE
OBJECT
THAT
IS
COMPOSED
OF
TWO
OR
MORE
OTHER
OBJECTS
SPECIFICALLY
WE
DEFINE
A
NONPUBLIC
NESTED
CLASS
ITEM
THAT
STORES
THE
ELEMENT
AND
ITS
ACCESS
COUNT
AS
A
SINGLE
INSTANCE
WE
THEN
MAINTAIN
OUR
FAVORITES
LIST
AS
A
POSITIONALLIST
OF
ITEM
INSTANCES
SO
THAT
THE
ACCESS
COUNT
FOR
A
USER
ELEMENT
IS
EMBEDDED
ALONGSIDE
IT
IN
OUR
REPRESENTATION
AN
ITEM
IS
NEVER
EXPOSED
TO
A
USER
OF
A
FAVORITESLIST
CLASS
FAVORITESLIST
LIST
OF
ELEMENTS
ORDERED
FROM
MOST
FREQUENTLY
ACCESSED
TO
LEAST
NESTED
ITEM
CLASS
CLASS
ITEM
SLOTS
STREAMLINE
MEMORY
USAGE
DEF
INIT
SELF
E
SELF
VALUE
E
THE
USER
ELEMENT
SELF
COUNT
ACCESS
COUNT
INITIALLY
ZERO
NONPUBLIC
UTILITIES
DEF
FIND
POSITION
SELF
E
SEARCH
FOR
ELEMENT
E
AND
RETURN
ITS
POSITION
OR
NONE
IF
NOT
FOUND
WALK
SELF
DATA
FIRST
WHILE
WALK
IS
NOT
NONE
AND
WALK
ELEMENT
VALUE
E
WALK
SELF
DATA
AFTER
WALK
RETURN
WALK
DEF
MOVE
UP
SELF
P
MOVE
ITEM
AT
POSITION
P
EARLIER
IN
THE
LIST
BASED
ON
ACCESS
COUNT
IF
P
SELF
DATA
FIRST
CONSIDER
MOVING
CNT
P
ELEMENT
COUNT
WALK
SELF
DATA
BEFORE
P
IF
CNT
WALK
ELEMENT
COUNT
MUST
SHIFT
FORWARD
WHILE
WALK
SELF
DATA
FIRST
AND
CNT
SELF
DATA
BEFORE
WALK
ELEMENT
COUNT
WALK
SELF
DATA
BEFORE
WALK
SELF
DATA
ADD
BEFORE
WALK
SELF
DATA
DELETE
P
DELETE
REINSERT
CODE
FRAGMENT
CLASS
FAVORITESLIST
CONTINUES
IN
CODE
FRAGMENT
CHAPTER
LINKED
LISTS
PUBLIC
METHODS
DEF
INIT
SELF
CREATE
AN
EMPTY
LIST
OF
FAVORITES
SELF
DATA
POSITIONALLIST
WILL
BE
LIST
OF
ITEM
INSTANCES
DEF
LEN
SELF
RETURN
NUMBER
OF
ENTRIES
ON
FAVORITES
LIST
RETURN
LEN
SELF
DATA
DEF
IS
EMPTY
SELF
RETURN
TRUE
IF
LIST
IS
EMPTY
RETURN
LEN
SELF
DATA
DEF
ACCESS
SELF
E
ACCESS
ELEMENT
E
THEREBY
INCREASING
ITS
ACCESS
COUNT
P
SELF
FIND
POSITION
E
TRY
TO
LOCATE
EXISTING
ELEMENT
IF
P
IS
NONE
P
SELF
DATA
ADD
LAST
SELF
ITEM
E
IF
NEW
PLACE
AT
END
P
ELEMENT
COUNT
ALWAYS
INCREMENT
COUNT
SELF
MOVE
UP
P
CONSIDER
MOVING
FORWARD
DEF
REMOVE
SELF
E
REMOVE
ELEMENT
E
FROM
THE
LIST
OF
FAVORITES
P
SELF
FIND
POSITION
E
TRY
TO
LOCATE
EXISTING
ELEMENT
IF
P
IS
NOT
NONE
SELF
DATA
DELETE
P
DELETE
IF
FOUND
DEF
TOP
SELF
K
GENERATE
SEQUENCE
OF
TOP
K
ELEMENTS
IN
TERMS
OF
ACCESS
COUNT
IF
NOT
K
LEN
SELF
RAISE
VALUEERROR
ILLEGAL
VALUE
FOR
K
WALK
SELF
DATA
FIRST
FOR
J
IN
RANGE
K
ITEM
WALK
ELEMENT
ELEMENT
OF
LIST
IS
ITEM
YIELD
ITEM
VALUE
REPORT
USER
ELEMENT
WALK
SELF
DATA
AFTER
WALK
CODE
FRAGMENT
CLASS
FAVORITESLIST
CONTINUED
FROM
CODE
FRAGMENT
CASE
STUDY
MAINTAINING
ACCESS
FREQUENCIES
USING
A
LIST
WITH
THE
MOVE
TO
FRONT
HEURISTIC
THE
PREVIOUS
IMPLEMENTATION
OF
A
FAVORITES
LIST
PERFORMS
THE
ACCESS
E
METHOD
IN
TIME
PROPORTIONAL
TO
THE
INDEX
OF
E
IN
THE
FAVORITES
LIST
THAT
IS
IF
E
IS
THE
KTH
MOST
POPULAR
ELEMENT
IN
THE
FAVORITES
LIST
THEN
ACCESSING
IT
TAKES
O
K
TIME
IN
MANY
REAL
LIFE
ACCESS
SEQUENCES
E
G
WEB
PAGES
VISITED
BY
A
USER
ONCE
AN
ELEMENT
IS
ACCESSED
IT
IS
MORE
LIKELY
TO
BE
ACCESSED
AGAIN
IN
THE
NEAR
FUTURE
SUCH
SCENARIOS
ARE
SAID
TO
POSSESS
LOCALITY
OF
REFERENCE
A
HEURISTIC
OR
RULE
OF
THUMB
THAT
ATTEMPTS
TO
TAKE
ADVANTAGE
OF
THE
LOCALITY
OF
REFERENCE
THAT
IS
PRESENT
IN
AN
ACCESS
SEQUENCE
IS
THE
MOVE
TO
FRONT
HEURISTIC
TO
APPLY
THIS
HEURISTIC
EACH
TIME
WE
ACCESS
AN
ELEMENT
WE
MOVE
IT
ALL
THE
WAY
TO
THE
FRONT
OF
THE
LIST
OUR
HOPE
OF
COURSE
IS
THAT
THIS
ELEMENT
WILL
BE
ACCESSED
AGAIN
IN
THE
NEAR
FUTURE
CONSIDER
FOR
EXAMPLE
A
SCENARIO
IN
WHICH
WE
HAVE
N
ELEMENTS
AND
THE
FOLLOWING
SERIES
OF
ACCESSES
ELEMENT
IS
ACCESSED
N
TIMES
ELEMENT
IS
ACCESSED
N
TIMES
ELEMENT
N
IS
ACCESSED
N
TIMES
IF
WE
STORE
THE
ELEMENTS
SORTED
BY
THEIR
ACCESS
COUNTS
INSERTING
EACH
ELEMENT
THE
FIRST
TIME
IT
IS
ACCESSED
THEN
EACH
ACCESS
TO
ELEMENT
RUNS
IN
O
TIME
EACH
ACCESS
TO
ELEMENT
RUNS
IN
O
TIME
EACH
ACCESS
TO
ELEMENT
N
RUNS
IN
O
N
TIME
THUS
THE
TOTAL
TIME
FOR
PERFORMING
THE
SERIES
OF
ACCESSES
IS
PROPORTIONAL
TO
N
N
N
N
N
N
WHICH
IS
O
N
N
ON
THE
OTHER
HAND
IF
WE
USE
THE
MOVE
TO
FRONT
HEURISTIC
INSERTING
EACH
ELEMENT
THE
FIRST
TIME
IT
IS
ACCESSED
THEN
EACH
SUBSEQUENT
ACCESS
TO
ELEMENT
TAKES
O
TIME
EACH
SUBSEQUENT
ACCESS
TO
ELEMENT
TAKES
O
TIME
EACH
SUBSEQUENT
ACCESS
TO
ELEMENT
N
RUNS
IN
O
TIME
SO
THE
RUNNING
TIME
FOR
PERFORMING
ALL
THE
ACCESSES
IN
THIS
CASE
IS
O
THUS
THE
MOVE
TO
FRONT
IMPLEMENTATION
HAS
FASTER
ACCESS
TIMES
FOR
THIS
SCENARIO
STILL
THE
MOVE
TO
FRONT
APPROACH
IS
JUST
A
HEURISTIC
FOR
THERE
ARE
ACCESS
SEQUENCES
WHERE
USING
THE
MOVE
TO
FRONT
APPROACH
IS
SLOWER
THAN
SIMPLY
KEEPING
THE
FAVORITES
LIST
ORDERED
BY
ACCESS
COUNTS
CHAPTER
LINKED
LISTS
THE
TRADE
OFFS
WITH
THE
MOVE
TO
FRONT
HEURISTIC
IF
WE
NO
LONGER
MAINTAIN
THE
ELEMENTS
OF
THE
FAVORITES
LIST
ORDERED
BY
THEIR
ACCESS
COUNTS
WHEN
WE
ARE
ASKED
TO
FIND
THE
K
MOST
ACCESSED
ELEMENTS
WE
NEED
TO
SEARCH
FOR
THEM
WE
WILL
IMPLEMENT
THE
TOP
K
METHOD
AS
FOLLOWS
WE
COPY
ALL
ENTRIES
OF
OUR
FAVORITES
LIST
INTO
ANOTHER
LIST
NAMED
TEMP
WE
SCAN
THE
TEMP
LIST
K
TIMES
IN
EACH
SCAN
WE
FIND
THE
ENTRY
WITH
THE
LARGEST
ACCESS
COUNT
REMOVE
THIS
ENTRY
FROM
TEMP
AND
REPORT
IT
IN
THE
RESULTS
THIS
IMPLEMENTATION
OF
METHOD
TOP
TAKES
O
KN
TIME
THUS
WHEN
K
IS
A
CONSTANT
METHOD
TOP
RUNS
IN
O
N
TIME
THIS
OCCURS
FOR
EXAMPLE
WHEN
WE
WANT
TO
GET
THE
TOP
TEN
LIST
HOWEVER
IF
K
IS
PROPORTIONAL
TO
N
THEN
TOP
RUNS
IN
O
TIME
THIS
OCCURS
FOR
EXAMPLE
WHEN
WE
WANT
A
TOP
LIST
IN
CHAPTER
WE
WILL
INTRODUCE
A
DATA
STRUCTURE
THAT
WILL
ALLOW
US
TO
IMPLEMENT
TOP
IN
O
N
K
LOG
N
TIME
SEE
EXERCISE
P
AND
MORE
ADVANCED
TECHNIQUES
COULD
BE
USED
TO
PERFORM
TOP
IN
O
N
K
LOG
K
TIME
WE
COULD
EASILY
ACHIEVE
O
N
LOG
N
TIME
IF
WE
USE
A
STANDARD
SORTING
ALGORITHM
TO
REORDER
THE
TEMPORARY
LIST
BEFORE
REPORTING
THE
TOP
K
SEE
CHAPTER
THIS
AP
PROACH
WOULD
BE
PREFERRED
TO
THE
ORIGINAL
IN
THE
CASE
THAT
K
IS
LOG
N
RECALL
THE
BIG
OMEGA
NOTATION
INTRODUCED
IN
SECTION
TO
GIVE
AN
ASYMPTOTIC
LOWER
BOUND
ON
THE
RUNNING
TIME
OF
AN
ALGORITHM
THERE
IS
A
MORE
SPECIALIZED
SORTING
ALGORITHM
SEE
SECTION
THAT
CAN
TAKE
ADVANTAGE
OF
THE
FACT
THAT
ACCESS
COUNTS
ARE
INTEGERS
IN
ORDER
TO
ACHIEVE
O
N
TIME
FOR
TOP
FOR
ANY
VALUE
OF
K
IMPLEMENTING
THE
MOVE
TO
FRONT
HEURISTIC
IN
PYTHON
WE
GIVE
AN
IMPLEMENTATION
OF
A
FAVORITES
LIST
USING
THE
MOVE
TO
FRONT
HEURISTIC
IN
CODE
FRAGMENT
THE
NEW
FAVORITESLISTMTF
CLASS
INHERITS
MOST
OF
ITS
FUNC
TIONALITY
FROM
THE
ORIGINAL
FAVORITESLIST
AS
A
BASE
CLASS
BY
OUR
ORIGINAL
DESIGN
THE
ACCESS
METHOD
OF
THE
ORIGINAL
CLASS
RELIES
ON
A
NON
PUBLIC
UTILITY
NAMED
MOVE
UP
TO
ENACT
THE
POTENTIAL
SHIFTING
OF
AN
ELEMENT
FORWARD
IN
THE
LIST
AFTER
ITS
ACCESS
COUNT
HAD
BEEN
INCREMENTED
THEREFORE
WE
IMPLEMENT
THE
MOVE
TO
FRONT
HEURISTIC
BY
SIMPLY
OVERRIDING
THE
MOVE
UP
METHOD
SO
THAT
EACH
ACCESSED
ELEMENT
IS
MOVED
DIRECTLY
TO
THE
FRONT
OF
THE
LIST
IF
NOT
ALREADY
THERE
THIS
ACTION
IS
EASILY
IMPLEMENTED
BY
MEANS
OF
THE
POSITIONAL
LIST
ADT
THE
MORE
COMPLEX
PORTION
OF
OUR
FAVORITESLISTMTF
CLASS
IS
THE
NEW
DEFINITION
FOR
THE
TOP
METHOD
WE
RELY
ON
THE
FIRST
OF
THE
APPROACHES
OUTLINED
ABOVE
INSERTING
COPIES
OF
THE
ITEMS
INTO
A
TEMPORARY
LIST
AND
THEN
REPEATEDLY
FINDING
REPORTING
AND
REMOVING
AN
ELEMENT
THAT
HAS
THE
LARGEST
ACCESS
COUNT
OF
THOSE
REMAINING
CASE
STUDY
MAINTAINING
ACCESS
FREQUENCIES
CLASS
FAVORITESLISTMTF
FAVORITESLIST
LIST
OF
ELEMENTS
ORDERED
WITH
MOVE
TO
FRONT
HEURISTIC
WE
OVERRIDE
MOVE
UP
TO
PROVIDE
MOVE
TO
FRONT
SEMANTICS
DEF
MOVE
UP
SELF
P
MOVE
ACCESSED
ITEM
AT
POSITION
P
TO
FRONT
OF
LIST
IF
P
SELF
DATA
FIRST
SELF
DATA
ADD
FIRST
SELF
DATA
DELETE
P
DELETE
REINSERT
WE
OVERRIDE
TOP
BECAUSE
LIST
IS
NO
LONGER
SORTED
DEF
TOP
SELF
K
GENERATE
SEQUENCE
OF
TOP
K
ELEMENTS
IN
TERMS
OF
ACCESS
COUNT
IF
NOT
K
LEN
SELF
RAISE
VALUEERROR
ILLEGAL
VALUE
FOR
K
WE
BEGIN
BY
MAKING
A
COPY
OF
THE
ORIGINAL
LIST
TEMP
POSITIONALLIST
FOR
ITEM
IN
SELF
DATA
POSITIONAL
LISTS
SUPPORT
ITERATION
TEMP
ADD
LAST
ITEM
WE
REPEATEDLY
FIND
REPORT
AND
REMOVE
ELEMENT
WITH
LARGEST
COUNT
FOR
J
IN
RANGE
K
FIND
AND
REPORT
NEXT
HIGHEST
FROM
TEMP
HIGHPOS
TEMP
FIRST
WALK
TEMP
AFTER
HIGHPOS
WHILE
WALK
IS
NOT
NONE
IF
WALK
ELEMENT
COUNT
HIGHPOS
ELEMENT
COUNT
HIGHPOS
WALK
WALK
TEMP
AFTER
WALK
WE
HAVE
FOUND
THE
ELEMENT
WITH
HIGHEST
COUNT
YIELD
HIGHPOS
ELEMENT
VALUE
REPORT
ELEMENT
TO
USER
TEMP
DELETE
HIGHPOS
REMOVE
FROM
TEMP
LIST
CODE
FRAGMENT
CLASS
FAVORITESLISTMTF
IMPLEMENTING
THE
MOVE
TO
FRONT
HEURISTIC
THIS
CLASS
EXTENDS
FAVORITESLIST
CODE
FRAGMENTS
AND
AND
OVERRIDES
METHODS
MOVE
UP
AND
TOP
CHAPTER
LINKED
LISTS
LINK
BASED
VS
ARRAY
BASED
SEQUENCES
WE
CLOSE
THIS
CHAPTER
BY
REFLECTING
ON
THE
RELATIVE
PROS
AND
CONS
OF
ARRAY
BASED
AND
LINK
BASED
DATA
STRUCTURES
THAT
HAVE
BEEN
INTRODUCED
THUS
FAR
THE
DICHOTOMY
BETWEEN
THESE
APPROACHES
PRESENTS
A
COMMON
DESIGN
DECISION
WHEN
CHOOSING
AN
APPROPRIATE
IMPLEMENTATION
OF
A
DATA
STRUCTURE
THERE
IS
NOT
A
ONE
SIZE
FITS
ALL
SO
LUTION
AS
EACH
OFFERS
DISTINCT
ADVANTAGES
AND
DISADVANTAGES
ADVANTAGES
OF
ARRAY
BASED
SEQUENCES
ARRAYS
PROVIDE
O
TIME
ACCESS
TO
AN
ELEMENT
BASED
ON
AN
INTEGER
INDEX
THE
ABILITY
TO
ACCESS
THE
KTH
ELEMENT
FOR
ANY
K
IN
O
TIME
IS
A
HALLMARK
ADVANTAGE
OF
ARRAYS
SEE
SECTION
IN
CONTRAST
LOCATING
THE
KTH
ELEMENT
IN
A
LINKED
LIST
REQUIRES
O
K
TIME
TO
TRAVERSE
THE
LIST
FROM
THE
BEGINNING
OR
POSSIBLY
O
N
K
TIME
IF
TRAVERSING
BACKWARD
FROM
THE
END
OF
A
DOUBLY
LINKED
LIST
OPERATIONS
WITH
EQUIVALENT
ASYMPTOTIC
BOUNDS
TYPICALLY
RUN
A
CONSTANT
FACTOR
MORE
EFFICIENTLY
WITH
AN
ARRAY
BASED
STRUCTURE
VERSUS
A
LINKED
STRUCTURE
AS
AN
EXAMPLE
CONSIDER
THE
TYPICAL
ENQUEUE
OPERATION
FOR
A
QUEUE
IGNORING
THE
ISSUE
OF
RESIZING
AN
ARRAY
THIS
OPERATION
FOR
THE
ARRAYQUEUE
CLASS
SEE
CODE
FRAGMENT
INVOLVES
AN
ARITHMETIC
CALCULATION
OF
THE
NEW
INDEX
AN
INCREMENT
OF
AN
INTEGER
AND
STORING
A
REFERENCE
TO
THE
ELEMENT
IN
THE
ARRAY
IN
CONTRAST
THE
PROCESS
FOR
A
LINKEDQUEUE
SEE
CODE
FRAGMENT
REQUIRES
THE
INSTANTIATION
OF
A
NODE
APPROPRIATE
LINKING
OF
NODES
AND
AN
INCREMENT
OF
AN
INTEGER
WHILE
THIS
OPERATION
COMPLETES
IN
O
TIME
IN
EITHER
MODEL
THE
ACTUAL
NUMBER
OF
CPU
OPERATIONS
WILL
BE
MORE
IN
THE
LINKED
VERSION
ESPECIALLY
GIVEN
THE
INSTANTIATION
OF
THE
NEW
NODE
ARRAY
BASED
REPRESENTATIONS
TYPICALLY
USE
PROPORTIONALLY
LESS
MEMORY
THAN
LINKED
STRUCTURES
THIS
ADVANTAGE
MAY
SEEM
COUNTERINTUITIVE
ESPECIALLY
GIVEN
THAT
THE
LENGTH
OF
A
DYNAMIC
ARRAY
MAY
BE
LONGER
THAN
THE
NUMBER
OF
ELEMENTS
THAT
IT
STORES
BOTH
ARRAY
BASED
LISTS
AND
LINKED
LISTS
ARE
REFERENTIAL
STRUCTURES
SO
THE
PRIMARY
MEMORY
FOR
STORING
THE
ACTUAL
OBJECTS
THAT
ARE
ELEMENTS
IS
THE
SAME
FOR
EITHER
STRUCTURE
WHAT
DIFFERS
IS
THE
AUXILIARY
AMOUNTS
OF
MEMORY
THAT
ARE
USED
BY
THE
TWO
STRUCTURES
FOR
AN
ARRAY
BASED
CONTAINER
OF
N
ELE
MENTS
A
TYPICAL
WORST
CASE
MAY
BE
THAT
A
RECENTLY
RESIZED
DYNAMIC
ARRAY
HAS
ALLOCATED
MEMORY
FOR
OBJECT
REFERENCES
WITH
LINKED
LISTS
MEMORY
MUST
BE
DEVOTED
NOT
ONLY
TO
STORE
A
REFERENCE
TO
EACH
CONTAINED
OBJECT
BUT
ALSO
EXPLICIT
REFERENCES
THAT
LINK
THE
NODES
SO
A
SINGLY
LINKED
LIST
OF
LENGTH
N
ALREADY
REQUIRES
REFERENCES
AN
ELEMENT
REFERENCE
AND
NEXT
REFERENCE
FOR
EACH
NODE
WITH
A
DOUBLY
LINKED
LIST
THERE
ARE
REFERENCES
LINK
BASED
VS
ARRAY
BASED
SEQUENCES
ADVANTAGES
OF
LINK
BASED
SEQUENCES
LINK
BASED
STRUCTURES
PROVIDE
WORST
CASE
TIME
BOUNDS
FOR
THEIR
OPERATIONS
THIS
IS
IN
CONTRAST
TO
THE
AMORTIZED
BOUNDS
ASSOCIATED
WITH
THE
EXPANSION
OR
CONTRACTION
OF
A
DYNAMIC
ARRAY
SEE
SECTION
WHEN
MANY
INDIVIDUAL
OPERATIONS
ARE
PART
OF
A
LARGER
COMPUTATION
AND
WE
ONLY
CARE
ABOUT
THE
TOTAL
TIME
OF
THAT
COMPUTATION
AN
AMORTIZED
BOUND
IS
AS
GOOD
AS
A
WORST
CASE
BOUND
PRECISELY
BECAUSE
IT
GIVES
A
GUARANTEE
ON
THE
SUM
OF
THE
TIME
SPENT
ON
THE
INDIVIDUAL
OPERATIONS
HOWEVER
IF
DATA
STRUCTURE
OPERATIONS
ARE
USED
IN
A
REAL
TIME
SYSTEM
THAT
IS
DE
SIGNED
TO
PROVIDE
MORE
IMMEDIATE
RESPONSES
E
G
AN
OPERATING
SYSTEM
WEB
SERVER
AIR
TRAFFIC
CONTROL
SYSTEM
A
LONG
DELAY
CAUSED
BY
A
SINGLE
AMORTIZED
OPERATION
MAY
HAVE
AN
ADVERSE
EFFECT
LINK
BASED
STRUCTURES
SUPPORT
O
TIME
INSERTIONS
AND
DELETIONS
AT
ARBI
TRARY
POSITIONS
THE
ABILITY
TO
PERFORM
A
CONSTANT
TIME
INSERTION
OR
DELETION
WITH
THE
POSITIONALLIST
CLASS
BY
USING
A
POSITION
TO
EFFICIENTLY
DESCRIBE
THE
LOCATION
OF
THE
OPERATION
IS
PERHAPS
THE
MOST
SIGNIFICANT
ADVANTAGE
OF
THE
LINKED
LIST
THIS
IS
IN
STARK
CONTRAST
TO
AN
ARRAY
BASED
SEQUENCE
IGNORING
THE
ISSUE
OF
RESIZING
AN
ARRAY
INSERTING
OR
DELETING
AN
ELEMENT
FROM
THE
END
OF
AN
ARRAY
BASED
LIST
CAN
BE
DONE
IN
CONSTANT
TIME
HOWEVER
MORE
GENERAL
INSERTIONS
AND
DELETIONS
ARE
EXPENSIVE
FOR
EXAMPLE
WITH
PYTHON
ARRAY
BASED
LIST
CLASS
A
CALL
TO
INSERT
OR
POP
WITH
INDEX
K
USES
O
N
K
TIME
BECAUSE
OF
THE
LOOP
TO
SHIFT
ALL
SUBSEQUENT
ELEMENTS
SEE
SECTION
AS
AN
EXAMPLE
APPLICATION
CONSIDER
A
TEXT
EDITOR
THAT
MAINTAINS
A
DOCUMENT
AS
A
SEQUENCE
OF
CHARACTERS
ALTHOUGH
USERS
OFTEN
ADD
CHARACTERS
TO
THE
END
OF
THE
DOCUMENT
IT
IS
ALSO
POSSIBLE
TO
USE
THE
CURSOR
TO
INSERT
OR
DELETE
ONE
OR
MORE
CHARACTERS
AT
AN
ARBITRARY
POSITION
WITHIN
THE
DOCUMENT
IF
THE
CHARAC
TER
SEQUENCE
WERE
STORED
IN
AN
ARRAY
BASED
SEQUENCE
SUCH
AS
A
PYTHON
LIST
EACH
SUCH
EDIT
OPERATION
MAY
REQUIRE
LINEARLY
MANY
CHARACTERS
TO
BE
SHIFTED
LEADING
TO
O
N
PERFORMANCE
FOR
EACH
EDIT
OPERATION
WITH
A
LINKED
LIST
REP
RESENTATION
AN
ARBITRARY
EDIT
OPERATION
INSERTION
OR
DELETION
OF
A
CHARACTER
AT
THE
CURSOR
CAN
BE
PERFORMED
IN
O
WORST
CASE
TIME
ASSUMING
WE
ARE
GIVEN
A
POSITION
THAT
REPRESENTS
THE
LOCATION
OF
THE
CURSOR
CHAPTER
LINKED
LISTS
EXERCISES
FOR
HELP
WITH
EXERCISES
PLEASE
VISIT
THE
SITE
WWW
WILEY
COM
COLLEGE
GOODRICH
REINFORCEMENT
R
GIVE
AN
ALGORITHM
FOR
FINDING
THE
SECOND
TO
LAST
NODE
IN
A
SINGLY
LINKED
LIST
IN
WHICH
THE
LAST
NODE
IS
INDICATED
BY
A
NEXT
REFERENCE
OF
NONE
R
DESCRIBE
A
GOOD
ALGORITHM
FOR
CONCATENATING
TWO
SINGLY
LINKED
LISTS
L
AND
M
GIVEN
ONLY
REFERENCES
TO
THE
FIRST
NODE
OF
EACH
LIST
INTO
A
SINGLE
LIST
LL
THAT
CONTAINS
ALL
THE
NODES
OF
L
FOLLOWED
BY
ALL
THE
NODES
OF
M
R
DESCRIBE
A
RECURSIVE
ALGORITHM
THAT
COUNTS
THE
NUMBER
OF
NODES
IN
A
SINGLY
LINKED
LIST
R
DESCRIBE
IN
DETAIL
HOW
TO
SWAP
TWO
NODES
X
AND
Y
AND
NOT
JUST
THEIR
CON
TENTS
IN
A
SINGLY
LINKED
LIST
L
GIVEN
REFERENCES
ONLY
TO
X
AND
Y
REPEAT
THIS
EXERCISE
FOR
THE
CASE
WHEN
L
IS
A
DOUBLY
LINKED
LIST
WHICH
ALGORITHM
TAKES
MORE
TIME
R
IMPLEMENT
A
FUNCTION
THAT
COUNTS
THE
NUMBER
OF
NODES
IN
A
CIRCULARLY
LINKED
LIST
R
SUPPOSE
THAT
X
AND
Y
ARE
REFERENCES
TO
NODES
OF
CIRCULARLY
LINKED
LISTS
ALTHOUGH
NOT
NECESSARILY
THE
SAME
LIST
DESCRIBE
A
FAST
ALGORITHM
FOR
TELLING
IF
X
AND
Y
BELONG
TO
THE
SAME
LIST
R
OUR
CIRCULARQUEUE
CLASS
OF
SECTION
PROVIDES
A
ROTATE
METHOD
THAT
HAS
SEMANTICS
EQUIVALENT
TO
Q
ENQUEUE
Q
DEQUEUE
FOR
A
NONEMPTY
QUEUE
IMPLEMENT
SUCH
A
METHOD
FOR
THE
LINKEDQUEUE
CLASS
OF
SEC
TION
WITHOUT
THE
CREATION
OF
ANY
NEW
NODES
R
DESCRIBE
A
NONRECURSIVE
METHOD
FOR
FINDING
BY
LINK
HOPPING
THE
MIDDLE
NODE
OF
A
DOUBLY
LINKED
LIST
WITH
HEADER
AND
TRAILER
SENTINELS
IN
THE
CASE
OF
AN
EVEN
NUMBER
OF
NODES
REPORT
THE
NODE
SLIGHTLY
LEFT
OF
CENTER
AS
THE
MIDDLE
NOTE
THIS
METHOD
MUST
ONLY
USE
LINK
HOPPING
IT
CANNOT
USE
A
COUNTER
WHAT
IS
THE
RUNNING
TIME
OF
THIS
METHOD
R
GIVE
A
FAST
ALGORITHM
FOR
CONCATENATING
TWO
DOUBLY
LINKED
LISTS
L
AND
M
WITH
HEADER
AND
TRAILER
SENTINEL
NODES
INTO
A
SINGLE
LIST
LL
R
THERE
SEEMS
TO
BE
SOME
REDUNDANCY
IN
THE
REPERTOIRE
OF
THE
POSITIONAL
LIST
ADT
AS
THE
OPERATION
L
ADD
FIRST
E
COULD
BE
ENACTED
BY
THE
ALTER
NATIVE
L
ADD
BEFORE
L
FIRST
E
LIKEWISE
L
ADD
LAST
E
MIGHT
BE
PER
FORMED
AS
L
ADD
AFTER
L
LAST
E
EXPLAIN
WHY
THE
METHODS
ADD
FIRST
AND
ADD
LAST
ARE
NECESSARY
EXERCISES
R
IMPLEMENT
A
FUNCTION
WITH
CALLING
SYNTAX
MAX
L
THAT
RETURNS
THE
MAX
IMUM
ELEMENT
FROM
A
POSITIONALLIST
INSTANCE
L
CONTAINING
COMPARABLE
ELEMENTS
R
REDO
THE
PREVIOUSLY
PROBLEM
WITH
MAX
AS
A
METHOD
OF
THE
POSITIONALLIST
CLASS
SO
THAT
CALLING
SYNTAX
L
MAX
IS
SUPPORTED
R
UPDATE
THE
POSITIONALLIST
CLASS
TO
SUPPORT
AN
ADDITIONAL
METHOD
FIND
E
WHICH
RETURNS
THE
POSITION
OF
THE
FIRST
OCCURRENCE
OF
ELEMENT
E
IN
THE
LIST
OR
NONE
IF
NOT
FOUND
R
REPEAT
THE
PREVIOUS
PROCESS
USING
RECURSION
YOUR
METHOD
SHOULD
NOT
CONTAIN
ANY
LOOPS
HOW
MUCH
SPACE
DOES
YOUR
METHOD
USE
IN
ADDITION
TO
THE
SPACE
USED
FOR
L
R
PROVIDE
SUPPORT
FOR
A
REVERSED
METHOD
OF
THE
POSITIONALLIST
CLASS
THAT
IS
SIMILAR
TO
THE
GIVEN
ITER
BUT
THAT
ITERATES
THE
ELEMENTS
IN
REVERSED
ORDER
R
DESCRIBE
AN
IMPLEMENTATION
OF
THE
POSITIONALLIST
METHODS
ADD
LAST
AND
ADD
BEFORE
REALIZED
BY
USING
ONLY
METHODS
IN
THE
SET
IS
EMPTY
FIRST
LAST
PREV
NEXT
ADD
AFTER
AND
ADD
FIRST
R
IN
THE
FAVORITESLISTMTF
CLASS
WE
RELY
ON
PUBLIC
METHODS
OF
THE
POSITIONAL
LIST
ADT
TO
MOVE
AN
ELEMENT
OF
A
LIST
AT
POSITION
P
TO
BECOME
THE
FIRST
ELE
MENT
OF
THE
LIST
WHILE
KEEPING
THE
RELATIVE
ORDER
OF
THE
REMAINING
ELEMENTS
UNCHANGED
INTERNALLY
THAT
COMBINATION
OF
OPERATIONS
CAUSES
ONE
NODE
TO
BE
REMOVED
AND
A
NEW
NODE
TO
BE
INSERTED
AUGMENT
THE
POSITIONALLIST
CLASS
TO
SUPPORT
A
NEW
METHOD
MOVE
TO
FRONT
P
THAT
ACCOMPLISHES
THIS
GOAL
MORE
DIRECTLY
BY
RELINKING
THE
EXISTING
NODE
R
GIVEN
THE
SET
OF
ELEMENT
A
B
C
D
E
F
STORED
IN
A
LIST
SHOW
THE
FINAL
STATE
OF
THE
LIST
ASSUMING
WE
USE
THE
MOVE
TO
FRONT
HEURISTIC
AND
ACCESS
THE
EL
EMENTS
ACCORDING
TO
THE
FOLLOWING
SEQUENCE
A
B
C
D
E
F
A
C
F
B
D
E
R
SUPPOSE
THAT
WE
HAVE
MADE
KN
TOTAL
ACCESSES
TO
THE
ELEMENTS
IN
A
LIST
L
OF
N
ELEMENTS
FOR
SOME
INTEGER
K
WHAT
ARE
THE
MINIMUM
AND
MAXIMUM
NUMBER
OF
ELEMENTS
THAT
HAVE
BEEN
ACCESSED
FEWER
THAN
K
TIMES
R
LET
L
BE
A
LIST
OF
N
ITEMS
MAINTAINED
ACCORDING
TO
THE
MOVE
TO
FRONT
HEURIS
TIC
DESCRIBE
A
SERIES
OF
O
N
ACCESSES
THAT
WILL
REVERSE
L
R
SUPPOSE
WE
HAVE
AN
N
ELEMENT
LIST
L
MAINTAINED
ACCORDING
TO
THE
MOVE
TO
FRONT
HEURISTIC
DESCRIBE
A
SEQUENCE
OF
ACCESSES
THAT
IS
GUARANTEED
TO
TAKE
TIME
TO
PERFORM
ON
L
R
IMPLEMENT
A
CLEAR
METHOD
FOR
THE
FAVORITESLIST
CLASS
THAT
RETURNS
THE
LIST
TO
EMPTY
R
IMPLEMENT
A
RESET
COUNTS
METHOD
FOR
THE
FAVORITESLIST
CLASS
THAT
RESETS
ALL
ELEMENTS
ACCESS
COUNTS
TO
ZERO
WHILE
LEAVING
THE
ORDER
OF
THE
LIST
UNCHANGED
CHAPTER
LINKED
LISTS
CREATIVITY
C
GIVE
A
COMPLETE
IMPLEMENTATION
OF
THE
STACK
ADT
USING
A
SINGLY
LINKED
LIST
THAT
INCLUDES
A
HEADER
SENTINEL
C
GIVE
A
COMPLETE
IMPLEMENTATION
OF
THE
QUEUE
ADT
USING
A
SINGLY
LINKED
LIST
THAT
INCLUDES
A
HEADER
SENTINEL
C
IMPLEMENT
A
METHOD
CONCATENATE
FOR
THE
LINKEDQUEUE
CLASS
THAT
TAKES
ALL
ELEMENTS
OF
LINKEDQUEUE
AND
APPENDS
THEM
TO
THE
END
OF
THE
ORIGINAL
QUEUE
THE
OPERATION
SHOULD
RUN
IN
O
TIME
AND
SHOULD
RESULT
IN
BEING
AN
EMPTY
QUEUE
C
GIVE
A
RECURSIVE
IMPLEMENTATION
OF
A
SINGLY
LINKED
LIST
CLASS
SUCH
THAT
AN
INSTANCE
OF
A
NONEMPTY
LIST
STORES
ITS
FIRST
ELEMENT
AND
A
REFERENCE
TO
A
LIST
OF
REMAINING
ELEMENTS
C
DESCRIBE
A
FAST
RECURSIVE
ALGORITHM
FOR
REVERSING
A
SINGLY
LINKED
LIST
C
DESCRIBE
IN
DETAIL
AN
ALGORITHM
FOR
REVERSING
A
SINGLY
LINKED
LIST
L
USING
ONLY
A
CONSTANT
AMOUNT
OF
ADDITIONAL
SPACE
AND
NOT
USING
ANY
RECURSION
C
EXERCISE
P
DESCRIBES
A
LEAKYSTACK
ABSTRACTION
IMPLEMENT
THAT
ADT
USING
A
SINGLY
LINKED
LIST
FOR
STORAGE
C
DESIGN
A
FORWARD
LIST
ADT
THAT
ABSTRACTS
THE
OPERATIONS
ON
A
SINGLY
LINKED
LIST
MUCH
AS
THE
POSITIONAL
LIST
ADT
ABSTRACTS
THE
USE
OF
A
DOUBLY
LINKED
LIST
IMPLEMENT
A
FORWARDLIST
CLASS
THAT
SUPPORTS
SUCH
AN
ADT
C
DESIGN
A
CIRCULAR
POSITIONAL
LIST
ADT
THAT
ABSTRACTS
A
CIRCULARLY
LINKED
LIST
IN
THE
SAME
WAY
THAT
THE
POSITIONAL
LIST
ADT
ABSTRACTS
A
DOUBLY
LINKED
LIST
WITH
A
NOTION
OF
A
DESIGNATED
CURSOR
POSITION
WITHIN
THE
LIST
C
MODIFY
THE
DOUBLYLINKEDBASE
CLASS
TO
INCLUDE
A
REVERSE
METHOD
THAT
RE
VERSES
THE
ORDER
OF
THE
LIST
YET
WITHOUT
CREATING
OR
DESTROYING
ANY
NODES
C
MODIFY
THE
POSITIONALLIST
CLASS
TO
SUPPORT
A
METHOD
SWAP
P
Q
THAT
CAUSES
THE
UNDERLYING
NODES
REFERENCED
BY
POSITIONS
P
AND
Q
TO
BE
EXCHANGED
FOR
EACH
OTHER
RELINK
THE
EXISTING
NODES
DO
NOT
CREATE
ANY
NEW
NODES
C
TO
IMPLEMENT
THE
ITER
METHOD
OF
THE
POSITIONALLIST
CLASS
WE
RELIED
ON
THE
CONVENIENCE
OF
PYTHON
GENERATOR
SYNTAX
AND
THE
YIELD
STATEMENT
GIVE
AN
ALTERNATIVE
IMPLEMENTATION
OF
ITER
BY
DESIGNING
A
NESTED
ITERATOR
CLASS
SEE
SECTION
FOR
DISCUSSION
OF
ITERATORS
C
GIVE
A
COMPLETE
IMPLEMENTATION
OF
THE
POSITIONAL
LIST
ADT
USING
A
DOUBLY
LINKED
LIST
THAT
DOES
NOT
INCLUDE
ANY
SENTINEL
NODES
C
IMPLEMENT
A
FUNCTION
THAT
ACCEPTS
A
POSITIONALLIST
L
OF
N
INTEGERS
SORTED
IN
NONDECREASING
ORDER
AND
ANOTHER
VALUE
V
AND
DETERMINES
IN
O
N
TIME
IF
THERE
ARE
TWO
ELEMENTS
OF
L
THAT
SUM
PRECISELY
TO
V
THE
FUNCTION
SHOULD
RETURN
A
PAIR
OF
POSITIONS
OF
SUCH
ELEMENTS
IF
FOUND
OR
NONE
OTHERWISE
EXERCISES
C
THERE
IS
A
SIMPLE
BUT
INEFFICIENT
ALGORITHM
CALLED
BUBBLE
SORT
FOR
SORTING
A
LIST
L
OF
N
COMPARABLE
ELEMENTS
THIS
ALGORITHM
SCANS
THE
LIST
N
TIMES
WHERE
IN
EACH
SCAN
THE
ALGORITHM
COMPARES
THE
CURRENT
ELEMENT
WITH
THE
NEXT
ONE
AND
SWAPS
THEM
IF
THEY
ARE
OUT
OF
ORDER
IMPLEMENT
A
BUBBLE
SORT
FUNCTION
THAT
TAKES
A
POSITIONAL
LIST
L
AS
A
PARAMETER
WHAT
IS
THE
RUNNING
TIME
OF
THIS
ALGORITHM
ASSUMING
THE
POSITIONAL
LIST
IS
IMPLEMENTED
WITH
A
DOUBLY
LINKED
LIST
C
TO
BETTER
MODEL
A
FIFO
QUEUE
IN
WHICH
ENTRIES
MAY
BE
DELETED
BEFORE
REACHING
THE
FRONT
DESIGN
A
POSITIONALQUEUE
CLASS
THAT
SUPPORTS
THE
COM
PLETE
QUEUE
ADT
YET
WITH
ENQUEUE
RETURNING
A
POSITION
INSTANCE
AND
SUP
PORT
FOR
A
NEW
METHOD
DELETE
P
THAT
REMOVES
THE
ELEMENT
ASSOCIATED
WITH
POSITION
P
FROM
THE
QUEUE
YOU
MAY
USE
THE
ADAPTER
DESIGN
PATTERN
SECTION
USING
A
POSITIONALLIST
AS
YOUR
STORAGE
C
DESCRIBE
AN
EFFICIENT
METHOD
FOR
MAINTAINING
A
FAVORITES
LIST
L
WITH
MOVE
TO
FRONT
HEURISTIC
SUCH
THAT
ELEMENTS
THAT
HAVE
NOT
BEEN
ACCESSED
IN
THE
MOST
RECENT
N
ACCESSES
ARE
AUTOMATICALLY
PURGED
FROM
THE
LIST
C
EXERCISE
C
INTRODUCES
THE
NOTION
OF
A
NATURAL
JOIN
OF
TWO
DATABASES
DESCRIBE
AND
ANALYZE
AN
EFFICIENT
ALGORITHM
FOR
COMPUTING
THE
NATURAL
JOIN
OF
A
LINKED
LIST
A
OF
N
PAIRS
AND
A
LINKED
LIST
B
OF
M
PAIRS
C
WRITE
A
SCOREBOARD
CLASS
THAT
MAINTAINS
THE
TOP
SCORES
FOR
A
GAME
AP
PLICATION
USING
A
SINGLY
LINKED
LIST
RATHER
THAN
THE
ARRAY
THAT
WAS
USED
IN
SECTION
C
DESCRIBE
A
METHOD
FOR
PERFORMING
A
CARD
SHUFFLE
OF
A
LIST
OF
ELEMENTS
BY
CONVERTING
IT
INTO
TWO
LISTS
A
CARD
SHUFFLE
IS
A
PERMUTATION
WHERE
A
LIST
L
IS
CUT
INTO
TWO
LISTS
AND
WHERE
IS
THE
FIRST
HALF
OF
L
AND
IS
THE
SECOND
HALF
OF
L
AND
THEN
THESE
TWO
LISTS
ARE
MERGED
INTO
ONE
BY
TAKING
THE
FIRST
ELEMENT
IN
THEN
THE
FIRST
ELEMENT
IN
FOLLOWED
BY
THE
SECOND
ELEMENT
IN
THE
SECOND
ELEMENT
IN
AND
SO
ON
PROJECTS
P
WRITE
A
SIMPLE
TEXT
EDITOR
THAT
STORES
AND
DISPLAYS
A
STRING
OF
CHARACTERS
USING
THE
POSITIONAL
LIST
ADT
TOGETHER
WITH
A
CURSOR
OBJECT
THAT
HIGHLIGHTS
A
POSITION
IN
THIS
STRING
A
SIMPLE
INTERFACE
IS
TO
PRINT
THE
STRING
AND
THEN
TO
USE
A
SECOND
LINE
OF
OUTPUT
TO
UNDERLINE
THE
POSITION
OF
THE
CURSOR
YOUR
EDITOR
SHOULD
SUPPORT
THE
FOLLOWING
OPERATIONS
LEFT
MOVE
CURSOR
LEFT
ONE
CHARACTER
DO
NOTHING
IF
AT
BEGINNING
RIGHT
MOVE
CURSOR
RIGHT
ONE
CHARACTER
DO
NOTHING
IF
AT
END
INSERT
C
INSERT
THE
CHARACTER
C
JUST
AFTER
THE
CURSOR
DELETE
DELETE
THE
CHARACTER
JUST
AFTER
THE
CURSOR
DO
NOTHING
AT
END
CHAPTER
LINKED
LISTS
P
AN
ARRAY
A
IS
SPARSE
IF
MOST
OF
ITS
ENTRIES
ARE
EMPTY
I
E
NONE
A
LIST
L
CAN
BE
USED
TO
IMPLEMENT
SUCH
AN
ARRAY
EFFICIENTLY
IN
PARTICULAR
FOR
EACH
NONEMPTY
CELL
A
I
WE
CAN
STORE
AN
ENTRY
I
E
IN
L
WHERE
E
IS
THE
ELEMENT
STORED
AT
A
I
THIS
APPROACH
ALLOWS
US
TO
REPRESENT
A
USING
O
M
STORAGE
WHERE
M
IS
THE
NUMBER
OF
NONEMPTY
ENTRIES
IN
A
PROVIDE
SUCH
A
SPARSEARRAY
CLASS
THAT
MINIMALLY
SUPPORTS
METHODS
GETITEM
J
AND
SETITEM
J
E
TO
PROVIDE
STANDARD
INDEXING
OPERATIONS
ANALYZE
THE
EFFICIENCY
OF
THESE
METHODS
P
ALTHOUGH
WE
HAVE
USED
A
DOUBLY
LINKED
LIST
TO
IMPLEMENT
THE
POSITIONAL
LIST
ADT
IT
IS
POSSIBLE
TO
SUPPORT
THE
ADT
WITH
AN
ARRAY
BASED
IMPLE
MENTATION
THE
KEY
IS
TO
USE
THE
COMPOSITION
PATTERN
AND
STORE
A
SEQUENCE
OF
POSITION
ITEMS
WHERE
EACH
ITEM
STORES
AN
ELEMENT
AS
WELL
AS
THAT
ELE
MENT
CURRENT
INDEX
IN
THE
ARRAY
WHENEVER
AN
ELEMENT
PLACE
IN
THE
ARRAY
IS
CHANGED
THE
RECORDED
INDEX
IN
THE
POSITION
MUST
BE
UPDATED
TO
MATCH
GIVEN
A
COMPLETE
CLASS
PROVIDING
SUCH
AN
ARRAY
BASED
IMPLEMENTATION
OF
THE
POSITIONAL
LIST
ADT
WHAT
IS
THE
EFFICIENCY
OF
THE
VARIOUS
OPERATIONS
P
IMPLEMENT
A
CARDHAND
CLASS
THAT
SUPPORTS
A
PERSON
ARRANGING
A
GROUP
OF
CARDS
IN
HIS
OR
HER
HAND
THE
SIMULATOR
SHOULD
REPRESENT
THE
SEQUENCE
OF
CARDS
USING
A
SINGLE
POSITIONAL
LIST
ADT
SO
THAT
CARDS
OF
THE
SAME
SUIT
ARE
KEPT
TOGETHER
IMPLEMENT
THIS
STRATEGY
BY
MEANS
OF
FOUR
FINGERS
INTO
THE
HAND
ONE
FOR
EACH
OF
THE
SUITS
OF
HEARTS
CLUBS
SPADES
AND
DIAMONDS
SO
THAT
ADDING
A
NEW
CARD
TO
THE
PERSON
HAND
OR
PLAYING
A
CORRECT
CARD
FROM
THE
HAND
CAN
BE
DONE
IN
CONSTANT
TIME
THE
CLASS
SHOULD
SUPPORT
THE
FOLLOWING
METHODS
ADD
CARD
R
ADD
A
NEW
CARD
WITH
RANK
R
AND
SUIT
TO
THE
HAND
PLAY
REMOVE
AND
RETURN
A
CARD
OF
SUIT
FROM
THE
PLAYER
HAND
IF
THERE
IS
NO
CARD
OF
SUIT
THEN
REMOVE
AND
RETURN
AN
ARBITRARY
CARD
FROM
THE
HAND
ITER
ITERATE
THROUGH
ALL
CARDS
CURRENTLY
IN
THE
HAND
ALL
OF
SUIT
ITERATE
THROUGH
ALL
CARDS
OF
SUIT
THAT
ARE
CURRENTLY
IN
THE
HAND
CHAPTER
NOTES
A
VIEW
OF
DATA
STRUCTURES
AS
COLLECTIONS
AND
OTHER
PRINCIPLES
OF
OBJECT
ORIENTED
DESIGN
CAN
BE
FOUND
IN
OBJECT
ORIENTED
DESIGN
BOOKS
BY
BOOCH
BUDD
GOLDBERG
AND
ROBSON
AND
LISKOV
AND
GUTTAG
OUR
POSITIONAL
LIST
ADT
IS
DERIVED
FROM
THE
POSITION
ABSTRACTION
INTRODUCED
BY
AHO
HOPCROFT
AND
ULLMAN
AND
THE
LIST
ADT
OF
WOOD
IMPLEMENTATIONS
OF
LINKED
LISTS
ARE
DISCUSSED
BY
KNUTH
CHAPTER
TREES
CONTENTS
GENERAL
TREES
BINARY
TREES
THE
BINARY
TREE
ABSTRACT
DATA
TYPE
PROPERTIES
OF
BINARY
TREES
IMPLEMENTING
TREES
LINKED
STRUCTURE
FOR
BINARY
TREES
ARRAY
BASED
REPRESENTATION
OF
A
BINARY
TREE
LINKED
STRUCTURE
FOR
GENERAL
TREES
TREE
TRAVERSAL
ALGORITHMS
PREORDER
AND
POSTORDER
TRAVERSALS
OF
GENERAL
TREES
BREADTH
FIRST
TREE
TRAVERSAL
INORDER
TRAVERSAL
OF
A
BINARY
TREE
IMPLEMENTING
TREE
TRAVERSALS
IN
PYTHON
APPLICATIONS
OF
TREE
TRAVERSALS
EULER
TOURS
AND
THE
TEMPLATE
METHOD
PATTERN
CASE
STUDY
AN
EXPRESSION
TREE
EXERCISES
CHAPTER
TREES
GENERAL
TREES
PRODUCTIVITY
EXPERTS
SAY
THAT
BREAKTHROUGHS
COME
BY
THINKING
NONLINEARLY
IN
THIS
CHAPTER
WE
DISCUSS
ONE
OF
THE
MOST
IMPORTANT
NONLINEAR
DATA
STRUCTURES
IN
COMPUTING
TREES
TREE
STRUCTURES
ARE
INDEED
A
BREAKTHROUGH
IN
DATA
ORGANIZATION
FOR
THEY
ALLOW
US
TO
IMPLEMENT
A
HOST
OF
ALGORITHMS
MUCH
FASTER
THAN
WHEN
USING
LINEAR
DATA
STRUCTURES
SUCH
AS
ARRAY
BASED
LISTS
OR
LINKED
LISTS
TREES
ALSO
PROVIDE
A
NATURAL
ORGANIZATION
FOR
DATA
AND
CONSEQUENTLY
HAVE
BECOME
UBIQUITOUS
STRUCTURES
IN
FILE
SYSTEMS
GRAPHICAL
USER
INTERFACES
DATABASES
WEB
SITES
AND
OTHER
COMPUTER
SYSTEMS
IT
IS
NOT
ALWAYS
CLEAR
WHAT
PRODUCTIVITY
EXPERTS
MEAN
BY
NONLINEAR
THINKING
BUT
WHEN
WE
SAY
THAT
TREES
ARE
NONLINEAR
WE
ARE
REFERRING
TO
AN
ORGANIZATIONAL
RELATIONSHIP
THAT
IS
RICHER
THAN
THE
SIMPLE
BEFORE
AND
AFTER
RELATIONSHIPS
BE
TWEEN
OBJECTS
IN
SEQUENCES
THE
RELATIONSHIPS
IN
A
TREE
ARE
HIERARCHICAL
WITH
SOME
OBJECTS
BEING
ABOVE
AND
SOME
BELOW
OTHERS
ACTUALLY
THE
MAIN
TERMINOLOGY
FOR
TREE
DATA
STRUCTURES
COMES
FROM
FAMILY
TREES
WITH
THE
TERMS
PARENT
CHILD
ANCESTOR
AND
DESCENDANT
BEING
THE
MOST
COMMON
WORDS
USED
TO
DESCRIBE
RELA
TIONSHIPS
WE
SHOW
AN
EXAMPLE
OF
A
FAMILY
TREE
IN
FIGURE
FIGURE
A
FAMILY
TREE
SHOWING
SOME
DESCENDANTS
OF
ABRAHAM
AS
RECORDED
IN
GENESIS
CHAPTERS
GENERAL
TREES
TREE
DEFINITIONS
AND
PROPERTIES
A
TREE
IS
AN
ABSTRACT
DATA
TYPE
THAT
STORES
ELEMENTS
HIERARCHICALLY
WITH
THE
EXCEP
TION
OF
THE
TOP
ELEMENT
EACH
ELEMENT
IN
A
TREE
HAS
A
PARENT
ELEMENT
AND
ZERO
OR
MORE
CHILDREN
ELEMENTS
A
TREE
IS
USUALLY
VISUALIZED
BY
PLACING
ELEMENTS
INSIDE
OVALS
OR
RECTANGLES
AND
BY
DRAWING
THE
CONNECTIONS
BETWEEN
PARENTS
AND
CHILDREN
WITH
STRAIGHT
LINES
SEE
FIGURE
WE
TYPICALLY
CALL
THE
TOP
ELEMENT
THE
ROOT
OF
THE
TREE
BUT
IT
IS
DRAWN
AS
THE
HIGHEST
ELEMENT
WITH
THE
OTHER
ELEMENTS
BEING
CONNECTED
BELOW
JUST
THE
OPPOSITE
OF
A
BOTANICAL
TREE
FIGURE
A
TREE
WITH
NODES
REPRESENTING
THE
ORGANIZATION
OF
A
FICTITIOUS
COR
PORATION
THE
ROOT
STORES
ELECTRONICS
R
US
THE
CHILDREN
OF
THE
ROOT
STORE
R
D
SALES
PURCHASING
AND
MANUFACTURING
THE
INTERNAL
NODES
STORE
SALES
INTERNA
TIONAL
OVERSEAS
ELECTRONICS
R
US
AND
MANUFACTURING
FORMAL
TREE
DEFINITION
FORMALLY
WE
DEFINE
A
TREE
T
AS
A
SET
OF
NODES
STORING
ELEMENTS
SUCH
THAT
THE
NODES
HAVE
A
PARENT
CHILD
RELATIONSHIP
THAT
SATISFIES
THE
FOLLOWING
PROPERTIES
IF
T
IS
NONEMPTY
IT
HAS
A
SPECIAL
NODE
CALLED
THE
ROOT
OF
T
THAT
HAS
NO
PARENT
EACH
NODE
V
OF
T
DIFFERENT
FROM
THE
ROOT
HAS
A
UNIQUE
PARENT
NODE
W
EVERY
NODE
WITH
PARENT
W
IS
A
CHILD
OF
W
NOTE
THAT
ACCORDING
TO
OUR
DEFINITION
A
TREE
CAN
BE
EMPTY
MEANING
THAT
IT
DOES
NOT
HAVE
ANY
NODES
THIS
CONVENTION
ALSO
ALLOWS
US
TO
DEFINE
A
TREE
RECURSIVELY
SUCH
THAT
A
TREE
T
IS
EITHER
EMPTY
OR
CONSISTS
OF
A
NODE
R
CALLED
THE
ROOT
OF
T
AND
A
POSSIBLY
EMPTY
SET
OF
SUBTREES
WHOSE
ROOTS
ARE
THE
CHILDREN
OF
R
CHAPTER
TREES
OTHER
NODE
RELATIONSHIPS
TWO
NODES
THAT
ARE
CHILDREN
OF
THE
SAME
PARENT
ARE
SIBLINGS
A
NODE
V
IS
EXTERNAL
IF
V
HAS
NO
CHILDREN
A
NODE
V
IS
INTERNAL
IF
IT
HAS
ONE
OR
MORE
CHILDREN
EXTERNAL
NODES
ARE
ALSO
KNOWN
AS
LEAVES
EXAMPLE
IN
SECTION
WE
DISCUSSED
THE
HIERARCHICAL
RELATIONSHIP
BE
TWEEN
FILES
AND
DIRECTORIES
IN
A
COMPUTER
FILE
SYSTEM
ALTHOUGH
AT
THE
TIME
WE
DID
NOT
EMPHASIZE
THE
NOMENCLATURE
OF
A
FILE
SYSTEM
AS
A
TREE
IN
FIGURE
WE
REVISIT
AN
EARLIER
EXAMPLE
WE
SEE
THAT
THE
INTERNAL
NODES
OF
THE
TREE
ARE
ASSOCI
ATED
WITH
DIRECTORIES
AND
THE
LEAVES
ARE
ASSOCIATED
WITH
REGULAR
FILES
IN
THE
UNIX
AND
LINUX
OPERATING
SYSTEMS
THE
ROOT
OF
THE
TREE
IS
APPROPRIATELY
CALLED
THE
ROOT
DIRECTORY
AND
IS
REPRESENTED
BY
THE
SYMBOL
FIGURE
TREE
REPRESENTING
A
PORTION
OF
A
FILE
SYSTEM
A
NODE
U
IS
AN
ANCESTOR
OF
A
NODE
V
IF
U
V
OR
U
IS
AN
ANCESTOR
OF
THE
PARENT
OF
V
CONVERSELY
WE
SAY
THAT
A
NODE
V
IS
A
DESCENDANT
OF
A
NODE
U
IF
U
IS
AN
ANCESTOR
OF
V
FOR
EXAMPLE
IN
FIGURE
IS
AN
ANCESTOR
OF
PAPERS
AND
IS
A
DESCENDANT
OF
THE
SUBTREE
OF
T
ROOTED
AT
A
NODE
V
IS
THE
TREE
CONSISTING
OF
ALL
THE
DESCENDANTS
OF
V
IN
T
INCLUDING
V
ITSELF
IN
FIGURE
THE
SUBTREE
ROOTED
AT
CONSISTS
OF
THE
NODES
GRADES
HOMEWORKS
PROGRAMS
AND
EDGES
AND
PATHS
IN
TREES
AN
EDGE
OF
TREE
T
IS
A
PAIR
OF
NODES
U
V
SUCH
THAT
U
IS
THE
PARENT
OF
V
OR
VICE
VERSA
A
PATH
OF
T
IS
A
SEQUENCE
OF
NODES
SUCH
THAT
ANY
TWO
CONSECUTIVE
NODES
IN
THE
SEQUENCE
FORM
AN
EDGE
FOR
EXAMPLE
THE
TREE
IN
FIGURE
CONTAINS
THE
PATH
PROJECTS
DEMOS
MARKET
GENERAL
TREES
EXAMPLE
THE
INHERITANCE
RELATION
BETWEEN
CLASSES
IN
A
PYTHON
PROGRAM
FORMS
A
TREE
WHEN
SINGLE
INHERITANCE
IS
USED
FOR
EXAMPLE
IN
SECTION
WE
PROVIDED
A
SUMMARY
OF
THE
HIERARCHY
FOR
PYTHON
EXCEPTION
TYPES
AS
PORTRAYED
IN
FIGURE
ORIGINALLY
FIGURE
THE
BASEEXCEPTION
CLASS
IS
THE
ROOT
OF
THAT
HIERARCHY
WHILE
ALL
USER
DEFINED
EXCEPTION
CLASSES
SHOULD
CONVENTIONALLY
BE
DECLARED
AS
DESCENDANTS
OF
THE
MORE
SPECIFIC
EXCEPTION
CLASS
SEE
FOR
EXAMPLE
THE
EMPTY
CLASS
WE
INTRO
DUCED
IN
CODE
FRAGMENT
OF
CHAPTER
FIGURE
A
PORTION
OF
PYTHON
HIERARCHY
OF
EXCEPTION
TYPES
IN
PYTHON
ALL
CLASSES
ARE
ORGANIZED
INTO
A
SINGLE
HIERARCHY
AS
THERE
EXISTS
A
BUILT
IN
CLASS
NAMED
OBJECT
AS
THE
ULTIMATE
BASE
CLASS
IT
IS
A
DIRECT
OR
INDIRECT
BASE
CLASS
OF
ALL
OTHER
TYPES
IN
PYTHON
EVEN
IF
NOT
DECLARED
AS
SUCH
WHEN
DEFINING
A
NEW
CLASS
THEREFORE
THE
HIERARCHY
PICTURED
IN
FIGURE
IS
ONLY
A
PORTION
OF
PYTHON
COMPLETE
CLASS
HIERARCHY
AS
A
PREVIEW
OF
THE
REMAINDER
OF
THIS
CHAPTER
FIGURE
PORTRAYS
OUR
OWN
HIERARCHY
OF
CLASSES
FOR
REPRESENTING
VARIOUS
FORMS
OF
A
TREE
FIGURE
OUR
OWN
INHERITANCE
HIERARCHY
FOR
MODELING
VARIOUS
ABSTRACTIONS
AND
IMPLEMENTATIONS
OF
TREE
DATA
STRUCTURES
IN
THE
REMAINDER
OF
THIS
CHAPTER
WE
PROVIDE
IMPLEMENTATIONS
OF
TREE
BINARYTREE
AND
LINKEDBINARYTREE
CLASSES
AND
HIGH
LEVEL
SKETCHES
FOR
HOW
LINKEDTREE
AND
ARRAYBINARYTREE
MIGHT
BE
DESIGNED
CHAPTER
TREES
ORDERED
TREES
A
TREE
IS
ORDERED
IF
THERE
IS
A
MEANINGFUL
LINEAR
ORDER
AMONG
THE
CHILDREN
OF
EACH
NODE
THAT
IS
WE
PURPOSEFULLY
IDENTIFY
THE
CHILDREN
OF
A
NODE
AS
BEING
THE
FIRST
SECOND
THIRD
AND
SO
ON
SUCH
AN
ORDER
IS
USUALLY
VISUALIZED
BY
ARRANGING
SIBLINGS
LEFT
TO
RIGHT
ACCORDING
TO
THEIR
ORDER
EXAMPLE
THE
COMPONENTS
OF
A
STRUCTURED
DOCUMENT
SUCH
AS
A
BOOK
ARE
HIER
ARCHICALLY
ORGANIZED
AS
A
TREE
WHOSE
INTERNAL
NODES
ARE
PARTS
CHAPTERS
AND
SECTIONS
AND
WHOSE
LEAVES
ARE
PARAGRAPHS
TABLES
FIGURES
AND
SO
ON
SEE
FIGURE
THE
ROOT
OF
THE
TREE
CORRESPONDS
TO
THE
BOOK
ITSELF
WE
COULD
IN
FACT
CONSIDER
EXPANDING
THE
TREE
FURTHER
TO
SHOW
PARAGRAPHS
CONSISTING
OF
SENTENCES
SENTENCES
CONSISTING
OF
WORDS
AND
WORDS
CONSISTING
OF
CHARACTERS
SUCH
A
TREE
IS
AN
EXAMPLE
OF
AN
ORDERED
TREE
BECAUSE
THERE
IS
A
WELL
DEFINED
ORDER
AMONG
THE
CHILDREN
OF
EACH
NODE
FIGURE
AN
ORDERED
TREE
ASSOCIATED
WITH
A
BOOK
LET
LOOK
BACK
AT
THE
OTHER
EXAMPLES
OF
TREES
THAT
WE
HAVE
DESCRIBED
THUS
FAR
AND
CONSIDER
WHETHER
THE
ORDER
OF
CHILDREN
IS
SIGNIFICANT
A
FAMILY
TREE
THAT
DE
SCRIBES
GENERATIONAL
RELATIONSHIPS
AS
IN
FIGURE
IS
OFTEN
MODELED
AS
AN
ORDERED
TREE
WITH
SIBLINGS
ORDERED
ACCORDING
TO
THEIR
BIRTH
IN
CONTRAST
AN
ORGANIZATIONAL
CHART
FOR
A
COMPANY
AS
IN
FIGURE
IS
TYPICALLY
CONSIDERED
AN
UNORDERED
TREE
LIKEWISE
WHEN
USING
A
TREE
TO
DESCRIBE
AN
INHER
ITANCE
HIERARCHY
AS
IN
FIGURE
THERE
IS
NO
PARTICULAR
SIGNIFICANCE
TO
THE
ORDER
AMONG
THE
SUBCLASSES
OF
A
PARENT
CLASS
FINALLY
WE
CONSIDER
THE
USE
OF
A
TREE
IN
MODELING
A
COMPUTER
FILE
SYSTEM
AS
IN
FIGURE
ALTHOUGH
AN
OPERATING
SYSTEM
OFTEN
DISPLAYS
ENTRIES
OF
A
DIRECTORY
IN
A
PARTICULAR
ORDER
E
G
ALPHABETICAL
CHRONO
LOGICAL
SUCH
AN
ORDER
IS
NOT
TYPICALLY
INHERENT
TO
THE
FILE
SYSTEM
REPRESENTATION
GENERAL
TREES
THE
TREE
ABSTRACT
DATA
TYPE
AS
WE
DID
WITH
POSITIONAL
LISTS
IN
SECTION
WE
DEFINE
A
TREE
ADT
USING
THE
CONCEPT
OF
A
POSITION
AS
AN
ABSTRACTION
FOR
A
NODE
OF
A
TREE
AN
ELEMENT
IS
STORED
AT
EACH
POSITION
AND
POSITIONS
SATISFY
PARENT
CHILD
RELATIONSHIPS
THAT
DEFINE
THE
TREE
STRUCTURE
A
POSITION
OBJECT
FOR
A
TREE
SUPPORTS
THE
METHOD
P
ELEMENT
RETURN
THE
ELEMENT
STORED
AT
POSITION
P
THE
TREE
ADT
THEN
SUPPORTS
THE
FOLLOWING
ACCESSOR
METHODS
ALLOWING
A
USER
TO
NAVIGATE
THE
VARIOUS
POSITIONS
OF
A
TREE
T
ROOT
RETURN
THE
POSITION
OF
THE
ROOT
OF
TREE
T
OR
NONE
IF
T
IS
EMPTY
T
IS
ROOT
P
RETURN
TRUE
IF
POSITION
P
IS
THE
ROOT
OF
TREE
T
T
PARENT
P
RETURN
THE
POSITION
OF
THE
PARENT
OF
POSITION
P
OR
NONE
IF
P
IS
THE
ROOT
OF
T
T
NUM
CHILDREN
P
RETURN
THE
NUMBER
OF
CHILDREN
OF
POSITION
P
T
CHILDREN
P
GENERATE
AN
ITERATION
OF
THE
CHILDREN
OF
POSITION
P
T
IS
LEAF
P
RETURN
TRUE
IF
POSITION
P
DOES
NOT
HAVE
ANY
CHILDREN
LEN
T
RETURN
THE
NUMBER
OF
POSITIONS
AND
HENCE
ELEMENTS
THAT
ARE
CONTAINED
IN
TREE
T
T
IS
EMPTY
RETURN
TRUE
IF
TREE
T
DOES
NOT
CONTAIN
ANY
POSITIONS
T
POSITIONS
GENERATE
AN
ITERATION
OF
ALL
POSITIONS
OF
TREE
T
ITER
T
GENERATE
AN
ITERATION
OF
ALL
ELEMENTS
STORED
WITHIN
TREE
T
ANY
OF
THE
ABOVE
METHODS
THAT
ACCEPTS
A
POSITION
AS
AN
ARGUMENT
SHOULD
GENERATE
A
VALUEERROR
IF
THAT
POSITION
IS
INVALID
FOR
T
IF
A
TREE
T
IS
ORDERED
THEN
T
CHILDREN
P
REPORTS
THE
CHILDREN
OF
P
IN
THE
NATURAL
ORDER
IF
P
IS
A
LEAF
THEN
T
CHILDREN
P
GENERATES
AN
EMPTY
ITERATION
IN
SIMILAR
REGARD
IF
TREE
T
IS
EMPTY
THEN
BOTH
T
POSITIONS
AND
ITER
T
GENERATE
EMPTY
ITER
ATIONS
WE
WILL
DISCUSS
GENERAL
MEANS
FOR
ITERATING
THROUGH
ALL
POSITIONS
OF
A
TREE
IN
SECTIONS
WE
DO
NOT
DEFINE
ANY
METHODS
FOR
CREATING
OR
MODIFYING
TREES
AT
THIS
POINT
WE
PREFER
TO
DESCRIBE
DIFFERENT
TREE
UPDATE
METHODS
IN
CONJUNCTION
WITH
SPECIFIC
IMPLEMENTATIONS
OF
THE
TREE
INTERFACE
AND
SPECIFIC
APPLICATIONS
OF
TREES
CHAPTER
TREES
A
TREE
ABSTRACT
BASE
CLASS
IN
PYTHON
IN
DISCUSSING
THE
OBJECT
ORIENTED
DESIGN
PRINCIPLE
OF
ABSTRACTION
IN
SECTION
WE
NOTED
THAT
A
PUBLIC
INTERFACE
FOR
AN
ABSTRACT
DATA
TYPE
IS
OFTEN
MANAGED
IN
PYTHON
VIA
DUCK
TYPING
FOR
EXAMPLE
WE
DEFINED
THE
NOTION
OF
THE
PUBLIC
INTERFACE
FOR
A
QUEUE
ADT
IN
SECTION
AND
HAVE
SINCE
PRESENTED
SEVERAL
CLASSES
THAT
IMPLEMENT
THE
QUEUE
INTERFACE
E
G
ARRAYQUEUE
IN
SECTION
LINKEDQUEUE
IN
SECTION
CIRCULARQUEUE
IN
SECTION
HOWEVER
WE
NEVER
GAVE
ANY
FORMAL
DEFINITION
OF
THE
QUEUE
ADT
IN
PYTHON
ALL
OF
THE
CONCRETE
IMPLEMENTATIONS
WERE
SELF
CONTAINED
CLASSES
THAT
JUST
HAPPEN
TO
ADHERE
TO
THE
SAME
PUBLIC
INTERFACE
A
MORE
FORMAL
MECHANISM
TO
DESIGNATE
THE
RELATIONSHIPS
BETWEEN
DIFFERENT
IMPLEMENTATIONS
OF
THE
SAME
ABSTRACTION
IS
THROUGH
THE
DEFINITION
OF
ONE
CLASS
THAT
SERVES
AS
AN
ABSTRACT
BASE
CLASS
VIA
INHERITANCE
FOR
ONE
OR
MORE
CONCRETE
CLASSES
SEE
SECTION
WE
CHOOSE
TO
DEFINE
A
TREE
CLASS
IN
CODE
FRAGMENT
THAT
SERVES
AS
AN
AB
STRACT
BASE
CLASS
CORRESPONDING
TO
THE
TREE
ADT
OUR
REASON
FOR
DOING
SO
IS
THAT
THERE
IS
QUITE
A
BIT
OF
USEFUL
CODE
THAT
WE
CAN
PROVIDE
EVEN
AT
THIS
LEVEL
OF
ABSTRACTION
AL
LOWING
GREATER
CODE
REUSE
IN
THE
CONCRETE
TREE
IMPLEMENTATIONS
WE
LATER
DEFINE
THE
TREE
CLASS
PROVIDES
A
DEFINITION
OF
A
NESTED
POSITION
CLASS
WHICH
IS
ALSO
ABSTRACT
AND
DECLARATIONS
OF
MANY
OF
THE
ACCESSOR
METHODS
INCLUDED
IN
THE
TREE
ADT
HOWEVER
OUR
TREE
CLASS
DOES
NOT
DEFINE
ANY
INTERNAL
REPRESENTATION
FOR
STOR
ING
A
TREE
AND
FIVE
OF
THE
METHODS
GIVEN
IN
THAT
CODE
FRAGMENT
REMAIN
ABSTRACT
ROOT
PARENT
NUM
CHILDREN
CHILDREN
AND
LEN
EACH
OF
THESE
METHODS
RAISES
A
NOTIMPLEMENTEDERROR
A
MORE
FORMAL
APPROACH
FOR
DEFINING
ABSTRACT
BASE
CLASSES
AND
ABSTRACT
METHODS
USING
PYTHON
ABC
MODULE
IS
DESCRIBED
IN
SECTION
THE
SUBCLASSES
ARE
RESPONSIBLE
FOR
OVERRIDING
ABSTRACT
METHODS
SUCH
AS
CHILDREN
TO
PROVIDE
A
WORKING
IMPLEMENTATION
FOR
EACH
BEHAVIOR
BASED
ON
THEIR
CHOSEN
INTERNAL
REPRESENTATION
ALTHOUGH
THE
TREE
CLASS
IS
AN
ABSTRACT
BASE
CLASS
IT
INCLUDES
SEVERAL
CONCRETE
METHODS
WITH
IMPLEMENTATIONS
THAT
RELY
ON
CALLS
TO
THE
ABSTRACT
METHODS
OF
THE
CLASS
IN
DEFINING
THE
TREE
ADT
IN
THE
PREVIOUS
SECTION
WE
DECLARE
TEN
ACCESSOR
METHODS
FIVE
OF
THOSE
ARE
THE
ONES
WE
LEFT
AS
ABSTRACT
IN
CODE
FRAGMENT
THE
OTHER
FIVE
CAN
BE
IMPLEMENTED
BASED
ON
THE
FORMER
CODE
FRAGMENT
PROVIDES
CONCRETE
IMPLEMENTATIONS
FOR
METHODS
IS
ROOT
IS
LEAF
AND
IS
EMPTY
IN
SECTION
WE
WILL
EXPLORE
GENERAL
ALGORITHMS
FOR
TRAVERSING
A
TREE
THAT
CAN
BE
USED
TO
PROVIDE
CONCRETE
IMPLEMENTATIONS
OF
THE
POSITIONS
AND
ITER
METHODS
WITHIN
THE
TREE
CLASS
THE
BEAUTY
OF
THIS
DESIGN
IS
THAT
THE
CONCRETE
METHODS
DEFINED
WITHIN
THE
TREE
ABSTRACT
BASE
CLASS
WILL
BE
INHERITED
BY
ALL
SUBCLASSES
THIS
PROMOTES
GREATER
CODE
REUSE
AS
THERE
WILL
BE
NO
NEED
FOR
THOSE
SUBCLASSES
TO
REIMPLEMENT
SUCH
BEHAVIORS
WE
NOTE
THAT
WITH
THE
TREE
CLASS
BEING
ABSTRACT
THERE
IS
NO
REASON
TO
CREATE
A
DIRECT
INSTANCE
OF
IT
NOR
WOULD
SUCH
AN
INSTANCE
BE
USEFUL
THE
CLASS
EXISTS
TO
SERVE
AS
A
BASE
FOR
INHERITANCE
AND
USERS
WILL
CREATE
INSTANCES
OF
CONCRETE
SUBCLASSES
GENERAL
TREES
CLASS
TREE
ABSTRACT
BASE
CLASS
REPRESENTING
A
TREE
STRUCTURE
NESTED
POSITION
CLASS
CLASS
POSITION
AN
ABSTRACTION
REPRESENTING
THE
LOCATION
OF
A
SINGLE
ELEMENT
DEF
ELEMENT
SELF
RETURN
THE
ELEMENT
STORED
AT
THIS
POSITION
RAISE
NOTIMPLEMENTEDERROR
MUST
BE
IMPLEMENTED
BY
SUBCLASS
DEF
EQ
SELF
OTHER
RETURN
TRUE
IF
OTHER
POSITION
REPRESENTS
THE
SAME
LOCATION
RAISE
NOTIMPLEMENTEDERROR
MUST
BE
IMPLEMENTED
BY
SUBCLASS
DEF
NE
SELF
OTHER
RETURN
TRUE
IF
OTHER
DOES
NOT
REPRESENT
THE
SAME
LOCATION
RETURN
NOT
SELF
OTHER
OPPOSITE
OF
EQ
ABSTRACT
METHODS
THAT
CONCRETE
SUBCLASS
MUST
SUPPORT
DEF
ROOT
SELF
RETURN
POSITION
REPRESENTING
THE
TREE
ROOT
OR
NONE
IF
EMPTY
RAISE
NOTIMPLEMENTEDERROR
MUST
BE
IMPLEMENTED
BY
SUBCLASS
DEF
PARENT
SELF
P
RETURN
POSITION
REPRESENTING
P
PARENT
OR
NONE
IF
P
IS
ROOT
RAISE
NOTIMPLEMENTEDERROR
MUST
BE
IMPLEMENTED
BY
SUBCLASS
DEF
NUM
CHILDREN
SELF
P
RETURN
THE
NUMBER
OF
CHILDREN
THAT
POSITION
P
HAS
RAISE
NOTIMPLEMENTEDERROR
MUST
BE
IMPLEMENTED
BY
SUBCLASS
DEF
CHILDREN
SELF
P
GENERATE
AN
ITERATION
OF
POSITIONS
REPRESENTING
P
CHILDREN
RAISE
NOTIMPLEMENTEDERROR
MUST
BE
IMPLEMENTED
BY
SUBCLASS
DEF
LEN
SELF
RETURN
THE
TOTAL
NUMBER
OF
ELEMENTS
IN
THE
TREE
RAISE
NOTIMPLEMENTEDERROR
MUST
BE
IMPLEMENTED
BY
SUBCLASS
CODE
FRAGMENT
A
PORTION
OF
OUR
TREE
ABSTRACT
BASE
CLASS
CONTINUED
IN
CODE
FRAGMENT
CHAPTER
TREES
CONCRETE
METHODS
IMPLEMENTED
IN
THIS
CLASS
DEF
IS
ROOT
SELF
P
RETURN
TRUE
IF
POSITION
P
REPRESENTS
THE
ROOT
OF
THE
TREE
RETURN
SELF
ROOT
P
DEF
IS
LEAF
SELF
P
RETURN
TRUE
IF
POSITION
P
DOES
NOT
HAVE
ANY
CHILDREN
RETURN
SELF
NUM
CHILDREN
P
DEF
IS
EMPTY
SELF
RETURN
TRUE
IF
THE
TREE
IS
EMPTY
RETURN
LEN
SELF
CODE
FRAGMENT
SOME
CONCRETE
METHODS
OF
OUR
TREE
ABSTRACT
BASE
CLASS
COMPUTING
DEPTH
AND
HEIGHT
LET
P
BE
THE
POSITION
OF
A
NODE
OF
A
TREE
T
THE
DEPTH
OF
P
IS
THE
NUMBER
OF
ANCESTORS
OF
P
EXCLUDING
P
ITSELF
FOR
EXAMPLE
IN
THE
TREE
OF
FIGURE
THE
NODE
STORING
INTERNATIONAL
HAS
DEPTH
NOTE
THAT
THIS
DEFINITION
IMPLIES
THAT
THE
DEPTH
OF
THE
ROOT
OF
T
IS
THE
DEPTH
OF
P
CAN
ALSO
BE
RECURSIVELY
DEFINED
AS
FOLLOWS
IF
P
IS
THE
ROOT
THEN
THE
DEPTH
OF
P
IS
OTHERWISE
THE
DEPTH
OF
P
IS
ONE
PLUS
THE
DEPTH
OF
THE
PARENT
OF
P
BASED
ON
THIS
DEFINITION
WE
PRESENT
A
SIMPLE
RECURSIVE
ALGORITHM
DEPTH
IN
CODE
FRAGMENT
FOR
COMPUTING
THE
DEPTH
OF
A
POSITION
P
IN
TREE
T
THIS
METHOD
CALLS
ITSELF
RECURSIVELY
ON
THE
PARENT
OF
P
AND
ADDS
TO
THE
VALUE
RETURNED
DEF
DEPTH
SELF
P
RETURN
THE
NUMBER
OF
LEVELS
SEPARATING
POSITION
P
FROM
THE
ROOT
IF
SELF
IS
ROOT
P
RETURN
ELSE
RETURN
SELF
DEPTH
SELF
PARENT
P
CODE
FRAGMENT
METHOD
DEPTH
OF
THE
TREE
CLASS
THE
RUNNING
TIME
OF
T
DEPTH
P
FOR
POSITION
P
IS
O
DP
WHERE
DP
DENOTES
THE
DEPTH
OF
P
IN
THE
TREE
T
BECAUSE
THE
ALGORITHM
PERFORMS
A
CONSTANT
TIME
RECUR
SIVE
STEP
FOR
EACH
ANCESTOR
OF
P
THUS
ALGORITHM
T
DEPTH
P
RUNS
IN
O
N
WORST
CASE
TIME
WHERE
N
IS
THE
TOTAL
NUMBER
OF
POSITIONS
OF
T
BECAUSE
A
POSITION
OF
T
MAY
HAVE
DEPTH
N
IF
ALL
NODES
FORM
A
SINGLE
BRANCH
ALTHOUGH
SUCH
A
RUNNING
TIME
IS
A
FUNCTION
OF
THE
INPUT
SIZE
IT
IS
MORE
INFORMATIVE
TO
CHARACTERIZE
THE
RUNNING
TIME
IN
TERMS
OF
THE
PARAMETER
DP
AS
THIS
PARAMETER
MAY
BE
MUCH
SMALLER
THAN
N
GENERAL
TREES
HEIGHT
THE
HEIGHT
OF
A
POSITION
P
IN
A
TREE
T
IS
ALSO
DEFINED
RECURSIVELY
IF
P
IS
A
LEAF
THEN
THE
HEIGHT
OF
P
IS
OTHERWISE
THE
HEIGHT
OF
P
IS
ONE
MORE
THAN
THE
MAXIMUM
OF
THE
HEIGHTS
OF
P
CHILDREN
THE
HEIGHT
OF
A
NONEMPTY
TREE
T
IS
THE
HEIGHT
OF
THE
ROOT
OF
T
FOR
EXAMPLE
THE
TREE
OF
FIGURE
HAS
HEIGHT
IN
ADDITION
HEIGHT
CAN
ALSO
BE
VIEWED
AS
FOLLOWS
PROPOSITION
THE
HEIGHT
OF
A
NONEMPTY
TREE
T
IS
EQUAL
TO
THE
MAXIMUM
OF
THE
DEPTHS
OF
ITS
LEAF
POSITIONS
WE
LEAVE
THE
JUSTIFICATION
OF
THIS
FACT
TO
AN
EXERCISE
R
WE
PRESENT
AN
ALGORITHM
IMPLEMENTED
IN
CODE
FRAGMENT
AS
A
NONPUBLIC
METHOD
OF
THE
TREE
CLASS
IT
COMPUTES
THE
HEIGHT
OF
A
NONEMPTY
TREE
T
BASED
ON
PROPOSITION
AND
THE
ALGORITHM
DEPTH
FROM
CODE
FRAGMENT
DEF
SELF
WORKS
BUT
O
WORST
CASE
TIME
RETURN
THE
HEIGHT
OF
THE
TREE
RETURN
MAX
SELF
DEPTH
P
FOR
P
IN
SELF
POSITIONS
IF
SELF
IS
LEAF
P
CODE
FRAGMENT
METHOD
OF
THE
TREE
CLASS
NOTE
THAT
THIS
METHOD
CALLS
THE
DEPTH
METHOD
UNFORTUNATELY
ALGORITHM
IS
NOT
VERY
EFFICIENT
WE
HAVE
NOT
YET
DEFINED
THE
POSITIONS
METHOD
WE
WILL
SEE
THAT
IT
CAN
BE
IMPLEMENTED
TO
RUN
IN
O
N
TIME
WHERE
N
IS
THE
NUMBER
OF
POSITIONS
OF
T
BECAUSE
CALLS
ALGORITHM
DEPTH
P
ON
EACH
LEAF
OF
T
ITS
RUNNING
TIME
IS
O
N
P
L
DP
WHERE
L
IS
THE
SET
OF
LEAF
POSITIONS
OF
T
IN
THE
WORST
CASE
THE
SUM
P
L
DP
IS
PROPORTIONAL
TO
SEE
EXERCISE
C
THUS
ALGORITHM
RUNS
IN
O
WORST
CASE
TIME
WE
CAN
COMPUTE
THE
HEIGHT
OF
A
TREE
MORE
EFFICIENTLY
IN
O
N
WORST
CASE
TIME
BY
RELYING
INSTEAD
ON
THE
ORIGINAL
RECURSIVE
DEFINITION
TO
DO
THIS
WE
WILL
PARAM
ETERIZE
A
FUNCTION
BASED
ON
A
POSITION
WITHIN
THE
TREE
AND
CALCULATE
THE
HEIGHT
OF
THE
SUBTREE
ROOTED
AT
THAT
POSITION
ALGORITHM
SHOWN
AS
NONPUBLIC
METHOD
IN
CODE
FRAGMENT
COMPUTES
THE
HEIGHT
OF
TREE
T
IN
THIS
WAY
DEF
SELF
P
TIME
IS
LINEAR
IN
SIZE
OF
SUBTREE
RETURN
THE
HEIGHT
OF
THE
SUBTREE
ROOTED
AT
POSITION
P
IF
SELF
IS
LEAF
P
RETURN
ELSE
RETURN
MAX
SELF
C
FOR
C
IN
SELF
CHILDREN
P
CODE
FRAGMENT
METHOD
FOR
COMPUTING
THE
HEIGHT
OF
A
SUBTREE
ROOTED
AT
A
POSITION
P
OF
A
TREE
CHAPTER
TREES
IT
IS
IMPORTANT
TO
UNDERSTAND
WHY
ALGORITHM
IS
MORE
EFFICIENT
THAN
THE
ALGORITHM
IS
RECURSIVE
AND
IT
PROGRESSES
IN
A
TOP
DOWN
FASHION
IF
THE
METHOD
IS
INITIALLY
CALLED
ON
THE
ROOT
OF
T
IT
WILL
EVENTUALLY
BE
CALLED
ONCE
FOR
EACH
POSITION
OF
T
THIS
IS
BECAUSE
THE
ROOT
EVENTUALLY
INVOKES
THE
RECURSION
ON
EACH
OF
ITS
CHILDREN
WHICH
IN
TURN
INVOKES
THE
RECURSION
ON
EACH
OF
THEIR
CHILDREN
AND
SO
ON
WE
CAN
DETERMINE
THE
RUNNING
TIME
OF
THE
ALGORITHM
BY
SUMMING
OVER
ALL
THE
POSITIONS
THE
AMOUNT
OF
TIME
SPENT
ON
THE
NONRECURSIVE
PART
OF
EACH
CALL
REVIEW
SECTION
FOR
ANALYSES
OF
RECURSIVE
PROCESSES
IN
OUR
IMPLEMENTATION
THERE
IS
A
CONSTANT
AMOUNT
OF
WORK
PER
POSITION
PLUS
THE
OVERHEAD
OF
COMPUTING
THE
MAXIMUM
OVER
THE
ITERATION
OF
CHILDREN
ALTHOUGH
WE
DO
NOT
YET
HAVE
A
CONCRETE
IMPLEMENTATION
OF
CHILDREN
P
WE
ASSUME
THAT
SUCH
AN
ITERATION
IS
GENERATED
IN
O
CP
TIME
WHERE
CP
DENOTES
THE
NUMBER
OF
CHILDREN
OF
P
ALGORITHM
SPENDS
O
CP
TIME
AT
EACH
POSITION
P
TO
COMPUTE
THE
MAXIMUM
AND
ITS
OVERALL
RUNNING
TIME
IS
O
P
CP
O
N
P
CP
IN
ORDER
TO
COMPLETE
THE
ANALYSIS
WE
MAKE
USE
OF
THE
FOLLOWING
PROPERTY
PROPOSITION
LET
T
BE
A
TREE
WITH
N
POSITIONS
AND
LET
CP
DENOTE
THE
NUMBER
OF
CHILDREN
OF
A
POSITION
P
OF
T
THEN
SUMMING
OVER
THE
POSITIONS
OF
T
P
CP
N
JUSTIFICATION
EACH
POSITION
OF
T
WITH
THE
EXCEPTION
OF
THE
ROOT
IS
A
CHILD
OF
ANOTHER
POSITION
AND
THUS
CONTRIBUTES
ONE
UNIT
TO
THE
ABOVE
SUM
BY
PROPOSITION
THE
RUNNING
TIME
OF
ALGORITHM
WHEN
CALLED
ON
THE
ROOT
OF
T
IS
O
N
WHERE
N
IS
THE
NUMBER
OF
POSITIONS
OF
T
REVISITING
THE
PUBLIC
INTERFACE
FOR
OUR
TREE
CLASS
THE
ABILITY
TO
COMPUTE
HEIGHTS
OF
SUBTREES
IS
BENEFICIAL
BUT
A
USER
MIGHT
EXPECT
TO
BE
ABLE
TO
COMPUTE
THE
HEIGHT
OF
THE
ENTIRE
TREE
WITHOUT
EXPLICITLY
DESIGNATING
THE
TREE
ROOT
WE
CAN
WRAP
THE
NON
PUBLIC
IN
OUR
IMPLEMENTATION
WITH
A
PUBLIC
HEIGHT
METHOD
THAT
PROVIDES
A
DEFAULT
INTERPRETATION
WHEN
INVOKED
ON
TREE
T
WITH
SYNTAX
T
HEIGHT
SUCH
AN
IMPLEMENTATION
IS
GIVEN
IN
CODE
FRAGMENT
DEF
HEIGHT
SELF
P
NONE
RETURN
THE
HEIGHT
OF
THE
SUBTREE
ROOTED
AT
POSITION
P
IF
P
IS
NONE
RETURN
THE
HEIGHT
OF
THE
ENTIRE
TREE
IF
P
IS
NONE
P
SELF
ROOT
RETURN
SELF
P
START
RECURSION
CODE
FRAGMENT
PUBLIC
METHOD
TREE
HEIGHT
THAT
COMPUTES
THE
HEIGHT
OF
THE
ENTIRE
TREE
BY
DEFAULT
OR
A
SUBTREE
ROOTED
AT
GIVEN
POSITION
IF
SPECIFIED
BINARY
TREES
BINARY
TREES
A
BINARY
TREE
IS
AN
ORDERED
TREE
WITH
THE
FOLLOWING
PROPERTIES
EVERY
NODE
HAS
AT
MOST
TWO
CHILDREN
EACH
CHILD
NODE
IS
LABELED
AS
BEING
EITHER
A
LEFT
CHILD
OR
A
RIGHT
CHILD
A
LEFT
CHILD
PRECEDES
A
RIGHT
CHILD
IN
THE
ORDER
OF
CHILDREN
OF
A
NODE
THE
SUBTREE
ROOTED
AT
A
LEFT
OR
RIGHT
CHILD
OF
AN
INTERNAL
NODE
V
IS
CALLED
A
LEFT
SUBTREE
OR
RIGHT
SUBTREE
RESPECTIVELY
OF
V
A
BINARY
TREE
IS
PROPER
IF
EACH
NODE
HAS
EITHER
ZERO
OR
TWO
CHILDREN
SOME
PEOPLE
ALSO
REFER
TO
SUCH
TREES
AS
BEING
FULL
BINARY
TREES
THUS
IN
A
PROPER
BINARY
TREE
EVERY
INTERNAL
NODE
HAS
EXACTLY
TWO
CHILDREN
A
BINARY
TREE
THAT
IS
NOT
PROPER
IS
IMPROPER
EXAMPLE
AN
IMPORTANT
CLASS
OF
BINARY
TREES
ARISES
IN
CONTEXTS
WHERE
WE
WISH
TO
REPRESENT
A
NUMBER
OF
DIFFERENT
OUTCOMES
THAT
CAN
RESULT
FROM
ANSWERING
A
SERIES
OF
YES
OR
NO
QUESTIONS
EACH
INTERNAL
NODE
IS
ASSOCIATED
WITH
A
QUESTION
STARTING
AT
THE
ROOT
WE
GO
TO
THE
LEFT
OR
RIGHT
CHILD
OF
THE
CURRENT
NODE
DEPENDING
ON
WHETHER
THE
ANSWER
TO
THE
QUESTION
IS
YES
OR
NO
WITH
EACH
DECISION
WE
FOLLOW
AN
EDGE
FROM
A
PARENT
TO
A
CHILD
EVENTUALLY
TRACING
A
PATH
IN
THE
TREE
FROM
THE
ROOT
TO
A
LEAF
SUCH
BINARY
TREES
ARE
KNOWN
AS
DECISION
TREES
BECAUSE
A
LEAF
POSITION
P
IN
SUCH
A
TREE
REPRESENTS
A
DECISION
OF
WHAT
TO
DO
IF
THE
QUESTIONS
ASSOCIATED
WITH
P
ANCESTORS
ARE
ANSWERED
IN
A
WAY
THAT
LEADS
TO
P
A
DECISION
TREE
IS
A
PROPER
BINARY
TREE
FIGURE
ILLUSTRATES
A
DECISION
TREE
THAT
PROVIDES
RECOMMENDATIONS
TO
A
PROSPECTIVE
INVESTOR
FIGURE
A
DECISION
TREE
PROVIDING
INVESTMENT
ADVICE
CHAPTER
TREES
EXAMPLE
AN
ARITHMETIC
EXPRESSION
CAN
BE
REPRESENTED
BY
A
BINARY
TREE
WHOSE
LEAVES
ARE
ASSOCIATED
WITH
VARIABLES
OR
CONSTANTS
AND
WHOSE
INTERNAL
NODES
ARE
ASSOCIATED
WITH
ONE
OF
THE
OPERATORS
AND
SEE
FIGURE
EACH
NODE
IN
SUCH
A
TREE
HAS
A
VALUE
ASSOCIATED
WITH
IT
IF
A
NODE
IS
LEAF
THEN
ITS
VALUE
IS
THAT
OF
ITS
VARIABLE
OR
CONSTANT
IF
A
NODE
IS
INTERNAL
THEN
ITS
VALUE
IS
DEFINED
BY
APPLYING
ITS
OPERATION
TO
THE
VALUES
OF
ITS
CHILDREN
AN
ARITHMETIC
EXPRESSION
TREE
IS
A
PROPER
BINARY
TREE
SINCE
EACH
OPERATOR
AND
TAKES
EXACTLY
TWO
OPERANDS
OF
COURSE
IF
WE
WERE
TO
ALLOW
UNARY
OPERATORS
LIKE
NEGATION
AS
IN
X
THEN
WE
COULD
HAVE
AN
IMPROPER
BINARY
TREE
FIGURE
A
BINARY
TREE
REPRESENTING
AN
ARITHMETIC
EXPRESSION
THIS
TREE
REPRESENTS
THE
EXPRESSION
THE
VALUE
ASSOCIATED
WITH
THE
INTERNAL
NODE
LABELED
IS
A
RECURSIVE
BINARY
TREE
DEFINITION
INCIDENTALLY
WE
CAN
ALSO
DEFINE
A
BINARY
TREE
IN
A
RECURSIVE
WAY
SUCH
THAT
A
BINARY
TREE
IS
EITHER
EMPTY
OR
CONSISTS
OF
A
NODE
R
CALLED
THE
ROOT
OF
T
THAT
STORES
AN
ELEMENT
A
BINARY
TREE
POSSIBLY
EMPTY
CALLED
THE
LEFT
SUBTREE
OF
T
A
BINARY
TREE
POSSIBLY
EMPTY
CALLED
THE
RIGHT
SUBTREE
OF
T
BINARY
TREES
THE
BINARY
TREE
ABSTRACT
DATA
TYPE
AS
AN
ABSTRACT
DATA
TYPE
A
BINARY
TREE
IS
A
SPECIALIZATION
OF
A
TREE
THAT
SUPPORTS
THREE
ADDITIONAL
ACCESSOR
METHODS
T
LEFT
P
RETURN
THE
POSITION
THAT
REPRESENTS
THE
LEFT
CHILD
OF
P
OR
NONE
IF
P
HAS
NO
LEFT
CHILD
T
RIGHT
P
RETURN
THE
POSITION
THAT
REPRESENTS
THE
RIGHT
CHILD
OF
P
OR
NONE
IF
P
HAS
NO
RIGHT
CHILD
T
SIBLING
P
RETURN
THE
POSITION
THAT
REPRESENTS
THE
SIBLING
OF
P
OR
NONE
IF
P
HAS
NO
SIBLING
JUST
AS
IN
SECTION
FOR
THE
TREE
ADT
WE
DO
NOT
DEFINE
SPECIALIZED
UPDATE
METH
ODS
FOR
BINARY
TREES
HERE
INSTEAD
WE
WILL
CONSIDER
SOME
POSSIBLE
UPDATE
METHODS
WHEN
WE
DESCRIBE
SPECIFIC
IMPLEMENTATIONS
AND
APPLICATIONS
OF
BINARY
TREES
THE
BINARYTREE
ABSTRACT
BASE
CLASS
IN
PYTHON
JUST
AS
TREE
WAS
DEFINED
AS
AN
ABSTRACT
BASE
CLASS
IN
SECTION
WE
DEFINE
A
NEW
BINARYTREE
CLASS
ASSOCIATED
WITH
THE
BINARY
TREE
ADT
WE
RELY
ON
INHERITANCE
TO
DEFINE
THE
BINARYTREE
CLASS
BASED
UPON
THE
EXISTING
TREE
CLASS
HOWEVER
OUR
BINARYTREE
CLASS
REMAINS
ABSTRACT
AS
WE
STILL
DO
NOT
PROVIDE
COMPLETE
SPECIFICA
TIONS
FOR
HOW
SUCH
A
STRUCTURE
WILL
BE
REPRESENTED
INTERNALLY
NOR
IMPLEMENTATIONS
FOR
SOME
NECESSARY
BEHAVIORS
OUR
PYTHON
IMPLEMENTATION
OF
THE
BINARYTREE
CLASS
IS
GIVEN
IN
CODE
FRAG
MENT
BY
USING
INHERITANCE
A
BINARY
TREE
SUPPORTS
ALL
THE
FUNCTIONALITY
THAT
WAS
DEFINED
FOR
GENERAL
TREES
E
G
PARENT
IS
LEAF
ROOT
OUR
NEW
CLASS
ALSO
INHERITS
THE
NESTED
POSITION
CLASS
THAT
WAS
ORIGINALLY
DEFINED
WITHIN
THE
TREE
CLASS
DEFINITION
IN
ADDITION
THE
NEW
CLASS
PROVIDES
DECLARATIONS
FOR
NEW
ABSTRACT
METHODS
LEFT
AND
RIGHT
THAT
SHOULD
BE
SUPPORTED
BY
CONCRETE
SUBCLASSES
OF
BINARYTREE
OUR
NEW
CLASS
ALSO
PROVIDES
TWO
CONCRETE
IMPLEMENTATIONS
OF
METHODS
THE
NEW
SIBLING
METHOD
IS
DERIVED
FROM
THE
COMBINATION
OF
LEFT
RIGHT
AND
PARENT
TYP
ICALLY
WE
IDENTIFY
THE
SIBLING
OF
A
POSITION
P
AS
THE
OTHER
CHILD
OF
P
PARENT
HOWEVER
IF
P
IS
THE
ROOT
IT
HAS
NO
PARENT
AND
THUS
NO
SIBLING
ALSO
P
MAY
BE
THE
ONLY
CHILD
OF
ITS
PARENT
AND
THUS
DOES
NOT
HAVE
A
SIBLING
FINALLY
CODE
FRAGMENT
PROVIDES
A
CONCRETE
IMPLEMENTATION
OF
THE
CHILDREN
METHOD
THIS
METHOD
IS
ABSTRACT
IN
THE
TREE
CLASS
ALTHOUGH
WE
HAVE
STILL
NOT
SPECI
FIED
HOW
THE
CHILDREN
OF
A
NODE
WILL
BE
STORED
WE
DERIVE
A
GENERATOR
FOR
THE
ORDERED
CHILDREN
BASED
UPON
THE
IMPLIED
BEHAVIOR
OF
ABSTRACT
METHODS
LEFT
AND
RIGHT
CHAPTER
TREES
CLASS
BINARYTREE
TREE
ABSTRACT
BASE
CLASS
REPRESENTING
A
BINARY
TREE
STRUCTURE
ADDITIONAL
ABSTRACT
METHODS
DEF
LEFT
SELF
P
RETURN
A
POSITION
REPRESENTING
P
LEFT
CHILD
RETURN
NONE
IF
P
DOES
NOT
HAVE
A
LEFT
CHILD
RAISE
NOTIMPLEMENTEDERROR
MUST
BE
IMPLEMENTED
BY
SUBCLASS
DEF
RIGHT
SELF
P
RETURN
A
POSITION
REPRESENTING
P
RIGHT
CHILD
RETURN
NONE
IF
P
DOES
NOT
HAVE
A
RIGHT
CHILD
RAISE
NOTIMPLEMENTEDERROR
MUST
BE
IMPLEMENTED
BY
SUBCLASS
CONCRETE
METHODS
IMPLEMENTED
IN
THIS
CLASS
DEF
SIBLING
SELF
P
RETURN
A
POSITION
REPRESENTING
P
SIBLING
OR
NONE
IF
NO
SIBLING
PARENT
SELF
PARENT
P
IF
PARENT
IS
NONE
P
MUST
BE
THE
ROOT
RETURN
NONE
ROOT
HAS
NO
SIBLING
ELSE
IF
P
SELF
LEFT
PARENT
RETURN
SELF
RIGHT
PARENT
POSSIBLY
NONE
ELSE
RETURN
SELF
LEFT
PARENT
POSSIBLY
NONE
DEF
CHILDREN
SELF
P
GENERATE
AN
ITERATION
OF
POSITIONS
REPRESENTING
P
CHILDREN
IF
SELF
LEFT
P
IS
NOT
NONE
YIELD
SELF
LEFT
P
IF
SELF
RIGHT
P
IS
NOT
NONE
YIELD
SELF
RIGHT
P
CODE
FRAGMENT
A
BINARYTREE
ABSTRACT
BASE
CLASS
THAT
EXTENDS
THE
EXISTING
TREE
ABSTRACT
BASE
CLASS
FROM
CODE
FRAGMENTS
AND
BINARY
TREES
PROPERTIES
OF
BINARY
TREES
BINARY
TREES
HAVE
SEVERAL
INTERESTING
PROPERTIES
DEALING
WITH
RELATIONSHIPS
BETWEEN
THEIR
HEIGHTS
AND
NUMBER
OF
NODES
WE
DENOTE
THE
SET
OF
ALL
NODES
OF
A
TREE
T
AT
THE
SAME
DEPTH
D
AS
LEVEL
D
OF
T
IN
A
BINARY
TREE
LEVEL
HAS
AT
MOST
ONE
NODE
THE
ROOT
LEVEL
HAS
AT
MOST
TWO
NODES
THE
CHILDREN
OF
THE
ROOT
LEVEL
HAS
AT
MOST
FOUR
NODES
AND
SO
ON
SEE
FIGURE
IN
GENERAL
LEVEL
D
HAS
AT
MOST
NODES
LEVEL
NODES
FIGURE
MAXIMUM
NUMBER
OF
NODES
IN
THE
LEVELS
OF
A
BINARY
TREE
WE
CAN
SEE
THAT
THE
MAXIMUM
NUMBER
OF
NODES
ON
THE
LEVELS
OF
A
BINARY
TREE
GROWS
EXPONENTIALLY
AS
WE
GO
DOWN
THE
TREE
FROM
THIS
SIMPLE
OBSERVATION
WE
CAN
DERIVE
THE
FOLLOWING
PROPERTIES
RELATING
THE
HEIGHT
OF
A
BINARY
TREE
T
WITH
ITS
NUMBER
OF
NODES
A
DETAILED
JUSTIFICATION
OF
THESE
PROPERTIES
IS
LEFT
AS
EXERCISE
R
PROPOSITION
LET
T
BE
A
NONEMPTY
BINARY
TREE
AND
LET
N
NE
NI
AND
H
DENOTE
THE
NUMBER
OF
NODES
NUMBER
OF
EXTERNAL
NODES
NUMBER
OF
INTERNAL
NODES
AND
HEIGHT
OF
T
RESPECTIVELY
THEN
T
HAS
THE
FOLLOWING
PROPERTIES
H
N
NE
H
NI
LOG
N
H
N
ALSO
IF
T
IS
PROPER
THEN
T
HAS
THE
FOLLOWING
PROPERTIES
N
H
NE
H
NI
LOG
N
H
N
CHAPTER
TREES
RELATING
INTERNAL
NODES
TO
EXTERNAL
NODES
IN
A
PROPER
BINARY
TREE
IN
ADDITION
TO
THE
EARLIER
BINARY
TREE
PROPERTIES
THE
FOLLOWING
RELATIONSHIP
EXISTS
BETWEEN
THE
NUMBER
OF
INTERNAL
NODES
AND
EXTERNAL
NODES
IN
A
PROPER
BINARY
TREE
PROPOSITION
IN
A
NONEMPTY
PROPER
BINARY
TREE
T
WITH
NE
EXTERNAL
NODES
AND
NI
INTERNAL
NODES
WE
HAVE
NE
NI
JUSTIFICATION
WE
JUSTIFY
THIS
PROPOSITION
BY
REMOVING
NODES
FROM
T
AND
DIVID
ING
THEM
UP
INTO
TWO
PILES
AN
INTERNAL
NODE
PILE
AND
AN
EXTERNAL
NODE
PILE
UNTIL
T
BECOMES
EMPTY
THE
PILES
ARE
INITIALLY
EMPTY
BY
THE
END
WE
WILL
SHOW
THAT
THE
EXTERNAL
NODE
PILE
HAS
ONE
MORE
NODE
THAN
THE
INTERNAL
NODE
PILE
WE
CONSIDER
TWO
CASES
CASE
IF
T
HAS
ONLY
ONE
NODE
V
WE
REMOVE
V
AND
PLACE
IT
ON
THE
EXTERNAL
NODE
PILE
THUS
THE
EXTERNAL
NODE
PILE
HAS
ONE
NODE
AND
THE
INTERNAL
NODE
PILE
IS
EMPTY
CASE
OTHERWISE
T
HAS
MORE
THAN
ONE
NODE
WE
REMOVE
FROM
T
AN
ARBITRARY
EXTERNAL
NODE
W
AND
ITS
PARENT
V
WHICH
IS
AN
INTERNAL
NODE
WE
PLACE
W
ON
THE
EXTERNAL
NODE
PILE
AND
V
ON
THE
INTERNAL
NODE
PILE
IF
V
HAS
A
PARENT
U
THEN
WE
RECONNECT
U
WITH
THE
FORMER
SIBLING
Z
OF
W
AS
SHOWN
IN
FIGURE
THIS
OPERATION
REMOVES
ONE
INTERNAL
NODE
AND
ONE
EXTERNAL
NODE
AND
LEAVES
THE
TREE
BEING
A
PROPER
BINARY
TREE
REPEATING
THIS
OPERATION
WE
EVENTUALLY
ARE
LEFT
WITH
A
FINAL
TREE
CONSISTING
OF
A
SINGLE
NODE
NOTE
THAT
THE
SAME
NUMBER
OF
EXTERNAL
AND
INTERNAL
NODES
HAVE
BEEN
REMOVED
AND
PLACED
ON
THEIR
RESPECTIVE
PILES
BY
THE
SEQUENCE
OF
OPERATIONS
LEADING
TO
THIS
FINAL
TREE
NOW
WE
REMOVE
THE
NODE
OF
THE
FINAL
TREE
AND
WE
PLACE
IT
ON
THE
EXTERNAL
NODE
PILE
THUS
THE
THE
EXTERNAL
NODE
PILE
HAS
ONE
MORE
NODE
THAN
THE
INTERNAL
NODE
PILE
U
U
U
A
B
C
FIGURE
OPERATION
THAT
REMOVES
AN
EXTERNAL
NODE
AND
ITS
PARENT
NODE
USED
IN
THE
JUSTIFICATION
OF
PROPOSITION
NOTE
THAT
THE
ABOVE
RELATIONSHIP
DOES
NOT
HOLD
IN
GENERAL
FOR
IMPROPER
BINARY
TREES
AND
NONBINARY
TREES
ALTHOUGH
THERE
ARE
OTHER
INTERESTING
RELATIONSHIPS
THAT
DO
HOLD
SEE
EXERCISES
C
THROUGH
C
IMPLEMENTING
TREES
IMPLEMENTING
TREES
THE
TREE
AND
BINARYTREE
CLASSES
THAT
WE
HAVE
DEFINED
THUS
FAR
IN
THIS
CHAPTER
ARE
BOTH
FORMALLY
ABSTRACT
BASE
CLASSES
ALTHOUGH
THEY
PROVIDE
A
GREAT
DEAL
OF
SUPPORT
NEITHER
OF
THEM
CAN
BE
DIRECTLY
INSTANTIATED
WE
HAVE
NOT
YET
DEFINED
KEY
IMPLE
MENTATION
DETAILS
FOR
HOW
A
TREE
WILL
BE
REPRESENTED
INTERNALLY
AND
HOW
WE
CAN
EFFECTIVELY
NAVIGATE
BETWEEN
PARENTS
AND
CHILDREN
SPECIFICALLY
A
CONCRETE
IMPLE
MENTATION
OF
A
TREE
MUST
PROVIDE
METHODS
ROOT
PARENT
NUM
CHILDREN
CHILDREN
LEN
AND
IN
THE
CASE
OF
BINARYTREE
THE
ADDITIONAL
ACCESSORS
LEFT
AND
RIGHT
THERE
ARE
SEVERAL
CHOICES
FOR
THE
INTERNAL
REPRESENTATION
OF
TREES
WE
DESCRIBE
THE
MOST
COMMON
REPRESENTATIONS
IN
THIS
SECTION
WE
BEGIN
WITH
THE
CASE
OF
A
BINARY
TREE
SINCE
ITS
SHAPE
IS
MORE
NARROWLY
DEFINED
LINKED
STRUCTURE
FOR
BINARY
TREES
A
NATURAL
WAY
TO
REALIZE
A
BINARY
TREE
T
IS
TO
USE
A
LINKED
STRUCTURE
WITH
A
NODE
SEE
FIGURE
THAT
MAINTAINS
REFERENCES
TO
THE
ELEMENT
STORED
AT
A
POSITION
P
AND
TO
THE
NODES
ASSOCIATED
WITH
THE
CHILDREN
AND
PARENT
OF
P
IF
P
IS
THE
ROOT
OF
T
THEN
THE
PARENT
FIELD
OF
P
IS
NONE
LIKEWISE
IF
P
DOES
NOT
HAVE
A
LEFT
CHILD
RESPECTIVELY
RIGHT
CHILD
THE
ASSOCIATED
FIELD
IS
NONE
THE
TREE
ITSELF
MAINTAINS
AN
INSTANCE
VARIABLE
STORING
A
REFERENCE
TO
THE
ROOT
NODE
IF
ANY
AND
A
VARIABLE
CALLED
SIZE
THAT
REPRESENTS
THE
OVERALL
NUMBER
OF
NODES
OF
T
WE
SHOW
SUCH
A
LINKED
STRUCTURE
REPRESENTATION
OF
A
BINARY
TREE
IN
FIGURE
PARENT
LEFT
ELEMENT
RIGHT
A
B
FIGURE
A
LINKED
STRUCTURE
FOR
REPRESENTING
A
A
SINGLE
NODE
B
A
BINARY
TREE
CHAPTER
TREES
PYTHON
IMPLEMENTATION
OF
A
LINKED
BINARY
TREE
STRUCTURE
IN
THIS
SECTION
WE
DEFINE
A
CONCRETE
LINKEDBINARYTREE
CLASS
THAT
IMPLEMENTS
THE
BINARY
TREE
ADT
BY
SUBCLASSING
THE
BINARYTREE
CLASS
OUR
GENERAL
APPROACH
IS
VERY
SIMILAR
TO
WHAT
WE
USED
WHEN
DEVELOPING
THE
POSITIONALLIST
IN
SECTION
WE
DEFINE
A
SIMPLE
NONPUBLIC
NODE
CLASS
TO
REPRESENT
A
NODE
AND
A
PUBLIC
POSITION
CLASS
THAT
WRAPS
A
NODE
WE
PROVIDE
A
VALIDATE
UTILITY
FOR
ROBUSTLY
CHECKING
THE
VALIDITY
OF
A
GIVEN
POSITION
INSTANCE
WHEN
UNWRAPPING
IT
AND
A
MAKE
POSITION
UTILITY
FOR
WRAPPING
A
NODE
AS
A
POSITION
TO
RETURN
TO
A
CALLER
THOSE
DEFINITIONS
ARE
PROVIDED
IN
CODE
FRAGMENT
AS
A
FORMALITY
THE
NEW
POSITION
CLASS
IS
DECLARED
TO
INHERIT
IMMEDIATELY
FROM
BINARYTREE
POSITION
TECH
NICALLY
THE
BINARYTREE
CLASS
DEFINITION
SEE
CODE
FRAGMENT
DOES
NOT
FORMALLY
DECLARE
SUCH
A
NESTED
CLASS
IT
TRIVIALLY
INHERITS
IT
FROM
TREE
POSITION
A
MINOR
BEN
EFIT
FROM
THIS
DESIGN
IS
THAT
OUR
POSITION
CLASS
INHERITS
THE
NE
SPECIAL
METHOD
SO
THAT
SYNTAX
P
Q
IS
DERIVED
APPROPRIATELY
RELATIVE
TO
EQ
OUR
CLASS
DEFINITION
CONTINUES
IN
CODE
FRAGMENT
WITH
A
CONSTRUCTOR
AND
WITH
CONCRETE
IMPLEMENTATIONS
FOR
THE
METHODS
THAT
REMAIN
ABSTRACT
IN
THE
TREE
AND
BINARYTREE
CLASSES
THE
CONSTRUCTOR
CREATES
AN
EMPTY
TREE
BY
INITIALIZING
ROOT
TO
NONE
AND
SIZE
TO
ZERO
THESE
ACCESSOR
METHODS
ARE
IMPLEMENTED
WITH
CAREFUL
USE
OF
THE
VALIDATE
AND
MAKE
POSITION
UTILITIES
TO
SAFEGUARD
AGAINST
BOUNDARY
CASES
OPERATIONS
FOR
UPDATING
A
LINKED
BINARY
TREE
THUS
FAR
WE
HAVE
PROVIDED
FUNCTIONALITY
FOR
EXAMINING
AN
EXISTING
BINARY
TREE
HOWEVER
THE
CONSTRUCTOR
FOR
OUR
LINKEDBINARYTREE
CLASS
RESULTS
IN
AN
EMPTY
TREE
AND
WE
HAVE
NOT
PROVIDED
ANY
MEANS
FOR
CHANGING
THE
STRUCTURE
OR
CONTENT
OF
A
TREE
WE
CHOSE
NOT
TO
DECLARE
UPDATE
METHODS
AS
PART
OF
THE
TREE
OR
BINARYTREE
AB
STRACT
BASE
CLASSES
FOR
SEVERAL
REASONS
FIRST
ALTHOUGH
THE
PRINCIPLE
OF
ENCAPSULA
TION
SUGGESTS
THAT
THE
OUTWARD
BEHAVIORS
OF
A
CLASS
NEED
NOT
DEPEND
ON
THE
INTERNAL
REPRESENTATION
THE
EFFICIENCY
OF
THE
OPERATIONS
DEPENDS
GREATLY
UPON
THE
REPRESENTA
TION
WE
PREFER
TO
HAVE
EACH
CONCRETE
IMPLEMENTATION
OF
A
TREE
CLASS
OFFER
THE
MOST
SUITABLE
OPTIONS
FOR
UPDATING
A
TREE
THE
SECOND
REASON
WE
DO
NOT
PROVIDE
UPDATE
METHODS
IN
THE
BASE
CLASS
IS
THAT
WE
MAY
NOT
WANT
SUCH
UPDATE
METHODS
TO
BE
PART
OF
A
PUBLIC
INTERFACE
THERE
ARE
MANY
APPLICATIONS
OF
TREES
AND
SOME
FORMS
OF
UPDATE
OPERATIONS
THAT
ARE
SUITABLE
FOR
ONE
APPLICATION
MAY
BE
UNACCEPTABLE
IN
ANOTHER
HOWEVER
IF
WE
PLACE
AN
UPDATE
METHOD
IN
A
BASE
CLASS
ANY
CLASS
THAT
INHERITS
FROM
THAT
BASE
WILL
INHERIT
THE
UPDATE
METHOD
CONSIDER
FOR
EXAMPLE
THE
POSSIBILITY
OF
A
METHOD
T
REPLACE
P
E
THAT
REPLACES
THE
ELEMENT
STORED
AT
POSITION
P
WITH
ANOTHER
ELEMENT
E
SUCH
A
GENERAL
METHOD
MAY
BE
UNACCEPTABLE
IN
THE
CONTEXT
OF
AN
ARITHMETIC
EXPRESSION
TREE
SEE
EXAMPLE
ON
PAGE
AND
A
LATER
CASE
STUDY
IN
SECTION
BECAUSE
WE
MAY
WANT
TO
ENFORCE
THAT
INTERNAL
NODES
STORE
ONLY
OPERATORS
AS
ELEMENTS
IMPLEMENTING
TREES
FOR
LINKED
BINARY
TREES
A
REASONABLE
SET
OF
UPDATE
METHODS
TO
SUPPORT
FOR
GEN
ERAL
USAGE
ARE
THE
FOLLOWING
T
ADD
ROOT
E
CREATE
A
ROOT
FOR
AN
EMPTY
TREE
STORING
E
AS
THE
ELEMENT
AND
RETURN
THE
POSITION
OF
THAT
ROOT
AN
ERROR
OCCURS
IF
THE
TREE
IS
NOT
EMPTY
T
ADD
LEFT
P
E
CREATE
A
NEW
NODE
STORING
ELEMENT
E
LINK
THE
NODE
AS
THE
LEFT
CHILD
OF
POSITION
P
AND
RETURN
THE
RESULTING
POSITION
AN
ERROR
OCCURS
IF
P
ALREADY
HAS
A
LEFT
CHILD
T
ADD
RIGHT
P
E
CREATE
A
NEW
NODE
STORING
ELEMENT
E
LINK
THE
NODE
AS
THE
RIGHT
CHILD
OF
POSITION
P
AND
RETURN
THE
RESULTING
POSITION
AN
ERROR
OCCURS
IF
P
ALREADY
HAS
A
RIGHT
CHILD
T
REPLACE
P
E
REPLACE
THE
ELEMENT
STORED
AT
POSITION
P
WITH
ELEMENT
E
AND
RETURN
THE
PREVIOUSLY
STORED
ELEMENT
T
DELETE
P
REMOVE
THE
NODE
AT
POSITION
P
REPLACING
IT
WITH
ITS
CHILD
IF
ANY
AND
RETURN
THE
ELEMENT
THAT
HAD
BEEN
STORED
AT
P
AN
ERROR
OCCURS
IF
P
HAS
TWO
CHILDREN
T
ATTACH
P
ATTACH
THE
INTERNAL
STRUCTURE
OF
TREES
AND
RESPEC
TIVELY
AS
THE
LEFT
AND
RIGHT
SUBTREES
OF
LEAF
POSITION
P
OF
T
AND
RESET
AND
TO
EMPTY
TREES
AN
ERROR
CONDITION
OCCURS
IF
P
IS
NOT
A
LEAF
WE
HAVE
SPECIFICALLY
CHOSEN
THIS
COLLECTION
OF
OPERATIONS
BECAUSE
EACH
CAN
BE
IMPLEMENTED
IN
O
WORST
CASE
TIME
WITH
OUR
LINKED
REPRESENTATION
THE
MOST
COMPLEX
OF
THESE
ARE
DELETE
AND
ATTACH
DUE
TO
THE
CASE
ANALYSES
INVOLVING
THE
VARIOUS
PARENT
CHILD
RELATIONSHIPS
AND
BOUNDARY
CONDITIONS
YET
THERE
REMAINS
ONLY
A
CONSTANT
NUMBER
OF
OPERATIONS
TO
PERFORM
THE
IMPLEMENTATION
OF
BOTH
METHODS
COULD
BE
GREATLY
SIMPLIFIED
IF
WE
USED
A
TREE
REPRESENTATION
WITH
A
SENTINEL
NODE
AKIN
TO
OUR
TREATMENT
OF
POSITIONAL
LISTS
SEE
EXERCISE
C
TO
AVOID
THE
PROBLEM
OF
UNDESIRABLE
UPDATE
METHODS
BEING
INHERITED
BY
SUB
CLASSES
OF
LINKEDBINARYTREE
WE
HAVE
CHOSEN
AN
IMPLEMENTATION
IN
WHICH
NONE
OF
THE
ABOVE
METHODS
ARE
PUBLICLY
SUPPORTED
INSTEAD
WE
PROVIDE
NONPUBLIC
VER
SIONS
OF
EACH
FOR
EXAMPLE
PROVIDING
THE
UNDERSCORED
DELETE
IN
LIEU
OF
A
PUBLIC
DELETE
OUR
IMPLEMENTATIONS
OF
THESE
SIX
UPDATE
METHODS
ARE
PROVIDED
IN
CODE
FRAGMENTS
AND
IN
PARTICULAR
APPLICATIONS
SUBCLASSES
OF
LINKEDBINARYTREE
CAN
INVOKE
THE
NON
PUBLIC
METHODS
INTERNALLY
WHILE
PRESERVING
A
PUBLIC
INTERFACE
THAT
IS
APPROPRIATE
FOR
THE
APPLICATION
A
SUBCLASS
MAY
ALSO
CHOOSE
TO
WRAP
ONE
OR
MORE
OF
THE
NON
PUBLIC
UPDATE
METHODS
WITH
A
PUBLIC
METHOD
TO
EXPOSE
IT
TO
THE
USER
WE
LEAVE
AS
AN
EXERCISE
R
THE
TASK
OF
DEFINING
A
MUTABLELINKEDBINARYTREE
SUBCLASS
THAT
PROVIDES
PUBLIC
METHODS
WRAPPING
EACH
OF
THESE
SIX
UPDATE
METHODS
CHAPTER
TREES
CLASS
LINKEDBINARYTREE
BINARYTREE
LINKED
REPRESENTATION
OF
A
BINARY
TREE
STRUCTURE
CLASS
NODE
LIGHTWEIGHT
NONPUBLIC
CLASS
FOR
STORING
A
NODE
SLOTS
DEF
INIT
SELF
ELEMENT
PARENT
NONE
LEFT
NONE
RIGHT
NONE
SELF
ELEMENT
ELEMENT
SELF
PARENT
PARENT
SELF
LEFT
LEFT
SELF
RIGHT
RIGHT
CLASS
POSITION
BINARYTREE
POSITION
AN
ABSTRACTION
REPRESENTING
THE
LOCATION
OF
A
SINGLE
ELEMENT
DEF
INIT
SELF
CONTAINER
NODE
CONSTRUCTOR
SHOULD
NOT
BE
INVOKED
BY
USER
SELF
CONTAINER
CONTAINER
SELF
NODE
NODE
DEF
ELEMENT
SELF
RETURN
THE
ELEMENT
STORED
AT
THIS
POSITION
RETURN
SELF
NODE
ELEMENT
DEF
EQ
SELF
OTHER
RETURN
TRUE
IF
OTHER
IS
A
POSITION
REPRESENTING
THE
SAME
LOCATION
RETURN
TYPE
OTHER
IS
TYPE
SELF
AND
OTHER
NODE
IS
SELF
NODE
DEF
VALIDATE
SELF
P
RETURN
ASSOCIATED
NODE
IF
POSITION
IS
VALID
IF
NOT
ISINSTANCE
P
SELF
POSITION
RAISE
TYPEERROR
P
MUST
BE
PROPER
POSITION
TYPE
IF
P
CONTAINER
IS
NOT
SELF
RAISE
VALUEERROR
P
DOES
NOT
BELONG
TO
THIS
CONTAINER
IF
P
NODE
PARENT
IS
P
NODE
CONVENTION
FOR
DEPRECATED
NODES
RAISE
VALUEERROR
P
IS
NO
LONGER
VALID
RETURN
P
NODE
DEF
MAKE
POSITION
SELF
NODE
RETURN
POSITION
INSTANCE
FOR
GIVEN
NODE
OR
NONE
IF
NO
NODE
RETURN
SELF
POSITION
SELF
NODE
IF
NODE
IS
NOT
NONE
ELSE
NONE
CODE
FRAGMENT
THE
BEGINNING
OF
OUR
LINKEDBINARYTREE
CLASS
CONTINUED
IN
CODE
FRAGMENTS
THROUGH
IMPLEMENTING
TREES
BINARY
TREE
CONSTRUCTOR
DEF
INIT
SELF
CREATE
AN
INITIALLY
EMPTY
BINARY
TREE
SELF
ROOT
NONE
SELF
SIZE
PUBLIC
ACCESSORS
DEF
LEN
SELF
RETURN
THE
TOTAL
NUMBER
OF
ELEMENTS
IN
THE
TREE
RETURN
SELF
SIZE
DEF
ROOT
SELF
RETURN
THE
ROOT
POSITION
OF
THE
TREE
OR
NONE
IF
TREE
IS
EMPTY
RETURN
SELF
MAKE
POSITION
SELF
ROOT
DEF
PARENT
SELF
P
RETURN
THE
POSITION
OF
P
PARENT
OR
NONE
IF
P
IS
ROOT
NODE
SELF
VALIDATE
P
RETURN
SELF
MAKE
POSITION
NODE
PARENT
DEF
LEFT
SELF
P
RETURN
THE
POSITION
OF
P
LEFT
CHILD
OR
NONE
IF
NO
LEFT
CHILD
NODE
SELF
VALIDATE
P
RETURN
SELF
MAKE
POSITION
NODE
LEFT
DEF
RIGHT
SELF
P
RETURN
THE
POSITION
OF
P
RIGHT
CHILD
OR
NONE
IF
NO
RIGHT
CHILD
NODE
SELF
VALIDATE
P
RETURN
SELF
MAKE
POSITION
NODE
RIGHT
DEF
NUM
CHILDREN
SELF
P
RETURN
THE
NUMBER
OF
CHILDREN
OF
POSITION
P
NODE
SELF
VALIDATE
P
COUNT
IF
NODE
LEFT
IS
NOT
NONE
LEFT
CHILD
EXISTS
COUNT
IF
NODE
RIGHT
IS
NOT
NONE
RIGHT
CHILD
EXISTS
COUNT
RETURN
COUNT
CODE
FRAGMENT
PUBLIC
ACCESSORS
FOR
OUR
LINKEDBINARYTREE
CLASS
THE
CLASS
BEGINS
IN
CODE
FRAGMENT
AND
CONTINUES
IN
CODE
FRAGMENTS
AND
CHAPTER
TREES
DEF
ADD
ROOT
SELF
E
PLACE
ELEMENT
E
AT
THE
ROOT
OF
AN
EMPTY
TREE
AND
RETURN
NEW
POSITION
RAISE
VALUEERROR
IF
TREE
NONEMPTY
IF
SELF
ROOT
IS
NOT
NONE
RAISE
VALUEERROR
ROOT
EXISTS
SELF
SIZE
SELF
ROOT
SELF
NODE
E
RETURN
SELF
MAKE
POSITION
SELF
ROOT
DEF
ADD
LEFT
SELF
P
E
CREATE
A
NEW
LEFT
CHILD
FOR
POSITION
P
STORING
ELEMENT
E
RETURN
THE
POSITION
OF
NEW
NODE
RAISE
VALUEERROR
IF
POSITION
P
IS
INVALID
OR
P
ALREADY
HAS
A
LEFT
CHILD
NODE
SELF
VALIDATE
P
IF
NODE
LEFT
IS
NOT
NONE
RAISE
VALUEERROR
LEFT
CHILD
EXISTS
SELF
SIZE
NODE
LEFT
SELF
NODE
E
NODE
NODE
IS
ITS
PARENT
RETURN
SELF
MAKE
POSITION
NODE
LEFT
DEF
ADD
RIGHT
SELF
P
E
CREATE
A
NEW
RIGHT
CHILD
FOR
POSITION
P
STORING
ELEMENT
E
RETURN
THE
POSITION
OF
NEW
NODE
RAISE
VALUEERROR
IF
POSITION
P
IS
INVALID
OR
P
ALREADY
HAS
A
RIGHT
CHILD
NODE
SELF
VALIDATE
P
IF
NODE
RIGHT
IS
NOT
NONE
RAISE
VALUEERROR
RIGHT
CHILD
EXISTS
SELF
SIZE
NODE
RIGHT
SELF
NODE
E
NODE
NODE
IS
ITS
PARENT
RETURN
SELF
MAKE
POSITION
NODE
RIGHT
DEF
REPLACE
SELF
P
E
REPLACE
THE
ELEMENT
AT
POSITION
P
WITH
E
AND
RETURN
OLD
ELEMENT
NODE
SELF
VALIDATE
P
OLD
NODE
ELEMENT
NODE
ELEMENT
E
RETURN
OLD
CODE
FRAGMENT
NONPUBLIC
UPDATE
METHODS
FOR
THE
LINKEDBINARYTREE
CLASS
CONTINUED
IN
CODE
FRAGMENT
IMPLEMENTING
TREES
DEF
DELETE
SELF
P
DELETE
THE
NODE
AT
POSITION
P
AND
REPLACE
IT
WITH
ITS
CHILD
IF
ANY
RETURN
THE
ELEMENT
THAT
HAD
BEEN
STORED
AT
POSITION
P
RAISE
VALUEERROR
IF
POSITION
P
IS
INVALID
OR
P
HAS
TWO
CHILDREN
NODE
SELF
VALIDATE
P
IF
SELF
NUM
CHILDREN
P
RAISE
VALUEERROR
P
HAS
TWO
CHILDREN
CHILD
NODE
LEFT
IF
NODE
LEFT
ELSE
NODE
RIGHT
MIGHT
BE
NONE
IF
CHILD
IS
NOT
NONE
CHILD
PARENT
NODE
PARENT
CHILD
GRANDPARENT
BECOMES
PARENT
IF
NODE
IS
SELF
ROOT
SELF
ROOT
CHILD
CHILD
BECOMES
ROOT
ELSE
PARENT
NODE
PARENT
IF
NODE
IS
PARENT
LEFT
PARENT
LEFT
CHILD
ELSE
PARENT
RIGHT
CHILD
SELF
SIZE
NODE
PARENT
NODE
CONVENTION
FOR
DEPRECATED
NODE
RETURN
NODE
ELEMENT
DEF
ATTACH
SELF
P
ATTACH
TREES
AND
AS
LEFT
AND
RIGHT
SUBTREES
OF
EXTERNAL
P
NODE
SELF
VALIDATE
P
IF
NOT
SELF
IS
LEAF
P
RAISE
VALUEERROR
POSITION
MUST
BE
LEAF
IF
NOT
TYPE
SELF
IS
TYPE
IS
TYPE
ALL
TREES
MUST
BE
SAME
TYPE
RAISE
TYPEERROR
TREE
TYPES
MUST
MATCH
SELF
SIZE
LEN
LEN
IF
NOT
IS
EMPTY
ATTACHED
AS
LEFT
SUBTREE
OF
NODE
ROOT
PARENT
NODE
NODE
LEFT
ROOT
ROOT
NONE
SET
INSTANCE
TO
EMPTY
SIZE
IF
NOT
IS
EMPTY
ATTACHED
AS
RIGHT
SUBTREE
OF
NODE
ROOT
PARENT
NODE
NODE
RIGHT
ROOT
ROOT
NONE
SET
INSTANCE
TO
EMPTY
SIZE
CODE
FRAGMENT
NONPUBLIC
UPDATE
METHODS
FOR
THE
LINKEDBINARYTREE
CLASS
CONTINUED
FROM
CODE
FRAGMENT
CHAPTER
TREES
PERFORMANCE
OF
THE
LINKED
BINARY
TREE
IMPLEMENTATION
TO
SUMMARIZE
THE
EFFICIENCIES
OF
THE
LINKED
STRUCTURE
REPRESENTATION
WE
ANALYZE
THE
RUNNING
TIMES
OF
THE
LINKEDBINARYTREE
METHODS
INCLUDING
DERIVED
METHODS
THAT
ARE
INHERITED
FROM
THE
TREE
AND
BINARYTREE
CLASSES
THE
LEN
METHOD
IMPLEMENTED
IN
LINKEDBINARYTREE
USES
AN
INSTANCE
VARIABLE
STORING
THE
NUMBER
OF
NODES
OF
T
AND
TAKES
O
TIME
METHOD
IS
EMPTY
INHERITED
FROM
TREE
RELIES
ON
A
SINGLE
CALL
TO
LEN
AND
THUS
TAKES
O
TIME
THE
ACCESSOR
METHODS
ROOT
LEFT
RIGHT
PARENT
AND
NUM
CHILDREN
ARE
IMPLE
MENTED
DIRECTLY
IN
LINKEDBINARYTREE
AND
TAKE
O
TIME
THE
SIBLING
AND
CHILDREN
METHODS
ARE
DERIVED
IN
BINARYTREE
BASED
ON
A
CONSTANT
NUMBER
OF
CALLS
TO
THESE
OTHER
ACCESSORS
SO
THEY
RUN
IN
O
TIME
AS
WELL
THE
IS
ROOT
AND
IS
LEAF
METHODS
FROM
THE
TREE
CLASS
BOTH
RUN
IN
O
TIME
AS
IS
ROOT
CALLS
ROOT
AND
THEN
RELIES
ON
EQUIVALENCE
TESTING
OF
POSITIONS
WHILE
IS
LEAF
CALLS
LEFT
AND
RIGHT
AND
VERIFIES
THAT
NONE
IS
RETURNED
BY
BOTH
METHODS
DEPTH
AND
HEIGHT
WERE
EACH
ANALYZED
IN
SECTION
THE
DEPTH
METHOD
AT
POSITION
P
RUNS
IN
O
DP
TIME
WHERE
DP
IS
ITS
DEPTH
THE
HEIGHT
METHOD
ON
THE
ROOT
OF
THE
TREE
RUNS
IN
O
N
TIME
THE
VARIOUS
UPDATE
METHODS
ADD
ROOT
ADD
LEFT
ADD
RIGHT
REPLACE
DELETE
AND
ATTACH
THAT
IS
THEIR
NONPUBLIC
IMPLEMENTATIONS
EACH
RUN
IN
O
TIME
AS
THEY
INVOLVE
RELINKING
ONLY
A
CONSTANT
NUMBER
OF
NODES
PER
OPERATION
TABLE
SUMMARIZES
THE
PERFORMANCE
OF
THE
LINKED
STRUCTURE
IMPLEMENTATION
OF
A
BINARY
TREE
TABLE
RUNNING
TIMES
FOR
THE
METHODS
OF
AN
N
NODE
BINARY
TREE
IMPLEMENTED
WITH
A
LINKED
STRUCTURE
THE
SPACE
USAGE
IS
O
N
IMPLEMENTING
TREES
ARRAY
BASED
REPRESENTATION
OF
A
BINARY
TREE
AN
ALTERNATIVE
REPRESENTATION
OF
A
BINARY
TREE
T
IS
BASED
ON
A
WAY
OF
NUMBERING
THE
POSITIONS
OF
T
FOR
EVERY
POSITION
P
OF
T
LET
F
P
BE
THE
INTEGER
DEFINED
AS
FOLLOWS
IF
P
IS
THE
ROOT
OF
T
THEN
F
P
IF
P
IS
THE
LEFT
CHILD
OF
POSITION
Q
THEN
F
P
F
Q
IF
P
IS
THE
RIGHT
CHILD
OF
POSITION
Q
THEN
F
P
F
Q
THE
NUMBERING
FUNCTION
F
IS
KNOWN
AS
A
LEVEL
NUMBERING
OF
THE
POSITIONS
IN
A
BINARY
TREE
T
FOR
IT
NUMBERS
THE
POSITIONS
ON
EACH
LEVEL
OF
T
IN
INCREASING
ORDER
FROM
LEFT
TO
RIGHT
SEE
FIGURE
NOTE
WELL
THAT
THE
LEVEL
NUMBERING
IS
BASED
ON
POTENTIAL
POSITIONS
WITHIN
THE
TREE
NOT
ACTUAL
POSITIONS
OF
A
GIVEN
TREE
SO
THEY
ARE
NOT
NECESSARILY
CONSECUTIVE
FOR
EXAMPLE
IN
FIGURE
B
THERE
ARE
NO
NODES
WITH
LEVEL
NUMBERING
OR
BECAUSE
THE
NODE
WITH
LEVEL
NUMBERING
HAS
NO
CHILDREN
A
B
FIGURE
BINARY
TREE
LEVEL
NUMBERING
A
GENERAL
SCHEME
B
AN
EXAMPLE
CHAPTER
TREES
THE
LEVEL
NUMBERING
FUNCTION
F
SUGGESTS
A
REPRESENTATION
OF
A
BINARY
TREE
T
BY
MEANS
OF
AN
ARRAY
BASED
STRUCTURE
A
SUCH
AS
A
PYTHON
LIST
WITH
THE
ELEMENT
AT
POSITION
P
OF
T
STORED
AT
INDEX
F
P
OF
THE
ARRAY
WE
SHOW
AN
EXAMPLE
OF
AN
ARRAY
BASED
REPRESENTATION
OF
A
BINARY
TREE
IN
FIGURE
FIGURE
REPRESENTATION
OF
A
BINARY
TREE
BY
MEANS
OF
AN
ARRAY
ONE
ADVANTAGE
OF
AN
ARRAY
BASED
REPRESENTATION
OF
A
BINARY
TREE
IS
THAT
A
POSI
TION
P
CAN
BE
REPRESENTED
BY
THE
SINGLE
INTEGER
F
P
AND
THAT
POSITION
BASED
METH
ODS
SUCH
AS
ROOT
PARENT
LEFT
AND
RIGHT
CAN
BE
IMPLEMENTED
USING
SIMPLE
ARITHMETIC
OPERATIONS
ON
THE
NUMBER
F
P
BASED
ON
OUR
FORMULA
FOR
THE
LEVEL
NUMBERING
THE
LEFT
CHILD
OF
P
HAS
INDEX
F
P
THE
RIGHT
CHILD
OF
P
HAS
INDEX
F
P
AND
THE
PARENT
OF
P
HAS
INDEX
L
F
P
WE
LEAVE
THE
DETAILS
OF
A
COMPLETE
IM
PLEMENTATION
AS
AN
EXERCISE
R
THE
SPACE
USAGE
OF
AN
ARRAY
BASED
REPRESENTATION
DEPENDS
GREATLY
ON
THE
SHAPE
OF
THE
TREE
LET
N
BE
THE
NUMBER
OF
NODES
OF
T
AND
LET
FM
BE
THE
MAXIMUM
VALUE
OF
F
P
OVER
ALL
THE
NODES
OF
T
THE
ARRAY
A
REQUIRES
LENGTH
N
FM
SINCE
ELEMENTS
RANGE
FROM
A
TO
A
FM
NOTE
THAT
A
MAY
HAVE
A
NUMBER
OF
EMPTY
CELLS
THAT
DO
NOT
REFER
TO
EXISTING
NODES
OF
T
IN
FACT
IN
THE
WORST
CASE
N
THE
JUSTIFICATION
OF
WHICH
IS
LEFT
AS
AN
EXERCISE
R
IN
SECTION
WE
WILL
SEE
A
CLASS
OF
BINARY
TREES
CALLED
HEAPS
FOR
WHICH
N
N
THUS
IN
SPITE
OF
THE
WORST
CASE
SPACE
USAGE
THERE
ARE
APPLICATIONS
FOR
WHICH
THE
ARRAY
REPRESENTATION
OF
A
BINARY
TREE
IS
SPACE
EFFICIENT
STILL
FOR
GENERAL
BINARY
TREES
THE
EXPONENTIAL
WORST
CASE
SPACE
REQUIREMENT
OF
THIS
REPRESENTATION
IS
PROHIBITIVE
ANOTHER
DRAWBACK
OF
AN
ARRAY
REPRESENTATION
IS
THAT
SOME
UPDATE
OPERATIONS
FOR
TREES
CANNOT
BE
EFFICIENTLY
SUPPORTED
FOR
EXAMPLE
DELETING
A
NODE
AND
PROMOTING
ITS
CHILD
TAKES
O
N
TIME
BECAUSE
IT
IS
NOT
JUST
THE
CHILD
THAT
MOVES
LOCATIONS
WITHIN
THE
ARRAY
BUT
ALL
DESCENDANTS
OF
THAT
CHILD
IMPLEMENTING
TREES
LINKED
STRUCTURE
FOR
GENERAL
TREES
WHEN
REPRESENTING
A
BINARY
TREE
WITH
A
LINKED
STRUCTURE
EACH
NODE
EXPLICITLY
MAIN
TAINS
FIELDS
LEFT
AND
RIGHT
AS
REFERENCES
TO
INDIVIDUAL
CHILDREN
FOR
A
GENERAL
TREE
THERE
IS
NO
A
PRIORI
LIMIT
ON
THE
NUMBER
OF
CHILDREN
THAT
A
NODE
MAY
HAVE
A
NATURAL
WAY
TO
REALIZE
A
GENERAL
TREE
T
AS
A
LINKED
STRUCTURE
IS
TO
HAVE
EACH
NODE
STORE
A
SINGLE
CONTAINER
OF
REFERENCES
TO
ITS
CHILDREN
FOR
EXAMPLE
A
CHILDREN
FIELD
OF
A
NODE
CAN
BE
A
PYTHON
LIST
OF
REFERENCES
TO
THE
CHILDREN
OF
THE
NODE
IF
ANY
SUCH
A
LINKED
REPRESENTATION
IS
SCHEMATICALLY
ILLUSTRATED
IN
FIGURE
PARENT
ELEMENT
CHILDREN
A
B
FIGURE
THE
LINKED
STRUCTURE
FOR
A
GENERAL
TREE
A
THE
STRUCTURE
OF
A
NODE
B
A
LARGER
PORTION
OF
THE
DATA
STRUCTURE
ASSOCIATED
WITH
A
NODE
AND
ITS
CHILDREN
TABLE
SUMMARIZES
THE
PERFORMANCE
OF
THE
IMPLEMENTATION
OF
A
GENERAL
TREE
USING
A
LINKED
STRUCTURE
THE
ANALYSIS
IS
LEFT
AS
AN
EXERCISE
R
BUT
WE
NOTE
THAT
BY
USING
A
COLLECTION
TO
STORE
THE
CHILDREN
OF
EACH
POSITION
P
WE
CAN
IMPLEMENT
CHILDREN
P
BY
SIMPLY
ITERATING
THAT
COLLECTION
TABLE
RUNNING
TIMES
OF
THE
ACCESSOR
METHODS
OF
AN
N
NODE
GENERAL
TREE
IM
PLEMENTED
WITH
A
LINKED
STRUCTURE
WE
LET
CP
DENOTE
THE
NUMBER
OF
CHILDREN
OF
A
POSITION
P
THE
SPACE
USAGE
IS
O
N
CHAPTER
TREES
TREE
TRAVERSAL
ALGORITHMS
A
TRAVERSAL
OF
A
TREE
T
IS
A
SYSTEMATIC
WAY
OF
ACCESSING
OR
VISITING
ALL
THE
POSI
TIONS
OF
T
THE
SPECIFIC
ACTION
ASSOCIATED
WITH
THE
VISIT
OF
A
POSITION
P
DEPENDS
ON
THE
APPLICATION
OF
THIS
TRAVERSAL
AND
COULD
INVOLVE
ANYTHING
FROM
INCREMENT
ING
A
COUNTER
TO
PERFORMING
SOME
COMPLEX
COMPUTATION
FOR
P
IN
THIS
SECTION
WE
DESCRIBE
SEVERAL
COMMON
TRAVERSAL
SCHEMES
FOR
TREES
IMPLEMENT
THEM
IN
THE
CON
TEXT
OF
OUR
VARIOUS
TREE
CLASSES
AND
DISCUSS
SEVERAL
COMMON
APPLICATIONS
OF
TREE
TRAVERSALS
PREORDER
AND
POSTORDER
TRAVERSALS
OF
GENERAL
TREES
IN
A
PREORDER
TRAVERSAL
OF
A
TREE
T
THE
ROOT
OF
T
IS
VISITED
FIRST
AND
THEN
THE
SUB
TREES
ROOTED
AT
ITS
CHILDREN
ARE
TRAVERSED
RECURSIVELY
IF
THE
TREE
IS
ORDERED
THEN
THE
SUBTREES
ARE
TRAVERSED
ACCORDING
TO
THE
ORDER
OF
THE
CHILDREN
THE
PSEUDO
CODE
FOR
THE
PREORDER
TRAVERSAL
OF
THE
SUBTREE
ROOTED
AT
A
POSITION
P
IS
SHOWN
IN
CODE
FRAGMENT
ALGORITHM
PREORDER
T
P
PERFORM
THE
VISIT
ACTION
FOR
POSITION
P
FOR
EACH
CHILD
C
IN
T
CHILDREN
P
DO
PREORDER
T
C
RECURSIVELY
TRAVERSE
THE
SUBTREE
ROOTED
AT
C
CODE
FRAGMENT
ALGORITHM
PREORDER
FOR
PERFORMING
THE
PREORDER
TRAVERSAL
OF
A
SUBTREE
ROOTED
AT
POSITION
P
OF
A
TREE
T
FIGURE
PORTRAYS
THE
ORDER
IN
WHICH
POSITIONS
OF
A
SAMPLE
TREE
ARE
VISITED
DURING
AN
APPLICATION
OF
THE
PREORDER
TRAVERSAL
ALGORITHM
FIGURE
PREORDER
TRAVERSAL
OF
AN
ORDERED
TREE
WHERE
THE
CHILDREN
OF
EACH
POSI
TION
ARE
ORDERED
FROM
LEFT
TO
RIGHT
TREE
TRAVERSAL
ALGORITHMS
POSTORDER
TRAVERSAL
ANOTHER
IMPORTANT
TREE
TRAVERSAL
ALGORITHM
IS
THE
POSTORDER
TRAVERSAL
IN
SOME
SENSE
THIS
ALGORITHM
CAN
BE
VIEWED
AS
THE
OPPOSITE
OF
THE
PREORDER
TRAVERSAL
BE
CAUSE
IT
RECURSIVELY
TRAVERSES
THE
SUBTREES
ROOTED
AT
THE
CHILDREN
OF
THE
ROOT
FIRST
AND
THEN
VISITS
THE
ROOT
HENCE
THE
NAME
POSTORDER
PSEUDO
CODE
FOR
THE
POSTORDER
TRAVERSAL
IS
GIVEN
IN
CODE
FRAGMENT
AND
AN
EXAMPLE
OF
A
POSTORDER
TRAVERSAL
IS
PORTRAYED
IN
FIGURE
ALGORITHM
POSTORDER
T
P
FOR
EACH
CHILD
C
IN
T
CHILDREN
P
DO
POSTORDER
T
C
RECURSIVELY
TRAVERSE
THE
SUBTREE
ROOTED
AT
C
PERFORM
THE
VISIT
ACTION
FOR
POSITION
P
CODE
FRAGMENT
ALGORITHM
POSTORDER
FOR
PERFORMING
THE
POSTORDER
TRAVERSAL
OF
A
SUBTREE
ROOTED
AT
POSITION
P
OF
A
TREE
T
FIGURE
POSTORDER
TRAVERSAL
OF
THE
ORDERED
TREE
OF
FIGURE
RUNNING
TIME
ANALYSIS
BOTH
PREORDER
AND
POSTORDER
TRAVERSAL
ALGORITHMS
ARE
EFFICIENT
WAYS
TO
ACCESS
ALL
THE
POSITIONS
OF
A
TREE
THE
ANALYSIS
OF
EITHER
OF
THESE
TRAVERSAL
ALGORITHMS
IS
SIMILAR
TO
THAT
OF
ALGORITHM
GIVEN
IN
CODE
FRAGMENT
OF
SECTION
AT
EACH
POSITION
P
THE
NONRECURSIVE
PART
OF
THE
TRAVERSAL
ALGORITHM
REQUIRES
TIME
O
CP
WHERE
CP
IS
THE
NUMBER
OF
CHILDREN
OF
P
UNDER
THE
ASSUMPTION
THAT
THE
VISIT
ITSELF
TAKES
O
TIME
BY
PROPOSITION
THE
OVERALL
RUNNING
TIME
FOR
THE
TRAVERSAL
OF
TREE
T
IS
O
N
WHERE
N
IS
THE
NUMBER
OF
POSITIONS
IN
THE
TREE
THIS
RUNNING
TIME
IS
ASYMPTOTICALLY
OPTIMAL
SINCE
THE
TRAVERSAL
MUST
VISIT
ALL
THE
N
POSITIONS
OF
THE
TREE
CHAPTER
TREES
BREADTH
FIRST
TREE
TRAVERSAL
ALTHOUGH
THE
PREORDER
AND
POSTORDER
TRAVERSALS
ARE
COMMON
WAYS
OF
VISITING
THE
POSITIONS
OF
A
TREE
ANOTHER
COMMON
APPROACH
IS
TO
TRAVERSE
A
TREE
SO
THAT
WE
VISIT
ALL
THE
POSITIONS
AT
DEPTH
D
BEFORE
WE
VISIT
THE
POSITIONS
AT
DEPTH
D
SUCH
AN
ALGORITHM
IS
KNOWN
AS
A
BREADTH
FIRST
TRAVERSAL
A
BREADTH
FIRST
TRAVERSAL
IS
A
COMMON
APPROACH
USED
IN
SOFTWARE
FOR
PLAYING
GAMES
A
GAME
TREE
REPRESENTS
THE
POSSIBLE
CHOICES
OF
MOVES
THAT
MIGHT
BE
MADE
BY
A
PLAYER
OR
COMPUTER
DURING
A
GAME
WITH
THE
ROOT
OF
THE
TREE
BEING
THE
INITIAL
CONFIGURATION
FOR
THE
GAME
FOR
EXAMPLE
FIGURE
DISPLAYS
A
PARTIAL
GAME
TREE
FOR
TIC
TAC
TOE
FIGURE
PARTIAL
GAME
TREE
FOR
TIC
TAC
TOE
WITH
ANNOTATIONS
DISPLAYING
THE
OR
DER
IN
WHICH
POSITIONS
ARE
VISITED
IN
A
BREADTH
FIRST
TRAVERSAL
A
BREADTH
FIRST
TRAVERSAL
OF
SUCH
A
GAME
TREE
IS
OFTEN
PERFORMED
BECAUSE
A
COMPUTER
MAY
BE
UNABLE
TO
EXPLORE
A
COMPLETE
GAME
TREE
IN
A
LIMITED
AMOUNT
OF
TIME
SO
THE
COMPUTER
WILL
CONSIDER
ALL
MOVES
THEN
RESPONSES
TO
THOSE
MOVES
GOING
AS
DEEP
AS
COMPUTATIONAL
TIME
ALLOWS
PSEUDO
CODE
FOR
A
BREADTH
FIRST
TRAVERSAL
IS
GIVEN
IN
CODE
FRAGMENT
THE
PROCESS
IS
NOT
RECURSIVE
SINCE
WE
ARE
NOT
TRAVERSING
ENTIRE
SUBTREES
AT
ONCE
WE
USE
A
QUEUE
TO
PRODUCE
A
FIFO
I
E
FIRST
IN
FIRST
OUT
SEMANTICS
FOR
THE
ORDER
IN
WHICH
WE
VISIT
NODES
THE
OVERALL
RUNNING
TIME
IS
O
N
DUE
TO
THE
N
CALLS
TO
ENQUEUE
AND
N
CALLS
TO
DEQUEUE
ALGORITHM
BREADTHFIRST
T
INITIALIZE
QUEUE
Q
TO
CONTAIN
T
ROOT
WHILE
Q
NOT
EMPTY
DO
P
Q
DEQUEUE
P
IS
THE
OLDEST
ENTRY
IN
THE
QUEUE
PERFORM
THE
VISIT
ACTION
FOR
POSITION
P
FOR
EACH
CHILD
C
IN
T
CHILDREN
P
DO
Q
ENQUEUE
C
ADD
P
CHILDREN
TO
THE
END
OF
THE
QUEUE
FOR
LATER
VISITS
CODE
FRAGMENT
ALGORITHM
FOR
PERFORMING
A
BREADTH
FIRST
TRAVERSAL
OF
A
TREE
TREE
TRAVERSAL
ALGORITHMS
INORDER
TRAVERSAL
OF
A
BINARY
TREE
THE
STANDARD
PREORDER
POSTORDER
AND
BREADTH
FIRST
TRAVERSALS
THAT
WERE
INTRODUCED
FOR
GENERAL
TREES
CAN
BE
DIRECTLY
APPLIED
TO
BINARY
TREES
IN
THIS
SECTION
WE
INTRO
DUCE
ANOTHER
COMMON
TRAVERSAL
ALGORITHM
SPECIFICALLY
FOR
A
BINARY
TREE
DURING
AN
INORDER
TRAVERSAL
WE
VISIT
A
POSITION
BETWEEN
THE
RECURSIVE
TRAVER
SALS
OF
ITS
LEFT
AND
RIGHT
SUBTREES
THE
INORDER
TRAVERSAL
OF
A
BINARY
TREE
T
CAN
BE
INFORMALLY
VIEWED
AS
VISITING
THE
NODES
OF
T
FROM
LEFT
TO
RIGHT
INDEED
FOR
EVERY
POSITION
P
THE
INORDER
TRAVERSAL
VISITS
P
AFTER
ALL
THE
POSITIONS
IN
THE
LEFT
SUBTREE
OF
P
AND
BEFORE
ALL
THE
POSITIONS
IN
THE
RIGHT
SUBTREE
OF
P
PSEUDO
CODE
FOR
THE
INORDER
TRAVERSAL
ALGORITHM
IS
GIVEN
IN
CODE
FRAGMENT
AND
AN
EXAMPLE
OF
AN
INORDER
TRAVERSAL
IS
PORTRAYED
IN
FIGURE
ALGORITHM
INORDER
P
IF
P
HAS
A
LEFT
CHILD
LC
THEN
INORDER
LC
RECURSIVELY
TRAVERSE
THE
LEFT
SUBTREE
OF
P
PERFORM
THE
VISIT
ACTION
FOR
POSITION
P
IF
P
HAS
A
RIGHT
CHILD
RC
THEN
INORDER
RC
RECURSIVELY
TRAVERSE
THE
RIGHT
SUBTREE
OF
P
CODE
FRAGMENT
ALGORITHM
INORDER
FOR
PERFORMING
AN
INORDER
TRAVERSAL
OF
A
SUBTREE
ROOTED
AT
POSITION
P
OF
A
BINARY
TREE
FIGURE
INORDER
TRAVERSAL
OF
A
BINARY
TREE
THE
INORDER
TRAVERSAL
ALGORITHM
HAS
SEVERAL
IMPORTANT
APPLICATIONS
WHEN
USING
A
BINARY
TREE
TO
REPRESENT
AN
ARITHMETIC
EXPRESSION
AS
IN
FIGURE
THE
INORDER
TRAVERSAL
VISITS
POSITIONS
IN
A
CONSISTENT
ORDER
WITH
THE
STANDARD
REPRESENTATION
OF
THE
EXPRESSION
AS
IN
ALBEIT
WITHOUT
PARENTHESES
CHAPTER
TREES
BINARY
SEARCH
TREES
AN
IMPORTANT
APPLICATION
OF
THE
INORDER
TRAVERSAL
ALGORITHM
ARISES
WHEN
WE
STORE
AN
ORDERED
SEQUENCE
OF
ELEMENTS
IN
A
BINARY
TREE
DEFINING
A
STRUCTURE
WE
CALL
A
BINARY
SEARCH
TREE
LET
BE
A
SET
WHOSE
UNIQUE
ELEMENTS
HAVE
AN
ORDER
RELATION
FOR
EXAMPLE
COULD
BE
A
SET
OF
INTEGERS
A
BINARY
SEARCH
TREE
FOR
IS
A
BINARY
TREE
T
SUCH
THAT
FOR
EACH
POSITION
P
OF
T
POSITION
P
STORES
AN
ELEMENT
OF
DENOTED
AS
E
P
ELEMENTS
STORED
IN
THE
LEFT
SUBTREE
OF
P
IF
ANY
ARE
LESS
THAN
E
P
ELEMENTS
STORED
IN
THE
RIGHT
SUBTREE
OF
P
IF
ANY
ARE
GREATER
THAN
E
P
AN
EXAMPLE
OF
A
BINARY
SEARCH
TREE
IS
SHOWN
IN
FIGURE
THE
ABOVE
PROPERTIES
ASSURE
THAT
AN
INORDER
TRAVERSAL
OF
A
BINARY
SEARCH
TREE
T
VISITS
THE
ELEMENTS
IN
NONDECREASING
ORDER
FIGURE
A
BINARY
SEARCH
TREE
STORING
INTEGERS
THE
SOLID
PATH
IS
TRAVERSED
WHEN
SEARCHING
SUCCESSFULLY
FOR
THE
DASHED
PATH
IS
TRAVERSED
WHEN
SEARCHING
UN
SUCCESSFULLY
FOR
WE
CAN
USE
A
BINARY
SEARCH
TREE
T
FOR
SET
TO
FIND
WHETHER
A
GIVEN
SEARCH
VALUE
V
IS
IN
BY
TRAVERSING
A
PATH
DOWN
THE
TREE
T
STARTING
AT
THE
ROOT
AT
EACH
INTERNAL
POSITION
P
ENCOUNTERED
WE
COMPARE
OUR
SEARCH
VALUE
V
WITH
THE
ELEMENT
E
P
STORED
AT
P
IF
V
E
P
THEN
THE
SEARCH
CONTINUES
IN
THE
LEFT
SUBTREE
OF
P
IF
V
E
P
THEN
THE
SEARCH
TERMINATES
SUCCESSFULLY
IF
V
E
P
THEN
THE
SEARCH
CONTINUES
IN
THE
RIGHT
SUBTREE
OF
P
FINALLY
IF
WE
REACH
AN
EMPTY
SUBTREE
THE
SEARCH
TERMINATES
UNSUCCESSFULLY
IN
OTHER
WORDS
A
BINARY
SEARCH
TREE
CAN
BE
VIEWED
AS
A
BINARY
DECISION
TREE
RECALL
EXAMPLE
WHERE
THE
QUESTION
ASKED
AT
EACH
INTERNAL
NODE
IS
WHETHER
THE
ELEMENT
AT
THAT
NODE
IS
LESS
THAN
EQUAL
TO
OR
LARGER
THAN
THE
ELEMENT
BEING
SEARCHED
FOR
WE
ILLUSTRATE
SEVERAL
EXAMPLES
OF
THE
SEARCH
OPERATION
IN
FIGURE
NOTE
THAT
THE
RUNNING
TIME
OF
SEARCHING
IN
A
BINARY
SEARCH
TREE
T
IS
PROPORTIONAL
TO
THE
HEIGHT
OF
T
RECALL
FROM
PROPOSITION
THAT
THE
HEIGHT
OF
A
BINARY
TREE
WITH
N
NODES
CAN
BE
AS
SMALL
AS
LOG
N
OR
AS
LARGE
AS
N
THUS
BINARY
SEARCH
TREES
ARE
MOST
EFFICIENT
WHEN
THEY
HAVE
SMALL
HEIGHT
CHAPTER
IS
DEVOTED
TO
THE
STUDY
OF
SEARCH
TREES
TREE
TRAVERSAL
ALGORITHMS
IMPLEMENTING
TREE
TRAVERSALS
IN
PYTHON
WHEN
FIRST
DEFINING
THE
TREE
ADT
IN
SECTION
WE
STATED
THAT
TREE
T
SHOULD
INCLUDE
SUPPORT
FOR
THE
FOLLOWING
METHODS
T
POSITIONS
GENERATE
AN
ITERATION
OF
ALL
POSITIONS
OF
TREE
T
ITER
T
GENERATE
AN
ITERATION
OF
ALL
ELEMENTS
STORED
WITHIN
TREE
T
AT
THAT
TIME
WE
DID
NOT
MAKE
ANY
ASSUMPTION
ABOUT
THE
ORDER
IN
WHICH
THESE
ITERATIONS
REPORT
THEIR
RESULTS
IN
THIS
SECTION
WE
DEMONSTRATE
HOW
ANY
OF
THE
TREE
TRAVERSAL
ALGORITHMS
WE
HAVE
INTRODUCED
COULD
BE
USED
TO
PRODUCE
THESE
ITERATIONS
TO
BEGIN
WE
NOTE
THAT
IT
IS
EASY
TO
PRODUCE
AN
ITERATION
OF
ALL
ELEMENTS
OF
A
TREE
IF
WE
RELY
ON
A
PRESUMED
ITERATION
OF
ALL
POSITIONS
THEREFORE
SUPPORT
FOR
THE
ITER
T
SYNTAX
CAN
BE
FORMALLY
PROVIDED
BY
A
CONCRETE
IMPLEMENTATION
OF
THE
SPECIAL
METHOD
ITER
WITHIN
THE
ABSTRACT
BASE
CLASS
TREE
WE
RELY
ON
PYTHON
GENERATOR
SYNTAX
AS
THE
MECHANISM
FOR
PRODUCING
ITERATIONS
SEE
SECTION
OUR
IMPLEMENTATION
OF
TREE
ITER
IS
GIVEN
IN
CODE
FRAGMENT
DEF
ITER
SELF
GENERATE
AN
ITERATION
OF
THE
TREE
ELEMENTS
FOR
P
IN
SELF
POSITIONS
USE
SAME
ORDER
AS
POSITIONS
YIELD
P
ELEMENT
BUT
YIELD
EACH
ELEMENT
CODE
FRAGMENT
ITERATING
ALL
ELEMENTS
OF
A
TREE
INSTANCE
BASED
UPON
AN
ITER
ATION
OF
THE
POSITIONS
OF
THE
TREE
THIS
CODE
SHOULD
BE
INCLUDED
IN
THE
BODY
OF
THE
TREE
CLASS
TO
IMPLEMENT
THE
POSITIONS
METHOD
WE
HAVE
A
CHOICE
OF
TREE
TRAVERSAL
ALGO
RITHMS
GIVEN
THAT
THERE
ARE
ADVANTAGES
TO
EACH
OF
THOSE
TRAVERSAL
ORDERS
WE
WILL
PROVIDE
INDEPENDENT
IMPLEMENTATIONS
OF
EACH
STRATEGY
THAT
CAN
BE
CALLED
DIRECTLY
BY
A
USER
OF
OUR
CLASS
WE
CAN
THEN
TRIVIALLY
ADAPT
ONE
OF
THOSE
AS
A
DEFAULT
ORDER
FOR
THE
POSITIONS
METHOD
OF
THE
TREE
ADT
PREORDER
TRAVERSAL
WE
BEGIN
BY
CONSIDERING
THE
PREORDER
TRAVERSAL
ALGORITHM
WE
WILL
SUPPORT
A
PUBLIC
METHOD
WITH
CALLING
SIGNATURE
T
PREORDER
FOR
TREE
T
WHICH
GENERATES
A
PREORDER
ITERATION
OF
ALL
POSITIONS
WITHIN
THE
TREE
HOWEVER
THE
RECURSIVE
ALGORITHM
FOR
GEN
ERATING
A
PREORDER
TRAVERSAL
AS
ORIGINALLY
DESCRIBED
IN
CODE
FRAGMENT
MUST
BE
PARAMETERIZED
BY
A
SPECIFIC
POSITION
WITHIN
THE
TREE
THAT
SERVES
AS
THE
ROOT
OF
A
SUBTREE
TO
TRAVERSE
A
STANDARD
SOLUTION
FOR
SUCH
A
CIRCUMSTANCE
IS
TO
DEFINE
A
NON
PUBLIC
UTILITY
METHOD
WITH
THE
DESIRED
RECURSIVE
PARAMETERIZATION
AND
THEN
TO
HAVE
THE
PUBLIC
METHOD
PREORDER
INVOKE
THE
NONPUBLIC
METHOD
UPON
THE
ROOT
OF
THE
TREE
OUR
IMPLEMENTATION
OF
SUCH
A
DESIGN
IS
GIVEN
IN
CODE
FRAGMENT
CHAPTER
TREES
DEF
PREORDER
SELF
GENERATE
A
PREORDER
ITERATION
OF
POSITIONS
IN
THE
TREE
IF
NOT
SELF
IS
EMPTY
FOR
P
IN
SELF
SUBTREE
PREORDER
SELF
ROOT
START
RECURSION
YIELD
P
DEF
SUBTREE
PREORDER
SELF
P
GENERATE
A
PREORDER
ITERATION
OF
POSITIONS
IN
SUBTREE
ROOTED
AT
P
YIELD
P
VISIT
P
BEFORE
ITS
SUBTREES
FOR
C
IN
SELF
CHILDREN
P
FOR
EACH
CHILD
C
FOR
OTHER
IN
SELF
SUBTREE
PREORDER
C
DO
PREORDER
OF
C
SUBTREE
YIELD
OTHER
YIELDING
EACH
TO
OUR
CALLER
CODE
FRAGMENT
SUPPORT
FOR
PERFORMING
A
PREORDER
TRAVERSAL
OF
A
TREE
THIS
CODE
SHOULD
BE
INCLUDED
IN
THE
BODY
OF
THE
TREE
CLASS
FORMALLY
BOTH
PREORDER
AND
THE
UTILITY
SUBTREE
PREORDER
ARE
GENERATORS
RATHER
THAN
PERFORM
A
VISIT
ACTION
FROM
WITHIN
THIS
CODE
WE
YIELD
EACH
POSITION
TO
THE
CALLER
AND
LET
THE
CALLER
DECIDE
WHAT
ACTION
TO
PERFORM
AT
THAT
POSITION
THE
SUBTREE
PREORDER
METHOD
IS
THE
RECURSIVE
ONE
HOWEVER
BECAUSE
WE
ARE
RELYING
ON
GENERATORS
RATHER
THAN
TRADITIONAL
FUNCTIONS
THE
RECURSION
HAS
A
SLIGHTLY
DIFFERENT
FORM
IN
ORDER
TO
YIELD
ALL
POSITIONS
WITHIN
THE
SUBTREE
OF
CHILD
C
WE
LOOP
OVER
THE
POSITIONS
YIELDED
BY
THE
RECURSIVE
CALL
SELF
SUBTREE
PREORDER
C
AND
RE
YIELD
EACH
POSITION
IN
THE
OUTER
CONTEXT
NOTE
THAT
IF
P
IS
A
LEAF
THE
FOR
LOOP
OVER
SELF
CHILDREN
P
IS
TRIVIAL
THIS
IS
THE
BASE
CASE
FOR
OUR
RECURSION
WE
RELY
ON
A
SIMILAR
TECHNIQUE
IN
THE
PUBLIC
PREORDER
METHOD
TO
RE
YIELD
ALL
POSITIONS
THAT
ARE
GENERATED
BY
THE
RECURSIVE
PROCESS
STARTING
AT
THE
ROOT
OF
THE
TREE
IF
THE
TREE
IS
EMPTY
NOTHING
IS
YIELDED
AT
THIS
POINT
WE
HAVE
PROVIDED
FULL
SUPPORT
FOR
THE
PREORDER
GENERATOR
A
USER
OF
THE
CLASS
CAN
THEREFORE
WRITE
CODE
SUCH
AS
FOR
P
IN
T
PREORDER
VISIT
POSITION
P
THE
OFFICIAL
TREE
ADT
REQUIRES
THAT
ALL
TREES
SUPPORT
A
POSITIONS
METHOD
AS
WELL
TO
USE
A
PREORDER
TRAVERSAL
AS
THE
DEFAULT
ORDER
OF
ITERATION
WE
INCLUDE
THE
DEFINITION
SHOWN
IN
CODE
FRAGMENT
WITHIN
OUR
TREE
CLASS
RATHER
THAN
LOOP
OVER
THE
RESULTS
RETURNED
BY
THE
PREORDER
CALL
WE
RETURN
THE
ENTIRE
ITERATION
AS
AN
OBJECT
DEF
POSITIONS
SELF
GENERATE
AN
ITERATION
OF
THE
TREE
POSITIONS
RETURN
SELF
PREORDER
RETURN
ENTIRE
PREORDER
ITERATION
CODE
FRAGMENT
AN
IMPLEMENTATION
OF
THE
POSITIONS
METHOD
FOR
THE
TREE
CLASS
THAT
RELIES
ON
A
PREORDER
TRAVERSAL
TO
GENERATE
THE
RESULTS
TREE
TRAVERSAL
ALGORITHMS
POSTORDER
TRAVERSAL
WE
CAN
IMPLEMENT
A
POSTORDER
TRAVERSAL
USING
VERY
SIMILAR
TECHNIQUE
AS
WITH
A
PREORDER
TRAVERSAL
THE
ONLY
DIFFERENCE
IS
THAT
WITHIN
THE
RECURSIVE
UTILITY
FOR
A
POST
ORDER
WE
WAIT
TO
YIELD
POSITION
P
UNTIL
AFTER
WE
HAVE
RECURSIVELY
YIELD
THE
POSITIONS
IN
ITS
SUBTREES
AN
IMPLEMENTATION
IS
GIVEN
IN
CODE
FRAGMENT
DEF
POSTORDER
SELF
GENERATE
A
POSTORDER
ITERATION
OF
POSITIONS
IN
THE
TREE
IF
NOT
SELF
IS
EMPTY
FOR
P
IN
SELF
SUBTREE
POSTORDER
SELF
ROOT
START
RECURSION
YIELD
P
DEF
SUBTREE
POSTORDER
SELF
P
GENERATE
A
POSTORDER
ITERATION
OF
POSITIONS
IN
SUBTREE
ROOTED
AT
P
FOR
C
IN
SELF
CHILDREN
P
FOR
EACH
CHILD
C
FOR
OTHER
IN
SELF
SUBTREE
POSTORDER
C
DO
POSTORDER
OF
C
SUBTREE
YIELD
OTHER
YIELDING
EACH
TO
OUR
CALLER
YIELD
P
VISIT
P
AFTER
ITS
SUBTREES
CODE
FRAGMENT
SUPPORT
FOR
PERFORMING
A
POSTORDER
TRAVERSAL
OF
A
TREE
THIS
CODE
SHOULD
BE
INCLUDED
IN
THE
BODY
OF
THE
TREE
CLASS
BREADTH
FIRST
TRAVERSAL
IN
CODE
FRAGMENT
WE
PROVIDE
AN
IMPLEMENTATION
OF
THE
BREADTH
FIRST
TRAVERSAL
ALGORITHM
IN
THE
CONTEXT
OF
OUR
TREE
CLASS
RECALL
THAT
THE
BREADTH
FIRST
TRAVERSAL
ALGORITHM
IS
NOT
RECURSIVE
IT
RELIES
ON
A
QUEUE
OF
POSITIONS
TO
MANAGE
THE
TRAVER
SAL
PROCESS
OUR
IMPLEMENTATION
USES
THE
LINKEDQUEUE
CLASS
FROM
SECTION
ALTHOUGH
ANY
IMPLEMENTATION
OF
THE
QUEUE
ADT
WOULD
SUFFICE
INORDER
TRAVERSAL
FOR
BINARY
TREES
THE
PREORDER
POSTORDER
AND
BREADTH
FIRST
TRAVERSAL
ALGORITHMS
ARE
APPLICABLE
TO
ALL
TREES
AND
SO
WE
INCLUDE
THEIR
IMPLEMENTATIONS
WITHIN
THE
TREE
ABSTRACT
BASE
CLASS
THOSE
METHODS
ARE
INHERITED
BY
THE
ABSTRACT
BINARYTREE
CLASS
THE
CONCRETE
LINKEDBINARYTREE
CLASS
AND
ANY
OTHER
DEPENDENT
TREE
CLASSES
WE
MIGHT
DEVELOP
THE
INORDER
TRAVERSAL
ALGORITHM
BECAUSE
IT
EXPLICITLY
RELIES
ON
THE
NOTION
OF
A
LEFT
AND
RIGHT
CHILD
OF
A
NODE
ONLY
APPLIES
TO
BINARY
TREES
WE
THEREFORE
INCLUDE
ITS
DEFINITION
WITHIN
THE
BODY
OF
THE
BINARYTREE
CLASS
WE
USE
A
SIMILAR
TECHNIQUE
TO
IMPLEMENT
AN
INORDER
TRAVERSAL
CODE
FRAGMENT
AS
WE
DID
WITH
PREORDER
AND
POSTORDER
TRAVERSALS
CHAPTER
TREES
DEF
BREADTHFIRST
SELF
GENERATE
A
BREADTH
FIRST
ITERATION
OF
THE
POSITIONS
OF
THE
TREE
IF
NOT
SELF
IS
EMPTY
FRINGE
LINKEDQUEUE
KNOWN
POSITIONS
NOT
YET
YIELDED
FRINGE
ENQUEUE
SELF
ROOT
STARTING
WITH
THE
ROOT
WHILE
NOT
FRINGE
IS
EMPTY
P
FRINGE
DEQUEUE
REMOVE
FROM
FRONT
OF
THE
QUEUE
YIELD
P
REPORT
THIS
POSITION
FOR
C
IN
SELF
CHILDREN
P
FRINGE
ENQUEUE
C
ADD
CHILDREN
TO
BACK
OF
QUEUE
CODE
FRAGMENT
AN
IMPLEMENTATION
OF
A
BREADTH
FIRST
TRAVERSAL
OF
A
TREE
THIS
CODE
SHOULD
BE
INCLUDED
IN
THE
BODY
OF
THE
TREE
CLASS
DEF
INORDER
SELF
GENERATE
AN
INORDER
ITERATION
OF
POSITIONS
IN
THE
TREE
IF
NOT
SELF
IS
EMPTY
FOR
P
IN
SELF
SUBTREE
INORDER
SELF
ROOT
YIELD
P
DEF
SUBTREE
INORDER
SELF
P
GENERATE
AN
INORDER
ITERATION
OF
POSITIONS
IN
SUBTREE
ROOTED
AT
P
IF
SELF
LEFT
P
IS
NOT
NONE
IF
LEFT
CHILD
EXISTS
TRAVERSE
ITS
SUBTREE
FOR
OTHER
IN
SELF
SUBTREE
INORDER
SELF
LEFT
P
YIELD
OTHER
YIELD
P
VISIT
P
BETWEEN
ITS
SUBTREES
IF
SELF
RIGHT
P
IS
NOT
NONE
IF
RIGHT
CHILD
EXISTS
TRAVERSE
ITS
SUBTREE
FOR
OTHER
IN
SELF
SUBTREE
INORDER
SELF
RIGHT
P
YIELD
OTHER
CODE
FRAGMENT
SUPPORT
FOR
PERFORMING
AN
INORDER
TRAVERSAL
OF
A
BINARY
TREE
THIS
CODE
SHOULD
BE
INCLUDED
IN
THE
BINARYTREE
CLASS
GIVEN
IN
CODE
FRAGMENT
FOR
MANY
APPLICATIONS
OF
BINARY
TREES
AN
INORDER
TRAVERSAL
PROVIDES
A
NATURAL
ITERATION
WE
COULD
MAKE
IT
THE
DEFAULT
FOR
THE
BINARYTREE
CLASS
BY
OVERRIDING
THE
POSITIONS
METHOD
THAT
WAS
INHERITED
FROM
THE
TREE
CLASS
SEE
CODE
FRAGMENT
OVERRIDE
INHERITED
VERSION
TO
MAKE
INORDER
THE
DEFAULT
DEF
POSITIONS
SELF
GENERATE
AN
ITERATION
OF
THE
TREE
POSITIONS
RETURN
SELF
INORDER
MAKE
INORDER
THE
DEFAULT
CODE
FRAGMENT
DEFINING
THE
BINARYTREE
POSITION
METHOD
SO
THAT
POSITIONS
ARE
REPORTED
USING
INORDER
TRAVERSAL
TREE
TRAVERSAL
ALGORITHMS
APPLICATIONS
OF
TREE
TRAVERSALS
IN
THIS
SECTION
WE
DEMONSTRATE
SEVERAL
REPRESENTATIVE
APPLICATIONS
OF
TREE
TRAVERSALS
INCLUDING
SOME
CUSTOMIZATIONS
OF
THE
STANDARD
TRAVERSAL
ALGORITHMS
TABLE
OF
CONTENTS
WHEN
USING
A
TREE
TO
REPRESENT
THE
HIERARCHICAL
STRUCTURE
OF
A
DOCUMENT
A
PREORDER
TRAVERSAL
OF
THE
TREE
CAN
NATURALLY
BE
USED
TO
PRODUCE
A
TABLE
OF
CONTENTS
FOR
THE
DOC
UMENT
FOR
EXAMPLE
THE
TABLE
OF
CONTENTS
ASSOCIATED
WITH
THE
TREE
FROM
FIGURE
IS
DISPLAYED
IN
FIGURE
PART
A
OF
THAT
FIGURE
GIVES
A
SIMPLE
PRESENTATION
WITH
ONE
ELEMENT
PER
LINE
PART
B
SHOWS
A
MORE
ATTRACTIVE
PRESENTATION
PRODUCED
BY
INDENTING
EACH
ELEMENT
BASED
ON
ITS
DEPTH
WITHIN
THE
TREE
A
SIMILAR
PRESENTATION
COULD
BE
USED
TO
DISPLAY
THE
CONTENTS
OF
A
COMPUTER
FILE
SYSTEM
BASED
ON
ITS
TREE
REPRESENTATION
AS
IN
FIGURE
PAPER
PAPER
TITLE
TITLE
ABSTRACT
ABSTRACT
A
B
FIGURE
TABLE
OF
CONTENTS
FOR
A
DOCUMENT
REPRESENTED
BY
THE
TREE
IN
FIGURE
A
WITHOUT
INDENTATION
B
WITH
INDENTATION
BASED
ON
DEPTH
WITHIN
THE
TREE
THE
UNINDENTED
VERSION
OF
THE
TABLE
OF
CONTENTS
GIVEN
A
TREE
T
CAN
BE
PRODUCED
WITH
THE
FOLLOWING
CODE
FOR
P
IN
T
PREORDER
PRINT
P
ELEMENT
TO
PRODUCE
THE
PRESENTATION
OF
FIGURE
B
WE
INDENT
EACH
ELEMENT
WITH
A
NUMBER
OF
SPACES
EQUAL
TO
TWICE
THE
ELEMENT
DEPTH
IN
THE
TREE
HENCE
THE
ROOT
ELE
MENT
WAS
UNINDENTED
ALTHOUGH
WE
COULD
REPLACE
THE
BODY
OF
THE
ABOVE
LOOP
WITH
THE
STATEMENT
PRINT
T
DEPTH
P
STR
P
ELEMENT
SUCH
AN
APPROACH
IS
UNNECESSARILY
INEFFICIENT
ALTHOUGH
THE
WORK
TO
PRODUCE
THE
PREORDER
TRAVERSAL
RUNS
IN
O
N
TIME
BASED
ON
THE
ANALYSIS
OF
SECTION
THE
CALLS
TO
DEPTH
INCUR
A
HID
DEN
COST
MAKING
A
CALL
TO
DEPTH
FROM
EVERY
POSITION
OF
THE
TREE
RESULTS
IN
O
WORST
CASE
TIME
AS
NOTED
WHEN
ANALYZING
THE
ALGORITHM
IN
SECTION
CHAPTER
TREES
A
PREFERRED
APPROACH
TO
PRODUCING
AN
INDENTED
TABLE
OF
CONTENTS
IS
TO
REDESIGN
A
TOP
DOWN
RECURSION
THAT
INCLUDES
THE
CURRENT
DEPTH
AS
AN
ADDITIONAL
PARAMETER
SUCH
AN
IMPLEMENTATION
IS
PROVIDED
IN
CODE
FRAGMENT
THIS
IMPLEMENTATION
RUNS
IN
WORST
CASE
O
N
TIME
EXCEPT
TECHNICALLY
THE
TIME
IT
TAKES
TO
PRINT
STRINGS
OF
INCREASING
LENGTHS
DEF
PREORDER
INDENT
T
P
D
PRINT
PREORDER
REPRESENTATION
OF
SUBTREE
OF
T
ROOTED
AT
P
AT
DEPTH
D
PRINT
D
STR
P
ELEMENT
USE
DEPTH
FOR
INDENTATION
FOR
C
IN
T
CHILDREN
P
PREORDER
INDENT
T
C
D
CHILD
DEPTH
IS
D
CODE
FRAGMENT
EFFICIENT
RECURSION
FOR
PRINTING
INDENTED
VERSION
OF
A
PRE
ORDER
TRAVERSAL
ON
A
COMPLETE
TREE
T
THE
RECURSION
SHOULD
BE
STARTED
WITH
FORM
PREORDER
INDENT
T
T
ROOT
IN
THE
EXAMPLE
OF
FIGURE
WE
WERE
FORTUNATE
IN
THAT
THE
NUMBERING
WAS
EMBEDDED
WITHIN
THE
ELEMENTS
OF
THE
TREE
MORE
GENERALLY
WE
MIGHT
BE
INTERESTED
IN
USING
A
PREORDER
TRAVERSAL
TO
DISPLAY
THE
STRUCTURE
OF
A
TREE
WITH
INDENTATION
AND
ALSO
EXPLICIT
NUMBERING
THAT
WAS
NOT
PRESENT
IN
THE
TREE
FOR
EXAMPLE
WE
MIGHT
DISPLAY
THE
TREE
FROM
FIGURE
BEGINNING
AS
ELECTRONICS
R
US
R
D
SALES
DOMESTIC
INTERNATIONAL
CANADA
AMERICA
THIS
IS
MORE
CHALLENGING
BECAUSE
THE
NUMBERS
USED
AS
LABELS
ARE
IMPLICIT
IN
THE
STRUCTURE
OF
THE
TREE
A
LABEL
DEPENDS
ON
THE
INDEX
OF
EACH
POSITION
RELATIVE
TO
ITS
SIBLINGS
ALONG
THE
PATH
FROM
THE
ROOT
TO
THE
CURRENT
POSITION
TO
ACCOMPLISH
THE
TASK
WE
ADD
A
REPRESENTATION
OF
THAT
PATH
AS
AN
ADDITIONAL
PARAMETER
TO
THE
RECURSIVE
SIGNATURE
SPECIFICALLY
WE
USE
A
LIST
OF
ZERO
INDEXED
NUMBERS
ONE
FOR
EACH
POSITION
ALONG
THE
DOWNWARD
PATH
OTHER
THAN
THE
ROOT
WE
CONVERT
THOSE
NUMBERS
TO
ONE
INDEXED
FORM
WHEN
PRINTING
AT
THE
IMPLEMENTATION
LEVEL
WE
WISH
TO
AVOID
THE
INEFFICIENCY
OF
DUPLICATING
SUCH
LISTS
WHEN
SENDING
A
NEW
PARAMETER
FROM
ONE
LEVEL
OF
THE
RECURSION
TO
THE
NEXT
A
STANDARD
SOLUTION
IS
TO
SHARE
THE
SAME
LIST
INSTANCE
THROUGHOUT
THE
RECURSION
AT
ONE
LEVEL
OF
THE
RECURSION
A
NEW
ENTRY
IS
TEMPORARILY
ADDED
TO
THE
END
OF
THE
LIST
BEFORE
MAKING
FURTHER
RECURSIVE
CALLS
IN
ORDER
TO
LEAVE
NO
TRACE
THAT
SAME
BLOCK
OF
CODE
MUST
REMOVE
THE
EXTRANEOUS
ENTRY
FROM
THE
LIST
BEFORE
COMPLETING
ITS
TASK
AN
IMPLEMENTATION
BASED
ON
THIS
APPROACH
IS
GIVEN
IN
CODE
FRAGMENT
TREE
TRAVERSAL
ALGORITHMS
DEF
PREORDER
LABEL
T
P
D
PATH
PRINT
LABELED
REPRESENTATION
OF
SUBTREE
OF
T
ROOTED
AT
P
AT
DEPTH
D
LABEL
JOIN
STR
J
FOR
J
IN
PATH
DISPLAYED
LABELS
ARE
ONE
INDEXED
PRINT
D
LABEL
P
ELEMENT
PATH
APPEND
PATH
ENTRIES
ARE
ZERO
INDEXED
FOR
C
IN
T
CHILDREN
P
PREORDER
LABEL
T
C
D
PATH
CHILD
DEPTH
IS
D
PATH
PATH
POP
CODE
FRAGMENT
EFFICIENT
RECURSION
FOR
PRINTING
AN
INDENTED
AND
LABELED
PRE
SENTATION
OF
A
PREORDER
TRAVERSAL
PARENTHETIC
REPRESENTATIONS
OF
A
TREE
IT
IS
NOT
POSSIBLE
TO
RECONSTRUCT
A
GENERAL
TREE
GIVEN
ONLY
THE
PREORDER
SEQUENCE
OF
ELEMENTS
AS
IN
FIGURE
A
SOME
ADDITIONAL
CONTEXT
IS
NECESSARY
FOR
THE
STRUCTURE
OF
THE
TREE
TO
BE
WELL
DEFINED
THE
USE
OF
INDENTATION
OR
NUMBERED
LABELS
PROVIDES
SUCH
CONTEXT
WITH
A
VERY
HUMAN
FRIENDLY
PRESENTATION
HOWEVER
THERE
ARE
MORE
CONCISE
STRING
REPRESENTATIONS
OF
TREES
THAT
ARE
COMPUTER
FRIENDLY
IN
THIS
SECTION
WE
EXPLORE
ONE
SUCH
REPRESENTATION
THE
PARENTHETIC
STRING
REPRESENTATION
P
T
OF
TREE
T
IS
RECURSIVELY
DEFINED
AS
FOLLOWS
IF
T
CONSISTS
OF
A
SINGLE
POSITION
P
THEN
P
T
STR
P
ELEMENT
OTHERWISE
IT
IS
DEFINED
RECURSIVELY
AS
P
T
STR
P
ELEMENT
P
P
TK
WHERE
P
IS
THE
ROOT
OF
T
AND
TK
ARE
THE
SUBTREES
ROOTED
AT
THE
CHILDREN
OF
P
WHICH
ARE
GIVEN
IN
ORDER
IF
T
IS
AN
ORDERED
TREE
WE
ARE
USING
HERE
TO
DENOTE
STRING
CONCATENATION
AS
AN
EXAMPLE
THE
PARENTHETIC
REPRESENTATION
OF
THE
TREE
OF
FIGURE
WOULD
APPEAR
AS
FOLLOWS
LINE
BREAKS
ARE
COSMETIC
ELECTRONICS
R
US
R
D
SALES
DOMESTIC
INTERNATIONAL
CANADA
AMERICA
OVERSEAS
AFRICA
EUROPE
ASIA
AUSTRALIA
PURCHASING
MANUFACTURING
TV
CD
TUNER
ALTHOUGH
THE
PARENTHETIC
REPRESENTATION
IS
ESSENTIALLY
A
PREORDER
TRAVERSAL
WE
CANNOT
EASILY
PRODUCE
THE
ADDITIONAL
PUNCTUATION
USING
THE
FORMAL
IMPLEMENTATION
OF
PREORDER
AS
GIVEN
IN
CODE
FRAGMENT
THE
OPENING
PARENTHESIS
MUST
BE
PRODUCED
JUST
BEFORE
THE
LOOP
OVER
A
POSITION
CHILDREN
AND
THE
CLOSING
PARENTHESIS
MUST
BE
PRODUCED
JUST
AFTER
THAT
LOOP
FURTHERMORE
THE
SEPARATING
COMMAS
MUST
BE
PRODUCED
THE
PYTHON
FUNCTION
PARENTHESIZE
SHOWN
IN
CODE
FRAGMENT
IS
A
CUSTOM
TRAVERSAL
THAT
PRINTS
SUCH
A
PARENTHETIC
STRING
REPRESENTATION
OF
A
TREE
T
CHAPTER
TREES
DEF
PARENTHESIZE
T
P
PRINT
PARENTHESIZED
REPRESENTATION
OF
SUBTREE
OF
T
ROOTED
AT
P
PRINT
P
ELEMENT
END
USE
OF
END
AVOIDS
TRAILING
NEWLINE
IF
NOT
T
IS
LEAF
P
FIRST
TIME
TRUE
FOR
C
IN
T
CHILDREN
P
SEP
IF
FIRST
TIME
ELSE
DETERMINE
PROPER
SEPARATOR
PRINT
SEP
END
FIRST
TIME
FALSE
ANY
FUTURE
PASSES
WILL
NOT
BE
THE
FIRST
PARENTHESIZE
T
C
RECUR
ON
CHILD
PRINT
END
INCLUDE
CLOSING
PARENTHESIS
CODE
FRAGMENT
FUNCTION
THAT
PRINTS
PARENTHETIC
STRING
REPRESENTATION
OF
A
TREE
COMPUTING
DISK
SPACE
IN
EXAMPLE
WE
CONSIDERED
THE
USE
OF
A
TREE
AS
A
MODEL
FOR
A
FILE
SYSTEM
STRUC
TURE
WITH
INTERNAL
POSITIONS
REPRESENTING
DIRECTORIES
AND
LEAVES
REPRESENTING
FILES
IN
FACT
WHEN
INTRODUCING
THE
USE
OF
RECURSION
BACK
IN
CHAPTER
WE
SPECIFICALLY
EXAMINED
THE
TOPIC
OF
FILE
SYSTEMS
SEE
SECTION
ALTHOUGH
WE
DID
NOT
EXPLIC
ITLY
MODEL
IT
AS
A
TREE
AT
THAT
TIME
WE
GAVE
AN
IMPLEMENTATION
OF
AN
ALGORITHM
FOR
COMPUTING
THE
DISK
USAGE
CODE
FRAGMENT
THE
RECURSIVE
COMPUTATION
OF
DISK
SPACE
IS
EMBLEMATIC
OF
A
POSTORDER
TRAVERSAL
AS
WE
CANNOT
EFFECTIVELY
COMPUTE
THE
TOTAL
SPACE
USED
BY
A
DIRECTORY
UNTIL
AFTER
WE
KNOW
THE
SPACE
THAT
IS
USED
BY
ITS
CHILDREN
DIRECTORIES
UNFORTUNATELY
THE
FORMAL
IMPLEMENTATION
OF
POSTORDER
AS
GIVEN
IN
CODE
FRAGMENT
DOES
NOT
SUFFICE
FOR
THIS
PURPOSE
AS
IT
VISITS
THE
POSITION
OF
A
DIRECTORY
THERE
IS
NO
EASY
WAY
TO
DISCERN
WHICH
OF
THE
PREVIOUS
POSITIONS
REPRESENT
CHILDREN
OF
THAT
DIRECTORY
NOR
HOW
MUCH
RECURSIVE
DISK
SPACE
WAS
ALLOCATED
WE
WOULD
LIKE
TO
HAVE
A
MECHANISM
FOR
CHILDREN
TO
RETURN
INFORMATION
TO
THE
PARENT
AS
PART
OF
THE
TRAVERSAL
PROCESS
A
CUSTOM
SOLUTION
TO
THE
DISK
SPACE
PROB
LEM
WITH
EACH
LEVEL
OF
RECURSION
PROVIDING
A
RETURN
VALUE
TO
THE
PARENT
CALLER
IS
PROVIDED
IN
CODE
FRAGMENT
DEF
DISK
SPACE
T
P
RETURN
TOTAL
DISK
SPACE
FOR
SUBTREE
OF
T
ROOTED
AT
P
SUBTOTAL
P
ELEMENT
SPACE
SPACE
USED
AT
POSITION
P
FOR
C
IN
T
CHILDREN
P
SUBTOTAL
DISK
SPACE
T
C
ADD
CHILD
SPACE
TO
SUBTOTAL
RETURN
SUBTOTAL
CODE
FRAGMENT
RECURSIVE
COMPUTATION
OF
DISK
SPACE
FOR
A
TREE
WE
ASSUME
THAT
A
SPACE
METHOD
OF
EACH
TREE
ELEMENT
REPORTS
THE
LOCAL
SPACE
USED
AT
THAT
POSITION
TREE
TRAVERSAL
ALGORITHMS
EULER
TOURS
AND
THE
TEMPLATE
METHOD
PATTERN
THE
VARIOUS
APPLICATIONS
DESCRIBED
IN
SECTION
DEMONSTRATE
THE
GREAT
POWER
OF
RECURSIVE
TREE
TRAVERSALS
UNFORTUNATELY
THEY
ALSO
SHOW
THAT
THE
SPECIFIC
IMPLE
MENTATIONS
OF
THE
PREORDER
AND
POSTORDER
METHODS
OF
OUR
TREE
CLASS
OR
THE
INORDER
METHOD
OF
THE
BINARYTREE
CLASS
ARE
NOT
GENERAL
ENOUGH
TO
CAPTURE
THE
RANGE
OF
COMPUTATIONS
WE
DESIRE
IN
SOME
CASES
WE
NEED
MORE
OF
A
BLENDING
OF
THE
AP
PROACHES
WITH
INITIAL
WORK
PERFORMED
BEFORE
RECURRING
ON
SUBTREES
ADDITIONAL
WORK
PERFORMED
AFTER
THOSE
RECURSIONS
AND
IN
THE
CASE
OF
A
BINARY
TREE
WORK
PERFORMED
BETWEEN
THE
TWO
POSSIBLE
RECURSIONS
FURTHERMORE
IN
SOME
CONTEXTS
IT
WAS
IMPOR
TANT
TO
KNOW
THE
DEPTH
OF
A
POSITION
OR
THE
COMPLETE
PATH
FROM
THE
ROOT
TO
THAT
POSITION
OR
TO
RETURN
INFORMATION
FROM
ONE
LEVEL
OF
THE
RECURSION
TO
ANOTHER
FOR
EACH
OF
THE
PREVIOUS
APPLICATIONS
WE
WERE
ABLE
TO
DEVELOP
A
CUSTOM
IMPLEMENTA
TION
TO
PROPERLY
ADAPT
THE
RECURSIVE
IDEAS
BUT
THE
GREAT
PRINCIPLES
OF
OBJECT
ORIENTED
PROGRAMMING
INTRODUCED
IN
SECTION
INCLUDE
ADAPTABILITY
AND
REUSABILITY
IN
THIS
SECTION
WE
DEVELOP
A
MORE
GENERAL
FRAMEWORK
FOR
IMPLEMENTING
TREE
TRAVERSALS
BASED
ON
A
CONCEPT
KNOWN
AS
AN
EULER
TOUR
TRAVERSAL
THE
EULER
TOUR
TRAVERSAL
OF
A
GENERAL
TREE
T
CAN
BE
INFORMALLY
DEFINED
AS
A
WALK
AROUND
T
WHERE
WE
START
BY
GOING
FROM
THE
ROOT
TOWARD
ITS
LEFTMOST
CHILD
VIEWING
THE
EDGES
OF
T
AS
BEING
WALLS
THAT
WE
ALWAYS
KEEP
TO
OUR
LEFT
SEE
FIGURE
FIGURE
EULER
TOUR
TRAVERSAL
OF
A
TREE
THE
COMPLEXITY
OF
THE
WALK
IS
O
N
BECAUSE
IT
PROGRESSES
EXACTLY
TWO
TIMES
ALONG
EACH
OF
THE
N
EDGES
OF
THE
TREE
ONCE
GOING
DOWNWARD
ALONG
THE
EDGE
AND
LATER
GOING
UPWARD
ALONG
THE
EDGE
TO
UNIFY
THE
CONCEPT
OF
PREORDER
AND
POSTORDER
TRAVERSALS
WE
CAN
THINK
OF
THERE
BEING
TWO
NOTABLE
VISITS
TO
EACH
POSITION
P
A
PRE
VISIT
OCCURS
WHEN
FIRST
REACHING
THE
POSITION
THAT
IS
WHEN
THE
WALK
PASSES
IMMEDIATELY
LEFT
OF
THE
NODE
IN
OUR
VISUALIZATION
A
POST
VISIT
OCCURS
WHEN
THE
WALK
LATER
PROCEEDS
UPWARD
FROM
THAT
POSITION
THAT
IS
WHEN
THE
WALK
PASSES
TO
THE
RIGHT
OF
THE
NODE
IN
OUR
VISUALIZATION
CHAPTER
TREES
THE
PROCESS
OF
AN
EULER
TOUR
CAN
EASILY
BE
VIEWED
RECURSIVELY
IN
BETWEEN
THE
PRE
VISIT
AND
POST
VISIT
OF
A
GIVEN
POSITION
WILL
BE
A
RECURSIVE
TOUR
OF
EACH
OF
ITS
SUBTREES
LOOKING
AT
FIGURE
AS
AN
EXAMPLE
THERE
IS
A
CONTIGUOUS
PORTION
OF
THE
ENTIRE
TOUR
THAT
IS
ITSELF
AN
EULER
TOUR
OF
THE
SUBTREE
OF
THE
NODE
WITH
ELEMENT
THAT
TOUR
CONTAINS
TWO
CONTIGUOUS
SUBTOURS
ONE
TRAVERSING
THAT
POSITION
LEFT
SUBTREE
AND
ANOTHER
TRAVERSING
THE
RIGHT
SUBTREE
THE
PSEUDO
CODE
FOR
AN
EULER
TOUR
TRAVERSAL
OF
A
SUBTREE
ROOTED
AT
A
POSITION
P
IS
SHOWN
IN
CODE
FRAGMENT
ALGORITHM
EULERTOUR
T
P
PERFORM
THE
PRE
VISIT
ACTION
FOR
POSITION
P
FOR
EACH
CHILD
C
IN
T
CHILDREN
P
DO
EULERTOUR
T
C
RECURSIVELY
TOUR
THE
SUBTREE
ROOTED
AT
C
PERFORM
THE
POST
VISIT
ACTION
FOR
POSITION
P
CODE
FRAGMENT
ALGORITHM
EULERTOUR
FOR
PERFORMING
AN
EULER
TOUR
TRAVERSAL
OF
A
SUBTREE
ROOTED
AT
POSITION
P
OF
A
TREE
THE
TEMPLATE
METHOD
PATTERN
TO
PROVIDE
A
FRAMEWORK
THAT
IS
REUSABLE
AND
ADAPTABLE
WE
RELY
ON
AN
INTERESTING
OBJECT
ORIENTED
SOFTWARE
DESIGN
PATTERN
THE
TEMPLATE
METHOD
PATTERN
THE
TEMPLATE
METHOD
PATTERN
DESCRIBES
A
GENERIC
COMPUTATION
MECHANISM
THAT
CAN
BE
SPECIALIZED
FOR
A
PARTICULAR
APPLICATION
BY
REDEFINING
CERTAIN
STEPS
TO
ALLOW
CUSTOMIZATION
THE
PRIMARY
ALGORITHM
CALLS
AUXILIARY
FUNCTIONS
KNOWN
AS
HOOKS
AT
DESIGNATED
STEPS
OF
THE
PROCESS
IN
THE
CONTEXT
OF
AN
EULER
TOUR
TRAVERSAL
WE
DEFINE
TWO
SEPARATE
HOOKS
A
PRE
VISIT
HOOK
THAT
IS
CALLED
BEFORE
THE
SUBTREES
ARE
TRAVERSED
AND
A
POSTVISIT
HOOK
THAT
IS
CALLED
AFTER
THE
COMPLETION
OF
THE
SUBTREE
TRAVERSALS
OUR
IMPLEMENTATION
WILL
TAKE
THE
FORM
OF
AN
EULERTOUR
CLASS
THAT
MANAGES
THE
PROCESS
AND
DEFINES
TRIVIAL
DEFI
NITIONS
FOR
THE
HOOKS
THAT
DO
NOTHING
THE
TRAVERSAL
CAN
BE
CUSTOMIZED
BY
DEFINING
A
SUBCLASS
OF
EULERTOUR
AND
OVERRIDING
ONE
OR
BOTH
HOOKS
TO
PROVIDE
SPECIALIZED
BEHAVIOR
PYTHON
IMPLEMENTATION
OUR
IMPLEMENTATION
OF
AN
EULERTOUR
CLASS
IS
PROVIDED
IN
CODE
FRAGMENT
THE
PRIMARY
RECURSIVE
PROCESS
IS
DEFINED
IN
THE
NONPUBLIC
TOUR
METHOD
A
TOUR
INSTANCE
IS
CREATED
BY
SENDING
A
REFERENCE
TO
A
SPECIFIC
TREE
TO
THE
CONSTRUCTOR
AND
THEN
BY
CALLING
THE
PUBLIC
EXECUTE
METHOD
WHICH
BEINGS
THE
TOUR
AND
RETURNS
A
FINAL
RESULT
OF
THE
COMPUTATION
TREE
TRAVERSAL
ALGORITHMS
CLASS
EULERTOUR
ABSTRACT
BASE
CLASS
FOR
PERFORMING
EULER
TOUR
OF
A
TREE
HOOK
PREVISIT
AND
HOOK
POSTVISIT
MAY
BE
OVERRIDDEN
BY
SUBCLASSES
DEF
INIT
SELF
TREE
PREPARE
AN
EULER
TOUR
TEMPLATE
FOR
GIVEN
TREE
SELF
TREE
TREE
DEF
TREE
SELF
RETURN
REFERENCE
TO
THE
TREE
BEING
TRAVERSED
RETURN
SELF
TREE
DEF
EXECUTE
SELF
PERFORM
THE
TOUR
AND
RETURN
ANY
RESULT
FROM
POST
VISIT
OF
ROOT
IF
LEN
SELF
TREE
RETURN
SELF
TOUR
SELF
TREE
ROOT
START
THE
RECURSION
DEF
TOUR
SELF
P
D
PATH
PERFORM
TOUR
OF
SUBTREE
ROOTED
AT
POSITION
P
P
POSITION
OF
CURRENT
NODE
BEING
VISITED
D
DEPTH
OF
P
IN
THE
TREE
PATH
LIST
OF
INDICES
OF
CHILDREN
ON
PATH
FROM
ROOT
TO
P
SELF
HOOK
PREVISIT
P
D
PATH
PRE
VISIT
P
RESULTS
PATH
APPEND
ADD
NEW
INDEX
TO
END
OF
PATH
BEFORE
RECURSION
FOR
C
IN
SELF
TREE
CHILDREN
P
RESULTS
APPEND
SELF
TOUR
C
D
PATH
RECUR
ON
CHILD
SUBTREE
PATH
INCREMENT
INDEX
PATH
POP
REMOVE
EXTRANEOUS
INDEX
FROM
END
OF
PATH
ANSWER
SELF
HOOK
POSTVISIT
P
D
PATH
RESULTS
POST
VISIT
P
RETURN
ANSWER
DEF
HOOK
PREVISIT
SELF
P
D
PATH
CAN
BE
OVERRIDDEN
PASS
DEF
HOOK
POSTVISIT
SELF
P
D
PATH
RESULTS
CAN
BE
OVERRIDDEN
PASS
CODE
FRAGMENT
AN
EULERTOUR
BASE
CLASS
PROVIDING
A
FRAMEWORK
FOR
PERFORM
ING
EULER
TOUR
TRAVERSALS
OF
A
TREE
CHAPTER
TREES
BASED
ON
OUR
EXPERIENCE
OF
CUSTOMIZING
TRAVERSALS
FOR
SAMPLE
APPLICATIONS
SEC
TION
WE
BUILD
SUPPORT
INTO
THE
PRIMARY
EULERTOUR
FOR
MAINTAINING
THE
RE
CURSIVE
DEPTH
AND
THE
REPRESENTATION
OF
THE
RECURSIVE
PATH
THROUGH
A
TREE
USING
THE
APPROACH
THAT
WE
INTRODUCED
IN
CODE
FRAGMENT
WE
ALSO
PROVIDE
A
MECHANISM
FOR
ONE
RECURSIVE
LEVEL
TO
RETURN
A
VALUE
TO
ANOTHER
WHEN
POST
PROCESSING
FORMALLY
OUR
FRAMEWORK
RELIES
ON
THE
FOLLOWING
TWO
HOOKS
THAT
CAN
BE
SPECIALIZED
METHOD
HOOK
PREVISIT
P
D
PATH
THIS
FUNCTION
IS
CALLED
ONCE
FOR
EACH
POSITION
IMMEDIATELY
BEFORE
ITS
SUBTREES
IF
ANY
ARE
TRAVERSED
PARAMETER
P
IS
A
POSITION
IN
THE
TREE
D
IS
THE
DEPTH
OF
THAT
POSITION
AND
PATH
IS
A
LIST
OF
INDICES
USING
THE
CONVENTION
DESCRIBED
IN
THE
DISCUSSION
OF
CODE
FRAGMENT
NO
RETURN
VALUE
IS
EXPECTED
FROM
THIS
FUNCTION
METHOD
HOOK
POSTVISIT
P
D
PATH
RESULTS
THIS
FUNCTION
IS
CALLED
ONCE
FOR
EACH
POSITION
IMMEDIATELY
AFTER
ITS
SUBTREES
IF
ANY
ARE
TRAVERSED
THE
FIRST
THREE
PARAMETERS
USE
THE
SAME
CONVENTION
AS
DID
HOOK
PREVISIT
THE
FINAL
PARAMETER
IS
A
LIST
OF
OBJECTS
THAT
WERE
PROVIDED
AS
RETURN
VALUES
FROM
THE
POST
VISITS
OF
THE
RESPECTIVE
SUBTREES
OF
P
ANY
VALUE
RETURNED
BY
THIS
CALL
WILL
BE
AVAILABLE
TO
THE
PARENT
OF
P
DURING
ITS
POSTVISIT
FOR
MORE
COMPLEX
TASKS
SUBCLASSES
OF
EULERTOUR
MAY
ALSO
CHOOSE
TO
INITIALIZE
AND
MAINTAIN
ADDITIONAL
STATE
IN
THE
FORM
OF
INSTANCE
VARIABLES
THAT
CAN
BE
ACCESSED
WITHIN
THE
BODIES
OF
THE
HOOKS
USING
THE
EULER
TOUR
FRAMEWORK
TO
DEMONSTRATE
THE
FLEXIBILITY
OF
OUR
EULER
TOUR
FRAMEWORK
WE
REVISIT
THE
SAMPLE
APPLICATIONS
FROM
SECTION
AS
A
SIMPLE
EXAMPLE
AN
INDENTED
PREORDER
TRAVER
SAL
AKIN
TO
THAT
ORIGINALLY
PRODUCED
BY
CODE
FRAGMENT
CAN
BE
GENERATED
WITH
THE
SIMPLE
SUBCLASS
GIVEN
IN
CODE
FRAGMENT
CLASS
PREORDERPRINTINDENTEDTOUR
EULERTOUR
DEF
HOOK
PREVISIT
SELF
P
D
PATH
PRINT
D
STR
P
ELEMENT
CODE
FRAGMENT
A
SUBCLASS
OF
EULERTOUR
THAT
PRODUCES
AN
INDENTED
PREORDER
LIST
OF
A
TREE
ELEMENTS
SUCH
A
TOUR
WOULD
BE
STARTED
BY
CREATING
AN
INSTANCE
OF
THE
SUBCLASS
FOR
A
GIVEN
TREE
T
AND
INVOKING
ITS
EXECUTE
METHOD
THIS
COULD
BE
EXPRESSED
AS
FOLLOWS
TOUR
PREORDERPRINTINDENTEDTOUR
T
TOUR
EXECUTE
TREE
TRAVERSAL
ALGORITHMS
A
LABELED
VERSION
OF
AN
INDENTED
PREORDER
PRESENTATION
AKIN
TO
CODE
FRAG
MENT
COULD
BE
GENERATED
BY
THE
NEW
SUBCLASS
OF
EULERTOUR
SHOWN
IN
CODE
FRAGMENT
CLASS
PREORDERPRINTINDENTEDLABELEDTOUR
EULERTOUR
DEF
HOOK
PREVISIT
SELF
P
D
PATH
LABEL
JOIN
STR
J
FOR
J
IN
PATH
LABELS
ARE
ONE
INDEXED
PRINT
D
LABEL
P
ELEMENT
CODE
FRAGMENT
A
SUBCLASS
OF
EULERTOUR
THAT
PRODUCES
A
LABELED
AND
INDENTED
PREORDER
LIST
OF
A
TREE
ELEMENTS
TO
PRODUCE
THE
PARENTHETIC
STRING
REPRESENTATION
ORIGINALLY
ACHIEVED
WITH
CODE
FRAGMENT
WE
DEFINE
A
SUBCLASS
THAT
OVERRIDES
BOTH
THE
PREVISIT
AND
POSTVISIT
HOOKS
OUR
NEW
IMPLEMENTATION
IS
GIVEN
IN
CODE
FRAGMENT
CLASS
PARENTHESIZETOUR
EULERTOUR
DEF
HOOK
PREVISIT
SELF
P
D
PATH
IF
PATH
AND
PATH
P
FOLLOWS
A
SIBLING
PRINT
END
SO
PREFACE
WITH
COMMA
PRINT
P
ELEMENT
END
THEN
PRINT
ELEMENT
IF
NOT
SELF
TREE
IS
LEAF
P
IF
P
HAS
CHILDREN
PRINT
END
PRINT
OPENING
PARENTHESIS
DEF
HOOK
POSTVISIT
SELF
P
D
PATH
RESULTS
IF
NOT
SELF
TREE
IS
LEAF
P
IF
P
HAS
CHILDREN
PRINT
END
PRINT
CLOSING
PARENTHESIS
CODE
FRAGMENT
A
SUBCLASS
OF
EULERTOUR
THAT
PRINTS
A
PARENTHETIC
STRING
REPRE
SENTATION
OF
A
TREE
NOTICE
THAT
IN
THIS
IMPLEMENTATION
WE
NEED
TO
INVOKE
A
METHOD
ON
THE
TREE
INSTANCE
THAT
IS
BEING
TRAVERSED
FROM
WITHIN
THE
HOOKS
THE
PUBLIC
TREE
METHOD
OF
THE
EULERTOUR
CLASS
SERVES
AS
AN
ACCESSOR
FOR
THAT
TREE
FINALLY
THE
TASK
OF
COMPUTING
DISK
SPACE
AS
ORIGINALLY
IMPLEMENTED
IN
CODE
FRAGMENT
CAN
BE
PERFORMED
QUITE
EASILY
WITH
THE
EULERTOUR
SUBCLASS
SHOWN
IN
CODE
FRAGMENT
THE
POSTVISIT
RESULT
OF
THE
ROOT
WILL
BE
RETURNED
BY
THE
CALL
TO
EXECUTE
CLASS
DISKSPACETOUR
EULERTOUR
DEF
HOOK
POSTVISIT
SELF
P
D
PATH
RESULTS
WE
SIMPLY
ADD
SPACE
ASSOCIATED
WITH
P
TO
THAT
OF
ITS
SUBTREES
RETURN
P
ELEMENT
SPACE
SUM
RESULTS
CODE
FRAGMENT
A
SUBCLASS
OF
EULERTOUR
THAT
COMPUTES
DISK
SPACE
FOR
A
TREE
CHAPTER
TREES
THE
EULER
TOUR
TRAVERSAL
OF
A
BINARY
TREE
IN
SECTION
WE
INTRODUCED
THE
CONCEPT
OF
AN
EULER
TOUR
TRAVERSAL
OF
A
GENERAL
GRAPH
USING
THE
TEMPLATE
METHOD
PATTERN
IN
DESIGNING
THE
EULERTOUR
CLASS
THAT
CLASS
PROVIDED
METHODS
HOOK
PREVISIT
AND
HOOK
POSTVISIT
THAT
COULD
BE
OVERRID
DEN
TO
CUSTOMIZE
A
TOUR
IN
CODE
FRAGMENT
WE
PROVIDE
A
BINARYEULERTOUR
SPECIALIZATION
THAT
INCLUDES
AN
ADDITIONAL
HOOK
INVISIT
THAT
IS
CALLED
ONCE
FOR
EACH
POSITION
AFTER
ITS
LEFT
SUBTREE
IS
TRAVERSED
BUT
BEFORE
ITS
RIGHT
SUBTREE
IS
TRAVERSED
OUR
IMPLEMENTATION
OF
BINARYEULERTOUR
REPLACES
THE
ORIGINAL
TOUR
UTILITY
TO
SPECIALIZE
TO
THE
CASE
IN
WHICH
A
NODE
HAS
AT
MOST
TWO
CHILDREN
IF
A
NODE
HAS
ONLY
ONE
CHILD
A
TOUR
DIFFERENTIATES
BETWEEN
WHETHER
THAT
IS
A
LEFT
CHILD
OR
A
RIGHT
CHILD
WITH
THE
IN
VISIT
TAKING
PLACE
AFTER
THE
VISIT
OF
A
SOLE
LEFT
CHILD
BUT
BEFORE
THE
VISIT
OF
A
SOLE
RIGHT
CHILD
IN
THE
CASE
OF
A
LEAF
THE
THREE
HOOKS
ARE
CALLED
IN
SUCCESSION
CLASS
BINARYEULERTOUR
EULERTOUR
ABSTRACT
BASE
CLASS
FOR
PERFORMING
EULER
TOUR
OF
A
BINARY
TREE
THIS
VERSION
INCLUDES
AN
ADDITIONAL
HOOK
INVISIT
THAT
IS
CALLED
AFTER
THE
TOUR
OF
THE
LEFT
SUBTREE
IF
ANY
YET
BEFORE
THE
TOUR
OF
THE
RIGHT
SUBTREE
IF
ANY
NOTE
RIGHT
CHILD
IS
ALWAYS
ASSIGNED
INDEX
IN
PATH
EVEN
IF
NO
LEFT
SIBLING
DEF
TOUR
SELF
P
D
PATH
RESULTS
NONE
NONE
WILL
UPDATE
WITH
RESULTS
OF
RECURSIONS
SELF
HOOK
PREVISIT
P
D
PATH
PRE
VISIT
FOR
P
IF
SELF
TREE
LEFT
P
IS
NOT
NONE
CONSIDER
LEFT
CHILD
PATH
APPEND
RESULTS
SELF
TOUR
SELF
TREE
LEFT
P
D
PATH
PATH
POP
SELF
HOOK
INVISIT
P
D
PATH
IN
VISIT
FOR
P
IF
SELF
TREE
RIGHT
P
IS
NOT
NONE
CONSIDER
RIGHT
CHILD
PATH
APPEND
RESULTS
SELF
TOUR
SELF
TREE
RIGHT
P
D
PATH
PATH
POP
ANSWER
SELF
HOOK
POSTVISIT
P
D
PATH
RESULTS
POST
VISIT
P
RETURN
ANSWER
DEF
HOOK
INVISIT
SELF
P
D
PATH
PASS
CAN
BE
OVERRIDDEN
CODE
FRAGMENT
A
BINARYEULERTOUR
BASE
CLASS
PROVIDING
A
SPECIALIZED
TOUR
FOR
BINARY
TREES
THE
ORIGINAL
EULERTOUR
BASE
CLASS
WAS
GIVEN
IN
CODE
FRAGMENT
TREE
TRAVERSAL
ALGORITHMS
FIGURE
AN
INORDER
DRAWING
OF
A
BINARY
TREE
TO
DEMONSTRATE
USE
OF
THE
BINARYEULERTOUR
FRAMEWORK
WE
DEVELOP
A
SUBCLASS
THAT
COMPUTES
A
GRAPHICAL
LAYOUT
OF
A
BINARY
TREE
AS
SHOWN
IN
FIGURE
THE
GEOMETRY
IS
DETERMINED
BY
AN
ALGORITHM
THAT
ASSIGNS
X
AND
Y
COORDINATES
TO
EACH
POSITION
P
OF
A
BINARY
TREE
T
USING
THE
FOLLOWING
TWO
RULES
X
P
IS
THE
NUMBER
OF
POSITIONS
VISITED
BEFORE
P
IN
AN
INORDER
TRAVERSAL
OF
T
Y
P
IS
THE
DEPTH
OF
P
IN
T
IN
THIS
APPLICATION
WE
TAKE
THE
CONVENTION
COMMON
IN
COMPUTER
GRAPHICS
THAT
X
COORDINATES
INCREASE
LEFT
TO
RIGHT
AND
Y
COORDINATES
INCREASE
TOP
TO
BOTTOM
SO
THE
ORIGIN
IS
IN
THE
UPPER
LEFT
CORNER
OF
THE
COMPUTER
SCREEN
CODE
FRAGMENT
PROVIDES
AN
IMPLEMENTATION
OF
A
BINARYLAYOUT
SUBCLASS
THAT
IMPLEMENTS
THE
ABOVE
ALGORITHM
FOR
ASSIGNING
X
Y
COORDINATES
TO
THE
ELEMENT
STORED
AT
EACH
POSITION
OF
A
BINARY
TREE
WE
ADAPT
THE
BINARYEULERTOUR
FRAMEWORK
BY
INTRODUCING
ADDITIONAL
STATE
IN
THE
FORM
OF
A
COUNT
INSTANCE
VARIABLE
THAT
REPRE
SENTS
THE
NUMBER
OF
IN
VISITS
THAT
WE
HAVE
PERFORMED
THE
X
COORDINATE
FOR
EACH
POSITION
IS
SET
ACCORDING
TO
THAT
COUNTER
CLASS
BINARYLAYOUT
BINARYEULERTOUR
CLASS
FOR
COMPUTING
X
Y
COORDINATES
FOR
EACH
NODE
OF
A
BINARY
TREE
DEF
INIT
SELF
TREE
SUPER
INIT
TREE
MUST
CALL
THE
PARENT
CONSTRUCTOR
SELF
COUNT
INITIALIZE
COUNT
OF
PROCESSED
NODES
DEF
HOOK
INVISIT
SELF
P
D
PATH
P
ELEMENT
SETX
SELF
COUNT
X
COORDINATE
SERIALIZED
BY
COUNT
P
ELEMENT
SETY
D
Y
COORDINATE
IS
DEPTH
SELF
COUNT
ADVANCE
COUNT
OF
PROCESSED
NODES
CODE
FRAGMENT
A
BINARYLAYOUT
CLASS
THAT
COMPUTES
COORDINATES
AT
WHICH
TO
DRAW
POSITIONS
OF
A
BINARY
TREE
WE
ASSUME
THAT
THE
ELEMENT
TYPE
FOR
THE
ORIGINAL
TREE
SUPPORTS
SETX
AND
SETY
METHODS
CHAPTER
TREES
CASE
STUDY
AN
EXPRESSION
TREE
IN
EXAMPLE
WE
INTRODUCED
THE
USE
OF
A
BINARY
TREE
TO
REPRESENT
THE
STRUCTURE
OF
AN
ARITHMETIC
EXPRESSION
IN
THIS
SECTION
WE
DEFINE
A
NEW
EXPRESSIONTREE
CLASS
THAT
PROVIDES
SUPPORT
FOR
CONSTRUCTING
SUCH
TREES
AND
FOR
DISPLAYING
AND
EVALUATING
THE
ARITHMETIC
EXPRESSION
THAT
SUCH
A
TREE
REPRESENTS
OUR
EXPRESSIONTREE
CLASS
IS
DE
FINED
AS
A
SUBCLASS
OF
LINKEDBINARYTREE
AND
WE
RELY
ON
THE
NONPUBLIC
MUTATORS
TO
CONSTRUCT
SUCH
TREES
EACH
INTERNAL
NODE
MUST
STORE
A
STRING
THAT
DEFINES
A
BINARY
OP
ERATOR
E
G
AND
EACH
LEAF
MUST
STORE
A
NUMERIC
VALUE
OR
A
STRING
REPRESENTING
A
NUMERIC
VALUE
OUR
EVENTUAL
GOAL
IS
TO
BUILD
ARBITRARILY
COMPLEX
EXPRESSION
TREES
FOR
COMPOUND
ARITHMETIC
EXPRESSIONS
SUCH
AS
HOWEVER
IT
SUFFICES
FOR
THE
EXPRESSIONTREE
CLASS
TO
SUPPORT
TWO
BASIC
FORMS
OF
INITIALIZATION
EXPRESSIONTREE
VALUE
CREATE
A
TREE
STORING
THE
GIVEN
VALUE
AT
THE
ROOT
EXPRESSIONTREE
OP
CREATE
A
TREE
STORING
STRING
OP
AT
THE
ROOT
E
G
AND
WITH
THE
STRUCTURES
OF
EXISTING
EXPRESSIONTREE
INSTANCES
AND
AS
THE
LEFT
AND
RIGHT
SUBTREES
OF
THE
ROOT
RESPECTIVELY
SUCH
A
CONSTRUCTOR
FOR
THE
EXPRESSIONTREE
CLASS
IS
GIVEN
IN
CODE
FRAGMENT
THE
CLASS
FORMALLY
INHERITS
FROM
LINKEDBINARYTREE
SO
IT
HAS
ACCESS
TO
ALL
THE
NON
PUBLIC
UPDATE
METHODS
THAT
WERE
DEFINED
IN
SECTION
WE
USE
ADD
ROOT
TO
CRE
ATE
AN
INITIAL
ROOT
OF
THE
TREE
STORING
THE
TOKEN
PROVIDED
AS
THE
FIRST
PARAMETER
THEN
WE
PERFORM
RUN
TIME
CHECKING
OF
THE
PARAMETERS
TO
DETERMINE
WHETHER
THE
CALLER
INVOKED
THE
ONE
PARAMETER
VERSION
OF
THE
CONSTRUCTOR
IN
WHICH
CASE
WE
ARE
DONE
OR
THE
THREE
PARAMETER
FORM
IN
THAT
CASE
WE
USE
THE
INHERITED
ATTACH
METHOD
TO
INCORPORATE
THE
STRUCTURE
OF
THE
EXISTING
TREES
AS
SUBTREES
OF
THE
ROOT
COMPOSING
A
PARENTHESIZED
STRING
REPRESENTATION
A
STRING
REPRESENTATION
OF
AN
EXISTING
EXPRESSION
TREE
INSTANCE
FOR
EXAMPLE
AS
CAN
BE
PRODUCED
BY
DISPLAYING
TREE
ELEMENTS
US
ING
AN
INORDER
TRAVERSAL
BUT
WITH
OPENING
AND
CLOSING
PARENTHESES
INSERTED
WITH
A
PREORDER
AND
POSTORDER
STEP
RESPECTIVELY
IN
THE
CONTEXT
OF
AN
EXPRESSIONTREE
CLASS
WE
SUPPORT
A
SPECIAL
STR
METHOD
SEE
SECTION
THAT
RETURNS
THE
APPROPRIATE
STRING
BECAUSE
IT
IS
MORE
EFFICIENT
TO
FIRST
BUILD
A
SEQUENCE
OF
INDIVID
UAL
STRINGS
TO
BE
JOINED
TOGETHER
SEE
DISCUSSION
OF
COMPOSING
STRINGS
IN
SEC
TION
THE
IMPLEMENTATION
OF
STR
RELIES
ON
A
NONPUBLIC
RECURSIVE
METHOD
NAMED
PARENTHESIZE
RECUR
THAT
APPENDS
A
SERIES
OF
STRINGS
TO
A
LIST
THESE
METHODS
ARE
INCLUDED
IN
CODE
CASE
STUDY
AN
EXPRESSION
TREE
CLASS
EXPRESSIONTREE
LINKEDBINARYTREE
AN
ARITHMETIC
EXPRESSION
TREE
DEF
INIT
SELF
TOKEN
LEFT
NONE
RIGHT
NONE
CREATE
AN
EXPRESSION
TREE
IN
A
SINGLE
PARAMETER
FORM
TOKEN
SHOULD
BE
A
LEAF
VALUE
E
G
AND
THE
EXPRESSION
TREE
WILL
HAVE
THAT
VALUE
AT
AN
ISOLATED
NODE
IN
A
THREE
PARAMETER
VERSION
TOKEN
SHOULD
BE
AN
OPERATOR
AND
LEFT
AND
RIGHT
SHOULD
BE
EXISTING
EXPRESSIONTREE
INSTANCES
THAT
BECOME
THE
OPERANDS
FOR
THE
BINARY
OPERATOR
SUPER
INIT
LINKEDBINARYTREE
INITIALIZATION
IF
NOT
ISINSTANCE
TOKEN
STR
RAISE
TYPEERROR
TOKEN
MUST
BE
A
STRING
SELF
ADD
ROOT
TOKEN
USE
INHERITED
NONPUBLIC
METHOD
IF
LEFT
IS
NOT
NONE
PRESUMABLY
THREE
PARAMETER
FORM
IF
TOKEN
NOT
IN
X
RAISE
VALUEERROR
TOKEN
MUST
BE
VALID
OPERATOR
SELF
ATTACH
SELF
ROOT
LEFT
RIGHT
USE
INHERITED
NONPUBLIC
METHOD
DEF
STR
SELF
RETURN
STRING
REPRESENTATION
OF
THE
EXPRESSION
PIECES
SEQUENCE
OF
PIECEWISE
STRINGS
TO
COMPOSE
SELF
PARENTHESIZE
RECUR
SELF
ROOT
PIECES
RETURN
JOIN
PIECES
DEF
PARENTHESIZE
RECUR
SELF
P
RESULT
APPEND
PIECEWISE
REPRESENTATION
OF
P
SUBTREE
TO
RESULTING
LIST
IF
SELF
IS
LEAF
P
RESULT
APPEND
STR
P
ELEMENT
LEAF
VALUE
AS
A
STRING
ELSE
RESULT
APPEND
OPENING
PARENTHESIS
SELF
PARENTHESIZE
RECUR
SELF
LEFT
P
RESULT
LEFT
SUBTREE
RESULT
APPEND
P
ELEMENT
OPERATOR
SELF
PARENTHESIZE
RECUR
SELF
RIGHT
P
RESULT
RIGHT
SUBTREE
RESULT
APPEND
CLOSING
PARENTHESIS
CODE
FRAGMENT
THE
BEGINNING
OF
AN
EXPRESSIONTREE
CLASS
CHAPTER
TREES
EXPRESSION
TREE
EVALUATION
THE
NUMERIC
EVALUATION
OF
AN
EXPRESSION
TREE
CAN
BE
ACCOMPLISHED
WITH
A
SIMPLE
APPLICATION
OF
A
POSTORDER
TRAVERSAL
IF
WE
KNOW
THE
VALUES
REPRESENTED
BY
THE
TWO
SUBTREES
OF
AN
INTERNAL
POSITION
WE
CAN
CALCULATE
THE
RESULT
OF
THE
COMPUTATION
THAT
POSITION
DESIGNATES
PSEUDO
CODE
FOR
THE
RECURSIVE
EVALUATION
OF
THE
VALUE
REPRE
SENTED
BY
A
SUBTREE
ROOTED
AT
POSITION
P
IS
GIVEN
IN
CODE
FRAGMENT
ALGORITHM
EVALUATE
RECUR
P
IF
P
ISA
LEAF
THEN
RETURN
THE
VALUE
STORED
AT
P
ELSE
LET
BE
THE
OPERATOR
STORED
AT
P
X
EVALUATE
RECUR
LEFT
P
Y
EVALUATE
RECUR
RIGHT
P
RETURN
X
Y
CODE
FRAGMENT
ALGORITHM
EVALUATE
RECUR
FOR
EVALUATING
THE
EXPRESSION
REP
RESENTED
BY
A
SUBTREE
OF
AN
ARITHMETIC
EXPRESSION
TREE
ROOTED
AT
POSITION
P
TO
IMPLEMENT
THIS
ALGORITHM
IN
THE
CONTEXT
OF
A
PYTHON
EXPRESSIONTREE
CLASS
WE
PROVIDE
A
PUBLIC
EVALUATE
METHOD
THAT
IS
INVOKED
ON
INSTANCE
T
AS
T
EVALUATE
CODE
FRAGMENT
PROVIDES
SUCH
AN
IMPLEMENTATION
RELYING
ON
A
NONPUBLIC
EVALUATE
RECUR
METHOD
THAT
COMPUTES
THE
VALUE
OF
A
DESIGNATED
SUBTREE
DEF
EVALUATE
SELF
RETURN
THE
NUMERIC
RESULT
OF
THE
EXPRESSION
RETURN
SELF
EVALUATE
RECUR
SELF
ROOT
DEF
EVALUATE
RECUR
SELF
P
RETURN
THE
NUMERIC
RESULT
OF
SUBTREE
ROOTED
AT
P
IF
SELF
IS
LEAF
P
RETURN
FLOAT
P
ELEMENT
WE
ASSUME
ELEMENT
IS
NUMERIC
ELSE
OP
P
ELEMENT
LEFT
VAL
SELF
EVALUATE
RECUR
SELF
LEFT
P
RIGHT
VAL
SELF
EVALUATE
RECUR
SELF
RIGHT
P
IF
OP
RETURN
LEFT
VAL
RIGHT
VAL
ELIF
OP
RETURN
LEFT
VAL
RIGHT
VAL
ELIF
OP
RETURN
LEFT
VAL
RIGHT
VAL
ELSE
RETURN
LEFT
VAL
RIGHT
VAL
TREAT
X
OR
AS
MULTIPLICATION
CODE
FRAGMENT
SUPPORT
FOR
EVALUATING
AN
EXPRESSIONTREE
INSTANCE
CASE
STUDY
AN
EXPRESSION
TREE
BUILDING
AN
EXPRESSION
TREE
THE
CONSTRUCTOR
FOR
THE
EXPRESSIONTREE
CLASS
FROM
CODE
FRAGMENT
PROVIDES
BASIC
FUNCTIONALITY
FOR
COMBINING
EXISTING
TREES
TO
BUILD
LARGER
EXPRESSION
TREES
HOWEVER
THE
QUESTION
STILL
REMAINS
HOW
TO
CONSTRUCT
A
TREE
THAT
REPRESENTS
AN
EX
PRESSION
FOR
A
GIVEN
STRING
SUCH
AS
TO
AUTOMATE
THIS
PROCESS
WE
RELY
ON
A
BOTTOM
UP
CONSTRUCTION
ALGORITHM
AS
SUMING
THAT
A
STRING
CAN
FIRST
BE
TOKENIZED
SO
THAT
MULTIDIGIT
NUMBERS
ARE
TREATED
ATOMICALLY
SEE
EXERCISE
R
AND
THAT
THE
EXPRESSION
IS
FULLY
PARENTHESIZED
THE
ALGORITHM
USES
A
STACK
WHILE
SCANNING
TOKENS
OF
THE
INPUT
EXPRESSION
E
TO
FIND
VALUES
OPERATORS
AND
RIGHT
PARENTHESES
LEFT
PARENTHESES
ARE
IGNORED
WHEN
WE
SEE
AN
OPERATOR
WE
PUSH
THAT
STRING
ON
THE
STACK
WHEN
WE
SEE
A
LITERAL
VALUE
V
WE
CREATE
A
SINGLE
NODE
EXPRESSION
TREE
T
STORING
V
AND
PUSH
T
ON
THE
STACK
WHEN
WE
SEE
A
RIGHT
PARENTHESIS
WE
POP
THE
TOP
THREE
ITEMS
FROM
THE
STACK
WHICH
REPRESENT
A
SUBEXPRESSION
WE
THEN
CONSTRUCT
A
TREE
T
USING
TREES
FOR
AND
AS
SUBTREES
OF
THE
ROOT
STORING
AND
PUSH
THE
RESULTING
TREE
T
BACK
ON
THE
STACK
WE
REPEAT
THIS
UNTIL
THE
EXPRESSION
E
HAS
BEEN
PROCESSED
AT
WHICH
TIME
THE
TOP
ELEMENT
ON
THE
STACK
IS
THE
EXPRESSION
TREE
FOR
E
THE
TOTAL
RUNNING
TIME
IS
O
N
AN
IMPLEMENTATION
OF
THIS
ALGORITHM
IS
GIVEN
IN
CODE
FRAGMENT
IN
THE
FORM
OF
A
STAND
ALONE
FUNCTION
NAMED
BUILD
EXPRESSION
TREE
WHICH
PRODUCES
AND
RETURNS
AN
APPROPRIATE
EXPRESSIONTREE
INSTANCE
ASSUMING
THE
INPUT
HAS
BEEN
TOKENIZED
DEF
BUILD
EXPRESSION
TREE
TOKENS
RETURNS
AN
EXPRESSIONTREE
BASED
UPON
BY
A
TOKENIZED
EXPRESSION
WE
USE
PYTHON
LIST
AS
STACK
FOR
T
IN
TOKENS
IF
T
IN
X
T
IS
AN
OPERATOR
SYMBOL
APPEND
T
PUSH
THE
OPERATOR
SYMBOL
ELIF
T
NOT
IN
CONSIDER
T
TO
BE
A
LITERAL
APPEND
EXPRESSIONTREE
T
PUSH
TRIVIAL
TREE
STORING
VALUE
ELIF
T
COMPOSE
A
NEW
TREE
FROM
THREE
CONSTITUENT
PARTS
RIGHT
POP
RIGHT
SUBTREE
AS
PER
LIFO
OP
POP
OPERATOR
SYMBOL
LEFT
POP
LEFT
SUBTREE
APPEND
EXPRESSIONTREE
OP
LEFT
RIGHT
REPUSH
TREE
WE
IGNORE
A
LEFT
PARENTHESIS
RETURN
POP
CODE
FRAGMENT
IMPLEMENTATION
OF
A
BUILD
EXPRESSION
TREE
THAT
PRODUCES
AN
EXPRESSIONTREE
FROM
A
SEQUENCE
OF
TOKENS
REPRESENTING
AN
ARITHMETIC
EXPRESSION
CHAPTER
TREES
EXERCISES
FOR
HELP
WITH
EXERCISES
PLEASE
VISIT
THE
SITE
WWW
WILEY
COM
COLLEGE
GOODRICH
REINFORCEMENT
R
THE
FOLLOWING
QUESTIONS
REFER
TO
THE
TREE
OF
FIGURE
A
WHICH
NODE
IS
THE
ROOT
B
WHAT
ARE
THE
INTERNAL
NODES
C
HOW
MANY
DESCENDANTS
DOES
NODE
HAVE
D
HOW
MANY
ANCESTORS
DOES
NODE
HAVE
E
WHAT
ARE
THE
SIBLINGS
OF
NODE
HOMEWORKS
F
WHICH
NODES
ARE
IN
THE
SUBTREE
ROOTED
AT
NODE
PROJECTS
G
WHAT
IS
THE
DEPTH
OF
NODE
PAPERS
H
WHAT
IS
THE
HEIGHT
OF
THE
TREE
R
SHOW
A
TREE
ACHIEVING
THE
WORST
CASE
RUNNING
TIME
FOR
ALGORITHM
DEPTH
R
GIVE
A
JUSTIFICATION
OF
PROPOSITION
R
WHAT
IS
THE
RUNNING
TIME
OF
A
CALL
TO
T
P
WHEN
CALLED
ON
A
POSITION
P
DISTINCT
FROM
THE
ROOT
OF
T
SEE
CODE
FRAGMENT
R
DESCRIBE
AN
ALGORITHM
RELYING
ONLY
ON
THE
BINARYTREE
OPERATIONS
THAT
COUNTS
THE
NUMBER
OF
LEAVES
IN
A
BINARY
TREE
THAT
ARE
THE
LEFT
CHILD
OF
THEIR
RESPECTIVE
PARENT
R
LET
T
BE
AN
N
NODE
BINARY
TREE
THAT
MAY
BE
IMPROPER
DESCRIBE
HOW
TO
REPRESENT
T
BY
MEANS
OF
A
PROPER
BINARY
TREE
T
L
WITH
O
N
NODES
R
WHAT
ARE
THE
MINIMUM
AND
MAXIMUM
NUMBER
OF
INTERNAL
AND
EXTERNAL
NODES
IN
AN
IMPROPER
BINARY
TREE
WITH
N
NODES
R
ANSWER
THE
FOLLOWING
QUESTIONS
SO
AS
TO
JUSTIFY
PROPOSITION
A
WHAT
IS
THE
MINIMUM
NUMBER
OF
EXTERNAL
NODES
FOR
A
PROPER
BINARY
TREE
WITH
HEIGHT
H
JUSTIFY
YOUR
ANSWER
B
WHAT
IS
THE
MAXIMUM
NUMBER
OF
EXTERNAL
NODES
FOR
A
PROPER
BINARY
TREE
WITH
HEIGHT
H
JUSTIFY
YOUR
ANSWER
C
LET
T
BE
A
PROPER
BINARY
TREE
WITH
HEIGHT
H
AND
N
NODES
SHOW
THAT
LOG
N
H
N
D
FOR
WHICH
VALUES
OF
N
AND
H
CAN
THE
ABOVE
LOWER
AND
UPPER
BOUNDS
ON
H
BE
ATTAINED
WITH
EQUALITY
R
GIVE
A
PROOF
BY
INDUCTION
OF
PROPOSITION
R
GIVE
A
DIRECT
IMPLEMENTATION
OF
THE
NUM
CHILDREN
METHOD
WITHIN
THE
CLASS
BINARYTREE
EXERCISES
R
FIND
THE
VALUE
OF
THE
ARITHMETIC
EXPRESSION
ASSOCIATED
WITH
EACH
SUBTREE
OF
THE
BINARY
TREE
OF
FIGURE
R
DRAW
AN
ARITHMETIC
EXPRESSION
TREE
THAT
HAS
FOUR
EXTERNAL
NODES
STORING
THE
NUMBERS
AND
WITH
EACH
NUMBER
STORED
IN
A
DISTINCT
EXTERNAL
NODE
BUT
NOT
NECESSARILY
IN
THIS
ORDER
AND
HAS
THREE
INTERNAL
NODES
EACH
STORING
AN
OPERATOR
FROM
THE
SET
SO
THAT
THE
VALUE
OF
THE
ROOT
IS
THE
OPERATORS
MAY
RETURN
AND
ACT
ON
FRACTIONS
AND
AN
OPERATOR
MAY
BE
USED
MORE
THAN
ONCE
R
DRAW
THE
BINARY
TREE
REPRESENTATION
OF
THE
FOLLOWING
ARITHMETIC
EXPRES
SION
R
JUSTIFY
TABLE
SUMMARIZING
THE
RUNNING
TIME
OF
THE
METHODS
OF
A
TREE
REPRESENTED
WITH
A
LINKED
STRUCTURE
BY
PROVIDING
FOR
EACH
METHOD
A
DE
SCRIPTION
OF
ITS
IMPLEMENTATION
AND
AN
ANALYSIS
OF
ITS
RUNNING
TIME
R
THE
LINKEDBINARYTREE
CLASS
PROVIDES
ONLY
NONPUBLIC
VERSIONS
OF
THE
UP
DATE
METHODS
DISCUSSED
ON
PAGE
IMPLEMENT
A
SIMPLE
SUBCLASS
NAMED
MUTABLELINKEDBINARYTREE
THAT
PROVIDES
PUBLIC
WRAPPER
FUNCTIONS
FOR
EACH
OF
THE
INHERITED
NONPUBLIC
UPDATE
METHODS
R
LET
T
BE
A
BINARY
TREE
WITH
N
NODES
AND
LET
F
BE
THE
LEVEL
NUMBERING
FUNCTION
OF
THE
POSITIONS
OF
T
AS
GIVEN
IN
SECTION
A
SHOW
THAT
FOR
EVERY
POSITION
P
OF
T
F
P
B
SHOW
AN
EXAMPLE
OF
A
BINARY
TREE
WITH
SEVEN
NODES
THAT
ATTAINS
THE
ABOVE
UPPER
BOUND
ON
F
P
FOR
SOME
POSITION
P
R
SHOW
HOW
TO
USE
THE
EULER
TOUR
TRAVERSAL
TO
COMPUTE
THE
LEVEL
NUMBER
F
P
AS
DEFINED
IN
SECTION
OF
EACH
POSITION
IN
A
BINARY
TREE
T
R
LET
T
BE
A
BINARY
TREE
WITH
N
POSITIONS
THAT
IS
REALIZED
WITH
AN
ARRAY
REP
RESENTATION
A
AND
LET
F
BE
THE
LEVEL
NUMBERING
FUNCTION
OF
THE
POSITIONS
OF
T
AS
GIVEN
IN
SECTION
GIVE
PSEUDO
CODE
DESCRIPTIONS
OF
EACH
OF
THE
METHODS
ROOT
PARENT
LEFT
RIGHT
IS
LEAF
AND
IS
ROOT
R
OUR
DEFINITION
OF
THE
LEVEL
NUMBERING
FUNCTION
F
P
AS
GIVEN
IN
SEC
TION
BEGAN
WITH
THE
ROOT
HAVING
NUMBER
SOME
AUTHORS
PREFER
TO
USE
A
LEVEL
NUMBERING
G
P
IN
WHICH
THE
ROOT
IS
ASSIGNED
NUMBER
BE
CAUSE
IT
SIMPLIFIES
THE
ARITHMETIC
FOR
FINDING
NEIGHBORING
POSITIONS
REDO
EXERCISE
R
BUT
ASSUMING
THAT
WE
USE
A
LEVEL
NUMBERING
G
P
IN
WHICH
THE
ROOT
IS
ASSIGNED
NUMBER
R
DRAW
A
BINARY
TREE
T
THAT
SIMULTANEOUSLY
SATISFIES
THE
FOLLOWING
EACH
INTERNAL
NODE
OF
T
STORES
A
SINGLE
CHARACTER
A
PREORDER
TRAVERSAL
OF
T
YIELDS
EXAMFUN
AN
INORDER
TRAVERSAL
OF
T
YIELDS
MAFXUEN
R
IN
WHAT
ORDER
ARE
POSITIONS
VISITED
DURING
A
PREORDER
TRAVERSAL
OF
THE
TREE
OF
FIGURE
CHAPTER
TREES
R
IN
WHAT
ORDER
ARE
POSITIONS
VISITED
DURING
A
POSTORDER
TRAVERSAL
OF
THE
TREE
OF
FIGURE
R
LET
T
BE
AN
ORDERED
TREE
WITH
MORE
THAN
ONE
NODE
IS
IT
POSSIBLE
THAT
THE
PREORDER
TRAVERSAL
OF
T
VISITS
THE
NODES
IN
THE
SAME
ORDER
AS
THE
POSTORDER
TRAVERSAL
OF
T
IF
SO
GIVE
AN
EXAMPLE
OTHERWISE
EXPLAIN
WHY
THIS
CANNOT
OCCUR
LIKEWISE
IS
IT
POSSIBLE
THAT
THE
PREORDER
TRAVERSAL
OF
T
VISITS
THE
NODES
IN
THE
REVERSE
ORDER
OF
THE
POSTORDER
TRAVERSAL
OF
T
IF
SO
GIVE
AN
EXAMPLE
OTHERWISE
EXPLAIN
WHY
THIS
CANNOT
OCCUR
R
ANSWER
THE
PREVIOUS
QUESTION
FOR
THE
CASE
WHEN
T
IS
A
PROPER
BINARY
TREE
WITH
MORE
THAN
ONE
NODE
R
CONSIDER
THE
EXAMPLE
OF
A
BREADTH
FIRST
TRAVERSAL
GIVEN
IN
FIGURE
USING
THE
ANNOTATED
NUMBERS
FROM
THAT
FIGURE
DESCRIBE
THE
CONTENTS
OF
THE
QUEUE
BEFORE
EACH
PASS
OF
THE
WHILE
LOOP
IN
CODE
FRAGMENT
TO
GET
STARTED
THE
QUEUE
HAS
CONTENTS
BEFORE
THE
FIRST
PASS
AND
CONTENTS
BEFORE
THE
SECOND
PASS
R
THE
COLLECTIONS
DEQUE
CLASS
SUPPORTS
AN
EXTEND
METHOD
THAT
ADDS
A
COL
LECTION
OF
ELEMENTS
TO
THE
END
OF
THE
QUEUE
AT
ONCE
REIMPLEMENT
THE
BREADTHFIRST
METHOD
OF
THE
TREE
CLASS
TO
TAKE
ADVANTAGE
OF
THIS
FEATURE
R
GIVE
THE
OUTPUT
OF
THE
FUNCTION
PARENTHESIZE
T
T
ROOT
AS
DESCRIBED
IN
CODE
FRAGMENT
WHEN
T
IS
THE
TREE
OF
FIGURE
R
WHAT
IS
THE
RUNNING
TIME
OF
PARENTHESIZE
T
T
ROOT
AS
GIVEN
IN
CODE
FRAGMENT
FOR
A
TREE
T
WITH
N
NODES
R
DESCRIBE
IN
PSEUDO
CODE
AN
ALGORITHM
FOR
COMPUTING
THE
NUMBER
OF
DE
SCENDANTS
OF
EACH
NODE
OF
A
BINARY
TREE
THE
ALGORITHM
SHOULD
BE
BASED
ON
THE
EULER
TOUR
TRAVERSAL
R
THE
BUILD
EXPRESSION
TREE
METHOD
OF
THE
EXPRESSIONTREE
CLASS
REQUIRES
INPUT
THAT
IS
AN
ITERABLE
OF
STRING
TOKENS
WE
USED
A
CONVENIENT
EXAM
PLE
IN
WHICH
EACH
CHARACTER
IS
ITS
OWN
TO
KEN
SO
THAT
THE
STRING
ITSELF
SUFFICED
AS
INPUT
TO
BUILD
EXPRESSION
TREE
IN
GENERAL
A
STRING
SUCH
AS
MUST
BE
EXPLICITLY
TOKENIZED
INTO
LIST
SO
AS
TO
IGNORE
WHITESPACE
AND
TO
RECOGNIZE
MULTIDIGIT
NUMBERS
AS
A
SINGLE
TOKEN
WRITE
A
UTILITY
METHOD
TOKENIZE
RAW
THAT
RETURNS
SUCH
A
LIST
OF
TOKENS
FOR
A
RAW
STRING
CREATIVITY
C
DEFINE
THE
INTERNAL
PATH
LENGTH
I
T
OF
A
TREE
T
TO
BE
THE
SUM
OF
THE
DEPTHS
OF
ALL
THE
INTERNAL
POSITIONS
IN
T
LIKEWISE
DEFINE
THE
EXTERNAL
PATH
LENGTH
E
T
OF
A
TREE
T
TO
BE
THE
SUM
OF
THE
DEPTHS
OF
ALL
THE
EXTERNAL
POSITIONS
IN
T
SHOW
THAT
IF
T
IS
A
PROPER
BINARY
TREE
WITH
N
POSITIONS
THEN
E
T
I
T
N
EXERCISES
C
LET
T
BE
A
NOT
NECESSARILY
PROPER
BINARY
TREE
WITH
N
NODES
AND
LET
D
BE
THE
SUM
OF
THE
DEPTHS
OF
ALL
THE
EXTERNAL
NODES
OF
T
SHOW
THAT
IF
T
HAS
THE
MINIMUM
NUMBER
OF
EXTERNAL
NODES
POSSIBLE
THEN
D
IS
O
N
AND
IF
T
HAS
THE
MAXIMUM
NUMBER
OF
EXTERNAL
NODES
POSSIBLE
THEN
D
IS
O
N
LOG
N
C
LET
T
BE
A
POSSIBLY
IMPROPER
BINARY
TREE
WITH
N
NODES
AND
LET
D
BE
THE
SUM
OF
THE
DEPTHS
OF
ALL
THE
EXTERNAL
NODES
OF
T
DESCRIBE
A
CONFIGURATION
FOR
T
SUCH
THAT
D
IS
SUCH
A
TREE
WOULD
BE
THE
WORST
CASE
FOR
THE
ASYMPTOTIC
RUNNING
TIME
OF
METHOD
CODE
FRAGMENT
C
FOR
A
TREE
T
LET
NI
DENOTE
THE
NUMBER
OF
ITS
INTERNAL
NODES
AND
LET
NE
DENOTE
THE
NUMBER
OF
ITS
EXTERNAL
NODES
SHOW
THAT
IF
EVERY
INTERNAL
NODE
IN
T
HAS
EXACTLY
CHILDREN
THEN
NE
C
TWO
ORDERED
TREES
T
L
AND
T
LL
ARE
SAID
TO
BE
ISOMORPHIC
IF
ONE
OF
THE
FOL
LOWING
HOLDS
BOTH
T
L
AND
T
LL
ARE
EMPTY
THE
ROOTS
OF
T
L
AND
T
LL
HAVE
THE
SAME
NUMBER
K
OF
SUBTREES
AND
THE
ITH
SUCH
SUBTREE
OF
T
L
IS
ISOMORPHIC
TO
THE
ITH
SUCH
SUBTREE
OF
T
LL
FOR
I
K
DESIGN
AN
ALGORITHM
THAT
TESTS
WHETHER
TWO
GIVEN
ORDERED
TREES
ARE
ISO
MORPHIC
WHAT
IS
THE
RUNNING
TIME
OF
YOUR
ALGORITHM
C
SHOW
THAT
THERE
ARE
MORE
THAN
IMPROPER
BINARY
TREES
WITH
N
INTERNAL
NODES
SUCH
THAT
NO
PAIR
ARE
ISOMORPHIC
SEE
EXERCISE
C
C
IF
WE
EXCLUDE
ISOMORPHIC
TREES
SEE
EXERCISE
C
EXACTLY
HOW
MANY
PROPER
BINARY
TREES
EXIST
WITH
EXACTLY
LEAVES
C
ADD
SUPPORT
IN
LINKEDBINARYTREE
FOR
A
METHOD
DELETE
SUBTREE
P
THAT
REMOVES
THE
ENTIRE
SUBTREE
ROOTED
AT
POSITION
P
MAKING
SURE
TO
MAINTAIN
THE
COUNT
ON
THE
SIZE
OF
THE
TREE
WHAT
IS
THE
RUNNING
TIME
OF
YOUR
IMPLE
MENTATION
C
ADD
SUPPORT
IN
LINKEDBINARYTREE
FOR
A
METHOD
SWAP
P
Q
THAT
HAS
THE
EFFECT
OF
RESTRUCTURING
THE
TREE
SO
THAT
THE
NODE
REFERENCED
BY
P
TAKES
THE
PLACE
OF
THE
NODE
REFERENCED
BY
Q
AND
VICE
VERSA
MAKE
SURE
TO
PROPERLY
HANDLE
THE
CASE
WHEN
THE
NODES
ARE
ADJACENT
C
WE
CAN
SIMPLIFY
PARTS
OF
OUR
LINKEDBINARYTREE
IMPLEMENTATION
IF
WE
MAKE
USE
OF
OF
A
SINGLE
SENTINEL
NODE
REFERENCED
AS
THE
SENTINEL
MEMBER
OF
THE
TREE
INSTANCE
SUCH
THAT
THE
SENTINEL
IS
THE
PARENT
OF
THE
REAL
ROOT
OF
THE
TREE
AND
THE
ROOT
IS
REFERENCED
AS
THE
LEFT
CHILD
OF
THE
SENTINEL
FUR
THERMORE
THE
SENTINEL
WILL
TAKE
THE
PLACE
OF
NONE
AS
THE
VALUE
OF
THE
LEFT
OR
RIGHT
MEMBER
FOR
A
NODE
WITHOUT
SUCH
A
CHILD
GIVE
A
NEW
IMPLE
MENTATION
OF
THE
UPDATE
METHODS
DELETE
AND
ATTACH
ASSUMING
SUCH
A
REPRESENTATION
CHAPTER
TREES
C
DESCRIBE
HOW
TO
CLONE
A
LINKEDBINARYTREE
INSTANCE
REPRESENTING
A
PROPER
BINARY
TREE
WITH
USE
OF
THE
ATTACH
METHOD
C
DESCRIBE
HOW
TO
CLONE
A
LINKEDBINARYTREE
INSTANCE
REPRESENTING
A
NOT
NECESSARILY
PROPER
BINARY
TREE
WITH
USE
OF
THE
ADD
LEFT
AND
ADD
RIGHT
METHODS
C
WE
CAN
DEFINE
A
BINARY
TREE
REPRESENTATION
T
L
FOR
AN
ORDERED
GENERAL
TREE
T
AS
FOLLOWS
SEE
FIGURE
FOR
EACH
POSITION
P
OF
T
THERE
IS
AN
ASSOCIATED
POSITION
PL
OF
T
L
IF
P
IS
A
LEAF
OF
T
THEN
PL
IN
T
L
DOES
NOT
HAVE
A
LEFT
CHILD
OTHERWISE
THE
LEFT
CHILD
OF
PL
IS
QL
WHERE
Q
IS
THE
FIRST
CHILD
OF
P
IN
T
IF
P
HAS
A
SIBLING
Q
ORDERED
IMMEDIATELY
AFTER
IT
IN
T
THEN
QL
IS
THE
RIGHT
CHILD
OF
PL
IN
T
OTHERWISE
PL
DOES
NOT
HAVE
A
RIGHT
CHILD
GIVEN
SUCH
A
REPRESENTATION
T
L
OF
A
GENERAL
ORDERED
TREE
T
ANSWER
EACH
OF
THE
FOLLOWING
QUESTIONS
A
IS
A
PREORDER
TRAVERSAL
OF
T
L
EQUIVALENT
TO
A
PREORDER
TRAVERSAL
OF
T
B
IS
A
POSTORDER
TRAVERSAL
OF
T
L
EQUIVALENT
TO
A
POSTORDER
TRAVERSAL
OF
T
C
IS
AN
INORDER
TRAVERSAL
OF
T
L
EQUIVALENT
TO
ONE
OF
THE
STANDARD
TRAVER
SALS
OF
T
IF
SO
WHICH
ONE
A
B
FIGURE
REPRESENTATION
OF
A
TREE
WITH
A
BINARY
TREE
A
TREE
T
B
BINARY
TREE
T
L
FOR
T
THE
DASHED
EDGES
CONNECT
NODES
OF
T
L
THAT
ARE
SIBLINGS
IN
T
C
GIVE
AN
EFFICIENT
ALGORITHM
THAT
COMPUTES
AND
PRINTS
FOR
EVERY
POSITION
P
OF
A
TREE
T
THE
ELEMENT
OF
P
FOLLOWED
BY
THE
HEIGHT
OF
P
SUBTREE
C
GIVE
AN
O
N
TIME
ALGORITHM
FOR
COMPUTING
THE
DEPTHS
OF
ALL
POSITIONS
OF
A
TREE
T
WHERE
N
IS
THE
NUMBER
OF
NODES
OF
T
C
THE
PATH
LENGTH
OF
A
TREE
T
IS
THE
SUM
OF
THE
DEPTHS
OF
ALL
POSITIONS
IN
T
DESCRIBE
A
LINEAR
TIME
METHOD
FOR
COMPUTING
THE
PATH
LENGTH
OF
A
TREE
T
C
THE
BALANCE
FACTOR
OF
AN
INTERNAL
POSITION
P
OF
A
PROPER
BINARY
TREE
IS
THE
DIFFERENCE
BETWEEN
THE
HEIGHTS
OF
THE
RIGHT
AND
LEFT
SUBTREES
OF
P
SHOW
HOW
TO
SPECIALIZE
THE
EULER
TOUR
TRAVERSAL
OF
SECTION
TO
PRINT
THE
BALANCE
FACTORS
OF
ALL
THE
INTERNAL
NODES
OF
A
PROPER
BINARY
TREE
EXERCISES
C
GIVEN
A
PROPER
BINARY
TREE
T
DEFINE
THE
REFLECTION
OF
T
TO
BE
THE
BINARY
TREE
T
L
SUCH
THAT
EACH
NODE
V
IN
T
IS
ALSO
IN
T
L
BUT
THE
LEFT
CHILD
OF
V
IN
T
IS
V
RIGHT
CHILD
IN
T
L
AND
THE
RIGHT
CHILD
OF
V
IN
T
IS
V
LEFT
CHILD
IN
T
L
SHOW
THAT
A
PREORDER
TRAVERSAL
OF
A
PROPER
BINARY
TREE
T
IS
THE
SAME
AS
THE
POSTORDER
TRAVERSAL
OF
T
REFLECTION
BUT
IN
REVERSE
ORDER
C
LET
THE
RANK
OF
A
POSITION
P
DURING
A
TRAVERSAL
BE
DEFINED
SUCH
THAT
THE
FIRST
ELEMENT
VISITED
HAS
RANK
THE
SECOND
ELEMENT
VISITED
HAS
RANK
AND
SO
ON
FOR
EACH
POSITION
P
IN
A
TREE
T
LET
PRE
P
BE
THE
RANK
OF
P
IN
A
PREORDER
TRAVERSAL
OF
T
LET
POST
P
BE
THE
RANK
OF
P
IN
A
POSTORDER
TRAVERSAL
OF
T
LET
DEPTH
P
BE
THE
DEPTH
OF
P
AND
LET
DESC
P
BE
THE
NUMBER
OF
DESCENDANTS
OF
P
INCLUDING
P
ITSELF
DERIVE
A
FORMULA
DEFINING
POST
P
IN
TERMS
OF
DESC
P
DEPTH
P
AND
PRE
P
FOR
EACH
NODE
P
IN
T
C
DESIGN
ALGORITHMS
FOR
THE
FOLLOWING
OPERATIONS
FOR
A
BINARY
TREE
T
PREORDER
NEXT
P
RETURN
THE
POSITION
VISITED
AFTER
P
IN
A
PREORDER
TRAVERSAL
OF
T
OR
NONE
IF
P
IS
THE
LAST
NODE
VISITED
INORDER
NEXT
P
RETURN
THE
POSITION
VISITED
AFTER
P
IN
AN
INORDER
TRAVERSAL
OF
T
OR
NONE
IF
P
IS
THE
LAST
NODE
VISITED
POSTORDER
NEXT
P
RETURN
THE
POSITION
VISITED
AFTER
P
IN
A
POSTORDER
TRAVERSAL
OF
T
OR
NONE
IF
P
IS
THE
LAST
NODE
VISITED
WHAT
ARE
THE
WORST
CASE
RUNNING
TIMES
OF
YOUR
ALGORITHMS
C
TO
IMPLEMENT
THE
PREORDER
METHOD
OF
THE
LINKEDBINARYTREE
CLASS
WE
RE
LIED
ON
THE
CONVENIENCE
OF
PYTHON
GENERATOR
SYNTAX
AND
THE
YIELD
STATE
MENT
GIVE
AN
ALTERNATIVE
IMPLEMENTATION
OF
PREORDER
THAT
RETURNS
AN
EX
PLICIT
INSTANCE
OF
A
NESTED
ITERATOR
CLASS
SEE
SECTION
FOR
DISCUSSION
OF
ITERATORS
C
ALGORITHM
PREORDER
DRAW
DRAWS
A
BINARY
TREE
T
BY
ASSIGNING
X
AND
Y
COORDINATES
TO
EACH
POSITION
P
SUCH
THAT
X
P
IS
THE
NUMBER
OF
NODES
PRE
CEDING
P
IN
THE
PREORDER
TRAVERSAL
OF
T
AND
Y
P
IS
THE
DEPTH
OF
P
IN
T
A
SHOW
THAT
THE
DRAWING
OF
T
PRODUCED
BY
PREORDER
DRAW
HAS
NO
PAIRS
OF
CROSSING
EDGES
B
REDRAW
THE
BINARY
TREE
OF
FIGURE
USING
PREORDER
DRAW
C
REDO
THE
PREVIOUS
PROBLEM
FOR
THE
ALGORITHM
POSTORDER
DRAW
THAT
IS
SIMI
LAR
TO
PREORDER
DRAW
EXCEPT
THAT
IT
ASSIGNS
X
P
TO
BE
THE
NUMBER
OF
NODES
PRECEDING
POSITION
P
IN
THE
POSTORDER
TRAVERSAL
C
DESIGN
AN
ALGORITHM
FOR
DRAWING
GENERAL
TREES
USING
A
STYLE
SIMILAR
TO
THE
INORDER
TRAVERSAL
APPROACH
FOR
DRAWING
BINARY
TREES
C
EXERCISE
P
DESCRIBED
THE
WALK
FUNCTION
OF
THE
OS
MODULE
THIS
FUNC
TION
PERFORMS
A
TRAVERSAL
OF
THE
IMPLICIT
TREE
REPRESENTED
BY
THE
FILE
SYSTEM
READ
THE
FORMAL
DOCUMENTATION
FOR
THE
FUNCTION
AND
IN
PARTICULAR
ITS
USE
OF
AN
OPTIONAL
BOOLEAN
PARAMETER
NAMED
TOPDOWN
DESCRIBE
HOW
ITS
BE
HAVIOR
RELATES
TO
TREE
TRAVERSAL
ALGORITHMS
DESCRIBED
IN
THIS
CHAPTER
CHAPTER
TREES
SALES
DOMESTIC
INTERNATIONAL
CANADA
AMERICA
OVERSEAS
AFRICA
EUROPE
ASIA
AUSTRALIA
A
B
FIGURE
A
TREE
T
B
INDENTED
PARENTHETIC
REPRESENTATION
OF
T
C
THE
INDENTED
PARENTHETIC
REPRESENTATION
OF
A
TREE
T
IS
A
VARIATION
OF
THE
PARENTHETIC
REPRESENTATION
OF
T
SEE
CODE
FRAGMENT
THAT
USES
INDEN
TATION
AND
LINE
BREAKS
AS
ILLUSTRATED
IN
FIGURE
GIVE
AN
ALGORITHM
THAT
PRINTS
THIS
REPRESENTATION
OF
A
TREE
C
LET
T
BE
A
BINARY
TREE
WITH
N
POSITIONS
DEFINE
A
ROMAN
POSITION
TO
BE
A
POSITION
P
IN
T
SUCH
THAT
THE
NUMBER
OF
DESCENDANTS
IN
P
LEFT
SUBTREE
DIFFER
FROM
THE
NUMBER
OF
DESCENDANTS
IN
P
RIGHT
SUBTREE
BY
AT
MOST
DESCRIBE
A
LINEAR
TIME
METHOD
FOR
FINDING
EACH
POSITION
P
OF
T
SUCH
THAT
P
IS
NOT
A
ROMAN
POSITION
BUT
ALL
OF
P
DESCENDANTS
ARE
ROMAN
C
LET
T
BE
A
TREE
WITH
N
POSITIONS
DEFINE
THE
LOWEST
COMMON
ANCESTOR
LCA
BETWEEN
TWO
POSITIONS
P
AND
Q
AS
THE
LOWEST
POSITION
IN
T
THAT
HAS
BOTH
P
AND
Q
AS
DESCENDANTS
WHERE
WE
ALLOW
A
POSITION
TO
BE
A
DESCENDANT
OF
ITSELF
GIVEN
TWO
POSITIONS
P
AND
Q
DESCRIBE
AN
EFFICIENT
ALGORITHM
FOR
FINDING
THE
LCA
OF
P
AND
Q
WHAT
IS
THE
RUNNING
TIME
OF
YOUR
ALGORITHM
C
LET
T
BE
A
BINARY
TREE
WITH
N
POSITIONS
AND
FOR
ANY
POSITION
P
IN
T
LET
DP
DENOTE
THE
DEPTH
OF
P
IN
T
THE
DISTANCE
BETWEEN
TWO
POSITIONS
P
AND
Q
IN
T
IS
DP
DQ
WHERE
A
IS
THE
LOWEST
COMMON
ANCESTOR
LCA
OF
P
AND
Q
THE
DIAMETER
OF
T
IS
THE
MAXIMUM
DISTANCE
BETWEEN
TWO
POSITIONS
IN
T
DESCRIBE
AN
EFFICIENT
ALGORITHM
FOR
FINDING
THE
DIAMETER
OF
T
WHAT
IS
THE
RUNNING
TIME
OF
YOUR
ALGORITHM
C
SUPPOSE
EACH
POSITION
P
OF
A
BINARY
TREE
T
IS
LABELED
WITH
ITS
VALUE
F
P
IN
A
LEVEL
NUMBERING
OF
T
DESIGN
A
FAST
METHOD
FOR
DETERMINING
F
A
FOR
THE
LOWEST
COMMON
ANCESTOR
LCA
A
OF
TWO
POSITIONS
P
AND
Q
IN
T
GIVEN
F
P
AND
F
Q
YOU
DO
NOT
NEED
TO
FIND
POSITION
A
JUST
VALUE
F
A
C
GIVE
AN
ALTERNATIVE
IMPLEMENTATION
OF
THE
BUILD
EXPRESSION
TREE
METHOD
OF
THE
EXPRESSIONTREE
CLASS
THAT
RELIES
ON
RECURSION
TO
PERFORM
AN
IMPLICIT
EULER
TOUR
OF
THE
TREE
THAT
IS
BEING
BUILT
EXERCISES
C
NOTE
THAT
THE
BUILD
EXPRESSION
TREE
FUNCTION
OF
THE
EXPRESSIONTREE
CLASS
IS
WRITTEN
IN
SUCH
A
WAY
THAT
A
LEAF
TOKEN
CAN
BE
ANY
STRING
FOR
EXAM
PLE
IT
PARSES
THE
EXPRESSION
A
B
C
HOWEVER
WITHIN
THE
EVALUATE
METHOD
AN
ERROR
WOULD
OCCUR
WHEN
ATTEMPTING
TO
CONVERT
A
LEAF
TOKEN
TO
A
NUMBER
MODIFY
THE
EVALUATE
METHOD
TO
ACCEPT
AN
OPTIONAL
PYTHON
DIC
TIONARY
THAT
CAN
BE
USED
TO
MAP
SUCH
STRING
VARIABLES
TO
NUMERIC
VALUES
WITH
A
SYNTAX
SUCH
AS
T
EVALUATE
A
B
C
IN
THIS
WAY
THE
SAME
ALGEBRAIC
EXPRESSION
CAN
BE
EVALUATED
USING
DIFFERENT
VALUES
C
AS
MENTIONED
IN
EXERCISE
C
POSTFIX
NOTATION
IS
AN
UNAMBIGUOUS
WAY
OF
WRITING
AN
ARITHMETIC
EXPRESSION
WITHOUT
PARENTHESES
IT
IS
DEFINED
SO
THAT
IF
OP
IS
A
NORMAL
INFIX
FULLY
PARENTHESIZED
EXPRES
SION
WITH
OPERATION
OP
THEN
ITS
POSTFIX
EQUIVALENT
IS
OP
WHERE
IS
THE
POSTFIX
VERSION
OF
AND
IS
THE
POSTFIX
VER
SION
OF
THE
POSTFIX
VERSION
OF
A
SINGLE
NUMBER
OR
VARIABLE
IS
JUST
THAT
NUMBER
OR
VARIABLE
SO
FOR
EXAMPLE
THE
POSTFIX
VERSION
OF
THE
INFIX
EXPRESSION
IS
IMPLEMENT
A
POSTFIX
METHOD
OF
THE
EXPRESSIONTREE
CLASS
OF
SECTION
THAT
PRODUCES
THE
POSTFIX
NOTATION
FOR
THE
GIVEN
EXPRESSION
PROJECTS
P
IMPLEMENT
THE
BINARY
TREE
ADT
USING
THE
ARRAY
BASED
REPRESENTATION
DE
SCRIBED
IN
SECTION
P
IMPLEMENT
THE
TREE
ADT
USING
A
LINKED
STRUCTURE
AS
DESCRIBED
IN
SEC
TION
PROVIDE
A
REASONABLE
SET
OF
UPDATE
METHODS
FOR
YOUR
TREE
P
THE
MEMORY
USAGE
FOR
THE
LINKEDBINARYTREE
CLASS
CAN
BE
STREAMLINED
BY
REMOVING
THE
PARENT
REFERENCE
FROM
EACH
NODE
AND
INSTEAD
HAVING
EACH
POSITION
INSTANCE
KEEP
A
MEMBER
PATH
THAT
IS
A
LIST
OF
NODES
REPRESENTING
THE
ENTIRE
PATH
FROM
THE
ROOT
TO
THAT
POSITION
THIS
GENERALLY
SAVES
MEM
ORY
BECAUSE
THERE
ARE
TYPICALLY
RELATIVELY
FEW
STORED
POSITION
INSTANCES
REIMPLEMENT
THE
LINKEDBINARYTREE
CLASS
USING
THIS
STRATEGY
P
A
SLICING
FLOOR
PLAN
DIVIDES
A
RECTANGLE
WITH
HORIZONTAL
AND
VERTICAL
SIDES
USING
HORIZONTAL
AND
VERTICAL
CUTS
SEE
FIGURE
A
SLICING
FLOOR
PLAN
CAN
BE
REPRESENTED
BY
A
PROPER
BINARY
TREE
CALLED
A
SLICING
TREE
WHOSE
INTERNAL
NODES
REPRESENT
THE
CUTS
AND
WHOSE
EXTERNAL
NODES
REPRESENT
THE
BASIC
RECTANGLES
INTO
WHICH
THE
FLOOR
PLAN
IS
DECOMPOSED
BY
THE
CUTS
SEE
FIGURE
THE
COMPACTION
PROBLEM
FOR
A
SLICING
FLOOR
PLAN
IS
DEFINED
AS
FOLLOWS
ASSUME
THAT
EACH
BASIC
RECTANGLE
OF
A
SLICING
FLOOR
PLAN
IS
ASSIGNED
A
MINIMUM
WIDTH
W
AND
A
MINIMUM
HEIGHT
H
THE
COMPACTION
PROBLEM
IS
TO
FIND
THE
SMALLEST
POSSIBLE
HEIGHT
AND
WIDTH
FOR
EACH
RECTANGLE
OF
THE
SLICING
FLOOR
PLAN
THAT
IS
COMPATIBLE
WITH
THE
MINIMUM
DIMENSIONS
CHAPTER
TREES
A
B
FIGURE
A
SLICING
FLOOR
PLAN
B
SLICING
TREE
ASSOCIATED
WITH
THE
FLOOR
PLAN
OF
THE
BASIC
RECTANGLES
NAMELY
THIS
PROBLEM
REQUIRES
THE
ASSIGNMENT
OF
VALUES
H
P
AND
W
P
TO
EACH
POSITION
P
OF
THE
SLICING
TREE
SUCH
THAT
W
IF
P
IS
A
LEAF
WHOSE
BASIC
RECTANGLE
HAS
MINIMUM
WIDTH
W
IF
P
IS
AN
INTERNAL
POSITION
ASSOCIATED
WITH
W
P
MAX
W
F
W
R
W
F
W
R
A
HORIZONTAL
CUT
WITH
LEFT
CHILD
F
AND
RIGHT
CHILD
R
IF
P
IS
AN
INTERNAL
POSITION
ASSOCIATED
WITH
A
VERTICAL
CUT
WITH
LEFT
CHILD
F
AND
RIGHT
CHILD
R
H
IF
P
IS
A
LEAF
NODE
WHOSE
BASIC
RECTANGLE
IF
P
IS
AN
INTERNAL
POSITION
ASSOCIATED
WITH
H
P
H
F
H
R
A
HORIZONTAL
CUT
WITH
LEFT
CHILD
F
AND
RIGHT
CHILD
R
IF
P
IS
AN
INTERNAL
POSITION
ASSOCIATED
WITH
MAX
H
F
H
R
A
VERTICAL
CUT
WITH
LEFT
CHILD
F
AND
RIGHT
CHILD
R
DESIGN
A
DATA
STRUCTURE
FOR
SLICING
FLOOR
PLANS
THAT
SUPPORTS
THE
OPERATIONS
CREATE
A
FLOOR
PLAN
CONSISTING
OF
A
SINGLE
BASIC
RECTANGLE
DECOMPOSE
A
BASIC
RECTANGLE
BY
MEANS
OF
A
HORIZONTAL
CUT
DECOMPOSE
A
BASIC
RECTANGLE
BY
MEANS
OF
A
VERTICAL
CUT
ASSIGN
MINIMUM
HEIGHT
AND
WIDTH
TO
A
BASIC
RECTANGLE
DRAW
THE
SLICING
TREE
ASSOCIATED
WITH
THE
FLOOR
PLAN
COMPACT
AND
DRAW
THE
FLOOR
PLAN
CHAPTER
NOTES
P
WRITE
A
PROGRAM
THAT
CAN
PLAY
TIC
TAC
TOE
EFFECTIVELY
SEE
SECTION
TO
DO
THIS
YOU
WILL
NEED
TO
CREATE
A
GAME
TREE
T
WHICH
IS
A
TREE
WHERE
EACH
POSITION
CORRESPONDS
TO
A
GAME
CONFIGURATION
WHICH
IN
THIS
CASE
IS
A
REPRESENTATION
OF
THE
TIC
TAC
TOE
BOARD
SEE
SECTION
THE
ROOT
CORRESPONDS
TO
THE
INITIAL
CONFIGURATION
FOR
EACH
INTERNAL
POSITION
P
IN
T
THE
CHILDREN
OF
P
CORRESPOND
TO
THE
GAME
STATES
WE
CAN
REACH
FROM
P
GAME
STATE
IN
A
SINGLE
LEGAL
MOVE
FOR
THE
APPROPRIATE
PLAYER
A
THE
FIRST
PLAYER
OR
B
THE
SECOND
PLAYER
POSITIONS
AT
EVEN
DEPTHS
CORRESPOND
TO
MOVES
FOR
A
AND
POSITIONS
AT
ODD
DEPTHS
CORRESPOND
TO
MOVES
FOR
B
LEAVES
ARE
EITHER
FINAL
GAME
STATES
OR
ARE
AT
A
DEPTH
BEYOND
WHICH
WE
DO
NOT
WANT
TO
EXPLORE
WE
SCORE
EACH
LEAF
WITH
A
VALUE
THAT
INDICATES
HOW
GOOD
THIS
STATE
IS
FOR
PLAYER
A
IN
LARGE
GAMES
LIKE
CHESS
WE
HAVE
TO
USE
A
HEURISTIC
SCORING
FUNCTION
BUT
FOR
SMALL
GAMES
LIKE
TIC
TAC
TOE
WE
CAN
CONSTRUCT
THE
ENTIRE
GAME
TREE
AND
SCORE
LEAVES
AS
INDICATING
WHETHER
PLAYER
A
HAS
A
WIN
DRAW
OR
LOSE
IN
THAT
CONFIGURATION
A
GOOD
ALGORITHM
FOR
CHOOSING
MOVES
IS
MINIMAX
IN
THIS
ALGORITHM
WE
ASSIGN
A
SCORE
TO
EACH
INTERNAL
POSITION
P
IN
T
SUCH
THAT
IF
P
REPRESENTS
A
TURN
WE
COMPUTE
P
SCORE
AS
THE
MAXIMUM
OF
THE
SCORES
OF
P
CHILDREN
WHICH
CORRESPONDS
TO
A
OPTIMAL
PLAY
FROM
P
IF
AN
INTERNAL
NODE
P
REPRESENTS
B
TURN
THEN
WE
COMPUTE
P
SCORE
AS
THE
MINIMUM
OF
THE
SCORES
OF
P
CHILDREN
WHICH
CORRESPONDS
TO
B
OPTIMAL
PLAY
FROM
P
P
IMPLEMENT
THE
TREE
ADT
USING
THE
BINARY
TREE
REPRESENTATION
DESCRIBED
IN
EXERCISE
C
YOU
MAY
ADAPT
THE
LINKEDBINARYTREE
IMPLEMENTATION
P
WRITE
A
PROGRAM
THAT
TAKES
AS
INPUT
A
GENERAL
TREE
T
AND
A
POSITION
P
OF
T
AND
CONVERTS
T
TO
ANOTHER
TREE
WITH
THE
SAME
SET
OF
POSITION
ADJACENCIES
BUT
NOW
WITH
P
AS
ITS
ROOT
CHAPTER
NOTES
DISCUSSIONS
OF
THE
CLASSIC
PREORDER
INORDER
AND
POSTORDER
TREE
TRAVERSAL
METHODS
CAN
BE
FOUND
IN
KNUTH
FUNDAMENTAL
ALGORITHMS
BOOK
THE
EULER
TOUR
TRAVERSAL
TECHNIQUE
COMES
FROM
THE
PARALLEL
ALGORITHMS
COMMUNITY
IT
IS
INTRODUCED
BY
TARJAN
AND
VISHKIN
AND
IS
DISCUSSED
BY
JA
JA
AND
BY
KARP
AND
RAMACHANDRAN
THE
ALGORITHM
FOR
DRAWING
A
TREE
IS
GENERALLY
CONSIDERED
TO
BE
A
PART
OF
THE
FOLKLORE
OF
GRAPH
DRAWING
AL
GORITHMS
THE
READER
INTERESTED
IN
GRAPH
DRAWING
IS
REFERRED
TO
THE
BOOK
BY
DI
BATTISTA
EADES
TAMASSIA
AND
TOLLIS
AND
THE
SURVEY
BY
TAMASSIA
AND
LIOTTA
THE
PUZZLE
IN
EXERCISE
R
WAS
COMMUNICATED
BY
MICHA
SHARIR
CHAPTER
PRIORITY
QUEUES
CONTENTS
THE
PRIORITY
QUEUE
ABSTRACT
DATA
TYPE
PRIORITIES
THE
PRIORITY
QUEUE
ADT
IMPLEMENTING
A
PRIORITY
QUEUE
THE
COMPOSITION
DESIGN
PATTERN
IMPLEMENTATION
WITH
AN
UNSORTED
LIST
IMPLEMENTATION
WITH
A
SORTED
LIST
HEAPS
THE
HEAP
DATA
STRUCTURE
IMPLEMENTING
A
PRIORITY
QUEUE
WITH
A
HEAP
ARRAY
BASED
REPRESENTATION
OF
A
COMPLETE
BINARY
TREE
PYTHON
HEAP
IMPLEMENTATION
ANALYSIS
OF
A
HEAP
BASED
PRIORITY
QUEUE
BOTTOM
UP
HEAP
CONSTRUCTION
PYTHON
HEAPQ
MODULE
SORTING
WITH
A
PRIORITY
QUEUE
SELECTION
SORT
AND
INSERTION
SORT
HEAP
SORT
ADAPTABLE
PRIORITY
QUEUES
LOCATORS
IMPLEMENTING
AN
ADAPTABLE
PRIORITY
QUEUE
EXERCISES
THE
PRIORITY
QUEUE
ABSTRACT
DATA
TYPE
THE
PRIORITY
QUEUE
ABSTRACT
DATA
TYPE
PRIORITIES
IN
CHAPTER
WE
INTRODUCED
THE
QUEUE
ADT
AS
A
COLLECTION
OF
OBJECTS
THAT
ARE
ADDED
AND
REMOVED
ACCORDING
TO
THE
FIRST
IN
FIRST
OUT
FIFO
PRINCIPLE
A
COM
PANY
CUSTOMER
CALL
CENTER
EMBODIES
SUCH
A
MODEL
IN
WHICH
WAITING
CUSTOMERS
ARE
TOLD
CALLS
WILL
BE
ANSWERED
IN
THE
ORDER
THAT
THEY
WERE
RECEIVED
IN
THAT
SETTING
A
NEW
CALL
IS
ADDED
TO
THE
BACK
OF
THE
QUEUE
AND
EACH
TIME
A
CUSTOMER
SERVICE
REP
RESENTATIVE
BECOMES
AVAILABLE
HE
OR
SHE
IS
CONNECTED
WITH
THE
CALL
THAT
IS
REMOVED
FROM
THE
FRONT
OF
THE
CALL
QUEUE
IN
PRACTICE
THERE
ARE
MANY
APPLICATIONS
IN
WHICH
A
QUEUE
LIKE
STRUCTURE
IS
USED
TO
MANAGE
OBJECTS
THAT
MUST
BE
PROCESSED
IN
SOME
WAY
BUT
FOR
WHICH
THE
FIRST
IN
FIRST
OUT
POLICY
DOES
NOT
SUFFICE
CONSIDER
FOR
EXAMPLE
AN
AIR
TRAFFIC
CONTROL
CENTER
THAT
HAS
TO
DECIDE
WHICH
FLIGHT
TO
CLEAR
FOR
LANDING
FROM
AMONG
MANY
APPROACHING
THE
AIRPORT
THIS
CHOICE
MAY
BE
INFLUENCED
BY
FACTORS
SUCH
AS
EACH
PLANE
DISTANCE
FROM
THE
RUNWAY
TIME
SPENT
WAITING
IN
A
HOLDING
PATTERN
OR
AMOUNT
OF
REMAINING
FUEL
IT
IS
UNLIKELY
THAT
THE
LANDING
DECISIONS
ARE
BASED
PURELY
ON
A
FIFO
POLICY
THERE
ARE
OTHER
SITUATIONS
IN
WHICH
A
FIRST
COME
FIRST
SERVE
POLICY
MIGHT
SEEM
REASONABLE
YET
FOR
WHICH
OTHER
PRIORITIES
COME
INTO
PLAY
TO
USE
ANOTHER
AIRLINE
ANALOGY
SUPPOSE
A
CERTAIN
FLIGHT
IS
FULLY
BOOKED
AN
HOUR
PRIOR
TO
DEPARTURE
BE
CAUSE
OF
THE
POSSIBILITY
OF
CANCELLATIONS
THE
AIRLINE
MAINTAINS
A
QUEUE
OF
STANDBY
PASSENGERS
HOPING
TO
GET
A
SEAT
ALTHOUGH
THE
PRIORITY
OF
A
STANDBY
PASSENGER
IS
INFLUENCED
BY
THE
CHECK
IN
TIME
OF
THAT
PASSENGER
OTHER
CONSIDERATIONS
INCLUDE
THE
FARE
PAID
AND
FREQUENT
FLYER
STATUS
SO
IT
MAY
BE
THAT
AN
AVAILABLE
SEAT
IS
GIVEN
TO
A
PASSENGER
WHO
HAS
ARRIVED
LATER
THAN
ANOTHER
IF
SUCH
A
PASSENGER
IS
ASSIGNED
A
BETTER
PRIORITY
BY
THE
AIRLINE
AGENT
IN
THIS
CHAPTER
WE
INTRODUCE
A
NEW
ABSTRACT
DATA
TYPE
KNOWN
AS
A
PRIORITY
QUEUE
THIS
IS
A
COLLECTION
OF
PRIORITIZED
ELEMENTS
THAT
ALLOWS
ARBITRARY
ELEMENT
INSERTION
AND
ALLOWS
THE
REMOVAL
OF
THE
ELEMENT
THAT
HAS
FIRST
PRIORITY
WHEN
AN
ELEMENT
IS
ADDED
TO
A
PRIORITY
QUEUE
THE
USER
DESIGNATES
ITS
PRIORITY
BY
PROVIDING
AN
ASSOCIATED
KEY
THE
ELEMENT
WITH
THE
MINIMUM
KEY
WILL
BE
THE
NEXT
TO
BE
REMOVED
FROM
THE
QUEUE
THUS
AN
ELEMENT
WITH
KEY
WILL
BE
GIVEN
PRIORITY
OVER
AN
ELEMENT
WITH
KEY
ALTHOUGH
IT
IS
QUITE
COMMON
FOR
PRIORITIES
TO
BE
EXPRESSED
NUMERICALLY
ANY
PYTHON
OBJECT
MAY
BE
USED
AS
A
KEY
AS
LONG
AS
THE
OBJECT
TYPE
SUPPORTS
A
CONSISTENT
MEANING
FOR
THE
TEST
A
B
FOR
ANY
INSTANCES
A
AND
B
SO
AS
TO
DEFINE
A
NATURAL
ORDER
OF
THE
KEYS
WITH
SUCH
GENERALITY
APPLICATIONS
MAY
DEVELOP
THEIR
OWN
NOTION
OF
PRIORITY
FOR
EACH
ELEMENT
FOR
EXAMPLE
DIFFERENT
FINANCIAL
ANALYSTS
MAY
ASSIGN
DIFFERENT
RATINGS
I
E
PRIORITIES
TO
A
PARTICULAR
ASSET
SUCH
AS
A
SHARE
OF
STOCK
CHAPTER
PRIORITY
QUEUES
THE
PRIORITY
QUEUE
ADT
FORMALLY
WE
MODEL
AN
ELEMENT
AND
ITS
PRIORITY
AS
A
KEY
VALUE
PAIR
WE
DEFINE
THE
PRIORITY
QUEUE
ADT
TO
SUPPORT
THE
FOLLOWING
METHODS
FOR
A
PRIORITY
QUEUE
P
P
ADD
K
V
INSERT
AN
ITEM
WITH
KEY
K
AND
VALUE
V
INTO
PRIORITY
QUEUE
P
P
MIN
RETURN
A
TUPLE
K
V
REPRESENTING
THE
KEY
AND
VALUE
OF
AN
ITEM
IN
PRIORITY
QUEUE
P
WITH
MINIMUM
KEY
BUT
DO
NOT
RE
MOVE
THE
ITEM
AN
ERROR
OCCURS
IF
THE
PRIORITY
QUEUE
IS
EMPTY
P
REMOVE
MIN
REMOVE
AN
ITEM
WITH
MINIMUM
KEY
FROM
PRIORITY
QUEUE
P
AND
RETURN
A
TUPLE
K
V
REPRESENTING
THE
KEY
AND
VALUE
OF
THE
REMOVED
ITEM
AN
ERROR
OCCURS
IF
THE
PRIORITY
QUEUE
IS
EMPTY
P
IS
EMPTY
RETURN
TRUE
IF
PRIORITY
QUEUE
P
DOES
NOT
CONTAIN
ANY
ITEMS
LEN
P
RETURN
THE
NUMBER
OF
ITEMS
IN
PRIORITY
QUEUE
P
A
PRIORITY
QUEUE
MAY
HAVE
MULTIPLE
ENTRIES
WITH
EQUIVALENT
KEYS
IN
WHICH
CASE
METHODS
MIN
AND
REMOVE
MIN
MAY
REPORT
AN
ARBITRARY
CHOICE
OF
ITEM
HAVING
MINI
MUM
KEY
VALUES
MAY
BE
ANY
TYPE
OF
OBJECT
IN
OUR
INITIAL
MODEL
FOR
A
PRIORITY
QUEUE
WE
ASSUME
THAT
AN
ELEMENT
KEY
RE
MAINS
FIXED
ONCE
IT
HAS
BEEN
ADDED
TO
A
PRIORITY
QUEUE
IN
SECTION
WE
CONSIDER
AN
EXTENSION
THAT
ALLOWS
A
USER
TO
UPDATE
AN
ELEMENT
KEY
WITHIN
THE
PRIORITY
QUEUE
EXAMPLE
THE
FOLLOWING
TABLE
SHOWS
A
SERIES
OF
OPERATIONS
AND
THEIR
EFFECTS
ON
AN
INITIALLY
EMPTY
PRIORITY
QUEUE
P
THE
PRIORITY
QUEUE
COLUMN
IS
SOMEWHAT
DECEIVING
SINCE
IT
SHOWS
THE
ENTRIES
AS
TUPLES
AND
SORTED
BY
KEY
SUCH
AN
INTERNAL
REPRESENTATION
IS
NOT
REQUIRED
OF
A
PRIORITY
QUEUE
IMPLEMENTING
A
PRIORITY
QUEUE
IMPLEMENTING
A
PRIORITY
QUEUE
IN
THIS
SECTION
WE
SHOW
HOW
TO
IMPLEMENT
A
PRIORITY
QUEUE
BY
STORING
ITS
ENTRIES
IN
A
POSITIONAL
LIST
L
SEE
SECTION
WE
PROVIDE
TWO
REALIZATIONS
DEPENDING
ON
WHETHER
OR
NOT
WE
KEEP
THE
ENTRIES
IN
L
SORTED
BY
KEY
THE
COMPOSITION
DESIGN
PATTERN
ONE
CHALLENGE
IN
IMPLEMENTING
A
PRIORITY
QUEUE
IS
THAT
WE
MUST
KEEP
TRACK
OF
BOTH
AN
ELEMENT
AND
ITS
KEY
EVEN
AS
ITEMS
ARE
RELOCATED
WITHIN
OUR
DATA
STRUCTURE
THIS
IS
REMINISCENT
OF
A
CASE
STUDY
FROM
SECTION
IN
WHICH
WE
MAINTAIN
ACCESS
COUNTS
WITH
EACH
ELEMENT
IN
THAT
SETTING
WE
INTRODUCED
THE
COMPOSITION
DESIGN
PATTERN
DEFINING
AN
ITEM
CLASS
THAT
ASSURED
THAT
EACH
ELEMENT
REMAINED
PAIRED
WITH
ITS
ASSOCIATED
COUNT
IN
OUR
PRIMARY
DATA
STRUCTURE
FOR
PRIORITY
QUEUES
WE
WILL
USE
COMPOSITION
TO
STORE
ITEMS
INTERNALLY
AS
PAIRS
CONSISTING
OF
A
KEY
K
AND
A
VALUE
V
TO
IMPLEMENT
THIS
CONCEPT
FOR
ALL
PRIORITY
QUEUE
IMPLEMENTATIONS
WE
PROVIDE
A
PRIORITYQUEUEBASE
CLASS
SEE
CODE
FRAGMENT
THAT
INCLUDES
A
DEFINITION
FOR
A
NESTED
CLASS
NAMED
ITEM
WE
DEFINE
THE
SYNTAX
A
B
FOR
ITEM
INSTANCES
A
AND
B
TO
BE
BASED
UPON
THE
KEYS
CLASS
PRIORITYQUEUEBASE
ABSTRACT
BASE
CLASS
FOR
A
PRIORITY
QUEUE
CLASS
ITEM
LIGHTWEIGHT
COMPOSITE
TO
STORE
PRIORITY
QUEUE
ITEMS
SLOTS
DEF
INIT
SELF
K
V
SELF
KEY
K
SELF
VALUE
V
DEF
LT
SELF
OTHER
RETURN
SELF
KEY
OTHER
KEY
COMPARE
ITEMS
BASED
ON
THEIR
KEYS
DEF
IS
EMPTY
SELF
CONCRETE
METHOD
ASSUMING
ABSTRACT
LEN
RETURN
TRUE
IF
THE
PRIORITY
QUEUE
IS
EMPTY
RETURN
LEN
SELF
CODE
FRAGMENT
A
PRIORITYQUEUEBASE
CLASS
WITH
A
NESTED
ITEM
CLASS
THAT
COM
POSES
A
KEY
AND
A
VALUE
INTO
A
SINGLE
OBJECT
FOR
CONVENIENCE
WE
PROVIDE
A
CONCRETE
IMPLEMENTATION
OF
IS
EMPTY
THAT
IS
BASED
ON
A
PRESUMED
LEN
IMPELEMENTATION
CHAPTER
PRIORITY
QUEUES
IMPLEMENTATION
WITH
AN
UNSORTED
LIST
IN
OUR
FIRST
CONCRETE
IMPLEMENTATION
OF
A
PRIORITY
QUEUE
WE
STORE
ENTRIES
WITHIN
AN
UNSORTED
LIST
OUR
UNSORTEDPRIORITYQUEUE
CLASS
IS
GIVEN
IN
CODE
FRAGMENT
INHERITING
FROM
THE
PRIORITYQUEUEBASE
CLASS
INTRODUCED
IN
CODE
FRAGMENT
FOR
INTERNAL
STORAGE
KEY
VALUE
PAIRS
ARE
REPRESENTED
AS
COMPOSITES
USING
INSTANCES
OF
THE
INHERITED
ITEM
CLASS
THESE
ITEMS
ARE
STORED
WITHIN
A
POSITIONALLIST
IDENTIFIED
AS
THE
DATA
MEMBER
OF
OUR
CLASS
WE
ASSUME
THAT
THE
POSITIONAL
LIST
IS
IMPLEMENTED
WITH
A
DOUBLY
LINKED
LIST
AS
IN
SECTION
SO
THAT
ALL
OPERATIONS
OF
THAT
ADT
EXECUTE
IN
O
TIME
WE
BEGIN
WITH
AN
EMPTY
LIST
WHEN
A
NEW
PRIORITY
QUEUE
IS
CONSTRUCTED
AT
ALL
TIMES
THE
SIZE
OF
THE
LIST
EQUALS
THE
NUMBER
OF
KEY
VALUE
PAIRS
CURRENTLY
STORED
IN
THE
PRIORITY
QUEUE
FOR
THIS
REASON
OUR
PRIORITY
QUEUE
LEN
METHOD
SIMPLY
RETURNS
THE
LENGTH
OF
THE
INTERNAL
DATA
LIST
BY
THE
DESIGN
OF
OUR
PRIORITYQUEUEBASE
CLASS
WE
INHERIT
A
CONCRETE
IMPLEMENTATION
OF
THE
IS
EMPTY
METHOD
THAT
RELIES
ON
A
CALL
TO
OUR
LEN
METHOD
EACH
TIME
A
KEY
VALUE
PAIR
IS
ADDED
TO
THE
PRIORITY
QUEUE
VIA
THE
ADD
METHOD
WE
CREATE
A
NEW
ITEM
COMPOSITE
FOR
THE
GIVEN
KEY
AND
VALUE
AND
ADD
THAT
ITEM
TO
THE
END
OF
THE
LIST
SUCH
AN
IMPLEMENTATION
TAKES
O
TIME
THE
REMAINING
CHALLENGE
IS
THAT
WHEN
MIN
OR
REMOVE
MIN
IS
CALLED
WE
MUST
LOCATE
THE
ITEM
WITH
MINIMUM
KEY
BECAUSE
THE
ITEMS
ARE
NOT
SORTED
WE
MUST
INSPECT
ALL
ENTRIES
TO
FIND
ONE
WITH
A
MINIMUM
KEY
FOR
CONVENIENCE
WE
DEFINE
A
NONPUBLIC
FIND
MIN
UTILITY
THAT
RETURNS
THE
POSITION
OF
AN
ITEM
WITH
MINIMUM
KEY
KNOWLEDGE
OF
THE
POSITION
ALLOWS
THE
REMOVE
MIN
METHOD
TO
INVOKE
THE
DELETE
METHOD
ON
THE
POSITIONAL
LIST
THE
MIN
METHOD
SIMPLY
USES
THE
POSITION
TO
RETRIEVE
THE
ITEM
WHEN
PREPARING
A
KEY
VALUE
TUPLE
TO
RETURN
DUE
TO
THE
LOOP
FOR
FINDING
THE
MINIMUM
KEY
BOTH
MIN
AND
REMOVE
MIN
METHODS
RUN
IN
O
N
TIME
WHERE
N
IS
THE
NUMBER
OF
ENTRIES
IN
THE
PRIORITY
QUEUE
A
SUMMARY
OF
THE
RUNNING
TIMES
FOR
THE
UNSORTEDPRIORITYQUEUE
CLASS
IS
GIVEN
IN
TABLE
TABLE
WORST
CASE
RUNNING
TIMES
OF
THE
METHODS
OF
A
PRIORITY
QUEUE
OF
SIZE
N
REALIZED
BY
MEANS
OF
AN
UNSORTED
DOUBLY
LINKED
LIST
THE
SPACE
REQUIREMENT
IS
O
N
IMPLEMENTING
A
PRIORITY
QUEUE
CLASS
UNSORTEDPRIORITYQUEUE
PRIORITYQUEUEBASE
BASE
CLASS
DEFINES
ITEM
A
MIN
ORIENTED
PRIORITY
QUEUE
IMPLEMENTED
WITH
AN
UNSORTED
LIST
DEF
FIND
MIN
SELF
NONPUBLIC
UTILITY
RETURN
POSITION
OF
ITEM
WITH
MINIMUM
KEY
IF
SELF
IS
EMPTY
IS
EMPTY
INHERITED
FROM
BASE
CLASS
RAISE
EMPTY
PRIORITY
QUEUE
IS
EMPTY
SMALL
SELF
DATA
FIRST
WALK
SELF
DATA
AFTER
SMALL
WHILE
WALK
IS
NOT
NONE
IF
WALK
ELEMENT
SMALL
ELEMENT
SMALL
WALK
WALK
SELF
DATA
AFTER
WALK
RETURN
SMALL
DEF
INIT
SELF
CREATE
A
NEW
EMPTY
PRIORITY
QUEUE
SELF
DATA
POSITIONALLIST
DEF
LEN
SELF
RETURN
THE
NUMBER
OF
ITEMS
IN
THE
PRIORITY
QUEUE
RETURN
LEN
SELF
DATA
DEF
ADD
SELF
KEY
VALUE
ADD
A
KEY
VALUE
PAIR
SELF
DATA
ADD
LAST
SELF
ITEM
KEY
VALUE
DEF
MIN
SELF
RETURN
BUT
DO
NOT
REMOVE
K
V
TUPLE
WITH
MINIMUM
KEY
P
SELF
FIND
MIN
ITEM
P
ELEMENT
RETURN
ITEM
KEY
ITEM
VALUE
DEF
REMOVE
MIN
SELF
REMOVE
AND
RETURN
K
V
TUPLE
WITH
MINIMUM
KEY
P
SELF
FIND
MIN
ITEM
SELF
DATA
DELETE
P
RETURN
ITEM
KEY
ITEM
VALUE
CODE
FRAGMENT
AN
IMPLEMENTATION
OF
A
PRIORITY
QUEUE
USING
AN
UNSORTED
LIST
THE
PARENT
CLASS
PRIORITYQUEUEBASE
IS
GIVEN
IN
CODE
FRAGMENT
AND
THE
POSITIONALLIST
CLASS
IS
FROM
SECTION
CHAPTER
PRIORITY
QUEUES
IMPLEMENTATION
WITH
A
SORTED
LIST
AN
ALTERNATIVE
IMPLEMENTATION
OF
A
PRIORITY
QUEUE
USES
A
POSITIONAL
LIST
YET
MAIN
TAINING
ENTRIES
SORTED
BY
NONDECREASING
KEYS
THIS
ENSURES
THAT
THE
FIRST
ELEMENT
OF
THE
LIST
IS
AN
ENTRY
WITH
THE
SMALLEST
KEY
OUR
SORTEDPRIORITYQUEUE
CLASS
IS
GIVEN
IN
CODE
FRAGMENT
THE
IMPLEMEN
TATION
OF
MIN
AND
REMOVE
MIN
ARE
RATHER
STRAIGHTFORWARD
GIVEN
KNOWLEDGE
THAT
THE
FIRST
ELEMENT
OF
A
LIST
HAS
A
MINIMUM
KEY
WE
RELY
ON
THE
FIRST
METHOD
OF
THE
POSI
TIONAL
LIST
TO
FIND
THE
POSITION
OF
THE
FIRST
ITEM
AND
THE
DELETE
METHOD
TO
REMOVE
THE
ENTRY
FROM
THE
LIST
ASSUMING
THAT
THE
LIST
IS
IMPLEMENTED
WITH
A
DOUBLY
LINKED
LIST
OPERATIONS
MIN
AND
REMOVE
MIN
TAKE
O
TIME
THIS
BENEFIT
COMES
AT
A
COST
HOWEVER
FOR
METHOD
ADD
NOW
REQUIRES
THAT
WE
SCAN
THE
LIST
TO
FIND
THE
APPROPRIATE
POSITION
TO
INSERT
THE
NEW
ITEM
OUR
IMPLEMENTATION
STARTS
AT
THE
END
OF
THE
LIST
WALKING
BACKWARD
UNTIL
THE
NEW
KEY
IS
SMALLER
THAN
AN
EXISTING
ITEM
IN
THE
WORST
CASE
IT
PROGRESSES
UNTIL
REACHING
THE
FRONT
OF
THE
LIST
THEREFORE
THE
ADD
METHOD
TAKES
O
N
WORST
CASE
TIME
WHERE
N
IS
THE
NUMBER
OF
ENTRIES
IN
THE
PRIORITY
QUEUE
AT
THE
TIME
THE
METHOD
IS
EXECUTED
IN
SUMMARY
WHEN
USING
A
SORTED
LIST
TO
IMPLEMENT
A
PRIORITY
QUEUE
INSERTION
RUNS
IN
LINEAR
TIME
WHEREAS
FINDING
AND
REMOVING
THE
MINIMUM
CAN
BE
DONE
IN
CONSTANT
TIME
COMPARING
THE
TWO
LIST
BASED
IMPLEMENTATIONS
TABLE
COMPARES
THE
RUNNING
TIMES
OF
THE
METHODS
OF
A
PRIORITY
QUEUE
REALIZED
BY
MEANS
OF
A
SORTED
AND
UNSORTED
LIST
RESPECTIVELY
WE
SEE
AN
INTERESTING
TRADE
OFF
WHEN
WE
USE
A
LIST
TO
IMPLEMENT
THE
PRIORITY
QUEUE
ADT
AN
UNSORTED
LIST
SUPPORTS
FAST
INSERTIONS
BUT
SLOW
QUERIES
AND
DELETIONS
WHEREAS
A
SORTED
LIST
ALLOWS
FAST
QUERIES
AND
DELETIONS
BUT
SLOW
INSERTIONS
OPERATION
UNSORTED
LIST
SORTED
LIST
LEN
O
O
IS
EMPTY
O
O
ADD
O
O
N
MIN
O
N
O
REMOVE
MIN
O
N
O
TABLE
WORST
CASE
RUNNING
TIMES
OF
THE
METHODS
OF
A
PRIORITY
QUEUE
OF
SIZE
N
REALIZED
BY
MEANS
OF
AN
UNSORTED
OR
SORTED
LIST
RESPECTIVELY
WE
ASSUME
THAT
THE
LIST
IS
IMPLEMENTED
BY
A
DOUBLY
LINKED
LIST
THE
SPACE
REQUIREMENT
IS
O
N
IMPLEMENTING
A
PRIORITY
QUEUE
CLASS
SORTEDPRIORITYQUEUE
PRIORITYQUEUEBASE
BASE
CLASS
DEFINES
ITEM
A
MIN
ORIENTED
PRIORITY
QUEUE
IMPLEMENTED
WITH
A
SORTED
LIST
DEF
INIT
SELF
CREATE
A
NEW
EMPTY
PRIORITY
QUEUE
SELF
DATA
POSITIONALLIST
DEF
LEN
SELF
RETURN
THE
NUMBER
OF
ITEMS
IN
THE
PRIORITY
QUEUE
RETURN
LEN
SELF
DATA
DEF
ADD
SELF
KEY
VALUE
ADD
A
KEY
VALUE
PAIR
NEWEST
SELF
ITEM
KEY
VALUE
MAKE
NEW
ITEM
INSTANCE
WALK
SELF
DATA
LAST
WALK
BACKWARD
LOOKING
FOR
SMALLER
KEY
WHILE
WALK
IS
NOT
NONE
AND
NEWEST
WALK
ELEMENT
WALK
SELF
DATA
BEFORE
WALK
IF
WALK
IS
NONE
SELF
DATA
ADD
FIRST
NEWEST
NEW
KEY
IS
SMALLEST
ELSE
SELF
DATA
ADD
AFTER
WALK
NEWEST
NEWEST
GOES
AFTER
WALK
DEF
MIN
SELF
RETURN
BUT
DO
NOT
REMOVE
K
V
TUPLE
WITH
MINIMUM
KEY
IF
SELF
IS
EMPTY
RAISE
EMPTY
PRIORITY
QUEUE
IS
EMPTY
P
SELF
DATA
FIRST
ITEM
P
ELEMENT
RETURN
ITEM
KEY
ITEM
VALUE
DEF
REMOVE
MIN
SELF
REMOVE
AND
RETURN
K
V
TUPLE
WITH
MINIMUM
KEY
IF
SELF
IS
EMPTY
RAISE
EMPTY
PRIORITY
QUEUE
IS
EMPTY
ITEM
SELF
DATA
DELETE
SELF
DATA
FIRST
RETURN
ITEM
KEY
ITEM
VALUE
CODE
FRAGMENT
AN
IMPLEMENTATION
OF
A
PRIORITY
QUEUE
USING
A
SORTED
LIST
THE
PARENT
CLASS
PRIORITYQUEUEBASE
IS
GIVEN
IN
CODE
FRAGMENT
AND
THE
POSITIONALLIST
CLASS
IS
FROM
SECTION
CHAPTER
PRIORITY
QUEUES
HEAPS
THE
TWO
STRATEGIES
FOR
IMPLEMENTING
A
PRIORITY
QUEUE
ADT
IN
THE
PREVIOUS
SECTION
DEMONSTRATE
AN
INTERESTING
TRADE
OFF
WHEN
USING
AN
UNSORTED
LIST
TO
STORE
ENTRIES
WE
CAN
PERFORM
INSERTIONS
IN
O
TIME
BUT
FINDING
OR
REMOVING
AN
ELEMENT
WITH
MINIMUM
KEY
REQUIRES
AN
O
N
TIME
LOOP
THROUGH
THE
ENTIRE
COLLECTION
IN
CONTRAST
IF
USING
A
SORTED
LIST
WE
CAN
TRIVIALLY
FIND
OR
REMOVE
THE
MINIMUM
ELEMENT
IN
O
TIME
BUT
ADDING
A
NEW
ELEMENT
TO
THE
QUEUE
MAY
REQUIRE
O
N
TIME
TO
RESTORE
THE
SORTED
ORDER
IN
THIS
SECTION
WE
PROVIDE
A
MORE
EFFICIENT
REALIZATION
OF
A
PRIORITY
QUEUE
USING
A
DATA
STRUCTURE
CALLED
A
BINARY
HEAP
THIS
DATA
STRUCTURE
ALLOWS
US
TO
PERFORM
BOTH
INSERTIONS
AND
REMOVALS
IN
LOGARITHMIC
TIME
WHICH
IS
A
SIGNIFICANT
IMPROVEMENT
OVER
THE
LIST
BASED
IMPLEMENTATIONS
DISCUSSED
IN
SECTION
THE
FUNDAMENTAL
WAY
THE
HEAP
ACHIEVES
THIS
IMPROVEMENT
IS
TO
USE
THE
STRUCTURE
OF
A
BINARY
TREE
TO
FIND
A
COMPROMISE
BETWEEN
ELEMENTS
BEING
ENTIRELY
UNSORTED
AND
PERFECTLY
SORTED
THE
HEAP
DATA
STRUCTURE
A
HEAP
SEE
FIGURE
IS
A
BINARY
TREE
T
THAT
STORES
A
COLLECTION
OF
ITEMS
AT
ITS
POSITIONS
AND
THAT
SATISFIES
TWO
ADDITIONAL
PROPERTIES
A
RELATIONAL
PROPERTY
DEFINED
IN
TERMS
OF
THE
WAY
KEYS
ARE
STORED
IN
T
AND
A
STRUCTURAL
PROPERTY
DEFINED
IN
TERMS
OF
THE
SHAPE
OF
T
ITSELF
THE
RELATIONAL
PROPERTY
IS
THE
FOLLOWING
HEAP
ORDER
PROPERTY
IN
A
HEAP
T
FOR
EVERY
POSITION
P
OTHER
THAN
THE
ROOT
THE
KEY
STORED
AT
P
IS
GREATER
THAN
OR
EQUAL
TO
THE
KEY
STORED
AT
P
PARENT
AS
A
CONSEQUENCE
OF
THE
HEAP
ORDER
PROPERTY
THE
KEYS
ENCOUNTERED
ON
A
PATH
FROM
THE
ROOT
TO
A
LEAF
OF
T
ARE
IN
NONDECREASING
ORDER
ALSO
A
MINIMUM
KEY
IS
ALWAYS
STORED
AT
THE
ROOT
OF
T
THIS
MAKES
IT
EASY
TO
LOCATE
SUCH
AN
ITEM
WHEN
MIN
OR
REMOVE
MIN
IS
CALLED
AS
IT
IS
INFORMALLY
SAID
TO
BE
AT
THE
TOP
OF
THE
HEAP
HENCE
THE
NAME
HEAP
FOR
THE
DATA
STRUCTURE
BY
THE
WAY
THE
HEAP
DATA
STRUCTURE
DEFINED
HERE
HAS
NOTHING
TO
DO
WITH
THE
MEMORY
HEAP
SECTION
USED
IN
THE
RUN
TIME
ENVIRONMENT
SUPPORTING
A
PROGRAMMING
LANGUAGE
LIKE
PYTHON
FOR
THE
SAKE
OF
EFFICIENCY
AS
WILL
BECOME
CLEAR
LATER
WE
WANT
THE
HEAP
T
TO
HAVE
AS
SMALL
A
HEIGHT
AS
POSSIBLE
WE
ENFORCE
THIS
REQUIREMENT
BY
INSISTING
THAT
THE
HEAP
T
SATISFY
AN
ADDITIONAL
STRUCTURAL
PROPERTY
IT
MUST
BE
WHAT
WE
TERM
COMPLETE
COMPLETE
BINARY
TREE
PROPERTY
A
HEAP
T
WITH
HEIGHT
H
IS
A
COMPLETE
BINARY
TREE
IF
LEVELS
H
OF
T
HAVE
THE
MAXIMUM
NUMBER
OF
NODES
POSSIBLE
NAMELY
LEVEL
I
HAS
NODES
FOR
I
H
AND
THE
REMAINING
NODES
AT
LEVEL
H
RESIDE
IN
THE
LEFTMOST
POSSIBLE
POSITIONS
AT
THAT
LEVEL
HEAPS
FIGURE
EXAMPLE
OF
A
HEAP
STORING
ENTRIES
WITH
INTEGER
KEYS
THE
LAST
POSITION
IS
THE
ONE
STORING
ENTRY
W
THE
TREE
IN
FIGURE
IS
COMPLETE
BECAUSE
LEVELS
AND
ARE
FULL
AND
THE
SIX
NODES
IN
LEVEL
ARE
IN
THE
SIX
LEFTMOST
POSSIBLE
POSITIONS
AT
THAT
LEVEL
IN
FORMALIZING
WHAT
WE
MEAN
BY
THE
LEFTMOST
POSSIBLE
POSITIONS
WE
REFER
TO
THE
DISCUSSION
OF
LEVEL
NUMBERING
FROM
SECTION
IN
THE
CONTEXT
OF
AN
ARRAY
BASED
REPRESENTATION
OF
A
BINARY
TREE
IN
FACT
IN
SECTION
WE
WILL
DISCUSS
THE
USE
OF
AN
ARRAY
TO
REPRESENT
A
HEAP
A
COMPLETE
BINARY
TREE
WITH
N
ELEMENTS
IS
ONE
THAT
HAS
POSITIONS
WITH
LEVEL
NUMBERING
THROUGH
N
FOR
EXAMPLE
IN
AN
ARRAY
BASED
REPRESENTATION
OF
THE
ABOVE
TREE
ITS
ENTRIES
WOULD
BE
STORED
CONSECUTIVELY
FROM
A
TO
A
THE
HEIGHT
OF
A
HEAP
LET
H
DENOTE
THE
HEIGHT
OF
T
INSISTING
THAT
T
BE
COMPLETE
ALSO
HAS
AN
IMPORTANT
CONSEQUENCE
AS
SHOWN
IN
PROPOSITION
PROPOSITION
A
HEAP
T
STORING
N
ENTRIES
HAS
HEIGHT
H
LLOG
NJ
JUSTIFICATION
FROM
THE
FACT
THAT
T
IS
COMPLETE
WE
KNOW
THAT
THE
NUMBER
OF
NODES
IN
LEVELS
THROUGH
H
OF
T
IS
PRECISELY
AND
THAT
THE
NUMBER
OF
NODES
IN
LEVEL
H
IS
AT
LEAST
AND
AT
MOST
THEREFORE
N
AND
N
BY
TAKING
THE
LOGARITHM
OF
BOTH
SIDES
OF
INEQUALITY
N
WE
SEE
THAT
HEIGHT
H
LOG
N
BY
REARRANGING
TERMS
AND
TAKING
THE
LOGARITHM
OF
BOTH
SIDES
OF
INEQUALITY
N
WE
SEE
THAT
LOG
N
H
SINCE
H
IS
AN
INTEGER
THESE
TWO
INEQUALITIES
IMPLY
THAT
H
LLOG
NJ
CHAPTER
PRIORITY
QUEUES
IMPLEMENTING
A
PRIORITY
QUEUE
WITH
A
HEAP
PROPOSITION
HAS
AN
IMPORTANT
CONSEQUENCE
FOR
IT
IMPLIES
THAT
IF
WE
CAN
PERFORM
UPDATE
OPERATIONS
ON
A
HEAP
IN
TIME
PROPORTIONAL
TO
ITS
HEIGHT
THEN
THOSE
OPERA
TIONS
WILL
RUN
IN
LOGARITHMIC
TIME
LET
US
THEREFORE
TURN
TO
THE
PROBLEM
OF
HOW
TO
EFFICIENTLY
PERFORM
VARIOUS
PRIORITY
QUEUE
METHODS
USING
A
HEAP
WE
WILL
USE
THE
COMPOSITION
PATTERN
FROM
SECTION
TO
STORE
KEY
VALUE
PAIRS
AS
ITEMS
IN
THE
HEAP
THE
LEN
AND
IS
EMPTY
METHODS
CAN
BE
IMPLEMENTED
BASED
ON
EXAMINATION
OF
THE
TREE
AND
THE
MIN
OPERATION
IS
EQUALLY
TRIVIAL
BECAUSE
THE
HEAP
PROPERTY
ASSURES
THAT
THE
ELEMENT
AT
THE
ROOT
OF
THE
TREE
HAS
A
MINIMUM
KEY
THE
INTERESTING
ALGORITHMS
ARE
THOSE
FOR
IMPLEMENTING
THE
ADD
AND
REMOVE
MIN
METHODS
ADDING
AN
ITEM
TO
THE
HEAP
LET
US
CONSIDER
HOW
TO
PERFORM
ADD
K
V
ON
A
PRIORITY
QUEUE
IMPLEMENTED
WITH
A
HEAP
T
WE
STORE
THE
PAIR
K
V
AS
AN
ITEM
AT
A
NEW
NODE
OF
THE
TREE
TO
MAINTAIN
THE
COMPLETE
BINARY
TREE
PROPERTY
THAT
NEW
NODE
SHOULD
BE
PLACED
AT
A
POSITION
P
JUST
BEYOND
THE
RIGHTMOST
NODE
AT
THE
BOTTOM
LEVEL
OF
THE
TREE
OR
AS
THE
LEFTMOST
POSITION
OF
A
NEW
LEVEL
IF
THE
BOTTOM
LEVEL
IS
ALREADY
FULL
OR
IF
THE
HEAP
IS
EMPTY
UP
HEAP
BUBBLING
AFTER
AN
INSERTION
AFTER
THIS
ACTION
THE
TREE
T
IS
COMPLETE
BUT
IT
MAY
VIOLATE
THE
HEAP
ORDER
PROPERTY
HENCE
UNLESS
POSITION
P
IS
THE
ROOT
OF
T
THAT
IS
THE
PRIORITY
QUEUE
WAS
EMPTY
BEFORE
THE
INSERTION
WE
COMPARE
THE
KEY
AT
POSITION
P
TO
THAT
OF
P
PARENT
WHICH
WE
DENOTE
AS
Q
IF
KEY
KP
KQ
THE
HEAP
ORDER
PROPERTY
IS
SATISFIED
AND
THE
ALGORITHM
TERMINATES
IF
INSTEAD
KP
KQ
THEN
WE
NEED
TO
RESTORE
THE
HEAP
ORDER
PROPERTY
WHICH
CAN
BE
LOCALLY
ACHIEVED
BY
SWAPPING
THE
ENTRIES
STORED
AT
POSITIONS
P
AND
Q
SEE
FIGURE
AND
D
THIS
SWAP
CAUSES
THE
NEW
ITEM
TO
MOVE
UP
ONE
LEVEL
AGAIN
THE
HEAP
ORDER
PROPERTY
MAY
BE
VIOLATED
SO
WE
REPEAT
THE
PROCESS
GOING
UP
IN
T
UNTIL
NO
VIOLATION
OF
THE
HEAP
ORDER
PROPERTY
OCCURS
SEE
FIGURE
AND
H
THE
UPWARD
MOVEMENT
OF
THE
NEWLY
INSERTED
ENTRY
BY
MEANS
OF
SWAPS
IS
CON
VENTIONALLY
CALLED
UP
HEAP
BUBBLING
A
SWAP
EITHER
RESOLVES
THE
VIOLATION
OF
THE
HEAP
ORDER
PROPERTY
OR
PROPAGATES
IT
ONE
LEVEL
UP
IN
THE
HEAP
IN
THE
WORST
CASE
UP
HEAP
BUBBLING
CAUSES
THE
NEW
ENTRY
TO
MOVE
ALL
THE
WAY
UP
TO
THE
ROOT
OF
HEAP
T
THUS
IN
THE
WORST
CASE
THE
NUMBER
OF
SWAPS
PERFORMED
IN
THE
EXECUTION
OF
METHOD
ADD
IS
EQUAL
TO
THE
HEIGHT
OF
T
BY
PROPOSITION
THAT
BOUND
IS
LLOG
NJ
HEAPS
A
B
C
D
E
F
G
H
FIGURE
INSERTION
OF
A
NEW
ENTRY
WITH
KEY
INTO
THE
HEAP
OF
FIGURE
A
INITIAL
HEAP
B
AFTER
PERFORMING
OPERATION
ADD
C
AND
D
SWAP
TO
LOCALLY
RESTORE
THE
PARTIAL
ORDER
PROPERTY
E
AND
F
ANOTHER
SWAP
G
AND
H
FINAL
SWAP
CHAPTER
PRIORITY
QUEUES
REMOVING
THE
ITEM
WITH
MINIMUM
KEY
LET
US
NOW
TURN
TO
METHOD
REMOVE
MIN
OF
THE
PRIORITY
QUEUE
ADT
WE
KNOW
THAT
AN
ENTRY
WITH
THE
SMALLEST
KEY
IS
STORED
AT
THE
ROOT
R
OF
T
EVEN
IF
THERE
IS
MORE
THAN
ONE
ENTRY
WITH
SMALLEST
KEY
HOWEVER
IN
GENERAL
WE
CANNOT
SIMPLY
DELETE
NODE
R
BECAUSE
THIS
WOULD
LEAVE
TWO
DISCONNECTED
SUBTREES
INSTEAD
WE
ENSURE
THAT
THE
SHAPE
OF
THE
HEAP
RESPECTS
THE
COMPLETE
BINARY
TREE
PROPERTY
BY
DELETING
THE
LEAF
AT
THE
LAST
POSITION
P
OF
T
DEFINED
AS
THE
RIGHTMOST
POSITION
AT
THE
BOTTOMMOST
LEVEL
OF
THE
TREE
TO
PRESERVE
THE
ITEM
FROM
THE
LAST
POSITION
P
WE
COPY
IT
TO
THE
ROOT
R
IN
PLACE
OF
THE
ITEM
WITH
MINIMUM
KEY
THAT
IS
BEING
REMOVED
BY
THE
OPERATION
FIGURE
AND
B
ILLUSTRATES
AN
EXAMPLE
OF
THESE
STEPS
WITH
MINIMAL
ITEM
C
BEING
REMOVED
FROM
THE
ROOT
AND
REPLACED
BY
ITEM
W
FROM
THE
LAST
POSITION
THE
NODE
AT
THE
LAST
POSITION
IS
REMOVED
FROM
THE
TREE
DOWN
HEAP
BUBBLING
AFTER
A
REMOVAL
WE
ARE
NOT
YET
DONE
HOWEVER
FOR
EVEN
THOUGH
T
IS
NOW
COMPLETE
IT
LIKELY
VIOLATES
THE
HEAP
ORDER
PROPERTY
IF
T
HAS
ONLY
ONE
NODE
THE
ROOT
THEN
THE
HEAP
ORDER
PROPERTY
IS
TRIVIALLY
SATISFIED
AND
THE
ALGORITHM
TERMINATES
OTHERWISE
WE
DISTIN
GUISH
TWO
CASES
WHERE
P
INITIALLY
DENOTES
THE
ROOT
OF
T
IF
P
HAS
NO
RIGHT
CHILD
LET
C
BE
THE
LEFT
CHILD
OF
P
OTHERWISE
P
HAS
BOTH
CHILDREN
LET
C
BE
A
CHILD
OF
P
WITH
MINIMAL
KEY
IF
KEY
KP
KC
THE
HEAP
ORDER
PROPERTY
IS
SATISFIED
AND
THE
ALGORITHM
TERMINATES
IF
INSTEAD
KP
KC
THEN
WE
NEED
TO
RESTORE
THE
HEAP
ORDER
PROPERTY
THIS
CAN
BE
LOCALLY
ACHIEVED
BY
SWAPPING
THE
ENTRIES
STORED
AT
P
AND
C
SEE
FIGURE
AND
D
IT
IS
WORTH
NOTING
THAT
WHEN
P
HAS
TWO
CHILDREN
WE
INTENTIONALLY
CONSIDER
THE
SMALLER
KEY
OF
THE
TWO
CHILDREN
NOT
ONLY
IS
THE
KEY
OF
C
SMALLER
THAN
THAT
OF
P
IT
IS
AT
LEAST
AS
SMALL
AS
THE
KEY
AT
C
SIBLING
THIS
ENSURES
THAT
THE
HEAP
ORDER
PROPERTY
IS
LOCALLY
RESTORED
WHEN
THAT
SMALLER
KEY
IS
PROMOTED
ABOVE
THE
KEY
THAT
HAD
BEEN
AT
P
AND
THAT
AT
C
SIBLING
HAVING
RESTORED
THE
HEAP
ORDER
PROPERTY
FOR
NODE
P
RELATIVE
TO
ITS
CHILDREN
THERE
MAY
BE
A
VIOLATION
OF
THIS
PROPERTY
AT
C
HENCE
WE
MAY
HAVE
TO
CONTINUE
SWAPPING
DOWN
T
UNTIL
NO
VIOLATION
OF
THE
HEAP
ORDER
PROPERTY
OCCURS
SEE
FIGURE
H
THIS
DOWNWARD
SWAPPING
PROCESS
IS
CALLED
DOWN
HEAP
BUBBLING
A
SWAP
EITHER
RESOLVES
THE
VIOLATION
OF
THE
HEAP
ORDER
PROPERTY
OR
PROPAGATES
IT
ONE
LEVEL
DOWN
IN
THE
HEAP
IN
THE
WORST
CASE
AN
ENTRY
MOVES
ALL
THE
WAY
DOWN
TO
THE
BOTTOM
LEVEL
SEE
FIGURE
THUS
THE
NUMBER
OF
SWAPS
PERFORMED
IN
THE
EXECUTION
OF
METHOD
REMOVE
MIN
IS
IN
THE
WORST
CASE
EQUAL
TO
THE
HEIGHT
OF
HEAP
T
THAT
IS
IT
IS
LOG
N
BY
PROPOSITION
HEAPS
C
W
W
A
Z
A
Z
K
F
Q
B
K
F
Q
B
X
J
E
H
X
J
E
H
A
B
C
D
E
F
G
H
FIGURE
REMOVAL
OF
THE
ENTRY
WITH
THE
SMALLEST
KEY
FROM
A
HEAP
A
AND
B
DELETION
OF
THE
LAST
NODE
WHOSE
ENTRY
GETS
STORED
INTO
THE
ROOT
C
AND
D
SWAP
TO
LOCALLY
RESTORE
THE
HEAP
ORDER
PROPERTY
E
AND
F
ANOTHER
SWAP
G
AND
H
FINAL
SWAP
CHAPTER
PRIORITY
QUEUES
ARRAY
BASED
REPRESENTATION
OF
A
COMPLETE
BINARY
TREE
THE
ARRAY
BASED
REPRESENTATION
OF
A
BINARY
TREE
SECTION
IS
ESPECIALLY
SUITABLE
FOR
A
COMPLETE
BINARY
TREE
T
WE
RECALL
THAT
IN
THIS
IMPLEMENTATION
THE
ELEMENTS
OF
T
ARE
STORED
IN
AN
ARRAY
BASED
LIST
A
SUCH
THAT
THE
ELEMENT
AT
POSITION
P
IN
T
IS
STORED
IN
A
WITH
INDEX
EQUAL
TO
THE
LEVEL
NUMBER
F
P
OF
P
DEFINED
AS
FOLLOWS
IF
P
IS
THE
ROOT
OF
T
THEN
F
P
IF
P
IS
THE
LEFT
CHILD
OF
POSITION
Q
THEN
F
P
F
Q
IF
P
IS
THE
RIGHT
CHILD
OF
POSITION
Q
THEN
F
P
F
Q
WITH
THIS
IMPLEMENTATION
THE
ELEMENTS
OF
T
HAVE
CONTIGUOUS
INDICES
IN
THE
RANGE
N
AND
THE
LAST
POSITION
OF
T
IS
ALWAYS
AT
INDEX
N
WHERE
N
IS
THE
NUMBER
OF
POSITIONS
OF
T
FOR
EXAMPLE
FIGURE
ILLUSTRATES
THE
ARRAY
BASED
REPRESENTATION
OF
THE
HEAP
STRUCTURE
ORIGINALLY
PORTRAYED
IN
FIGURE
C
A
Z
K
F
Q
B
X
J
E
H
W
FIGURE
AN
ARRAY
BASED
REPRESENTATION
OF
THE
HEAP
FROM
FIGURE
IMPLEMENTING
A
PRIORITY
QUEUE
USING
AN
ARRAY
BASED
HEAP
REPRESENTATION
ALLOWS
US
TO
AVOID
SOME
COMPLEXITIES
OF
A
NODE
BASED
TREE
STRUCTURE
IN
PARTICULAR
THE
ADD
AND
REMOVE
MIN
OPERATIONS
OF
A
PRIORITY
QUEUE
BOTH
DEPEND
ON
LOCATING
THE
LAST
INDEX
OF
A
HEAP
OF
SIZE
N
WITH
THE
ARRAY
BASED
REPRESENTATION
THE
LAST
POSITION
IS
AT
INDEX
N
OF
THE
ARRAY
LOCATING
THE
LAST
POSITION
OF
A
COMPLETE
BINARY
TREE
IMPLEMENTED
WITH
A
LINKED
STRUCTURE
REQUIRES
MORE
EFFORT
SEE
EXERCISE
C
IF
THE
SIZE
OF
A
PRIORITY
QUEUE
IS
NOT
KNOWN
IN
ADVANCE
USE
OF
AN
ARRAY
BASED
REPRESENTATION
DOES
INTRODUCE
THE
NEED
TO
DYNAMICALLY
RESIZE
THE
ARRAY
ON
OCCASION
AS
IS
DONE
WITH
A
PYTHON
LIST
THE
SPACE
USAGE
OF
SUCH
AN
ARRAY
BASED
REPRESENTATION
OF
A
COMPLETE
BINARY
TREE
WITH
N
NODES
IS
O
N
AND
THE
TIME
BOUNDS
OF
METHODS
FOR
ADDING
OR
REMOVING
ELEMENTS
BECOME
AMORTIZED
SEE
SECTION
PYTHON
HEAP
IMPLEMENTATION
WE
PROVIDE
A
PYTHON
IMPLEMENTATION
OF
A
HEAP
BASED
PRIORITY
QUEUE
IN
CODE
FRAG
MENTS
AND
WE
USE
AN
ARRAY
BASED
REPRESENTATION
MAINTAINING
A
PYTHON
LIST
OF
ITEM
COMPOSITES
ALTHOUGH
WE
DO
NOT
FORMALLY
USE
THE
BINARY
TREE
ADT
CODE
FRAGMENT
INCLUDES
NONPUBLIC
UTILITY
FUNCTIONS
THAT
COMPUTE
THE
LEVEL
NUMBERING
OF
A
PARENT
OR
CHILD
OF
ANOTHER
THIS
ALLOWS
US
TO
DESCRIBE
THE
REST
OF
OUR
ALGORITHMS
USING
TREE
LIKE
TERMINOLOGY
OF
PARENT
LEFT
AND
RIGHT
HOWEVER
THE
RELEVANT
VARI
ABLES
ARE
INTEGER
INDEXES
NOT
POSITION
OBJECTS
WE
USE
RECURSION
TO
IMPLEMENT
THE
REPETITION
IN
THE
UPHEAP
AND
DOWNHEAP
UTILITIES
HEAPS
CLASS
HEAPPRIORITYQUEUE
PRIORITYQUEUEBASE
BASE
CLASS
DEFINES
ITEM
A
MIN
ORIENTED
PRIORITY
QUEUE
IMPLEMENTED
WITH
A
BINARY
HEAP
NONPUBLIC
BEHAVIORS
DEF
PARENT
SELF
J
RETURN
J
DEF
LEFT
SELF
J
RETURN
J
DEF
RIGHT
SELF
J
RETURN
J
DEF
HAS
LEFT
SELF
J
RETURN
SELF
LEFT
J
LEN
SELF
DATA
INDEX
BEYOND
END
OF
LIST
DEF
HAS
RIGHT
SELF
J
RETURN
SELF
RIGHT
J
LEN
SELF
DATA
INDEX
BEYOND
END
OF
LIST
DEF
SWAP
SELF
I
J
SWAP
THE
ELEMENTS
AT
INDICES
I
AND
J
OF
ARRAY
SELF
DATA
I
SELF
DATA
J
SELF
DATA
J
SELF
DATA
I
DEF
UPHEAP
SELF
J
PARENT
SELF
PARENT
J
IF
J
AND
SELF
DATA
J
SELF
DATA
PARENT
SELF
SWAP
J
PARENT
SELF
UPHEAP
PARENT
RECUR
AT
POSITION
OF
PARENT
DEF
DOWNHEAP
SELF
J
IF
SELF
HAS
LEFT
J
LEFT
SELF
LEFT
J
SMALL
CHILD
LEFT
ALTHOUGH
RIGHT
MAY
BE
SMALLER
IF
SELF
HAS
RIGHT
J
RIGHT
SELF
RIGHT
J
IF
SELF
DATA
RIGHT
SELF
DATA
LEFT
SMALL
CHILD
RIGHT
IF
SELF
DATA
SMALL
CHILD
SELF
DATA
J
SELF
SWAP
J
SMALL
CHILD
SELF
DOWNHEAP
SMALL
CHILD
RECUR
AT
POSITION
OF
SMALL
CHILD
CODE
FRAGMENT
AN
IMPLEMENTATION
OF
A
PRIORITY
QUEUE
USING
AN
ARRAY
BASED
HEAP
CONTINUED
IN
CODE
FRAGMENT
THE
EXTENDS
THE
PRIORITYQUEUEBASE
CLASS
FROM
CODE
FRAGMENT
CHAPTER
PRIORITY
QUEUES
PUBLIC
BEHAVIORS
DEF
INIT
SELF
CREATE
A
NEW
EMPTY
PRIORITY
QUEUE
SELF
DATA
DEF
LEN
SELF
RETURN
THE
NUMBER
OF
ITEMS
IN
THE
PRIORITY
QUEUE
RETURN
LEN
SELF
DATA
DEF
ADD
SELF
KEY
VALUE
ADD
A
KEY
VALUE
PAIR
TO
THE
PRIORITY
QUEUE
SELF
DATA
APPEND
SELF
ITEM
KEY
VALUE
SELF
UPHEAP
LEN
SELF
DATA
UPHEAP
NEWLY
ADDED
POSITION
DEF
MIN
SELF
RETURN
BUT
DO
NOT
REMOVE
K
V
TUPLE
WITH
MINIMUM
KEY
RAISE
EMPTY
EXCEPTION
IF
EMPTY
IF
SELF
IS
EMPTY
RAISE
EMPTY
PRIORITY
QUEUE
IS
EMPTY
ITEM
SELF
DATA
RETURN
ITEM
KEY
ITEM
VALUE
DEF
REMOVE
MIN
SELF
REMOVE
AND
RETURN
K
V
TUPLE
WITH
MINIMUM
KEY
RAISE
EMPTY
EXCEPTION
IF
EMPTY
IF
SELF
IS
EMPTY
RAISE
EMPTY
PRIORITY
QUEUE
IS
EMPTY
SELF
SWAP
LEN
SELF
DATA
PUT
MINIMUM
ITEM
AT
THE
END
ITEM
SELF
DATA
POP
AND
REMOVE
IT
FROM
THE
LIST
SELF
DOWNHEAP
THEN
FIX
NEW
ROOT
RETURN
ITEM
KEY
ITEM
VALUE
CODE
FRAGMENT
AN
IMPLEMENTATION
OF
A
PRIORITY
QUEUE
USING
AN
ARRAY
BASED
HEAP
CONTINUED
FROM
CODE
FRAGMENT
HEAPS
ANALYSIS
OF
A
HEAP
BASED
PRIORITY
QUEUE
TABLE
SHOWS
THE
RUNNING
TIME
OF
THE
PRIORITY
QUEUE
ADT
METHODS
FOR
THE
HEAP
IMPLEMENTATION
OF
A
PRIORITY
QUEUE
ASSUMING
THAT
TWO
KEYS
CAN
BE
COMPARED
IN
O
TIME
AND
THAT
THE
HEAP
T
IS
IMPLEMENTED
WITH
AN
ARRAY
BASED
OR
LINKED
BASED
TREE
REPRESENTATION
IN
SHORT
EACH
OF
THE
PRIORITY
QUEUE
ADT
METHODS
CAN
BE
PERFORMED
IN
O
OR
IN
O
LOG
N
TIME
WHERE
N
IS
THE
NUMBER
OF
ENTRIES
AT
THE
TIME
THE
METHOD
IS
EXE
CUTED
THE
ANALYSIS
OF
THE
RUNNING
TIME
OF
THE
METHODS
IS
BASED
ON
THE
FOLLOWING
THE
HEAP
T
HAS
N
NODES
EACH
STORING
A
REFERENCE
TO
A
KEY
VALUE
PAIR
THE
HEIGHT
OF
HEAP
T
IS
O
LOG
N
SINCE
T
IS
COMPLETE
PROPOSITION
THE
MIN
OPERATION
RUNS
IN
O
BECAUSE
THE
ROOT
OF
THE
TREE
CONTAINS
SUCH
AN
ELEMENT
LOCATING
THE
LAST
POSITION
OF
A
HEAP
AS
REQUIRED
FOR
ADD
AND
REMOVE
MIN
CAN
BE
PERFORMED
IN
O
TIME
FOR
AN
ARRAY
BASED
REPRESENTATION
OR
O
LOG
N
TIME
FOR
A
LINKED
TREE
REPRESENTATION
SEE
EXERCISE
C
IN
THE
WORST
CASE
UP
HEAP
AND
DOWN
HEAP
BUBBLING
PERFORM
A
NUMBER
OF
SWAPS
EQUAL
TO
THE
HEIGHT
OF
T
AMORTIZED
IF
ARRAY
BASED
TABLE
PERFORMANCE
OF
A
PRIORITY
QUEUE
P
REALIZED
BY
MEANS
OF
A
HEAP
WE
LET
N
DENOTE
THE
NUMBER
OF
ENTRIES
IN
THE
PRIORITY
QUEUE
AT
THE
TIME
AN
OPERATION
IS
EXECUTED
THE
SPACE
REQUIREMENT
IS
O
N
THE
RUNNING
TIME
OF
OPERATIONS
MIN
AND
REMOVE
MIN
ARE
AMORTIZED
FOR
AN
ARRAY
BASED
REPRESENTATION
DUE
TO
OCCASIONAL
RE
SIZING
OF
A
DYNAMIC
ARRAY
THOSE
BOUNDS
ARE
WORST
CASE
WITH
A
LINKED
TREE
STRUCTURE
WE
CONCLUDE
THAT
THE
HEAP
DATA
STRUCTURE
IS
A
VERY
EFFICIENT
REALIZATION
OF
THE
PRIORITY
QUEUE
ADT
INDEPENDENT
OF
WHETHER
THE
HEAP
IS
IMPLEMENTED
WITH
A
LINKED
STRUCTURE
OR
AN
ARRAY
THE
HEAP
BASED
IMPLEMENTATION
ACHIEVES
FAST
RUNNING
TIMES
FOR
BOTH
INSERTION
AND
REMOVAL
UNLIKE
THE
IMPLEMENTATIONS
THAT
WERE
BASED
ON
USING
AN
UNSORTED
OR
SORTED
LIST
CHAPTER
PRIORITY
QUEUES
BOTTOM
UP
HEAP
CONSTRUCTION
IF
WE
START
WITH
AN
INITIALLY
EMPTY
HEAP
N
SUCCESSIVE
CALLS
TO
THE
ADD
OPERATION
WILL
RUN
IN
O
N
LOG
N
TIME
IN
THE
WORST
CASE
HOWEVER
IF
ALL
N
KEY
VALUE
PAIRS
TO
BE
STORED
IN
THE
HEAP
ARE
GIVEN
IN
ADVANCE
SUCH
AS
DURING
THE
FIRST
PHASE
OF
THE
HEAP
SORT
ALGORITHM
THERE
IS
AN
ALTERNATIVE
BOTTOM
UP
CONSTRUCTION
METHOD
THAT
RUNS
IN
O
N
TIME
HEAP
SORT
HOWEVER
STILL
REQUIRES
N
LOG
N
TIME
BECAUSE
OF
THE
SECOND
PHASE
IN
WHICH
WE
REPEATEDLY
REMOVE
THE
REMAINING
ELEMENT
WITH
SMALLEST
KEY
IN
THIS
SECTION
WE
DESCRIBE
THE
BOTTOM
UP
HEAP
CONSTRUCTION
AND
PROVIDE
AN
IMPLEMENTATION
THAT
CAN
BE
USED
BY
THE
CONSTRUCTOR
OF
A
HEAP
BASED
PRIORITY
QUEUE
FOR
SIMPLICITY
OF
EXPOSITION
WE
DESCRIBE
THIS
BOTTOM
UP
HEAP
CONSTRUCTION
AS
SUMING
THE
NUMBER
OF
KEYS
N
IS
AN
INTEGER
SUCH
THAT
N
THAT
IS
THE
HEAP
IS
A
COMPLETE
BINARY
TREE
WITH
EVERY
LEVEL
BEING
FULL
SO
THE
HEAP
HAS
HEIGHT
H
LOG
N
VIEWED
NONRECURSIVELY
BOTTOM
UP
HEAP
CONSTRUCTION
CONSISTS
OF
THE
FOLLOWING
H
LOG
N
STEPS
IN
THE
FIRST
STEP
SEE
FIGURE
WE
CONSTRUCT
N
ELEMENTARY
HEAPS
STORING
ONE
ENTRY
EACH
IN
THE
SECOND
STEP
SEE
FIGURE
D
WE
FORM
N
HEAPS
EACH
STORING
THREE
ENTRIES
BY
JOINING
PAIRS
OF
ELEMENTARY
HEAPS
AND
ADDING
A
NEW
ENTRY
THE
NEW
ENTRY
IS
PLACED
AT
THE
ROOT
AND
MAY
HAVE
TO
BE
SWAPPED
WITH
THE
ENTRY
STORED
AT
A
CHILD
TO
PRESERVE
THE
HEAP
ORDER
PROPERTY
IN
THE
THIRD
STEP
SEE
FIGURE
F
WE
FORM
N
HEAPS
EACH
STORING
ENTRIES
BY
JOINING
PAIRS
OF
ENTRY
HEAPS
CONSTRUCTED
IN
THE
PREVIOUS
STEP
AND
ADDING
A
NEW
ENTRY
THE
NEW
ENTRY
IS
PLACED
INITIALLY
AT
THE
ROOT
BUT
MAY
HAVE
TO
MOVE
DOWN
WITH
A
DOWN
HEAP
BUBBLING
TO
PRESERVE
THE
HEAP
ORDER
PROPERTY
I
IN
THE
GENERIC
ITH
STEP
I
H
WE
FORM
N
HEAPS
EACH
STORING
ENTRIES
BY
JOINING
PAIRS
OF
HEAPS
STORING
ENTRIES
CONSTRUCTED
IN
THE
PREVIOUS
STEP
AND
ADDING
A
NEW
ENTRY
THE
NEW
ENTRY
IS
PLACED
INITIALLY
AT
THE
ROOT
BUT
MAY
HAVE
TO
MOVE
DOWN
WITH
A
DOWN
HEAP
BUBBLING
TO
PRESERVE
THE
HEAP
ORDER
PROPERTY
H
IN
THE
LAST
STEP
SEE
FIGURE
H
WE
FORM
THE
FINAL
HEAP
STORING
ALL
THE
N
ENTRIES
BY
JOINING
TWO
HEAPS
STORING
N
ENTRIES
CONSTRUCTED
IN
THE
PREVIOUS
STEP
AND
ADDING
A
NEW
ENTRY
THE
NEW
ENTRY
IS
PLACED
INITIALLY
AT
THE
ROOT
BUT
MAY
HAVE
TO
MOVE
DOWN
WITH
A
DOWN
HEAP
BUBBLING
TO
PRESERVE
THE
HEAP
ORDER
PROPERTY
WE
ILLUSTRATE
BOTTOM
UP
HEAP
CONSTRUCTION
IN
FIGURE
FOR
H
HEAPS
A
B
C
D
E
F
G
H
FIGURE
BOTTOM
UP
CONSTRUCTION
OF
A
HEAP
WITH
ENTRIES
A
AND
B
WE
BEGIN
BY
CONSTRUCTING
ENTRY
HEAPS
ON
THE
BOTTOM
LEVEL
C
AND
D
WE
COMBINE
THESE
HEAPS
INTO
ENTRY
HEAPS
AND
THEN
E
AND
F
ENTRY
HEAPS
UNTIL
G
AND
H
WE
CREATE
THE
FINAL
HEAP
THE
PATHS
OF
THE
DOWN
HEAP
BUBBLINGS
ARE
HIGHLIGHTED
IN
D
F
AND
H
FOR
SIMPLICITY
WE
ONLY
SHOW
THE
KEY
WITHIN
EACH
NODE
INSTEAD
OF
THE
ENTIRE
ENTRY
CHAPTER
PRIORITY
QUEUES
PYTHON
IMPLEMENTATION
OF
A
BOTTOM
UP
HEAP
CONSTRUCTION
IMPLEMENTING
A
BOTTOM
UP
HEAP
CONSTRUCTION
IS
QUITE
EASY
GIVEN
THE
EXISTENCE
OF
A
DOWN
HEAP
UTILITY
FUNCTION
THE
MERGING
OF
TWO
EQUALLY
SIZED
HEAPS
THAT
ARE
SUBTREES
OF
A
COMMON
POSITION
P
AS
DESCRIBED
IN
THE
OPENING
OF
THIS
SECTION
CAN
BE
ACCOMPLISHED
SIMPLY
BY
DOWN
HEAPING
P
ENTRY
FOR
EXAMPLE
THAT
IS
WHAT
HAPPENED
TO
THE
KEY
IN
GOING
FROM
FIGURE
F
TO
G
WITH
OUR
ARRAY
BASED
REPRESENTATION
OF
A
HEAP
IF
WE
INITIALLY
STORE
ALL
N
ITEMS
IN
ARBITRARY
ORDER
WITHIN
THE
ARRAY
WE
CAN
IMPLEMENT
THE
BOTTOM
UP
HEAP
CONSTRUCTION
PROCESS
WITH
A
SINGLE
LOOP
THAT
MAKES
A
CALL
TO
DOWNHEAP
FROM
EACH
POSITION
OF
THE
TREE
AS
LONG
AS
THOSE
CALLS
ARE
ORDERED
STARTING
WITH
THE
DEEPEST
LEVEL
AND
ENDING
WITH
THE
ROOT
OF
THE
TREE
IN
FACT
THAT
LOOP
CAN
START
WITH
THE
DEEPEST
NONLEAF
SINCE
THERE
IS
NO
EFFECT
WHEN
DOWN
HEAP
IS
CALLED
AT
A
LEAF
POSITION
IN
CODE
FRAGMENT
WE
AUGMENT
THE
ORIGINAL
HEAPPRIORITYQUEUE
CLASS
FROM
SECTION
TO
PROVIDE
SUPPORT
FOR
THE
BOTTOM
UP
CONSTRUCTION
OF
AN
INITIAL
COL
LECTION
WE
INTRODUCE
A
NONPUBLIC
UTILITY
METHOD
HEAPIFY
THAT
CALLS
DOWNHEAP
ON
EACH
NONLEAF
POSITION
BEGINNING
WITH
THE
DEEPEST
AND
CONCLUDING
WITH
A
CALL
AT
THE
ROOT
OF
THE
TREE
WE
HAVE
REDESIGNED
THE
CONSTRUCTOR
OF
THE
CLASS
TO
ACCEPT
AN
OPTIONAL
PARAMETER
THAT
CAN
BE
ANY
SEQUENCE
OF
K
V
TUPLES
RATHER
THAN
INITIALIZING
SELF
DATA
TO
AN
EMPTY
LIST
WE
USE
A
LIST
COMPREHENSION
SYNTAX
SEE
SECTION
TO
CREATE
AN
INITIAL
LIST
OF
ITEM
COMPOSITES
BASED
ON
THE
GIVEN
CONTENTS
WE
DE
CLARE
AN
EMPTY
SEQUENCE
AS
THE
DEFAULT
PARAMETER
VALUE
SO
THAT
THE
DEFAULT
SYNTAX
HEAPPRIORITYQUEUE
CONTINUES
TO
RESULT
IN
AN
EMPTY
PRIORITY
QUEUE
DEF
INIT
SELF
CONTENTS
CREATE
A
NEW
PRIORITY
QUEUE
BY
DEFAULT
QUEUE
WILL
BE
EMPTY
IF
CONTENTS
IS
GIVEN
IT
SHOULD
BE
AS
AN
ITERABLE
SEQUENCE
OF
K
V
TUPLES
SPECIFYING
THE
INITIAL
CONTENTS
SELF
DATA
SELF
ITEM
K
V
FOR
K
V
IN
CONTENTS
EMPTY
BY
DEFAULT
IF
LEN
SELF
DATA
SELF
HEAPIFY
DEF
HEAPIFY
SELF
START
SELF
PARENT
LEN
SELF
START
AT
PARENT
OF
LAST
LEAF
FOR
J
IN
RANGE
START
GOING
TO
AND
INCLUDING
THE
ROOT
SELF
DOWNHEAP
J
CODE
FRAGMENT
REVISION
TO
THE
HEAPPRIORITYQUEUE
CLASS
OF
CODE
FRAG
MENTS
AND
TO
SUPPORT
A
LINEAR
TIME
CONSTRUCTION
GIVEN
AN
INITIAL
SEQUENCE
OF
ENTRIES
HEAPS
ASYMPTOTIC
ANALYSIS
OF
BOTTOM
UP
HEAP
CONSTRUCTION
BOTTOM
UP
HEAP
CONSTRUCTION
IS
ASYMPTOTICALLY
FASTER
THAN
INCREMENTALLY
INSERTING
N
KEYS
INTO
AN
INITIALLY
EMPTY
HEAP
INTUITIVELY
WE
ARE
PERFORMING
A
SINGLE
DOWN
HEAP
OPERATION
AT
EACH
POSITION
IN
THE
TREE
RATHER
THAN
A
SINGLE
UP
HEAP
OPERATION
FROM
EACH
SINCE
MORE
NODES
ARE
CLOSER
TO
THE
BOTTOM
OF
A
TREE
THAN
THE
TOP
THE
SUM
OF
THE
DOWNWARD
PATHS
IS
LINEAR
AS
SHOWN
IN
THE
FOLLOWING
PROPOSITION
PROPOSITION
BOTTOM
UP
CONSTRUCTION
OF
A
HEAP
WITH
N
ENTRIES
TAKES
O
N
TIME
ASSUMING
TWO
KEYS
CAN
BE
COMPARED
IN
O
TIME
JUSTIFICATION
THE
PRIMARY
COST
OF
THE
CONSTRUCTION
IS
DUE
TO
THE
DOWN
HEAP
STEPS
PERFORMED
AT
EACH
NONLEAF
POSITION
LET
V
DENOTE
THE
PATH
OF
T
FROM
NONLEAF
NODE
V
TO
ITS
INORDER
SUCCESSOR
LEAF
THAT
IS
THE
PATH
THAT
STARTS
AT
V
GOES
TO
THE
RIGHT
CHILD
OF
V
AND
THEN
GOES
DOWN
LEFTWARD
UNTIL
IT
REACHES
A
LEAF
ALTHOUGH
V
IS
NOT
NECESSARILY
THE
PATH
FOLLOWED
BY
THE
DOWN
HEAP
BUBBLING
STEP
FROM
V
THE
LENGTH
V
ITS
NUMBER
OF
EDGES
IS
PROPORTIONAL
TO
THE
HEIGHT
OF
THE
SUBTREE
ROOTED
AT
V
AND
THUS
A
BOUND
ON
THE
COMPLEXITY
OF
THE
DOWN
HEAP
OPERATION
AT
V
WE
CAN
BOUND
THE
TOTAL
RUNNING
TIME
OF
THE
BOTTOM
UP
HEAP
CONSTRUCTION
ALGORITHM
BASED
ON
THE
SUM
OF
THE
SIZES
OF
PATHS
V
V
FOR
INTUITION
FIGURE
ILLUSTRATES
THE
JUSTIFICATION
VISUALLY
MARKING
EACH
EDGE
WITH
THE
LABEL
OF
THE
NONLEAF
NODE
V
WHOSE
PATH
V
CONTAINS
THAT
EDGE
WE
CLAIM
THAT
THE
PATHS
V
FOR
ALL
NONLEAF
V
ARE
EDGE
DISJOINT
AND
THUS
THE
SUM
OF
THE
PATH
LENGTHS
IS
BOUNDED
BY
THE
NUMBER
OF
TOTAL
EDGES
IN
THE
TREE
HENCE
O
N
TO
SHOW
THIS
WE
CONSIDER
WHAT
WE
TERM
RIGHT
LEANING
AND
LEFT
LEANING
EDGES
I
E
THOSE
GOING
FROM
A
PARENT
TO
A
RIGHT
RESPECTIVELY
LEFT
CHILD
A
PARTICULAR
RIGHT
LEANING
EDGE
E
CAN
ONLY
BE
PART
OF
THE
PATH
V
FOR
NODE
V
THAT
IS
THE
PARENT
IN
THE
RELATIONSHIP
REPRESENTED
BY
E
LEFT
LEANING
EDGES
CAN
BE
PARTITIONED
BY
CONSIDERING
THE
LEAF
THAT
IS
REACHED
IF
CONTINUING
DOWN
LEFTWARD
UNTIL
REACHING
A
LEAF
EACH
NONLEAF
NODE
ONLY
USES
LEFT
LEANING
EDGES
IN
THE
GROUP
LEADING
TO
THAT
NONLEAF
NODE
INORDER
SUCCESSOR
SINCE
EACH
NONLEAF
NODE
MUST
HAVE
A
DIFFERENT
INORDER
SUCCESSOR
NO
TWO
SUCH
PATHS
CAN
CONTAIN
THE
SAME
LEFT
LEANING
EDGE
WE
CONCLUDE
THAT
THE
BOTTOM
UP
CONSTRUCTION
OF
HEAP
T
TAKES
O
N
TIME
FIGURE
VISUAL
JUSTIFICATION
OF
THE
LINEAR
RUNNING
TIME
OF
BOTTOM
UP
HEAP
CON
STRUCTION
EACH
EDGE
E
IS
LABELED
WITH
A
NODE
V
FOR
WHICH
V
CONTAINS
E
IF
ANY
CHAPTER
PRIORITY
QUEUES
PYTHON
HEAPQ
MODULE
PYTHON
STANDARD
DISTRIBUTION
INCLUDES
A
HEAPQ
MODULE
THAT
PROVIDES
SUPPORT
FOR
HEAP
BASED
PRIORITY
QUEUES
THAT
MODULE
DOES
NOT
PROVIDE
ANY
PRIORITY
QUEUE
CLASS
INSTEAD
IT
PROVIDES
FUNCTIONS
THAT
ALLOW
A
STANDARD
PYTHON
LIST
TO
BE
MANAGED
AS
A
HEAP
ITS
MODEL
IS
ESSENTIALLY
THE
SAME
AS
OUR
OWN
WITH
N
ELEMENTS
STORED
IN
LIST
CELLS
L
THROUGH
L
N
BASED
ON
THE
LEVEL
NUMBERING
INDICES
WITH
THE
SMALL
EST
ELEMENT
AT
THE
ROOT
IN
L
WE
NOTE
THAT
HEAPQ
DOES
NOT
SEPARATELY
MANAGE
ASSOCIATED
VALUES
ELEMENTS
SERVE
AS
THEIR
OWN
KEY
THE
HEAPQ
MODULE
SUPPORTS
THE
FOLLOWING
FUNCTIONS
ALL
OF
WHICH
PRESUME
THAT
EXISTING
LIST
L
SATISFIES
THE
HEAP
ORDER
PROPERTY
PRIOR
TO
THE
CALL
HEAPPUSH
L
E
PUSH
ELEMENT
E
ONTO
LIST
L
AND
RESTORE
THE
HEAP
ORDER
PROPERTY
THE
FUNCTION
EXECUTES
IN
O
LOG
N
TIME
HEAPPOP
L
POP
AND
RETURN
THE
ELEMENT
WITH
SMALLEST
VALUE
FROM
LIST
L
AND
REESTABLISH
THE
HEAP
ORDER
PROPERTY
THE
OPERATION
EXECUTES
IN
O
LOG
N
TIME
HEAPPUSHPOP
L
E
PUSH
ELEMENT
E
ON
LIST
L
AND
THEN
POP
AND
RETURN
THE
SMALLEST
ITEM
THE
TIME
IS
O
LOG
N
BUT
IT
IS
SLIGHTLY
MORE
EFFICIENT
THAN
SEPARATE
CALLS
TO
PUSH
AND
POP
BECAUSE
THE
SIZE
OF
THE
LIST
NEVER
CHANGES
IF
THE
NEWLY
PUSHED
EL
EMENT
BECOMES
THE
SMALLEST
IT
IS
IMMEDIATELY
RETURNED
OTHERWISE
THE
NEW
ELEMENT
TAKES
THE
PLACE
OF
THE
POPPED
ELEMENT
AT
THE
ROOT
AND
A
DOWN
HEAP
IS
PERFORMED
HEAPREPLACE
L
E
SIMILAR
TO
HEAPPUSHPOP
BUT
EQUIVALENT
TO
THE
POP
BE
ING
PERFORMED
BEFORE
THE
PUSH
IN
OTHER
WORDS
THE
NEW
ELEMENT
CANNOT
BE
RETURNED
AS
THE
SMALLEST
AGAIN
THE
TIME
IS
O
LOG
N
BUT
IT
IS
MORE
EFFICIENT
THAT
TWO
SEPARATE
OPERATIONS
THE
MODULE
SUPPORTS
ADDITIONAL
FUNCTIONS
THAT
OPERATE
ON
SEQUENCES
THAT
DO
NOT
PREVIOUSLY
SATISFY
THE
HEAP
ORDER
PROPERTY
HEAPIFY
L
TRANSFORM
UNORDERED
LIST
TO
SATISFY
THE
HEAP
ORDER
PROP
ERTY
THIS
EXECUTES
IN
O
N
TIME
BY
USING
THE
BOTTOM
UP
CONSTRUCTION
ALGORITHM
NLARGEST
K
ITERABLE
PRODUCE
A
LIST
OF
THE
K
LARGEST
VALUES
FROM
A
GIVEN
ITERABLE
THIS
CAN
BE
IMPLEMENTED
TO
RUN
IN
O
N
K
LOG
N
TIME
WHERE
WE
USE
N
TO
DENOTE
THE
LENGTH
OF
THE
ITERABLE
SEE
EXERCISE
C
NSMALLEST
K
ITERABLE
PRODUCE
A
LIST
OF
THE
K
SMALLEST
VALUES
FROM
A
GIVEN
IT
ERABLE
THIS
CAN
BE
IMPLEMENTED
TO
RUN
IN
O
N
K
LOG
N
TIME
USING
SIMILAR
TECHNIQUE
AS
WITH
NLARGEST
SORTING
WITH
A
PRIORITY
QUEUE
SORTING
WITH
A
PRIORITY
QUEUE
IN
DEFINING
THE
PRIORITY
QUEUE
ADT
WE
NOTED
THAT
ANY
TYPE
OF
OBJECT
CAN
BE
USED
AS
A
KEY
BUT
THAT
ANY
PAIR
OF
KEYS
MUST
BE
COMPARABLE
TO
EACH
OTHER
AND
THAT
THE
SET
OF
KEYS
BE
NATURALLY
ORDERED
IN
PYTHON
IT
IS
COMMON
TO
RELY
ON
THE
OPERATOR
TO
DEFINE
SUCH
AN
ORDER
IN
WHICH
CASE
THE
FOLLOWING
PROPERTIES
MUST
BE
SATISFIED
IRREFLEXIVE
PROPERTY
K
K
TRANSITIVE
PROPERTY
IF
AND
THEN
FORMALLY
SUCH
A
RELATIONSHIP
DEFINES
WHAT
IS
KNOWN
AS
A
STRICT
WEAK
ORDER
AS
IT
ALLOWS
FOR
KEYS
TO
BE
CONSIDERED
EQUAL
TO
EACH
OTHER
BUT
THE
BROADER
EQUIVALENCE
CLASSES
ARE
TOTALLY
ORDERED
AS
THEY
CAN
BE
UNIQUELY
ARRANGED
FROM
SMALLEST
TO
LARGEST
DUE
TO
THE
TRANSITIVE
PROPERTY
AS
OUR
FIRST
APPLICATION
OF
PRIORITY
QUEUES
WE
DEMONSTRATE
HOW
THEY
CAN
BE
USED
TO
SORT
A
COLLECTION
C
OF
COMPARABLE
ELEMENTS
THAT
IS
WE
CAN
PRODUCE
A
SEQUENCE
OF
ELEMENTS
OF
C
IN
INCREASING
ORDER
OR
AT
LEAST
IN
NONDECREASING
ORDER
IF
THERE
ARE
DUPLICATES
THE
ALGORITHM
IS
QUITE
SIMPLE
WE
INSERT
ALL
ELEMENTS
INTO
AN
INITIALLY
EMPTY
PRIORITY
QUEUE
AND
THEN
WE
REPEATEDLY
CALL
REMOVE
MIN
TO
RETRIEVE
THE
ELEMENTS
IN
NONDECREASING
ORDER
AN
IMPLEMENTATION
OF
THIS
ALGORITHM
IS
GIVEN
IN
CODE
FRAGMENT
ASSUMING
THAT
C
IS
A
POSITIONAL
LIST
SEE
CHAPTER
WE
USE
AN
ORIGINAL
ELEMENT
OF
THE
COLLECTION
AS
BOTH
A
KEY
AND
VALUE
WHEN
CALLING
P
ADD
ELEMENT
ELEMENT
DEF
PQ
SORT
C
SORT
A
COLLECTION
OF
ELEMENTS
STORED
IN
A
POSITIONAL
LIST
N
LEN
C
P
PRIORITYQUEUE
FOR
J
IN
RANGE
N
ELEMENT
C
DELETE
C
FIRST
P
ADD
ELEMENT
ELEMENT
USE
ELEMENT
AS
KEY
AND
VALUE
FOR
J
IN
RANGE
N
K
V
P
REMOVE
MIN
C
ADD
LAST
V
STORE
SMALLEST
REMAINING
ELEMENT
IN
C
CODE
FRAGMENT
AN
IMPLEMENTATION
OF
THE
PQ
SORT
FUNCTION
ASSUMING
AN
AP
PROPRIATE
IMPLEMENTATION
OF
A
PRIORITYQUEUE
CLASS
NOTE
THAT
EACH
ELEMENT
OF
THE
INPUT
LIST
C
SERVES
AS
ITS
OWN
KEY
IN
THE
PRIORITY
QUEUE
P
WITH
A
MINOR
MODIFICATION
TO
THIS
CODE
WE
CAN
PROVIDE
MORE
GENERAL
SUP
PORT
SORTING
ELEMENTS
ACCORDING
TO
AN
ORDERING
OTHER
THAN
THE
DEFAULT
FOR
EXAM
PLE
WHEN
WORKING
WITH
STRINGS
THE
OPERATOR
DEFINES
A
LEXICOGRAPHIC
ORDERING
WHICH
IS
AN
EXTENSION
OF
THE
ALPHABETIC
ORDERING
TO
UNICODE
FOR
EXAMPLE
WE
HAVE
THAT
BECAUSE
OF
THE
ORDER
OF
THE
FIRST
CHARACTER
OF
EACH
STRING
JUST
AS
CHAPTER
PRIORITY
QUEUES
APPLE
BANANA
SUPPOSE
THAT
WE
HAVE
AN
APPLICATION
IN
WHICH
WE
HAVE
A
LIST
OF
STRINGS
THAT
ARE
ALL
KNOWN
TO
REPRESENT
INTEGRAL
VALUES
E
G
AND
OUR
GOAL
IS
TO
SORT
THE
STRINGS
ACCORDING
TO
THOSE
INTEGRAL
VALUES
IN
PYTHON
THE
STANDARD
APPROACH
FOR
CUSTOMIZING
THE
ORDER
FOR
A
SORTING
ALGO
RITHM
IS
TO
PROVIDE
AS
AN
OPTIONAL
PARAMETER
TO
THE
SORTING
FUNCTION
AN
OBJECT
THAT
IS
ITSELF
A
ONE
PARAMETER
FUNCTION
THAT
COMPUTES
A
KEY
FOR
A
GIVEN
ELEMENT
SEE
SECTIONS
AND
FOR
A
DISCUSSION
OF
THIS
APPROACH
IN
THE
CONTEXT
OF
THE
BUILT
IN
MAX
FUNCTION
FOR
EXAMPLE
WITH
A
LIST
OF
NUMERIC
STRINGS
WE
MIGHT
WISH
TO
USE
THE
VALUE
OF
INT
AS
A
KEY
FOR
A
STRING
OF
THE
LIST
IN
THIS
CASE
THE
CON
STRUCTOR
FOR
THE
INT
CLASS
CAN
SERVE
AS
THE
ONE
PARAMETER
FUNCTION
FOR
COMPUTING
A
KEY
IN
THAT
WAY
THE
STRING
WILL
BE
ORDERED
BEFORE
STRING
BECAUSE
ITS
KEY
INT
INT
WE
LEAVE
IT
AS
AN
EXERCISE
TO
SUPPORT
SUCH
AN
OPTIONAL
KEY
PARAMETER
FOR
THE
PQ
SORT
FUNCTION
SEE
EXERCISE
C
SELECTION
SORT
AND
INSERTION
SORT
OUR
PQ
SORT
FUNCTION
WORKS
CORRECTLY
GIVEN
ANY
VALID
IMPLEMENTATION
OF
THE
PRI
ORITY
QUEUE
CLASS
HOWEVER
THE
RUNNING
TIME
OF
THE
SORTING
ALGORITHM
DEPENDS
ON
THE
RUNNING
TIMES
OF
THE
OPERATIONS
ADD
AND
REMOVE
MIN
FOR
THE
GIVEN
PRIORITY
QUEUE
CLASS
WE
NEXT
DISCUSS
A
CHOICE
OF
PRIORITY
QUEUE
IMPLEMENTATIONS
THAT
IN
EFFECT
CAUSE
THE
PQ
SORT
COMPUTATION
TO
BEHAVE
AS
ONE
OF
SEVERAL
CLASSIC
SORTING
ALGORITHMS
SELECTION
SORT
IF
WE
IMPLEMENT
P
WITH
AN
UNSORTED
LIST
THEN
PHASE
OF
PQ
SORT
TAKES
O
N
TIME
FOR
WE
CAN
ADD
EACH
ELEMENT
IN
O
TIME
IN
PHASE
THE
RUNNING
TIME
OF
EACH
REMOVE
MIN
OPERATION
IS
PROPORTIONAL
TO
THE
SIZE
OF
P
THUS
THE
BOTTLENECK
COM
PUTATION
IS
THE
REPEATED
SELECTION
OF
THE
MINIMUM
ELEMENT
IN
PHASE
FOR
THIS
REASON
THIS
ALGORITHM
IS
BETTER
KNOWN
AS
SELECTION
SORT
SEE
FIGURE
AS
NOTED
ABOVE
THE
BOTTLENECK
IS
IN
PHASE
WHERE
WE
REPEATEDLY
REMOVE
AN
ENTRY
WITH
SMALLEST
KEY
FROM
THE
PRIORITY
QUEUE
P
THE
SIZE
OF
P
STARTS
AT
N
AND
INCREMENTALLY
DECREASES
WITH
EACH
REMOVE
MIN
UNTIL
IT
BECOMES
THUS
THE
FIRST
OPERATION
TAKES
TIME
O
N
THE
SECOND
ONE
TAKES
TIME
O
N
AND
SO
ON
THERE
FORE
THE
TOTAL
TIME
NEEDED
FOR
THE
SECOND
PHASE
IS
O
N
N
O
N
I
BY
PROPOSITION
WE
HAVE
N
I
N
N
THUS
PHASE
TAKES
TIME
O
AS
DOES
THE
ENTIRE
SELECTION
SORT
ALGORITHM
SORTING
WITH
A
PRIORITY
QUEUE
COLLECTION
C
PRIORITY
QUEUE
P
A
B
FIGURE
EXECUTION
OF
SELECTION
SORT
ON
COLLECTION
C
INSERTION
SORT
IF
WE
IMPLEMENT
THE
PRIORITY
QUEUE
P
USING
A
SORTED
LIST
THEN
WE
IMPROVE
THE
RUN
NING
TIME
OF
PHASE
TO
O
N
FOR
EACH
REMOVE
MIN
OPERATION
ON
P
NOW
TAKES
O
TIME
UNFORTUNATELY
PHASE
BECOMES
THE
BOTTLENECK
FOR
THE
RUNNING
TIME
SINCE
IN
THE
WORST
CASE
EACH
ADD
OPERATION
TAKES
TIME
PROPORTIONAL
TO
THE
CURRENT
SIZE
OF
P
THIS
SORTING
ALGORITHM
IS
BETTER
KNOWN
AS
INSERTION
SORT
SEE
FIGURE
IN
FACT
OUR
IMPLEMENTATION
FOR
ADDING
AN
ELEMENT
TO
A
PRIORITY
QUEUE
IS
ALMOST
IDENTICAL
TO
A
STEP
OF
INSERTION
SORT
AS
PRESENTED
IN
SECTION
THE
WORST
CASE
RUNNING
TIME
OF
PHASE
OF
INSERTION
SORT
IS
O
N
N
O
N
I
AGAIN
BY
PROPOSITION
THIS
IMPLIES
A
WORST
CASE
O
TIME
FOR
PHASE
AND
THUS
THE
ENTIRE
INSERTION
SORT
ALGORITHM
HOWEVER
UNLIKE
SELECTION
SORT
INSERTION
SORT
HAS
A
BEST
CASE
RUNNING
TIME
OF
O
N
COLLECTION
C
PRIORITY
QUEUE
P
INPUT
PHASE
A
B
C
D
E
F
PHASE
A
B
FIGURE
EXECUTION
OF
INSERTION
SORT
ON
COLLECTION
C
CHAPTER
PRIORITY
QUEUES
HEAP
SORT
AS
WE
HAVE
PREVIOUSLY
OBSERVED
REALIZING
A
PRIORITY
QUEUE
WITH
A
HEAP
HAS
THE
ADVANTAGE
THAT
ALL
THE
METHODS
IN
THE
PRIORITY
QUEUE
ADT
RUN
IN
LOGARITHMIC
TIME
OR
BETTER
HENCE
THIS
REALIZATION
IS
SUITABLE
FOR
APPLICATIONS
WHERE
FAST
RUNNING
TIMES
ARE
SOUGHT
FOR
ALL
THE
PRIORITY
QUEUE
METHODS
THEREFORE
LET
US
AGAIN
CONSIDER
THE
PQ
SORT
SCHEME
THIS
TIME
USING
A
HEAP
BASED
IMPLEMENTATION
OF
THE
PRIORITY
QUEUE
DURING
PHASE
THE
ITH
ADD
OPERATION
TAKES
O
LOG
I
TIME
SINCE
THE
HEAP
HAS
I
ENTRIES
AFTER
THE
OPERATION
IS
PERFORMED
THEREFORE
THIS
PHASE
TAKES
O
N
LOG
N
TIME
IT
COULD
BE
IMPROVED
TO
O
N
WITH
THE
BOTTOM
UP
HEAP
CONSTRUCTION
DESCRIBED
IN
SECTION
DURING
THE
SECOND
PHASE
OF
PQ
SORT
THE
JTH
REMOVE
MIN
OPERATION
RUNS
IN
O
LOG
N
J
SINCE
THE
HEAP
HAS
N
J
ENTRIES
AT
THE
TIME
THE
OPERATION
IS
PERFORMED
SUMMING
OVER
ALL
J
THIS
PHASE
TAKES
O
N
LOG
N
TIME
SO
THE
ENTIRE
PRIORITY
QUEUE
SORTING
ALGORITHM
RUNS
IN
O
N
LOG
N
TIME
WHEN
WE
USE
A
HEAP
TO
IM
PLEMENT
THE
PRIORITY
QUEUE
THIS
SORTING
ALGORITHM
IS
BETTER
KNOWN
AS
HEAP
SORT
AND
ITS
PERFORMANCE
IS
SUMMARIZED
IN
THE
FOLLOWING
PROPOSITION
PROPOSITION
THE
HEAP
SORT
ALGORITHM
SORTS
A
COLLECTION
C
OF
N
ELEMENTS
IN
O
N
LOG
N
TIME
ASSUMING
TWO
ELEMENTS
OF
C
CAN
BE
COMPARED
IN
O
TIME
LET
US
STRESS
THAT
THE
O
N
LOG
N
RUNNING
TIME
OF
HEAP
SORT
IS
CONSIDERABLY
BETTER
THAN
THE
O
RUNNING
TIME
OF
SELECTION
SORT
AND
INSERTION
SORT
SECTION
IMPLEMENTING
HEAP
SORT
IN
PLACE
IF
THE
COLLECTION
C
TO
BE
SORTED
IS
IMPLEMENTED
BY
MEANS
OF
AN
ARRAY
BASED
SE
QUENCE
MOST
NOTABLY
AS
A
PYTHON
LIST
WE
CAN
SPEED
UP
HEAP
SORT
AND
REDUCE
ITS
SPACE
REQUIREMENT
BY
A
CONSTANT
FACTOR
USING
A
PORTION
OF
THE
LIST
ITSELF
TO
STORE
THE
HEAP
THUS
AVOIDING
THE
USE
OF
AN
AUXILIARY
HEAP
DATA
STRUCTURE
THIS
IS
ACCOMPLISHED
BY
MODIFYING
THE
ALGORITHM
AS
FOLLOWS
WE
REDEFINE
THE
HEAP
OPERATIONS
TO
BE
A
MAXIMUM
ORIENTED
HEAP
WITH
EACH
POSITION
KEY
BEING
AT
LEAST
AS
LARGE
AS
ITS
CHILDREN
THIS
CAN
BE
DONE
BY
RECODING
THE
ALGORITHM
OR
BY
ADJUSTING
THE
NOTION
OF
KEYS
TO
BE
NEGATIVELY
ORIENTED
AT
ANY
TIME
DURING
THE
EXECUTION
OF
THE
ALGORITHM
WE
USE
THE
LEFT
PORTION
OF
C
UP
TO
A
CERTAIN
INDEX
I
TO
STORE
THE
ENTRIES
OF
THE
HEAP
AND
THE
RIGHT
PORTION
OF
C
FROM
INDEX
I
TO
N
TO
STORE
THE
ELEMENTS
OF
THE
SEQUENCE
THUS
THE
FIRST
I
ELEMENTS
OF
C
AT
INDICES
I
PROVIDE
THE
ARRAY
LIST
REPRESENTATION
OF
THE
HEAP
IN
THE
FIRST
PHASE
OF
THE
ALGORITHM
WE
START
WITH
AN
EMPTY
HEAP
AND
MOVE
THE
BOUNDARY
BETWEEN
THE
HEAP
AND
THE
SEQUENCE
FROM
LEFT
TO
RIGHT
ONE
STEP
AT
A
TIME
IN
STEP
I
FOR
I
N
WE
EXPAND
THE
HEAP
BY
ADDING
THE
ELEMENT
AT
INDEX
I
SORTING
WITH
A
PRIORITY
QUEUE
IN
THE
SECOND
PHASE
OF
THE
ALGORITHM
WE
START
WITH
AN
EMPTY
SEQUENCE
AND
MOVE
THE
BOUNDARY
BETWEEN
THE
HEAP
AND
THE
SEQUENCE
FROM
RIGHT
TO
LEFT
ONE
STEP
AT
A
TIME
AT
STEP
I
FOR
I
N
WE
REMOVE
A
MAXIMUM
ELEMENT
FROM
THE
HEAP
AND
STORE
IT
AT
INDEX
N
I
IN
GENERAL
WE
SAY
THAT
A
SORTING
ALGORITHM
IS
IN
PLACE
IF
IT
USES
ONLY
A
SMALL
AMOUNT
OF
MEMORY
IN
ADDITION
TO
THE
SEQUENCE
STORING
THE
OBJECTS
TO
BE
SORTED
THE
VARIATION
OF
HEAP
SORT
ABOVE
QUALIFIES
AS
IN
PLACE
INSTEAD
OF
TRANSFERRING
ELEMENTS
OUT
OF
THE
SEQUENCE
AND
THEN
BACK
IN
WE
SIMPLY
REARRANGE
THEM
WE
ILLUSTRATE
THE
SECOND
PHASE
OF
IN
PLACE
HEAP
SORT
IN
FIGURE
A
B
C
D
E
F
FIGURE
PHASE
OF
AN
IN
PLACE
HEAP
SORT
THE
HEAP
PORTION
OF
EACH
SEQUENCE
REPRESENTATION
IS
HIGHLIGHTED
THE
BINARY
TREE
THAT
EACH
SEQUENCE
IMPLICITLY
REPRE
SENTS
IS
DIAGRAMMED
WITH
THE
MOST
RECENT
PATH
OF
DOWN
HEAP
BUBBLING
HIGHLIGHTED
CHAPTER
PRIORITY
QUEUES
ADAPTABLE
PRIORITY
QUEUES
THE
METHODS
OF
THE
PRIORITY
QUEUE
ADT
GIVEN
IN
SECTION
ARE
SUFFICIENT
FOR
MOST
BASIC
APPLICATIONS
OF
PRIORITY
QUEUES
SUCH
AS
SORTING
HOWEVER
THERE
ARE
SITUATIONS
IN
WHICH
ADDITIONAL
METHODS
WOULD
BE
USEFUL
AS
SHOWN
BY
THE
SCENARIOS
BELOW
INVOLVING
THE
STANDBY
AIRLINE
PASSENGER
APPLICATION
A
STANDBY
PASSENGER
WITH
A
PESSIMISTIC
ATTITUDE
MAY
BECOME
TIRED
OF
WAITING
AND
DECIDE
TO
LEAVE
AHEAD
OF
THE
BOARDING
TIME
REQUESTING
TO
BE
REMOVED
FROM
THE
WAITING
LIST
THUS
WE
WOULD
LIKE
TO
REMOVE
FROM
THE
PRIORITY
QUEUE
THE
ENTRY
ASSOCIATED
WITH
THIS
PASSENGER
OPERATION
REMOVE
MIN
DOES
NOT
SUFFICE
SINCE
THE
PASSENGER
LEAVING
DOES
NOT
NECESSARILY
HAVE
FIRST
PRIORITY
INSTEAD
WE
WANT
A
NEW
OPERATION
REMOVE
THAT
REMOVES
AN
ARBITRARY
ENTRY
ANOTHER
STANDBY
PASSENGER
FINDS
HER
GOLD
FREQUENT
FLYER
CARD
AND
SHOWS
IT
TO
THE
AGENT
THUS
HER
PRIORITY
HAS
TO
BE
MODIFIED
ACCORDINGLY
TO
ACHIEVE
THIS
CHANGE
OF
PRIORITY
WE
WOULD
LIKE
TO
HAVE
A
NEW
OPERATION
UPDATE
ALLOWING
US
TO
REPLACE
THE
KEY
OF
AN
EXISTING
ENTRY
WITH
A
NEW
KEY
WE
WILL
SEE
ANOTHER
APPLICATION
OF
ADAPTABLE
PRIORITY
QUEUES
WHEN
IMPLEMENTING
CERTAIN
GRAPH
ALGORITHMS
IN
SECTIONS
AND
IN
THIS
SECTION
WE
DEVELOP
AN
ADAPTABLE
PRIORITY
QUEUE
ADT
AND
DEMONSTRATE
HOW
TO
IMPLEMENT
THIS
ABSTRACTION
AS
AN
EXTENSION
TO
OUR
HEAP
BASED
PRIORITY
QUEUE
LOCATORS
IN
ORDER
TO
IMPLEMENT
METHODS
UPDATE
AND
REMOVE
EFFICIENTLY
WE
NEED
A
MECHA
NISM
FOR
FINDING
A
USER
ELEMENT
WITHIN
A
PRIORITY
QUEUE
THAT
AVOIDS
PERFORMING
A
LINEAR
SEARCH
THROUGH
THE
ENTIRE
COLLECTION
TO
SUPPORT
OUR
GOAL
WHEN
A
NEW
ELE
MENT
IS
ADDED
TO
THE
PRIORITY
QUEUE
WE
RETURN
A
SPECIAL
OBJECT
KNOWN
AS
A
LOCATOR
TO
THE
CALLER
WE
THEN
REQUIRE
THE
USER
TO
PROVIDE
AN
APPROPRIATE
LOCATOR
AS
A
PARAMETER
WHEN
INVOKING
THE
UPDATE
OR
REMOVE
METHOD
AS
FOLLOWS
FOR
A
PRIORITY
QUEUE
P
P
UPDATE
LOC
K
V
REPLACE
KEY
AND
VALUE
FOR
THE
ITEM
IDENTIFIED
BY
LOCATOR
LOC
P
REMOVE
LOC
REMOVE
THE
ITEM
IDENTIFIED
BY
LOCATOR
LOC
FROM
THE
PRIORITY
QUEUE
AND
RETURN
ITS
KEY
VALUE
PAIR
THE
LOCATOR
ABSTRACTION
IS
SOMEWHAT
AKIN
TO
THE
POSITION
ABSTRACTION
USED
IN
OUR
POSITIONAL
LIST
ADT
FROM
SECTION
AND
OUR
TREE
ADT
FROM
CHAPTER
HOWEVER
WE
DIFFERENTIATE
BETWEEN
A
LOCATOR
AND
A
POSITION
BECAUSE
A
LOCATOR
FOR
A
PRIORITY
QUEUE
DOES
NOT
REPRESENT
A
TANGIBLE
PLACEMENT
OF
AN
ELEMENT
WITHIN
THE
STRUCTURE
IN
OUR
PRIORITY
QUEUE
AN
ELEMENT
MAY
BE
RELOCATED
WITHIN
OUR
DATA
STRUCTURE
DURING
AN
OPERATION
THAT
DOES
NOT
SEEM
DIRECTLY
RELEVANT
TO
THAT
ELEMENT
A
LOCATOR
FOR
AN
ITEM
WILL
REMAIN
VALID
AS
LONG
AS
THAT
ITEM
REMAINS
SOMEWHERE
IN
THE
QUEUE
ADAPTABLE
PRIORITY
QUEUES
IMPLEMENTING
AN
ADAPTABLE
PRIORITY
QUEUE
IN
THIS
SECTION
WE
PROVIDE
A
PYTHON
IMPLEMENTATION
OF
AN
ADAPTABLE
PRIORITY
QUEUE
AS
AN
EXTENSION
OF
OUR
HEAPPRIORITYQUEUE
CLASS
FROM
SECTION
TO
IMPLEMENT
A
LOCATOR
CLASS
WE
WILL
EXTEND
THE
EXISTING
ITEM
COMPOSITE
TO
ADD
AN
ADDITIONAL
FIELD
DESIGNATING
THE
CURRENT
INDEX
OF
THE
ELEMENT
WITHIN
THE
ARRAY
BASED
REPRESENTATION
OF
OUR
HEAP
AS
SHOWN
IN
FIGURE
TOKEN
C
A
Z
K
F
Q
B
X
FIGURE
REPRESENTING
A
HEAP
USING
A
SEQUENCE
OF
LOCATORS
THE
THIRD
ELEMENT
OF
EACH
LOCATOR
INSTANCE
CORRESPONDS
TO
THE
INDEX
OF
THE
ITEM
WITHIN
THE
ARRAY
IDEN
TIFIER
TOKEN
IS
PRESUMED
TO
BE
A
LOCATOR
REFERENCE
IN
THE
USER
SCOPE
THE
LIST
IS
A
SEQUENCE
OF
REFERENCES
TO
LOCATOR
INSTANCES
EACH
OF
WHICH
STORES
A
KEY
VALUE
AND
THE
CURRENT
INDEX
OF
THE
ITEM
WITHIN
THE
LIST
THE
USER
WILL
BE
GIVEN
A
REFERENCE
TO
THE
LOCATOR
INSTANCE
FOR
EACH
INSERTED
ELEMENT
AS
PORTRAYED
BY
THE
TOKEN
IDENTIFIER
IN
FIGURE
WHEN
WE
PERFORM
PRIORITY
QUEUE
OPERATIONS
ON
OUR
HEAP
AND
ITEMS
ARE
RELO
CATED
WITHIN
OUR
STRUCTURE
WE
REPOSITION
THE
LOCATOR
INSTANCES
WITHIN
THE
LIST
AND
WE
UPDATE
THE
THIRD
FIELD
OF
EACH
LOCATOR
TO
REFLECT
ITS
NEW
INDEX
WITHIN
THE
LIST
AS
AN
EX
AMPLE
FIGURE
SHOWS
THE
STATE
OF
THE
ABOVE
HEAP
AFTER
A
CALL
TO
REMOVE
MIN
THE
HEAP
OPERATION
CAUSED
THE
MINIMUM
ENTRY
C
TO
BE
REMOVED
AND
THE
EN
TRY
X
TO
BE
TEMPORARILY
MOVED
FROM
THE
LAST
POSITION
TO
THE
ROOT
FOLLOWED
BY
A
DOWN
HEAP
BUBBLE
PHASE
DURING
THE
DOWN
HEAP
ELEMENT
X
WAS
SWAPPED
TOKEN
A
F
Z
K
X
Q
B
FIGURE
THE
RESULT
OF
A
CALL
TO
REMOVE
MIN
ON
THE
HEAP
ORIGINALLY
PORTRAYED
IN
FIGURE
IDENTIFIER
TOKEN
CONTINUES
TO
REFERENCE
THE
SAME
LOCATOR
INSTANCE
AS
IN
THE
ORIGINAL
CONFIGURATION
BUT
THE
PLACEMENT
OF
THAT
LOCATOR
IN
THE
LIST
HAS
CHANGED
AS
HAS
THE
THIRD
FIELD
OF
THE
LOCATOR
CHAPTER
PRIORITY
QUEUES
WITH
ITS
LEFT
CHILD
A
AT
INDEX
OF
THE
LIST
THEN
SWAPPED
WITH
ITS
RIGHT
CHILD
F
AT
INDEX
OF
THE
LIST
IN
THE
FINAL
CONFIGURATION
THE
LOCATOR
INSTANCES
FOR
ALL
AFFECTED
ELEMENTS
HAVE
BEEN
MODIFIED
TO
REFLECT
THEIR
NEW
LOCATION
IT
IS
IMPORTANT
TO
EMPHASIZE
THAT
THE
LOCATOR
INSTANCES
HAVE
NOT
CHANGED
IDEN
TITY
THE
USER
TOKEN
REFERENCE
PORTRAYED
IN
FIGURES
AND
CONTINUES
TO
REFERENCE
THE
SAME
INSTANCE
WE
HAVE
SIMPLY
CHANGED
THE
THIRD
FIELD
OF
THAT
INSTANCE
AND
WE
HAVE
CHANGED
WHERE
THAT
INSTANCE
IS
REFERENCED
WITHIN
THE
LIST
SEQUENCE
WITH
THIS
NEW
REPRESENTATION
PROVIDING
THE
ADDITIONAL
SUPPORT
FOR
THE
ADAPTABLE
PRIORITY
QUEUE
ADT
IS
RATHER
STRAIGHTFORWARD
WHEN
A
LOCATOR
INSTANCE
IS
SENT
AS
A
PARAMETER
TO
UPDATE
OR
REMOVE
WE
MAY
RELY
ON
THE
THIRD
FIELD
OF
THAT
STRUCTURE
TO
DESIGNATE
WHERE
THE
ELEMENT
RESIDES
IN
THE
HEAP
WITH
THAT
KNOWLEDGE
THE
UPDATE
OF
A
KEY
MAY
SIMPLY
REQUIRE
AN
UP
HEAP
OR
DOWN
HEAP
BUBBLING
STEP
TO
REESTABLISH
THE
HEAP
ORDER
PROPERTY
THE
COMPLETE
BINARY
TREE
PROPERTY
REMAINS
INTACT
TO
IMPLEMENT
THE
REMOVAL
OF
AN
ARBITRARY
ELEMENT
WE
MOVE
THE
ELEMENT
AT
THE
LAST
POSITION
TO
THE
VACATED
LOCATION
AND
AGAIN
PERFORM
AN
APPROPRIATE
BUBBLING
STEP
TO
SATISFY
THE
HEAP
ORDER
PROPERTY
PYTHON
IMPLEMENTATION
CODE
FRAGMENTS
AND
PRESENT
A
PYTHON
IMPLEMENTATION
OF
AN
ADAPTABLE
PRI
ORITY
QUEUE
AS
A
SUBCLASS
OF
THE
HEAPPRIORITYQUEUE
CLASS
FROM
SECTION
OUR
MODIFICATIONS
TO
THE
ORIGINAL
CLASS
ARE
RELATIVELY
MINOR
WE
DEFINE
A
PUBLIC
LOCATOR
CLASS
THAT
INHERITS
FROM
THE
NONPUBLIC
ITEM
CLASS
AND
AUGMENTS
IT
WITH
AN
ADDI
TIONAL
INDEX
FIELD
WE
MAKE
IT
A
PUBLIC
CLASS
BECAUSE
WE
WILL
BE
USING
LOCATORS
AS
RETURN
VALUES
AND
PARAMETERS
HOWEVER
THE
PUBLIC
INTERFACE
FOR
THE
LOCATOR
CLASS
DOES
NOT
INCLUDE
ANY
OTHER
FUNCTIONALITY
FOR
THE
USER
TO
UPDATE
LOCATORS
DURING
THE
FLOW
OF
OUR
HEAP
OPERATIONS
WE
RELY
ON
AN
INTEN
TIONAL
DESIGN
DECISION
THAT
OUR
ORIGINAL
CLASS
USES
A
NONPUBLIC
SWAP
METHOD
FOR
ALL
DATA
MOVEMENT
WE
OVERRIDE
THAT
UTILITY
TO
EXECUTE
THE
ADDITIONAL
STEP
OF
UPDATING
THE
STORED
INDICES
WITHIN
THE
TWO
SWAPPED
LOCATOR
INSTANCES
WE
PROVIDE
A
NEW
BUBBLE
UTILITY
THAT
MANAGES
THE
REINSTATEMENT
OF
THE
HEAP
ORDER
PROPERTY
WHEN
A
KEY
HAS
CHANGED
AT
AN
ARBITRARY
POSITION
WITHIN
THE
HEAP
EITHER
DUE
TO
A
KEY
UPDATE
OR
THE
BLIND
REPLACEMENT
OF
A
REMOVED
ELEMENT
WITH
THE
ITEM
FROM
THE
LAST
POSITION
OF
THE
TREE
THE
BUBBLE
UTILITY
DETERMINES
WHETHER
TO
APPLY
UP
HEAP
OR
DOWN
HEAP
BUBBLING
DEPENDING
ON
WHETHER
THE
GIVEN
LOCATION
HAS
A
PARENT
WITH
A
SMALLER
KEY
IF
AN
UPDATED
KEY
COINCIDENTALLY
REMAINS
VALID
FOR
ITS
CURRENT
LOCATION
WE
TECHNICALLY
CALL
DOWNHEAP
BUT
NO
SWAPS
RESULT
THE
PUBLIC
METHODS
ARE
PROVIDED
IN
CODE
FRAGMENT
THE
EXISTING
ADD
METHOD
IS
OVERRIDDEN
BOTH
TO
MAKE
USE
OF
A
LOCATOR
INSTANCE
RATHER
THAN
AN
ITEM
INSTANCE
FOR
STORAGE
OF
THE
NEW
ELEMENT
AND
TO
RETURN
THE
LOCATOR
TO
THE
CALLER
THE
REMAINDER
OF
THAT
METHOD
IS
SIMILAR
TO
THE
ORIGINAL
WITH
THE
MANAGEMENT
OF
LOCATOR
INDICES
ENACTED
BY
THE
USE
OF
THE
NEW
VERSION
OF
SWAP
THERE
IS
NO
REASON
TO
OVER
ADAPTABLE
PRIORITY
QUEUES
RIDE
THE
REMOVE
MIN
METHOD
BECAUSE
THE
ONLY
CHANGE
IN
BEHAVIOR
FOR
THE
ADAPTABLE
PRIORITY
QUEUE
IS
AGAIN
PROVIDED
BY
THE
OVERRIDDEN
SWAP
METHOD
THE
UPDATE
AND
REMOVE
METHODS
PROVIDE
THE
CORE
NEW
FUNCTIONALITY
FOR
THE
ADAPTABLE
PRIORITY
QUEUE
WE
PERFORM
ROBUST
CHECKING
OF
THE
VALIDITY
OF
A
LOCATOR
THAT
IS
SENT
BY
A
CALLER
ALTHOUGH
IN
THE
INTEREST
OF
SPACE
OUR
DISPLAYED
CODE
DOES
NOT
DO
PRELIMINARY
TYPE
CHECKING
TO
ENSURE
THAT
THE
PARAMETER
IS
INDEED
A
LOCATOR
INSTANCE
TO
ENSURE
THAT
A
LOCATOR
IS
ASSOCIATED
WITH
A
CURRENT
ELEMENT
OF
THE
GIVEN
PRIORITY
QUEUE
WE
EXAMINE
THE
INDEX
THAT
IS
ENCAPSULATED
WITHIN
THE
LOCATOR
OBJECT
AND
THEN
VERIFY
THAT
THE
ENTRY
OF
THE
LIST
AT
THAT
INDEX
IS
THE
VERY
SAME
LOCATOR
IN
CONCLUSION
THE
ADAPTABLE
PRIORITY
QUEUE
PROVIDES
THE
SAME
ASYMPTOTIC
EFFI
CIENCY
AND
SPACE
USAGE
AS
THE
NONADAPTIVE
VERSION
AND
PROVIDES
LOGARITHMIC
PER
FORMANCE
FOR
THE
NEW
LOCATOR
BASED
UPDATE
AND
REMOVE
METHODS
A
SUMMARY
OF
THE
PERFORMANCE
IS
GIVEN
IN
TABLE
CLASS
ADAPTABLEHEAPPRIORITYQUEUE
HEAPPRIORITYQUEUE
A
LOCATOR
BASED
PRIORITY
QUEUE
IMPLEMENTED
WITH
A
BINARY
HEAP
NESTED
LOCATOR
CLASS
CLASS
LOCATOR
HEAPPRIORITYQUEUE
ITEM
TOKEN
FOR
LOCATING
AN
ENTRY
OF
THE
PRIORITY
QUEUE
SLOTS
ADD
INDEX
AS
ADDITIONAL
FIELD
DEF
INIT
SELF
K
V
J
SUPER
INIT
K
V
SELF
INDEX
J
NONPUBLIC
BEHAVIORS
OVERRIDE
SWAP
TO
RECORD
NEW
INDICES
DEF
SWAP
SELF
I
J
SUPER
SWAP
I
J
PERFORM
THE
SWAP
SELF
DATA
I
INDEX
I
RESET
LOCATOR
INDEX
POST
SWAP
SELF
DATA
J
INDEX
J
RESET
LOCATOR
INDEX
POST
SWAP
DEF
BUBBLE
SELF
J
IF
J
AND
SELF
DATA
J
SELF
DATA
SELF
PARENT
J
SELF
UPHEAP
J
ELSE
SELF
DOWNHEAP
J
CODE
FRAGMENT
AN
IMPLEMENTATION
OF
AN
ADAPTABLE
PRIORITY
QUEUE
CONTINUED
IN
CODE
FRAGMENT
THIS
EXTENDS
THE
HEAPPRIORITYQUEUE
CLASS
OF
CODE
FRAG
MENTS
AND
CHAPTER
PRIORITY
QUEUES
DEF
ADD
SELF
KEY
VALUE
ADD
A
KEY
VALUE
PAIR
TOKEN
SELF
LOCATOR
KEY
VALUE
LEN
SELF
DATA
INITIAIZE
LOCATOR
INDEX
SELF
DATA
APPEND
TOKEN
SELF
UPHEAP
LEN
SELF
DATA
RETURN
TOKEN
DEF
UPDATE
SELF
LOC
NEWKEY
NEWVAL
UPDATE
THE
KEY
AND
VALUE
FOR
THE
ENTRY
IDENTIFIED
BY
LOCATOR
LOC
J
LOC
INDEX
IF
NOT
J
LEN
SELF
AND
SELF
DATA
J
IS
LOC
RAISE
VALUEERROR
INVALID
LOCATOR
LOC
KEY
NEWKEY
LOC
VALUE
NEWVAL
SELF
BUBBLE
J
DEF
REMOVE
SELF
LOC
REMOVE
AND
RETURN
THE
K
V
PAIR
IDENTIFIED
BY
LOCATOR
LOC
J
LOC
INDEX
IF
NOT
J
LEN
SELF
AND
SELF
DATA
J
IS
LOC
RAISE
VALUEERROR
INVALID
LOCATOR
IF
J
LEN
SELF
ITEM
AT
LAST
POSITION
SELF
DATA
POP
JUST
REMOVE
IT
ELSE
SELF
SWAP
J
LEN
SELF
SWAP
ITEM
TO
THE
LAST
POSITION
SELF
DATA
POP
REMOVE
IT
FROM
THE
LIST
SELF
BUBBLE
J
FIX
ITEM
DISPLACED
BY
THE
SWAP
RETURN
LOC
KEY
LOC
VALUE
CODE
FRAGMENT
AN
IMPLEMENTATION
OF
AN
ADAPTABLE
PRIORITY
QUEUE
CONTINUED
FROM
CODE
FRAGMENT
AMORTIZED
WITH
DYNAMIC
ARRAY
TABLE
RUNNING
TIMES
OF
THE
METHODS
OF
AN
ADAPTABLE
PRIORITY
QUEUE
P
OF
SIZE
N
REALIZED
BY
MEANS
OF
OUR
ARRAY
BASED
HEAP
REPRESENTATION
THE
SPACE
REQUIREMENT
IS
O
N
EXERCISES
EXERCISES
FOR
HELP
WITH
EXERCISES
PLEASE
VISIT
THE
SITE
WWW
WILEY
COM
COLLEGE
GOODRICH
REINFORCEMENT
R
HOW
LONG
WOULD
IT
TAKE
TO
REMOVE
THE
FLOG
SMALLEST
ELEMENTS
FROM
A
HEAP
THAT
CONTAINS
N
ENTRIES
USING
THE
REMOVE
MIN
OPERATION
R
SUPPOSE
YOU
LABEL
EACH
POSITION
P
OF
A
BINARY
TREE
T
WITH
A
KEY
EQUAL
TO
ITS
PREORDER
RANK
UNDER
WHAT
CIRCUMSTANCES
IS
T
A
HEAP
R
WHAT
DOES
EACH
REMOVE
MIN
CALL
RETURN
WITHIN
THE
FOLLOWING
SEQUENCE
OF
PRIORITY
QUEUE
ADT
METHODS
ADD
A
ADD
B
ADD
F
ADD
D
REMOVE
MIN
ADD
J
ADD
L
REMOVE
MIN
REMOVE
MIN
ADD
G
REMOVE
MIN
ADD
H
REMOVE
MIN
REMOVE
MIN
R
AN
AIRPORT
IS
DEVELOPING
A
COMPUTER
SIMULATION
OF
AIR
TRAFFIC
CONTROL
THAT
HANDLES
EVENTS
SUCH
AS
LANDINGS
AND
TAKEOFFS
EACH
EVENT
HAS
A
TIME
STAMP
THAT
DENOTES
THE
TIME
WHEN
THE
EVENT
WILL
OCCUR
THE
SIMULATION
PROGRAM
NEEDS
TO
EFFICIENTLY
PERFORM
THE
FOLLOWING
TWO
FUNDAMENTAL
OPERATIONS
INSERT
AN
EVENT
WITH
A
GIVEN
TIME
STAMP
THAT
IS
ADD
A
FUTURE
EVENT
EXTRACT
THE
EVENT
WITH
SMALLEST
TIME
STAMP
THAT
IS
DETERMINE
THE
NEXT
EVENT
TO
PROCESS
WHICH
DATA
STRUCTURE
SHOULD
BE
USED
FOR
THE
ABOVE
OPERATIONS
WHY
R
THE
MIN
METHOD
FOR
THE
UNSORTEDPRIORITYQUEUE
CLASS
EXECUTES
IN
O
N
TIME
AS
ANALYZED
IN
TABLE
GIVE
A
SIMPLE
MODIFICATION
TO
THE
CLASS
SO
THAT
MIN
RUNS
IN
O
TIME
EXPLAIN
ANY
NECESSARY
MODIFICATIONS
TO
OTHER
METHODS
OF
THE
CLASS
R
CAN
YOU
ADAPT
YOUR
SOLUTION
TO
THE
PREVIOUS
PROBLEM
TO
MAKE
REMOVE
MIN
RUN
IN
O
TIME
FOR
THE
UNSORTEDPRIORITYQUEUE
CLASS
EXPLAIN
YOUR
AN
SWER
R
ILLUSTRATE
THE
EXECUTION
OF
THE
SELECTION
SORT
ALGORITHM
ON
THE
FOLLOWING
INPUT
SEQUENCE
R
ILLUSTRATE
THE
EXECUTION
OF
THE
INSERTION
SORT
ALGORITHM
ON
THE
INPUT
SE
QUENCE
OF
THE
PREVIOUS
PROBLEM
R
GIVE
AN
EXAMPLE
OF
A
WORST
CASE
SEQUENCE
WITH
N
ELEMENTS
FOR
INSERTION
SORT
AND
SHOW
THAT
INSERTION
SORT
RUNS
IN
TIME
ON
SUCH
A
SEQUENCE
R
AT
WHICH
POSITIONS
OF
A
HEAP
MIGHT
THE
THIRD
SMALLEST
KEY
BE
STORED
R
AT
WHICH
POSITIONS
OF
A
HEAP
MIGHT
THE
LARGEST
KEY
BE
STORED
CHAPTER
PRIORITY
QUEUES
R
CONSIDER
A
SITUATION
IN
WHICH
A
USER
HAS
NUMERIC
KEYS
AND
WISHES
TO
HAVE
A
PRIORITY
QUEUE
THAT
IS
MAXIMUM
ORIENTED
HOW
COULD
A
STANDARD
MIN
ORIENTED
PRIORITY
QUEUE
BE
USED
FOR
SUCH
A
PURPOSE
R
ILLUSTRATE
THE
EXECUTION
OF
THE
IN
PLACE
HEAP
SORT
ALGORITHM
ON
THE
FOLLOW
ING
INPUT
SEQUENCE
R
LET
T
BE
A
COMPLETE
BINARY
TREE
SUCH
THAT
POSITION
P
STORES
AN
ELEMENT
WITH
KEY
F
P
WHERE
F
P
IS
THE
LEVEL
NUMBER
OF
P
SEE
SECTION
IS
TREE
T
A
HEAP
WHY
OR
WHY
NOT
R
EXPLAIN
WHY
THE
DESCRIPTION
OF
DOWN
HEAP
BUBBLING
DOES
NOT
CONSIDER
THE
CASE
IN
WHICH
POSITION
P
HAS
A
RIGHT
CHILD
BUT
NOT
A
LEFT
CHILD
R
IS
THERE
A
HEAP
H
STORING
SEVEN
ENTRIES
WITH
DISTINCT
KEYS
SUCH
THAT
A
PRE
ORDER
TRAVERSAL
OF
H
YIELDS
THE
ENTRIES
OF
H
IN
INCREASING
OR
DECREASING
ORDER
BY
KEY
HOW
ABOUT
AN
INORDER
TRAVERSAL
HOW
ABOUT
A
POSTORDER
TRAVERSAL
IF
SO
GIVE
AN
EXAMPLE
IF
NOT
SAY
WHY
R
LET
H
BE
A
HEAP
STORING
ENTRIES
USING
THE
ARRAY
BASED
REPRESENTATION
OF
A
COMPLETE
BINARY
TREE
WHAT
IS
THE
SEQUENCE
OF
INDICES
OF
THE
ARRAY
THAT
ARE
VISITED
IN
A
PREORDER
TRAVERSAL
OF
H
WHAT
ABOUT
AN
INORDER
TRAVERSAL
OF
H
WHAT
ABOUT
A
POSTORDER
TRAVERSAL
OF
H
R
SHOW
THAT
THE
SUM
N
LOG
I
I
WHICH
APPEARS
IN
THE
ANALYSIS
OF
HEAP
SORT
IS
N
LOG
N
R
BILL
CLAIMS
THAT
A
PREORDER
TRAVERSAL
OF
A
HEAP
WILL
LIST
ITS
KEYS
IN
NONDE
CREASING
ORDER
DRAW
AN
EXAMPLE
OF
A
HEAP
THAT
PROVES
HIM
WRONG
R
HILLARY
CLAIMS
THAT
A
POSTORDER
TRAVERSAL
OF
A
HEAP
WILL
LIST
ITS
KEYS
IN
NON
INCREASING
ORDER
DRAW
AN
EXAMPLE
OF
A
HEAP
THAT
PROVES
HER
WRONG
R
SHOW
ALL
THE
STEPS
OF
THE
ALGORITHM
FOR
REMOVING
THE
ENTRY
X
FROM
THE
HEAP
OF
FIGURE
ASSUMING
THE
ENTRY
HAD
BEEN
IDENTIFIED
WITH
A
LOCATOR
R
SHOW
ALL
THE
STEPS
OF
THE
ALGORITHM
FOR
REPLACING
KEY
OF
ENTRY
A
WITH
IN
THE
HEAP
OF
FIGURE
ASSUMING
THE
ENTRY
HAD
BEEN
IDENTIFIED
WITH
A
LOCATOR
R
DRAW
AN
EXAMPLE
OF
A
HEAP
WHOSE
KEYS
ARE
ALL
THE
ODD
NUMBERS
FROM
TO
WITH
NO
REPEATS
SUCH
THAT
THE
INSERTION
OF
AN
ENTRY
WITH
KEY
WOULD
CAUSE
UP
HEAP
BUBBLING
TO
PROCEED
ALL
THE
WAY
UP
TO
A
CHILD
OF
THE
ROOT
REPLACING
THAT
CHILD
KEY
WITH
R
DESCRIBE
A
SEQUENCE
OF
N
INSERTIONS
IN
A
HEAP
THAT
REQUIRES
N
LOG
N
TIME
TO
PROCESS
R
COMPLETE
FIGURE
BY
SHOWING
ALL
THE
STEPS
OF
THE
IN
PLACE
HEAP
SORT
ALGORITHM
SHOW
BOTH
THE
ARRAY
AND
THE
ASSOCIATED
HEAP
AT
THE
END
OF
EACH
STEP
EXERCISES
CREATIVITY
C
SHOW
HOW
TO
IMPLEMENT
THE
STACK
ADT
USING
ONLY
A
PRIORITY
QUEUE
AND
ONE
ADDITIONAL
INTEGER
INSTANCE
VARIABLE
C
SHOW
HOW
TO
IMPLEMENT
THE
FIFO
QUEUE
ADT
USING
ONLY
A
PRIORITY
QUEUE
AND
ONE
ADDITIONAL
INTEGER
INSTANCE
VARIABLE
C
PROFESSOR
IDLE
SUGGESTS
THE
FOLLOWING
SOLUTION
TO
THE
PREVIOUS
PROBLEM
WHENEVER
AN
ITEM
IS
INSERTED
INTO
THE
QUEUE
IT
IS
ASSIGNED
A
KEY
THAT
IS
EQUAL
TO
THE
CURRENT
SIZE
OF
THE
QUEUE
DOES
SUCH
A
STRATEGY
RESULT
IN
FIFO
SEMANTICS
PROVE
THAT
IT
IS
SO
OR
PROVIDE
A
COUNTEREXAMPLE
C
REIMPLEMENT
THE
SORTEDPRIORITYQUEUE
USING
A
PYTHON
LIST
MAKE
SURE
TO
MAINTAIN
REMOVE
MIN
O
PERFORMANCE
C
GIVE
A
NONRECURSIVE
IMPLEMENTATION
OF
THE
UPHEAP
METHOD
FOR
THE
CLASS
HEAPPRIORITYQUEUE
C
GIVE
A
NONRECURSIVE
IMPLEMENTATION
OF
THE
DOWNHEAP
METHOD
FOR
THE
CLASS
HEAPPRIORITYQUEUE
C
ASSUME
THAT
WE
ARE
USING
A
LINKED
REPRESENTATION
OF
A
COMPLETE
BINARY
TREE
T
AND
AN
EXTRA
REFERENCE
TO
THE
LAST
NODE
OF
THAT
TREE
SHOW
HOW
TO
UPDATE
THE
REFERENCE
TO
THE
LAST
NODE
AFTER
OPERATIONS
ADD
OR
REMOVE
MIN
IN
O
LOG
N
TIME
WHERE
N
IS
THE
CURRENT
NUMBER
OF
NODES
OF
T
BE
SURE
AND
HANDLE
ALL
POSSIBLE
CASES
AS
ILLUSTRATED
IN
FIGURE
C
WHEN
USING
A
LINKED
TREE
REPRESENTATION
FOR
A
HEAP
AN
ALTERNATIVE
METHOD
FOR
FINDING
THE
LAST
NODE
DURING
AN
INSERTION
IN
A
HEAP
T
IS
TO
STORE
IN
THE
LAST
NODE
AND
EACH
LEAF
NODE
OF
T
A
REFERENCE
TO
THE
LEAF
NODE
IMMEDI
ATELY
TO
ITS
RIGHT
WRAPPING
TO
THE
FIRST
NODE
IN
THE
NEXT
LOWER
LEVEL
FOR
THE
RIGHTMOST
LEAF
NODE
SHOW
HOW
TO
MAINTAIN
SUCH
REFERENCES
IN
O
TIME
PER
OPERATION
OF
THE
PRIORITY
QUEUE
ADT
ASSUMING
THAT
T
IS
IMPLEMENTED
WITH
A
LINKED
STRUCTURE
A
B
FIGURE
UPDATING
THE
LAST
NODE
IN
A
COMPLETE
BINARY
TREE
AFTER
OPERATION
ADD
OR
REMOVE
NODE
W
IS
THE
LAST
NODE
BEFORE
OPERATION
ADD
OR
AFTER
OPERATION
REMOVE
NODE
Z
IS
THE
LAST
NODE
AFTER
OPERATION
ADD
OR
BEFORE
OPERATION
REMOVE
CHAPTER
PRIORITY
QUEUES
C
WE
CAN
REPRESENT
A
PATH
FROM
THE
ROOT
TO
A
GIVEN
NODE
OF
A
BINARY
TREE
BY
MEANS
OF
A
BINARY
STRING
WHERE
MEANS
GO
TO
THE
LEFT
CHILD
AND
MEANS
GO
TO
THE
RIGHT
CHILD
FOR
EXAMPLE
THE
PATH
FROM
THE
ROOT
TO
THE
NODE
STORING
W
IN
THE
HEAP
OF
FIGURE
IS
REPRESENTED
BY
DESIGN
AN
O
LOG
N
TIME
ALGORITHM
FOR
FINDING
THE
LAST
NODE
OF
A
COMPLETE
BINARY
TREE
WITH
N
NODES
BASED
ON
THE
ABOVE
REPRESENTATION
SHOW
HOW
THIS
ALGORITHM
CAN
BE
USED
IN
THE
IMPLEMENTATION
OF
A
COMPLETE
BINARY
TREE
BY
MEANS
OF
A
LINKED
STRUCTURE
THAT
DOES
NOT
KEEP
A
REFERENCE
TO
THE
LAST
NODE
C
GIVEN
A
HEAP
T
AND
A
KEY
K
GIVE
AN
ALGORITHM
TO
COMPUTE
ALL
THE
ENTRIES
IN
T
HAVING
A
KEY
LESS
THAN
OR
EQUAL
TO
K
FOR
EXAMPLE
GIVEN
THE
HEAP
OF
FIGURE
AND
QUERY
K
THE
ALGORITHM
SHOULD
REPORT
THE
ENTRIES
WITH
KEYS
AND
BUT
NOT
NECESSARILY
IN
THIS
ORDER
YOUR
ALGORITHM
SHOULD
RUN
IN
TIME
PROPORTIONAL
TO
THE
NUMBER
OF
ENTRIES
RETURNED
AND
SHOULD
NOT
MODIFY
THE
HEAP
C
PROVIDE
A
JUSTIFICATION
OF
THE
TIME
BOUNDS
IN
TABLE
C
GIVE
AN
ALTERNATIVE
ANALYSIS
OF
BOTTOM
UP
HEAP
CONSTRUCTION
BY
SHOWING
THE
FOLLOWING
SUMMATION
IS
O
FOR
ANY
POSITIVE
INTEGER
H
H
I
I
C
SUPPOSE
TWO
BINARY
TREES
AND
HOLD
ENTRIES
SATISFYING
THE
HEAP
ORDER
PROPERTY
BUT
NOT
NECESSARILY
THE
COMPLETE
BINARY
TREE
PROPERTY
DESCRIBE
A
METHOD
FOR
COMBINING
AND
INTO
A
BINARY
TREE
T
WHOSE
NODES
HOLD
THE
UNION
OF
THE
ENTRIES
IN
AND
AND
ALSO
SATISFY
THE
HEAP
ORDER
PROP
ERTY
YOUR
ALGORITHM
SHOULD
RUN
IN
TIME
O
WHERE
AND
ARE
THE
RESPECTIVE
HEIGHTS
OF
AND
C
IMPLEMENT
A
HEAPPUSHPOP
METHOD
FOR
THE
HEAPPRIORITYQUEUE
CLASS
WITH
SEMANTICS
AKIN
TO
THAT
DESCRIBED
FOR
THE
HEAPQ
MODULE
IN
SECTION
C
IMPLEMENT
A
HEAPREPLACE
METHOD
FOR
THE
HEAPPRIORITYQUEUE
CLASS
WITH
SEMANTICS
AKIN
TO
THAT
DESCRIBED
FOR
THE
HEAPQ
MODULE
IN
SECTION
C
TAMARINDO
AIRLINES
WANTS
TO
GIVE
A
FIRST
CLASS
UPGRADE
COUPON
TO
THEIR
TOP
LOG
N
FREQUENT
FLYERS
BASED
ON
THE
NUMBER
OF
MILES
ACCUMULATED
WHERE
N
IS
THE
TOTAL
NUMBER
OF
THE
AIRLINES
FREQUENT
FLYERS
THE
ALGORITHM
THEY
CURRENTLY
USE
WHICH
RUNS
IN
O
N
LOG
N
TIME
SORTS
THE
FLYERS
BY
THE
NUMBER
OF
MILES
FLOWN
AND
THEN
SCANS
THE
SORTED
LIST
TO
PICK
THE
TOP
LOG
N
FLYERS
DESCRIBE
AN
ALGORITHM
THAT
IDENTIFIES
THE
TOP
LOGN
FLYERS
IN
O
N
TIME
C
EXPLAIN
HOW
THE
K
LARGEST
ELEMENTS
FROM
AN
UNORDERED
COLLECTION
OF
SIZE
N
CAN
BE
FOUND
IN
TIME
O
N
K
LOG
N
USING
A
MAXIMUM
ORIENTED
HEAP
C
EXPLAIN
HOW
THE
K
LARGEST
ELEMENTS
FROM
AN
UNORDERED
COLLECTION
OF
SIZE
N
CAN
BE
FOUND
IN
TIME
O
N
LOG
K
USING
O
K
AUXILIARY
SPACE
EXERCISES
C
GIVEN
A
CLASS
PRIORITYQUEUE
THAT
IMPLEMENTS
THE
MINIMUM
ORIENTED
PRI
ORITY
QUEUE
ADT
PROVIDE
AN
IMPLEMENTATION
OF
A
MAXPRIORITYQUEUE
CLASS
THAT
ADAPTS
TO
PROVIDE
A
MAXIMUM
ORIENTED
ABSTRACTION
WITH
METHODS
ADD
MAX
AND
REMOVE
MAX
YOUR
IMPLEMENTATION
SHOULD
NOT
MAKE
ANY
AS
SUMPTION
ABOUT
THE
INTERNAL
WORKINGS
OF
THE
ORIGINAL
PRIORITYQUEUE
CLASS
NOR
THE
TYPE
OF
KEYS
THAT
MIGHT
BE
USED
C
WRITE
A
KEY
FUNCTION
FOR
NONNEGATIVE
INTEGERS
THAT
DETERMINES
ORDER
BASED
ON
THE
NUMBER
OF
IN
EACH
INTEGER
BINARY
EXPANSION
C
GIVE
AN
ALTERNATIVE
IMPLEMENTATION
OF
THE
PQ
SORT
FUNCTION
FROM
CODE
FRAGMENT
THAT
ACCEPTS
A
KEY
FUNCTION
AS
AN
OPTIONAL
PARAMETER
C
DESCRIBE
AN
IN
PLACE
VERSION
OF
THE
SELECTION
SORT
ALGORITHM
FOR
AN
ARRAY
THAT
USES
ONLY
O
SPACE
FOR
INSTANCE
VARIABLES
IN
ADDITION
TO
THE
ARRAY
C
ASSUMING
THE
INPUT
TO
THE
SORTING
PROBLEM
IS
GIVEN
IN
AN
ARRAY
A
DESCRIBE
HOW
TO
IMPLEMENT
THE
INSERTION
SORT
ALGORITHM
USING
ONLY
THE
ARRAY
A
AND
AT
MOST
A
CONSTANT
NUMBER
OF
ADDITIONAL
VARIABLES
C
GIVE
AN
ALTERNATE
DESCRIPTION
OF
THE
IN
PLACE
HEAP
SORT
ALGORITHM
USING
THE
STANDARD
MINIMUM
ORIENTED
PRIORITY
QUEUE
INSTEAD
OF
A
MAXIMUM
ORIENTED
ONE
C
AN
ONLINE
COMPUTER
SYSTEM
FOR
TRADING
STOCKS
NEEDS
TO
PROCESS
ORDERS
OF
THE
FORM
BUY
SHARES
AT
X
EACH
OR
SELL
SHARES
AT
Y
EACH
A
BUY
ORDER
FOR
X
CAN
ONLY
BE
PROCESSED
IF
THERE
IS
AN
EXISTING
SELL
ORDER
WITH
PRICE
Y
SUCH
THAT
Y
X
LIKEWISE
A
SELL
ORDER
FOR
Y
CAN
ONLY
BE
PROCESSED
IF
THERE
IS
AN
EXISTING
BUY
ORDER
WITH
PRICE
X
SUCH
THAT
Y
X
IF
A
BUY
OR
SELL
ORDER
IS
ENTERED
BUT
CANNOT
BE
PROCESSED
IT
MUST
WAIT
FOR
A
FUTURE
ORDER
THAT
ALLOWS
IT
TO
BE
PROCESSED
DESCRIBE
A
SCHEME
THAT
ALLOWS
BUY
AND
SELL
ORDERS
TO
BE
ENTERED
IN
O
LOG
N
TIME
INDEPENDENT
OF
WHETHER
OR
NOT
THEY
CAN
BE
IMMEDIATELY
PROCESSED
C
EXTEND
A
SOLUTION
TO
THE
PREVIOUS
PROBLEM
SO
THAT
USERS
ARE
ALLOWED
TO
UPDATE
THE
PRICES
FOR
THEIR
BUY
OR
SELL
ORDERS
THAT
HAVE
YET
TO
BE
PROCESSED
C
A
GROUP
OF
CHILDREN
WANT
TO
PLAY
A
GAME
CALLED
UNMONOPOLY
WHERE
IN
EACH
TURN
THE
PLAYER
WITH
THE
MOST
MONEY
MUST
GIVE
HALF
OF
HIS
HER
MONEY
TO
THE
PLAYER
WITH
THE
LEAST
AMOUNT
OF
MONEY
WHAT
DATA
STRUCTURE
SHOULD
BE
USED
TO
PLAY
THIS
GAME
EFFICIENTLY
WHY
PROJECTS
P
IMPLEMENT
THE
IN
PLACE
HEAP
SORT
ALGORITHM
EXPERIMENTALLY
COMPARE
ITS
RUNNING
TIME
WITH
THAT
OF
THE
STANDARD
HEAP
SORT
THAT
IS
NOT
IN
PLACE
P
USE
THE
APPROACH
OF
EITHER
EXERCISE
C
OR
C
TO
REIMPLEMENT
THE
TOP
METHOD
OF
THE
FAVORITESLISTMTF
CLASS
FROM
SECTION
MAKE
SURE
THAT
RESULTS
ARE
GENERATED
FROM
LARGEST
TO
SMALLEST
CHAPTER
PRIORITY
QUEUES
P
WRITE
A
PROGRAM
THAT
CAN
PROCESS
A
SEQUENCE
OF
STOCK
BUY
AND
SELL
ORDERS
AS
DESCRIBED
IN
EXERCISE
C
P
LET
BE
A
SET
OF
N
POINTS
IN
THE
PLANE
WITH
DISTINCT
INTEGER
X
AND
Y
COORDINATES
LET
T
BE
A
COMPLETE
BINARY
TREE
STORING
THE
POINTS
FROM
AT
ITS
EXTERNAL
NODES
SUCH
THAT
THE
POINTS
ARE
ORDERED
LEFT
TO
RIGHT
BY
IN
CREASING
X
COORDINATES
FOR
EACH
NODE
V
IN
T
LET
V
DENOTE
THE
SUBSET
OF
CONSISTING
OF
POINTS
STORED
IN
THE
SUBTREE
ROOTED
AT
V
FOR
THE
ROOT
R
OF
T
DEFINE
TOP
R
TO
BE
THE
POINT
IN
R
WITH
MAXIMUM
Y
COORDINATE
FOR
EVERY
OTHER
NODE
V
DEFINE
TOP
R
TO
BE
THE
POINT
IN
WITH
HIGHEST
Y
COORDINATE
IN
V
THAT
IS
NOT
ALSO
THE
HIGHEST
Y
COORDINATE
IN
U
WHERE
U
IS
THE
PARENT
OF
V
IN
T
IF
SUCH
A
POINT
EXISTS
SUCH
LABELING
TURNS
T
INTO
A
PRIORITY
SEARCH
TREE
DESCRIBE
A
LINEAR
TIME
ALGORITHM
FOR
TURNING
T
INTO
A
PRIORITY
SEARCH
TREE
IMPLEMENT
THIS
APPROACH
P
ONE
OF
THE
MAIN
APPLICATIONS
OF
PRIORITY
QUEUES
IS
IN
OPERATING
SYSTEMS
FOR
SCHEDULING
JOBS
ON
A
CPU
IN
THIS
PROJECT
YOU
ARE
TO
BUILD
A
PROGRAM
THAT
SCHEDULES
SIMULATED
CPU
JOBS
YOUR
PROGRAM
SHOULD
RUN
IN
A
LOOP
EACH
ITERATION
OF
WHICH
CORRESPONDS
TO
A
TIME
SLICE
FOR
THE
CPU
EACH
JOB
IS
ASSIGNED
A
PRIORITY
WHICH
IS
AN
INTEGER
BETWEEN
HIGHEST
PRIORITY
AND
LOWEST
PRIORITY
INCLUSIVE
FROM
AMONG
ALL
JOBS
WAITING
TO
BE
PRO
CESSED
IN
A
TIME
SLICE
THE
CPU
MUST
WORK
ON
A
JOB
WITH
HIGHEST
PRIORITY
IN
THIS
SIMULATION
EACH
JOB
WILL
ALSO
COME
WITH
A
LENGTH
VALUE
WHICH
IS
AN
INTEGER
BETWEEN
AND
INCLUSIVE
INDICATING
THE
NUMBER
OF
TIME
SLICES
THAT
ARE
NEEDED
TO
PROCESS
THIS
JOB
FOR
SIMPLICITY
YOU
MAY
ASSUME
JOBS
CANNOT
BE
INTERRUPTED
ONCE
IT
IS
SCHEDULED
ON
THE
CPU
A
JOB
RUNS
FOR
A
NUMBER
OF
TIME
SLICES
EQUAL
TO
ITS
LENGTH
YOUR
SIMULATOR
MUST
OUTPUT
THE
NAME
OF
THE
JOB
RUNNING
ON
THE
CPU
IN
EACH
TIME
SLICE
AND
MUST
PROCESS
A
SEQUENCE
OF
COMMANDS
ONE
PER
TIME
SLICE
EACH
OF
WHICH
IS
OF
THE
FORM
ADD
JOB
NAME
WITH
LENGTH
N
AND
PRIORITY
P
OR
NO
NEW
JOB
THIS
SLICE
P
58
DEVELOP
A
PYTHON
IMPLEMENTATION
OF
AN
ADAPTABLE
PRIORITY
QUEUE
THAT
IS
BASED
ON
AN
UNSORTED
LIST
AND
SUPPORTS
LOCATION
AWARE
ENTRIES
CHAPTER
NOTES
COURSE
SYLLABUS
CMPT
PRINCIPLES
OF
COMPUTER
SCIENCE
NOTE
THIS
IS
A
PRELIMINARY
VERSION
OF
THE
SYLLABUS
SOME
DETAILS
RELATING
TO
THE
COURSE
OFFERING
E
G
THE
NUMBER
OF
ASSIGNMENTS
OR
THE
WEIGHT
OF
THE
FINAL
EXAM
MAY
CHANGE
SLIGHTLY
WITH
THE
FINAL
VERSION
THIS
INFORMATION
IS
PROVIDED
AS
A
CONVENIENCE
FOR
STUDENTS
AND
SHOULD
NOT
BE
TAKEN
AS
THE
FINAL
WORD
AS
LONG
AS
THIS
NOTICE
APPEARS
NOTE
THIS
COURSE
REPLACES
CMPT
IN
SEVERAL
DEGREE
PROGRAMS
BUT
IS
NOT
AN
EXACT
EQUIVALENT
CATALOGUE
DESCRIPTION
THIS
COURSE
BUILDS
ON
CMPT
BY
INTRODUCING
ADDITIONAL
PROBLEM
SOLVING
METHODS
AND
COMPUTER
SCIENCE
PRINCIPLES
TO
SOLVE
LARGER
PROBLEMS
THAT
ARE
MORE
DATA
INTENSIVE
OR
REQUIRE
MORE
SOPHISTICATED
TECHNIQUES
THESE
PRINCIPLES
INCLUDE
DATA
STRUCTURES
FOR
EFFICIENT
STORAGE
AND
RETRIEVAL
OF
DATA
SELECTION
OF
APPROPRIATE
DATA
STRUCTURES
ALGORITHMIC
PARADIGMS
FOR
SOLVING
DIFFICULT
PROBLEMS
AND
ANALYSIS
OF
ALGORITHMS
TIME
AND
SPACE
REQUIREMENTS
THIS
COURSE
ALSO
EMPHASIZES
FUNDAMENTAL
PRINCIPLES
OF
CODING
STYLE
TESTING
AND
TOP
DOWN
DESIGN
FOR
WRITING
ROBUST
MAINTAINABLE
SOFTWARE
PREREQUISITE
CMPT
OR
CMPT
AND
PERMISSION
OF
THE
DEPARTMENT
NOTE
STUDENTS
WITH
CREDIT
FOR
CMPT
CANNOT
TAKE
CMPT
FOR
CREDIT
BE
PROFICIENT
IN
WRITING
ROBUST
MAINTAINABLE
SOFTWARE
IN
PYTHON
DESIGN
ALGORITHMS
USING
PSEUDO
CODE
AND
ANALYZE
ALGORITHMS
WRITTEN
IN
PSEUDO
CODE
ANALYZE
TIME
AND
SPACE
COMPLEXITY
OF
ALGORITHMS
AND
TO
COMPARE
AND
EVALUATE
ALGORITHMS
AND
DATA
STRUCTURES
IN
TERMS
OF
COMPLEXITY
ANALYSIS
EXPLAIN
THE
CONCEPT
OF
ABSTRACT
DATA
TYPES
ATDS
IN
TERMS
OF
INTERFACE
AND
ENCAPSULATION
DESCRIBE
THE
USE
AND
BEHAVIOR
OF
OBJECTS
IN
PYTHON
AS
EXAMPLES
OF
THE
ADT
CONCEPT
APPLY
SPECIFIC
DATA
TYPES
ARRAYS
TREES
BINARY
SEARCH
TREES
AS
PART
OF
THE
SOLUTION
TO
COMPUTATIONAL
PROBLEMS
APPLY
RECURSION
TO
COMPUTATIONAL
TASKS
INVOLVING
DATA
STRUCTURES
SUCH
AS
LISTS
AND
TREES
APPLY
SKILLS
IN
ELEMENTARY
SOFTWARE
DESIGN
INCLUDING
TEST
DRIVEN
DESIGN
AND
ITERATIVE
DEVELOPMENT
APPLY
SKILLS
IN
ELEMENTARY
SOFTWARE
TESTING
INCLUDING
BLACK
BOX
TESTING
AND
BOUNDARY
CONDITIONS
AND
DEBUGGING
DESCRIBE
AND
APPLY
STRATEGIES
SUCH
AS
DIVIDE
AND
CONQUER
GREEDY
ALGORITHMS
AND
BACKTRACKING
COURSE
OVERVIEW
THIS
COURSE
CAN
BE
TAKEN
AS
A
SCIENCE
CREDIT
FOR
ARTS
SCIENCE
MAJORS
AND
IS
ALSO
A
REQUIRED
COURSE
IN
COMPUTER
SCIENCE
MAJOR
PROGRAMS
AND
A
FEW
OTHER
PROGRAMS
LECTURES
WILL
BE
OPPORTUNITIES
TO
APPLY
THE
CONCEPTS
COVERED
IN
THE
COURSE
DISCUSS
THEM
AS
WELL
AS
TO
ASK
QUESTIONS
AND
RECEIVE
GUIDANCE
WE
WILL
NOT
WASTE
CLASS
TIME
READING
POWERPOINT
SLIDES
TO
YOU
SHORT
READINGS
WILL
BE
ASSIGNED
BEFORE
EACH
CLASS
AND
YOU
WILL
BE
EXPECTED
TO
BE
PREPARED
TO
DISCUSS
ASK
QUESTIONS
AND
PARTICIPATE
LABORATORIES
ARE
YOUR
OPPORTUNITIES
TO
PUT
THE
WEEK
MATERIAL
INTO
PRACTICE
UNDER
THE
GUIDANCE
OF
A
TEACHING
ASSISTANT
ASSIGNMENTS
ARE
WEEKLY
TO
ENSURE
THAT
ALL
THE
RELEVANT
MATERIAL
IS
PUT
INTO
REGULAR
CONSISTENT
PRACTICE
EVEN
A
SIMPLE
ASSIGNMENT
CAN
TURN
INTO
A
TIME
CONSUMING
AFFAIR
IF
YOU
GET
STUCK
ON
SOMETHING
THAT
BLOCKS
YOUR
PROGRESS
WORKING
AT
THE
LAST
MINUTE
IS
A
GUARANTEED
SOURCE
OF
STRESS
AND
BURN
OUT
TO
MANAGE
YOUR
WORKLOAD
YOU
MUST
PRACTICE
EFFECTIVE
TIME
MANAGEMENT
START
EVERY
ASSIGNMENT
EARLY
TO
ALLOW
YOURSELF
TIME
TO
CONSULT
IF
YOU
RUN
INTO
A
PROBLEM
PLEASE
MAKE
USE
OF
THE
TEACHING
RESOURCES
INSTRUCTORS
OFFICE
HOURS
TAS
LABS
LECTURES
DISCUSSION
FORUMS
ETC
AVAILABLE
TO
YOU
STUDENTS
WHO
COMPLETE
CMPT
WITH
DILIGENCE
WILL
BE
ABLE
TO
BUILD
SUBSTANTIAL
APPLICATIONS
MAKING
USE
OF
PYTHON
EXTENSIVE
LIBRARIES
BUILD
COMPUTATIONAL
SOLUTIONS
TO
A
WIDE
VARIETY
OF
PROBLEMS
USING
A
RANGE
OF
ALGORITHMIC
STRATEGIES
AND
A
RANGE
OF
DATA
STRUCTURES
VERIFY
THAT
PYTHON
PROGRAMS
WORK
CORRECTLY
ASSESS
AND
MITIGATE
COMPUTATIONAL
EFFICIENCY
CONCERNS
THAT
MAY
ARISE
IN
PRACTICE
CONTINUE
THEIR
FORMAL
STUDY
OF
COMPUTER
SCIENCE
IN
COURSES
SUCH
AS
CMPT
CMPT
AND
CMPT
ACM
LEARNING
OUTCOMES
THIS
COURSE
ACHIEVES
THE
FOLLOWING
LEARNING
OUTCOMES
LISTED
ALPHABETICALLY
FROM
THE
ACM
COMPUTER
SCIENCE
CURRICULUM
GUIDELINES
HTTPS
WWW
ACM
ORG
EDUCATION
FINAL
REPORT
PDF
IMPLEMENT
TEST
AND
DEBUG
SIMPLE
RECURSIVE
FUNCTIONS
AND
PROCEDURES
USAGE
SDF
AD
DETERMINE
WHETHER
A
RECURSIVE
OR
ITERATIVE
SOLUTION
IS
MOST
APPROPRIATE
FOR
A
PROBLEM
ASSESSMENT
SDF
AD
IDENTIFY
THE
DATA
COMPONENTS
AND
BEHAVIORS
OF
MULTIPLE
ABSTRACT
DATA
TYPES
USAGE
SDF
AD
IMPLEMENT
A
COHERENT
ABSTRACT
DATA
TYPE
WITH
LOOSE
COUPLING
BETWEEN
COMPONENTS
AND
BEHAVIORS
USAGE
SDF
AD
DESIGN
IMPLEMENT
TEST
AND
DEBUG
A
PROGRAM
THAT
USES
EACH
OF
THE
FOLLOWING
FUNDAMENTAL
PROGRAMMING
CONSTRUCTS
BASIC
COMPUTATION
SIMPLE
I
O
STANDARD
CONDITIONAL
AND
ITERATIVE
STRUCTURES
THE
DEFINITION
OF
FUNCTIONS
AND
PARAMETER
PASSING
USAGE
SDF
FPC
DISCUSS
THE
APPROPRIATE
USE
OF
BUILT
IN
DATA
STRUCTURES
FAMILIARITY
DESCRIBE
COMMON
APPLICATIONS
FOR
EACH
OF
THE
FOLLOWING
DATA
STRUCTURES
STACK
QUEUE
PRIORITY
QUEUE
SET
AND
MAP
FAMILIARITY
WRITE
PROGRAMS
THAT
USE
EACH
OF
THE
FOLLOWING
DATA
STRUCTURES
ARRAYS
RECORDS
STRUCTS
STRINGS
LINKED
LISTS
STACKS
QUEUES
SETS
AND
MAPS
USAGE
COMPARE
ALTERNATIVE
IMPLEMENTATIONS
OF
DATA
STRUCTURES
WITH
RESPECT
TO
PERFORMANCE
ASSESSMENT
CHOOSE
THE
APPROPRIATE
DATA
STRUCTURE
FOR
MODELING
A
GIVEN
PROBLEM
ASSESSMENT
EXPLAIN
WHY
THE
CREATION
OF
CORRECT
PROGRAM
COMPONENTS
IS
IMPORTANT
IN
THE
PRODUCTION
OF
HIGH
QUALITY
SOFTWARE
FAMILIARITY
SDF
DM
APPLY
A
VARIETY
OF
STRATEGIES
TO
THE
TESTING
AND
DEBUGGING
OF
SIMPLE
PROGRAMS
USAGE
SDF
DM
CONSTRUCT
EXECUTE
AND
DEBUG
PROGRAMS
USING
A
MODERN
IDE
AND
ASSOCIATED
TOOLS
SUCH
AS
UNIT
TESTING
TOOLS
AND
VISUAL
DEBUGGERS
USAGE
SDF
DM
CONSTRUCT
AND
DEBUG
PROGRAMS
USING
THE
STANDARD
LIBRARIES
AVAILABLE
WITH
A
CHOSEN
PROGRAMMING
LANGUAGE
USAGE
SDF
DM
EXPLAIN
WHAT
IS
MEANT
BY
BEST
AND
WORST
CASE
BEHAVIOR
OF
AN
ALGORITHM
PARTIAL
AL
BA
DETERMINE
INFORMALLY
THE
TIME
AND
SPACE
COMPLEXITY
OF
SIMPLE
ALGORITHMS
USAGE
AL
BA
LIST
AND
CONTRAST
STANDARD
COMPLEXITY
CLASSES
FAMILIARITY
AL
BA
PERFORM
EMPIRICAL
STUDIES
TO
VALIDATE
HYPOTHESES
ABOUT
RUNTIME
STEMMING
FROM
MATHEMATICAL
ANALYSIS
RUN
ALGORITHMS
ON
INPUT
OF
VARIOUS
SIZES
AND
COMPARE
PERFORMANCE
ASSESSMENT
AL
BA
FOR
EACH
OF
THE
STRATEGIES
BRUTE
FORCE
GREEDY
DIVIDE
AND
CONQUER
RECURSIVE
BACKTRACKING
AND
DYNAMIC
PROGRAMMING
IDENTIFY
A
PRACTICAL
EXAMPLE
TO
WHICH
IT
WOULD
APPLY
FAMILIARITY
AL
AS
USE
A
GREEDY
APPROACH
TO
SOLVE
AN
APPROPRIATE
PROBLEM
AND
DETERMINE
IF
THE
GREEDY
RULE
CHOSEN
LEADS
TO
AN
OPTIMAL
SOLUTION
ASSESSMENT
AL
AS
USE
A
DIVIDE
AND
CONQUER
ALGORITHM
TO
SOLVE
AN
APPROPRIATE
PROBLEM
USAGE
AL
AS
USE
RECURSIVE
BACKTRACKING
TO
SOLVE
A
PROBLEM
SUCH
AS
NAVIGATING
A
MAZE
USAGE
AL
AS
IMPLEMENT
SIMPLE
SEARCH
ALGORITHMS
AND
EXPLAIN
THE
DIFFERENCES
IN
THEIR
TIME
COMPLEXITIES
ASSESSMENT
AL
FDSA
EXPLAIN
HOW
TREE
BALANCE
AFFECTS
THE
EFFICIENCY
OF
VARIOUS
BINARY
SEARCH
TREE
OPERATIONS
FAMILIARITY
AL
FDSA
STUDENT
EVALUATION
NOTE
ALL
STUDENTS
MUST
BE
PROPERLY
REGISTERED
IN
ORDER
TO
ATTEND
LECTURES
AND
RECEIVE
CREDIT
FOR
THIS
COURSE
GRADING
SCHEME
PRELIMINARY
ASSIGNMENTS
EACH
TUTORIAL
EXERCISES
EACH
MIDTERM
EXAM
FINAL
EXAM
TOTAL
THERE
WILL
BE
ASSIGNMENTS
IN
THIS
COURSE
ONE
APPROXIMATELY
EVERY
WEEK
ASSIGNMENTS
WILL
CONSIST
OF
TWO
PORTIONS
WRITTEN
QUESTIONS
THAT
REQUIRE
WRITTEN
ANSWERS
PROGRAMMING
QUESTIONS
WHICH
REQUIRE
YOU
TO
WRITE
COMPUTER
PROGRAMS
SUBMISSION
INSTRUCTIONS
WILL
BE
INCLUDED
WITH
EACH
ASSIGNMENT
DESCRIPTION
GENERALLY
YOU
WILL
UPLOAD
YOUR
SOLUTIONS
AS
FILES
TO
MOODLE
UNLESS
YOU
ARE
INSTRUCTED
OTHERWISE
GENERALLY
TEXT
FILES
ARE
PREFERRED
TO
DOCUMENTS
THAT
INCLUDE
FORMATTING
E
G
MSWORD
DOCUMENTS
A
DOCUMENT
THAT
CANNOT
BE
OPENED
WILL
RECEIVE
A
GRADE
OF
ZERO
DO
NOT
ASSUME
THE
MARKERS
WILL
TAKE
THE
TIME
TO
OPEN
YOUR
FILE
IF
IT
IS
IN
A
FILE
FORMAT
THAT
IS
NOT
STANDARD
TUTORIALS
HAVE
ASSOCIATED
EXERCISES
WHICH
WE
EXPECT
YOU
TO
DO
FOR
THE
SKILLS
YOU
LEARN
BY
DOING
THEM
YOU
ARE
EXPECTED
TO
SUBMIT
YOUR
TUTORIAL
EXERCISES
WEEKLY
ALONG
WITH
YOUR
ASSIGNMENT
SOLUTIONS
THESE
EXERCISES
WILL
BE
GRADED
AND
WILL
MAKE
UP
OF
YOUR
TOTAL
COURSE
GRADE
YOU
SHOULD
EXPECT
TO
COMPLETE
THESE
EXERCISES
IN
THE
TIME
ALLOTTED
FOR
TUTORIALS
AND
SHOULD
NOT
REQUIRE
ANY
TIME
OUTSIDE
THE
TUTORIALS
THE
MIDTERM
EXAM
WILL
BE
HELD
IN
MID
FEBRUARY
THE
MIDTERM
EXAMINATION
IS
WRITTEN
CLOSED
BOOK
ONLY
BRING
WATER
YOUR
STUDENT
CARD
AND
WRITING
INSTRUMENTS
THE
MIDTERM
EXAMINATION
WILL
HAVE
SOME
MULTIPLE
CHOICE
AND
SOME
PROGRAMMING
AND
SHORT
ANSWER
QUESTIONS
THE
MID
TERM
EXAMINATION
IS
INTENDED
TO
PROVIDE
PRACTICE
FOR
THE
FINAL
EXAM
AND
TO
PROVIDE
FEEDBACK
TO
STUDENTS
REGARDING
THEIR
CURRENT
PERFORMANCE
PLEASE
SEE
THE
SECTION
ON
POLICIES
FOR
IMPORTANT
INFORMATION
CONCERNING
MISSED
MIDTERMS
AND
FINAL
EXAMS
IN
THE
CASE
OF
A
MISSED
MIDTERM
THE
INSTRUCTOR
IN
CONSULTATION
WITH
THE
STUDENT
WILL
DETERMINE
HOW
THE
MISSED
WORK
WILL
BE
COMPENSATED
FOR
ONE
POTENTIAL
ALTERNATIVE
IS
TRANSFERRING
THE
WEIGHT
OF
THE
MIDTERM
ONTO
THE
FINAL
EXAMINATION
THE
FINAL
EXAMINATION
WILL
BE
SCHEDULED
BY
CENTRAL
TIMETABLING
TO
OCCUR
DURING
THE
USUAL
FINAL
EXAMINATION
INTERVAL
IT
WILL
BE
THREE
HOURS
LONG
WRITTEN
CLOSED
BOOK
BRING
ONLY
WATER
YOUR
STUDENT
CARD
AND
WRITING
INSTRUMENTS
PLEASE
SEE
THE
SECTION
ON
POLICIES
FOR
IMPORTANT
INFORMATION
CONCERNING
MISSED
MIDTERMS
AND
FINAL
EXAMS
CRITERIA
THAT
MUST
BE
MET
TO
PASS
STUDENTS
MUST
WRITE
THE
FINAL
EXAM
A
STUDENT
WHO
DOES
NOT
WRITE
THE
FINAL
EXAM
WILL
RECEIVE
A
GRADE
OF
AT
MOST
IN
THE
COURSE
ATTENDANCE
EXPECTATION
ATTEND
EVERY
CLASS
AND
PARTICIPATE
ACTIVELY
THERE
WILL
BE
SHORT
READING
ASSIGNMENTS
FOR
ALL
CLASSES
SEE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
AND
STUDENTS
ARE
EXPECTED
TO
COME
TO
CLASS
HAVING
COMPLETED
THE
READINGS
THERE
IS
NO
PENALTY
FOR
MISSED
LECTURES
ATTEND
ALL
LABORATORY
SESSIONS
THESE
ARE
OPPORTUNITIES
TO
PRACTICE
THE
COURSE
MATERIAL
WITH
THE
GUIDANCE
OF
A
TEACHING
ASSISTANT
THERE
IS
NO
PENALTY
FOR
MISSED
LAB
SESSIONS
PROVIDED
THAT
THE
LAB
EXERCISES
ARE
COMPLETED
BY
THE
DUE
DATE
ATTEND
THE
MIDTERM
EXAMINATION
IF
YOU
HAVE
PART
TIME
WORK
OR
OTHER
RESPONSIBILITIES
PLEASE
TRY
TO
MAKE
ARRANGEMENTS
ASAP
THAT
WILL
ALLOW
YOU
TO
WRITE
THE
MIDTERM
WE
WILL
MAKE
ALTERNATIVE
ARRANGEMENTS
FOR
STUDENTS
WHO
CANNOT
ATTEND
THE
EVENING
SEATINGS
BUT
OBVIOUSLY
WE
WOULD
LIKE
TO
KEEP
THE
SPECIAL
ARRANGEMENTS
TO
A
MINIMUM
A
MISSED
MIDTERM
WILL
BE
COUNTED
AS
A
SCORE
OF
ZERO
EXCLUDING
EXEMPTIONS
DUE
TO
HEALTH
OR
COMPASSIONATE
GROUNDS
FINAL
EXAM
SCHEDULING
THE
REGISTRAR
SCHEDULES
ALL
FINAL
EXAMINATIONS
INCLUDING
DEFERRED
AND
SUPPLEMENTAL
EXAMINATIONS
STUDENTS
ARE
ADVISED
NOT
TO
MAKE
TRAVEL
ARRANGEMENTS
FOR
THE
EXAM
PERIOD
UNTIL
THE
OFFICIAL
EXAM
SCHEDULE
HAS
BEEN
POSTED
TUTORIALS
AND
HELP
SESSIONS
TUTORIALS
TUTORIALS
IN
A
LABORATORY
SETTING
ARE
MANDATORY
AND
INCLUDE
NEW
MATERIAL
NOT
PRESENTED
IN
CLASS
LECTURES
EMPHASIZE
THE
DATA
ORGANIZATION
CONCEPTS
USING
PSEUDOCODE
TUTORIALS
FOCUS
ON
HOW
TO
IMPLEMENT
IN
C
THE
CONCEPTS
STUDIED
IN
LECTURE
MATERIAL
PRESENTED
IN
TUTORIALS
MAY
APPEAR
ON
EXAMINATIONS
IF
YOU
MISS
A
TUTORIAL
SECTION
YOU
MAY
TRY
TO
ATTEND
ANOTHER
SECTION
DURING
THAT
WEEK
BUT
THERE
IS
CONSIDERABLE
RISK
YOU
WILL
NOT
BE
ABLE
TO
FIND
A
SEAT
HELP
SESSIONS
OBSTACLES
TO
PROGRESS
AND
COMPLETION
OF
ASSIGNMENTS
CAN
SOMETIMES
BE
PART
OF
THE
HOMEWORK
I
E
SOMETHING
WE
WANT
YOU
TO
THINK
ABOUT
CAREFULLY
AND
SOMETIMES
BEYOND
THE
SCOPE
OF
THE
COURSE
I
E
A
PROBLEM
THAT
YOU
CAN
T
REALLY
BE
EXPECTED
TO
MANAGE
IN
FIRST
YEAR
AND
IT
CAN
BE
NEARLY
IMPOSSIBLE
TO
TELL
THE
DIFFERENCE
WITHOUT
SOME
ADVICE
FROM
A
TA
OR
INSTRUCTOR
THERE
ARE
SEVERAL
HELP
SESSIONS
IN
THE
SPINKS
COMPUTER
LAB
THAT
ARE
SPECIFICALLY
FOR
CMPT
STUDENTS
THE
TAS
ARE
ALL
PREPARED
FOR
THE
ASSIGNMENTS
AND
LAB
QUESTIONS
WE
HIGHLY
RECOMMEND
YOU
TO
WORK
IN
THE
COMPUTER
LAB
BECAUSE
IT
IS
VERY
HELPFUL
IF
YOU
CAN
GET
HELP
WHEN
YOU
HAVE
DIFFICULTIES
THE
SCHEDULE
WILL
BE
ANNOUNCED
IN
THE
FIRST
TWO
WEEKS
OF
THE
TERM
ON
MOODLE
TEXTBOOK
INFORMATION
EXTENSIVE
NOTES
WILL
BE
PROVIDED
ON
THE
COURSE
MOODLE
SITE
REQUIRED
TEXTS
TBA
RECOMMENDED
TEXT
TBA
USEFUL
TEXTS
GOODRICH
TAMASSIA
AND
GOLDWATER
DATA
STRUCTURES
AND
ALGORITHMS
IN
PYTHON
WILEY
ISBN
SEDGEWICK
WAYNE
AND
DONDERO
INTRODUCTION
TO
PROGRAMMING
IN
PYTHON
ADDISON
WESLY
LECTURE
SCHEDULE
WEEK
INTRODUCTION
TO
SOFTWARE
DESIGN
PRINCIPLES
WEEK
PROGRAMMING
PRACTICE
GOOD
STYLE
DEFENSIVE
PROGRAMMING
WEEK
STACKS
AND
QUEUES
AND
THEIR
APPLICATIONS
WEEK
ALGORITHM
ANALYSIS
OR
WHY
YOUR
CODE
ISN
T
AS
GOOD
AS
YOU
THOUGHT
WEEK
ABSTRACT
DATA
TYPES
FOR
DESIGN
AND
TESTING
TESTING
YOUR
CODE
WEEK
TREES
BINARY
TREES
AND
BINARY
SEARCH
TREES
AND
THEIR
APPLICATIONS
WEEK
MORE
SOFTWARE
DEVELOPMENT
TECHNIQUES
ITERATIVE
DESIGN
TEST
DRIVEN
DESIGN
WEEK
OBJECTS
WEEK
GETTING
THE
MOST
OUT
OF
PYTHON
APIS
AND
INTERFACES
WEEK
TECHNIQUES
GREEDY
ALGORITHMS
AND
BACK
TRACKING
WEEK
LOOKING
BENEATH
PYTHON
UNDERSTANDING
THE
MACHINE
LEADS
TO
SPEED
WHEN
YOU
NEED
IT
WEEK
LOOKING
BEYOND
PYTHON
OTHER
LANGUAGES
POLICIES
RECORDING
OF
LECTURES
LECTURE
VIDEOS
WILL
BE
AVAILABLE
THROUGH
A
LINK
ON
THE
COURSE
MOODLE
SITE
LATE
ASSIGNMENTS
DUE
TO
THE
WEEKLY
ASSIGNMENT
SCHEDULE
LATE
SUBMISSIONS
CANNOT
BE
ACCEPTED
BE
SURE
TO
START
YOUR
ASSIGNMENTS
EARLY
AND
HAND
IN
PARTIAL
SOLUTIONS
FOR
PARTIAL
CREDIT
IF
NECESSARY
WE
UNDERSTAND
THAT
LEGITIMATE
EXCEPTIONAL
CIRCUMSTANCES
SOMETIMES
PREVENT
A
DEADLINE
FROM
BEING
MET
IF
YOU
FEEL
YOU
CANNOT
SUBMIT
AN
ASSIGNMENT
ON
TIME
PLEASE
TALK
TO
THE
COURSE
INSTRUCTOR
AT
LEAST
A
DAY
BEFORE
THE
ASSIGNMENT
IS
DUE
EXTENSIONS
ON
ASSIGNMENTS
WILL
BE
GRANTED
ONLY
BY
THE
COURSE
INSTRUCTOR
ALL
EXTENSION
REQUESTS
WILL
REQUIRE
SUITABLE
DOCUMENTATION
MISSED
ASSIGNMENTS
STUDENTS
ARE
EXPECTED
TO
ATTEMPT
AND
HOPEFULLY
COMPLETE
ALL
ASSIGNMENTS
AND
ALL
LABORATORY
EXERCISES
IT
BETTER
TO
SUBMIT
PARTIALLY
COMPLETED
ASSIGNMENTS
THAN
TO
SUBMIT
NOTHING
AT
ALL
A
MISSED
ASSIGNMENT
WILL
RECEIVE
A
SCORE
OF
ZERO
IF
YOU
MISS
AN
ASSIGNMENT
FOR
MEDICAL
OR
COMPASSIONATE
REASONS
CONTACT
YOUR
INSTRUCTOR
AS
SOON
AS
POSSIBLE
MISSED
EXAMINATIONS
STUDENTS
WHO
MISS
AN
EXAM
SHOULD
CONTACT
THE
INSTRUCTOR
AS
SOON
AS
POSSIBLE
IF
IT
IS
KNOWN
IN
ADVANCE
THAT
AN
EXAM
WILL
BE
MISSED
THE
INSTRUCTOR
SHOULD
BE
CONTACTED
BEFORE
THE
EXAM
A
STUDENT
WHO
IS
ABSENT
FROM
A
FINAL
EXAMINATION
DUE
TO
MEDICAL
COMPASSIONATE
OR
OTHER
VALID
REASONS
MAY
APPLY
TO
THE
COLLEGE
OF
ARTS
AND
SCIENCE
UNDERGRADUATE
STUDENT
OFFICE
FOR
A
DEFERRED
EXAM
APPLICATION
MUST
BE
MADE
WITHIN
THREE
BUSINESS
DAYS
OF
THE
MISSED
EXAMINATION
AND
BE
ACCOMPANIED
BY
SUPPORTING
DOCUMENTS
HTTP
ARTSANDSCIENCE
USASK
CA
STUDENTS
HELP
SUCCESS
PHP
INCOMPLETE
COURSE
WORK
AND
FINAL
GRADES
WHEN
A
STUDENT
HAS
NOT
COMPLETED
THE
REQUIRED
COURSE
WORK
WHICH
INCLUDES
ANY
ASSIGNMENT
OR
EXAMINATION
INCLUDING
THE
FINAL
EXAMINATION
BY
THE
TIME
OF
SUBMISSION
OF
THE
FINAL
GRADES
THEY
MAY
BE
GRANTED
AN
EXTENSION
TO
PERMIT
COMPLETION
OF
AN
ASSIGNMENT
OR
GRANTED
A
DEFERRED
EXAMINATION
IN
THE
CASE
OF
ABSENCE
FROM
A
FINAL
EXAMINATION
EXTENSIONS
PAST
THE
FINAL
EXAMINATION
DATE
FOR
THE
COMPLETION
OF
ASSIGNMENTS
MUST
BE
APPROVED
BY
THE
DEPARTMENT
HEAD
OR
DEAN
IN
NON
DEPARTMENTALIZED
COLLEGES
AND
MAY
EXCEED
THIRTY
DAYS
ONLY
IN
UNUSUAL
CIRCUMSTANCES
THE
STUDENT
MUST
APPLY
TO
THE
INSTRUCTOR
FOR
SUCH
AN
EXTENSION
AND
FURNISH
SATISFACTORY
REASONS
FOR
THE
DEFICIENCY
DEFERRED
FINAL
EXAMINATIONS
ARE
GRANTED
AS
PER
COLLEGE
POLICY
IN
THE
INTERIM
THE
INSTRUCTOR
WILL
SUBMIT
A
COMPUTED
PERCENTILE
GRADE
FOR
THE
CLASS
WHICH
FACTORS
IN
THE
INCOMPLETE
COURSEWORK
AS
A
ZERO
ALONG
WITH
A
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
IF
A
FAILING
GRADE
IN
THE
CASE
WHERE
THE
STUDENT
HAS
A
PASSING
PERCENTILE
GRADE
BUT
THE
INSTRUCTOR
HAS
INDICATED
IN
THE
COURSE
OUTLINE
THAT
FAILURE
TO
COMPLETE
THE
REQUIRED
COURSEWORK
WILL
RESULT
IN
FAILURE
IN
THE
COURSE
A
FINAL
GRADE
OF
WILL
BE
SUBMITTED
ALONG
WITH
A
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
IF
AN
EXTENSION
IS
GRANTED
AND
THE
REQUIRED
ASSIGNMENT
IS
SUBMITTED
WITHIN
THE
ALLOTTED
TIME
OR
IF
A
DEFERRED
EXAMINATION
IS
GRANTED
AND
WRITTEN
IN
THE
CASE
OF
ABSENCE
FROM
THE
FINAL
EXAMINATION
THE
INSTRUCTOR
WILL
SUBMIT
A
REVISED
ASSIGNED
FINAL
PERCENTAGE
GRADE
THE
GRADE
CHANGE
WILL
REPLACE
THE
PREVIOUS
GRADE
AND
ANY
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
WILL
BE
REMOVED
A
STUDENT
CAN
PASS
A
COURSE
ON
THE
BASIS
OF
WORK
COMPLETED
IN
THE
COURSE
PROVIDED
THAT
ANY
INCOMPLETE
COURSE
WORK
HAS
NOT
BEEN
DEEMED
MANDATORY
BY
THE
INSTRUCTOR
IN
THE
COURSE
OUTLINE
AND
OR
BY
COLLEGE
REGULATIONS
FOR
ACHIEVING
A
PASSING
GRADE
HTTP
POLICIES
USASK
CA
POLICIES
ACADEMIC
AFFAIRS
ACADEMIC
COURSES
PHP
FOR
POLICIES
GOVERNING
EXAMINATIONS
AND
GRADING
STUDENTS
ARE
REFERRED
TO
THE
ASSESSMENT
OF
STUDENTS
SECTION
OF
THE
UNIVERSITY
POLICY
ACADEMIC
COURSES
CLASS
DELIVERY
EXAMINATIONS
AND
ASSESSMENT
OF
STUDENT
LEARNING
HTTP
POLICIES
USASK
CA
POLICIES
ACADEMIC
AFFAIRS
ACADEMIC
COURSES
PHP
ACADEMIC
HONESTY
THE
UNIVERSITY
OF
SASKATCHEWAN
IS
COMMITTED
TO
THE
HIGHEST
STANDARDS
OF
ACADEMIC
INTEGRITY
AND
HONESTY
STUDENTS
ARE
EXPECTED
TO
BE
FAMILIAR
WITH
THESE
STANDARDS
REGARDING
ACADEMIC
HONESTY
AND
TO
UPHOLD
THE
POLICIES
OF
THE
UNIVERSITY
IN
THIS
RESPECT
STUDENTS
ARE
PARTICULARLY
URGED
TO
FAMILIARIZE
THEMSELVES
WITH
THE
PROVISIONS
OF
THE
STUDENT
CONDUCT
APPEALS
SECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AND
AVOID
ANY
BEHAVIOR
THAT
COULD
POTENTIALLY
RESULT
IN
SUSPICIONS
OF
CHEATING
PLAGIARISM
MISREPRESENTATION
OF
FACTS
AND
OR
PARTICIPATION
IN
AN
OFFENCE
ACADEMIC
DISHONESTY
IS
A
SERIOUS
OFFENCE
AND
CAN
RESULT
IN
SUSPENSION
OR
EXPULSION
FROM
THE
UNIVERSITY
ALL
STUDENTS
SHOULD
READ
AND
BE
FAMILIAR
WITH
THE
REGULATIONS
ON
ACADEMIC
STUDENT
MISCONDUCT
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
STUDENTACADEMICMISCONDUCT
PDF
AS
WELL
AS
THE
STANDARD
OF
STUDENT
CONDUCT
IN
NON
ACADEMIC
MATTERS
AND
PROCEDURES
FOR
RESOLUTION
OF
COMPLAINTS
AND
APPEALS
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
STUDENTNON
ACADEMICMISCONDUCT
PDF
ACADEMIC
HONESTY
IS
ALSO
DEFINED
AND
DESCRIBED
IN
THE
DEPARTMENT
OF
COMPUTER
SCIENCE
STATEMENT
ON
ACADEMIC
HONESTY
HTTP
WWW
CS
USASK
CA
STUDENTS
ACADEMIC
HONESTY
INDEX
PHP
FOR
MORE
INFORMATION
ON
WHAT
ACADEMIC
INTEGRITY
MEANS
FOR
STUDENTS
SEE
THE
STUDENT
CONDUCT
APPEALS
SECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AT
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
FORMS
INTEGRITYDEFINED
PDF
EXAMINATIONS
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
STUDENTS
WHO
HAVE
DISABILITIES
LEARNING
MEDICAL
PHYSICAL
OR
MENTAL
HEALTH
ARE
STRONGLY
ENCOURAGED
TO
REGISTER
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
IF
THEY
HAVE
NOT
ALREADY
DONE
SO
STUDENTS
WHO
SUSPECT
THEY
MAY
HAVE
DISABILITIES
SHOULD
CONTACT
DSS
FOR
ADVICE
AND
REFERRALS
IN
ORDER
TO
ACCESS
DSS
PROGRAMS
AND
SUPPORTS
STUDENTS
MUST
FOLLOW
DSS
POLICY
AND
PROCEDURES
FOR
MORE
INFORMATION
CHECK
HTTP
STUDENTS
USASK
CA
HEALTH
CENTRES
DISABILITY
SERVICES
FOR
STUDENTS
PHP
OR
CONTACT
DSS
AT
OR
DSS
USASK
CA
STUDENTS
REGISTERED
WITH
DSS
MAY
REQUEST
ALTERNATIVE
ARRANGEMENTS
FOR
MID
TERM
AND
FINAL
EXAMINATIONS
STUDENTS
MUST
ARRANGE
SUCH
ACCOMMODATIONS
THROUGH
DSS
BY
THE
STATED
DEADLINES
INSTRUCTORS
SHALL
PROVIDE
THE
EXAMINATIONS
FOR
STUDENTS
WHO
ARE
BEING
ACCOMMODATED
BY
THE
DEADLINES
ESTABLISHED
BY
DSS
COURSE
SYLLABUS
CMPT
INTRODUCTION
TO
CREATIVE
COMPUTING
NOTE
THIS
IS
A
PRELIMINARY
VERSION
OF
THE
SYLLABUS
SOME
DETAILS
RELATING
TO
THE
COURSE
OFFERING
E
G
THE
NUMBER
OF
ASSIGNMENTS
OR
THE
WEIGHT
OF
THE
FINAL
EXAM
MAY
CHANGE
SLIGHTLY
WITH
THE
FINAL
VERSION
THIS
INFORMATION
IS
PROVIDED
AS
A
CONVENIENCE
FOR
STUDENTS
AND
SHOULD
NOT
BE
TAKEN
AS
THE
FINAL
WORD
AS
LONG
AS
THIS
NOTICE
APPEARS
NOTE
THIS
COURSE
REPLACES
CMPT
CATALOGUE
DESCRIPTION
CONCEPTS
IN
COMPUTING
SUCH
AS
ALGORITHMS
PROBLEM
SOLVING
AND
PROGRAMMING
ARE
EXPLORED
USING
INTERACTIVE
MULTIMEDIA
SYSTEMS
AS
THE
CREATIVE
FOCUS
BASIC
SKILLS
IN
PROBLEM
SOLVING
PROGRAMMING
DESIGN
AND
INTERACTION
EVENT
BASED
BEHAVIOUR
AND
PROTOTYPING
ARE
DEVELOPED
RESTRICTIONS
RECOMMENDED
FOR
STUDENTS
WHO
DO
NOT
HAVE
COMPUTER
SCIENCE
CMPT
CAN
BE
TAKEN
FOR
CREDIT
AFTER
THE
COMPLETION
OF
CMPT
BUT
CMPT
CANNOT
BE
TAKEN
FOR
CREDIT
AFTER
COMPLETION
OF
CMPT
STUDENTS
WITH
CREDIT
FOR
CMPT
CMPT
CMPT
OR
CMPT
CANNOT
OBTAIN
CREDIT
FOR
CMPT
CMPT
WILL
COUNT
AS
A
OPEN
ELECTIVE
FOR
STUDENTS
IN
INTERACTIVE
SYSTEMS
DESIGN
COMPUTER
SCIENCE
AND
BIOINFORMATICS
PROGRAMS
WHO
IS
THIS
COURSE
INTENDED
FOR
THE
CREATIVE
COMPUTING
CMPT
COURSE
IS
DESIGNED
TO
BE
A
CHALLENGING
AND
FUN
INTRODUCTION
TO
COMPUTING
FOR
STUDENTS
WHO
HAVE
LITTLE
OR
NO
BACKGROUND
IN
COMPUTER
SCIENCE
OR
PROGRAMMING
THE
COURSE
EMPHASIZES
BUILDING
COMPUTER
PROGRAMS
IN
A
GRAPHICAL
AND
INTERACTIVE
ENVIRONMENT
USING
THE
PYTHON
PROGRAMMING
LANGUAGE
WHICH
IS
A
USEFUL
TOOL
FOR
EVERYONE
CMPT
STARTS
WITH
NO
ASSUMPTIONS
ABOUT
YOUR
BACKGROUND
IN
COMPUTER
SCIENCE
IF
YOU
NEVER
HAD
THE
OPPORTUNITY
TO
STUDY
PROGRAMMING
BEFORE
THIS
IS
AN
EXCELLENT
PLACE
TO
START
YOU
WON
T
BE
THE
ONLY
ONE
IN
THE
CLASS
WHO
HAS
NEVER
DONE
ANY
PROGRAMMING
IN
FACT
STUDENTS
WHO
HAVE
DONE
PROGRAMMING
BEFORE
HAVE
THEIR
OWN
STARTING
POINT
CMPT
STUDENTS
WHO
FINISH
CMPT
CAN
BE
CONFIDENT
MOVING
ON
TO
CMPT
IN
OUR
EXPERIENCE
STUDENTS
WHO
LEARN
COMPUTER
SCIENCE
WITHOUT
ANY
BACKGROUND
IN
PROGRAMMING
DO
AS
WELL
AS
OR
BETTER
THAN
STUDENTS
WHO
HAVE
SOME
BACKGROUND
SO
IF
YOU
HAVE
TAKEN
CMPT
YOU
WILL
BE
PERFECTLY
PREPARED
TO
TAKE
CMPT
COURSE
OVERVIEW
WE
VE
DESIGNED
THIS
COURSE
TO
BE
A
CHALLENGING
AND
FUN
INTRODUCTION
TO
COMPUTING
FOR
STUDENTS
WHO
HAVE
LITTLE
OR
NO
BACKGROUND
IN
COMPUTER
SCIENCE
OR
PROGRAMMING
IF
YOU
ALREADY
HAVE
OR
CMPT
YOU
SHOULD
TAKE
CMPT
YOU
LL
START
BY
LEARNING
TO
PROGRAM
USING
THE
PYTHON
LANGUAGE
IN
PROCESSING
A
FRIENDLY
GRAPHICAL
INTERACTIVE
ENVIRONMENT
YOU
LL
BE
ABLE
TO
CREATE
PROGRAMS
THAT
EMPLOY
ALL
THE
COMPUTATIONAL
IDEAS
IN
APPLICATIONS
THAT
EMPHASIZE
GRAPHICS
ANIMATIONS
AND
INTERACTIVE
SYSTEMS
AS
YOU
PROGRESS
THROUGH
THE
COURSE
YOU
LL
EXTEND
YOUR
UNDERSTANDING
OF
COMPUTATION
USING
PYTHON
YOU
LL
BEGIN
TO
SEE
WHY
IT
IS
USED
BY
SCIENTISTS
SCHOLARS
SOFTWARE
DEVELOPERS
ENGINEERS
YOU
LL
BE
VERY
WELL
PREPARED
TO
TAKE
CMPT
THE
NEXT
COURSE
WHICH
ALSO
TEACHES
COMPUTER
SCIENCE
USING
PYTHON
COURSE
OBJECTIVES
AFTER
COMPLETING
THIS
COURSE
STUDENTS
WILL
BE
ABLE
TO
DESIGN
AND
IMPLEMENT
SIMPLE
PYTHON
PROGRAMS
FROM
SCRATCH
TEST
AND
DEBUG
SIMPLE
PYTHON
PROGRAMS
EMPLOY
CONDITIONALS
AND
LOOPS
IN
SIMPLE
PYTHON
PROGRAMS
EMPLOY
VARIABLES
LISTS
AND
DICTIONARIES
IN
SIMPLE
PYTHON
PROGRAMS
DEFINE
AND
CALL
PYTHON
FUNCTIONS
IN
PYTHON
PROGRAMS
TRACE
THROUGH
THE
EXECUTION
OF
SIMPLE
PYTHON
PROGRAMS
BY
HAND
IMPLEMENT
SIMPLE
NUMERICAL
ALGORITHMS
SUCH
AS
COMPUTING
THE
AVERAGE
OF
A
LIST
OF
NUMBERS
FINDING
THE
MIN
MAX
OF
A
LIST
ACM
LEARNING
OUTCOMES
THIS
COURSE
ACHIEVES
THE
FOLLOWING
LEARNING
OUTCOMES
LISTED
ALPHABETICALLY
FROM
THE
ACM
COMPUTER
SCIENCE
CURRICULUM
GUIDELINES
HTTPS
WWW
ACM
ORG
EDUCATION
FINAL
REPORT
PDF
EXPLAIN
THE
CHARACTERISTICS
AND
DEFINING
PROPERTIES
OF
ALGORITHMS
AND
HOW
THEY
RELATE
TO
MACHINE
PROCESSING
FAMILIARITY
C
P
ANALYZE
SIMPLE
PROBLEM
STATEMENTS
TO
IDENTIFY
RELEVANT
INFORMATION
AND
SELECT
APPROPRIATE
PROCESSING
TO
SOLVE
THE
PROBLEM
ASSESSMENT
C
P
DISCUSS
THE
IMPORTANCE
OF
ALGORITHMS
IN
THE
PROBLEM
SOLVING
PROCESS
FAMILIARITY
SDF
AD
CREATE
ALGORITHMS
FOR
SOLVING
SIMPLE
PROBLEMS
USAGE
SDF
AD
ANALYZE
AND
EXPLAIN
THE
BEHAVIOR
OF
SIMPLE
PROGRAMS
INVOLVING
THE
FUNDAMENTAL
PROGRAMMING
CONSTRUCTS
VARIABLES
EXPRESSIONS
ASSIGNMENTS
I
O
CONTROL
CONSTRUCTS
FUNCTIONS
PARAMETER
PASSING
AND
RECURSION
ASSESSMENT
SDF
FPC
IDENTIFY
AND
DESCRIBE
USES
OF
PRIMITIVE
DATA
TYPES
FAMILIARITY
SDF
FPC
WRITE
PROGRAMS
THAT
USE
PRIMITIVE
DATA
TYPES
USAGE
SDF
FPC
MODIFY
AND
EXPAND
SHORT
PROGRAMS
THAT
USE
STANDARD
CONDITIONAL
AND
ITERATIVE
CONTROL
STRUCTURES
AND
FUNCTIONS
USAGE
SDF
FPC
DESIGN
IMPLEMENT
TEST
AND
DEBUG
A
PROGRAM
THAT
USES
EACH
OF
THE
FOLLOWING
FUNDAMENTAL
PROGRAMMING
CONSTRUCTS
BASIC
COMPUTATION
SIMPLE
I
O
STANDARD
CONDITIONAL
AND
ITERATIVE
STRUCTURES
THE
DEFINITION
OF
FUNCTIONS
AND
PARAMETER
PASSING
USAGE
SDF
FPC
CHOOSE
APPROPRIATE
CONDITIONAL
AND
ITERATION
CONSTRUCTS
FOR
A
GIVEN
PROGRAMMING
TASK
ASSESSMENT
SDF
FPC
WRITE
PROGRAMS
THAT
USE
LISTS
AND
MAPS
PARTIAL
SDF
FPC
IMPLEMENT
BASIC
NUMERICAL
ALGORITHMS
USAGE
AL
FDSA
STUDENT
EVALUATION
GRADING
SCHEME
LAB
EXERCISES
AT
EACH
ASSIGNMENTS
AT
EACH
MIDTERM
EXAM
FINAL
EXAM
TOTAL
CRITERIA
THAT
MUST
BE
MET
TO
PASS
STUDENTS
MUST
WRITE
THE
FINAL
EXAM
A
STUDENT
WHO
DOES
NOT
WRITE
THE
FINAL
EXAM
WILL
RECEIVE
A
GRADE
OF
AT
MOST
IN
THE
COURSE
ATTENDANCE
EXPECTATION
ATTEND
EVERY
CLASS
AND
PARTICIPATE
ACTIVELY
THERE
IS
NO
PENALTY
FOR
MISSED
LECTURES
ATTEND
ALL
LABORATORY
TUTORIAL
SESSIONS
THESE
ARE
OPPORTUNITIES
TO
PRACTICE
THE
COURSE
MATERIAL
WITH
THE
GUIDANCE
OF
A
TEACHING
ASSISTANT
ATTEND
THE
MIDTERM
EXAMINATION
FINAL
EXAM
SCHEDULING
THE
REGISTRAR
SCHEDULES
ALL
FINAL
EXAMINATIONS
INCLUDING
DEFERRED
AND
SUPPLEMENTAL
EXAMINATIONS
STUDENTS
ARE
ADVISED
NOT
TO
MAKE
TRAVEL
ARRANGEMENTS
FOR
THE
EXAM
PERIOD
UNTIL
THE
OFFICIAL
EXAM
SCHEDULE
HAS
BEEN
POSTED
NOTE
ALL
STUDENTS
MUST
BE
PROPERLY
REGISTERED
IN
ORDER
TO
ATTEND
LECTURES
AND
RECEIVE
CREDIT
FOR
THIS
COURSE
TEXTBOOK
INFORMATION
RECOMMENDED
TEXTS
TBA
TOPIC
SCHEDULE
ALGORITHMS
AND
COMPUTATIONAL
THINKING
ABSTRACTION
AND
ENCAPSULATION
INTRODUCTION
TO
PROCESSING
PYTHONG
AND
VISUAL
OUTPUT
FUNCTIONS
PART
CALLING
AND
DEFINING
COLOUR
IN
PROCESSING
INTERACTION
AND
EVENTS
THE
INTERACTION
CYCLE
DATA
EXPRESSIONS
AND
VARIABLES
FUNCTIONS
PART
RETURN
VALUES
LIBRARIES
CONDITIONAL
BRANCHING
REPETITION
NESTING
CONSTRUCTS
AND
PROBLEM
SOLVING
LISTS
FILE
I
O
DICTIONARIES
ADVANCED
PROBLEM
SOLVING
AND
DATA
MANAGEMENT
POLICIES
RECORDING
OF
LECTURES
LECTURE
VIDEOS
WILL
BE
AVAILABLE
THROUGH
A
LINK
ON
THE
COURSE
MOODLE
SITE
LATE
ASSIGNMENTS
LATE
ASSIGNMENTS
WILL
ONLY
BE
ACCEPTED
UNDER
EXCEPTIONAL
CIRCUMSTANCES
BY
THE
PERMISSION
OF
THE
INSTRUCTOR
MISSED
ASSIGNMENTS
STUDENTS
ARE
EXPECTED
TO
ATTEMPT
AND
HOPEFULLY
COMPLETE
ALL
ASSIGNMENTS
AND
ALL
LABORATORY
EXERCISES
IT
BETTER
TO
SUBMIT
PARTIALLY
COMPLETED
ASSIGNMENTS
THAN
TO
SUBMIT
NOTHING
AT
ALL
A
MISSED
ASSIGNMENT
WILL
RECEIVE
A
SCORE
OF
ZERO
IF
YOU
MISS
AN
ASSIGNMENT
FOR
MEDICAL
OR
COMPASSIONATE
REASONS
CONTACT
YOUR
INSTRUCTOR
AS
SOON
AS
POSSIBLE
MISSED
EXAMINATIONS
STUDENTS
WHO
MISS
AN
EXAM
SHOULD
CONTACT
THE
INSTRUCTOR
AS
SOON
AS
POSSIBLE
IF
IT
IS
KNOWN
IN
ADVANCE
THAT
AN
EXAM
WILL
BE
MISSED
THE
INSTRUCTOR
SHOULD
BE
CONTACTED
BEFORE
THE
EXAM
A
STUDENT
WHO
IS
ABSENT
FROM
A
FINAL
EXAMINATION
DUE
TO
MEDICAL
COMPASSIONATE
OR
OTHER
VALID
REASONS
MAY
APPLY
TO
THE
COLLEGE
OF
ARTS
AND
SCIENCE
UNDERGRADUATE
STUDENT
OFFICE
FOR
A
DEFERRED
EXAM
APPLICATION
MUST
BE
MADE
WITHIN
THREE
BUSINESS
DAYS
OF
THE
MISSED
EXAMINATION
AND
BE
ACCOMPANIED
BY
SUPPORTING
DOCUMENTS
HTTP
ARTSANDSCIENCE
USASK
CA
STUDENTS
HELP
SUCCESS
PHP
INCOMPLETE
COURSE
WORK
AND
FINAL
GRADES
WHEN
A
STUDENT
HAS
NOT
COMPLETED
THE
REQUIRED
COURSE
WORK
WHICH
INCLUDES
ANY
ASSIGNMENT
OR
EXAMINATION
INCLUDING
THE
FINAL
EXAMINATION
BY
THE
TIME
OF
SUBMISSION
OF
THE
FINAL
GRADES
THEY
MAY
BE
GRANTED
AN
EXTENSION
TO
PERMIT
COMPLETION
OF
AN
ASSIGNMENT
OR
GRANTED
A
DEFERRED
EXAMINATION
IN
THE
CASE
OF
ABSENCE
FROM
A
FINAL
EXAMINATION
EXTENSIONS
PAST
THE
FINAL
EXAMINATION
DATE
FOR
THE
COMPLETION
OF
ASSIGNMENTS
MUST
BE
APPROVED
BY
THE
DEPARTMENT
HEAD
OR
DEAN
IN
NON
DEPARTMENTALIZED
COLLEGES
AND
MAY
EXCEED
THIRTY
DAYS
ONLY
IN
UNUSUAL
CIRCUMSTANCES
THE
STUDENT
MUST
APPLY
TO
THE
INSTRUCTOR
FOR
SUCH
AN
EXTENSION
AND
FURNISH
SATISFACTORY
REASONS
FOR
THE
DEFICIENCY
DEFERRED
FINAL
EXAMINATIONS
ARE
GRANTED
AS
PER
COLLEGE
POLICY
IN
THE
INTERIM
THE
INSTRUCTOR
WILL
SUBMIT
A
COMPUTED
PERCENTILE
GRADE
FOR
THE
CLASS
WHICH
FACTORS
IN
THE
INCOMPLETE
COURSEWORK
AS
A
ZERO
ALONG
WITH
A
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
IF
A
FAILING
GRADE
IN
THE
CASE
WHERE
THE
STUDENT
HAS
A
PASSING
PERCENTILE
GRADE
BUT
THE
INSTRUCTOR
HAS
INDICATED
IN
THE
COURSE
OUTLINE
THAT
FAILURE
TO
COMPLETE
THE
REQUIRED
COURSEWORK
WILL
RESULT
IN
FAILURE
IN
THE
COURSE
A
FINAL
GRADE
OF
WILL
BE
SUBMITTED
ALONG
WITH
A
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
IF
AN
EXTENSION
IS
GRANTED
AND
THE
REQUIRED
ASSIGNMENT
IS
SUBMITTED
WITHIN
THE
ALLOTTED
TIME
OR
IF
A
DEFERRED
EXAMINATION
IS
GRANTED
AND
WRITTEN
IN
THE
CASE
OF
ABSENCE
FROM
THE
FINAL
EXAMINATION
THE
INSTRUCTOR
WILL
SUBMIT
A
REVISED
ASSIGNED
FINAL
PERCENTAGE
GRADE
THE
GRADE
CHANGE
WILL
REPLACE
THE
PREVIOUS
GRADE
AND
ANY
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
WILL
BE
REMOVED
A
STUDENT
CAN
PASS
A
COURSE
ON
THE
BASIS
OF
WORK
COMPLETED
IN
THE
COURSE
PROVIDED
THAT
ANY
INCOMPLETE
COURSE
WORK
HAS
NOT
BEEN
DEEMED
MANDATORY
BY
THE
INSTRUCTOR
IN
THE
COURSE
OUTLINE
AND
OR
BY
COLLEGE
REGULATIONS
FOR
ACHIEVING
A
PASSING
GRADE
HTTP
POLICIES
USASK
CA
POLICIES
ACADEMIC
AFFAIRS
ACADEMIC
COURSES
PHP
FOR
POLICIES
GOVERNING
EXAMINATIONS
AND
GRADING
STUDENTS
ARE
REFERRED
TO
THE
ASSESSMENT
OF
STUDENTS
SECTION
OF
THE
UNIVERSITY
POLICY
ACADEMIC
COURSES
CLASS
DELIVERY
EXAMINATIONS
AND
ASSESSMENT
OF
STUDENT
LEARNING
HTTP
POLICIES
USASK
CA
POLICIES
ACADEMIC
AFFAIRS
ACADEMIC
COURSES
PHP
ACADEMIC
HONESTY
THE
UNIVERSITY
OF
SASKATCHEWAN
IS
COMMITTED
TO
THE
HIGHEST
STANDARDS
OF
ACADEMIC
INTEGRITY
AND
HONESTY
STUDENTS
ARE
EXPECTED
TO
BE
FAMILIAR
WITH
THESE
STANDARDS
REGARDING
ACADEMIC
HONESTY
AND
TO
UPHOLD
THE
POLICIES
OF
THE
UNIVERSITY
IN
THIS
RESPECT
STUDENTS
ARE
PARTICULARLY
URGED
TO
FAMILIARIZE
THEMSELVES
WITH
THE
PROVISIONS
OF
THE
STUDENT
CONDUCT
APPEALS
SECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AND
AVOID
ANY
BEHAVIOR
THAT
COULD
POTENTIALLY
RESULT
IN
SUSPICIONS
OF
CHEATING
PLAGIARISM
MISREPRESENTATION
OF
FACTS
AND
OR
PARTICIPATION
IN
AN
OFFENCE
ACADEMIC
DISHONESTY
IS
A
SERIOUS
OFFENCE
AND
CAN
RESULT
IN
SUSPENSION
OR
EXPULSION
FROM
THE
UNIVERSITY
ALL
STUDENTS
SHOULD
READ
AND
BE
FAMILIAR
WITH
THE
REGULATIONS
ON
ACADEMIC
STUDENT
MISCONDUCT
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
STUDENTACADEMICMISCONDUCT
PDF
AS
WELL
AS
THE
STANDARD
OF
STUDENT
CONDUCT
IN
NON
ACADEMIC
MATTERS
AND
PROCEDURES
FOR
RESOLUTION
OF
COMPLAINTS
AND
APPEALS
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
STUDENTNON
ACADEMICMISCONDUCT
PDF
ACADEMIC
HONESTY
IS
ALSO
DEFINED
AND
DESCRIBED
IN
THE
DEPARTMENT
OF
COMPUTER
SCIENCE
STATEMENT
ON
ACADEMIC
HONESTY
HTTP
WWW
CS
USASK
CA
STUDENTS
ACADEMIC
HONESTY
INDEX
PHP
FOR
MORE
INFORMATION
ON
WHAT
ACADEMIC
INTEGRITY
MEANS
FOR
STUDENTS
SEE
THE
STUDENT
CONDUCT
APPEALS
SECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AT
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
FORMS
INTEGRITYDEFINED
PDF
EXAMINATIONS
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
STUDENTS
WHO
HAVE
DISABILITIES
LEARNING
MEDICAL
PHYSICAL
OR
MENTAL
HEALTH
ARE
STRONGLY
ENCOURAGED
TO
REGISTER
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
IF
THEY
HAVE
NOT
ALREADY
DONE
SO
STUDENTS
WHO
SUSPECT
THEY
MAY
HAVE
DISABILITIES
SHOULD
CONTACT
DSS
FOR
ADVICE
AND
REFERRALS
IN
ORDER
TO
ACCESS
DSS
PROGRAMS
AND
SUPPORTS
STUDENTS
MUST
FOLLOW
DSS
POLICY
AND
PROCEDURES
FOR
MORE
INFORMATION
CHECK
HTTP
STUDENTS
USASK
CA
HEALTH
CENTRES
DISABILITY
SERVICES
FOR
STUDENTS
PHP
OR
CONTACT
DSS
AT
OR
DSS
USASK
CA
STUDENTS
REGISTERED
WITH
DSS
MAY
REQUEST
ALTERNATIVE
ARRANGEMENTS
FOR
MID
TERM
AND
FINAL
EXAMINATIONS
STUDENTS
MUST
ARRANGE
SUCH
ACCOMMODATIONS
THROUGH
DSS
BY
THE
STATED
DEADLINES
INSTRUCTORS
SHALL
PROVIDE
THE
EXAMINATIONS
FOR
STUDENTS
WHO
ARE
BEING
ACCOMMODATED
BY
THE
DEADLINES
ESTABLISHED
BY
DSS
COURSE
SYLLABUS
CMPT
INTRODUCTION
TO
COMPUTER
SCIENCE
NOTE
THIS
IS
A
PRELIMINARY
VERSION
OF
THE
SYLLABUS
SOME
DETAILS
RELATING
TO
THE
COURSE
OFFERING
E
G
THE
NUMBER
OF
ASSIGNMENTS
OR
THE
WEIGHT
OF
THE
FINAL
EXAM
MAY
CHANGE
SLIGHTLY
WITH
THE
FINAL
VERSION
THIS
INFORMATION
IS
PROVIDED
AS
A
CONVENIENCE
FOR
STUDENTS
AND
SHOULD
NOT
BE
TAKEN
AS
THE
FINAL
WORD
AS
LONG
AS
THIS
NOTICE
APPEARS
NOTE
THIS
COURSE
REPLACES
CMPT
IN
SEVERAL
DEGREE
PROGRAMS
BUT
IS
NOT
AN
EXACT
EQUIVALENT
CATALOGUE
DESCRIPTION
AN
INTRODUCTION
TO
COMPUTER
SCIENCE
AND
PROBLEM
SOLVING
USING
PROCEDURAL
PROGRAMMING
THIS
COURSE
INTRODUCES
THE
BASIC
COMPUTER
SCIENCE
AND
COMPUTER
PROGRAMMING
PRINCIPLES
OF
ALGORITHMS
ABSTRACTION
ENCAPSULATION
VARIABLES
CONDITIONAL
BRANCHING
REPETITION
FUNCTIONS
RECURSION
AND
ELEMENTARY
DATA
STRUCTURES
THESE
CONCEPTS
ARE
APPLIED
TO
PROBLEM
SOLVING
APPLICATIONS
SUCH
AS
DATA
ANALYSIS
AND
VISUALIZATION
SIMULATION
TEXT
PROCESSING
AND
IMAGE
PROCESSING
THE
PROGRAMMING
SKILLS
ACQUIRED
IN
THIS
COURSE
ARE
APPLICABLE
IN
ALL
FIELDS
OF
STUDY
THE
WORK
PLACE
AND
PERSONAL
PROJECTS
PREREQUISITE
ONE
OF
COMPUTER
SCIENCE
CMPT
CMPT
AND
ONE
OF
MATHEMATICS
OR
FOUNDATIONS
OF
MATHEMATICS
OR
PRE
CALCULUS
OR
MATH
OR
MATH
CAN
BE
TAKEN
CONCURRENTLY
NOTE
RECOMMENDED
FOR
STUDENTS
WITH
COMPUTER
SCIENCE
OR
CMPT
OR
CMPT
OR
FOR
STUDENTS
IN
PROGRAMS
THAT
REQUIRE
MATH
OR
EQUIVALENT
STUDENTS
WITH
CREDIT
FOR
CMPT
OF
CMPT
CANNOT
TAKE
THIS
COURSE
FOR
CREDIT
STUDENTS
MAY
NOT
TAKE
CMPT
OR
FOR
CREDIT
CONCURRENTLY
WITH
OR
AFTER
CMPT
WHO
IS
THIS
COURSE
INTENDED
FOR
THIS
COURSE
INTRODUCES
THE
BASIC
COMPUTER
SCIENCE
AND
COMPUTER
PROGRAMMING
PRINCIPLES
THESE
CONCEPTS
ARE
APPLIED
TO
PROBLEM
SOLVING
APPLICATIONS
SUCH
AS
DATA
ANALYSIS
AND
VISUALIZATION
SIMULATION
TEXT
PROCESSING
AND
IMAGE
PROCESSING
THE
PROGRAMMING
SKILLS
ACQUIRED
IN
THIS
COURSE
ARE
APPLICABLE
IN
ALL
FIELDS
OF
STUDY
THE
WORK
PLACE
AND
PERSONAL
PROJECTS
CMPT
IS
THE
STARTING
POINT
FOR
TWO
KINDS
OF
STUDENTS
STUDENTS
WITH
OR
ROUGHLY
EQUIVALENT
EXPERIENCE
CAN
START
WITH
CMPT
SOME
STUDENTS
MAY
ALREADY
HAVE
PROGRAMMING
EXPERIENCE
SO
WE
RECOMMEND
THAT
THEY
START
WITH
CMPT
INSTEAD
OF
CMPT
STUDENTS
WHO
ARE
PRETTY
GOOD
IN
MATH
SHOULD
FEEL
CONFIDENT
STARTING
AT
CMPT
EVEN
IF
THEY
VE
NOT
DONE
ANY
COMPUTER
SCIENCE
BEFORE
BY
PRETTY
GOOD
AT
MATH
WE
MEAN
THAT
YOU
RE
TAKING
MATH
OR
EQUIVALENT
OR
YOU
ALREADY
HAVE
CREDIT
FOR
IT
IMPORTANT
NOTE
CMPT
WON
T
NEED
ANY
PARTICULAR
MATH
KNOWLEDGE
WE
RE
FAR
MORE
INTERESTED
IN
THE
BY
PRODUCTS
OF
MATH
CLASS
GOOD
ANALYTICAL
SKILLS
LOGICAL
AND
DEDUCTIVE
REASONING
SKILLS
ATTENTION
TO
DETAIL
WHICH
ARE
ALL
IDENTIFIED
AS
USEFUL
IN
LEARNING
COMPUTER
SCIENCE
OF
COURSE
YOU
LL
NEED
A
LITTLE
MATH
EVERYONE
ALWAYS
NEEDS
A
LITTLE
MATH
BUT
NOTHING
TO
BE
INTIMIDATED
BY
COURSE
OBJECTIVES
BY
THE
COMPLETION
OF
THIS
COURSE
STUDENTS
WILL
BE
EXPECTED
TO
APPLY
PYTHON
DATA
STRUCTURES
INCLUDING
TUPLES
LISTS
AND
DICTIONARIES
IN
PROGRAMS
REQUIRING
BASIC
DATA
ORGANIZATION
APPLY
BASIC
COMPUTER
SCIENCE
STRATEGIES
RELATING
TO
PRACTICAL
FORMS
OF
ABSTRACTION
ENCAPSULATION
GENERALIZATION
AND
SPECIALIZATION
DEMONSTRATE
PROBLEM
SOLVING
SKILLS
APPLIED
TO
SIMPLE
SIMULATIONS
DATA
ANALYSIS
TEXT
AND
IMAGE
PROCESSING
DESIGN
AND
IMPLEMENT
RECURSIVE
FUNCTIONS
IN
PYTHON
COMPARE
AND
CONTRAST
LINEAR
SEARCH
AND
BINARY
SEARCH
IN
TERMS
OF
RUNTIME
AND
MEMORY
COSTS
COMPARE
AND
CONTRAST
INSERTION
SORT
QUICK
SORT
AND
MERGE
SORT
IN
TERMS
OF
RUNTIME
AND
MEMORY
COSTS
APPLY
SKILLS
IN
ELEMENTARY
SOFTWARE
TESTING
DEBUGGING
AND
TRACING
ACM
LEARNING
OUTCOMES
THIS
COURSE
ACHIEVES
THE
FOLLOWING
LEARNING
OUTCOMES
LISTED
ALPHABETICALLY
FROM
THE
ACM
COMPUTER
SCIENCE
CURRICULUM
GUIDELINES
HTTPS
WWW
ACM
ORG
EDUCATION
FINAL
REPORT
PDF
DISCUSS
THE
IMPORTANCE
OF
ALGORITHMS
IN
THE
PROBLEM
SOLVING
PROCESS
FAMILIARITY
SDF
AD
DISCUSS
HOW
A
PROBLEM
MAY
BE
SOLVED
BY
MULTIPLE
ALGORITHMS
EACH
WITH
DIFFERENT
PROPERTIES
FAMILIARITY
SDF
AD
ANALYZE
AND
EXPLAIN
THE
BEHAVIOR
OF
SIMPLE
PROGRAMS
INVOLVING
THE
FUNDAMENTAL
PROGRAMMING
CONSTRUCTS
VARIABLES
EXPRESSIONS
ASSIGNMENTS
I
O
CONTROL
CONSTRUCTS
FUNCTIONS
PARAMETER
PASSING
AND
RECURSION
ASSESSMENT
SDF
FPC
IDENTIFY
AND
DESCRIBE
USES
OF
PRIMITIVE
DATA
TYPES
FAMILIARITY
SDF
FPC
WRITE
PROGRAMS
THAT
USE
PRIMITIVE
DATA
TYPES
USAGE
SDF
FPC
MODIFY
AND
EXPAND
SHORT
PROGRAMS
THAT
USE
STANDARD
CONDITIONAL
AND
ITERATIVE
CONTROL
STRUCTURES
AND
FUNCTIONS
USAGE
SDF
FPC
DESIGN
IMPLEMENT
TEST
AND
DEBUG
A
PROGRAM
THAT
USES
EACH
OF
THE
FOLLOWING
FUNDAMENTAL
PROGRAMMING
CONSTRUCTS
BASIC
COMPUTATION
SIMPLE
I
O
STANDARD
CONDITIONAL
AND
ITERATIVE
STRUCTURES
THE
DEFINITION
OF
FUNCTIONS
AND
PARAMETER
PASSING
USAGE
SDF
FPC
CHOOSE
APPROPRIATE
CONDITIONAL
AND
ITERATION
CONSTRUCTS
FOR
A
GIVEN
PROGRAMMING
TASK
ASSESSMENT
SDF
FPC
DESCRIBE
THE
CONCEPT
OF
RECURSION
AND
GIVE
EXAMPLES
OF
ITS
USE
FAMILIARITY
SDF
FPC
IDENTIFY
THE
BASE
CASE
AND
THE
GENERAL
CASE
OF
A
RECURSIVELY
DEFINED
PROBLEM
ASSESSMENT
SDF
FPC
DISCUSS
THE
APPROPRIATE
USE
OF
BUILT
IN
DATA
STRUCTURES
FAMILIARITY
SDF
FDS
WRITE
PROGRAMS
THAT
USE
EACH
OF
THE
FOLLOWING
DATA
STRUCTURES
ARRAYS
RECORDS
STRUCTS
STRINGS
LINKED
LISTS
STACKS
QUEUES
SETS
AND
MAPS
USAGE
SDF
FDS
COMPARE
ALTERNATIVE
IMPLEMENTATIONS
OF
DATA
STRUCTURES
WITH
RESPECT
TO
PERFORMANCE
ASSESSMENT
SDF
FDS
EXPLAIN
WHAT
IS
MEANT
BY
BEST
AND
WORST
CASE
BEHAVIOR
OF
AN
ALGORITHM
PARTIAL
AL
BA
IMPLEMENT
BASIC
NUMERICAL
ALGORITHMS
USAGE
AL
FDSA
IMPLEMENT
SIMPLE
SEARCH
ALGORITHMS
AND
EXPLAIN
THE
DIFFERENCES
IN
THEIR
TIME
COMPLEXITIES
ASSESSMENT
AL
FDSA
BE
ABLE
TO
IMPLEMENT
COMMON
QUADRATIC
AND
O
N
LOG
N
SORTING
ALGORITHMS
PARTIAL
AL
FDSA
DISCUSS
THE
RUNTIME
AND
MEMORY
EFFICIENCY
OF
PRINCIPAL
ALGORITHMS
FOR
SORTING
SEARCHING
PARTIAL
AL
FDSA
EXPLAIN
AND
GIVE
EXAMPLES
OF
THE
BENEFITS
OF
SIMULATION
AND
MODELING
IN
A
RANGE
OF
IMPORTANT
APPLICATION
AREAS
PARTIAL
CN
MS
DEMONSTRATE
THE
ABILITY
TO
APPLY
THE
TECHNIQUES
OF
MODELING
AND
SIMULATION
TO
A
RANGE
OF
PROBLEM
AREAS
PARTIAL
CN
MS
ANALYZE
SIMPLE
PROBLEM
STATEMENTS
TO
IDENTIFY
RELEVANT
INFORMATION
AND
SELECT
APPROPRIATE
PROCESSING
TO
SOLVE
THE
PROBLEM
ASSESSMENT
CN
P
EXPLAIN
HOW
SIMPLE
DATA
IS
REPRESENTED
IN
A
MACHINE
PARTIAL
CN
P
COURSE
OVERVIEW
THIS
COURSE
CAN
BE
TAKEN
AS
A
SCIENCE
CREDIT
FOR
ARTS
SCIENCE
MAJORS
AND
IS
ALSO
A
REQUIRED
COURSE
IN
COMPUTER
SCIENCE
MAJOR
PROGRAMS
AND
A
FEW
OTHER
PROGRAMS
LECTURES
WILL
BE
OPPORTUNITIES
TO
APPLY
THE
CONCEPTS
COVERED
IN
THE
COURSE
DISCUSS
THEM
AS
WELL
AS
TO
ASK
QUESTIONS
AND
RECEIVE
GUIDANCE
WE
WILL
NOT
WASTE
CLASS
TIME
READING
POWERPOINT
SLIDES
TO
YOU
SHORT
READINGS
WILL
BE
ASSIGNED
BEFORE
EACH
CLASS
AND
YOU
WILL
BE
EXPECTED
TO
BE
PREPARED
TO
DISCUSS
ASK
QUESTIONS
AND
PARTICIPATE
LABORATORY
TIMES
ARE
LISTED
BELOW
THESE
ARE
YOUR
OPPORTUNITIES
TO
PUT
INTO
PRACTICE
THE
WEEK
MATERIAL
UNDER
THE
GUIDANCE
OF
A
TEACHING
ASSISTANT
THE
MIDTERM
EXAMINATION
SEE
ABOVE
FOR
THE
SCHEDULE
WILL
HAVE
SOME
MULTIPLE
CHOICE
AND
SOME
PROGRAMMING
AND
SHORT
ANSWER
QUESTIONS
THE
FINAL
EXAMINATION
IS
SCHEDULED
BY
THE
UNIVERSITY
ASSIGNMENTS
ARE
WEEKLY
TO
ENSURE
THAT
ALL
THE
RELEVANT
MATERIAL
IS
PUT
INTO
REGULAR
CONSISTENT
PRACTICE
EVEN
A
SIMPLE
ASSIGNMENT
CAN
TURN
INTO
A
TIME
CONSUMING
AFFAIR
IF
YOU
GET
STUCK
ON
SOMETHING
THAT
BLOCKS
YOUR
PROGRESS
WORKING
AT
THE
LAST
MINUTE
IS
A
GUARANTEED
SOURCE
OF
STRESS
AND
BURN
OUT
START
EVERY
ASSIGNMENT
EARLY
TO
ALLOW
YOURSELF
TIME
TO
CONSULT
IF
YOU
RUN
INTO
A
PROBLEM
PLEASE
MAKE
USE
OF
THE
TEACHING
RESOURCES
INSTRUCTORS
OFFICE
HOURS
TAS
LABS
LECTURES
DISCUSSION
FORUMS
ETC
AVAILABLE
TO
YOU
STUDENTS
WHO
COMPLETE
CMPT
WITH
DILIGENCE
WILL
BE
ABLE
TO
APPLY
THEIR
BASIC
PROGRAMMING
SKILLS
TO
BUILD
PROGRAMS
THAT
SOLVE
SIMPLE
COMPUTATIONAL
PROBLEMS
THAT
ARISE
IN
SCIENCE
AND
ENGINEERING
AND
SOMETIMES
IN
OTHER
FIELDS
OF
STUDY
REQUIRING
DATA
ANALYSIS
EXTEND
THEIR
KNOWLEDGE
OF
PYTHON
PROGRAMMING
LANGUAGE
BY
SELF
STUDY
APPLY
THEIR
KNOWLEDGE
OF
COMPUTER
SCIENCE
TO
LEARN
OTHER
PROGRAMMING
LANGUAGES
OR
SCRIPTING
ENVIRONMENTS
SUCH
AS
MATLAB
OR
R
A
PROGRAMMING
LANGUAGE
FOCUSED
ON
PERFORMING
STATISTICAL
ANALYSES
CONTINUE
THEIR
FORMAL
STUDY
OF
COMPUTER
SCIENCE
IN
COURSES
SUCH
AS
CMPT
STUDENT
EVALUATION
GRADING
SCHEME
ASSIGNMENTS
EACH
LAB
EXERCISES
EACH
MIDTERM
EXAM
FINAL
EXAM
TOTAL
THE
MIDTERM
IS
TENTATIVELY
SCHEDULED
FOR
THE
WEEK
AFTER
THANKSGIVING
FOR
ALL
SECTIONS
IN
THE
EVENING
THERE
WILL
BE
EXAM
SEATINGS
TENTATIVELY
STARTING
AT
AND
STUDENTS
IN
ANY
SECTION
MAY
ATTEND
ANY
OF
THE
SEATINGS
THOUGH
THERE
WILL
BE
A
SIGN
UP
PROCEDURE
ABOUT
A
WEEK
BEFORE
THE
EXAM
LOCATIONS
WILL
BE
ANNOUNCED
ON
THE
COURSE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
CLOSER
TO
THE
ACTUAL
DATE
THE
MIDTERM
WILL
CONSIST
OF
MULTIPLE
CHOICE
QUESTIONS
SOME
SHORT
ANSWER
QUESTIONS
AND
SOME
PROGRAMMING
QUESTIONS
CRITERIA
THAT
MUST
BE
MET
TO
PASS
STUDENTS
MUST
WRITE
THE
FINAL
EXAM
A
STUDENT
WHO
DOES
NOT
WRITE
THE
FINAL
EXAM
WILL
RECEIVE
A
GRADE
OF
AT
MOST
IN
THE
COURSE
ATTENDANCE
EXPECTATION
ATTEND
EVERY
CLASS
AND
PARTICIPATE
ACTIVELY
THERE
WILL
BE
SHORT
READING
ASSIGNMENTS
FOR
ALL
CLASSES
SEE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
AND
STUDENTS
ARE
EXPECTED
TO
COME
TO
CLASS
HAVING
COMPLETED
THE
READINGS
THERE
IS
NO
PENALTY
FOR
MISSED
LECTURES
ATTEND
ALL
LABORATORY
TUTORIAL
SESSIONS
THESE
ARE
OPPORTUNITIES
TO
PRACTICE
THE
COURSE
MATERIAL
WITH
THE
GUIDANCE
OF
A
TEACHING
ASSISTANT
THERE
IS
NO
PENALTY
FOR
MISSED
LAB
SESSIONS
PROVIDED
THAT
THE
LAB
EXERCISES
CODELAB
ARE
COMPLETED
BY
THE
DUE
DATE
FRIDAYS
ATTEND
THE
MIDTERM
EXAMINATION
IF
YOU
HAVE
PART
TIME
WORK
OR
OTHER
RESPONSIBILITIES
PLEASE
TRY
TO
MAKE
ARRANGEMENTS
ASAP
THAT
WILL
ALLOW
YOU
TO
WRITE
THE
MIDTERM
WE
WILL
MAKE
ALTERNATIVE
ARRANGEMENTS
FOR
STUDENTS
WHO
CANNOT
ATTEND
THE
EVENING
SEATINGS
BUT
OBVIOUSLY
WE
WOULD
LIKE
TO
KEEP
THE
SPECIAL
ARRANGEMENTS
TO
A
MINIMUM
A
MISSED
MIDTERM
WILL
BE
COUNTED
AS
A
SCORE
OF
ZERO
EXCLUDING
EXEMPTIONS
DUE
TO
HEALTH
OR
COMPASSIONATE
GROUNDS
FINAL
EXAM
SCHEDULING
THE
REGISTRAR
SCHEDULES
ALL
FINAL
EXAMINATIONS
INCLUDING
DEFERRED
AND
SUPPLEMENTAL
EXAMINATIONS
STUDENTS
ARE
ADVISED
NOT
TO
MAKE
TRAVEL
ARRANGEMENTS
FOR
THE
EXAM
PERIOD
UNTIL
THE
OFFICIAL
EXAM
SCHEDULE
HAS
BEEN
POSTED
NOTE
ALL
STUDENTS
MUST
BE
PROPERLY
REGISTERED
IN
ORDER
TO
ATTEND
LECTURES
AND
RECEIVE
CREDIT
FOR
THIS
COURSE
TEXTBOOK
INFORMATION
REQUIRED
TEXT
COURSE
READINGS
ARE
PROVIDED
FREE
OF
CHARGE
AND
ARE
AVAILABLE
ON
THE
CMPT
COURSE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
CODELAB
STUDENTS
ARE
REQUIRED
TO
PURCHASE
ACCESS
TO
CODELAB
FOR
CMPT
PLEASE
SEE
CODELAB
SETUP
SECTION
FOR
INSTRUCTIONS
REFERENCE
AND
OTHER
USEFUL
TEXTS
DIERBACH
CHARLES
INTRODUCTION
TO
COMPUTER
SCIENCE
USING
PYTHON
A
COMPUTATIONAL
PROBLEM
SOLVING
FOCUS
WILEY
ISBN
CODELAB
CODELAB
TURINGSCRAFT
IS
A
WEB
BASED
INTERACTIVE
PROGRAMMING
EXERCISE
SYSTEM
FOR
INTRO
PROGRAMMING
CLASSES
WE
WILL
BE
USING
IT
FOR
ALL
OF
YOUR
LAB
EXERCISES
YOU
ARE
REQUIRED
TO
PURCHASE
ACCESS
TO
CODELAB
TO
BE
ABLE
TO
COMPLETE
ALL
OF
THE
LAB
EXERCISES
THE
PROCEDURE
FOR
REGISTERING
FOR
CODELAB
WILL
BE
POSTED
ON
THE
COURSE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
NOTE
THAT
CODELAB
IS
AN
EXTERNAL
COMPANY
THAT
IS
NOT
AFFILIATED
WITH
THE
UNIVERSITY
OF
SASKATCHEWAN
IF
YOU
HAVE
TROUBLES
PROBLEMS
WITH
YOUR
CODELAB
ACCOUNT
THEN
YOU
MUST
CONTACT
CODELAB
TO
HAVE
THEM
RESOLVED
YOUR
INSTRUCTORS
ARE
NOT
ABLE
TO
ASSIST
WITH
CODELAB
ACCOUNT
PROBLEMS
REGISTRATION
FOR
CODELAB
WILL
COST
US
THIS
REGISTRATION
IS
NON
REFUNDABLE
SO
ONLY
REGISTER
BEFORE
SEPT
IF
YOU
ARE
SURE
THAT
YOU
WILL
NOT
BE
WITHDRAWING
FROM
CMPT
BEFORE
THEN
IF
YOU
DO
NOT
HAVE
A
CREDIT
CARD
WITH
WHICH
TO
PURCHASE
ACCESS
THEN
YOU
CAN
PURCHASE
A
PRE
LOADED
CREDIT
CARD
FROM
MOST
GROCERY
STORES
IN
THE
CITY
WE
SUGGEST
PURCHASING
A
CARD
IF
YOU
HAVE
TO
USE
A
PREPAID
CREDIT
CARD
NOTE
THE
BALANCE
ON
A
PREPAID
CREDIT
CARD
CAN
BE
USED
AT
MOST
ALL
LOCAL
STORES
TO
PARTIALLY
PAY
FOR
SOMETHING
FOR
EXAMPLE
IF
YOU
HAVE
ON
A
PREPAID
CREDIT
CARD
AND
BUY
SOMETHING
FOR
THEN
YOU
CAN
USE
THE
CARD
TO
PAY
FOR
AND
THEN
PAY
THE
REMAINDER
BY
CASH
DEBIT
ETC
LECTURE
SCHEDULE
INTRODUCTION
TO
PYTHON
HOURS
VARIABLES
EXPRESSIONS
CONSOLE
I
O
CONDITIONALS
LOOPS
FILE
I
O
DATA
STRUCTURES
HOURS
STRINGS
TUPLES
LISTS
DICTIONARIES
SETS
ARRAYS
FUNCTIONS
ABSTRACTION
AND
RECURSION
HOURS
DEFINING
FUNCTIONS
ENCAPSULATION
ABSTRACTION
GENERALIZATION
PROBLEM
VS
ALGORITHM
RECURSION
SOFTWARE
SKILLS
HOURS
TESTING
DEBUGGING
TRACING
SEARCHING
AND
SORTING
HOURS
LINEAR
AND
BINARY
SEARCH
INSERTION
SORT
QUICK
SORT
MERGE
SORT
ELEMENTARY
COMPLEXITY
ANALYSIS
APPLICATIONS
AND
PROBLEM
SOLVING
HOURS
SIMPLE
SIMULATIONS
DATA
ANALYSIS
AND
VISUALIZATION
TEXT
PROCESSING
IMAGE
PROCESSING
POLICIES
RECORDING
OF
LECTURES
LECTURE
VIDEOS
WILL
BE
AVAILABLE
THROUGH
A
LINK
ON
THE
COURSE
MOODLE
SITE
LATE
ASSIGNMENTS
UNLESS
OTHERWISE
NOTED
ALL
LAB
ASSIGNMENTS
ARE
DUE
FRIDAYS
AT
AND
REGULAR
ASSIGNMENTS
ARE
DUE
WEDNESDAYS
AT
BECAUSE
OF
THE
WEEKLY
NATURE
OF
ASSIGNMENTS
LATE
LAB
EXERCISES
OR
REGULAR
ASSIGNMENTS
CANNOT
BE
ACCEPTED
YES
THAT
HARSH
BUT
WE
HAVE
A
SCHEDULE
TO
KEEP
WE
MAY
MAKE
EXCEPTIONS
BUT
ONLY
FOR
EMERGENCIES
OR
EXCEPTIONAL
CIRCUMSTANCES
PLEASE
CONTACT
YOUR
INSTRUCTOR
IN
SUCH
CASES
MISSED
ASSIGNMENTS
STUDENTS
ARE
EXPECTED
TO
ATTEMPT
AND
HOPEFULLY
COMPLETE
ALL
ASSIGNMENTS
AND
ALL
LABORATORY
EXERCISES
IT
BETTER
TO
SUBMIT
PARTIALLY
COMPLETED
ASSIGNMENTS
THAN
TO
SUBMIT
NOTHING
AT
ALL
A
MISSED
ASSIGNMENT
WILL
RECEIVE
A
SCORE
OF
ZERO
IF
YOU
MISS
AN
ASSIGNMENT
FOR
MEDICAL
OR
COMPASSIONATE
REASONS
CONTACT
YOUR
INSTRUCTOR
AS
SOON
AS
POSSIBLE
MISSED
EXAMINATIONS
STUDENTS
WHO
MISS
AN
EXAM
SHOULD
CONTACT
THE
INSTRUCTOR
AS
SOON
AS
POSSIBLE
IF
IT
IS
KNOWN
IN
ADVANCE
THAT
AN
EXAM
WILL
BE
MISSED
THE
INSTRUCTOR
SHOULD
BE
CONTACTED
BEFORE
THE
EXAM
A
STUDENT
WHO
IS
ABSENT
FROM
A
FINAL
EXAMINATION
DUE
TO
MEDICAL
COMPASSIONATE
OR
OTHER
VALID
REASONS
MAY
APPLY
TO
THE
COLLEGE
OF
ARTS
AND
SCIENCE
UNDERGRADUATE
STUDENT
OFFICE
FOR
A
DEFERRED
EXAM
APPLICATION
MUST
BE
MADE
WITHIN
THREE
BUSINESS
DAYS
OF
THE
MISSED
EXAMINATION
AND
BE
ACCOMPANIED
BY
SUPPORTING
DOCUMENTS
HTTP
ARTSANDSCIENCE
USASK
CA
STUDENTS
HELP
SUCCESS
PHP
INCOMPLETE
COURSE
WORK
AND
FINAL
GRADES
WHEN
A
STUDENT
HAS
NOT
COMPLETED
THE
REQUIRED
COURSE
WORK
WHICH
INCLUDES
ANY
ASSIGNMENT
OR
EXAMINATION
INCLUDING
THE
FINAL
EXAMINATION
BY
THE
TIME
OF
SUBMISSION
OF
THE
FINAL
GRADES
THEY
MAY
BE
GRANTED
AN
EXTENSION
TO
PERMIT
COMPLETION
OF
AN
ASSIGNMENT
OR
GRANTED
A
DEFERRED
EXAMINATION
IN
THE
CASE
OF
ABSENCE
FROM
A
FINAL
EXAMINATION
EXTENSIONS
PAST
THE
FINAL
EXAMINATION
DATE
FOR
THE
COMPLETION
OF
ASSIGNMENTS
MUST
BE
APPROVED
BY
THE
DEPARTMENT
HEAD
OR
DEAN
IN
NON
DEPARTMENTALIZED
COLLEGES
AND
MAY
EXCEED
THIRTY
DAYS
ONLY
IN
UNUSUAL
CIRCUMSTANCES
THE
STUDENT
MUST
APPLY
TO
THE
INSTRUCTOR
FOR
SUCH
AN
EXTENSION
AND
FURNISH
SATISFACTORY
REASONS
FOR
THE
DEFICIENCY
DEFERRED
FINAL
EXAMINATIONS
ARE
GRANTED
AS
PER
COLLEGE
POLICY
IN
THE
INTERIM
THE
INSTRUCTOR
WILL
SUBMIT
A
COMPUTED
PERCENTILE
GRADE
FOR
THE
CLASS
WHICH
FACTORS
IN
THE
INCOMPLETE
COURSEWORK
AS
A
ZERO
ALONG
WITH
A
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
IF
A
FAILING
GRADE
IN
THE
CASE
WHERE
THE
STUDENT
HAS
A
PASSING
PERCENTILE
GRADE
BUT
THE
INSTRUCTOR
HAS
INDICATED
IN
THE
COURSE
OUTLINE
THAT
FAILURE
TO
COMPLETE
THE
REQUIRED
COURSEWORK
WILL
RESULT
IN
FAILURE
IN
THE
COURSE
A
FINAL
GRADE
OF
WILL
BE
SUBMITTED
ALONG
WITH
A
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
IF
AN
EXTENSION
IS
GRANTED
AND
THE
REQUIRED
ASSIGNMENT
IS
SUBMITTED
WITHIN
THE
ALLOTTED
TIME
OR
IF
A
DEFERRED
EXAMINATION
IS
GRANTED
AND
WRITTEN
IN
THE
CASE
OF
ABSENCE
FROM
THE
FINAL
EXAMINATION
THE
INSTRUCTOR
WILL
SUBMIT
A
REVISED
ASSIGNED
FINAL
PERCENTAGE
GRADE
THE
GRADE
CHANGE
WILL
REPLACE
THE
PREVIOUS
GRADE
AND
ANY
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
WILL
BE
REMOVED
A
STUDENT
CAN
PASS
A
COURSE
ON
THE
BASIS
OF
WORK
COMPLETED
IN
THE
COURSE
PROVIDED
THAT
ANY
INCOMPLETE
COURSE
WORK
HAS
NOT
BEEN
DEEMED
MANDATORY
BY
THE
INSTRUCTOR
IN
THE
COURSE
OUTLINE
AND
OR
BY
COLLEGE
REGULATIONS
FOR
ACHIEVING
A
PASSING
GRADE
HTTP
POLICIES
USASK
CA
POLICIES
ACADEMIC
AFFAIRS
ACADEMIC
COURSES
PHP
FOR
POLICIES
GOVERNING
EXAMINATIONS
AND
GRADING
STUDENTS
ARE
REFERRED
TO
THE
ASSESSMENT
OF
STUDENTS
SECTION
OF
THE
UNIVERSITY
POLICY
ACADEMIC
COURSES
CLASS
DELIVERY
EXAMINATIONS
AND
ASSESSMENT
OF
STUDENT
LEARNING
HTTP
POLICIES
USASK
CA
POLICIES
ACADEMIC
AFFAIRS
ACADEMIC
COURSES
PHP
ACADEMIC
HONESTY
THE
UNIVERSITY
OF
SASKATCHEWAN
IS
COMMITTED
TO
THE
HIGHEST
STANDARDS
OF
ACADEMIC
INTEGRITY
AND
HONESTY
STUDENTS
ARE
EXPECTED
TO
BE
FAMILIAR
WITH
THESE
STANDARDS
REGARDING
ACADEMIC
HONESTY
AND
TO
UPHOLD
THE
POLICIES
OF
THE
UNIVERSITY
IN
THIS
RESPECT
STUDENTS
ARE
PARTICULARLY
URGED
TO
FAMILIARIZE
THEMSELVES
WITH
THE
PROVISIONS
OF
THE
STUDENT
CONDUCT
APPEALS
SECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AND
AVOID
ANY
BEHAVIOR
THAT
COULD
POTENTIALLY
RESULT
IN
SUSPICIONS
OF
CHEATING
PLAGIARISM
MISREPRESENTATION
OF
FACTS
AND
OR
PARTICIPATION
IN
AN
OFFENCE
ACADEMIC
DISHONESTY
IS
A
SERIOUS
OFFENCE
AND
CAN
RESULT
IN
SUSPENSION
OR
EXPULSION
FROM
THE
UNIVERSITY
ALL
STUDENTS
SHOULD
READ
AND
BE
FAMILIAR
WITH
THE
REGULATIONS
ON
ACADEMIC
STUDENT
MISCONDUCT
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
STUDENTACADEMICMISCONDUCT
PDF
AS
WELL
AS
THE
STANDARD
OF
STUDENT
CONDUCT
IN
NON
ACADEMIC
MATTERS
AND
PROCEDURES
FOR
RESOLUTION
OF
COMPLAINTS
AND
APPEALS
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
STUDENTNON
ACADEMICMISCONDUCT
PDF
ACADEMIC
HONESTY
IS
ALSO
DEFINED
AND
DESCRIBED
IN
THE
DEPARTMENT
OF
COMPUTER
SCIENCE
STATEMENT
ON
ACADEMIC
HONESTY
HTTP
WWW
CS
USASK
CA
STUDENTS
ACADEMIC
HONESTY
INDEX
PHP
FOR
MORE
INFORMATION
ON
WHAT
ACADEMIC
INTEGRITY
MEANS
FOR
STUDENTS
SEE
THE
STUDENT
CONDUCT
APPEALS
SECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AT
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
FORMS
INTEGRITYDEFINED
PDF
EXAMINATIONS
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
STUDENTS
WHO
HAVE
DISABILITIES
LEARNING
MEDICAL
PHYSICAL
OR
MENTAL
HEALTH
ARE
STRONGLY
ENCOURAGED
TO
REGISTER
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
IF
THEY
HAVE
NOT
ALREADY
DONE
SO
STUDENTS
WHO
SUSPECT
THEY
MAY
HAVE
DISABILITIES
SHOULD
CONTACT
DSS
FOR
ADVICE
AND
REFERRALS
IN
ORDER
TO
ACCESS
DSS
PROGRAMS
AND
SUPPORTS
STUDENTS
MUST
FOLLOW
DSS
POLICY
AND
PROCEDURES
FOR
MORE
INFORMATION
CHECK
HTTP
STUDENTS
USASK
CA
HEALTH
CENTRES
DISABILITY
SERVICES
FOR
STUDENTS
PHP
OR
CONTACT
DSS
AT
OR
DSS
USASK
CA
STUDENTS
REGISTERED
WITH
DSS
MAY
REQUEST
ALTERNATIVE
ARRANGEMENTS
FOR
MID
TERM
AND
FINAL
EXAMINATIONS
STUDENTS
MUST
ARRANGE
SUCH
ACCOMMODATIONS
THROUGH
DSS
BY
THE
STATED
DEADLINES
INSTRUCTORS
SHALL
PROVIDE
THE
EXAMINATIONS
FOR
STUDENTS
WHO
ARE
BEING
ACCOMMODATED
BY
THE
DEADLINES
ESTABLISHED
BY
DSS
COURSE
SYLLABUS
CMPT
INTRODUCTION
TO
COMPUTER
SCIENCE
AND
PROGRAMMING
CATALOGUE
DESCRIPTION
GIVES
THE
FUNDAMENTALS
OF
PROGRAMMING
INCLUDING
FUNCTIONS
PROCEDURES
AND
ARRAYS
IT
INTRODUCES
OBJECT
ORIENTED
PROGRAMMING
AND
GUI
COMPONENTS
ALSO
SOME
BASIC
NUMERICAL
METHODS
AND
ENGI
NEERING
APPLICATIONS
ARE
PRESENTED
PREREQUISITE
MATHEMATICS
OR
FOUNDATIONS
OF
MATHEMATICS
OR
PRE
CALCULUS
WEBSITE
HTTP
MOODLE
CS
USASK
CA
LEARNING
OBJECTIVES
BY
THE
COMPLETION
OF
THIS
COURSE
STUDENTS
WILL
BE
EXPECTED
TO
READ
AND
WRITE
SIMPLE
ALGORITHMS
USING
PSEUDO
CODE
AND
FLOWCHARTS
DESIGN
AND
IMPLEMENT
SIMPLE
C
PROGRAMS
FROM
SCRATCH
TEST
AND
DEBUG
SIMPLE
C
PROGRAMS
TRANSLATE
A
SIMPLE
PSEUDO
CODE
OR
C
PROGRAM
INTO
A
FLOWCHART
EMPLOY
CONDITIONALS
AND
LOOPS
IN
SIMPLE
C
PROGRAMS
EMPLOY
VARIABLES
ARRAYS
AND
RECORDS
IN
SIMPLE
C
PROGRAMS
DEFINE
AND
CALL
C
FUNCTIONS
IN
C
PROGRAMS
DESIGN
AND
IMPLEMENT
SIMPLE
RECURSIVE
FUNCTIONS
IN
C
TRACE
THROUGH
THE
EXECUTION
OF
SIMPLE
C
PROGRAMS
BY
HAND
COMPARE
AND
CONTRAST
LINEAR
SEARCH
AND
BINARY
SEARCH
IN
TERMS
OF
RUNTIME
AND
MEMORY
COSTS
COMPARE
AND
CONTRAST
BUBBLE
SORT
INSERTION
SORT
AND
SELECTION
SORT
IN
TERMS
OF
RUNTIME
AND
MEMORY
COSTS
STUDENT
EVALUATION
GRADING
SCHEME
ASSIGNMENTS
EACH
MIDTERM
EXAM
OCT
LAB
EXERCISES
EACH
FINAL
EXAM
DATE
TBA
TOTAL
THE
MIDTERM
IS
SCHEDULED
FOR
THURSDAY
OCTOBER
IN
THE
EVENING
THE
LOCATION
WILL
BE
ANNOUNCED
ON
THE
COURSE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
CLOSER
TO
THE
ACTUAL
DATE
THE
MIDTERM
WILL
CONSIST
OF
MULTIPLE
CHOICE
QUESTIONS
SOME
SHORT
ANSWER
QUESTIONS
AND
SOME
PROGRAMMING
QUESTIONS
CRITERIA
THAT
MUST
BE
MET
TO
PASS
STUDENTS
MUST
WRITE
THE
FINAL
EXAM
A
STUDENT
WHO
DOES
NOT
WRITE
THE
FINAL
EXAM
WILL
RECEIVE
A
GRADE
OF
AT
MOST
IN
THE
COURSE
ATTENDANCE
EXPECTATIONS
ATTEND
EVERY
CLASS
AND
PARTICIPATE
ACTIVELY
THERE
WILL
BE
SHORT
READING
ASSIGNMENTS
FOR
ALL
CLASSES
SEE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
AND
STUDENTS
ARE
EXPECTED
TO
COME
TO
CLASS
HAVING
COM
PLETED
THE
READINGS
THERE
IS
NO
PENALTY
FOR
MISSED
LECTURES
ATTEND
ALL
LABORATORY
TUTORIAL
SESSIONS
THESE
ARE
OPPORTUNITIES
TO
PRACTICE
THE
COURSE
MATERIAL
WITH
THE
GUIDANCE
OF
A
TEACHING
ASSISTANT
THERE
IS
NO
PENALTY
FOR
MISSED
LAB
SESSIONS
PROVIDED
THAT
THE
LAB
EXERCISES
CODELAB
ARE
COMPLETED
BY
THE
DUE
DATE
FRIDAYS
ATTEND
THE
MIDTERM
EXAMINATION
IF
YOU
HAVE
PART
TIME
WORK
OR
OTHER
RESPONSIBILITIES
PLEASE
TRY
TO
MAKE
ARRANGEMENTS
ASAP
THAT
WILL
ALLOW
YOU
TO
WRITE
THE
MIDTERM
WE
WILL
MAKE
ALTERNATIVE
ARRANGEMENTS
FOR
STUDENTS
WHO
CANNOT
ATTEND
THE
EVENING
SEATINGS
BUT
OBVIOUSLY
WE
WOULD
LIKE
TO
KEEP
THE
SPECIAL
ARRANGEMENTS
TO
A
MINIMUM
A
MISSED
MIDTERM
WILL
BE
COUNTED
AS
A
SCORE
OF
ZERO
EXCLUDING
EXEMPTIONS
DUE
TO
HEALTH
OR
COMPASSIONATE
GROUNDS
NOTE
ALL
STUDENTS
MUST
BE
PROPERLY
REGISTERED
IN
ORDER
TO
ATTEND
LECTURES
AND
RECEIVE
CREDIT
FOR
THIS
COURSE
FINAL
EXAM
SCHEDULING
THE
REGISTRAR
SCHEDULES
ALL
FINAL
EXAMINATIONS
INCLUDING
DEFERRED
AND
SUPPLEMENTAL
EXAMINATIONS
STUDENTS
ARE
ADVISED
NOT
TO
MAKE
TRAVEL
ARRANGEMENTS
FOR
THE
EXAM
PERIOD
UNTIL
THE
OFFICIAL
EXAM
SCHEDULE
HAS
BEEN
POSTED
COURSE
OVERVIEW
THIS
COURSE
IS
REQUIRED
FOR
CERTAIN
ENGINEERING
MAJORS
IT
IS
EQUIVALENT
IN
CREDIT
TO
CMPT
LECTURES
WILL
BE
OPPORTUNITIES
TO
APPLY
THE
CONCEPTS
COVERED
IN
THE
COURSE
DISCUSS
THEM
AS
WELL
AS
TO
ASK
QUESTIONS
AND
RECEIVE
GUIDANCE
WE
WILL
NOT
WASTE
CLASS
TIME
READING
POWERPOINT
SLIDES
TO
YOU
SHORT
READINGS
WILL
BE
ASSIGNED
BEFORE
EACH
CLASS
AND
YOU
WILL
BE
EXPECTED
TO
BE
PREPARED
TO
DISCUSS
ASK
QUESTIONS
AND
PARTICIPATE
THESE
READINGS
ARE
COLLECTED
INTO
A
BOOK
LIKE
DOCUMENT
AVAILABLE
ON
THE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
LABORATORY
TIMES
ARE
LISTED
BELOW
THESE
ARE
YOUR
OPPORTUNITIES
TO
PUT
INTO
PRACTICE
THE
WEEK
MATERIAL
USING
A
COMPUTER
UNDER
THE
GUIDANCE
OF
A
TEACHING
ASSISTANT
WE
WILL
HAVE
TWO
MIDTERM
EXAMINATIONS
SEE
ABOVE
FOR
THE
SCHEDULE
THE
FINAL
EXAMINATION
IS
SCHEDULED
BY
THE
UNIVERSITY
AND
THE
EXAM
SCHEDULE
IS
USUALLY
RELEASED
IN
OCTOBER
ASSIGNMENTS
ARE
WEEKLY
TO
ENSURE
THAT
ALL
THE
RELEVANT
MATERIAL
IS
PUT
INTO
REGULAR
CONSISTENT
PRACTICE
SOME
EARLY
ASSIGNMENTS
WILL
SEEM
EASY
AND
LATER
ASSIGNMENTS
WILL
DEFINITELY
CHALLENGE
YOU
EVEN
A
SIMPLE
ASSIGNMENT
CAN
TURN
INTO
A
TIME
CONSUMING
AFFAIR
IF
YOU
GET
STUCK
ON
SOMETHING
THAT
BLOCKS
YOUR
PROGRESS
WORKING
AT
THE
LAST
MINUTE
IS
A
GUARANTEED
SOURCE
OF
STRESS
AND
BURN
OUT
TO
MANAGE
YOUR
WORKLOAD
YOU
MUST
LEARN
EFFECTIVE
TIME
MANAGEMENT
START
EVERY
ASSIGNMENT
EARLY
TO
ALLOW
YOURSELF
TIME
TO
CONSULT
IF
YOU
RUN
INTO
A
PROBLEM
STUDENTS
WHO
COMPLETE
CMPT
WITH
DILIGENCE
WILL
BE
ABLE
TO
APPLY
THEIR
BASIC
PROGRAMMING
SKILLS
TO
BUILD
APPLICATIONS
FOR
PRACTICAL
SITUATIONS
EXTEND
THEIR
KNOWLEDGE
OF
THE
C
PROGRAMMING
LANGUAGE
BY
SELF
STUDY
BUILD
ON
THEIR
KNOWLEDGE
OF
COMPUTER
SCIENCE
TO
LEARN
THE
BASICS
OF
ANY
OTHER
COMPUTER
PROGRAMMING
LANGUAGE
CONTINUE
THEIR
FORMAL
STUDY
OF
COMPUTER
SCIENCE
IN
COURSES
SUCH
AS
CMPT
AND
CMPT
PLEASE
MAKE
USE
OF
THE
TEACHING
RESOURCES
INSTRUCTORS
OFFICE
HOURS
TAS
LABS
LECTURES
DISCUSSION
FORUMS
ETC
AVAILABLE
TO
YOU
TEXTBOOK
INFORMATION
REQUIRED
TEXTS
AND
RESOURCES
THERE
IS
NO
REQUIRED
TEXTBOOK
FOR
THE
COURSE
CODELAB
STUDENTS
ARE
REQUIRED
TO
PURCHASE
ACCESS
TO
CODELAB
FOR
CMPT
PLEASE
SEE
CODELAB
SETUP
SECTION
FOR
INSTRUCTIONS
COURSE
READINGS
ARE
PROVIDED
FREE
OF
CHARGE
AND
ARE
AVAILABLE
ON
THE
CMPT
COURSE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
RECOMMENDED
TEXTS
CAY
HORSTMANN
C
FOR
EVERYONE
EDITION
WILEY
ISBN
LECTURE
SCHEDULE
THE
FOLLOWING
SCHEDULE
IS
APPROXIMATE
OTHER
TOPICS
MAY
BE
ADDED
IF
TIME
ALLOWS
TOPIC
DETAILS
INTRODUCTION
ADMINISTRATIVE
DETAILS
COURSE
OVERVIEW
WHAT
IS
COMPUTER
SCIENCE
ALGORITHMS
WHAT
IS
AN
ALGORITHM
PSEUDO
CODE
AND
FLOWCHARTS
ENCAPSULATION
AND
ABSTRACTION
ATOMIC
DATA
VARIABLES
AND
TYPES
COMPOUND
DATA
C
FUNDAMENTALS
VARIABLES
CONSOLE
IO
EXPRESSIONS
CONDITIONAL
BRANCHING
FUNCTIONS
WHILE
LOOPS
ONE
DIMENSIONAL
ARRAYS
FOR
LOOPS
AND
DO
WHILE
LOOPS
MULTI
DIMENSIONAL
ARRAYS
RECORDS
AND
RECORD
TYPES
RECURSION
A
DETAILED
COURSE
SCHEDULE
IS
AVAILABLE
ON
THE
COURSE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
LABORATORY
SECTIONS
LABORATORY
SESSIONS
BEGIN
THE
WEEK
OF
SEPTEMBER
SEE
THE
DETAILED
COURSE
SCHEDULE
WHICH
CAN
BE
FOUND
ON
THE
COURSE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
THE
LAB
SESSIONS
WILL
BE
HELD
IN
THE
TEACHING
LABS
LOCATED
ON
THE
FLOOR
OF
THE
SPINKS
ADDITION
OF
THE
THORVALDSON
BUILDING
SECTION
DAY
TIME
ROOM
TUE
THORV
TUE
THORV
THU
THORV
THU
THORV
TUE
THORV
THE
LABORATORY
SESSIONS
WILL
BE
GUIDED
BY
TEACHING
ASSISTANTS
THE
CONTACT
INFORMATION
FOR
THE
TEACHING
ASSISTANTS
WILL
BE
MADE
AVAILABLE
ON
COURSE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
A
LARGE
OPEN
ACCESS
LAB
ON
THE
FLOOR
OF
SPINKS
IS
AVAILABLE
FOR
STUDENT
USE
OUTSIDE
OF
LAB
TIME
MANY
TAS
AND
INSTRUCTORS
FOR
SEVERAL
CMPT
COURSES
WILL
HOLD
OFFICE
HOURS
IN
THE
OPEN
LAB
DON
T
BE
SHY
IF
YOU
SEE
AN
INSTRUCTOR
OR
TA
WHO
IS
NOT
YOUR
TA
OR
INSTRUCTOR
IN
THE
LAB
DON
T
HESITATE
TO
CALL
THEM
OVER
TO
HELP
YOU
CODELAB
CODELAB
TURINGSCRAFT
IS
A
WEB
BASED
INTERACTIVE
PROGRAMMING
EXERCISE
SYSTEM
FOR
INTRO
PROGRAMMING
CLASSES
WE
WILL
BE
USING
IT
FOR
ALL
OF
YOUR
LAB
EXERCISES
YOU
ARE
REQUIRED
TO
PURCHASE
ACCESS
TO
CODELAB
TO
BE
ABLE
TO
COMPLETE
ALL
OF
THE
LAB
EXERCISES
THE
PROCEDURE
FOR
REGISTERING
FOR
CODELAB
WILL
BE
POSTED
ON
THE
COURSE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
NOTE
THAT
CODELAB
IS
AN
EXTERNAL
COMPANY
THAT
IS
NOT
AFFILIATED
WITH
THE
UNIVERSITY
OF
SASKATCHEWAN
IF
YOU
HAVE
TROUBLES
PROBLEMS
WITH
YOUR
CODELAB
ACCOUNT
THEN
YOU
MUST
CONTACT
CODELAB
TO
HAVE
THEM
RESOLVED
YOUR
INSTRUCTORS
ARE
NOT
ABLE
TO
ASSIST
WITH
CODELAB
ACCOUNT
PROBLEMS
REGISTRATION
FOR
CODELAB
WILL
COST
US
THIS
REGISTRATION
IS
NON
REFUNDABLE
SO
ONLY
REGISTER
BEFORE
SEPT
IF
YOU
ARE
SURE
THAT
YOU
WILL
NOT
BE
WITHDRAWING
FROM
CMPT
BEFORE
THEN
IF
YOU
DO
NOT
HAVE
A
CREDIT
CARD
WITH
WHICH
TO
PURCHASE
ACCESS
THEN
YOU
CAN
PURCHASE
A
PRE
LOADED
CREDIT
CARD
FROM
MOST
GROCERY
STORES
IN
THE
CITY
WE
SUGGEST
PURCHASING
A
CARD
IF
YOU
HAVE
TO
USE
A
PREPAID
CREDIT
CARD
NOTE
THE
BALANCE
ON
A
PREPAID
CREDIT
CARD
CAN
BE
USED
AT
MOST
ALL
LOCAL
STORES
TO
PARTIALLY
PAY
FOR
SOMETHING
FOR
EXAMPLE
IF
YOU
HAVE
ON
A
PREPAID
CREDIT
CARD
AND
BUY
SOMETHING
FOR
THEN
YOU
CAN
USE
THE
CARD
TO
PAY
FOR
AND
THEN
PAY
THE
REMAINDER
BY
CASH
DEBIT
ETC
POLICIES
LATE
ASSIGNMENTS
UNLESS
OTHERWISE
NOTED
ALL
LAB
ASSIGNMENTS
ARE
DUE
FRIDAYS
AT
AND
REGULAR
ASSIGNMENTS
ARE
DUE
TUESDAYS
AT
BECAUSE
OF
THE
WEEKLY
NATURE
OF
ASSIGNMENTS
LATE
LAB
EXERCISES
OR
REGULAR
ASSIGNMENTS
CANNOT
BE
ACCEPTED
YES
THAT
HARSH
BUT
WE
HAVE
A
SCHEDULE
TO
KEEP
WE
MAY
MAKE
EXCEPTIONS
BUT
ONLY
FOR
EMERGENCIES
OR
EXCEPTIONAL
CIRCUMSTANCES
PLEASE
CONTACT
YOUR
INSTRUCTOR
IN
SUCH
CASES
MISSED
ASSIGNMENTS
STUDENTS
ARE
EXPECTED
TO
ATTEMPT
AND
HOPEFULLY
COMPLETE
ALL
ASSIGNMENTS
AND
ALL
LABORATORY
EXERCISES
IT
BETTER
TO
SUBMIT
PARTIALLY
COMPLETED
ASSIGNMENTS
THAN
TO
SUBMIT
NOTHING
AT
ALL
A
MISSED
ASSIGNMENT
WILL
RECEIVE
A
SCORE
OF
ZERO
IF
YOU
MISS
AN
ASSIGNMENT
FOR
MEDICAL
OR
COMPASSIONATE
REASONS
CONTACT
YOUR
INSTRUCTOR
AS
SOON
AS
POSSIBLE
MISSED
EXAMINATIONS
STUDENTS
WHO
HAVE
MISSED
AN
EXAM
OR
ASSIGNMENT
MUST
CONTACT
THEIR
INSTRUCTOR
AS
SOON
AS
POSSIBLE
ARRANGEMENTS
TO
MAKE
UP
THE
EXAM
MAY
BE
ARRANGED
WITH
THE
INSTRUCTOR
MISSED
EXAMS
THROUGHOUT
THE
YEAR
ARE
LEFT
UP
TO
THE
DISCRETION
OF
THE
INSTRUCTOR
IF
A
STUDENT
MAY
MAKE
UP
THE
EXAM
OR
WRITE
AT
A
DIFFERENT
TIME
IF
A
STUDENT
KNOWS
PRIOR
TO
THE
EXAM
THAT
SHE
HE
WILL
NOT
BE
ABLE
TO
ATTEND
THEY
SHOULD
LET
THE
INSTRUCTOR
KNOW
BEFORE
THE
EXAM
FINAL
EXAMS
A
STUDENT
WHO
IS
ABSENT
FROM
A
FINAL
EXAMINATION
THROUGH
NO
FAULT
OF
HIS
OR
HER
OWN
FOR
MEDICAL
OR
OTHER
VALID
REASONS
MAY
APPLY
TO
THE
COLLEGE
OF
ARTS
AND
SCIENCE
DEAN
OFFICE
THE
APPLICATION
MUST
BE
MADE
WITHIN
THREE
DAYS
OF
THE
MISSED
EXAMINATION
ALONG
WITH
SUPPORTING
DOCUMENTARY
EVIDENCE
DEFERRED
EXAMS
ARE
WRITTEN
DURING
THE
FEBRUARY
MID
TERM
BREAK
FOR
TERM
COURSES
AND
IN
EARLY
JUNE
FOR
TERM
AND
FULL
YEAR
COURSES
HTTP
WWW
ARTS
USASK
CA
STUDENTS
TRANSITION
TIPS
PHP
INCOMPLETE
COURSE
WORK
AND
FINAL
GRADES
WHEN
A
STUDENT
HAS
NOT
COMPLETED
THE
REQUIRED
COURSE
WORK
WHICH
INCLUDES
ANY
ASSIGNMENT
OR
EXAMINATION
INCLUDING
THE
FINAL
EXAMINATION
BY
THE
TIME
OF
SUBMISSION
OF
THE
FINAL
GRADES
THEY
MAY
BE
GRANTED
AN
EXTENSION
TO
PERMIT
COMPLETION
OF
AN
ASSIGNMENT
OR
GRANTED
A
DEFERRED
EXAMINATION
IN
THE
CASE
OF
ABSENCE
FROM
A
FINAL
EXAMINATION
EXTENSIONS
FOR
THE
COMPLETION
OF
ASSIGNMENTS
MUST
BE
APPROVED
BY
THE
DEPARTMENT
HEAD
OR
DEAN
IN
NON
DEPARTMENTALIZED
COLLEGES
AND
MAY
EXCEED
THIRTY
DAYS
ONLY
IN
UNUSUAL
CIRCUMSTANCES
THE
STUDENT
MUST
APPLY
TO
THE
INSTRUCTOR
FOR
SUCH
AN
EXTENSION
AND
FURNISH
SATISFACTORY
REASONS
FOR
THE
DEFICIENCY
DEFERRED
FINAL
EXAMINATIONS
ARE
GRANTED
AS
PER
COLLEGE
POLICY
IN
THE
INTERIM
THE
INSTRUCTOR
WILL
SUBMIT
A
COMPUTED
PERCENTILE
GRADE
FOR
THE
COURSE
WHICH
FACTORS
IN
THE
INCOMPLETE
COURSE
WORK
AS
A
ZERO
ALONG
WITH
A
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
IF
A
FAILING
GRADE
IN
THE
CASE
WHERE
THE
INSTRUCTOR
HAS
INDICATED
IN
THE
COURSE
OUTLINE
THAT
FAILURE
TO
COMPLETE
THE
REQUIRED
COURSE
WORK
WILL
RESULT
IN
FAILURE
IN
THE
COURSE
AND
THE
STUDENT
HAS
A
COMPUTED
PASSING
PERCENTILE
GRADE
A
FINAL
GRADE
OF
WILL
BE
SUBMITTED
ALONG
WITH
A
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
IF
AN
EXTENSION
IS
GRANTED
AND
THE
REQUIRED
ASSIGNMENT
IS
SUBMITTED
WITHIN
THE
ALLOTTED
TIME
OR
IF
A
DEFERRED
EXAMINATION
IS
GRANTED
AND
WRITTEN
IN
THE
CASE
OF
ABSENCE
FROM
THE
FINAL
EXAMINATION
THE
INSTRUCTOR
WILL
SUBMIT
A
REVISED
COMPUTED
FINAL
PERCENTAGE
GRADE
THE
GRADE
CHANGE
WILL
REPLACE
THE
PREVIOUS
GRADE
AND
ANY
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
WILL
BE
REMOVED
FOR
PROVISIONS
GOVERNING
EXAMINATIONS
AND
GRADING
STUDENTS
ARE
REFERRED
TO
THE
UNIVERSITY
COUNCIL
REGULATIONS
ON
EXAMINATIONS
SECTION
OF
THE
CALENDAR
UNIVERSITY
OF
SASKATCHEWAN
CALENDAR
ACADEMIC
COURSES
POLICY
ACADEMIC
HONESTY
THE
UNIVERSITY
POLICY
THE
UNIVERSITY
OF
SASKATCHEWAN
IS
COMMITTED
TO
THE
HIGHEST
STANDARDS
OF
ACADEMIC
INTEGRITY
AND
HONESTY
STU
DENTS
ARE
EXPECTED
TO
BE
FAMILIAR
WITH
THESE
STANDARDS
REGARDING
ACADEMIC
HONESTY
AND
TO
UPHOLD
THE
POLICIES
OF
THE
UNIVERSITY
IN
THIS
RESPECT
STUDENTS
ARE
PARTICULARLY
URGED
TO
FAMILIARIZE
THEMSELVES
WITH
THE
PROVISIONS
OF
THE
STUDENT
CONDUCT
APPEALS
SECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AND
AVOID
ANY
BEHAVIOUR
THAT
COULD
POTENTIALLY
RESULT
IN
SUSPICIONS
OF
CHEATING
PLAGIARISM
MISREPRESENTATION
OF
FACTS
AND
OR
PARTICIPATION
IN
AN
OFFENCE
ACADEMIC
DISHONESTY
IS
A
SERIOUS
OFFENCE
AND
CAN
RESULT
IN
SUSPENSION
OR
EXPULSION
FROM
THE
UNIVERSITY
ALL
STUDENTS
SHOULD
READ
AND
BE
FAMILIAR
WITH
THE
REGULATIONS
ON
ACADEMIC
STUDENT
MISCONDUCT
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
STUDENTACADEMICMISCONDUCT
PDF
AS
WELL
AS
THE
STANDARD
OF
STUDENT
CONDUCT
IN
NON
ACADEMIC
MATTERS
AND
PROCEDURES
FOR
RESOLUTION
OF
COM
PLAINTS
AND
APPEALS
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
STUDENTNON
ACADEMICMISCONDUCT
PDF
ACADEMIC
HONESTY
IS
ALSO
DEFINED
AND
DESCRIBED
IN
THE
DEPARTMENT
OF
COMPUTER
SCIENCE
STATEMENT
ON
ACADEMIC
HONESTY
HTTP
WWW
CS
USASK
CA
UNDERGRAD
HONESTY
PHP
FOR
MORE
INFORMATION
ON
WHAT
ACADEMIC
INTEGRITY
MEANS
FOR
STUDENTS
SEE
THE
STUDENT
CONDUCT
APPEALS
SECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AT
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
FORMS
INTEGRITYDEFINED
PDF
EXAMINATIONS
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
STUDENTS
WHO
HAVE
DISABILITIES
LEARNING
MEDICAL
PHYSICAL
OR
MENTAL
HEALTH
ARE
STRONGLY
ENCOURAGED
TO
REGIS
TER
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
IF
THEY
HAVE
NOT
ALREADY
DONE
SO
STUDENTS
WHO
SUSPECT
THEY
MAY
HAVE
DISABILITIES
SHOULD
CONTACT
DSS
FOR
ADVICE
AND
REFERRALS
IN
ORDER
TO
ACCESS
DSS
PROGRAMS
AND
SUPPORTS
STU
DENTS
MUST
FOLLOW
DSS
POLICY
AND
PROCEDURES
FOR
MORE
INFORMATION
CHECK
HTTP
WWW
STUDENTS
USASK
CA
DISABILITY
OR
CONTACT
DSS
AT
OR
DSS
USASK
CA
STUDENTS
REGISTERED
WITH
DSS
MAY
REQUEST
ALTERNATIVE
ARRANGEMENTS
FOR
MID
TERM
AND
FINAL
EXAMINATIONS
STUDENTS
MUST
ARRANGE
SUCH
ACCOMMODATIONS
THROUGH
DSS
BY
THE
STATED
DEADLINES
INSTRUCTORS
SHALL
PROVIDE
THE
EXAMINATIONS
FOR
STUDENTS
WHO
ARE
BEING
ACCOMMODATED
BY
THE
DEADLINES
ESTABLISHED
BY
DSS
VERSION
HISTORY
INITIAL
VERSION
ONE
MIDTERM
TENTATIVELY
SCHEDULED
COURSE
SYLLABUS
CMPT
COMPUTING
USING
EXCEL
AND
VBA
COURSE
DESCRIPTION
AN
INTRODUCTION
TO
THE
FUNDAMENTALS
OF
PROGRAMMING
USING
THE
VISUAL
BASIC
FOR
APPLICATIONS
VBA
LANGUAGE
IN
EXCEL
AN
EMPHASIS
IS
PLACED
ON
LEARNING
MANY
IMPORTANT
CONCEPTS
USED
TO
CREATE
USEFUL
COM
PUTER
PROGRAMS
IN
EXCEL
EXAMPLES
OF
SOME
CONCEPTS
INCLUDE
ARRAYS
PROCEDURES
AND
FUNCTIONS
THIS
COURSE
IS
MOSTLY
INTENDED
FOR
ENGINEERING
STUDENTS
AND
THEREFORE
SOME
INTRODUCTORY
NUMERICAL
METHODS
AND
ENGINEER
ING
APPLICATIONS
ARE
PRESENTED
SOME
GRAPHICAL
USER
INTERFACE
GUI
DESIGN
CONCEPTS
ARE
ALSO
INTRODUCED
COURSE
LEARNING
OUTCOMES
BY
THE
END
OF
THIS
COURSE
STUDENTS
SHOULD
BE
ABLE
TO
COMPLETE
THE
FOLLOWING
TASKS
STUDENTS
WILL
COMPLETE
A
VARIETY
OF
TASKS
USING
MICROSOFT
EXCEL
GIVEN
A
PROBLEM
STUDENTS
WILL
BE
ABLE
TO
CREATE
A
SET
OF
INSTRUCTIONS
IN
PLAIN
LANGUAGE
THAT
WHEN
FOLLOWED
WILL
RESULT
IN
A
CORRECT
SOLUTION
TO
THE
PROBLEM
STUDENTS
WILL
DESIGN
COMPUTER
PROGRAMS
USING
VBA
IN
EXCEL
TO
EXECUTE
A
SET
OF
INSTRUCTIONS
TO
SOLVE
A
GIVEN
PROBLEM
GIVEN
A
SAMPLE
OF
VBA
CODE
STUDENTS
WILL
BE
ABLE
TO
CORRECTLY
ANTICIPATE
THE
OUTCOME
OF
THE
CODE
OR
IDENTIFY
INCORRECT
VBA
SYNTAX
STUDENT
EVALUATION
GRADING
SCHEME
EQUALLY
WEIGHTED
ASSIGNMENTS
MIDTERM
EXAM
FEBRUARY
IN
CLASS
FINAL
EXAM
TOTAL
CRITERIA
THAT
MUST
BE
MET
TO
PASS
STUDENTS
MUST
WRITE
THE
FINAL
EXAM
IN
ORDER
TO
PASS
THE
COURSE
IF
A
STUDENT
DOES
NOT
WRITE
THE
FINAL
EXAM
THE
STUDENT
WILL
RECEIVE
A
TOTAL
GRADE
OF
AT
MOST
ATTENDANCE
EXPECTATION
ATTEND
EVERY
CLASS
AND
BE
PREPARED
TO
PARTICIPATE
THERE
IS
NO
PENALTY
FOR
POOR
ATTENDANCE
HOWEVER
ATTENDANCE
IS
AN
IMPORTANT
FACTOR
IN
SUCCESSFULLY
COMPLETING
THE
COURSE
STUDENTS
WILL
BE
EXPECTED
TO
UNDERSTAND
CONCEPTS
INTRODUCED
AND
DISCUSSED
IN
CLASS
STUDENTS
WILL
ALSO
BE
ASKED
TO
PARTICIPATE
IN
CLASS
ACTIVITIES
USING
MANY
OF
THE
COURSE
CONCEPTS
THESE
ACTIVITIES
ARE
DESIGNED
TO
HELP
IMPROVE
THE
UNDERSTANDING
OF
IMPORTANT
COURSE
MATERIAL
ATTEND
ALL
TUTORIAL
SESSIONS
THESE
SESSIONS
PROVIDE
STUDENTS
AN
OPPORTUNITY
TO
PRACTICE
CONCEPTS
LEARNT
IN
CLASS
DURING
THE
SESSION
TUTORIAL
INSTRUCTORS
WILL
REVIEW
COURSE
CONCEPTS
AND
ANSWER
STUDENT
QUES
TIONS
STUDENTS
WILL
ALSO
BE
GIVEN
AN
OPPORTUNITY
TO
WORK
ON
TUTORIAL
EXERCISES
AND
ASSIGNMENTS
DUE
TO
TIME
CONSTRAINTS
IT
IS
POSSIBLE
THAT
SOME
CONCEPTS
WILL
BE
INTRODUCED
IN
TUTORIAL
SESSIONS
AND
NOT
DURING
LECTURES
MATERIAL
INTRODUCED
IN
TUTORIAL
SESSIONS
MAY
BE
THE
SUBJECT
OF
ASSIGNMENT
QUESTIONS
OR
TESTED
ON
EITHER
THE
MID
TERM
OR
FINAL
EXAMINATION
FINAL
EXAM
SCHEDULING
THE
REGISTRAR
SCHEDULES
ALL
FINAL
EXAMINATIONS
INCLUDING
DEFERRED
AND
SUPPLEMENTAL
EXAMINATIONS
STUDENTS
ARE
ADVISED
NOT
TO
MAKE
TRAVEL
ARRANGEMENTS
FOR
THE
EXAM
PERIOD
UNTIL
THE
OFFICIAL
EXAM
SCHEDULE
HAS
BEEN
POSTED
NOTE
ALL
STUDENTS
MUST
BE
PROPERLY
REGISTERED
IN
ORDER
TO
ATTEND
LECTURES
AND
RECEIVE
CREDIT
FOR
THIS
COURSE
TEXTBOOK
INFORMATION
REQUIRED
TEXT
J
WALKENBACH
MICORSOFT
EXCEL
POWER
PROGRAMMING
WITH
VBA
ISBN
LECTURE
SCHEDULE
WEEK
TOPICS
JAN
JAN
COURSE
OUTLINE
AND
INTRODUCTION
OVERVIEW
OF
EXCEL
EXCEL
FUNCTIONS
AND
EXCEL
MACROS
EXCEL
FILE
TYPES
JAN
JAN
ELEMENTS
OF
PSEUDO
CODE
AND
FLOWCHARTS
SOLVING
PROBLEMS
WITH
PSEUDO
CODE
AND
FLOWCHARTS
JAN
JAN
VBA
EDITOR
COMPONENTS
OF
A
VBA
PROGRAM
USING
OBJECTS
IN
VBA
VARIABLES
AND
EXPRESSIONS
INPUT
OUTPUT
JAN
JAN
STRING
OPERATIONS
CONDITIONAL
STATEMENTS
IF
THEN
ELSE
ELSEIF
LOOPS
FEB
FEB
ARRAYS
MATRICES
MULTI
DIMENSIONAL
ARRAYS
TESTING
AND
DEBUGGING
FEB
FEB
REVIEW
IF
TIME
PERMITS
MIDTERM
ON
FEBRUARY
IN
CLASS
FEB
FEB
READING
WEEK
FEB
FEB
SUB
PROCEDURES
FUNCTIONS
VARIABLE
SCOPE
FEB
MAR
RECURSION
USER
DEFINED
TYPES
IN
VBA
MAR
MAR
FILE
INPUT
AND
OUTPUT
SORT
METHODS
SEARCH
METHODS
MAR
MAR
SOME
NUMERICAL
METHODS
IN
EXCEL
MAR
MAR
PLOTS
AND
CHARTS
OF
DATA
MAR
APR
USER
FORMS
IN
EXCEL
IF
TIME
PERMITS
ACTIVE
X
CONTROLS
IN
EXCEL
IF
TIME
PERMITS
APR
APR
REVIEW
FOR
FINAL
EXAM
IF
TIME
PERMITS
COURSE
OVERVIEW
STUDENTS
WHO
COMPLETE
THIS
COURSE
WILL
BE
ABLE
TO
APPLY
THEIR
BASIC
PROGRAMMING
SKILLS
TO
BUILD
APPLICATIONS
FOR
PRACTICAL
SITUATIONS
BUILD
ON
THE
KNOWLEDGE
OF
VBA
TO
LEARN
THE
BASICS
OF
ANY
OTHER
COMPUTER
PROGRAMMING
LANGUAGE
POLICIES
LATE
ASSIGNMENTS
LATE
ASSIGNMENTS
WILL
NOT
BE
ACCEPTED
STUDENTS
SHOULD
ENSURE
ALL
ASSIGNMENTS
ARE
SUBMITTED
BY
THE
DUE
DATE
POSTED
FOR
THE
ASSIGNMENTS
MISSED
ASSIGNMENTS
ASSIGNMENT
EXTENSIONS
WILL
ONLY
BE
GRANTED
FOR
MEDICAL
REASONS
OR
EXCEPTIONAL
CIRCUMSTANCES
STUDENTS
SHOULD
BE
PREPARED
TO
SHOW
EVIDENCE
FOR
REASON
GIVEN
STUDENTS
SHOULD
CONTACT
THE
INSTRUCTOR
FOR
AN
EXTENSION
BEFORE
THE
ASSIGNMENT
DUE
DATE
REQUESTS
FOR
EXTENSIONS
AFTER
THE
ASSIGNMENT
DUE
DATE
WILL
NOT
BE
CONSIDERED
MISSED
EXAMINATIONS
STUDENTS
WHO
MISS
AN
EXAM
SHOULD
CONTACT
THE
INSTRUCTOR
AS
SOON
AS
POSSIBLE
IF
IT
IS
KNOWN
IN
ADVANCE
THAT
AN
EXAM
WILL
BE
MISSED
THE
INSTRUCTOR
SHOULD
BE
CONTACTED
BEFORE
THE
EXAM
A
STUDENT
WHO
IS
ABSENT
FROM
A
FINAL
EXAMINATION
DUE
TO
MEDICAL
COMPASSIONATE
OR
OTHER
VALID
REA
SONS
MAY
APPLY
TO
THE
COLLEGE
OF
ARTS
AND
SCIENCE
UNDERGRADUATE
STUDENT
OFFICE
FOR
A
DEFERRED
EXAM
APPLICATION
MUST
BE
MADE
WITHIN
THREE
BUSINESS
DAYS
OF
THE
MISSED
EXAMINATION
AND
BE
ACCOMPANIED
BY
SUPPORTING
DOCUMENTS
DEFERRED
EXAMS
ARE
WRITTEN
DURING
THE
FEBRUARY
MID
TERM
BREAK
FOR
TERM
COURSES
AND
IN
EARLY
JUNE
FOR
TERM
AND
FULL
YEAR
COURSES
HTTP
ARTSANDSCIENCE
USASK
CA
UNDERGRADUATE
ADVISING
STRATEGIES
PHP
INCOMPLETE
COURSE
WORK
AND
FINAL
GRADES
WHEN
A
STUDENT
HAS
NOT
COMPLETED
THE
REQUIRED
COURSE
WORK
WHICH
INCLUDES
ANY
ASSIGNMENT
OR
EXAMINATION
INCLUDING
THE
FINAL
EXAMINATION
BY
THE
TIME
OF
SUBMISSION
OF
THE
FINAL
GRADES
THEY
MAY
BE
GRANTED
AN
EXTENSION
TO
PERMIT
COMPLETION
OF
AN
ASSIGNMENT
OR
GRANTED
A
DEFERRED
EXAMINATION
IN
THE
CASE
OF
ABSENCE
FROM
A
FINAL
EXAMINATION
EXTENSIONS
PAST
THE
FINAL
EXAMINATION
DATE
FOR
THE
COMPLETION
OF
ASSIGNMENTS
MUST
BE
APPROVED
BY
THE
DEPARTMENT
HEAD
OR
DEAN
IN
NON
DEPARTMENTALIZED
COLLEGES
AND
MAY
EXCEED
THIRTY
DAYS
ONLY
IN
UNUSUAL
CIRCUMSTANCES
THE
STUDENT
MUST
APPLY
TO
THE
INSTRUCTOR
FOR
SUCH
AN
EXTENSION
AND
FURNISH
SATISFACTORY
REASONS
FOR
THE
DEFICIENCY
DEFERRED
FINAL
EXAMINATIONS
ARE
GRANTED
AS
PER
COLLEGE
POLICY
IN
THE
INTERIM
THE
INSTRUCTOR
WILL
SUBMIT
A
COMPUTED
PERCENTILE
GRADE
FOR
THE
CLASS
WHICH
FACTORS
IN
THE
INCOMPLETE
COURSEWORK
AS
A
ZERO
ALONG
WITH
A
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
IF
A
FAILING
GRADE
IN
THE
CASE
WHERE
THE
STUDENT
HAS
A
PASSING
PERCENTILE
GRADE
BUT
THE
INSTRUCTOR
HAS
INDICATED
IN
THE
COURSE
OUTLINE
THAT
FAILURE
TO
COMPLETE
THE
REQUIRED
COURSEWORK
WILL
RESULT
IN
FAILURE
IN
THE
COURSE
A
FINAL
GRADE
OF
WILL
BE
SUBMITTED
ALONG
WITH
A
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
IF
AN
EXTENSION
IS
GRANTED
AND
THE
REQUIRED
ASSIGNMENT
IS
SUBMITTED
WITHIN
THE
ALLOTTED
TIME
OR
IF
A
DEFERRED
EXAMINATION
IS
GRANTED
AND
WRITTEN
IN
THE
CASE
OF
ABSENCE
FROM
THE
FINAL
EXAMINATION
THE
INSTRUCTOR
WILL
SUBMIT
A
REVISED
ASSIGNED
FINAL
PERCENTAGE
GRADE
THE
GRADE
CHANGE
WILL
REPLACE
THE
PREVIOUS
GRADE
AND
ANY
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
WILL
BE
REMOVED
A
STUDENT
CAN
PASS
A
COURSE
ON
THE
BASIS
OF
WORK
COMPLETED
IN
THE
COURSE
PROVIDED
THAT
ANY
INCOM
PLETE
COURSE
WORK
HAS
NOT
BEEN
DEEMED
MANDATORY
BY
THE
INSTRUCTOR
IN
THE
COURSE
OUTLINE
AND
OR
BY
COL
LEGE
REGULATIONS
FOR
ACHIEVING
A
PASSING
GRADE
HTTP
POLICIES
USASK
CA
POLICIES
ACADEMIC
AFFAIRS
ACADEMIC
COURSES
PHP
FOR
POLICIES
GOVERNING
EXAMINATIONS
AND
GRADING
STUDENTS
ARE
REFERRED
TO
THE
ASSESSMENT
OF
STUDENTS
SECTION
OF
THE
UNIVERSITY
POLICY
ACADEMIC
COURSES
CLASS
DELIVERY
EXAMINATIONS
AND
ASSESSMENT
OF
STUDENT
LEARNING
HTTP
POLICIES
USASK
CA
POLICIES
ACADEMIC
AFFAIRS
ACADEMIC
COURSES
PHP
ACADEMIC
HONESTY
THE
UNIVERSITY
OF
SASKATCHEWAN
IS
COMMITTED
TO
THE
HIGHEST
STANDARDS
OF
ACADEMIC
INTEGRITY
AND
HONESTY
STUDENTS
ARE
EXPECTED
TO
BE
FAMILIAR
WITH
THESE
STANDARDS
REGARDING
ACADEMIC
HONESTY
AND
TO
UPHOLD
THE
POLICIES
OF
THE
UNIVERSITY
IN
THIS
RESPECT
STUDENTS
ARE
PARTICULARLY
URGED
TO
FAMILIARIZE
THEMSELVES
WITH
THE
PROVISIONS
OF
THE
STUDENT
CONDUCT
APPEALS
SUBSECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AND
AVOID
ANY
BEHAVIOUR
THAT
COULD
POTENTIALLY
RESULT
IN
SUSPICIONS
OF
CHEATING
PLAGIARISM
MISREPRESENTATION
OF
FACTS
AND
OR
PARTICIPATION
IN
AN
OFFENCE
ACADEMIC
DISHONESTY
IS
A
SERIOUS
OFFENCE
AND
CAN
RESULT
IN
SUSPENSION
OR
EXPULSION
FROM
THE
UNIVERSITY
ALL
STUDENTS
SHOULD
READ
AND
BE
FAMILIAR
WITH
THE
REGULATIONS
ON
ACADEMIC
STUDENT
MISCONDUCT
HTTP
WWW
USASK
CA
HONESTY
STUDENTACADEMICMISCONDUCT
PDF
AS
WELL
AS
THE
STANDARD
OF
STUDENT
CONDUCT
IN
NON
ACADEMIC
MATTERS
AND
PROCEDURES
FOR
RESOLUTION
OF
COM
PLAINTS
AND
APPEALS
HTTP
WWW
USASK
CA
HONESTY
STUDENTNON
PDF
ACADEMIC
HONESTY
IS
ALSO
DEFINED
AND
DESCRIBED
IN
THE
DEPARTMENT
OF
COMPUTER
SCIENCE
STATEMENT
ON
ACADEMIC
HONESTY
HTTP
WWW
CS
USASK
CA
STUDENTS
ACADEMIC
HONESTY
INDEX
PHP
FOR
MORE
INFORMATION
ON
WHAT
ACADEMIC
INTEGRITY
MEANS
FOR
STUDENTS
SEE
THE
STUDENT
CONDUCT
APPEALS
SUBSECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AT
HTTP
WWW
USASK
CA
PDF
PDF
EXAMINATIONS
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
STUDENTS
WHO
HAVE
DISABILITIES
LEARNING
MEDICAL
PHYSICAL
OR
MENTAL
HEALTH
ARE
STRONGLY
ENCOURAGED
TO
REGISTER
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
IF
THEY
HAVE
NOT
ALREADY
DONE
SO
STUDENTS
WHO
SUS
PECT
THEY
MAY
HAVE
DISABILITIES
SHOULD
CONTACT
DSS
FOR
ADVICE
AND
REFERRALS
IN
ORDER
TO
ACCESS
DSS
PRO
GRAMS
AND
SUPPORTS
STUDENTS
MUST
FOLLOW
DSS
POLICY
AND
PROCEDURES
FOR
MORE
INFORMATION
CHECK
HTTP
WWW
STUDENTS
USASK
CA
DISABILITY
OR
CONTACT
DSS
AT
OR
DSS
USASK
CA
STUDENTS
REGISTERED
WITH
DSS
MAY
REQUEST
ALTERNATIVE
ARRANGEMENTS
FOR
MID
TERM
AND
FINAL
EXAMINATIONS
STUDENTS
MUST
ARRANGE
SUCH
ACCOMMODATIONS
THROUGH
DSS
BY
THE
STATED
DEADLINES
INSTRUCTORS
SHALL
PROVIDE
THE
EXAMINATIONS
FOR
STUDENTS
WHO
ARE
BEING
ACCOMMODATED
BY
THE
DEADLINES
ESTABLISHED
BY
DSS
COURSE
SYLLABUS
CMPT
INTRODUCTION
TO
COMPUTER
SCIENCE
AND
PROGRAMMING
CATALOGUE
DESCRIPTION
INTRODUCES
BASIC
CONCEPTS
OF
COMPUTER
SCIENCE
THROUGH
THE
STUDY
OF
TRADITIONAL
ELEMENTARY
PRO
GRAMMING
OBJECT
ORIENTED
PROGRAMMING
DEBUGGING
DESIGN
OF
OBJECTS
AND
STANDARD
ALGORITHMS
WITH
THEIR
ANALYSIS
PREREQUISITE
MATHEMATICS
OR
FOUNDATIONS
OF
MATHEMATICS
OR
PRE
CALCULUS
WEBSITE
HTTP
MOODLE
CS
USASK
CA
LEARNING
OBJECTIVES
BY
THE
COMPLETION
OF
THIS
COURSE
STUDENTS
WILL
BE
EXPECTED
TO
READ
AND
WRITE
SIMPLE
ALGORITHMS
USING
PSEUDO
CODE
AND
FLOWCHARTS
DESIGN
AND
IMPLEMENT
SIMPLE
C
PROGRAMS
FROM
SCRATCH
TEST
AND
DEBUG
SIMPLE
C
PROGRAMS
TRANSLATE
A
SIMPLE
PSEUDO
CODE
OR
C
PROGRAM
INTO
A
FLOWCHART
EMPLOY
CONDITIONALS
AND
LOOPS
IN
SIMPLE
C
PROGRAMS
EMPLOY
VARIABLES
ARRAYS
AND
RECORDS
IN
SIMPLE
C
PROGRAMS
DEFINE
AND
CALL
C
FUNCTIONS
IN
C
PROGRAMS
DESIGN
AND
IMPLEMENT
SIMPLE
RECURSIVE
FUNCTIONS
IN
C
TRACE
THROUGH
THE
EXECUTION
OF
SIMPLE
C
PROGRAMS
BY
HAND
COMPARE
AND
CONTRAST
LINEAR
SEARCH
AND
BINARY
SEARCH
IN
TERMS
OF
RUNTIME
AND
MEMORY
COSTS
COMPARE
AND
CONTRAST
BUBBLE
SORT
INSERTION
SORT
AND
SELECTION
SORT
IN
TERMS
OF
RUNTIME
AND
MEMORY
COSTS
STUDENT
EVALUATION
GRADING
SCHEME
ASSIGNMENTS
EACH
MIDTERM
EXAM
OCT
LAB
EXERCISES
EACH
FINAL
EXAM
DATE
TBA
TOTAL
THE
MIDTERM
IS
TENTATIVELY
SCHEDULED
FOR
THURSDAY
OCTOBER
THE
WEEK
OF
OCTOBER
THE
WEEK
AFTER
THANKSGIVING
FOR
ALL
SECTIONS
IN
THE
EVENING
THERE
WILL
BE
EXAM
SEATINGS
TENTATIVELY
STARTING
AT
AND
STUDENTS
IN
ANY
SECTION
MAY
ATTEND
ANY
OF
THE
SEATINGS
THOUGH
THERE
WILL
BE
A
SIGN
UP
PROCEDURE
ABOUT
A
WEEK
BEFORE
THE
EXAM
LOCATIONS
WILL
BE
ANNOUNCED
ON
THE
COURSE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
CLOSER
TO
THE
ACTUAL
DATE
THE
MIDTERM
WILL
CONSIST
OF
MULTIPLE
CHOICE
QUESTIONS
SOME
SHORT
ANSWER
QUESTIONS
AND
SOME
PROGRAMMING
QUESTIONS
CRITERIA
THAT
MUST
BE
MET
TO
PASS
STUDENTS
MUST
WRITE
THE
FINAL
EXAM
A
STUDENT
WHO
DOES
NOT
WRITE
THE
FINAL
EXAM
WILL
RECEIVE
A
GRADE
OF
AT
MOST
IN
THE
COURSE
ATTENDANCE
EXPECTATIONS
ATTEND
EVERY
CLASS
AND
PARTICIPATE
ACTIVELY
THERE
WILL
BE
SHORT
READING
ASSIGNMENTS
FOR
ALL
CLASSES
SEE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
AND
STUDENTS
ARE
EXPECTED
TO
COME
TO
CLASS
HAVING
COM
PLETED
THE
READINGS
THERE
IS
NO
PENALTY
FOR
MISSED
LECTURES
ATTEND
ALL
LABORATORY
TUTORIAL
SESSIONS
THESE
ARE
OPPORTUNITIES
TO
PRACTICE
THE
COURSE
MATERIAL
WITH
THE
GUIDANCE
OF
A
TEACHING
ASSISTANT
THERE
IS
NO
PENALTY
FOR
MISSED
LAB
SESSIONS
PROVIDED
THAT
THE
LAB
EXERCISES
CODELAB
ARE
COMPLETED
BY
THE
DUE
DATE
FRIDAYS
ATTEND
THE
MIDTERM
EXAMINATION
IF
YOU
HAVE
PART
TIME
WORK
OR
OTHER
RESPONSIBILITIES
PLEASE
TRY
TO
MAKE
ARRANGEMENTS
ASAP
THAT
WILL
ALLOW
YOU
TO
WRITE
THE
MIDTERM
WE
WILL
MAKE
ALTERNATIVE
ARRANGEMENTS
FOR
STUDENTS
WHO
CANNOT
ATTEND
THE
EVENING
SEATINGS
BUT
OBVIOUSLY
WE
WOULD
LIKE
TO
KEEP
THE
SPECIAL
ARRANGEMENTS
TO
A
MINIMUM
A
MISSED
MIDTERM
WILL
BE
COUNTED
AS
A
SCORE
OF
ZERO
EXCLUDING
EXEMPTIONS
DUE
TO
HEALTH
OR
COMPASSIONATE
GROUNDS
NOTE
ALL
STUDENTS
MUST
BE
PROPERLY
REGISTERED
IN
ORDER
TO
ATTEND
LECTURES
AND
RECEIVE
CREDIT
FOR
THIS
COURSE
FINAL
EXAM
SCHEDULING
THE
REGISTRAR
SCHEDULES
ALL
FINAL
EXAMINATIONS
INCLUDING
DEFERRED
AND
SUPPLEMENTAL
EXAMINATIONS
STUDENTS
ARE
ADVISED
NOT
TO
MAKE
TRAVEL
ARRANGEMENTS
FOR
THE
EXAM
PERIOD
UNTIL
THE
OFFICIAL
EXAM
SCHEDULE
HAS
BEEN
POSTED
COURSE
OVERVIEW
THIS
COURSE
CAN
BE
TAKEN
AS
A
SCIENCE
CREDIT
FOR
ARTS
SCIENCE
MAJORS
AND
IS
ALSO
A
REQUIRED
COURSE
IN
COMPUTER
SCIENCE
MAJOR
PROGRAMS
AND
A
FEW
OTHER
PROGRAMS
LECTURES
WILL
BE
OPPORTUNITIES
TO
APPLY
THE
CONCEPTS
COVERED
IN
THE
COURSE
DISCUSS
THEM
AS
WELL
AS
TO
ASK
QUESTIONS
AND
RECEIVE
GUIDANCE
WE
WILL
NOT
WASTE
CLASS
TIME
READING
POWERPOINT
SLIDES
TO
YOU
SHORT
READINGS
WILL
BE
ASSIGNED
BEFORE
EACH
CLASS
AND
YOU
WILL
BE
EXPECTED
TO
BE
PREPARED
TO
DISCUSS
ASK
QUESTIONS
AND
PARTICIPATE
THESE
READINGS
ARE
COLLECTED
INTO
A
BOOK
LIKE
DOCUMENT
AVAILABLE
ON
THE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
LABORATORY
TIMES
ARE
LISTED
BELOW
THESE
ARE
YOUR
OPPORTUNITIES
TO
PUT
INTO
PRACTICE
THE
WEEK
MATERIAL
USING
A
COMPUTER
UNDER
THE
GUIDANCE
OF
A
TEACHING
ASSISTANT
WE
WILL
HAVE
TWO
MIDTERM
EXAMINATIONS
SEE
ABOVE
FOR
THE
SCHEDULE
THE
FINAL
EXAMINATION
IS
SCHEDULED
BY
THE
UNIVERSITY
AND
THE
EXAM
SCHEDULE
IS
USUALLY
RELEASED
IN
OCTOBER
ASSIGNMENTS
ARE
WEEKLY
TO
ENSURE
THAT
ALL
THE
RELEVANT
MATERIAL
IS
PUT
INTO
REGULAR
CONSISTENT
PRACTICE
SOME
EARLY
ASSIGNMENTS
WILL
SEEM
EASY
AND
LATER
ASSIGNMENTS
WILL
DEFINITELY
CHALLENGE
YOU
EVEN
A
SIMPLE
ASSIGNMENT
CAN
TURN
INTO
A
TIME
CONSUMING
AFFAIR
IF
YOU
GET
STUCK
ON
SOMETHING
THAT
BLOCKS
YOUR
PROGRESS
WORKING
AT
THE
LAST
MINUTE
IS
A
GUARANTEED
SOURCE
OF
STRESS
AND
BURN
OUT
TO
MANAGE
YOUR
WORKLOAD
YOU
MUST
LEARN
EFFECTIVE
TIME
MANAGEMENT
START
EVERY
ASSIGNMENT
EARLY
TO
ALLOW
YOURSELF
TIME
TO
CONSULT
IF
YOU
RUN
INTO
A
PROBLEM
STUDENTS
WHO
COMPLETE
CMPT
WITH
DILIGENCE
WILL
BE
ABLE
TO
APPLY
THEIR
BASIC
PROGRAMMING
SKILLS
TO
BUILD
APPLICATIONS
FOR
PRACTICAL
SITUATIONS
EXTEND
THEIR
KNOWLEDGE
OF
THE
C
PROGRAMMING
LANGUAGE
BY
SELF
STUDY
BUILD
ON
THEIR
KNOWLEDGE
OF
COMPUTER
SCIENCE
TO
LEARN
THE
BASICS
OF
ANY
OTHER
COMPUTER
PROGRAMMING
LANGUAGE
CONTINUE
THEIR
FORMAL
STUDY
OF
COMPUTER
SCIENCE
IN
COURSES
SUCH
AS
CMPT
AND
CMPT
PLEASE
MAKE
USE
OF
THE
TEACHING
RESOURCES
INSTRUCTORS
OFFICE
HOURS
TAS
LABS
LECTURES
DISCUSSION
FORUMS
ETC
AVAILABLE
TO
YOU
TEXTBOOK
INFORMATION
REQUIRED
TEXTS
AND
RESOURCES
THERE
IS
NO
REQUIRED
TEXTBOOK
FOR
THE
COURSE
CODELAB
STUDENTS
ARE
REQUIRED
TO
PURCHASE
ACCESS
TO
CODELAB
FOR
CMPT
PLEASE
SEE
CODELAB
SETUP
SECTION
FOR
INSTRUCTIONS
COURSE
READINGS
ARE
PROVIDED
FREE
OF
CHARGE
AND
ARE
AVAILABLE
ON
THE
CMPT
COURSE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
RECOMMENDED
TEXTS
CAY
HORSTMANN
C
FOR
EVERYONE
EDITION
WILEY
ISBN
LECTURE
SCHEDULE
THE
FOLLOWING
SCHEDULE
IS
APPROXIMATE
OTHER
TOPICS
MAY
BE
ADDED
IF
TIME
ALLOWS
TOPIC
DETAILS
INTRODUCTION
ADMINISTRATIVE
DETAILS
COURSE
OVERVIEW
WHAT
IS
COMPUTER
SCIENCE
ALGORITHMS
WHAT
IS
AN
ALGORITHM
PSEUDO
CODE
AND
FLOWCHARTS
ENCAPSULATION
AND
ABSTRACTION
ATOMIC
DATA
VARIABLES
AND
TYPES
COMPOUND
DATA
C
FUNDAMENTALS
VARIABLES
CONSOLE
IO
EXPRESSIONS
CONDITIONAL
BRANCHING
FUNCTIONS
WHILE
LOOPS
ONE
DIMENSIONAL
ARRAYS
FOR
LOOPS
AND
DO
WHILE
LOOPS
MULTI
DIMENSIONAL
ARRAYS
RECORDS
AND
RECORD
TYPES
RECURSION
SEARCHING
AND
SORTING
LINEAR
SEARCH
BINARY
SEARCH
INSERTION
SORT
SELECTION
SORT
BUBBLE
SORT
COMPUTATIONAL
COMPLEXITY
A
DETAILED
COURSE
SCHEDULE
IS
AVAILABLE
ON
THE
COURSE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
LABORATORY
SECTIONS
LABORATORY
SESSIONS
BEGIN
THE
WEEK
OF
SEPTEMBER
SEE
THE
DETAILED
COURSE
SCHEDULE
WHICH
CAN
BE
FOUND
ON
THE
COURSE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
THE
LAB
SESSIONS
WILL
BE
HELD
IN
THE
TEACHING
LABS
LOCATED
ON
THE
FLOOR
OF
THE
SPINKS
ADDITION
OF
THE
THORVALDSON
BUILDING
SECTION
DAY
TIME
ROOM
FRI
THORV
MON
THORV
MON
THORV
MON
THORV
WED
THORV
WED
THORV
THU
THORV
THU
THORV
TUE
THORV
THU
THORV
MON
THORV
THE
LABORATORY
SESSIONS
WILL
BE
GUIDED
BY
TEACHING
ASSISTANTS
THE
CONTACT
INFORMATION
FOR
THE
TEACHING
ASSISTANTS
WILL
BE
MADE
AVAILABLE
ON
COURSE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
A
LARGE
OPEN
ACCESS
LAB
ON
THE
FLOOR
OF
SPINKS
IS
AVAILABLE
FOR
STUDENT
USE
OUTSIDE
OF
LAB
TIME
MANY
TAS
AND
INSTRUCTORS
FOR
SEVERAL
CMPT
COURSES
WILL
HOLD
OFFICE
HOURS
IN
THE
OPEN
LAB
DON
T
BE
SHY
IF
YOU
SEE
AN
INSTRUCTOR
OR
TA
WHO
IS
NOT
YOUR
TA
OR
INSTRUCTOR
IN
THE
LAB
DON
T
HESITATE
TO
CALL
THEM
OVER
TO
HELP
YOU
CODELAB
CODELAB
TURINGSCRAFT
IS
A
WEB
BASED
INTERACTIVE
PROGRAMMING
EXERCISE
SYSTEM
FOR
INTRO
PROGRAMMING
CLASSES
WE
WILL
BE
USING
IT
FOR
ALL
OF
YOUR
LAB
EXERCISES
YOU
ARE
REQUIRED
TO
PURCHASE
ACCESS
TO
CODELAB
TO
BE
ABLE
TO
COMPLETE
ALL
OF
THE
LAB
EXERCISES
THE
PROCEDURE
FOR
REGISTERING
FOR
CODELAB
WILL
BE
POSTED
ON
THE
COURSE
MOODLE
WEBPAGE
HTTP
MOODLE
CS
USASK
CA
NOTE
THAT
CODELAB
IS
AN
EXTERNAL
COMPANY
THAT
IS
NOT
AFFILIATED
WITH
THE
UNIVERSITY
OF
SASKATCHEWAN
IF
YOU
HAVE
TROUBLES
PROBLEMS
WITH
YOUR
CODELAB
ACCOUNT
THEN
YOU
MUST
CONTACT
CODELAB
TO
HAVE
THEM
RESOLVED
YOUR
INSTRUCTORS
ARE
NOT
ABLE
TO
ASSIST
WITH
CODELAB
ACCOUNT
PROBLEMS
REGISTRATION
FOR
CODELAB
WILL
COST
US
THIS
REGISTRATION
IS
NON
REFUNDABLE
SO
ONLY
REGISTER
BEFORE
SEPT
IF
YOU
ARE
SURE
THAT
YOU
WILL
NOT
BE
WITHDRAWING
FROM
CMPT
BEFORE
THEN
IF
YOU
DO
NOT
HAVE
A
CREDIT
CARD
WITH
WHICH
TO
PURCHASE
ACCESS
THEN
YOU
CAN
PURCHASE
A
PRE
LOADED
CREDIT
CARD
FROM
MOST
GROCERY
STORES
IN
THE
CITY
WE
SUGGEST
PURCHASING
A
CARD
IF
YOU
HAVE
TO
USE
A
PREPAID
CREDIT
CARD
NOTE
THE
BALANCE
ON
A
PREPAID
CREDIT
CARD
CAN
BE
USED
AT
MOST
ALL
LOCAL
STORES
TO
PARTIALLY
PAY
FOR
SOMETHING
FOR
EXAMPLE
IF
YOU
HAVE
ON
A
PREPAID
CREDIT
CARD
AND
BUY
SOMETHING
FOR
THEN
YOU
CAN
USE
THE
CARD
TO
PAY
FOR
AND
THEN
PAY
THE
REMAINDER
BY
CASH
DEBIT
ETC
POLICIES
LATE
ASSIGNMENTS
UNLESS
OTHERWISE
NOTED
ALL
LAB
ASSIGNMENTS
ARE
DUE
FRIDAYS
AT
AND
REGULAR
ASSIGNMENTS
ARE
DUE
TUESDAYS
AT
BECAUSE
OF
THE
WEEKLY
NATURE
OF
ASSIGNMENTS
LATE
LAB
EXERCISES
OR
REGULAR
ASSIGNMENTS
CANNOT
BE
ACCEPTED
YES
THAT
HARSH
BUT
WE
HAVE
A
SCHEDULE
TO
KEEP
WE
MAY
MAKE
EXCEPTIONS
BUT
ONLY
FOR
EMERGENCIES
OR
EXCEPTIONAL
CIRCUMSTANCES
PLEASE
CONTACT
YOUR
INSTRUCTOR
IN
SUCH
CASES
MISSED
ASSIGNMENTS
STUDENTS
ARE
EXPECTED
TO
ATTEMPT
AND
HOPEFULLY
COMPLETE
ALL
ASSIGNMENTS
AND
ALL
LABORATORY
EXERCISES
IT
BETTER
TO
SUBMIT
PARTIALLY
COMPLETED
ASSIGNMENTS
THAN
TO
SUBMIT
NOTHING
AT
ALL
A
MISSED
ASSIGNMENT
WILL
RECEIVE
A
SCORE
OF
ZERO
IF
YOU
MISS
AN
ASSIGNMENT
FOR
MEDICAL
OR
COMPASSIONATE
REASONS
CONTACT
YOUR
INSTRUCTOR
AS
SOON
AS
POSSIBLE
MISSED
EXAMINATIONS
STUDENTS
WHO
HAVE
MISSED
AN
EXAM
OR
ASSIGNMENT
MUST
CONTACT
THEIR
INSTRUCTOR
AS
SOON
AS
POSSIBLE
ARRANGEMENTS
TO
MAKE
UP
THE
EXAM
MAY
BE
ARRANGED
WITH
THE
INSTRUCTOR
MISSED
EXAMS
THROUGHOUT
THE
YEAR
ARE
LEFT
UP
TO
THE
DISCRETION
OF
THE
INSTRUCTOR
IF
A
STUDENT
MAY
MAKE
UP
THE
EXAM
OR
WRITE
AT
A
DIFFERENT
TIME
IF
A
STUDENT
KNOWS
PRIOR
TO
THE
EXAM
THAT
SHE
HE
WILL
NOT
BE
ABLE
TO
ATTEND
THEY
SHOULD
LET
THE
INSTRUCTOR
KNOW
BEFORE
THE
EXAM
FINAL
EXAMS
A
STUDENT
WHO
IS
ABSENT
FROM
A
FINAL
EXAMINATION
THROUGH
NO
FAULT
OF
HIS
OR
HER
OWN
FOR
MEDICAL
OR
OTHER
VALID
REASONS
MAY
APPLY
TO
THE
COLLEGE
OF
ARTS
AND
SCIENCE
DEAN
OFFICE
THE
APPLICATION
MUST
BE
MADE
WITHIN
THREE
DAYS
OF
THE
MISSED
EXAMINATION
ALONG
WITH
SUPPORTING
DOCUMENTARY
EVIDENCE
DEFERRED
EXAMS
ARE
WRITTEN
DURING
THE
FEBRUARY
MID
TERM
BREAK
FOR
TERM
COURSES
AND
IN
EARLY
JUNE
FOR
TERM
AND
FULL
YEAR
COURSES
HTTP
WWW
ARTS
USASK
CA
STUDENTS
TRANSITION
TIPS
PHP
INCOMPLETE
COURSE
WORK
AND
FINAL
GRADES
WHEN
A
STUDENT
HAS
NOT
COMPLETED
THE
REQUIRED
COURSE
WORK
WHICH
INCLUDES
ANY
ASSIGNMENT
OR
EXAMINATION
INCLUDING
THE
FINAL
EXAMINATION
BY
THE
TIME
OF
SUBMISSION
OF
THE
FINAL
GRADES
THEY
MAY
BE
GRANTED
AN
EXTENSION
TO
PERMIT
COMPLETION
OF
AN
ASSIGNMENT
OR
GRANTED
A
DEFERRED
EXAMINATION
IN
THE
CASE
OF
ABSENCE
FROM
A
FINAL
EXAMINATION
EXTENSIONS
FOR
THE
COMPLETION
OF
ASSIGNMENTS
MUST
BE
APPROVED
BY
THE
DEPARTMENT
HEAD
OR
DEAN
IN
NON
DEPARTMENTALIZED
COLLEGES
AND
MAY
EXCEED
THIRTY
DAYS
ONLY
IN
UNUSUAL
CIRCUMSTANCES
THE
STUDENT
MUST
APPLY
TO
THE
INSTRUCTOR
FOR
SUCH
AN
EXTENSION
AND
FURNISH
SATISFACTORY
REASONS
FOR
THE
DEFICIENCY
DEFERRED
FINAL
EXAMINATIONS
ARE
GRANTED
AS
PER
COLLEGE
POLICY
IN
THE
INTERIM
THE
INSTRUCTOR
WILL
SUBMIT
A
COMPUTED
PERCENTILE
GRADE
FOR
THE
COURSE
WHICH
FACTORS
IN
THE
INCOMPLETE
COURSE
WORK
AS
A
ZERO
ALONG
WITH
A
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
IF
A
FAILING
GRADE
IN
THE
CASE
WHERE
THE
INSTRUCTOR
HAS
INDICATED
IN
THE
COURSE
OUTLINE
THAT
FAILURE
TO
COMPLETE
THE
REQUIRED
COURSE
WORK
WILL
RESULT
IN
FAILURE
IN
THE
COURSE
AND
THE
STUDENT
HAS
A
COMPUTED
PASSING
PERCENTILE
GRADE
A
FINAL
GRADE
OF
WILL
BE
SUBMITTED
ALONG
WITH
A
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
IF
AN
EXTENSION
IS
GRANTED
AND
THE
REQUIRED
ASSIGNMENT
IS
SUBMITTED
WITHIN
THE
ALLOTTED
TIME
OR
IF
A
DEFERRED
EXAMINATION
IS
GRANTED
AND
WRITTEN
IN
THE
CASE
OF
ABSENCE
FROM
THE
FINAL
EXAMINATION
THE
INSTRUCTOR
WILL
SUBMIT
A
REVISED
COMPUTED
FINAL
PERCENTAGE
GRADE
THE
GRADE
CHANGE
WILL
REPLACE
THE
PREVIOUS
GRADE
AND
ANY
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
WILL
BE
REMOVED
FOR
PROVISIONS
GOVERNING
EXAMINATIONS
AND
GRADING
STUDENTS
ARE
REFERRED
TO
THE
UNIVERSITY
COUNCIL
REGULATIONS
ON
EXAMINATIONS
SECTION
OF
THE
CALENDAR
UNIVERSITY
OF
SASKATCHEWAN
CALENDAR
ACADEMIC
COURSES
POLICY
ACADEMIC
HONESTY
THE
UNIVERSITY
POLICY
THE
UNIVERSITY
OF
SASKATCHEWAN
IS
COMMITTED
TO
THE
HIGHEST
STANDARDS
OF
ACADEMIC
INTEGRITY
AND
HONESTY
STU
DENTS
ARE
EXPECTED
TO
BE
FAMILIAR
WITH
THESE
STANDARDS
REGARDING
ACADEMIC
HONESTY
AND
TO
UPHOLD
THE
POLICIES
OF
THE
UNIVERSITY
IN
THIS
RESPECT
STUDENTS
ARE
PARTICULARLY
URGED
TO
FAMILIARIZE
THEMSELVES
WITH
THE
PROVISIONS
OF
THE
STUDENT
CONDUCT
APPEALS
SECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AND
AVOID
ANY
BEHAVIOUR
THAT
COULD
POTENTIALLY
RESULT
IN
SUSPICIONS
OF
CHEATING
PLAGIARISM
MISREPRESENTATION
OF
FACTS
AND
OR
PARTICIPATION
IN
AN
OFFENCE
ACADEMIC
DISHONESTY
IS
A
SERIOUS
OFFENCE
AND
CAN
RESULT
IN
SUSPENSION
OR
EXPULSION
FROM
THE
UNIVERSITY
ALL
STUDENTS
SHOULD
READ
AND
BE
FAMILIAR
WITH
THE
REGULATIONS
ON
ACADEMIC
STUDENT
MISCONDUCT
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
STUDENTACADEMICMISCONDUCT
PDF
AS
WELL
AS
THE
STANDARD
OF
STUDENT
CONDUCT
IN
NON
ACADEMIC
MATTERS
AND
PROCEDURES
FOR
RESOLUTION
OF
COM
PLAINTS
AND
APPEALS
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
STUDENTNON
ACADEMICMISCONDUCT
PDF
ACADEMIC
HONESTY
IS
ALSO
DEFINED
AND
DESCRIBED
IN
THE
DEPARTMENT
OF
COMPUTER
SCIENCE
STATEMENT
ON
ACADEMIC
HONESTY
HTTP
WWW
CS
USASK
CA
UNDERGRAD
HONESTY
PHP
FOR
MORE
INFORMATION
ON
WHAT
ACADEMIC
INTEGRITY
MEANS
FOR
STUDENTS
SEE
THE
STUDENT
CONDUCT
APPEALS
SECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AT
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
FORMS
INTEGRITYDEFINED
PDF
EXAMINATIONS
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
STUDENTS
WHO
HAVE
DISABILITIES
LEARNING
MEDICAL
PHYSICAL
OR
MENTAL
HEALTH
ARE
STRONGLY
ENCOURAGED
TO
REGIS
TER
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
IF
THEY
HAVE
NOT
ALREADY
DONE
SO
STUDENTS
WHO
SUSPECT
THEY
MAY
HAVE
DISABILITIES
SHOULD
CONTACT
DSS
FOR
ADVICE
AND
REFERRALS
IN
ORDER
TO
ACCESS
DSS
PROGRAMS
AND
SUPPORTS
STU
DENTS
MUST
FOLLOW
DSS
POLICY
AND
PROCEDURES
FOR
MORE
INFORMATION
CHECK
HTTP
WWW
STUDENTS
USASK
CA
DISABILITY
OR
CONTACT
DSS
AT
OR
DSS
USASK
CA
STUDENTS
REGISTERED
WITH
DSS
MAY
REQUEST
ALTERNATIVE
ARRANGEMENTS
FOR
MID
TERM
AND
FINAL
EXAMINATIONS
STUDENTS
MUST
ARRANGE
SUCH
ACCOMMODATIONS
THROUGH
DSS
BY
THE
STATED
DEADLINES
INSTRUCTORS
SHALL
PROVIDE
THE
EXAMINATIONS
FOR
STUDENTS
WHO
ARE
BEING
ACCOMMODATED
BY
THE
DEADLINES
ESTABLISHED
BY
DSS
VERSION
HISTORY
INITIAL
VERSION
ONE
MIDTERM
TENTATIVELY
SCHEDULED
MIDTERM
SCHEDULED
COURSE
DESCRIPTION
THIS
COURSE
FOCUSES
ON
THE
MECHANICS
OF
COMPUTER
GAMES
AND
STUDENTS
WILL
LEARN
ABOUT
THE
DESIGN
OF
GAMES
HOW
TO
CRITICALLY
EVALUATE
GAMES
AND
ABOUT
STRATEGIES
FOR
PLAYTESTING
GAMES
DESIGN
TOPICS
INCLUDE
CONSIDERATION
OF
NARRATIVE
GAME
RULES
COLLABORATION
AND
ANIMATION
CMPT
CAN
BE
TAKEN
AS
A
SCIENCE
COURSE
BY
NON
SCIENCE
STUDENTS
CMPT
CANNOT
BE
TAKEN
AS
A
SCIENCE
COURSE
BY
SCIENCE
STUDENTS
COURSE
OVERVIEW
AND
LEARNING
OBJECTIVES
PLEASE
SEE
THE
COURSE
SCHEDULE
FOR
A
LIST
OF
TOPICS
AND
LECTURE
DATES
THE
FOLLOWING
TOPICS
MAY
BE
COVERED
BUT
ARE
SUBJECT
TO
CHANGE
CRITICAL
THINKING
FOR
GAMES
FORMAL
ELEMENTS
PLAYERS
OBJECTIVES
RULES
PROCEDURES
RESOURCES
CONFLICTS
BOUNDARIES
AND
OUTCOMES
DRAMATIC
ELEMENTS
CHALLENGE
PLAY
PREMISE
CHARACTER
STORY
WORLD
BUILDING
AND
THE
DRAMATIC
ARC
LOW
FIDELITY
PROTOTYPING
STORYBOARDING
DIGITAL
PROTOTYPING
UNITY
PLAYTESTING
TECHNIQUES
EFFECTIVE
INTERFACE
DESIGN
IN
GAMES
ADVANCE
TOPICS
FUNCTIONALITY
COMPLETENESS
GAME
BALANCE
SERIOUS
GAMES
GAMIFICATION
AND
CASUAL
GAMING
RESOURCES
READINGS
TEXTBOOKS
THERE
IS
ONE
OPTIONAL
TEXTBOOKS
FOR
THIS
COURSE
PARTIAL
LECTURE
NOTES
AND
SLIDES
WILL
BE
PROVIDED
ONLINE
VIA
THE
COURSE
WEBSITE
HOWEVER
LECTURE
NOTES
ARE
NOT
A
SUBSTITUTE
FOR
ATTENDING
CLASS
CLASS
TIME
WILL
BE
USED
FOR
CONTENT
PRESENTATION
EXAMPLES
CASE
STUDIES
DESIGN
EXERCISES
AND
GROUP
INTERACTION
THE
VISUAL
NATURE
OF
THE
COURSE
CONTENT
COMBINED
WITH
THE
INTERACTIVE
NATURE
OF
THE
CONTENT
PRESENTATION
MEANS
THAT
CLASS
ATTENDANCE
IS
ESSENTIAL
TO
SUCCESS
IN
THIS
COURSE
OPTIONAL
TEXTBOOK
TRACY
FULLERTON
GAME
DESIGN
WORKSHOP
A
PLAYCENTRIC
APPROACH
TO
CREATING
INNOVATIVE
GAMES
THIRD
EDITION
CRC
PRESS
ISBN
WEBSITE
THE
COURSE
WEBSITE
IS
ON
MOODLE
AND
CAN
BE
ACCESSED
FROM
HTTP
WWW
CS
USASK
CA
COURSES
COURSE
ANNOUNCEMENTS
REGARDING
ASSIGNMENTS
AND
EXAMINATIONS
AS
WELL
AS
OTHER
INFORMATION
MAY
AND
WILL
BE
COMMUNICATED
TO
THE
CLASS
VIA
THIS
WEBSITE
THE
STUDENT
IS
RESPONSIBLE
FOR
READING
THIS
WEBSITE
REGULARLY
GRADING
SCHEME
ASSIGNMENTS
PROJECT
MIDTERM
EXAM
FINAL
EXAM
TOTAL
EVALUATION
COMPONENTS
ASSIGNMENTS
VALUE
OF
FINAL
GRADE
ASSIGNMENTS
WILL
BE
USED
AS
TOOL
TO
REINFORCE
CONCEPTS
LEARNED
IN
CLASS
ALL
ASSIGNMENTS
MUST
BE
COMPLETED
INDIVIDUALLY
UNLESS
OTHERWISE
STATED
DUE
DATES
THERE
WILL
BE
A
NUMBER
OF
SMALL
ASSIGNMENTS
OVER
THE
COURSE
ASSIGNED
AS
THE
COURSE
MATERIAL
DICTATES
STUDENTS
WILL
BE
GIVEN
A
WEEK
TO
COMPLETE
ANY
ASSIGNMENT
THAT
IS
EXPECTED
TO
TAKE
MORE
THAN
AN
HOUR
TO
COMPLETE
SMALLER
ASSIGNMENTS
MAY
BE
DUE
THE
FOLLOWING
CLASS
SUBMISSION
SUBMISSION
INSTRUCTIONS
FOR
ASSIGNMENTS
WILL
BE
GIVEN
IN
THE
DESCRIPTIONS
OF
INDIVIDUAL
ASSIGNMENTS
LATE
ASSIGNMENT
POLICY
AND
EXTENSIONS
ABSOLUTELY
NO
LATE
ASSIGNMENTS
WILL
BE
ACCEPTED
ABSOLUTELY
NO
EXTENSIONS
WILL
BE
PROVIDED
FOR
ASSIGNMENT
DUE
DATES
AT
THE
END
OF
THE
COURSE
THE
BOTTOM
MARK
FOR
ASSIGNMENTS
WILL
BE
DROPPED
WHEN
CALCULATING
THE
AVERAGE
ASSIGNMENT
GRADE
PROJECT
VALUE
OF
FINAL
GRADE
THIS
COURSE
REQUIRES
COMPLETION
OF
A
SINGLE
TEAM
PROJECT
WHICH
HAS
SEVERAL
MARKED
DELIVERABLES
THROUGHOUT
THE
TERM
THE
GOAL
IS
TO
PROVIDE
STUDENTS
WITH
PRACTICAL
EXPERIENCE
IN
DESIGNING
IMPLEMENTING
AND
PLAYTESTING
GAMES
STUDENTS
WILL
PARTICIPATE
IN
THE
SAME
TEAM
THROUGHOUT
THE
COURSE
THERE
ARE
SIX
STAGES
TO
THE
TEAM
PROJECT
EACH
WITH
A
MILESTONE
AND
DELIVERABLE
MORE
DETAIL
FOR
EACH
COMPONENT
WILL
BECOME
AVAILABLE
IN
TIME
PLEASE
CONSULT
THE
COURSE
SCHEDULE
EARLY
AND
OFTEN
FOR
TIMING
OF
COMPONENTS
GRADING
SCHEME
EACH
PROJECT
COMPONENT
WILL
BE
GRADED
AND
GIVEN
A
WEIGHT
OF
THE
TOTAL
PROJECT
GRADE
OF
GRADE
PROPOSAL
PITCH
PAPER
PROTOTYPE
PLAYTESTING
I
DIGITAL
PROTOTYPE
PLAYTESTING
II
CLASS
PRESENTATION
TEAM
PEER
EVALUATION
GROUP
WORK
IS
BENEFICIAL
FOR
THE
LEARNING
EXPERIENCE
BUT
HAS
THE
DRAWBACK
THAT
SOME
MEMBERS
OF
A
GROUP
MAY
NOT
CARRY
THEIR
WEIGHT
IN
TERMS
OF
GROUP
PARTICIPATION
TO
MITIGATE
THIS
FACTOR
STUDENTS
WILL
PERFORM
PEER
EVALUATIONS
OF
THEIR
PROJECT
GROUP
MEMBERS
THESE
EVALUATIONS
WILL
BE
USED
TO
SCALE
THE
PROJECT
GRADE
SUBMISSION
SUBMISSION
INSTRUCTIONS
FOR
PROJECTS
WILL
BE
GIVEN
IN
THE
DESCRIPTIONS
OF
INDIVIDUAL
PROJECT
COMPONENTS
LATE
PROJECT
POLICY
AND
EXTENSIONS
ABSOLUTELY
NO
LATE
PROJECT
COMPONENTS
WILL
BE
ACCEPTED
FOR
GRADING
AS
THE
PROJECT
COMPONENTS
BUILD
UPON
EACH
OTHER
FEEDBACK
WILL
BE
PROVIDED
ON
LATE
PROJECTS
BUT
THE
GRADE
FOR
THE
LATE
COMPONENT
WILL
BE
ZERO
ABSOLUTELY
NO
EXTENSIONS
WILL
BE
GIVEN
FOR
PROJECT
COMPONENTS
MIDTERM
EXAM
VALUE
OF
FINAL
GRADE
DATE
THURSDAY
FEBRUARY
TENTATIVE
LENGTH
HOUR
A
STUDENT
WHO
MISSES
THE
MIDTERM
TEST
DUE
TO
ILLNESS
MUST
CONTACT
THEIR
INSTRUCTOR
BY
EMAIL
ON
THE
DAY
OF
THE
MISSED
TEST
EXPLAINING
THE
REASON
FOR
THEIR
ABSENCE
THE
STUDENT
MUST
SUBSEQUENTLY
PROVIDE
APPROPRIATE
MEDICAL
DOCUMENTATION
TO
THE
COURSE
INSTRUCTOR
AT
WHICH
TIME
THE
INSTRUCTOR
AND
THE
STUDENT
SHALL
DISCUSS
HOW
THE
MISSED
EXAM
WILL
BE
MADE
UP
A
STUDENT
WHO
CANNOT
ATTEND
A
MIDTERM
TEST
FOR
RELIGIOUS
REASONS
OR
DUE
TO
A
CONFLICT
WITH
ANOTHER
CLASS
OR
EXAMINATION
MUST
INFORM
THE
INSTRUCTOR
AT
LEAST
TWO
WEEKS
PRIOR
TO
THE
TEST
DATE
SO
THAT
ALTERNATIVE
ARRANGEMENTS
CAN
BE
MADE
FINAL
EXAM
VALUE
OF
FINAL
GRADE
DATE
TO
BE
DETERMINED
LENGTH
TO
BE
DETERMINED
A
STUDENT
WHO
MISSES
THE
FINAL
EXAMINATION
FOR
ANY
REASON
HAS
A
CONFLICT
WITH
ANOTHER
FINAL
EXAMINATION
OR
CANNOT
ATTEND
THE
FINAL
EXAMINATION
FOR
RELIGIOUS
REASONS
MUST
FOLLOW
THE
APPROPRIATE
PROCEDURES
OUTLINED
IN
THE
UNIVERSITY
OF
SASKATCHEWAN
CALENDAR
IMPORTANT
REGULATIONS
ALL
STUDENTS
MUST
BE
PROPERLY
REGISTERED
IN
ORDER
TO
ATTEND
LECTURES
AND
RECEIVE
CREDIT
FOR
THIS
COURSE
FAILURE
TO
WRITE
THE
FINAL
EXAM
WILL
RESULT
IN
FAILURE
OF
THIS
COURSE
TO
OBTAIN
A
PASSING
GRADE
IN
THIS
COURSE
THE
WEIGHTED
AVERAGE
OF
THE
STUDENT
MIDTERM
TEST
AND
FINAL
EXAM
GRADES
MUST
BE
AT
LEAST
TO
BE
ELIGIBLE
TO
WRITE
THE
FINAL
EXAMINATION
THE
STUDENT
MUST
HAVE
A
STANDING
OF
AT
LEAST
IN
ALL
OTHER
COURSE
WORK
WEIGHTED
AVERAGE
OF
ALL
ASSIGNMENTS
AND
MIDTERM
INTEGRITY
DEFINED
FROM
THE
OFFICE
OF
THE
UNIVERSITY
SECRETARY
THE
UNIVERSITY
OF
SASKATCHEWAN
IS
COMMITTED
TO
THE
HIGHEST
STANDARDS
OF
ACADEMIC
INTEGRITY
AND
HONESTY
STUDENTS
ARE
EXPECTED
TO
BE
FAMILIAR
WITH
THESE
STANDARDS
REGARDING
ACADEMIC
HONESTY
AND
TO
UPHOLD
THE
POLICIES
OF
THE
UNIVERSITY
IN
THIS
RESPECT
STUDENTS
ARE
PARTICULARLY
URGED
TO
FAMILIARIZE
THEMSELVES
WITH
THE
PROVISIONS
OF
THE
STUDENT
CONDUCT
APPEALS
SECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AND
AVOID
ANY
BEHAVIOR
THAT
COULD
POTENTIALLY
RESULT
IN
SUSPICIONS
OF
CHEATING
PLAGIARISM
MISREPRESENTATION
OF
FACTS
AND
OR
PARTICIPATION
IN
AN
OFFENCE
ACADEMIC
DISHONESTY
IS
A
SERIOUS
OFFENCE
AND
CAN
RESULT
IN
SUSPENSION
OR
EXPULSION
FROM
THE
UNIVERSITY
ALL
STUDENTS
SHOULD
READ
AND
BE
FAMILIAR
WITH
THE
REGULATIONS
ON
ACADEMIC
STUDENT
MISCONDUCT
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
STUDENTACADEMICMISCONDUCT
PDF
AS
WELL
AS
THE
STANDARD
OF
STUDENT
CONDUCT
IN
NON
ACADEMIC
MATTERS
AND
PROCEDURES
FOR
RESOLUTION
OF
COMPLAINTS
AND
APPEALS
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
STUDENTNON
ACADEMICMISCONDUCT
PDF
FOR
MORE
INFORMATION
ON
WHAT
ACADEMIC
INTEGRITY
MEANS
FOR
STUDENTS
SEE
THE
STUDENT
CONDUCT
APPEALS
SECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AT
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
FORMS
INTEGRITYDEFINED
PDF
EXAMINATIONS
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
STUDENTS
WHO
HAVE
DISABILITIES
LEARNING
MEDICAL
PHYSICAL
OR
MENTAL
HEALTH
ARE
STRONGLY
ENCOURAGED
TO
REGISTER
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
IF
THEY
HAVE
NOT
ALREADY
DONE
SO
STUDENTS
WHO
SUSPECT
THEY
MAY
HAVE
DISABILITIES
SHOULD
CONTACT
DSS
FOR
ADVICE
AND
REFERRALS
IN
ORDER
TO
ACCESS
DSS
PROGRAMS
AND
SUPPORTS
STUDENTS
MUST
FOLLOW
DSS
POLICY
AND
PROCEDURES
FOR
MORE
INFORMATION
CHECK
HTTP
STUDENTS
USASK
CA
HEALTH
CENTRES
DISABILITY
SERVICES
FOR
STUDENTS
PHP
OR
CONTACT
DSS
AT
OR
DSS
USASK
CA
STUDENTS
REGISTERED
WITH
DSS
MAY
REQUEST
ALTERNATIVE
ARRANGEMENTS
FOR
MID
TERM
AND
FINAL
EXAMINATIONS
STUDENTS
MUST
ARRANGE
SUCH
ACCOMMODATIONS
THROUGH
DSS
BY
THE
STATED
DEADLINES
INSTRUCTORS
SHALL
PROVIDE
THE
EXAMINATIONS
FOR
STUDENTS
WHO
ARE
BEING
ACCOMMODATED
BY
THE
DEADLINES
ESTABLISHED
BY
DSS
COURSE
SYLLABUS
CMPT
INTRODUCTION
TO
COMPUTING
AND
INTERACTIVE
SYSTEMS
DESIGN
DESCRIPTION
INTRODUCTION
TO
IDEAS
AND
CONCEPTS
IN
COMPUTER
SCIENCE
AND
THE
DESIGN
OF
INTERACTIVE
SYSTEMS
CONCEPTS
IN
COMPUTING
SUCH
AS
ALGORITHMS
PROBLEM
SOLVING
AND
PROGRAMMING
ARE
EXPLORED
USING
INTERACTIVE
MULTIMEDIA
SYSTEMS
AS
THE
FOCUS
BASIC
CONCEPTS
IN
DESIGN
AND
INTERACTION
SUCH
AS
THE
INTERACTION
CYCLE
EVENT
BASED
BEHAVIOUR
AND
PROTOTYPING
ARE
INTRODUCED
RESTRICTIONS
CMPT
CAN
BE
TAKEN
AS
A
SCIENCE
COURSE
BY
NON
SCIENCE
MAJORS
SCIENCE
MAJORS
MAY
NOT
RECEIVE
SCIENCE
CREDIT
FOR
THIS
COURSE
CMPT
CAN
BE
TAKEN
FOR
CREDIT
AFTER
THE
COMPLETION
OF
CMPT
OR
BUT
CMPT
AND
CANNOT
BE
TAKEN
FOR
CREDIT
AFTER
COMPLETION
OF
CMPT
CMPT
CANNOT
BE
TAKEN
FOR
CREDIT
AFTER
CMPT
CLASS
TIME
LOCATION
COURSE
OBJECTIVES
LEARN
HOW
TO
DESIGN
BUILD
AND
TALK
ABOUT
INTERACTIVE
SYSTEMS
STUDENT
EVALUATION
GRADING
SCHEME
ASSIGNMENTS
CLASS
PROJECT
MIDTERM
EXAM
MID
OCT
FINAL
EXAM
DEC
PARTICIPATION
TOTAL
FINAL
EXAM
SCHEDULING
THE
REGISTRAR
SCHEDULES
ALL
FINAL
EXAMINATIONS
INCLUDING
DEFERRED
AND
SUPPLEMENTAL
EXAMINATIONS
STUDENTS
ARE
ADVISED
NOT
TO
MAKE
TRAVEL
ARRANGEMENTS
FOR
THE
EXAM
PERIOD
UNTIL
THE
OFFICIAL
EXAM
SCHEDULE
HAS
BEEN
POSTED
NOTE
ALL
STUDENTS
MUST
BE
PROPERLY
REGISTERED
IN
ORDER
TO
ATTEND
LECTURES
AND
RECEIVE
CREDIT
FOR
THIS
COURSE
RECOMMENDED
TEXTBOOK
LEARN
TO
PROGRAM
WITH
SCRATCH
A
VISUAL
INTRODUCTION
TO
PROGRAMMING
WITH
GAMES
ART
SCIENCE
AND
MATH
BY
MAJED
MARJI
FEBRUARY
PP
ISBN
TOPICS
SPRITES
MOTION
AND
REPETITION
CONDITIONAL
AND
ARITHMETIC
EXPRESSIONS
INTERACTION
AND
EVENTS
VARIABLES
AND
LISTS
MESSAGES
SUBPROGRAMS
DESIGN
PROCESS
ANIMATION
PROBLEM
SOLVING
PERSONAS
SCENARIOS
AND
STORYBOARDS
PROCESSING
IMAGES
AND
COLOUR
SOUND
STRUCTURE
AND
NAVIGATION
RECURSION
POLICIES
MISSED
EXAMINATIONS
STUDENTS
WHO
HAVE
MISSED
AN
EXAM
OR
ASSIGNMENT
MUST
CONTACT
THEIR
INSTRUCTOR
AS
SOON
AS
POSSIBLE
ARRANGEMENTS
TO
MAKE
UP
THE
EXAM
MAY
BE
ARRANGED
WITH
THE
INSTRUCTOR
MISSED
EXAMS
THROUGHOUT
THE
YEAR
ARE
LEFT
UP
TO
THE
DISCRETION
OF
THE
INSTRUCTOR
IF
A
STUDENT
MAY
MAKE
UP
THE
EXAM
OR
WRITE
AT
A
DIFFERENT
TIME
IF
A
STUDENT
KNOWS
PRIOR
TO
THE
EXAM
THAT
SHE
HE
WILL
NOT
BE
ABLE
TO
ATTEND
SHOULD
LET
THE
INSTRUCTOR
KNOW
BEFORE
THE
EXAM
FINAL
EXAMS
A
STUDENT
WHO
IS
ABSENT
FROM
A
FINAL
EXAMINATION
THROUGH
NO
FAULT
OF
HIS
OR
HER
OWN
FOR
MEDICAL
OR
OTHER
VALID
REASONS
MAY
APPLY
TO
THE
COLLEGE
OF
ARTS
AND
SCIENCE
UNDERGRADUATE
STUDENT
OFFICE
THE
APPLICATION
MUST
BE
MADE
WITHIN
THREE
DAYS
OF
THE
MISSED
EXAMINATION
ALONG
WITH
SUPPORTING
DOCUMENTARY
EVIDENCE
DEFERRED
EXAMS
ARE
WRITTEN
DURING
THE
FEBRUARY
MID
TERM
BREAK
FOR
TERM
COURSES
AND
IN
EARLY
JUNE
FOR
TERM
AND
FULL
YEAR
COURSES
HTTP
WWW
ARTS
USASK
CA
STUDENTS
TRANSITION
TIPS
PHP
INCOMPLETE
COURSE
WORK
AND
FINAL
GRADES
WHEN
A
STUDENT
HAS
NOT
COMPLETED
THE
REQUIRED
COURSE
WORK
WHICH
INCLUDES
ANY
ASSIGNMENT
OR
EXAMINATION
INCLUDING
THE
FINAL
EXAMINATION
BY
THE
TIME
OF
SUBMISSION
OF
THE
FINAL
GRADES
THEY
MAY
BE
GRANTED
AN
EXTENSION
TO
PERMIT
COMPLETION
OF
AN
ASSIGNMENT
OR
GRANTED
A
DEFERRED
EXAMINATION
IN
THE
CASE
OF
ABSENCE
FROM
A
FINAL
EXAMINATION
EXTENSIONS
FOR
THE
COMPLETION
OF
ASSIGNMENTS
MUST
BE
APPROVED
BY
THE
DEPARTMENT
HEAD
OR
DEAN
IN
NON
DEPARTMENTALIZED
COLLEGES
AND
MAY
EXCEED
THIRTY
DAYS
ONLY
IN
UNUSUAL
CIRCUMSTANCES
THE
STUDENT
MUST
APPLY
TO
THE
INSTRUCTOR
FOR
SUCH
AN
EXTENSION
AND
FURNISH
SATISFACTORY
REASONS
FOR
THE
DEFICIENCY
DEFERRED
FINAL
EXAMINATIONS
ARE
GRANTED
AS
PER
COLLEGE
POLICY
IN
THE
INTERIM
THE
INSTRUCTOR
WILL
SUBMIT
A
COMPUTED
PERCENTILE
GRADE
FOR
THE
COURSE
WHICH
FACTORS
IN
THE
INCOMPLETE
COURSE
WORK
AS
A
ZERO
ALONG
WITH
A
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
IF
A
FAILING
GRADE
IN
THE
CASE
WHERE
THE
INSTRUCTOR
HAS
INDICATED
IN
THE
COURSE
OUTLINE
THAT
FAILURE
TO
COMPLETE
THE
REQUIRED
COURSE
WORK
WILL
RESULT
IN
FAILURE
IN
THE
COURSE
AND
THE
STUDENT
HAS
A
COMPUTED
PASSING
PERCENTILE
GRADE
A
FINAL
GRADE
OF
WILL
BE
SUBMITTED
ALONG
WITH
A
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
IF
AN
EXTENSION
IS
GRANTED
AND
THE
REQUIRED
ASSIGNMENT
IS
SUBMITTED
WITHIN
THE
ALLOTTED
TIME
OR
IF
A
DEFERRED
EXAMINATION
IS
GRANTED
AND
WRITTEN
IN
THE
CASE
OF
ABSENCE
FROM
THE
FINAL
EXAMINATION
THE
INSTRUCTOR
WILL
SUBMIT
A
REVISED
COMPUTED
FINAL
PERCENTAGE
GRADE
THE
GRADE
CHANGE
WILL
REPLACE
THE
PREVIOUS
GRADE
AND
ANY
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
WILL
BE
REMOVED
FOR
PROVISIONS
GOVERNING
EXAMINATIONS
AND
GRADING
STUDENTS
ARE
REFERRED
TO
THE
UNIVERSITY
COUNCIL
REGULATIONS
ON
EXAMINATIONS
SECTION
OF
THE
CALENDAR
UNIVERSITY
OF
SASKATCHEWAN
CALENDAR
ACADEMIC
COURSES
POLICY
ACADEMIC
HONESTY
THE
UNIVERSITY
OF
SASKATCHEWAN
IS
COMMITTED
TO
THE
HIGHEST
STANDARDS
OF
ACADEMIC
INTEGRITY
AND
HONESTY
STUDENTS
ARE
EXPECTED
TO
BE
FAMILIAR
WITH
THESE
STANDARDS
REGARDING
ACADEMIC
HONESTY
AND
TO
UPHOLD
THE
POLICIES
OF
THE
UNIVERSITY
IN
THIS
RESPECT
STUDENTS
ARE
PARTICULARLY
URGED
TO
FAMILIARIZE
THEMSELVES
WITH
THE
PROVISIONS
OF
THE
STUDENT
CONDUCT
APPEALS
SECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AND
AVOID
ANY
BEHAVIOR
THAT
COULD
POTENTIALLY
RESULT
IN
SUSPICIONS
OF
CHEATING
PLAGIARISM
MISREPRESENTATION
OF
FACTS
AND
OR
PARTICIPATION
IN
AN
OFFENCE
ACADEMIC
DISHONESTY
IS
A
SERIOUS
OFFENCE
AND
CAN
RESULT
IN
SUSPENSION
OR
EXPULSION
FROM
THE
UNIVERSITY
ALL
STUDENTS
SHOULD
READ
AND
BE
FAMILIAR
WITH
THE
REGULATIONS
ON
ACADEMIC
STUDENT
MISCONDUCT
HTTP
WWW
USASK
CA
HONESTY
STUDENTACADEMICMISCONDUCT
PDF
AS
WELL
AS
THE
STANDARD
OF
STUDENT
CONDUCT
IN
NON
ACADEMIC
MATTERS
AND
PROCEDURES
FOR
RESOLUTION
OF
COMPLAINTS
AND
APPEALS
HTTP
WWW
USASK
CA
HONESTY
STUDENTNON
PDF
ACADEMIC
HONESTY
IS
ALSO
DEFINED
AND
DESCRIBED
IN
THE
DEPARTMENT
OF
COMPUTER
SCIENCE
STATEMENT
ON
ACADEMIC
HONESTY
HTTP
WWW
CS
USASK
CA
UNDERGRAD
HONESTY
PHP
FOR
MORE
INFORMATION
ON
WHAT
ACADEMIC
INTEGRITY
MEANS
FOR
STUDENTS
SEE
THE
STUDENT
CONDUCT
APPEALS
SECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AT
HTTP
WWW
USASK
CA
PDF
PDF
EXAMINATIONS
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
STUDENTS
WHO
HAVE
DISABILITIES
LEARNING
MEDICAL
PHYSICAL
OR
MENTAL
HEALTH
ARE
STRONGLY
ENCOURAGED
TO
REGISTER
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
IF
THEY
HAVE
NOT
ALREADY
DONE
SO
STUDENTS
WHO
SUSPECT
THEY
MAY
HAVE
DISABILITIES
SHOULD
CONTACT
DSS
FOR
ADVICE
AND
REFERRALS
IN
ORDER
TO
ACCESS
DSS
PROGRAMS
AND
SUPPORTS
STUDENTS
MUST
FOLLOW
DSS
POLICY
AND
PROCEDURES
FOR
MORE
INFORMATION
CHECK
HTTP
WWW
STUDENTS
USASK
CA
DISABILITY
OR
CONTACT
DSS
AT
OR
DSS
USASK
CA
STUDENTS
REGISTERED
WITH
DSS
MAY
REQUEST
ALTERNATIVE
ARRANGEMENTS
FOR
MID
TERM
AND
FINAL
EXAMINATIONS
STUDENTS
MUST
ARRANGE
SUCH
ACCOMMODATIONS
THROUGH
DSS
BY
THE
STATED
DEADLINES
INSTRUCTORS
SHALL
PROVIDE
THE
EXAMINATIONS
FOR
STUDENTS
WHO
ARE
BEING
ACCOMMODATED
BY
THE
DEADLINES
ESTABLISHED
BY
DSS
COURSE
SYLLABUS
CMPT
INTRODUCTION
TO
COMPUTING
CATALOGUE
DESCRIPTION
A
SURVEY
OF
MAJOR
COMPUTER
SCIENCE
AREAS
COMBINING
A
BREADTH
OF
TOPICS
WITH
DEPTH
VIA
SPECIFIC
EXAMPLES
WITHIN
EACH
TOPIC
TOPICS
INCLUDE
HISTORY
OF
COMPUTING
COMPUTER
APPLICATIONS
ANALYSIS
AND
DESIGN
HIGH
LEVEL
PROGRAMMING
COMPUTER
SOFTWARE
COMPUTER
HARDWARE
ARTIFICIAL
INTELLIGENCE
AND
THE
SOCIAL
IMPACT
OF
COMPUTERS
PREREQUISITE
MATHEMATICS
OR
OR
OR
FOUNDATIONS
OF
MATHEMATICS
OR
PRE
CALCULUS
NOTE
AFTER
CMPT
STUDENTS
CAN
TAKE
ANY
OF
AND
STUDENTS
CAN
RECEIVE
CREDIT
FOR
ONLY
ONE
OF
CMPT
CMPT
CMPT
CMPT
STUDENTS
MAY
NOT
TAKE
CMPT
FOR
CREDIT
AFTER
TAKING
CMPT
ALSO
STUDENTS
MAY
NOT
TAKE
CMPT
FOR
CREDIT
CONCURRENT
WITH
OR
FOLLOWING
CMPT
OR
CMPT
STUDENTS
WISHING
TO
MAJOR
IN
COMPUTER
SCIENCE
ARE
ADVISED
TO
TAKE
CMPT
IN
ADDITION
STUDENTS
MA
JORING
IN
COMPUTER
SCIENCE
MAY
NOT
USE
CMPT
AS
A
COURSE
IN
THEIR
MAJOR
BUT
MAY
COUNT
IT
AS
A
JUNIOR
ELECTIVE
AS
LONG
AS
CMPT
IS
TAKEN
BEFORE
CMPT
OR
CMPT
CLASS
TIME
AND
LOCATION
LECTURE
AM
AM
MWF
ARTS
TUTORIALS
AM
PM
WEDNESDAY
AM
PM
TUESDAY
AM
AM
FRIDAY
ALL
IN
THOR
VALDSON
BUILDING
WEBSITE
MOODLE
COURSE
OBJECTIVES
PROVIDE
AN
INTRODUCTION
TO
THE
SCIENCE
AND
IMPACT
OF
COMPUTING
STUDENT
EVALUATION
GRADING
SCHEME
ASSIGNMENTS
THROUGH
EACH
FINAL
PROJECT
ASSIGNMENT
MIDTERM
EXAM
FINAL
EXAM
TOTAL
CRITERIA
THAT
MUST
BE
MET
TO
PASS
STUDENTS
SHOULD
RECEIVE
A
CUMULATIVE
PASSING
MARK
TO
PASS
THE
CLASS
TENTATIVE
SCHEDULE
OF
MIDTERM
AND
ASSIGNMENT
SUBMISSIONS
ASSIGNMENT
DUE
ASSIGNMENT
DUE
ASSIGNMENT
DUE
MIDTERM
EXAM
ASSIGNMENT
DUE
ASSIGNMENT
DUE
NOTE
MIDTERM
AND
FINAL
CUMULATIVE
MARKS
WILL
BE
SCALED
ATTENDANCE
EXPECTATION
STUDENTS
WILL
BE
EXPECTED
TO
KNOW
ALL
INFORMATION
PASSED
ON
DURING
LECTURES
AND
TUTORIALS
AND
THROUGH
THE
WEBPAGE
MOODLE
AND
EMAIL
IF
THEY
MISS
A
LECTURE
OR
TUTORIAL
THEY
ARE
RESPONSIBLE
FOR
ACQUIRING
MATERIAL
COVERED
IN
THE
SESSION
SOME
TOPICS
COVERED
IN
CLASS
MAY
NOT
HAVE
CORRESPONDING
NOTES
ASSOCIATED
WITH
THEM
STUDENTS
ARE
EXPECTED
TO
MAKE
THEIR
OWN
NOTES
IN
THESE
CASES
STUDENTS
WHO
MISS
A
CLASS
IN
WHICH
SUCH
TOPICS
ARE
COVERED
ARE
RESPONSIBLE
FOR
OBTAINING
NOTES
FROM
OTHER
STUDENTS
FINAL
EXAM
SCHEDULING
THE
REGISTRAR
SCHEDULES
ALL
FINAL
EXAMINATIONS
INCLUDING
DEFERRED
AND
SUPPLEMENTAL
EXAMINATIONS
STUDENTS
ARE
ADVISED
NOT
TO
MAKE
TRAVEL
ARRANGEMENTS
FOR
THE
EXAM
PERIOD
UNTIL
THE
OFFICIAL
EXAM
SCHEDULE
HAS
BEEN
POSTED
NOTE
ALL
STUDENTS
MUST
BE
PROPERLY
REGISTERED
IN
ORDER
TO
ATTEND
LECTURES
AND
RECEIVE
CREDIT
FOR
THIS
COURSE
TEXTBOOK
INFORMATION
REQUIRED
TEXT
NONE
RECOMMENDED
TEXTS
NONE
LECTURE
SCHEDULE
TENTATIVE
SCHEDULE
WEEK
OF
TOPIC
SEPT
INTRODUCTION
HARDWARE
AND
SOFTWARE
SYSTEMS
SEPT
HARDWARE
AND
SOFTWARE
SYSTEMS
HTML
AND
HCI
SEPT
HTML
AND
HCI
NETWORKING
AND
THE
INTERNET
SEPT
NETWORKING
AND
THE
INTERNET
SEPT
PROGRAMMING
IN
SCRATCH
OCT
PROBLEM
SOLVING
IN
SCRATCH
ADVANCED
SCRATCH
OCT
COMPUTER
AND
INFORMATION
SECURITY
OCT
SOFTWARE
ENGINEERING
OCT
NEW
MEDIA
NOV
E
COMMERCE
NOV
ARTIFICIAL
INTELLIGENCE
NOV
SOCIAL
AND
TECHNICAL
IMPLICATIONS
OF
ICT
DEC
CONCLUSION
ADDITIONAL
TOPICS
MAY
BE
ADDED
AND
SOME
TOPICS
PARTICULARLY
RELATED
TO
THE
HISTORY
OF
COMPUTER
SCIENCE
MAY
BE
REMOVED
BASED
ON
STUDENT
INTEREST
TOPICS
FOR
POSSIBLE
ADDITION
INCLUDE
BASICS
OF
BINARY
ARITHMETIC
ALGORITHMS
FOR
SEARCHING
AND
SORTING
COMPUTATIONAL
COMPLEXITY
AND
CONCURRENCY
THERE
WILL
BE
SESSIONS
OF
TUTORIALS
TENTATIVELY
SCHEDULED
FOR
THE
WEEKS
OF
SEPT
SEPT
SEPT
SEPT
OCT
OCT
AND
NOV
COURSE
OVERVIEW
IS
AN
INTRODUCTORY
COMPUTER
SCIENCE
COURSE
DESIGNED
TO
PROVIDE
A
BROAD
OVERVIEW
OF
COMPUTER
SCIENCE
AND
A
FOUNDATION
FOR
LIFELONG
USE
OF
AND
LEARNING
ABOUT
COMPUTERS
THIS
COURSE
IS
INTENDED
FOR
STUDENTS
MAJORING
IN
AREAS
OTHER
THAN
COMPUTER
SCIENCE
STUDENTS
WHO
SUCCESSFULLY
COMPLETE
AND
DESIRE
FURTHER
EXPERIENCE
IN
COMPUTING
MAY
CONSIDER
TAKING
AND
LEADING
INTO
THE
INTERACTIVE
SYSTEM
DESIGN
BASC
DEGREE
OR
CMPT
AND
LEADING
TO
THE
COMPUTER
SCIENCE
BSC
DEGREE
YOU
CAN
ALSO
FOLLOW
UP
WITH
IF
YOU
ARE
INTERESTED
IN
BUSINESS
APPLICATIONS
CHECK
OUT
HTTP
WWW
CS
USASK
CA
UNDERGRAD
PROGRAMS
INDEX
PHP
FOR
MORE
INFORMATION
ON
THESE
PROGRAMS
THERE
ARE
A
NUMBER
OF
OTHER
FIRST
YEAR
COURSES
THAT
CAN
BE
TAKEN
BY
STUDENTS
WHO
WANT
AN
ALTERNATIVE
TO
FOR
STUDENTS
INTERESTED
IN
THE
INTERACTIVE
SYSTEM
DESIGN
BASC
CMPT
FOR
STUDENTS
WISHING
TO
TAKE
THE
COMPUTER
SCIENCE
BSC
PROGRAMS
CMPT
FOR
ENGINEERING
STUDENTS
INTERESTED
IN
COM
PUTING
USING
VBA
IN
EXCEL
CMPT
FOR
ENGINEERING
STUDENTS
CONSIDERING
A
DOUBLE
DEGREE
OPTION
WITH
COMPUTER
SCIENCE
FOR
STUDENTS
INTERESTED
IN
DIGITAL
DOCUMENT
PROCESSING
AND
CMPT
A
COURSE
SIMILAR
TO
FOR
BUSINESS
STUDENTS
IF
YOU
TAKE
YOU
CANNOT
ALSO
GET
CREDIT
FOR
OR
POLICIES
LATE
ASSIGNMENTS
ASSIGNMENTS
MUST
BE
TURNED
IN
AT
THE
TIMES
AND
DATES
AND
LOCATIONS
THEY
ARE
DUE
UNLESS
YOU
HAVE
RECEIVED
PERMISSION
IN
ADVANCE
FOR
AN
EXTENSION
MISSED
ASSIGNMENTS
STUDENTS
SHOULD
SUBMIT
EARLY
VERSIONS
OF
THEIR
ASSIGNMENTS
FREQUENTLY
TO
AVOID
THE
POSSIBILITY
OF
MISSING
A
DEADLINE
STUDENTS
WILL
RECEIVE
A
ZERO
FOR
ASSIGNMENTS
MISSED
WITHOUT
PRIOR
PERMISSION
FROM
THE
INSTRUCTOR
IF
THERE
IS
A
COMPELLING
REASON
WHY
SEEKING
PRIOR
PERMISSION
IS
NOT
POSSIBLE
THE
STUDENT
SHOULD
CONTACT
THE
INSTRUCTOR
AT
THE
EARLIEST
OPPORTUNITY
FOR
CONSIDERATION
OF
ALTERNATIVE
ARRANGEMENTS
THE
INSTRUCTOR
WILL
JUDGE
WHETHER
THE
REASON
IS
COMPELLING
MISSED
EXAMINATIONS
STUDENTS
WHO
HAVE
MISSED
AN
EXAM
OR
ASSIGNMENT
MUST
CONTACT
THEIR
INSTRUCTOR
AS
SOON
AS
POSSIBLE
ARRANGEMENTS
TO
MAKE
UP
THE
EXAM
MAY
BE
ARRANGED
WITH
THE
INSTRUCTOR
MISSED
EXAMS
THROUGHOUT
THE
YEAR
ARE
LEFT
UP
TO
THE
DISCRETION
OF
THE
INSTRUCTOR
IF
A
STUDENT
MAY
MAKE
UP
THE
EXAM
OR
WRITE
AT
A
DIFFERENT
TIME
IF
A
STUDENT
KNOWS
PRIOR
TO
THE
EXAM
THAT
SHE
HE
WILL
NOT
BE
ABLE
TO
ATTEND
THEY
SHOULD
LET
THE
INSTRUCTOR
KNOW
BEFORE
THE
EXAM
FINAL
EXAMS
A
STUDENT
WHO
IS
ABSENT
FROM
A
FINAL
EXAMINATION
THROUGH
NO
FAULT
OF
HIS
OR
HER
OWN
FOR
MEDICAL
OR
OTHER
VALID
REASONS
MAY
APPLY
TO
THE
COLLEGE
OF
ARTS
AND
SCIENCE
DEAN
OFFICE
THE
APPLI
CATION
MUST
BE
MADE
WITHIN
THREE
DAYS
OF
THE
MISSED
EXAMINATION
ALONG
WITH
SUPPORTING
DOCUMENTARY
EVIDENCE
DEFERRED
EXAMS
ARE
WRITTEN
DURING
THE
FEBRUARY
MID
TERM
BREAK
FOR
TERM
COURSES
AND
IN
EARLY
JUNE
FOR
TERM
AND
FULL
YEAR
COURSES
HTTP
WWW
ARTS
USASK
CA
STUDENTS
TRANSITION
TIPS
PHP
INCOMPLETE
COURSE
WORK
AND
FINAL
GRADES
WHEN
A
STUDENT
HAS
NOT
COMPLETED
THE
REQUIRED
COURSE
WORK
WHICH
INCLUDES
ANY
ASSIGNMENT
OR
EXAMINATION
INCLUDING
THE
FINAL
EXAMINATION
BY
THE
TIME
OF
SUBMISSION
OF
THE
FINAL
GRADES
THEY
MAY
BE
GRANTED
AN
EXTENSION
TO
PERMIT
COMPLETION
OF
AN
ASSIGNMENT
OR
GRANTED
A
DEFERRED
EXAMINATION
IN
THE
CASE
OF
ABSENCE
FROM
A
FINAL
EXAMINATION
EXTENSIONS
FOR
THE
COMPLETION
OF
ASSIGNMENTS
MUST
BE
APPROVED
BY
THE
DEPARTMENT
HEAD
OR
DEAN
IN
NON
DEPARTMENTALIZED
COLLEGES
AND
MAY
EXCEED
THIRTY
DAYS
ONLY
IN
UNUSUAL
CIRCUMSTANCES
THE
STUDENT
MUST
APPLY
TO
THE
INSTRUCTOR
FOR
SUCH
AN
EXTENSION
AND
FURNISH
SATISFACTORY
REASONS
FOR
THE
DEFICIENCY
DEFERRED
FINAL
EXAMINATIONS
ARE
GRANTED
AS
PER
COLLEGE
POLICY
IN
THE
INTERIM
THE
INSTRUCTOR
WILL
SUBMIT
A
COMPUTED
PERCENTILE
GRADE
FOR
THE
COURSE
WHICH
FACTORS
IN
THE
INCOMPLETE
COURSE
WORK
AS
A
ZERO
ALONG
WITH
A
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
IF
A
FAILING
GRADE
IN
THE
CASE
WHERE
THE
INSTRUCTOR
HAS
INDICATED
IN
THE
COURS
E
OUTLINE
THAT
FAILURE
TO
COMPLETE
THE
REQUIRED
COURSE
WORK
WILL
RESULT
IN
FAILURE
IN
THE
COURSE
AND
THE
STUDENT
HAS
A
COMPUTED
PASSING
PERCENTILE
GRADE
A
FINAL
GRADE
OF
WILL
BE
SUBMITTED
ALONG
WITH
A
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
IF
AN
EXTENSION
IS
GRANTED
AND
THE
REQUIRED
ASSIGNMENT
IS
SUBMITTED
WITHIN
THE
ALLOTTED
TIME
OR
IF
A
DEFERRED
EXAMINATION
IS
GRANTED
AND
WRITTEN
IN
THE
CASE
OF
ABSENCE
FROM
THE
FINAL
EXAMINATION
THE
INSTRUCTOR
WILL
SUBMIT
A
REVISED
COMPUTED
FINAL
PERCENTAGE
GRADE
THE
GRADE
CHANGE
WILL
REPLACE
THE
PREVIOUS
GRADE
AND
ANY
GRADE
COMMENT
OF
INF
INCOMPLETE
FAILURE
WILL
BE
REMOVED
FOR
PROVISIONS
GOVERNING
EXAMINATIONS
AND
GRADING
STUDENTS
ARE
REFERRED
TO
THE
UNIVERSITY
COUNCIL
REGU
LATIONS
ON
EXAMINATIONS
SUBSECTION
OF
THE
CALENDAR
UNIVERSITY
OF
SASKATCHEWAN
CALENDAR
ACADEMIC
COURSES
POLICY
ACADEMIC
HONESTY
THE
UNIVERSITY
OF
SASKATCHEWAN
IS
COMMITTED
TO
THE
HIGHEST
STANDARDS
OF
ACADEMIC
INTEGRITY
AND
HONESTY
STUDENTS
ARE
EXPECTED
TO
BE
FAMILIAR
WITH
THESE
STANDARDS
REGARDING
ACADEMIC
HONESTY
AND
TO
UPHOLD
THE
POLICIES
OF
THE
UNIVERSITY
IN
THIS
RESPECT
STUDENTS
ARE
PARTICULARLY
URGED
TO
FAMILIARIZE
THEMSELVES
WITH
THE
PROVISIONS
OF
THE
STUDENT
CONDUCT
APPEALS
SUBSECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AND
AVOID
ANY
BEHAVIOUR
THAT
COULD
POTENTIALLY
RESULT
IN
SUSPICIONS
OF
CHEATING
PLAGIARISM
MISREPRESENTATION
OF
FACTS
AND
OR
PARTICIPATION
IN
AN
OFFENCE
ACADEMIC
DISHONESTY
IS
A
SERIOUS
OFFENCE
AND
CAN
RESULT
IN
SUSPENSION
OR
EXPULSION
FROM
THE
UNIVERSITY
ALL
STUDENTS
SHOULD
READ
AND
BE
FAMILIAR
WITH
THE
REGULATIONS
ON
ACADEMIC
STUDENT
MISCONDUCT
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
STUDENTACADEMICMISCONDUCT
PDF
AS
WELL
AS
THE
STANDARD
OF
STUDENT
CONDUCT
IN
NON
ACADEMIC
MATTERS
AND
PROCEDURES
FOR
RESOLUTION
OF
COM
PLAINTS
AND
APPEALS
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
STUDENTNON
ACADEMICMISCONDUCT
PDF
ACADEMIC
HONESTY
IS
ALSO
DEFINED
AND
DESCRIBED
IN
THE
DEPARTMENT
OF
COMPUTER
SCIENCE
STATEMENT
ON
ACADEMIC
HONESTY
HTTP
WWW
CS
USASK
CA
UNDERGRAD
HONESTY
PHP
FOR
MORE
INFORMATION
ON
WHAT
ACADEMIC
INTEGRITY
MEANS
FOR
STUDENTS
SEE
THE
STUDENT
CONDUCT
APPEALS
SUBSECTION
OF
THE
UNIVERSITY
SECRETARY
WEBSITE
AT
HTTP
WWW
USASK
CA
SECRETARIAT
STUDENT
CONDUCT
APPEALS
FORMS
INTEGRITYDEFINED
PDF
EXAMINATIONS
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
STUDENTS
WHO
HAVE
DISABILITIES
LEARNING
MEDICAL
PHYSICAL
OR
MENTAL
HEALTH
ARE
STRONGLY
ENCOURAGED
TO
REGIS
TER
WITH
DISABILITY
SERVICES
FOR
STUDENTS
DSS
IF
THEY
HAVE
NOT
ALREADY
DONE
SO
STUDENTS
WHO
SUSPECT
THEY
MAY
HAVE
DISABILITIES
SHOULD
CONTACT
DSS
FOR
ADVICE
AND
REFERRALS
IN
ORDER
TO
ACCESS
DSS
PROGRAMS
AND
SUPPORTS
STU
DENTS
MUST
FOLLOW
DSS
POLICY
AND
PROCEDURES
FOR
MORE
INFORMATION
CHECK
HTTP
WWW
STUDENTS
USASK
CA
DISABILITY
OR
CONTACT
DSS
AT
OR
DSS
USASK
CA
STUDENTS
REGISTERED
WITH
DSS
MAY
REQUEST
ALTERNATIVE
ARRANGEMENTS
FOR
MID
TERM
AND
FINAL
EXAMINATIONS
STUDENTS
MUST
ARRANGE
SUCH
ACCOMMODATIONS
THROUGH
DSS
BY
THE
STATED
DEADLINES
INSTRUCTORS
SHALL
PROVIDE
THE
EXAMINATIONS
FOR
STUDENTS
WHO
ARE
BEING
ACCOMMODATED
BY
THE
DEADLINES
ESTABLISHED
BY
DSS
THE
IF
STATEMENT
THE
IF
STATEMENT
IS
USED
TO
IMPLEMENT
A
DECISION
WHEN
A
CONDITION
IS
FULFILLED
ONE
SET
OF
STATEMENTS
IS
EXECUTED
OTHERWISE
ANOTHER
SET
OF
STATEMENTS
IS
EXECUTED
SEE
SYNTAX
HERE
IS
AN
EXAMPLE
USING
THE
IF
STATEMENT
IN
MANY
COUNTRIES
THE
NUMBER
IS
CONSIDERED
UNLUCKY
RATHER
THAN
OFFENDING
SUPERSTITIOUS
TEN
ANTS
BUILDING
OWNERS
SOMETIMES
SKIP
THE
THIRTEENTH
FLOOR
FLOOR
IS
IMMEDIATELY
FOLLOWED
BY
FLOOR
OF
COURSE
FLOOR
IS
NOT
USUALLY
LEFT
EMPTY
OR
AS
SOME
CONSPIRACY
THEORISTS
BELIEVE
FILLED
WITH
SECRET
OFFICES
AND
RESEARCH
LABS
IT
IS
SIMPLY
CALLED
FLOOR
THE
COMPUTER
THAT
CONTROLS
THE
BUILDING
ELEVA
TORS
NEEDS
TO
COMPENSATE
FOR
THIS
FOIBLE
AND
ADJUST
ALL
FLOOR
NUMBERS
ABOVE
LET
SIMULATE
THIS
PROCESS
IN
C
WE
WILL
ASK
THE
USER
TO
TYPE
IN
THE
DESIRED
FLOOR
NUMBER
AND
THEN
COMPUTE
THE
ACTUAL
FLOOR
WHEN
THE
INPUT
IS
ABOVE
THEN
WE
NEED
TO
DECREMENT
THE
INPUT
TO
OBTAIN
THE
ACTUAL
FLOOR
FOR
EXAMPLE
IF
THE
USER
PROVIDES
AN
INPUT
OF
THE
PROGRAM
DETERMINES
THE
ACTUAL
FLOOR
AS
OTHERWISE
WE
SIMPLY
USE
THE
SUPPLIED
FLOOR
NUMBER
INT
IF
FLOOR
THIS
ELEVATOR
PANEL
SKIPS
THE
THIRTEENTH
FLOOR
THE
FLOOR
IS
NOT
ACTUALLY
MISSING
THE
COMPUTER
THAT
CONTROLS
THE
ELEVATOR
ADJUSTS
THE
FLOOR
NUMBERS
ABOVE
FLOOR
ELSE
FLOOR
THE
FLOWCHART
IN
FIGURE
SHOWS
THE
BRANCHING
BEHAVIOR
IN
OUR
EXAMPLE
EACH
BRANCH
OF
THE
IF
STATEMENT
CONTAINS
A
SINGLE
STATEMENT
YOU
CAN
INCLUDE
AS
MANY
STATEMENTS
IN
EACH
BRANCH
AS
YOU
LIKE
SOMETIMES
IT
HAPPENS
THAT
FIGURE
FLOWCHART
FOR
IF
STATEMENT
FIGURE
FLOWCHART
FOR
IF
STATEMENT
WITH
NO
ELSE
BRANCH
THERE
IS
NOTHING
TO
DO
IN
THE
ELSE
BRANCH
OF
THE
STATEMENT
IN
THAT
CASE
YOU
CAN
OMIT
IT
ENTIRELY
SUCH
AS
IN
THIS
EXAMPLE
INT
FLOOR
IF
FLOOR
NO
ELSE
NEEDED
SEE
FIGURE
FOR
THE
FLOWCHART
THE
FOLLOWING
PROGRAM
PUTS
THE
IF
STATEMENT
TO
WORK
THIS
PROGRAM
ASKS
FOR
THE
DESIRED
FLOOR
AND
THEN
PRINTS
OUT
THE
ACTUAL
FLOOR
AN
IF
STATEMENT
IS
LIKE
A
FORK
IN
THE
ROAD
DEPENDING
UPON
A
DECISION
DIFFERENT
PARTS
OF
THE
PROGRAM
ARE
EXECUTED
CPP
PROGRAM
RUN
SYNTAX
IF
STATEMENT
IN
SOME
ASIAN
COUNTRIES
THE
NUMBER
IS
CONSIDERED
UNLUCKY
SOME
BUILDING
OWNERS
PLAY
IT
SAFE
AND
SKIP
BOTH
THE
THIRTEENTH
AND
THE
FOURTEENTH
FLOOR
HOW
WOULD
YOU
MODIFY
THE
SAMPLE
PROGRAM
TO
HANDLE
SUCH
A
BUILDING
CONSIDER
THE
FOLLOWING
IF
STATEMENT
TO
COMPUTE
A
DISCOUNTED
PRICE
IF
ELSE
WHAT
IS
THE
DISCOUNTED
PRICE
IF
THE
ORIGINAL
PRICE
IS
COMPARE
THIS
IF
STATEMENT
WITH
THE
ONE
IN
SELF
CHECK
IF
ELSE
DO
THE
TWO
STATEMENTS
ALWAYS
COMPUTE
THE
SAME
VALUE
IF
NOT
WHEN
DO
THE
VALUES
DIFFER
CONSIDER
THE
FOLLOWING
STATEMENTS
TO
COMPUTE
A
DISCOUNTED
PRICE
IF
WHAT
IS
THE
DISCOUNTED
PRICE
IF
THE
ORIGINAL
PRICE
IS
THE
VARIABLES
AND
HOLD
THE
ACTUAL
AMOUNT
OF
FUEL
AND
THE
SIZE
OF
THE
FUEL
TANK
OF
A
VEHICLE
IF
LESS
THAN
PERCENT
IS
REMAINING
IN
THE
TANK
A
STATUS
LIGHT
SHOULD
SHOW
A
RED
COLOR
OTHERWISE
IT
SHOWS
A
GREEN
COLOR
SIMULATE
THIS
PROCESS
BY
PRINTING
OUT
EITHER
RED
OR
GREEN
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
COMMON
ERROR
A
SEMICOLON
AFTER
THE
IF
CONDITION
THE
FOLLOWING
CODE
FRAGMENT
HAS
AN
UNFORTUNATE
ERROR
IF
FLOOR
ERROR
FLOOR
THERE
SHOULD
BE
NO
SEMICOLON
AFTER
THE
IF
CONDITION
THE
COMPILER
INTERPRETS
THIS
STATEMENT
AS
FOLLOWS
IF
FLOOR
IS
GREATER
THAN
EXECUTE
THE
STATEMENT
THAT
IS
DENOTED
BY
A
SINGLE
SEMICOLON
THAT
IS
THE
DO
NOTHING
STATEMENT
THE
STATEMENT
ENCLOSED
IN
BRACES
IS
NO
LONGER
A
PART
OF
THE
IF
STATEMENT
IT
IS
ALWAYS
EXECUTED
EVEN
IF
THE
VALUE
OF
FLOOR
IS
NOT
ABOVE
IT
IS
DECREMENTED
PLACING
A
SEMICOLON
AFTER
THE
ELSE
RESERVED
WORD
IS
ALSO
WRONG
IF
FLOOR
FLOOR
ELSE
FLOOR
IN
THIS
CASE
THE
DO
NOTHING
STATEMENT
IS
EXECUTED
IF
FLOOR
IS
NOT
FULFILLED
THIS
IS
THE
END
OF
THE
IF
STATEMENT
THE
NEXT
STATEMENT
ENCLOSED
IN
BRACES
IS
EXECUTED
IN
BOTH
CASES
THAT
IS
IS
ALWAYS
SET
TO
FLOOR
PROGRAMMING
TIP
TABS
BLOCK
STRUCTURED
CODE
HAS
THE
PROPERTY
THAT
NESTED
STATEMENTS
ARE
INDENTED
BY
ONE
OR
MORE
LEVELS
INT
MAIN
INT
FLOOR
IF
FLOOR
FLOOR
RETURN
INDENTATION
LEVEL
HOW
DO
YOU
MOVE
THE
CURSOR
FROM
THE
LEFTMOST
COLUMN
TO
THE
APPROPRIATE
INDENTATION
LEVEL
A
PERFECTLY
REASONABLE
STRATEGY
IS
TO
HIT
THE
SPACE
BAR
A
SUFFICIENT
NUMBER
OF
TIMES
HOWEVER
MANY
PRO
GRAMMERS
USE
THE
TAB
KEY
INSTEAD
A
TAB
MOVES
THE
CURSOR
TO
THE
NEXT
INDENTATION
LEVEL
YOU
USE
THE
TAB
KEY
TO
MOVE
THE
CURSOR
TO
THE
NEXT
INDENTATION
LEVEL
WHILE
THE
TAB
KEY
IS
NICE
SOME
EDITORS
USE
TAB
CHARACTERS
FOR
ALIGNMENT
WHICH
IS
NOT
SO
NICE
TAB
CHARACTERS
CAN
LEAD
TO
PROBLEMS
WHEN
YOU
SEND
YOUR
FILE
TO
ANOTHER
PERSON
OR
A
PRINTER
THERE
IS
NO
UNIVERSAL
AGREEMENT
ON
THE
WIDTH
OF
A
TAB
CHARACTER
AND
SOME
SOFTWARE
WILL
IGNORE
TABS
ALTOGETHER
IT
IS
THEREFORE
BEST
TO
SAVE
YOUR
FILES
WITH
SPACES
INSTEAD
OF
TABS
MOST
EDITORS
HAVE
A
SETTING
TO
AUTOMATICALLY
CONVERT
ALL
TABS
TO
SPACES
LOOK
AT
THE
DOCUMENTATION
OF
YOUR
DEVELOPMENT
ENVIRONMENT
TO
FIND
OUT
HOW
TO
ACTIVATE
THIS
USEFUL
SETTING
PROGRAMMING
TIP
AVOID
DUPLICATION
IN
BRANCHES
LOOK
TO
SEE
WHETHER
YOU
DUPLICATE
CODE
IN
EACH
BRANCH
IF
SO
MOVE
IT
OUT
OF
THE
IF
STATEMENT
HERE
IS
AN
EXAMPLE
OF
SUCH
DUPLICATION
IF
FLOOR
FLOOR
COUT
ACTUAL
FLOOR
ENDL
ELSE
FLOOR
COUT
ACTUAL
FLOOR
ENDL
THE
OUTPUT
STATEMENT
IS
EXACTLY
THE
SAME
IN
BOTH
BRANCHES
THIS
IS
NOT
AN
ERROR
THE
PROGRAM
WILL
RUN
CORRECTLY
HOWEVER
YOU
CAN
SIMPLIFY
THE
PROGRAM
BY
MOVING
THE
DUPLICATED
STATE
MENT
LIKE
THIS
IF
FLOOR
FLOOR
ELSE
FLOOR
COUT
ACTUAL
FLOOR
ENDL
REMOVING
DUPLICATION
IS
PARTICULARLY
IMPORTANT
WHEN
PROGRAMS
ARE
MAINTAINED
FOR
A
LONG
TIME
WHEN
THERE
ARE
TWO
SETS
OF
STATEMENTS
WITH
THE
SAME
EFFECT
IT
CAN
EASILY
HAPPEN
THAT
A
PROGRAMMER
MODIFIES
ONE
SET
BUT
NOT
THE
OTHER
COMPARING
NUMBERS
AND
STRINGS
EVERY
IF
STATEMENT
CONTAINS
A
CONDI
TION
IN
MANY
CASES
THE
CONDITION
INVOLVES
COMPARING
TWO
VALUES
FOR
EXAMPLE
IN
THE
PREVIOUS
EXAMPLES
WE
TESTED
FLOOR
THE
COMPARISON
IS
CALLED
A
RELATIONAL
OPERATOR
C
HAS
SIX
RELATIONAL
OPERATORS
SEE
TABLE
AS
YOU
CAN
SEE
ONLY
TWO
C
RELA
TIONAL
OPERATORS
AND
LOOK
AS
YOU
WOULD
EXPECT
FROM
THE
MATHEMATICAL
NOTATION
COMPUTER
KEYBOARDS
DO
NOT
HAVE
KEYS
FOR
OR
BUT
THE
AND
OPERATORS
ARE
EASY
TO
REMEM
BER
BECAUSE
THEY
LOOK
SIMILAR
THE
OPERATOR
IS
INITIALLY
CONFUSING
TO
MOST
NEWCOMERS
TO
C
IN
C
ALREADY
HAS
A
MEANING
NAMELY
ASSIGNMENT
IN
C
YOU
USE
A
RELATIONAL
OPERATOR
TO
CHECK
WHETHER
ONE
VALUE
IS
GREATER
THAN
ANOTHER
C
MATH
NOTATION
DESCRIPTION
GREATER
THAN
GREATER
THAN
OR
EQUAL
LESS
THAN
LESS
THAN
OR
EQUAL
EQUAL
NOT
EQUAL
THE
OPERATOR
DENOTES
EQUALITY
TESTING
FLOOR
ASSIGN
TO
FLOOR
IF
FLOOR
TEST
WHETHER
FLOOR
EQUALS
YOU
MUST
REMEMBER
TO
USE
INSIDE
TESTS
AND
TO
USE
OUTSIDE
TESTS
SEE
COMMON
ERROR
ON
PAGE
FOR
MORE
INFORMATION
YOU
CAN
COMPARE
STRINGS
AS
WELL
IF
INPUT
QUIT
USE
TO
CHECK
WHETHER
TWO
STRINGS
ARE
DIFFERENT
IN
C
LETTER
CASE
MATTERS
FOR
EXAMPLE
QUIT
AND
QUIT
ARE
NOT
THE
SAME
STRING
SYNTAX
COMPARISONS
EXPRESSION
VALUE
COMMENT
TRUE
IS
LESS
THAN
TESTS
FOR
LESS
THAN
OR
EQUAL
ERROR
THE
LESS
THAN
OR
EQUAL
OPERATOR
IS
NOT
THE
LESS
THAN
SYMBOL
COMES
FIRST
FALSE
IS
THE
OPPOSITE
OF
FALSE
THE
LEFT
HAND
SIDE
MUST
BE
STRICTLY
SMALLER
THAN
THE
RIGHT
HAND
SIDE
TRUE
BOTH
SIDES
ARE
EQUAL
TESTS
FOR
LESS
THAN
OR
EQUAL
TRUE
TESTS
FOR
EQUALITY
TRUE
TESTS
FOR
INEQUALITY
IT
IS
TRUE
THAT
IS
NOT
ERROR
USE
TO
TEST
FOR
EQUALITY
FALSE
ALTHOUGH
THE
VALUES
ARE
VERY
CLOSE
TO
ONE
ANOTHER
THEY
ARE
NOT
EXACTLY
EQUAL
SEE
COMMON
ERROR
ON
PAGE
ERROR
YOU
CANNOT
COMPARE
A
STRING
TO
A
NUMBER
TABLE
SUMMARIZES
HOW
TO
USE
RELATIONAL
OPERATORS
IN
C
WHICH
OF
THE
FOLLOWING
CONDITIONS
ARE
TRUE
PROVIDED
A
IS
AND
B
IS
A
A
B
B
A
B
C
A
B
GIVE
THE
OPPOSITE
OF
THE
CONDITION
FLOOR
WHAT
IS
THE
ERROR
IN
THIS
STATEMENT
IF
COUT
TIE
ENDL
SUPPLY
A
CONDITION
IN
THIS
IF
STATEMENT
TO
TEST
WHETHER
THE
USER
ENTERED
A
Y
STRING
INPUT
COUT
ENTER
Y
TO
QUIT
ENDL
CIN
INPUT
IF
COUT
GOODBYE
ENDL
RETURN
HOW
DO
YOU
TEST
THAT
A
STRING
STR
IS
NOT
THE
EMPTY
STRING
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
COMMON
ERROR
CONFUSING
AND
THE
RULE
FOR
THE
CORRECT
USAGE
OF
AND
IS
VERY
SIMPLE
IN
TESTS
ALWAYS
USE
AND
NEVER
USE
IF
IT
IS
SO
SIMPLE
WHY
CAN
T
THE
COMPILER
BE
HELPFUL
AND
FLAG
ANY
ERRORS
ACTUALLY
THE
C
LANGUAGE
ALLOWS
THE
USE
OF
INSIDE
TESTS
TO
UNDERSTAND
THIS
WE
HAVE
TO
GO
BACK
IN
TIME
THE
CREATORS
OF
C
THE
PREDECESSOR
TO
C
WERE
VERY
FRUGAL
THEY
DID
NOT
WANT
TO
HAVE
SPECIAL
VALUES
TRUE
AND
FALSE
INSTEAD
THEY
ALLOWED
ANY
NUMERIC
VALUE
INSIDE
A
CONDITION
WITH
THE
CONVENTION
THAT
DENOTES
FALSE
AND
ANY
NON
VALUE
DENOTES
TRUE
FUR
THERMORE
IN
C
AND
C
ASSIGNMENTS
HAVE
VALUES
FOR
EXAMPLE
THE
VALUE
OF
THE
ASSIGNMENT
EXPRESSION
FLOOR
IS
THESE
TWO
FEATURES
NAMELY
THAT
NUMBERS
CAN
BE
USED
AS
TRUTH
VALUES
AND
THAT
ASSIGNMENTS
ARE
EXPRESSIONS
WITH
VALUES
CONSPIRE
TO
MAKE
A
HORRIBLE
PITFALL
THE
TEST
IF
FLOOR
ERROR
IS
LEGAL
C
BUT
IT
DOES
NOT
TEST
WHETHER
FLOOR
AND
ARE
EQUAL
INSTEAD
THE
CODE
SETS
FLOOR
TO
AND
SINCE
THAT
VALUE
IS
NOT
ZERO
THE
CONDITION
OF
THE
IF
STATEMENT
IS
ALWAYS
FULFILLED
FORTUNATELY
MOST
COMPILERS
ISSUE
A
WARNING
WHEN
THEY
ENCOUNTER
SUCH
A
STATEMENT
YOU
SHOULD
TAKE
SUCH
WARNINGS
SERIOUSLY
SEE
PROGRAMMING
TIP
FOR
MORE
ADVICE
ABOUT
COM
PILER
WARNINGS
SOME
SHELL
SHOCKED
PROGRAMMERS
ARE
SO
NERVOUS
ABOUT
USING
THAT
THEY
USE
EVEN
WHEN
THEY
WANT
TO
MAKE
AN
ASSIGNMENT
FLOOR
FLOOR
ERROR
THIS
STATEMENT
TESTS
WHETHER
FLOOR
EQUALS
FLOOR
IT
DOESN
T
DO
ANYTHING
WITH
THE
OUTCOME
OF
THE
TEST
BUT
THAT
IS
NOT
AN
ERROR
SOME
COMPILERS
WILL
WARN
THAT
THE
CODE
HAS
NO
EFFECT
BUT
OTHERS
WILL
QUIETLY
ACCEPT
THE
CODE
COMMON
ERROR
EXACT
COMPARISON
OF
FLOATING
POINT
NUMBERS
FLOATING
POINT
NUMBERS
HAVE
ONLY
A
LIMITED
PRECISION
AND
CALCULATIONS
CAN
INTRODUCE
ROUNDOFF
ERRORS
YOU
MUST
TAKE
THESE
INEVITABLE
ROUNDOFFS
INTO
ACCOUNT
WHEN
COMPARING
FLOATING
POINT
NUMBERS
FOR
EXAMPLE
THE
FOLLOWING
CODE
MULTIPLIES
THE
SQUARE
ROOT
OF
BY
ITSELF
IDEALLY
WE
EXPECT
TO
GET
THE
ANSWER
DOUBLE
R
SQRT
IF
R
R
COUT
SQRT
SQUARED
IS
ENDL
ELSE
TAKE
LIMITED
PRECISION
INTO
ACCOUNT
WHEN
COMPARING
FLOATING
POINT
NUMBERS
COUT
SQRT
SQUARED
IS
NOT
BUT
SETPRECISION
R
R
ENDL
THIS
PROGRAM
DISPLAYS
SQRT
SQUARED
IS
NOT
BUT
IT
DOES
NOT
MAKE
SENSE
IN
MOST
CIRCUMSTANCES
TO
COMPARE
FLOATING
POINT
NUMBERS
EXACTLY
INSTEAD
WE
SHOULD
TEST
WHETHER
THEY
ARE
CLOSE
ENOUGH
THAT
IS
THE
MAGNITUDE
OF
THEIR
DIFFER
ENCE
SHOULD
BE
LESS
THAN
SOME
THRESHOLD
MATHEMATICALLY
WE
WOULD
WRITE
THAT
X
AND
Y
ARE
CLOSE
ENOUGH
IF
X
Y
FOR
A
VERY
SMALL
NUMBER
IS
THE
GREEK
LETTER
EPSILON
A
LETTER
USED
TO
DENOTE
A
VERY
SMALL
QUANTITY
IT
IS
COMMON
TO
SET
TO
WHEN
COMPARING
DOUBLE
NUMBERS
CONST
DOUBLE
EPSILON
DOUBLE
R
SQRT
IF
FABS
R
R
EPSILON
COUT
SQRT
SQUARED
IS
APPROXIMATELY
INCLUDE
THE
CMATH
HEADER
TO
USE
THE
FABS
FUNCTION
C
A
R
C
A
R
T
C
A
T
STEP
DECIDE
UPON
THE
BRANCHING
CONDITION
IN
OUR
SAMPLE
PROBLEM
THE
OBVIOUS
CHOICE
FOR
THE
CONDITION
IS
ORIGINAL
PRICE
THAT
IS
JUST
FINE
AND
WE
WILL
USE
THAT
CONDITION
IN
OUR
SOLUTION
BUT
YOU
COULD
EQUALLY
WELL
COME
UP
WITH
A
COR
RECT
SOLUTION
IF
YOU
CHOOSE
THE
OPPOSITE
CONDITION
IS
THE
ORIGINAL
PRICE
AT
LEAST
YOU
MIGHT
CHOOSE
THIS
CONDITION
IF
YOU
PUT
YOURSELF
INTO
THE
POSITION
OF
A
SHOPPER
WHO
WANTS
TO
KNOW
WHEN
THE
BIGGER
DISCOUNT
APPLIES
STEP
GIVE
PSEUDOCODE
FOR
THE
WORK
THAT
NEEDS
TO
BE
DONE
WHEN
THE
CONDITION
IS
TRUE
SALES
DISCOUNTS
ARE
OFTEN
HIGHER
FOR
EXPENSIVE
PRODUCTS
USE
THE
IF
STATE
MENT
TO
IMPLEMENT
SUCH
A
DECISION
IN
THIS
STEP
YOU
LIST
THE
ACTION
OR
ACTIONS
THAT
ARE
TAKEN
IN
THE
POSITIVE
BRANCH
THE
DETAILS
DEPEND
ON
YOUR
PROBLEM
YOU
MAY
WANT
TO
PRINT
A
MESSAGE
COMPUTE
VALUES
OR
EVEN
EXIT
THE
PROGRAM
IN
OUR
EXAMPLE
WE
NEED
TO
APPLY
AN
PERCENT
DISCOUNT
DISCOUNTED
PRICE
X
ORIGINAL
PRICE
STEP
GIVE
PSEUDOCODE
FOR
THE
WORK
IF
ANY
THAT
NEEDS
TO
BE
DONE
WHEN
THE
CONDITION
IS
NOT
TRUE
WHAT
DO
YOU
WANT
TO
DO
IN
THE
CASE
THAT
THE
CONDITION
OF
STEP
IS
NOT
FULFILLED
SOMETIMES
YOU
WANT
TO
DO
NOTHING
AT
ALL
IN
THAT
CASE
USE
AN
IF
STATEMENT
WITHOUT
AN
ELSE
BRANCH
IN
OUR
EXAMPLE
THE
CONDITION
TESTED
WHETHER
THE
PRICE
WAS
LESS
THAN
IF
THAT
CONDITION
IS
NOT
TRUE
THE
PRICE
IS
AT
LEAST
SO
THE
HIGHER
DISCOUNT
OF
PERCENT
APPLIES
TO
THE
SALE
DISCOUNTED
PRICE
X
ORIGINAL
PRICE
STEP
DOUBLE
CHECK
RELATIONAL
OPERATORS
FIRST
BE
SURE
THAT
THE
TEST
GOES
IN
THE
RIGHT
DIRECTION
IT
IS
A
COMMON
ERROR
TO
CONFUSE
AND
NEXT
CONSIDER
WHETHER
YOU
SHOULD
USE
THE
OPERATOR
OR
ITS
CLOSE
COUSIN
THE
OPERATOR
WHAT
SHOULD
HAPPEN
IF
THE
ORIGINAL
PRICE
IS
EXACTLY
READING
THE
PROBLEM
CAREFULLY
WE
FIND
THAT
THE
LOWER
DISCOUNT
APPLIES
IF
THE
ORIGINAL
PRICE
IS
LESS
THAN
AND
THE
HIGHER
DIS
COUNT
APPLIES
WHEN
IT
IS
AT
LEAST
A
PRICE
OF
SHOULD
THEREFORE
NOT
FULFILL
OUR
CONDITION
AND
WE
MUST
USE
NOT
STEP
REMOVE
DUPLICATION
CHECK
WHICH
ACTIONS
ARE
COMMON
TO
BOTH
BRANCHES
AND
MOVE
THEM
OUTSIDE
SEE
PROGRAM
MING
TIP
ON
PAGE
IN
OUR
EXAMPLE
WE
HAVE
TWO
STATEMENTS
OF
THE
FORM
DISCOUNTED
PRICE
X
ORIGINAL
PRICE
THEY
ONLY
DIFFER
IN
THE
DISCOUNT
RATE
IT
IS
BEST
TO
JUST
SET
THE
RATE
IN
THE
BRANCHES
AND
TO
DO
THE
COMPUTATION
AFTERWARDS
IF
ORIGINAL
PRICE
DISCOUNT
RATE
ELSE
DISCOUNT
RATE
DISCOUNTED
PRICE
DISCOUNT
RATE
X
ORIGINAL
PRICE
STEP
TEST
BOTH
BRANCHES
FORMULATE
TWO
TEST
CASES
ONE
THAT
FULFILLS
THE
CONDITION
OF
THE
IF
STATEMENT
AND
ONE
THAT
DOES
NOT
ASK
YOURSELF
WHAT
SHOULD
HAPPEN
IN
EACH
CASE
THEN
FOLLOW
THE
PSEUDOCODE
AND
ACT
EACH
OF
THEM
OUT
IN
OUR
EXAMPLE
LET
US
CONSIDER
TWO
SCENARIOS
FOR
THE
ORIGINAL
PRICE
AND
WE
EXPECT
THAT
THE
FIRST
PRICE
IS
DISCOUNTED
BY
THE
SECOND
BY
WHEN
THE
ORIGINAL
PRICE
IS
THEN
THE
CONDITION
IS
TRUE
AND
WE
GET
DISCOUNT
RATE
DISCOUNTED
PRICE
X
WHEN
THE
ORIGINAL
PRICE
IS
THEN
THE
CONDITION
IS
FALSE
AND
DISCOUNT
RATE
DISCOUNTED
PRICE
X
IN
BOTH
CASES
WE
GET
THE
EXPECTED
ANSWER
STEP
ASSEMBLE
THE
IF
STATEMENT
IN
C
TYPE
THE
SKELETON
IF
ELSE
AND
FILL
IT
IN
AS
SHOWN
IN
SYNTAX
ON
PAGE
OMIT
THE
ELSE
BRANCH
IF
IT
IS
NOT
NEEDED
IN
OUR
EXAMPLE
THE
COMPLETED
STATEMENT
IS
IF
ELSE
RANDOM
FACT
THE
DENVER
AIRPORT
LUGGAGE
HANDLING
SYSTEM
MAKING
DECISIONS
IS
AN
ESSENTIAL
PART
OF
ANY
COMPUTER
PROGRAM
NOWHERE
IS
THIS
MORE
OBVIOUS
THAN
IN
A
COMPUTER
SYSTEM
THAT
HELPS
SORT
LUGGAGE
AT
AN
AIRPORT
AFTER
SCANNING
THE
LUGGAGE
IDENTIFICATION
CODES
THE
SYSTEM
SORTS
THE
ITEMS
AND
ROUTES
THEM
TO
DIFFERENT
CONVEYOR
BELTS
HUMAN
OPERATORS
THEN
PLACE
THE
ITEMS
ONTO
TRUCKS
WHEN
THE
CITY
OF
DENVER
BUILT
A
HUGE
AIRPORT
TO
REPLACE
AN
OUTDATED
AND
CONGESTED
FACILITY
THE
LUGGAGE
SYSTEM
CONTRACTOR
WENT
A
STEP
FURTHER
THE
NEW
SYSTEM
WAS
DESIGNED
TO
REPLACE
THE
HUMAN
OPERATORS
WITH
ROBOTIC
CARTS
UNFORTU
NATELY
THE
SYSTEM
PLAINLY
DID
NOT
WORK
IT
WAS
PLAGUED
BY
MECHANICAL
PROB
LEMS
SUCH
AS
LUGGAGE
FALLING
ONTO
THE
TRACKS
AND
JAMMING
CARTS
EQUALLY
FRUS
TRATING
WERE
THE
SOFTWARE
GLITCHES
CARTS
WOULD
USELESSLY
ACCUMULATE
AT
SOME
LOCATIONS
WHEN
THEY
WERE
NEEDED
ELSEWHERE
THE
AIRPORT
HAD
BEEN
SCHEDULED
TO
OPEN
IN
BUT
WITHOUT
A
FUNC
TIONING
LUGGAGE
SYSTEM
THE
OPENING
WAS
DELAYED
FOR
OVER
A
YEAR
WHILE
THE
CONTRACTOR
TRIED
TO
FIX
THE
PROBLEMS
THE
CONTRACTOR
NEVER
SUCCEEDED
AND
ULTIMATELY
A
MANUAL
SYSTEM
WAS
INSTALLED
THE
DELAY
COST
THE
CITY
AND
AIRLINES
CLOSE
TO
A
BILLION
DOLLARS
AND
THE
CONTRACTOR
ONCE
THE
LEADING
LUG
GAGE
SYSTEMS
VENDOR
IN
THE
UNITED
STATES
WENT
BANKRUPT
CLEARLY
IT
IS
VERY
RISKY
TO
BUILD
A
LARGE
SYSTEM
BASED
ON
A
TECHNOLOGY
THAT
HAS
NEVER
BEEN
TRIED
ON
A
SMALLER
SCALE
AS
ROBOTS
AND
THE
SOFTWARE
THAT
CONTROLS
THEM
GET
BETTER
OVER
TIME
THEY
WILL
TAKE
ON
A
LARGER
SHARE
OF
LUG
GAGE
HANDLING
IN
THE
FUTURE
BUT
IT
IS
LIKELY
THAT
THIS
WILL
HAPPEN
IN
AN
INCRE
MENTAL
FASHION
THE
DENVER
AIRPORT
ORIGINALLY
HAD
A
FULLY
AUTOMATIC
SYSTEM
FOR
MOVING
LUG
GAGE
REPLACING
HUMAN
OPERATORS
WITH
ROBOTIC
CARTS
UNFORTUNATELY
THE
SYS
TEM
NEVER
WORKED
AND
WAS
DISMANTLED
BEFORE
THE
AIRPORT
WAS
OPENED
AVAILABLE
ONLINE
AT
WWW
WILEY
COM
COLLEGE
HORSTMANN
MULTIPLE
ALTERNATIVES
IN
SECTION
YOU
SAW
HOW
TO
PROGRAM
A
TWO
WAY
BRANCH
WITH
AN
IF
STATEMENT
IN
MANY
SITUATIONS
THERE
ARE
MORE
THAN
TWO
CASES
IN
THIS
SECTION
YOU
WILL
SEE
HOW
TO
IMPLEMENT
A
DECISION
WITH
MULTIPLE
ALTERNATIVES
FOR
EXAMPLE
CONSIDER
A
PROGRAM
THAT
DISPLAYS
THE
EFFECT
OF
AN
EARTHQUAKE
AS
MEASURED
BY
THE
RICHTER
SCALE
SEE
TABLE
THE
LOMA
PRIETA
EARTHQUAKE
THAT
DAMAGED
THE
BAY
BRIDGE
IN
SAN
FRAN
CISCO
AND
DESTROYED
MANY
BUILDINGS
MEASURED
ON
THE
RICHTER
SCALE
VALUE
EFFECT
MOST
STRUCTURES
FALL
MANY
BUILDINGS
DESTROYED
MANY
BUILDINGS
CONSIDERABLY
DAMAGED
SOME
COLLAPSE
DAMAGE
TO
POORLY
CONSTRUCTED
BUILDINGS
THE
RICHTER
SCALE
IS
A
MEASUREMENT
OF
THE
STRENGTH
OF
AN
EARTHQUAKE
EVERY
STEP
IN
THE
SCALE
FOR
EXAMPLE
FROM
TO
SIGNIFIES
A
TENFOLD
INCREASE
IN
THE
STRENGTH
OF
THE
QUAKE
IN
THIS
CASE
THERE
ARE
FIVE
BRANCHES
ONE
EACH
FOR
THE
FOUR
DESCRIPTIONS
OF
DAMAGE
AND
ONE
FOR
NO
DESTRUCTION
FIGURE
SHOWS
THE
FLOWCHART
FOR
THIS
MULTIPLE
BRANCH
STATEMENT
YOU
USE
MULTIPLE
IF
STATEMENTS
TO
IMPLEMENT
MULTIPLE
ALTERNATIVES
LIKE
THIS
IF
RICHTER
COUT
MOST
STRUCTURES
FALL
ELSE
IF
RICHTER
COUT
MANY
BUILDINGS
DESTROYED
ELSE
IF
RICHTER
COUT
MANY
BUILDINGS
CONSIDERABLY
DAMAGED
SOME
COLLAPSE
ELSE
IF
RICHTER
COUT
DAMAGE
TO
POORLY
CONSTRUCTED
BUILDINGS
ELSE
COUT
NO
DESTRUCTION
OF
BUILDINGS
AS
SOON
AS
ONE
OF
THE
FOUR
TESTS
SUCCEEDS
THE
EFFECT
IS
DISPLAYED
AND
NO
FURTHER
TESTS
ARE
ATTEMPTED
IF
NONE
OF
THE
FOUR
CASES
APPLIES
THE
FINAL
ELSE
CLAUSE
APPLIES
AND
A
DEFAULT
MESSAGE
IS
PRINTED
SEE
THE
RICHTER
CPP
FILE
FOR
THE
FULL
PROGRAM
FIGURE
MULTIPLE
ALTERNATIVES
TRUE
HERE
YOU
MUST
SORT
THE
CONDITIONS
AND
TEST
AGAINST
THE
LARGEST
CUTOFF
FIRST
SUPPOSE
WE
REVERSE
THE
ORDER
OF
TESTS
IF
RICHTER
TESTS
IN
WRONG
ORDER
COUT
DAMAGE
TO
POORLY
CONSTRUCTED
BUILDINGS
ELSE
IF
RICHTER
COUT
MANY
BUILDINGS
CONSIDERABLY
DAMAGED
SOME
COLLAPSE
ELSE
IF
RICHTER
COUT
MANY
BUILDINGS
DESTROYED
ELSE
IF
RICHTER
COUT
MOST
STRUCTURES
FALL
THIS
DOES
NOT
WORK
SUPPOSE
THE
VALUE
OF
RICHTER
IS
THAT
VALUE
IS
AT
LEAST
MATCHING
THE
FIRST
CASE
THE
OTHER
TESTS
WILL
NEVER
BE
ATTEMPTED
IN
THIS
EXAMPLE
IT
IS
ALSO
IMPORTANT
THAT
WE
USE
A
SEQUENCE
OF
ELSE
IF
CLAUSES
NOT
JUST
MULTIPLE
INDEPENDENT
IF
STATEMENTS
CONSIDER
THIS
SEQUENCE
OF
INDEPENDENT
TESTS
IF
RICHTER
DIDN
T
USE
ELSE
COUT
MOST
STRUCTURES
FALL
IF
RICHTER
COUT
MANY
BUILDINGS
DESTROYED
IF
RICHTER
COUT
MANY
BUILDINGS
CONSIDERABLY
DAMAGED
SOME
COLLAPSE
IF
RICHTER
COUT
DAMAGE
TO
POORLY
CONSTRUCTED
BUILDINGS
NOW
THE
ALTERNATIVES
ARE
NO
LONGER
EXCLUSIVE
IF
RICHTER
IS
THEN
THE
LAST
THREE
TESTS
ALL
MATCH
AND
THREE
MESSAGES
ARE
PRINTED
IN
A
GAME
PROGRAM
THE
SCORES
OF
PLAYERS
A
AND
B
ARE
STORED
IN
VARIABLES
AND
ASSUMING
THAT
THE
PLAYER
WITH
THE
LARGER
SCORE
WINS
WRITE
A
SEQUENCE
OF
CONDITIONAL
STATEMENTS
THAT
PRINTS
OUT
A
WON
B
WON
OR
GAME
TIED
WRITE
A
CONDITIONAL
STATEMENT
WITH
THREE
BRANCHES
THAT
SETS
TO
IF
X
IS
POSITIVE
TO
IF
X
IS
NEGATIVE
AND
TO
IF
X
IS
ZERO
HOW
COULD
YOU
ACHIEVE
THE
TASK
OF
SELF
CHECK
WITH
ONLY
TWO
BRANCHES
BEGINNERS
SOMETIMES
WRITE
STATEMENTS
SUCH
AS
THE
FOLLOWING
IF
PRICE
PRICE
ELSE
IF
PRICE
PRICE
EXPLAIN
HOW
THIS
CODE
CAN
BE
IMPROVED
SUPPOSE
THE
USER
ENTERS
INTO
THE
RICHTER
CPP
PROGRAM
WHAT
IS
PRINTED
SUPPOSE
WE
WANT
TO
HAVE
THE
RICHTER
CPP
PROGRAM
CHECK
WHETHER
THE
USER
ENTERED
A
NEGATIVE
NUMBER
WHAT
BRANCH
WOULD
YOU
ADD
TO
THE
IF
STATEMENT
AND
WHERE
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
SPECIAL
TOPIC
THE
SWITCH
STATEMENT
A
SEQUENCE
OF
IF
STATEMENTS
THAT
COMPARES
A
SINGLE
INTEGER
VALUE
AGAINST
SEVERAL
CONSTANT
ALTER
NATIVES
CAN
BE
IMPLEMENTED
AS
A
SWITCH
STATEMENT
FOR
EXAMPLE
INT
DIGIT
SWITCH
DIGIT
CASE
ONE
BREAK
CASE
TWO
BREAK
CASE
THREE
BREAK
CASE
FOUR
BREAK
CASE
FIVE
BREAK
CASE
SIX
BREAK
CASE
SEVEN
BREAK
CASE
EIGHT
BREAK
CASE
NINE
BREAK
DEFAULT
BREAK
THIS
IS
A
SHORTCUT
FOR
INT
DIGIT
IF
DIGIT
ONE
ELSE
IF
DIGIT
TWO
ELSE
IF
DIGIT
THREE
ELSE
IF
DIGIT
FOUR
ELSE
IF
DIGIT
FIVE
ELSE
IF
DIGIT
SIX
ELSE
IF
DIGIT
SEVEN
ELSE
IF
DIGIT
EIGHT
ELSE
IF
DIGIT
NINE
ELSE
WELL
IT
ISN
T
MUCH
OF
A
SHORTCUT
BUT
IT
HAS
ONE
ADVAN
TAGE
IT
IS
OBVIOUS
THAT
ALL
BRANCHES
TEST
THE
SAME
VALUE
NAMELY
DIGIT
IT
IS
POSSIBLE
TO
HAVE
MULTIPLE
CASE
CLAUSES
FOR
A
BRANCH
SUCH
AS
CASE
CASE
CASE
CASE
CASE
ODD
TRUE
BREAK
THE
DEFAULT
BRANCH
IS
CHOSEN
IF
NONE
OF
THE
CASE
CLAUSES
MATCH
EVERY
BRANCH
OF
THE
SWITCH
MUST
BE
TERMINATED
BY
A
BREAK
INSTRUCTION
IF
THE
BREAK
IS
MISSING
EXECUTION
FALLS
THROUGH
TO
THE
NEXT
BRANCH
AND
SO
ON
UNTIL
FINALLY
A
BREAK
OR
THE
END
OF
THE
SWITCH
IS
REACHED
IN
PRACTICE
THIS
FALL
THROUGH
BEHAVIOR
IS
RARELY
USEFUL
BUT
IT
IS
A
COM
THE
SWITCH
STATEMENT
LETS
YOU
CHOOSE
FROM
A
FIXED
SET
OF
ALTERNATIVES
MON
CAUSE
OF
ERRORS
IF
YOU
ACCIDENTALLY
FORGET
THE
BREAK
STATEMENT
YOUR
PROGRAM
COMPILES
BUT
EXECUTES
UNWANTED
CODE
MANY
PROGRAMMERS
CONSIDER
THE
SWITCH
STATEMENT
SOMEWHAT
DAN
GEROUS
AND
PREFER
THE
IF
STATEMENT
WE
LEAVE
IT
TO
YOU
TO
USE
THE
SWITCH
STATEMENT
FOR
YOUR
OWN
CODE
OR
NOT
AT
ANY
RATE
YOU
NEED
TO
HAVE
A
READING
KNOWLEDGE
OF
SWITCH
IN
CASE
YOU
FIND
IT
IN
OTHER
PROGRAMMERS
CODE
NESTED
BRANCHES
IT
IS
OFTEN
NECESSARY
TO
INCLUDE
AN
IF
STATEMENT
INSIDE
ANOTHER
SUCH
AN
ARRANGEMENT
IS
CALLED
A
NESTED
SET
OF
STATEMENTS
HERE
IS
A
TYPICAL
EXAMPLE
IN
THE
UNITED
STATES
DIFFERENT
TAX
RATES
ARE
USED
DEPENDING
ON
THE
TAXPAYER
MARI
TAL
STATUS
THERE
ARE
DIFFERENT
TAX
SCHEDULES
FOR
SINGLE
AND
FOR
MARRIED
TAXPAYERS
MAR
RIED
TAXPAYERS
ADD
THEIR
INCOME
TOGETHER
AND
PAY
TAXES
ON
THE
TOTAL
TABLE
GIVES
THE
TAX
RATE
COMPUTATIONS
USING
A
SIMPLIFICATION
OF
THE
SCHEDULES
IN
EFFECT
FOR
THE
TAX
YEAR
A
DIFFERENT
TAX
RATE
APPLIES
TO
EACH
BRACKET
IN
THIS
SCHEDULE
THE
INCOME
AT
THE
FIRST
BRACKET
IS
TAXED
AT
PERCENT
AND
THE
INCOME
AT
THE
SECOND
BRACKET
IS
TAXED
AT
PERCENT
THE
INCOME
LIMITS
FOR
EACH
BRACKET
DEPEND
ON
THE
MARITAL
STATUS
NOW
COMPUTE
THE
TAXES
DUE
GIVEN
A
FILING
STATUS
AND
AN
INCOME
FIGURE
THE
KEY
POINT
IS
THAT
THERE
ARE
TWO
LEVELS
OF
DECISION
MAKING
FIRST
YOU
MUST
BRANCH
ON
THE
MARITAL
STATUS
THEN
FOR
EACH
FILING
STATUS
YOU
MUST
HAVE
ANOTHER
BRANCH
ON
INCOME
LEVEL
IF
YOUR
STATUS
IS
SINGLE
AND
IF
THE
TAXABLE
INCOME
IS
THE
TAX
IS
OF
THE
AMOUNT
OVER
AT
MOST
OVER
IF
YOUR
STATUS
IS
MARRIED
AND
IF
THE
TAXABLE
INCOME
IS
THE
TAX
IS
OF
THE
AMOUNT
OVER
AT
MOST
OVER
THE
TWO
LEVEL
DECISION
PROCESS
IS
REFLECTED
IN
TWO
LEVELS
OF
IF
STATEMENTS
IN
THE
PRO
GRAM
AT
THE
END
OF
THIS
SECTION
SEE
FIGURE
FOR
A
FLOWCHART
COMPUTING
INCOME
TAXES
REQUIRES
MULTIPLE
LEVELS
OF
DECISIONS
FIGURE
INCOME
TAX
COMPUTATION
IN
THEORY
NESTING
CAN
GO
DEEPER
THAN
TWO
LEVELS
A
THREE
LEVEL
DECISION
PROCESS
FIRST
BY
STATE
THEN
BY
FILING
STATUS
THEN
BY
INCOME
LEVEL
REQUIRES
THREE
NESTING
LEVELS
TAX
CPP
IF
IF
INCOME
INCOME
ELSE
INCOME
ELSE
IF
INCOME
INCOME
ELSE
INCOME
DOUBLE
COUT
THE
TAX
IS
ENDL
RETURN
PROGRAM
RUN
WHAT
IS
THE
AMOUNT
OF
TAX
THAT
A
SINGLE
TAXPAYER
PAYS
ON
AN
INCOME
OF
WOULD
THAT
AMOUNT
CHANGE
IF
THE
FIRST
NESTED
IF
STATEMENT
CHANGED
FROM
IF
INCOME
TO
IF
INCOME
SUPPOSE
HARRY
AND
SALLY
EACH
MAKE
PER
YEAR
WOULD
THEY
SAVE
TAXES
IF
THEY
MARRIED
HOW
WOULD
YOU
MODIFY
THE
TAX
CPP
PROGRAM
IN
ORDER
TO
CHECK
THAT
THE
USER
ENTERED
A
CORRECT
VALUE
FOR
THE
MARITAL
STATUS
I
E
OR
M
SOME
PEOPLE
OBJECT
TO
HIGHER
TAX
RATES
FOR
HIGHER
INCOMES
CLAIMING
THAT
YOU
MIGHT
END
UP
WITH
LESS
MONEY
AFTER
TAXES
WHEN
YOU
GET
A
RAISE
FOR
WORKING
HARD
WHAT
IS
THE
FLAW
IN
THIS
ARGUMENT
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
PROGRAMMING
TIP
HAND
TRACING
A
VERY
USEFUL
TECHNIQUE
FOR
UNDERSTANDING
WHETHER
A
PROGRAM
WORKS
CORRECTLY
IS
CALLED
HAND
TRACING
YOU
SIMULATE
THE
PRO
GRAM
ACTIVITY
ON
A
SHEET
OF
PAPER
YOU
CAN
USE
THIS
METHOD
WITH
PSEUDOCODE
OR
C
CODE
GET
AN
INDEX
CARD
A
COCKTAIL
NAPKIN
OR
WHATEVER
SHEET
OF
PAPER
IS
WITHIN
REACH
MAKE
A
COLUMN
FOR
EACH
VARIABLE
HAVE
THE
PROGRAM
CODE
READY
USE
A
MARKER
SUCH
AS
A
PAPER
CLIP
TO
MARK
THE
CURRENT
STATEMENT
IN
YOUR
MIND
EXECUTE
STATEMENTS
ONE
AT
A
TIME
EVERY
TIME
THE
VALUE
OF
A
VARIABLE
CHANGES
CROSS
OUT
THE
OLD
VALUE
AND
WRITE
THE
NEW
VALUE
BELOW
THE
OLD
ONE
FOR
EXAMPLE
LET
TRACE
THE
TAX
PROGRAM
WITH
THE
DATA
FROM
THE
PROGRAM
RUN
ON
PAGE
IN
LINES
AND
AND
ARE
INITIAL
IZED
TO
HAND
TRACING
HELPS
YOU
UNDERSTAND
WHETHER
A
PROGRAM
WORKS
CORRECTLY
INT
MAIN
CONST
DOUBLE
CONST
DOUBLE
CONST
DOUBLE
CONST
DOUBLE
DOUBLE
DOUBLE
IN
LINES
AND
INCOME
AND
ARE
INITIALIZED
BY
INPUT
STATEMENTS
DOUBLE
INCOME
COUT
PLEASE
ENTER
YOUR
INCOME
CIN
INCOME
COUT
PLEASE
ENTER
FOR
SINGLE
M
FOR
MARRIED
STRING
CIN
BECAUSE
IS
NOT
WE
MOVE
TO
THE
ELSE
BRANCH
OF
THE
OUTER
IF
STATEMENT
LINE
MARITAL
INCOME
STATUS
MARITAL
INCOME
STATUS
M
IF
IF
INCOME
INCOME
ELSE
INCOME
ELSE
SINCE
INCOME
IS
NOT
WE
MOVE
TO
THE
ELSE
BRANCH
OF
THE
INNER
IF
STATEMENT
LINE
IF
INCOME
INCOME
ELSE
INCOME
M
COMMON
ERROR
THE
DANGLING
ELSE
PROBLEM
WHEN
AN
IF
STATEMENT
IS
NESTED
INSIDE
ANOTHER
IF
STATEMENT
THE
FOLLOWING
ERROR
MAY
OCCUR
DOUBLE
INSIDE
CONTINENTAL
U
IF
COUNTRY
USA
IF
STATE
HI
HAWAII
IS
MORE
EXPENSIVE
ELSE
PITFALL
AS
ARE
FOREIGN
SHIPMENTS
THE
INDENTATION
LEVEL
SEEMS
TO
SUGGEST
THAT
THE
ELSE
IS
GROUPED
WITH
THE
TEST
COUNTRY
USA
UNFORTUNATELY
THAT
IS
NOT
THE
CASE
THE
COMPILER
IGNORES
ALL
INDENTATION
AND
MATCHES
THE
ELSE
WITH
THE
PRECEDING
IF
THAT
IS
THE
CODE
IS
ACTUALLY
DOUBLE
INSIDE
CONTINENTAL
U
IF
COUNTRY
USA
IF
STATE
HI
HAWAII
IS
MORE
EXPENSIVE
ELSE
PITFALL
AS
ARE
FOREIGN
SHIPMENTS
THAT
ISN
T
WHAT
YOU
WANT
YOU
WANT
TO
GROUP
THE
ELSE
WITH
THE
FIRST
IF
THE
AMBIGUOUS
ELSE
IS
CALLED
A
DANGLING
ELSE
YOU
CAN
AVOID
THIS
PITFALL
IF
YOU
ALWAYS
USE
BRACES
AS
RECOMMENDED
IN
PROGRAMMING
TIP
ON
PAGE
DOUBLE
INSIDE
CONTINENTAL
U
IF
COUNTRY
USA
IF
STATE
HI
HAWAII
IS
MORE
EXPENSIVE
ELSE
AS
ARE
FOREIGN
SHIPMENTS
PROBLEM
SOLVING
FLOWCHARTS
YOU
HAVE
SEEN
EXAMPLES
OF
FLOWCHARTS
EARLIER
IN
THIS
CHAPTER
A
FLOWCHART
SHOWS
THE
STRUCTURE
OF
DECISIONS
AND
TASKS
THAT
ARE
REQUIRED
TO
SOLVE
A
PROBLEM
WHEN
YOU
HAVE
TO
SOLVE
A
COMPLEX
PROBLEM
IT
IS
A
GOOD
IDEA
TO
DRAW
A
FLOWCHART
TO
VISUALIZE
THE
FLOW
OF
CONTROL
THE
BASIC
FLOWCHART
ELEMENTS
ARE
SHOWN
IN
FIGURE
FIGURE
FLOWCHART
ELEMENTS
THE
BASIC
IDEA
IS
SIMPLE
ENOUGH
LINK
TASKS
AND
INPUT
OUTPUT
BOXES
IN
THE
SEQUENCE
IN
WHICH
THEY
SHOULD
BE
EXECUTED
WHENEVER
YOU
NEED
TO
MAKE
A
DECISION
DRAW
A
DIA
MOND
WITH
TWO
OUTCOMES
SEE
FIGURE
EACH
BRANCH
CAN
CONTAIN
A
SEQUENCE
OF
TASKS
AND
EVEN
ADDITIONAL
DECISIONS
IF
THERE
ARE
MULTIPLE
CHOICES
FOR
A
VALUE
LAY
THEM
OUT
AS
IN
FIGURE
FIGURE
FLOWCHART
WITH
TWO
OUTCOMES
FIGURE
FLOWCHART
WITH
MULTIPLE
CHOICES
THERE
IS
ONE
ISSUE
THAT
YOU
NEED
TO
BE
AWARE
OF
WHEN
DRAWING
FLOWCHARTS
UNCONSTRAINED
BRANCHING
AND
MERGING
CAN
LEAD
TO
SPAGHETTI
CODE
A
MESSY
NET
WORK
OF
POSSIBLE
PATHWAYS
THROUGH
A
PROGRAM
THERE
IS
A
SIMPLE
RULE
FOR
AVOIDING
SPAGHETTI
CODE
NEVER
POINT
AN
ARROW
INSIDE
ANOTHER
BRANCH
TO
UNDERSTAND
THE
RULE
CONSIDER
THIS
EXAMPLE
SHIPPING
COSTS
ARE
INSIDE
THE
UNITED
STATES
EXCEPT
THAT
TO
HAWAII
AND
ALASKA
THEY
ARE
INTERNATIONAL
SHIPPING
COSTS
ARE
ALSO
YOU
MIGHT
START
OUT
WITH
A
FLOWCHART
LIKE
THE
FOLLOWING
SPAGHETTI
CODE
HAS
SO
MANY
PATHWAYS
THAT
IT
BECOMES
IMPOSSIBLE
TO
UNDERSTAND
NOW
YOU
MAY
BE
TEMPTED
TO
REUSE
THE
SHIPPING
COST
TASK
DON
T
DO
THAT
THE
RED
ARROW
POINTS
INSIDE
A
DIFFERENT
BRANCH
INSTEAD
ADD
ANOTHER
TASK
THAT
SETS
THE
SHIPPING
COST
TO
LIKE
THIS
NOT
ONLY
DO
YOU
AVOID
SPAGHETTI
CODE
BUT
IT
IS
ALSO
A
BETTER
DESIGN
IN
THE
FUTURE
IT
MAY
WELL
HAPPEN
THAT
THE
COST
FOR
INTERNATIONAL
SHIPMENTS
IS
DIFFERENT
FROM
THAT
TO
ALASKA
AND
HAWAII
FLOWCHARTS
CAN
BE
VERY
USEFUL
FOR
GETTING
AN
INTUITIVE
UNDERSTANDING
OF
THE
FLOW
OF
AN
ALGORITHM
HOWEVER
THEY
GET
LARGE
RATHER
QUICKLY
WHEN
YOU
ADD
MORE
DETAILS
AT
THAT
POINT
IT
MAKES
SENSE
TO
SWITCH
FROM
FLOWCHARTS
TO
PSEUDOCODE
DRAW
A
FLOWCHART
FOR
A
PROGRAM
THAT
READS
A
VALUE
TEMP
AND
PRINTS
FROZEN
IF
IT
IS
LESS
THAN
ZERO
WHAT
IS
WRONG
WITH
THE
FLOWCHART
AT
RIGHT
HOW
DO
YOU
FIX
THE
FLOWCHART
OF
SELF
CHECK
DRAW
A
FLOWCHART
FOR
A
PROGRAM
THAT
READS
A
VALUE
X
IF
IT
IS
LESS
THAN
ZERO
PRINT
ERROR
OTHERWISE
PRINT
ITS
SQUARE
ROOT
DRAW
A
FLOWCHART
FOR
A
PROGRAM
THAT
READS
A
VALUE
TEMP
IF
IT
IS
LESS
THAN
ZERO
PRINT
ICE
IF
IT
IS
GREATER
THAN
PRINT
STEAM
OTHERWISE
PRINT
LIQUID
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
PROBLEM
SOLVING
TEST
CASES
CONSIDER
HOW
TO
TEST
THE
TAX
COMPUTATION
PROGRAM
FROM
SECTION
OF
COURSE
YOU
CANNOT
TRY
OUT
ALL
POSSIBLE
INPUTS
OF
FILING
STATUS
AND
INCOME
LEVEL
EVEN
IF
YOU
COULD
THERE
WOULD
BE
NO
POINT
IN
TRYING
THEM
ALL
IF
THE
PROGRAM
CORRECTLY
COMPUTES
ONE
OR
TWO
TAX
AMOUNTS
IN
A
GIVEN
BRACKET
THEN
WE
HAVE
A
GOOD
REASON
TO
BELIEVE
THAT
ALL
AMOUNTS
WILL
BE
CORRECT
YOU
WANT
TO
AIM
FOR
COMPLETE
COVERAGE
OF
ALL
DECISION
POINTS
HERE
IS
A
PLAN
FOR
OBTAINING
A
COMPREHENSIVE
SET
OF
TEST
CASES
THERE
ARE
TWO
POSSIBILITIES
FOR
THE
FILING
STATUS
AND
TWO
TAX
BRACKETS
FOR
EACH
STATUS
YIELDING
FOUR
TEST
CASES
TEST
A
HANDFUL
OF
BOUNDARY
CONDITIONS
SUCH
AS
AN
INCOME
THAT
IS
AT
THE
BOUNDARY
BETWEEN
TWO
BRACKETS
AND
A
ZERO
INCOME
IF
YOU
ARE
RESPONSIBLE
FOR
ERROR
CHECKING
WHICH
IS
DISCUSSED
IN
SECTION
ALSO
TEST
AN
INVALID
INPUT
SUCH
AS
A
NEGATIVE
INCOME
MAKE
A
LIST
OF
THE
TEST
CASES
AND
THE
EXPECTED
OUTPUTS
TEST
CASE
EXPECTED
OUTPUT
COMMENT
BRACKET
OF
M
BRACKET
M
OF
BOUNDARY
CASE
BOUNDARY
CASE
WHEN
YOU
DEVELOP
A
SET
OF
TEST
CASES
IT
IS
HELPFUL
TO
HAVE
A
FLOWCHART
OF
YOUR
PROGRAM
SEE
SECTION
CHECK
OFF
EACH
BRANCH
THAT
HAS
A
TEST
CASE
INCLUDE
TEST
CASES
FOR
THE
BOUNDARY
CASES
OF
EACH
DECISION
FOR
EXAMPLE
IF
A
DECISION
CHECKS
WHETHER
AN
INPUT
IS
LESS
THAN
TEST
WITH
AN
INPUT
OF
IT
IS
ALWAYS
A
GOOD
IDEA
TO
DESIGN
TEST
CASES
BEFORE
STARTING
TO
CODE
WORKING
THROUGH
THE
TEST
CASES
GIVES
YOU
A
BETTER
UNDERSTANDING
OF
THE
ALGORITHM
THAT
YOU
ARE
ABOUT
TO
IMPLEMENT
USING
FIGURE
ON
PAGE
AS
A
GUIDE
FOLLOW
THE
PROCESS
DESCRIBED
IN
SECTION
TO
DESIGN
A
SET
OF
TEST
CASES
FOR
THE
ELEVATOR
CPP
PROGRAM
IN
SECTION
WHAT
IS
A
BOUNDARY
TEST
CASE
FOR
THE
ALGORITHM
IN
HOW
TO
ON
PAGE
WHAT
IS
THE
EXPECTED
OUTPUT
USING
FIGURE
ON
PAGE
AS
A
GUIDE
FOLLOW
THE
PROCESS
DESCRIBED
IN
SECTION
TO
DESIGN
A
SET
OF
TEST
CASES
FOR
THE
RICHTER
CPP
PROGRAM
IN
SECTION
SUPPOSE
YOU
ARE
DESIGNING
A
PART
OF
A
PROGRAM
FOR
A
MEDICAL
ROBOT
THAT
HAS
A
SENSOR
RETURNING
AN
X
AND
Y
LOCATION
MEASURED
IN
CM
YOU
NEED
TO
CHECK
WHETHER
THE
SENSOR
LOCATION
IS
INSIDE
THE
CIRCLE
OUTSIDE
THE
CIRCLE
ON
THE
BOUNDARY
SPECIFICALLY
HAVING
A
DISTANCE
OF
LESS
THAN
MM
FROM
THE
BOUNDARY
ASSUME
THE
CIRCLE
HAS
CENTER
AND
RADIUS
CM
GIVE
A
SET
OF
TEST
CASES
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
PROGRAMMING
TIP
MAKE
A
SCHEDULE
AND
MAKE
TIME
FOR
UNEXPECTED
PROBLEMS
COMMERCIAL
SOFTWARE
IS
NOTORIOUS
FOR
BEING
DELIVERED
LATER
THAN
PROMISED
FOR
EXAMPLE
MICROSOFT
ORIGINALLY
PROMISED
THAT
ITS
WINDOWS
VISTA
OPERATING
SYSTEM
WOULD
BE
AVAILABLE
LATE
IN
THEN
IN
THEN
IN
MARCH
IT
FINALLY
WAS
RELEASED
IN
JANUARY
SOME
OF
THE
EARLY
PROMISES
MIGHT
NOT
HAVE
BEEN
REALISTIC
IT
WAS
IN
MICROSOFT
INTEREST
TO
LET
PROSPECTIVE
CUSTOMERS
EXPECT
THE
IMMINENT
AVAILABILITY
OF
THE
PRODUCT
HAD
CUSTOMERS
KNOWN
THE
ACTUAL
DELIVERY
DATE
THEY
MIGHT
HAVE
SWITCHED
TO
A
DIFFERENT
PRODUCT
IN
THE
MEANTIME
UNDENIABLY
THOUGH
MICROSOFT
HAD
NOT
ANTICIPATED
THE
FULL
COMPLEXITY
OF
THE
TASKS
IT
HAD
SET
ITSELF
TO
SOLVE
MICROSOFT
CAN
DELAY
THE
DELIVERY
OF
ITS
PRODUCT
BUT
IT
IS
LIKELY
THAT
YOU
CANNOT
AS
A
STUDENT
OR
A
PROGRAMMER
YOU
ARE
EXPECTED
TO
MANAGE
YOUR
TIME
WISELY
AND
TO
FINISH
YOUR
ASSIGNMENTS
ON
TIME
YOU
CAN
PROBABLY
DO
SIMPLE
PROGRAMMING
EXERCISES
THE
NIGHT
BEFORE
THE
DUE
DATE
BUT
AN
ASSIGNMENT
THAT
LOOKS
TWICE
AS
HARD
MAY
WELL
TAKE
FOUR
TIMES
AS
LONG
BECAUSE
MORE
THINGS
CAN
GO
WRONG
YOU
SHOULD
THEREFORE
MAKE
A
SCHEDULE
WHENEVER
YOU
START
A
PROGRAMMING
PROJECT
FIRST
ESTIMATE
REALISTICALLY
HOW
MUCH
TIME
IT
WILL
TAKE
YOU
TO
DESIGN
THE
PROGRAM
LOGIC
DEVELOP
TEST
CASES
TYPE
IN
THE
PROGRAM
AND
FIX
SYNTAX
ERRORS
TEST
AND
DEBUG
THE
PROGRAM
FOR
EXAMPLE
FOR
THE
INCOME
TAX
PROGRAM
I
MIGHT
ESTIMATE
AN
HOUR
FOR
THE
DESIGN
MINUTES
FOR
DEVELOPING
TEST
CASES
AN
HOUR
FOR
DATA
ENTRY
AND
FIXING
SYNTAX
ERRORS
AND
AN
HOUR
FOR
TESTING
AND
DEBUGGING
THAT
IS
A
TOTAL
OF
HOURS
IF
I
WORK
TWO
HOURS
A
DAY
ON
THIS
PROJECT
IT
WILL
TAKE
ME
ALMOST
TWO
DAYS
THEN
THINK
OF
THINGS
THAT
CAN
GO
WRONG
YOUR
COMPUTER
MIGHT
BREAK
DOWN
YOU
MIGHT
BE
STUMPED
BY
A
PROBLEM
WITH
THE
COMPUTER
SYS
TEM
THAT
IS
A
PARTICULARLY
IMPORTANT
CONCERN
FOR
MAKE
A
SCHEDULE
FOR
YOUR
PROGRAMMING
WORK
AND
BUILD
IN
TIME
FOR
PROBLEMS
BEGINNERS
IT
IS
VERY
COMMON
TO
LOSE
A
DAY
OVER
A
TRIVIAL
PROBLEM
JUST
BECAUSE
IT
TAKES
TIME
TO
TRACK
DOWN
A
PERSON
WHO
KNOWS
THE
MAGIC
COMMAND
TO
OVERCOME
IT
AS
A
RULE
OF
THUMB
DOUBLE
THE
TIME
OF
YOUR
ESTIMATE
THAT
IS
YOU
SHOULD
START
FOUR
DAYS
NOT
TWO
DAYS
BEFORE
THE
DUE
DATE
IF
NOTHING
WENT
WRONG
GREAT
YOU
HAVE
THE
PROGRAM
DONE
TWO
DAYS
EARLY
WHEN
THE
INEVITABLE
PROBLEM
OCCURS
YOU
HAVE
A
CUSHION
OF
TIME
THAT
PROTECTS
YOU
FROM
EMBARRASSMENT
AND
FAILURE
BOOLEAN
VARIABLES
AND
OPERATORS
SOMETIMES
YOU
NEED
TO
EVALUATE
A
LOGICAL
CONDITION
IN
ONE
PART
OF
A
PROGRAM
AND
USE
IT
ELSEWHERE
TO
STORE
A
CONDITION
THAT
CAN
BE
TRUE
OR
FALSE
YOU
USE
A
BOOLEAN
VARIABLE
BOOLEAN
VARIABLES
ARE
NAMED
AFTER
THE
MATHEMATICIAN
GEORGE
BOOLE
A
PIONEER
IN
THE
STUDY
OF
LOGIC
IN
C
THE
BOOL
DATA
TYPE
REPRESENTS
THE
BOOLEAN
TYPE
VARIABLES
OF
TYPE
BOOL
CAN
HOLD
EXACTLY
TWO
VALUES
DENOTED
FALSE
AND
TRUE
THESE
VALUES
ARE
NOT
STRINGS
OR
INTE
GERS
THEY
ARE
SPECIAL
VALUES
JUST
FOR
BOOLEAN
VARIABLES
HERE
IS
A
DEFINITION
OF
A
BOOLEAN
VARIABLE
BOOL
FAILED
TRUE
YOU
CAN
USE
THE
VALUE
LATER
IN
YOUR
PROGRAM
TO
MAKE
A
DECISION
IF
FAILED
ONLY
EXECUTED
IF
FAILED
HAS
BEEN
SET
TO
TRUE
A
BOOLEAN
VARIABLE
IS
ALSO
CALLED
A
FLAG
BECAUSE
IT
CAN
BE
EITHER
UP
TRUE
OR
DOWN
FALSE
WHEN
YOU
MAKE
COMPLEX
DECISIONS
YOU
OFTEN
NEED
TO
COMBINE
BOOLEAN
VALUES
AN
OPERATOR
THAT
COMBINES
BOOLEAN
CONDITIONS
IS
CALLED
A
BOOLEAN
OPERATOR
IN
C
THE
OPERATOR
CALLED
AND
YIELDS
TRUE
ONLY
WHEN
BOTH
CONDITIONS
ARE
TRUE
THE
OPERA
TOR
CALLED
OR
YIELDS
THE
RESULT
TRUE
IF
AT
LEAST
ONE
OF
THE
CONDITIONS
IS
TRUE
SUPPOSE
YOU
WRITE
A
PROGRAM
THAT
PROCESSES
TEMPERATURE
VALUES
AND
YOU
WANT
TO
TEST
WHETHER
A
GIVEN
TEMPERATURE
CORRESPONDS
TO
LIQUID
WATER
AT
SEA
LEVEL
WATER
FREEZES
AT
DEGREES
CELSIUS
AND
BOILS
AT
DEGREES
WATER
IS
LIQUID
IF
THE
TEMPERA
TURE
IS
GREATER
THAN
ZERO
AND
LESS
THAN
IF
TEMP
TEMP
COUT
LIQUID
THE
CONDITION
OF
THE
TEST
HAS
TWO
PARTS
JOINED
BY
THE
OPERATOR
AS
SHOWN
IN
TABLE
AND
APPENDIX
C
THE
AND
OPERATORS
HAVE
HIGHER
PRECEDENCE
THAN
THE
OPERATOR
EACH
PART
IS
A
BOOLEAN
VALUE
THAT
CAN
BE
TRUE
OR
FALSE
THE
COMBINED
EXPRESSION
IS
TRUE
IF
BOTH
INDIVIDUAL
EXPRESSIONS
ARE
TRUE
IF
EITHER
ONE
OF
THE
EXPRESSIONS
IS
FALSE
THEN
THE
RESULT
IS
ALSO
FALSE
SEE
FIGURE
FIGURE
BOOLEAN
TRUTH
TABLES
AT
THIS
GEYSER
IN
ICELAND
YOU
CAN
SEE
ICE
LIQUID
WATER
AND
STEAM
OPERATOR
DESCRIPTION
UNARY
UNARY
INCREMENT
DECREMENT
POSITIVE
NEGATIVE
BOOLEAN
NOT
MULTIPLICATION
DIVISION
REMAINDER
ADDITION
SUBTRACTION
COMPARISONS
EQUAL
NOT
EQUAL
BOOLEAN
AND
BOOLEAN
OR
CONVERSELY
LET
TEST
WHETHER
WATER
IS
NOT
LIQUID
AT
A
GIVEN
TEMPERATURE
THAT
IS
THE
CASE
WHEN
THE
TEMPERATURE
IS
AT
MOST
OR
AT
LEAST
USE
THE
OR
OPERATOR
TO
COMBINE
THE
EXPRESSIONS
IF
TEMP
TEMP
COUT
NOT
LIQUID
FIGURE
SHOWS
FLOWCHARTS
FOR
THESE
EXAMPLES
SOMETIMES
YOU
NEED
TO
INVERT
A
CONDITION
WITH
THE
NOT
LOGICAL
OPERATOR
THE
OPERATOR
TAKES
A
SINGLE
CONDITION
AND
EVALUATES
TO
TRUE
IF
THAT
CONDITION
IS
FALSE
AND
TO
FALSE
IF
THE
CONDITION
IS
TRUE
IN
THIS
EXAMPLE
OUTPUT
OCCURS
IF
THE
VALUE
OF
THE
BOOLEAN
VARIABLE
FROZEN
IS
FALSE
IF
FROZEN
COUT
NOT
FROZEN
FIGURE
FLOWCHARTS
FOR
AND
AND
OR
COMBINATIONS
TABLE
BOOLEAN
OPERATORS
EXPRESSION
VALUE
COMMENT
FALSE
ONLY
THE
FIRST
CONDITION
IS
TRUE
NOTE
THAT
THE
OPERATOR
HAS
A
HIGHER
PRECEDENCE
THAN
THE
OPERATOR
TRUE
THE
FIRST
CONDITION
IS
TRUE
TRUE
THE
IS
NOT
A
TEST
FOR
EITHER
OR
IF
BOTH
CONDITIONS
ARE
TRUE
THE
RESULT
IS
TRUE
TRUE
ERROR
THE
EXPRESSION
IS
TRUE
WHICH
IS
CONVERTED
TO
THE
EXPRESSION
IS
TRUE
YOU
NEVER
WANT
TO
WRITE
SUCH
AN
EXPRESSION
SEE
COMMON
ERROR
ON
PAGE
TRUE
ERROR
IS
NOT
ZERO
IT
IS
CONVERTED
TO
TRUE
YOU
NEVER
WANT
TO
WRITE
SUCH
AN
EXPRESSION
SEE
COMMON
ERROR
ON
PAGE
X
X
X
X
X
X
THE
OPERATOR
HAS
A
HIGHER
PRECEDENCE
THAN
THE
OPERATOR
FALSE
IS
TRUE
THEREFORE
ITS
NEGATION
IS
FALSE
FROZEN
TRUE
FROZEN
THERE
IS
NO
NEED
TO
COMPARE
A
BOOLEAN
VARIABLE
WITH
TRUE
FROZEN
FALSE
FROZEN
IT
IS
CLEARER
TO
USE
THAN
TO
COMPARE
WITH
FALSE
TABLE
ILLUSTRATES
ADDITIONAL
EXAMPLES
OF
EVALUATING
BOOLEAN
OPERATORS
SUPPOSE
X
AND
Y
ARE
TWO
INTEGERS
HOW
DO
YOU
TEST
WHETHER
BOTH
OF
THEM
ARE
ZERO
HOW
DO
YOU
TEST
WHETHER
AT
LEAST
ONE
OF
THEM
IS
ZERO
HOW
DO
YOU
TEST
WHETHER
EXACTLY
ONE
OF
THEM
IS
ZERO
WHAT
IS
THE
VALUE
OF
FROZEN
WHAT
IS
THE
ADVANTAGE
OF
USING
THE
TYPE
BOOL
RATHER
THAN
STRINGS
FALSE
TRUE
OR
INTEGERS
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
COMMON
ERROR
COMMON
ERROR
COMBINING
MULTIPLE
RELATIONAL
OPERATORS
CONSIDER
THE
EXPRESSION
IF
TEMP
ERROR
THIS
LOOKS
JUST
LIKE
THE
MATHEMATICAL
TEST
TEMP
UNFORTUNATELY
IT
IS
NOT
LET
US
DISSECT
THE
EXPRESSION
TEMP
THE
FIRST
HALF
TEMP
IS
A
TEST
WITH
OUT
COME
TRUE
OR
FALSE
DEPENDING
ON
THE
VALUE
OF
TEMP
THE
OUTCOME
OF
THAT
TEST
TRUE
OR
FALSE
IS
THEN
COMPARED
AGAINST
CAN
ONE
COMPARE
TRUTH
VALUES
AND
FLOATING
POINT
NUMBERS
IS
TRUE
LARGER
THAN
OR
NOT
UNFORTUNATELY
TO
STAY
COMPATIBLE
WITH
THE
C
LANGUAGE
C
CONVERTS
FALSE
TO
AND
TRUE
TO
THEREFORE
THE
EXPRESSION
WILL
ALWAYS
EVALUATE
TO
TRUE
YOU
MUST
BE
CAREFUL
NOT
TO
MIX
LOGICAL
AND
ARITHMETIC
EXPRESSIONS
IN
YOUR
PROGRAMS
INSTEAD
USE
AND
TO
COMBINE
TWO
SEPARATE
TESTS
IF
TEMP
TEMP
ANOTHER
COMMON
ERROR
ALONG
THE
SAME
LINES
IS
TO
WRITE
IF
X
Y
ERROR
INSTEAD
OF
IF
X
Y
UNFORTUNATELY
THE
COMPILER
WILL
NOT
ISSUE
AN
ERROR
MESSAGE
INSTEAD
IT
CONVERTS
X
TO
TRUE
OR
FALSE
ZERO
IS
CONVERTED
TO
FALSE
AND
ANY
NONZERO
VALUE
IS
CONVERTED
TO
TRUE
IF
X
IS
NOT
ZERO
THEN
IT
TESTS
WHETHER
Y
IS
GREATER
THAN
AND
FINALLY
IT
COMPUTES
THE
AND
OF
THESE
TWO
TRUTH
VAL
UES
NATURALLY
THAT
COMPUTATION
MAKES
NO
SENSE
CONFUSING
AND
CONDITIONS
IT
IS
A
SURPRISINGLY
COMMON
ERROR
TO
CONFUSE
AND
AND
OR
CONDITIONS
A
VALUE
LIES
BETWEEN
AND
IF
IT
IS
AT
LEAST
AND
AT
MOST
IT
LIES
OUTSIDE
THAT
RANGE
IF
IT
IS
LESS
THAN
OR
GREATER
THAN
THERE
IS
NO
GOLDEN
RULE
YOU
JUST
HAVE
TO
THINK
CAREFULLY
OFTEN
THE
AND
OR
OR
IS
CLEARLY
STATED
AND
THEN
IT
ISN
T
TOO
HARD
TO
IMPLEMENT
IT
BUT
SOME
TIMES
THE
WORDING
ISN
T
AS
EXPLICIT
IT
IS
QUITE
COMMON
THAT
THE
INDIVIDUAL
CONDITIONS
ARE
NICELY
SET
APART
IN
A
BULLETED
LIST
BUT
WITH
LITTLE
INDICATION
OF
HOW
THEY
SHOULD
BE
COMBINED
CONSIDER
THESE
INSTRUCTIONS
FOR
FILING
A
TAX
RETURN
YOU
CAN
CLAIM
SINGLE
FILING
STATUS
IF
ANY
ONE
OF
THE
FOL
LOWING
IS
TRUE
YOU
WERE
NEVER
MARRIED
YOU
WERE
LEGALLY
SEPARATED
OR
DIVORCED
ON
THE
LAST
DAY
OF
THE
TAX
YEAR
YOU
WERE
WIDOWED
AND
DID
NOT
REMARRY
SINCE
THE
TEST
PASSES
IF
ANY
ONE
OF
THE
CONDITIONS
IS
TRUE
YOU
MUST
COMBINE
THE
CONDITIONS
WITH
OR
ELSEWHERE
THE
SAME
INSTRUCTIONS
STATE
THAT
YOU
MAY
USE
THE
MORE
ADVANTAGEOUS
STATUS
OF
MARRIED
FILING
JOINTLY
IF
ALL
FIVE
OF
THE
FOLLOWING
CONDITIONS
ARE
TRUE
YOUR
SPOUSE
DIED
LESS
THAN
TWO
YEARS
AGO
AND
YOU
DID
NOT
REMARRY
YOU
HAVE
A
CHILD
WHOM
YOU
CAN
CLAIM
AS
DEPENDENT
THAT
CHILD
LIVED
IN
YOUR
HOME
FOR
ALL
OF
THE
TAX
YEAR
YOU
PAID
OVER
HALF
THE
COST
OF
KEEPING
UP
YOUR
HOME
FOR
THIS
CHILD
YOU
FILED
A
JOINT
RETURN
WITH
YOUR
SPOUSE
THE
YEAR
HE
OR
SHE
DIED
BECAUSE
ALL
OF
THE
CONDITIONS
MUST
BE
TRUE
FOR
THE
TEST
TO
PASS
YOU
MUST
COMBINE
THEM
WITH
AN
AND
SPECIAL
TOPIC
SHORT
CIRCUIT
EVALUATION
OF
BOOLEAN
OPERATORS
WHEN
THE
AND
OPERATORS
ARE
COMPUTED
EVALUATION
STOPS
AS
SOON
AS
THE
TRUTH
VALUE
IS
DETERMINED
WHEN
AN
IS
EVALUATED
AND
THE
FIRST
CONDITION
IS
FALSE
THE
SECOND
CONDITION
IS
NOT
EVALUATED
BECAUSE
IT
DOES
NOT
MATTER
WHAT
THE
OUTCOME
OF
THE
SECOND
TEST
IS
FOR
EXAMPLE
CONSIDER
THE
EXPRESSION
QUANTITY
PRICE
QUANTITY
SUPPOSE
THE
VALUE
OF
QUANTITY
IS
ZERO
THEN
THE
TEST
QUANTITY
FAILS
AND
THE
SECOND
TEST
IS
NOT
ATTEMPTED
THAT
IS
JUST
AS
WELL
BECAUSE
IT
IS
ILLEGAL
TO
DIVIDE
BY
ZERO
SIMILARLY
WHEN
THE
FIRST
CONDITION
OF
AN
EXPRESSION
IS
TRUE
THEN
THE
REMAINDER
IS
NOT
EVALUATED
SINCE
THE
RESULT
MUST
BE
TRUE
THIS
PROCESS
IS
CALLED
SHORT
CIRCUIT
EVALUATION
IN
A
SHORT
CIRCUIT
ELECTRICITY
TRAVELS
ALONG
THE
PATH
OF
LEAST
RESISTANCE
SIMILARLY
SHORT
CIRCUIT
EVALUATION
TAKES
THE
FASTEST
PATH
FOR
COMPUTING
THE
RESULT
OF
A
BOOLEAN
EXPRESSION
SPECIAL
TOPIC
DE
MORGAN
LAW
HUMANS
GENERALLY
HAVE
A
HARD
TIME
COMPREHENDING
LOGICAL
CONDITIONS
WITH
NOT
OPERATORS
APPLIED
TO
AND
OR
EXPRESSIONS
DE
MORGAN
LAW
NAMED
AFTER
THE
LOGICIAN
AUGUSTUS
DE
MOR
GAN
CAN
BE
USED
TO
SIMPLIFY
THESE
BOOLEAN
EXPRESSIONS
SUPPOSE
WE
WANT
TO
CHARGE
A
HIGHER
SHIPPING
RATE
IF
WE
DON
T
SHIP
WITHIN
THE
CONTINENTAL
UNITED
STATES
IF
COUNTRY
USA
STATE
AK
STATE
HI
THIS
TEST
IS
A
LITTLE
BIT
COMPLICATED
AND
YOU
HAVE
TO
THINK
CAREFULLY
THROUGH
THE
LOGIC
WHEN
IT
IS
NOT
TRUE
THAT
THE
COUNTRY
IS
USA
AND
THE
STATE
IS
NOT
ALASKA
AND
THE
STATE
IS
NOT
HAWAII
THEN
CHARGE
HUH
IT
IS
NOT
TRUE
THAT
SOME
PEOPLE
WON
T
BE
CONFUSED
BY
THIS
CODE
THE
COMPUTER
DOESN
T
CARE
BUT
IT
TAKES
HUMAN
PROGRAMMERS
TO
WRITE
AND
MAINTAIN
THE
CODE
THEREFORE
IT
IS
USEFUL
TO
KNOW
HOW
TO
SIMPLIFY
SUCH
A
CONDITION
DE
MORGAN
LAW
HAS
TWO
FORMS
ONE
FOR
THE
NEGATION
OF
AN
AND
EXPRESSION
AND
ONE
FOR
THE
NEGATION
OF
AN
OR
EXPRESSION
A
B
IS
THE
SAME
AS
A
B
A
B
IS
THE
SAME
AS
A
B
PAY
PARTICULAR
ATTENTION
TO
THE
FACT
THAT
THE
AND
AND
OR
OPERATORS
ARE
REVERSED
BY
MOVING
THE
NOT
INWARD
FOR
EXAMPLE
THE
NEGATION
OF
THE
STATE
IS
ALASKA
OR
IT
IS
HAWAII
STATE
AK
STATE
HI
IS
THE
STATE
IS
NOT
ALASKA
AND
IT
IS
NOT
HAWAII
STATE
AK
STATE
HI
APPLICATION
INPUT
VALIDATION
AN
IMPORTANT
APPLICATION
FOR
THE
IF
STATEMENT
IS
INPUT
VALIDATION
WHENEVER
YOUR
PROGRAM
ACCEPTS
USER
INPUT
YOU
NEED
TO
MAKE
SURE
THAT
THE
USER
SUPPLIED
VALUES
ARE
VALID
BEFORE
YOU
USE
THEM
IN
YOUR
COMPUTATIONS
CONSIDER
OUR
ELEVATOR
PROGRAM
ASSUME
THAT
THE
ELEVATOR
PANEL
HAS
BUTTONS
LABELED
THROUGH
BUT
NOT
THE
FOLLOWING
ARE
ILLEGAL
INPUTS
THE
NUMBER
ZERO
OR
A
NEGATIVE
NUMBER
LIKE
A
QUALITY
CONTROL
WORKER
YOU
WANT
TO
MAKE
SURE
THAT
USER
INPUT
IS
CORRECT
BEFORE
PROCESSING
IT
A
NUMBER
LARGER
THAN
AN
INPUT
THAT
IS
NOT
A
SEQUENCE
OF
DIGITS
SUCH
AS
FIVE
IN
EACH
OF
THESE
CASES
WE
WILL
WANT
TO
GIVE
AN
ERROR
MESSAGE
AND
EXIT
THE
PROGRAM
IT
IS
SIMPLE
TO
GUARD
AGAINST
AN
INPUT
OF
IF
FLOOR
COUT
ERROR
THERE
IS
NO
THIRTEENTH
FLOOR
ENDL
RETURN
THE
STATEMENT
RETURN
IMMEDIATELY
EXITS
THE
MAIN
FUNCTION
AND
THEREFORE
TERMINATES
THE
PROGRAM
IT
IS
A
CON
VENTION
TO
RETURN
WITH
THE
VALUE
IF
THE
PROGRAM
COMPLETED
NORMALLY
AND
WITH
A
NON
ZERO
VALUE
WHEN
AN
ERROR
WAS
ENCOUNTERED
HERE
IS
HOW
YOU
ENSURE
THAT
THE
USER
DOESN
T
ENTER
A
NUMBER
OUTSIDE
THE
VALID
RANGE
IF
FLOOR
FLOOR
COUT
ERROR
THE
FLOOR
MUST
BE
BETWEEN
AND
ENDL
RETURN
HOWEVER
DEALING
WITH
AN
INPUT
THAT
IS
NOT
A
VALID
INTEGER
IS
A
MORE
SERIOUS
PROBLEM
WHEN
THE
STATEMENT
CIN
FLOOR
IS
EXECUTED
AND
THE
USER
TYPES
IN
AN
INPUT
THAT
IS
NOT
AN
INTEGER
SUCH
AS
FIVE
THEN
THE
INTEGER
VARIABLE
FLOOR
IS
NOT
SET
INSTEAD
THE
INPUT
STREAM
CIN
IS
SET
TO
A
FAILED
STATE
YOU
CALL
THE
FAIL
MEMBER
FUNCTION
TO
TEST
FOR
THAT
FAILED
STATE
IF
CIN
FAIL
COUT
ERROR
NOT
AN
INTEGER
ENDL
RETURN
THE
ORDER
OF
THE
IF
STATEMENTS
IS
IMPORTANT
YOU
MUST
FIRST
TEST
FOR
CIN
FAIL
AFTER
ALL
IF
THE
INPUT
FAILED
NO
VALUE
HAS
BEEN
ASSIGNED
TO
FLOOR
AND
IT
MAKES
NO
SENSE
TO
COMPARE
IT
AGAINST
OTHER
VALUES
INPUT
FAILURE
IS
QUITE
SERIOUS
IN
C
ONCE
INPUT
HAS
FAILED
ALL
SUBSEQUENT
ATTEMPTS
AT
INPUT
WILL
FAIL
AS
WELL
YOU
WILL
LEARN
IN
CHAPTER
HOW
TO
WRITE
PROGRAMS
THAT
ARE
MORE
TOLERANT
OF
BAD
INPUT
FOR
NOW
OUR
GOAL
IS
SIMPLY
TO
DETECT
BAD
INPUT
AND
TO
EXIT
THE
PROGRAM
WHEN
IT
OCCURS
HERE
IS
THE
COMPLETE
ELEVATOR
PROGRAM
WITH
INPUT
VALIDATION
CPP
NOW
WE
KNOW
THAT
THE
INPUT
IS
VALID
INT
IF
FLOOR
FLOOR
ELSE
FLOOR
COUT
THE
ELEVATOR
WILL
TRAVEL
TO
THE
ACTUAL
FLOOR
ENDL
RETURN
PROGRAM
RUN
CONSIDER
THE
CPP
PROGRAM
WHAT
OUTPUT
DO
YOU
GET
WHEN
THE
INPUT
IS
A
B
C
D
THIRTEEN
YOUR
TASK
IS
TO
REWRITE
THE
CPP
PROGRAM
SO
THAT
THERE
IS
A
SINGLE
IF
STATE
MENT
WITH
A
COMPLEX
CONDITION
IF
COUT
ERROR
BAD
INPUT
ENDL
RETURN
WHAT
IS
THE
CONDITION
IN
THE
SHERLOCK
HOLMES
STORY
THE
ADVENTURE
OF
THE
SUSSEX
VAMPIRE
THE
INIMITABLE
DETECTIVE
UTTERED
THESE
WORDS
MATILDA
BRIGGS
WAS
NOT
THE
NAME
OF
A
YOUNG
WOMAN
WATSON
IT
WAS
A
SHIP
WHICH
IS
ASSOCIATED
WITH
THE
GIANT
RAT
OF
SUMATRA
A
STORY
FOR
WHICH
THE
WORLD
IS
NOT
YET
PREPARED
OVER
A
HUNDRED
YEARS
LATER
RESEARCHERS
FOUND
GIANT
RATS
IN
WESTERN
NEW
GUINEA
ANOTHER
PART
OF
INDONESIA
SUPPOSE
YOU
ARE
CHARGED
WITH
WRITING
A
PROGRAM
THAT
PROCESSES
RAT
WEIGHTS
IT
CONTAINS
THE
STATEMENTS
DOUBLE
WEIGHT
COUT
ENTER
WEIGHT
IN
KG
CIN
WEIGHT
WHAT
INPUT
CHECKS
SHOULD
YOU
SUPPLY
WHEN
PROCESSING
INPUTS
YOU
WANT
TO
REJECT
VALUES
THAT
ARE
TOO
LARGE
BUT
HOW
LARGE
IS
TOO
LARGE
THESE
GIANT
RATS
FOUND
IN
WESTERN
NEW
GUINEA
ARE
ABOUT
FIVE
TIMES
THE
SIZE
OF
A
CITY
RAT
CONSIDER
THE
FOLLOWING
TEST
PROGRAM
INT
MAIN
INT
M
COUT
ENTER
AN
INTEGER
CIN
M
INT
N
COUT
ENTER
ANOTHER
INTEGER
CIN
N
COUT
M
N
ENDL
RETURN
RUN
THIS
PROGRAM
AND
ENTER
THREE
AT
THE
FIRST
PROMPT
WHAT
HAPPENS
WHY
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
RANDOM
FACT
ARTIFICIAL
INTELLIGENCE
WHEN
ONE
USES
A
SOPHISTICATED
COM
PUTER
PROGRAM
SUCH
AS
A
TAX
PREPARA
TION
PACKAGE
ONE
IS
BOUND
TO
ATTRIBUTE
SOME
INTELLIGENCE
TO
THE
COMPUTER
THE
COMPUTER
ASKS
SENSIBLE
QUESTIONS
AND
MAKES
COMPUTATIONS
THAT
WE
FIND
A
MENTAL
CHALLENGE
AFTER
ALL
IF
DOING
ONE
TAXES
WERE
EASY
WE
WOULDN
T
NEED
A
COMPUTER
TO
DO
IT
FOR
US
AS
PROGRAMMERS
HOWEVER
WE
KNOW
THAT
ALL
THIS
APPARENT
INTELLIGENCE
IS
AN
ILLUSION
HUMAN
PROGRAMMERS
HAVE
CAREFULLY
COACHED
THE
SOFTWARE
IN
ALL
POSSIBLE
SCENARIOS
AND
IT
SIMPLY
REPLAYS
THE
ACTIONS
AND
DECISIONS
THAT
WERE
PROGRAMMED
INTO
IT
WOULD
IT
BE
POSSIBLE
TO
WRITE
COM
PUTER
PROGRAMS
THAT
ARE
GENUINELY
INTELLIGENT
IN
SOME
SENSE
FROM
THE
EARLIEST
DAYS
OF
COMPUTING
THERE
WAS
A
SENSE
THAT
THE
HUMAN
BRAIN
MIGHT
BE
NOTHING
BUT
AN
IMMENSE
COMPUTER
AND
THAT
IT
MIGHT
WELL
BE
FEASIBLE
TO
PROGRAM
COMPUTERS
TO
IMITATE
SOME
PROCESSES
OF
HUMAN
THOUGHT
SERI
OUS
RESEARCH
INTO
ARTIFICIAL
INTELLIGENCE
BEGAN
IN
THE
MID
AND
THE
FIRST
TWENTY
YEARS
BROUGHT
SOME
IMPRES
SIVE
SUCCESSES
PROGRAMS
THAT
PLAY
CHESS
SURELY
AN
ACTIVITY
THAT
APPEARS
TO
REQUIRE
REMARKABLE
INTELLECTUAL
POW
ERS
HAVE
BECOME
SO
GOOD
THAT
THEY
NOW
ROUTINELY
BEAT
ALL
BUT
THE
BEST
HUMAN
PLAYERS
AS
FAR
BACK
AS
AN
EXPERT
SYSTEM
PROGRAM
CALLED
MYCIN
GAINED
FAME
FOR
BEING
BETTER
IN
DIAG
NOSING
MENINGITIS
IN
PATIENTS
THAN
THE
AVERAGE
PHYSICIAN
HOWEVER
THERE
WERE
SERIOUS
SET
BACKS
AS
WELL
FROM
TO
THE
JAPANESE
GOVERNMENT
EMBARKED
ON
A
MASSIVE
RESEARCH
PROJECT
FUNDED
AT
OVER
BILLION
JAPANESE
YEN
IT
WAS
KNOWN
AS
THE
FIFTH
GENERATION
PROJECT
ITS
GOAL
WAS
TO
DEVELOP
NEW
HARDWARE
AND
SOFTWARE
TO
GREATLY
IMPROVE
THE
PERFORMANCE
OF
EXPERT
SYSTEM
SOFT
WARE
AT
ITS
OUTSET
THE
PROJECT
CREATED
FEAR
IN
OTHER
COUNTRIES
THAT
THE
JAPA
NESE
COMPUTER
INDUSTRY
WAS
ABOUT
TO
BECOME
THE
UNDISPUTED
LEADER
IN
THE
FIELD
HOWEVER
THE
END
RESULTS
WERE
DISAPPOINTING
AND
DID
LITTLE
TO
BRING
ARTIFICIAL
INTELLIGENCE
APPLICATIONS
TO
MARKET
FROM
THE
VERY
OUTSET
ONE
OF
THE
STATED
GOALS
OF
THE
AI
COMMUNITY
WAS
TO
PRODUCE
SOFTWARE
THAT
COULD
TRANS
LATE
TEXT
FROM
ONE
LANGUAGE
TO
ANOTHER
FOR
EXAMPLE
FROM
ENGLISH
TO
RUSSIAN
THAT
UNDERTAKING
PROVED
TO
BE
ENOR
MOUSLY
COMPLICATED
HUMAN
LANGUAGE
APPEARS
TO
BE
MUCH
MORE
SUBTLE
AND
INTERWOVEN
WITH
THE
HUMAN
EXPERIENCE
THAN
HAD
ORIGINALLY
BEEN
THOUGHT
EVEN
THE
GRAMMAR
CHECKING
TOOLS
THAT
COME
WITH
WORD
PROCESSING
PROGRAMS
TODAY
ARE
MORE
OF
A
GIMMICK
THAN
A
USEFUL
TOOL
AND
ANALYZING
GRAMMAR
IS
JUST
THE
FIRST
STEP
IN
TRANSLATING
SENTENCES
THE
CYC
FROM
ENCYCLOPEDIA
PROJ
ECT
STARTED
BY
DOUGLAS
LENAT
IN
TRIES
TO
CODIFY
THE
IMPLICIT
ASSUMP
TIONS
THAT
UNDERLIE
HUMAN
SPEECH
AND
WRITING
THE
TEAM
MEMBERS
STARTED
OUT
ANALYZING
NEWS
ARTICLES
AND
ASKED
THEMSELVES
WHAT
UNMENTIONED
FACTS
CHAPTER
SUMMARY
USE
THE
IF
STATEMENT
TO
IMPLEMENT
A
DECISION
THE
IF
STATEMENT
ALLOWS
A
PROGRAM
TO
CARRY
OUT
DIFFERENT
ACTIONS
DEPENDING
ON
THE
NATURE
OF
THE
DATA
TO
BE
PROCESSED
IMPLEMENT
COMPARISONS
OF
NUMBERS
AND
OBJECTS
RELATIONAL
OPERATORS
ARE
USED
TO
COMPARE
NUMBERS
AND
STRINGS
LEXICOGRAPHIC
ORDER
IS
USED
TO
COMPARE
STRINGS
IMPLEMENT
COMPLEX
DECISIONS
THAT
REQUIRE
MULTIPLE
IF
STATEMENTS
MULTIPLE
ALTERNATIVES
ARE
REQUIRED
FOR
DECISIONS
THAT
HAVE
MORE
THAN
TWO
CASES
WHEN
USING
MULTIPLE
IF
STATEMENTS
PAY
ATTENTION
TO
THE
ORDER
OF
THE
CONDITIONS
ARE
NECESSARY
TO
ACTUALLY
UNDERSTAND
THE
SENTENCES
FOR
EXAMPLE
CONSIDER
THE
SENTENCE
LAST
FALL
SHE
ENROLLED
IN
MICHIGAN
STATE
THE
READER
AUTOMATI
CALLY
REALIZES
THAT
FALL
IS
NOT
RELATED
TO
FALLING
DOWN
IN
THIS
CONTEXT
BUT
REFERS
TO
THE
SEASON
WHILE
THERE
IS
A
STATE
OF
MICHIGAN
HERE
MICHIGAN
STATE
DENOTES
THE
UNIVERSITY
A
PRIORI
A
COM
PUTER
PROGRAM
HAS
NONE
OF
THIS
KNOWL
EDGE
THE
GOAL
OF
THE
CYC
PROJECT
IS
TO
EXTRACT
AND
STORE
THE
REQUISITE
FACTS
THAT
IS
PEOPLE
ENROLL
IN
UNIVERSITIES
MICHIGAN
IS
A
STATE
MANY
STATES
HAVE
UNIVERSITIES
NAMED
X
STATE
UNI
VERSITY
OFTEN
ABBREVIATED
AS
X
STATE
MOST
PEOPLE
ENROLL
IN
A
UNIVERSITY
IN
THE
FALL
BY
THE
PROJECT
HAD
CODI
ING
EXAMPLES
IS
THE
OUT
COME
OF
A
SERIES
OF
GRAND
CHALLENGES
FOR
AUTONO
MOUS
VEHICLES
POSED
BY
THE
DEFENSE
ADVANCED
RESEARCH
PROJECTS
AGENCY
DARPA
COMPETITORS
WERE
INVITED
TO
SUBMIT
A
COM
PUTER
CONTROLLED
VEHICLE
THAT
HAD
TO
COMPLETE
AN
OBSTACLE
COURSE
WITHOUT
A
HUMAN
DRIVER
OR
REMOTE
CONTROL
THE
FIRST
EVENT
IN
WAS
A
DISAPPOINTMENT
WITH
NONE
OF
THE
ENTRANTS
FINISH
ING
THE
ROUTE
IN
FIVE
VEHICLES
COMPLETED
A
GRU
ELING
KM
COURSE
IN
THE
WINNER
OF
THE
DARPA
URBAN
CHALLENGE
FIED
ABOUT
COMMON
SENSE
CONCEPTS
AND
ABOUT
A
MILLION
FACTS
OF
KNOWLEDGE
RELATING
THEM
EVEN
THIS
MASSIVE
AMOUNT
OF
DATA
HAS
NOT
PROVEN
SUFFICIENT
FOR
USEFUL
APPLICATIONS
IN
RECENT
YEARS
ARTIFICIAL
INTELLI
GENCE
TECHNOLOGY
HAS
SEEN
SUBSTANTIAL
ADVANCES
ONE
OF
THE
MOST
ASTOUND
MOJAVE
DESERT
STANFORD
STANLEY
CAME
IN
FIRST
WITH
AN
AVERAGE
SPEED
OF
KM
H
IN
DARPA
MOVED
THE
COM
PETITION
TO
AN
URBAN
ENVIRONMENT
AN
ABANDONED
AIR
FORCE
BASE
VEHICLES
HAD
TO
BE
ABLE
TO
INTERACT
WITH
EACH
OTHER
FOLLOWING
CALIFORNIA
TRAFFIC
LAWS
AS
STANFORD
SEBASTIAN
THRUN
EXPLAINED
IN
THE
LAST
GRAND
CHALLENGE
IT
DIDN
T
REALLY
MATTER
WHETHER
AN
OBSTACLE
WAS
A
ROCK
OR
A
BUSH
BECAUSE
EITHER
WAY
YOU
D
JUST
DRIVE
AROUND
IT
THE
CURRENT
CHALLENGE
IS
TO
MOVE
FROM
JUST
SENSING
THE
ENVIRONMENT
TO
UNDERSTANDING
THE
ENVIRONMENT
IMPLEMENT
DECISIONS
WHOSE
BRANCHES
REQUIRE
FURTHER
DECISIONS
WHEN
A
DECISION
STATEMENT
IS
CONTAINED
INSIDE
THE
BRANCH
OF
ANOTHER
DECISION
STATEMENT
THE
STATEMENTS
ARE
NESTED
NESTED
DECISIONS
ARE
REQUIRED
FOR
PROBLEMS
THAT
HAVE
TWO
LEVELS
OF
DECISION
MAKING
DRAW
FLOWCHARTS
FOR
VISUALIZING
THE
CONTROL
FLOW
OF
A
PROGRAM
FLOW
CHARTS
ARE
MADE
UP
OF
ELEMENTS
FOR
TASKS
INPUT
OUTPUTS
AND
DECISIONS
EACH
BRANCH
OF
A
DECISION
CAN
CONTAIN
TASKS
AND
FURTHER
DECISIONS
NEVER
POINT
AN
ARROW
INSIDE
ANOTHER
BRANCH
DESIGN
TEST
CASES
FOR
YOUR
PROGRAMS
EACH
BRANCH
OF
YOUR
PROGRAM
SHOULD
BE
COVERED
BY
A
TEST
CASE
IT
IS
A
GOOD
IDEA
TO
DESIGN
TEST
CASES
BEFORE
IMPLEMENTING
A
PROGRAM
USE
THE
BOOLEAN
DATA
TYPE
TO
STORE
AND
COMBINE
CONDITIONS
THAT
CAN
BE
TRUE
OR
FALSE
THE
BOOLEAN
TYPE
BOOL
HAS
TWO
VALUES
FALSE
AND
TRUE
C
HAS
TWO
BOOLEAN
OPERATORS
THAT
COMBINE
CONDITIONS
AND
AND
OR
TO
INVERT
A
CONDITION
USE
THE
NOT
OPERATOR
THE
AND
OPERATORS
ARE
COMPUTED
USING
SHORT
CIRCUIT
EVALUATION
AS
SOON
AS
THE
TRUTH
VALUE
IS
DETERMINED
NO
FURTHER
CONDITIONS
ARE
EVALUATED
DE
MORGAN
LAW
TELLS
YOU
HOW
TO
NEGATE
AND
CONDITIONS
APPLY
IF
STATEMENTS
TO
DETECT
WHETHER
USER
INPUT
IS
VALID
WHEN
READING
A
VALUE
CHECK
THAT
IT
IS
WITHIN
THE
REQUIRED
RANGE
USE
THE
FAIL
FUNCTION
TO
TEST
WHETHER
THE
INPUT
STREAM
HAS
FAILED
FIND
THE
ERRORS
IN
THE
FOLLOWING
IF
STATEMENTS
A
IF
X
THEN
COUT
X
B
IF
X
Y
ELSE
Y
C
IF
X
POW
X
SQRT
Y
Y
X
D
IF
X
Y
E
CIN
X
IF
CIN
FAIL
Y
Y
X
WHAT
DO
THESE
CODE
FRAGMENTS
PRINT
A
INT
N
INT
M
IF
N
M
COUT
N
ELSE
COUT
M
B
INT
N
INT
M
IF
N
M
COUT
N
ELSE
COUT
M
C
DOUBLE
X
DOUBLE
Y
IF
FABS
X
Y
COUT
X
ELSE
COUT
Y
D
DOUBLE
X
SQRT
DOUBLE
Y
IF
X
X
Y
COUT
X
ELSE
COUT
Y
SUPPOSE
X
AND
Y
ARE
VARIABLES
OF
TYPE
DOUBLE
WRITE
A
CODE
FRAGMENT
THAT
SETS
Y
TO
X
IF
X
IS
POSITIVE
AND
TO
OTHERWISE
SUPPOSE
X
AND
Y
ARE
VARIABLES
OF
TYPE
DOUBLE
WRITE
A
CODE
FRAGMENT
THAT
SETS
Y
TO
THE
ABSOLUTE
VALUE
OF
X
WITHOUT
CALLING
THE
FABS
FUNCTION
USE
AN
IF
STATEMENT
EXPLAIN
WHY
IT
IS
MORE
DIFFICULT
TO
COMPARE
FLOATING
POINT
NUMBERS
THAN
INTEGERS
WRITE
C
CODE
TO
TEST
WHETHER
AN
INTEGER
N
EQUALS
AND
WHETHER
A
FLOATING
POINT
NUMBER
X
EQUALS
COMMON
ERROR
ON
PAGE
EXPLAINS
THAT
A
C
COMPILER
WILL
NOT
REPORT
AN
ERROR
WHEN
YOU
USE
AN
ASSIGNMENT
OPERATOR
INSTEAD
OF
A
TEST
FOR
EQUALITY
BUT
IT
MAY
ISSUE
A
WARNING
WRITE
A
TEST
PROGRAM
CONTAINING
A
STATEMENT
IF
FLOOR
WHAT
DOES
YOUR
COMPILER
DO
WHEN
YOU
COMPILE
THE
PROGRAM
EACH
SQUARE
ON
A
CHESS
BOARD
CAN
BE
DESCRIBED
BY
A
LETTER
AND
NUMBER
SUCH
AS
IN
THIS
EXAMPLE
A
B
C
D
E
A
B
C
D
E
F
G
H
F
G
H
THE
FOLLOWING
PSEUDOCODE
DESCRIBES
AN
ALGORITHM
THAT
DETERMINES
WHETHER
A
SQUARE
WITH
A
GIVEN
LETTER
AND
NUMBER
IS
DARK
BLACK
OR
LIGHT
WHITE
IF
THE
LETTER
IS
AN
A
C
E
OR
G
IF
THE
NUMBER
IS
ODD
COLOR
BLACK
ELSE
COLOR
WHITE
ELSE
IF
THE
NUMBER
IS
EVEN
COLOR
BLACK
ELSE
COLOR
WHITE
USING
THE
PROCEDURE
IN
PROGRAMMING
TIP
ON
PAGE
TRACE
THIS
PSEUDOCODE
WITH
INPUT
GIVE
A
SET
OF
FOUR
TEST
CASES
FOR
THE
ALGORITHM
OF
EXERCISE
THAT
COVERS
ALL
BRANCHES
IN
A
SCHEDULING
PROGRAM
WE
WANT
TO
CHECK
WHETHER
TWO
APPOINTMENTS
OVERLAP
FOR
SIMPLICITY
APPOINTMENTS
START
AT
A
FULL
HOUR
AND
WE
USE
MILITARY
TIME
WITH
HOURS
THE
FOLLOWING
PSEUDOCODE
DESCRIBES
AN
ALGORITHM
THAT
DETERMINES
WHETHER
THE
APPOINTMENT
WITH
START
TIME
AND
END
TIME
OVERLAPS
WITH
THE
APPOINT
MENT
WITH
START
TIME
AND
END
TIME
IF
ELSE
IF
E
ELSE
E
IF
E
THE
APPOINTMENTS
OVERLAP
ELSE
THE
APPOINTMENTS
DON
T
OVERLAP
TRACE
THIS
ALGORITHM
WITH
AN
APPOINTMENT
FROM
AND
ONE
FROM
THEN
WITH
AN
APPOINTMENT
FROM
AND
ONE
FROM
DRAW
A
FLOW
CHART
FOR
THE
ALGORITHM
IN
EXERCISE
DRAW
A
FLOW
CHART
FOR
THE
ALGORITHM
IN
EXERCISE
DRAW
A
FLOW
CHART
FOR
THE
ALGORITHM
IN
EXERCISE
DEVELOP
A
SET
OF
TEST
CASES
FOR
THE
ALGORITHM
IN
EXERCISE
DEVELOP
A
SET
OF
TEST
CASES
FOR
THE
ALGORITHM
IN
EXERCISE
WRITE
PSEUDOCODE
FOR
A
PROGRAM
THAT
PROMPTS
THE
USER
FOR
A
MONTH
AND
DAY
AND
PRINTS
OUT
WHETHER
IT
IS
ONE
OF
THE
FOLLOWING
FOUR
HOLIDAYS
NEW
YEAR
DAY
JANUARY
INDEPENDENCE
DAY
JULY
VETERANS
DAY
NOVEMBER
CHRISTMAS
DAY
DECEMBER
WRITE
PSEUDOCODE
FOR
A
PROGRAM
THAT
ASSIGNS
LETTER
GRADES
FOR
A
QUIZ
ACCORDING
TO
THE
FOLLOWING
TABLE
SCORE
GRADE
A
B
C
D
F
EXPLAIN
HOW
THE
LEXICOGRAPHIC
ORDERING
OF
STRINGS
IN
C
DIFFERS
FROM
THE
ORDERING
OF
WORDS
IN
A
DICTIONARY
OR
TELEPHONE
BOOK
HINT
CONSIDER
STRINGS
SUCH
AS
IBM
WILEY
COM
CENTURY
AND
WHILE
U
WAIT
OF
THE
FOLLOWING
PAIRS
OF
STRINGS
WHICH
COMES
FIRST
IN
LEXICOGRAPHIC
ORDER
A
TOM
DICK
B
TOM
TOMATO
C
CHURCH
CHURCHILL
D
CAR
MANUFACTURER
CARBURETOR
E
HARRY
HAIRY
F
C
CAR
G
TOM
TOM
H
CAR
CARL
I
CAR
BAR
EXPLAIN
THE
DIFFERENCE
BETWEEN
A
SEQUENCE
OF
ELSE
IF
CLAUSES
AND
NESTED
IF
STATE
MENTS
GIVE
AN
EXAMPLE
FOR
EACH
GIVE
AN
EXAMPLE
OF
A
SEQUENCE
OF
ELSE
IF
CLAUSES
WHERE
THE
ORDER
OF
THE
TESTS
DOES
NOT
MATTER
GIVE
AN
EXAMPLE
WHERE
THE
ORDER
OF
THE
TESTS
MATTERS
REWRITE
THE
CONDITION
IN
SECTION
TO
USE
OPERATORS
INSTEAD
OF
OPERATORS
WHAT
IS
THE
IMPACT
ON
THE
ORDER
OF
THE
COMPARISONS
GIVE
A
SET
OF
TEST
CASES
FOR
THE
TAX
PROGRAM
IN
EXERCISE
MANUALLY
COMPUTE
THE
EXPECTED
RESULTS
MAKE
UP
ANOTHER
C
CODE
EXAMPLE
THAT
SHOWS
THE
DANGLING
ELSE
PROBLEM
USING
THE
FOLLOWING
STATEMENT
A
STUDENT
WITH
A
GPA
OF
AT
LEAST
BUT
LESS
THAN
IS
ON
PROBATION
WITH
LESS
THAN
THE
STUDENT
IS
FAILING
COMPLETE
THE
FOLLOWING
TRUTH
TABLE
BY
FINDING
THE
TRUTH
VALUES
OF
THE
BOOLEAN
EXPRESSIONS
FOR
ALL
COMBINATIONS
OF
THE
BOOLEAN
INPUTS
P
Q
AND
R
P
Q
R
P
Q
R
P
Q
R
FALSE
FALSE
FALSE
FALSE
FALSE
TRUE
FALSE
TRUE
FALSE
MORE
COMBINATIONS
TRUE
OR
FALSE
A
B
IS
THE
SAME
AS
B
A
FOR
ANY
BOOLEAN
CONDITIONS
A
AND
B
THE
ADVANCED
SEARCH
FEATURE
OF
MANY
SEARCH
ENGINES
ALLOWS
YOU
TO
USE
BOOLEAN
OPERATORS
FOR
COMPLEX
QUERIES
SUCH
AS
CATS
OR
DOGS
AND
NOT
PETS
CONTRAST
THESE
SEARCH
OPERATORS
WITH
THE
BOOLEAN
OPERATORS
IN
C
SUPPOSE
THE
VALUE
OF
B
IS
FALSE
AND
THE
VALUE
OF
X
IS
WHAT
IS
THE
VALUE
OF
EACH
OF
THE
FOLLOWING
EXPRESSIONS
A
B
X
B
B
X
C
B
X
D
B
X
E
B
X
F
B
X
G
B
X
H
B
X
SIMPLIFY
THE
FOLLOWING
EXPRESSIONS
HERE
B
IS
A
VARIABLE
OF
TYPE
BOOL
A
B
TRUE
B
B
FALSE
C
B
TRUE
D
B
FALSE
SIMPLIFY
THE
FOLLOWING
STATEMENTS
HERE
B
IS
A
VARIABLE
OF
TYPE
BOOL
AND
N
IS
A
VARIABLE
OF
TYPE
INT
A
IF
N
B
TRUE
ELSE
B
FALSE
HINT
WHAT
IS
THE
VALUE
OF
N
B
IF
N
B
FALSE
ELSE
B
TRUE
C
B
FALSE
IF
N
IF
N
B
TRUE
D
IF
N
B
TRUE
ELSE
B
N
WHAT
IS
WRONG
WITH
THE
FOLLOWING
PROGRAM
COUT
ENTER
THE
NUMBER
OF
QUARTERS
CIN
QUARTERS
TOTAL
TOTAL
QUARTERS
COUT
TOTAL
TOTAL
ENDL
IF
CIN
FAIL
COUT
INPUT
ERROR
READING
NUMBERS
IS
SURPRISINGLY
DIFFICULT
BECAUSE
A
C
INPUT
STREAM
LOOKS
AT
THE
INPUT
ONE
CHARACTER
AT
A
TIME
FIRST
WHITE
SPACE
IS
SKIPPED
THEN
THE
STREAM
CON
SUMES
THOSE
INPUT
CHARACTERS
THAT
CAN
BE
A
PART
OF
A
NUMBER
ONCE
THE
STREAM
HAS
RECOGNIZED
A
NUMBER
IT
STOPS
READING
IF
IT
FINDS
A
CHARACTER
THAT
CANNOT
BE
A
PART
OF
A
NUMBER
HOWEVER
IF
THE
FIRST
NON
WHITE
SPACE
CHARACTER
IS
NOT
A
DIGIT
OR
A
SIGN
OR
IF
THE
FIRST
CHARACTER
IS
A
SIGN
AND
THE
SECOND
ONE
IS
NOT
A
DIGIT
THEN
THE
STREAM
FAILS
CONSIDER
A
PROGRAM
READING
AN
INTEGER
COUT
ENTER
THE
NUMBER
OF
QUARTERS
INT
QUARTERS
CIN
QUARTERS
FOR
EACH
OF
THE
FOLLOWING
USER
INPUTS
CIRCLE
HOW
MANY
CHARACTERS
HAVE
BEEN
READ
AND
WHETHER
THE
STREAM
IS
IN
THE
FAILED
STATE
OR
NOT
A
B
C
D
E
FIFTEEN
F
FIFTEEN
G
H
I
WRITE
A
PROGRAM
THAT
READS
A
TEMPERATURE
VALUE
AND
THE
LETTER
C
FOR
CELSIUS
OR
F
FOR
FAHRENHEIT
PRINT
WHETHER
WATER
IS
LIQUID
SOLID
OR
GASEOUS
AT
THE
GIVEN
TEMPERATURE
AT
SEA
LEVEL
THE
BOILING
POINT
OF
WATER
DROPS
BY
ABOUT
ONE
DEGREE
CENTIGRADE
FOR
EVERY
METERS
OR
FEET
OF
ALTITUDE
IMPROVE
THE
PROGRAM
OF
EXERCISE
TO
ALLOW
THE
USER
TO
SUPPLY
THE
ALTITUDE
IN
METERS
OR
FEET
WRITE
A
PROGRAM
THAT
READS
IN
THREE
FLOATING
POINT
NUMBERS
AND
PRINTS
THE
LARGEST
OF
THE
THREE
INPUTS
FOR
EXAMPLE
PLEASE
ENTER
THREE
NUMBERS
THE
LARGEST
NUMBER
IS
WRITE
A
PROGRAM
THAT
READS
IN
THREE
STRINGS
AND
SORTS
THEM
LEXICOGRAPHICALLY
ENTER
THREE
STRINGS
CHARLIE
ABLE
BAKER
ABLE
BAKER
CHARLIE
WRITE
A
PROGRAM
THAT
READS
AN
INTEGER
AND
PRINTS
HOW
MANY
DIGITS
THE
NUMBER
HAS
BY
CHECKING
WHETHER
THE
NUMBER
IS
AND
SO
ON
ASSUME
THAT
ALL
INTEGERS
ARE
LESS
THAN
TEN
BILLION
IF
THE
NUMBER
IS
NEGATIVE
FIRST
MULTIPLY
IT
WITH
WRITE
A
PROGRAM
THAT
READS
THREE
NUMBERS
AND
PRINTS
ALL
THE
SAME
IF
THEY
ARE
ALL
THE
SAME
ALL
DIFFERENT
IF
THEY
ARE
ALL
DIFFERENT
AND
NEITHER
OTHERWISE
WRITE
A
PROGRAM
THAT
READS
THREE
NUMBERS
AND
PRINTS
INCREASING
IF
THEY
ARE
IN
INCREASING
ORDER
DECREASING
IF
THEY
ARE
IN
DECREASING
ORDER
AND
NEITHER
OTHER
WISE
HERE
INCREASING
MEANS
STRICTLY
INCREASING
WITH
EACH
VALUE
LARGER
THAN
ITS
PREDECESSOR
THE
SEQUENCE
WOULD
NOT
BE
CONSIDERED
INCREASING
REPEAT
EXERCISE
BUT
BEFORE
READING
THE
NUMBERS
ASK
THE
USER
WHETHER
INCREAS
ING
DECREASING
SHOULD
BE
STRICT
OR
LENIENT
IN
LENIENT
MODE
THE
SEQUENCE
IS
INCREASING
AND
THE
SEQUENCE
IS
BOTH
INCREASING
AND
DECREASING
WRITE
A
PROGRAM
THAT
TRANSLATES
A
LETTER
GRADE
INTO
A
NUMBER
GRADE
LETTER
GRADES
ARE
A
B
C
D
AND
F
POSSIBLY
FOLLOWED
BY
OR
THEIR
NUMERIC
VALUES
ARE
AND
THERE
IS
NO
F
OR
F
A
INCREASES
THE
NUMERIC
VALUE
BY
A
DECREASES
IT
BY
HOWEVER
AN
A
HAS
VALUE
ENTER
A
LETTER
GRADE
B
THE
NUMERIC
VALUE
IS
WRITE
A
PROGRAM
THAT
TRANSLATES
A
NUMBER
BETWEEN
AND
INTO
THE
CLOSEST
LETTER
GRADE
FOR
EXAMPLE
THE
NUMBER
WHICH
MIGHT
HAVE
BEEN
THE
AVERAGE
OF
SEVERAL
GRADES
WOULD
BE
CONVERTED
TO
B
BREAK
TIES
IN
FAVOR
OF
THE
BETTER
GRADE
FOR
EXAMPLE
SHOULD
BE
A
B
WRITE
A
PROGRAM
THAT
TAKES
USER
INPUT
DESCRIBING
A
PLAYING
CARD
IN
THE
FOLLOWING
SHORTHAND
NOTATION
A
ACE
CARD
VALUES
J
JACK
Q
QUEEN
K
KING
D
DIAMONDS
H
HEARTS
SPADES
C
CLUBS
YOUR
PROGRAM
SHOULD
PRINT
THE
FULL
DESCRIPTION
OF
THE
CARD
FOR
EXAMPLE
ENTER
THE
CARD
NOTATION
QS
QUEEN
OF
SPADES
WHEN
TWO
POINTS
IN
TIME
ARE
COMPARED
EACH
GIVEN
AS
HOURS
IN
MILITARY
TIME
RANGING
FROM
AND
AND
MINUTES
THE
FOLLOWING
PSEUDOCODE
DETERMINES
WHICH
COMES
FIRST
IF
COMES
FIRST
ELSE
IF
AND
ARE
THE
SAME
IF
COMES
FIRST
ELSE
IF
AND
ARE
THE
SAME
AND
ARE
THE
SAME
ELSE
COMES
FIRST
ELSE
COMES
FIRST
WRITE
A
PROGRAM
THAT
PROMPTS
THE
USER
FOR
TWO
POINTS
IN
TIME
AND
PRINTS
THE
TIME
THAT
COMES
FIRST
THEN
THE
OTHER
TIME
THE
FOLLOWING
ALGORITHM
YIELDS
THE
SEASON
SPRING
SUMMER
FALL
OR
WINTER
FOR
A
GIVEN
MONTH
AND
DAY
IF
MONTH
IS
OR
SEASON
WINTER
ELSE
IF
MONTH
IS
OR
SEASON
SPRING
ELSE
IF
MONTH
IS
OR
SEASON
SUMMER
ELSE
IF
MONTH
IS
OR
SEASON
FALL
IF
MONTH
IS
DIVISIBLE
BY
AND
DAY
IF
SEASON
IS
WINTER
SEASON
SPRING
ELSE
IF
SEASON
IS
SPRING
SEASON
SUMMER
ELSE
IF
SEASON
IS
SUMMER
SEASON
FALL
ELSE
SEASON
WINTER
WRITE
A
PROGRAM
THAT
PROMPTS
THE
USER
FOR
A
MONTH
AND
DAY
AND
THEN
PRINTS
THE
SEASON
AS
DETERMINED
BY
THIS
ALGORITHM
WRITE
A
PROGRAM
THAT
READS
IN
TWO
FLOATING
POINT
NUMBERS
AND
TESTS
WHETHER
THEY
ARE
THE
SAME
UP
TO
TWO
DECIMAL
PLACES
HERE
ARE
TWO
SAMPLE
RUNS
ENTER
TWO
FLOATING
POINT
NUMBERS
THEY
ARE
THE
SAME
UP
TO
TWO
DECIMAL
PLACES
ENTER
TWO
FLOATING
POINT
NUMBERS
THEY
ARE
DIFFERENT
WRITE
A
PROGRAM
TO
SIMULATE
A
BANK
TRANSACTION
THERE
ARE
TWO
BANK
ACCOUNTS
CHECK
ING
AND
SAVINGS
FIRST
ASK
FOR
THE
INITIAL
BALANCES
OF
THE
BANK
ACCOUNTS
REJECT
NEGATIVE
BALANCES
THEN
ASK
FOR
THE
TRANSACTIONS
OPTIONS
ARE
DEPOSIT
WITHDRAWAL
AND
TRANS
FER
THEN
ASK
FOR
THE
ACCOUNT
OPTIONS
ARE
CHECKING
AND
SAVINGS
THEN
ASK
FOR
THE
AMOUNT
REJECT
TRANSACTIONS
THAT
OVERDRAW
AN
ACCOUNT
AT
THE
END
PRINT
THE
BALANCES
OF
BOTH
ACCOUNTS
WRITE
A
PROGRAM
THAT
READS
IN
THE
NAME
AND
SALARY
OF
AN
EMPLOYEE
HERE
THE
SALARY
WILL
DENOTE
AN
HOURLY
WAGE
SUCH
AS
THEN
ASK
HOW
MANY
HOURS
THE
EMPLOYEE
WORKED
IN
THE
PAST
WEEK
BE
SURE
TO
ACCEPT
FRACTIONAL
HOURS
ANY
OVERTIME
WORK
OVER
HOURS
PER
WEEK
IS
PAID
AT
PERCENT
OF
THE
REGULAR
WAGE
COMPUTE
THE
PAY
PRINT
A
PAYCHECK
FOR
THE
EMPLOYEE
WRITE
A
PROGRAM
THAT
PROMPTS
FOR
THE
DAY
AND
MONTH
OF
THE
USER
BIRTHDAY
AND
THEN
PRINTS
A
HOROSCOPE
MAKE
UP
FORTUNES
FOR
PROGRAMMERS
LIKE
THIS
PLEASE
ENTER
YOUR
BIRTHDAY
MONTH
AND
DAY
GEMINI
ARE
EXPERTS
AT
FIGURING
OUT
THE
BEHAVIOR
OF
COMPLICATED
PROGRAMS
YOU
FEEL
WHERE
BUGS
ARE
COMING
FROM
AND
THEN
STAY
ONE
STEP
AHEAD
TONIGHT
YOUR
STYLE
WINS
APPROVAL
FROM
A
TOUGH
CRITIC
EACH
FORTUNE
SHOULD
CONTAIN
THE
NAME
OF
THE
ASTROLOGICAL
SIGN
YOU
WILL
FIND
THE
NAMES
AND
DATE
RANGES
OF
THE
SIGNS
AT
A
DISTRESSINGLY
LARGE
NUMBER
OF
SITES
ON
THE
INTERNET
WRITE
A
PROGRAM
THAT
COMPUTES
TAXES
FOR
THE
FOLLOWING
SCHEDULE
IF
YOUR
STATUS
IS
SINGLE
AND
IF
THE
TAXABLE
INCOME
IS
OVER
BUT
NOT
OVER
THE
TAX
IS
OF
THE
AMOUNT
OVER
IF
YOUR
STATUS
IS
MARRIED
AND
IF
THE
TAXABLE
INCOME
IS
OVER
BUT
NOT
OVER
THE
TAX
IS
OF
THE
AMOUNT
OVER
THE
ORIGINAL
U
INCOME
TAX
OF
WAS
QUITE
SIMPLE
THE
TAX
WAS
PERCENT
ON
THE
FIRST
PERCENT
ON
THE
AMOUNT
OVER
UP
TO
PERCENT
ON
THE
AMOUNT
OVER
UP
TO
PERCENT
ON
THE
AMOUNT
OVER
UP
TO
PERCENT
ON
THE
AMOUNT
OVER
UP
TO
PERCENT
ON
THE
AMOUNT
OVER
THERE
WAS
NO
SEPARATE
SCHEDULE
FOR
SINGLE
OR
MARRIED
TAXPAYERS
WRITE
A
PROGRAM
THAT
COMPUTES
THE
INCOME
TAX
ACCORDING
TO
THIS
SCHEDULE
THE
TAX
CPP
PROGRAM
USES
A
SIMPLIFIED
VERSION
OF
THE
U
INCOME
TAX
SCHEDULE
LOOK
UP
THE
TAX
BRACKETS
AND
RATES
FOR
THE
CURRENT
YEAR
FOR
BOTH
SINGLE
AND
MARRIED
FILERS
AND
IMPLEMENT
A
PROGRAM
THAT
COMPUTES
THE
ACTUAL
INCOME
TAX
UNIT
CONVERSION
WRITE
A
UNIT
CONVERSION
PROGRAM
THAT
ASKS
THE
USERS
FROM
WHICH
UNIT
THEY
WANT
TO
CONVERT
FL
OZ
GAL
OZ
LB
IN
FT
MI
AND
TO
WHICH
UNIT
THEY
WANT
TO
CONVERT
ML
L
G
KG
MM
CM
M
KM
REJECT
INCOMPATIBLE
CONVERSIONS
SUCH
AS
GAL
KM
ASK
FOR
THE
VALUE
TO
BE
CONVERTED
THEN
DISPLAY
THE
RESULT
CONVERT
FROM
GAL
CONVERT
TO
ML
VALUE
GAL
ML
WRITE
A
PROGRAM
THAT
PROMPTS
THE
USER
TO
PROVIDE
A
SINGLE
CHARACTER
FROM
THE
ALPHA
BET
PRINT
VOWEL
OR
CONSONANT
DEPENDING
ON
THE
USER
INPUT
IF
THE
USER
INPUT
IS
NOT
A
LETTER
BETWEEN
A
AND
Z
OR
A
AND
Z
OR
IS
A
STRING
OF
LENGTH
PRINT
AN
ERROR
MESSAGE
ROMAN
NUMBERS
WRITE
A
PROGRAM
THAT
CONVERTS
A
POSITIVE
INTEGER
INTO
THE
ROMAN
NUMBER
SYSTEM
THE
ROMAN
NUMBER
SYSTEM
HAS
DIGITS
I
V
X
L
C
D
M
NUMBERS
ARE
FORMED
ACCORDING
TO
THE
FOLLOWING
RULES
ONLY
NUMBERS
UP
TO
ARE
REPRESENTED
AS
IN
THE
DECIMAL
SYSTEM
THE
THOUSANDS
HUNDREDS
TENS
AND
ONES
ARE
EXPRESSED
SEPARATELY
THE
NUMBERS
TO
ARE
EXPRESSED
AS
I
II
III
IV
V
VI
VII
VIII
IX
AS
YOU
CAN
SEE
AN
I
PRECEDING
A
V
OR
X
IS
SUBTRACTED
FROM
THE
VALUE
AND
YOU
CAN
NEVER
HAVE
MORE
THAN
THREE
I
IN
A
ROW
TENS
AND
HUNDREDS
ARE
DONE
THE
SAME
WAY
EXCEPT
THAT
THE
LETTERS
X
L
C
AND
C
D
M
ARE
USED
INSTEAD
OF
I
V
X
RESPECTIVELY
YOUR
PROGRAM
SHOULD
TAKE
AN
INPUT
SUCH
AS
AND
CONVERT
IT
TO
ROMAN
NUMERALS
MCMLXXVIII
WRITE
A
PROGRAM
THAT
ASKS
THE
USER
TO
ENTER
A
MONTH
FOR
JANUARY
FOR
FEBRUARY
AND
SO
ON
AND
THEN
PRINTS
THE
NUMBER
OF
DAYS
IN
THE
MONTH
FOR
FEBRUARY
PRINT
OR
DAYS
ENTER
A
MONTH
DAYS
DO
NOT
USE
A
SEPARATE
IF
ELSE
BRANCH
FOR
EACH
MONTH
USE
BOOLEAN
OPERATORS
A
YEAR
WITH
DAYS
IS
CALLED
A
LEAP
YEAR
A
YEAR
IS
A
LEAP
YEAR
IF
IT
IS
DIVISIBLE
BY
FOUR
FOR
EXAMPLE
EXCEPT
THAT
IT
IS
NOT
A
LEAP
YEAR
IF
IT
IS
DIVISIBLE
BY
FOR
EXAMPLE
HOWEVER
IT
IS
A
LEAP
YEAR
IF
IT
IS
DIVISIBLE
BY
FOR
EXAMPLE
THERE
WERE
NO
EXCEPTIONS
BEFORE
THE
INTRODUCTION
OF
THE
GREGORIAN
CALENDAR
ON
OCTOBER
WAS
A
LEAP
YEAR
WRITE
A
PROGRAM
THAT
ASKS
THE
USER
FOR
A
YEAR
AND
COMPUTES
WHETHER
THAT
YEAR
IS
A
LEAP
YEAR
ADD
ERROR
HANDLING
TO
EXERCISE
IF
THE
USER
DOES
NOT
ENTER
A
NUMBER
WHEN
EXPECTED
OR
PROVIDES
AN
INVALID
UNIT
FOR
THE
ALTITUDE
PRINT
AN
ERROR
MESSAGE
AND
END
THE
PROGRAM
ENGINEERING
WRITE
A
PROGRAM
THAT
PROMPTS
THE
USER
FOR
A
WAVELENGTH
VALUE
AND
PRINTS
A
DESCRIP
TION
OF
THE
CORRESPONDING
PART
OF
THE
ELECTROMAGNETIC
SPECTRUM
AS
GIVEN
IN
TABLE
TYPE
WAVELENGTH
M
FREQUENCY
HZ
RADIO
WAVES
MICROWAVES
TO
TO
INFRARED
TO
TO
VISIBLE
LIGHT
TO
TO
ULTRAVIOLET
TO
TO
X
RAYS
TO
TO
GAMMA
RAYS
ENGINEERING
REPEAT
EXERCISE
MODIFYING
THE
PROGRAM
SO
THAT
IT
PROMPTS
FOR
THE
FREQUENCY
INSTEAD
ENGINEERING
REPEAT
EXERCISE
MODIFYING
THE
PROGRAM
SO
THAT
IT
FIRST
ASKS
THE
USER
WHETHER
THE
INPUT
WILL
BE
A
WAVELENGTH
OR
A
FREQUENCY
ENGINEERING
A
MINIVAN
HAS
TWO
SLIDING
DOORS
EACH
DOOR
CAN
BE
OPENED
BY
EITHER
A
DASHBOARD
SWITCH
ITS
INSIDE
HANDLE
OR
ITS
OUTSIDE
HANDLE
HOWEVER
THE
INSIDE
HANDLES
DO
NOT
WORK
IF
A
CHILD
LOCK
SWITCH
IS
ACTIVATED
IN
ORDER
FOR
THE
SLIDING
DOORS
TO
OPEN
THE
GEAR
SHIFT
MUST
BE
IN
PARK
AND
THE
MASTER
UNLOCK
SWITCH
MUST
BE
ACTIVATED
THIS
BOOK
AUTHOR
IS
THE
LONG
SUFFERING
OWNER
OF
JUST
SUCH
A
VEHICLE
YOUR
TASK
IS
TO
SIMULATE
A
PORTION
OF
THE
CONTROL
SOFTWARE
FOR
THE
VEHICLE
THE
INPUT
IS
A
SEQUENCE
OF
VALUES
FOR
THE
SWITCHES
AND
THE
GEAR
SHIFT
IN
THE
FOLLOWING
ORDER
DASHBOARD
SWITCHES
FOR
LEFT
AND
RIGHT
SLIDING
DOOR
CHILD
LOCK
AND
MASTER
UNLOCK
FOR
OFF
OR
FOR
ACTIVATED
INSIDE
AND
OUTSIDE
HANDLES
ON
THE
LEFT
AND
RIGHT
SLIDING
DOORS
OR
THE
GEAR
SHIFT
SETTING
ONE
OF
P
N
D
R
A
TYPICAL
INPUT
WOULD
BE
P
PRINT
LEFT
DOOR
OPENS
AND
OR
RIGHT
DOOR
OPENS
AS
APPROPRIATE
IF
NEITHER
DOOR
OPENS
PRINT
BOTH
DOORS
STAY
CLOSED
ENGINEERING
SOUND
LEVEL
L
IN
UNITS
OF
DECIBEL
DB
IS
DETERMINED
BY
L
P
WHERE
P
IS
THE
SOUND
PRESSURE
OF
THE
SOUND
IN
PASCALS
ABBREVIATED
PA
AND
IS
A
REFERENCE
SOUND
PRESSURE
EQUAL
TO
PA
WHERE
L
IS
DB
THE
FOLLOWING
TABLE
GIVES
DESCRIPTIONS
FOR
CERTAIN
SOUND
LEVELS
THRESHOLD
OF
PAIN
DB
POSSIBLE
HEARING
DAMAGE
DB
JACK
HAMMER
AT
M
DB
TRAFFIC
ON
A
BUSY
ROADWAY
AT
M
DB
NORMAL
CONVERSATION
DB
CALM
LIBRARY
DB
LIGHT
LEAF
RUSTLING
DB
WRITE
A
PROGRAM
THAT
READS
A
VALUE
AND
A
UNIT
EITHER
DB
OR
PA
AND
THEN
PRINTS
THE
CLOSEST
DESCRIPTION
FROM
THE
LIST
ABOVE
ENGINEERING
THE
ELECTRIC
CIRCUIT
SHOWN
BELOW
IS
DESIGNED
TO
MEASURE
THE
TEMPERATURE
OF
THE
GAS
IN
A
CHAMBER
VS
V
THE
RESISTOR
R
REPRESENTS
A
TEMPERATURE
SENSOR
ENCLOSED
IN
THE
CHAMBER
THE
RESIS
TANCE
R
IN
IS
RELATED
TO
THE
TEMPERATURE
T
IN
C
BY
THE
EQUATION
R
KT
IN
THIS
DEVICE
ASSUME
AND
K
THE
VOLTMETER
DISPLAYS
THE
VALUE
OF
THE
VOLTAGE
VM
ACROSS
THE
SENSOR
THIS
VOLTAGE
VM
INDICATES
THE
TEMPERATURE
T
OF
THE
GAS
ACCORDING
TO
THE
EQUATION
T
R
RS
VM
K
K
K
VS
VM
K
SUPPOSE
THE
VOLTMETER
VOLTAGE
IS
CONSTRAINED
TO
THE
RANGE
VMIN
VOLTS
VM
VMAX
VOLTS
WRITE
A
PROGRAM
THAT
ACCEPTS
A
VALUE
OF
VM
AND
CHECKS
THAT
IT
BETWEEN
AND
THE
PROGRAM
SHOULD
RETURN
THE
GAS
TEMPERATURE
IN
DEGREES
CELSIUS
WHEN
VM
IS
BETWEEN
AND
AND
AN
ERROR
MESSAGE
WHEN
IT
ISN
T
ENGINEERING
CROP
DAMAGE
DUE
TO
FROST
IS
ONE
OF
THE
MANY
RISKS
CONFRONTING
FARMERS
THE
FIGURE
BELOW
SHOWS
A
SIMPLE
ALARM
CIRCUIT
DESIGNED
TO
WARN
OF
FROST
THE
ALARM
CIRCUIT
USES
A
DEVICE
CALLED
A
THERMISTOR
TO
SOUND
A
BUZZER
WHEN
THE
TEMPERATURE
DROPS
BELOW
FREEZING
THERMISTORS
ARE
SEMICONDUCTOR
DEVICES
THAT
EXHIBIT
A
TEMPERATURE
DEPEN
DENT
RESISTANCE
DESCRIBED
BY
THE
EQUATION
R
E
T
WHERE
R
IS
THE
RESISTANCE
IN
AT
THE
TEMPERATURE
T
IN
K
AND
IS
THE
RESISTANCE
IN
AT
THE
TEMPERATURE
IN
K
IS
A
CONSTANT
THAT
DEPENDS
ON
THE
MATERIAL
USED
TO
MAKE
THE
THERMISTOR
V
V
THERMISTOR
R
BUZZER
COMPARATOR
THE
CIRCUIT
IS
DESIGNED
SO
THAT
THE
ALARM
WILL
SOUND
WHEN
R
THE
THERMISTOR
USED
IN
THE
ALARM
CIRCUIT
HAS
AT
C
AND
K
NOTICE
THAT
HAS
UNITS
OF
K
RECALL
THAT
THE
TEMPERATURE
IN
K
IS
OBTAINED
BY
ADDING
TO
THE
TEMPERATURE
IN
C
THE
RESISTORS
AND
HAVE
A
RESIS
TANCE
OF
K
WRITE
A
C
PROGRAM
THAT
PROMPTS
THE
USER
FOR
A
TEMPERATURE
IN
F
AND
PRINTS
A
MESSAGE
INDICATING
WHETHER
OR
NOT
THE
ALARM
WILL
SOUND
AT
THAT
TEMPERATURE
ENGINEERING
A
MASS
M
KILOGRAMS
IS
ATTACHED
TO
THE
END
OF
A
ROPE
OF
LENGTH
R
METERS
THE
MASS
IS
WHIRLED
AROUND
AT
HIGH
SPEED
THE
ROPE
CAN
WITHSTAND
A
MAXIMUM
TENSION
OF
T
NEWTONS
WRITE
A
PROGRAM
THAT
ACCEPTS
A
ROTATION
SPEED
V
AND
DETERMINES
IF
SUCH
A
SPEED
WILL
CAUSE
THE
ROPE
TO
BREAK
HINT
T
R
ENGINEERING
A
MASS
M
IS
ATTACHED
TO
THE
END
OF
A
ROPE
OF
LENGTH
R
METERS
THE
ROPE
CAN
ONLY
BE
WHIRLED
AROUND
AT
SPEEDS
OF
OR
METERS
PER
SECOND
THE
ROPE
CAN
WITH
STAND
A
MAXIMUM
TENSION
OF
T
NEWTONS
WRITE
A
PROGRAM
WHERE
THE
USER
ENTERS
THE
VALUE
OF
THE
MASS
M
AND
THE
PROGRAM
DETERMINES
THE
GREATEST
SPEED
AT
WHICH
IT
CAN
BE
WHIRLED
WITHOUT
BREAKING
THE
ROPE
HINT
T
R
ENGINEERING
THE
AVERAGE
PERSON
CAN
JUMP
OFF
THE
GROUND
WITH
A
VELOCITY
OF
MPH
WITHOUT
FEAR
OF
LEAVING
THE
PLANET
HOWEVER
IF
AN
ASTRONAUT
JUMPS
WITH
THIS
VELOCITY
WHILE
STANDING
ON
HALLEY
COMET
WILL
THE
ASTRONAUT
EVER
COME
BACK
DOWN
CREATE
A
PROGRAM
THAT
ALLOWS
THE
USER
TO
INPUT
A
LAUNCH
VELOCITY
IN
MPH
FROM
THE
SURFACE
OF
HALLEY
COMET
AND
DETERMINE
WHETHER
A
JUMPER
WILL
RETURN
TO
THE
SURFACE
IF
NOT
THE
PROGRAM
SHOULD
CALCULATE
HOW
MUCH
MORE
MASSIVE
THE
COMET
MUST
BE
IN
ORDER
TO
RETURN
THE
JUMPER
TO
THE
SURFACE
HINT
ESCAPE
VELOCITY
IS
VESCAPE
WHERE
G
IS
THE
GRAVITATIONAL
CONSTANT
M
KG
IS
THE
MASS
OF
HALLEY
COMET
AND
R
M
IS
ITS
RADIUS
CHANGE
THE
IF
STATEMENT
TO
IF
FLOOR
FLOOR
THE
ONLY
DIFFERENCE
IS
IF
IS
THE
STATEMENT
IN
SELF
CHECK
SETS
TO
THIS
ONE
SETS
IT
TO
IF
COUT
RED
ENDL
ELSE
COUT
GREEN
ENDL
A
AND
B
ARE
BOTH
TRUE
C
IS
FALSE
FLOOR
THE
VALUES
SHOULD
BE
COMPARED
WITH
NOT
INPUT
Y
STR
OR
STR
LENGTH
IF
COUT
A
WON
ELSE
IF
COUT
B
WON
ELSE
COUT
GAME
TIED
IF
X
ELSE
IF
X
ELSE
YOU
COULD
FIRST
SET
TO
ONE
OF
THE
THREE
VALUES
IF
X
ELSE
IF
X
THE
IF
PRICE
CAN
BE
OMITTED
MAKING
IT
CLEAR
THAT
THE
ELSE
BRANCH
IS
THE
SOLE
ALTERNATIVE
NO
DESTRUCTION
OF
BUILDINGS
ADD
A
BRANCH
BEFORE
THE
FINAL
ELSE
ELSE
IF
RICHTER
COUT
ERROR
NEGATIVE
INPUT
ENDL
NO
THEN
THE
COMPUTATION
IS
NO
THEIR
INDIVIDUAL
TAX
IS
EACH
AND
IF
THEY
MARRIED
THEY
WOULD
PAY
ACTUALLY
TAXPAYERS
IN
HIGHER
TAX
BRACKETS
WHICH
OUR
PROGRAM
DOES
NOT
MODEL
MAY
PAY
HIGHER
TAXES
WHEN
THEY
MARRY
A
PHENOMENON
KNOWN
AS
THE
MARRIAGE
PENALTY
CHANGE
ELSE
IN
LINE
TO
ELSE
IF
M
AND
ADD
ANOTHER
BRANCH
AFTER
LINE
ELSE
COUT
ERROR
MARITAL
STATUS
SHOULD
BE
OR
M
ENDL
THE
HIGHER
TAX
RATE
IS
ONLY
APPLIED
ON
THE
INCOME
IN
THE
HIGHER
BRACKET
SUPPOSE
YOU
ARE
SINGLE
AND
MAKE
SHOULD
YOU
TRY
TO
GET
A
RAISE
ABSOLUTELY
YOU
GET
TO
KEEP
PERCENT
OF
THE
FIRST
AND
PERCENT
OF
THE
NEXT
THE
TRUE
ARROW
FROM
THE
FIRST
DECISION
POINTS
INTO
THE
TRUE
BRANCH
OF
THE
SEC
OND
DECISION
CREATING
SPAGHETTI
CODE
HERE
IS
ONE
SOLUTION
IN
SECTION
YOU
WILL
SEE
HOW
YOU
CAN
COMBINE
THE
CONDI
TIONS
FOR
A
MORE
ELEGANT
SOLUTION
TEST
CASE
EXPECTED
OUTPUT
COMMENT
BELOW
FLOOR
ABOVE
FLOOR
THE
SPECIFICATION
IS
NOT
CLEAR
SEE
SECTION
FOR
A
VERSION
OF
THIS
PROGRAM
WITH
ERROR
HANDLING
A
BOUNDARY
TEST
CASE
IS
A
PRICE
OF
A
PERCENT
DISCOUNT
SHOULD
APPLY
BECAUSE
THE
PROBLEM
STATEMENT
STATES
THAT
THE
LARGER
DISCOUNT
APPLIES
IF
THE
PRICE
IS
AT
LEAST
THUS
THE
EXPECTED
OUTPUT
IS
TEST
CASE
EXPECTED
OUTPUT
MOST
STRUCTURES
FALL
COMMENT
MANY
BUILDINGS
DESTROYED
MANY
BUILDINGS
CONSIDERABLY
DAMAGE
TO
POORLY
NO
DESTRUCTION
MOST
STRUCTURES
FALL
BOUNDARY
CASE
IN
THIS
PROGRAM
BOUNDARY
CASES
ARE
NOT
AS
SIGNIFICANT
SINCE
THE
BEHAVIOR
OF
AN
EARTHQUAKE
CHANGES
GRADUALLY
THE
SPECIFICATION
IS
NOT
CLEAR
SEE
SELF
CHECK
FOR
A
VERSION
OF
THIS
PROGRAM
WITH
ERROR
HANDLING
TEST
CASE
EXPECTED
OUTPUT
COMMENT
INSIDE
OUTSIDE
ON
THE
BOUNDARY
EXACTLY
ON
THE
BOUNDARY
ON
THE
BOUNDARY
CLOSE
TO
THE
BOUNDARY
INSIDE
NOT
LESS
THAN
MM
FROM
THE
BOUNDARY
OUTSIDE
NOT
LESS
THAN
MM
FROM
THE
BOUNDARY
X
Y
X
Y
X
Y
Y
X
THE
SAME
AS
THE
VALUE
OF
FROZEN
YOU
ARE
GUARANTEED
THAT
THERE
ARE
NO
OTHER
VALUES
WITH
STRINGS
OR
INTEGERS
YOU
WOULD
NEED
TO
CHECK
THAT
NO
VALUES
SUCH
AS
MAYBE
OR
ENTER
YOUR
CALCULATIONS
A
ERROR
THE
FLOOR
MUST
BE
BETWEEN
AND
B
ERROR
THE
FLOOR
MUST
BE
BETWEEN
AND
C
THE
ELEVATOR
WILL
TRAVEL
TO
THE
ACTUAL
FLOOR
D
ERROR
NOT
AN
INTEGER
CIN
FAIL
FLOOR
FLOOR
FLOOR
CHECK
FOR
CIN
FAIL
TO
MAKE
SURE
A
RESEARCHER
DIDN
T
SUPPLY
AN
INPUT
SUCH
AS
OH
MY
CHECK
FOR
WEIGHT
SINCE
ANY
RAT
MUST
SURELY
HAVE
A
POSITIVE
WEIGHT
WE
DON
T
KNOW
HOW
GIANT
A
RAT
COULD
BE
BUT
THE
NEW
GUINEA
RATS
WEIGHED
NO
MORE
THAN
KG
A
REGULAR
HOUSE
RAT
RATTUS
RATTUS
WEIGHS
UP
TO
KG
SO
WE
LL
SAY
THAT
ANY
WEIGHT
KG
WAS
SURELY
AN
INPUT
ERROR
PERHAPS
CONFUSING
GRAMS
AND
KILOGRAMS
THUS
THE
CHECKS
ARE
IF
CIN
FAIL
COUT
ERROR
NOT
A
NUMBER
ENDL
RETURN
IF
WEIGHT
COUT
ERROR
WEIGHT
CANNOT
BE
NEGATIVE
ENDL
RETURN
IF
WEIGHT
COUT
ERROR
WEIGHT
KG
ENDL
RETURN
THE
FIRST
INPUT
FAILS
THE
VALUE
OF
M
IS
UNCHANGED
BECAUSE
A
PREVIOUS
INPUT
FAILED
THE
NEXT
INPUT
DOESN
T
EVEN
TRY
TO
GET
ADDITIONAL
KEYSTROKES
IT
ALSO
FAILS
AND
N
IS
UN
CHANGED
THE
PROGRAM
PRINTS
TO
UNDERSTAND
NESTED
LOOPS
TO
IMPLEMENT
PROGRAMS
THAT
READ
AND
PROCESS
DATA
SETS
TO
USE
A
COMPUTER
FOR
SIMULATIONS
THE
WHILE
LOOP
SYNTAX
WHILE
STATEMENT
COMMON
ERROR
INFINITE
LOOPS
COMMON
ERROR
DON
T
THINK
ARE
WE
THERE
YET
COMMON
ERROR
OFF
BY
ONE
ERRORS
RANDOM
FACT
THE
FIRST
BUG
PROBLEM
SOLVING
HAND
TRACING
THE
FOR
LOOP
SYNTAX
FOR
STATEMENT
PROGRAMMING
TIP
USE
FOR
LOOPS
FOR
THEIR
INTENDED
PURPOSE
ONLY
PROGRAMMING
TIP
CHOOSE
LOOP
BOUNDS
THAT
MATCH
YOUR
TASK
PROGRAMMING
TIP
COUNT
ITERATIONS
THE
DO
LOOP
PROGRAMMING
TIP
FLOWCHARTS
FOR
LOOPS
PROCESSING
INPUT
SPECIAL
TOPIC
CLEARING
THE
FAILURE
STATE
SPECIAL
TOPIC
THE
LOOP
AND
A
HALF
PROBLEM
AND
THE
BREAK
STATEMENT
SPECIAL
TOPIC
REDIRECTION
OF
INPUT
AND
OUTPUT
PROBLEM
SOLVING
STORYBOARDS
COMMON
LOOP
ALGORITHMS
HOW
TO
WRITING
A
LOOP
WORKED
EXAMPLE
CREDIT
CARD
PROCESSING
NESTED
LOOPS
RANDOM
NUMBERS
AND
SIMULATIONS
RANDOM
FACT
SOFTWARE
PIRACY
THE
WHILE
LOOP
IN
THIS
SECTION
YOU
WILL
LEARN
HOW
TO
REPEATEDLY
EXECUTE
STATEMENTS
UNTIL
A
GOAL
HAS
BEEN
REACHED
RECALL
THE
INVESTMENT
PROBLEM
FROM
CHAPTER
YOU
PUT
INTO
A
BANK
ACCOUNT
THAT
EARNS
PERCENT
INTEREST
PER
YEAR
HOW
MANY
YEARS
DOES
IT
TAKE
FOR
THE
ACCOUNT
BALANCE
TO
BE
DOUBLE
THE
ORIGI
NAL
INVESTMENT
IN
CHAPTER
WE
DEVELOPED
THE
FOLLOWING
ALGO
RITHM
FOR
THIS
PROBLEM
START
WITH
A
YEAR
VALUE
OF
A
COLUMN
FOR
THE
INTEREST
AND
A
BALANCE
OF
BECAUSE
THE
INTEREST
EARNED
ALSO
EARNS
INTEREST
A
BANK
BALANCE
GROWS
EXPONENTIALLY
YEAR
INTEREST
BALANCE
REPEAT
THE
FOLLOWING
STEPS
WHILE
THE
BALANCE
IS
LESS
THAN
ADD
TO
THE
YEAR
VALUE
COMPUTE
THE
INTEREST
AS
BALANCE
X
I
E
PERCENT
INTEREST
ADD
THE
INTEREST
TO
THE
BALANCE
REPORT
THE
FINAL
YEAR
VALUE
AS
THE
ANSWER
YOU
NOW
KNOW
HOW
TO
DEFINE
AND
UPDATE
THE
VARIABLES
IN
C
WHAT
YOU
DON
T
YET
KNOW
IS
HOW
TO
CARRY
OUT
REPEAT
STEPS
WHILE
THE
BALANCE
IS
LESS
THAN
IN
A
PARTICLE
ACCELERATOR
SUBATOMIC
PARTICLES
TRAVERSE
A
LOOP
SHAPED
TUNNEL
MULTIPLE
TIMES
GAINING
THE
SPEED
REQUIRED
FOR
PHYSICAL
EXPERIMENTS
SIMILARLY
IN
COMPUTER
SCIENCE
STATEMENTS
IN
A
LOOP
ARE
EXECUTED
WHILE
A
CONDITION
IS
TRUE
FIGURE
FLOWCHART
OF
A
WHILE
LOOP
IN
C
THE
WHILE
STATEMENT
IMPLEMENTS
SUCH
A
REPETITION
SEE
SYNTAX
THE
CODE
WHILE
CONDITION
STATEMENTS
KEEPS
EXECUTING
THE
STATEMENTS
WHILE
THE
CONDITION
IS
TRUE
IN
OUR
CASE
WE
WANT
TO
INCREMENT
THE
YEAR
COUNTER
AND
ADD
INTEREST
WHILE
THE
BALANCE
IS
LESS
THAN
THE
TARGET
BALANCE
OF
WHILE
BALANCE
TARGET
YEAR
DOUBLE
INTEREST
BALANCE
RATE
BALANCE
BALANCE
INTEREST
A
WHILE
STATEMENT
IS
AN
EXAMPLE
OF
A
LOOP
IF
YOU
DRAW
A
FLOWCHART
THE
FLOW
OF
EXECU
TION
LOOPS
AGAIN
TO
THE
POINT
WHERE
THE
CONDITION
IS
TESTED
SEE
FIGURE
SYNTAX
WHILE
STATEMENT
WHEN
YOU
DEFINE
A
VARIABLE
INSIDE
THE
LOOP
BODY
THE
VARIABLE
IS
CREATED
FOR
EACH
ITERATION
OF
THE
LOOP
AND
REMOVED
AFTER
THE
END
OF
EACH
ITERATION
FOR
EXAMPLE
CON
SIDER
THE
INTEREST
VARIABLE
IN
THIS
LOOP
WHILE
BALANCE
TARGET
FIGURE
EXECUTION
OF
THE
DOUBLINV
LOOP
YEAR
DOUBLE
INTEREST
BALANCE
RATE
BALANCE
BALANCE
INTEREST
INTEREST
NO
LONGER
DEFINED
HERE
IN
CONTRAST
THE
BALANCE
AND
YEARS
VARIABLES
WERE
DEFINED
OUTSIDE
THE
LOOP
BODY
THAT
WAY
THE
SAME
VARIABLE
IS
USED
FOR
ALL
ITERATIONS
OF
THE
LOOP
CHECK
THE
LOOP
CONDITION
BALANCE
YEAR
THE
CONDITION
IS
TRUE
WHILE
BALANCE
TARGET
YEAR
DOUBLE
INTEREST
BALANCE
RATE
BALANCE
BALANCE
INTEREST
EXECUTE
THE
STATEMENTS
IN
THE
LOOP
BALANCE
YEAR
INTEREST
WHILE
BALANCE
TARGET
YEAR
DOUBLE
INTEREST
BALANCE
RATE
BALANCE
BALANCE
INTEREST
CHECK
THE
LOOP
CONDITION
AGAIN
BALANCE
YEAR
THE
CONDITION
IS
STILL
TRUE
WHILE
BALANCE
TARGET
YEAR
DOUBLE
INTEREST
BALANCE
RATE
BALANCE
BALANCE
INTEREST
AFTER
ITERATIONS
THE
CONDITION
IS
WHILE
BALANCE
TARGET
NO
LONGER
TRUE
BALANCE
YEAR
DOUBLE
INTEREST
BALANCE
RATE
YEAR
BALANCE
BALANCE
INTEREST
EXECUTE
THE
STATEMENT
FOLLOWING
THE
LOOP
WHILE
BALANCE
TARGET
BALANCE
YEAR
YEAR
DOUBLE
INTEREST
BALANCE
RATE
BALANCE
BALANCE
INTEREST
COUT
YEAR
ENDL
HERE
IS
THE
PROGRAM
THAT
SOLVES
THE
INVESTMENT
PROBLEM
FIGURE
ILLUSTRATES
THE
PROGRAM
EXECUTION
DOUBLINV
CPP
PROGRAM
RUN
THE
INVESTMENT
DOUBLED
AFTER
YEARS
HOW
MANY
YEARS
DOES
IT
TAKE
FOR
THE
INVESTMENT
TO
TRIPLE
MODIFY
THE
PROGRAM
AND
RUN
IT
IF
THE
INTEREST
RATE
IS
PERCENT
PER
YEAR
HOW
MANY
YEARS
DOES
IT
TAKE
FOR
THE
INVESTMENT
TO
DOUBLE
MODIFY
THE
PROGRAM
AND
RUN
IT
MODIFY
THE
PROGRAM
SO
THAT
THE
BALANCE
AFTER
EACH
YEAR
IS
PRINTED
HOW
DID
YOU
DO
THAT
SUPPOSE
WE
CHANGE
THE
PROGRAM
SO
THAT
THE
CONDITION
OF
THE
WHILE
LOOP
IS
WHILE
BALANCE
TARGET
WHAT
IS
THE
EFFECT
ON
THE
PROGRAM
WHY
WHAT
DOES
THE
FOLLOWING
LOOP
PRINT
INT
N
WHILE
N
N
N
COUT
N
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
LOOP
OUTPUT
EXPLANATION
I
WHILE
I
WHEN
I
IS
THE
LOOP
CONDITION
IS
FALSE
AND
THE
LOOP
ENDS
COUT
I
I
I
THE
I
STATEMENT
IS
AN
ERROR
CAUSING
AN
INFINITE
LOOP
SEE
COMMON
ERROR
ON
PAGE
WHILE
I
COUT
I
I
I
WHILE
I
NO
OUTPUT
THE
STATEMENT
I
IS
FALSE
AND
THE
LOOP
IS
NEVER
EXECUTED
COUT
I
I
I
NO
OUTPUT
THE
PROGRAMMER
PROBABLY
THOUGHT
STOP
WHEN
I
IS
LESS
THAN
HOWEVER
THE
LOOP
CONDITION
CONTROLS
WHEN
THE
LOOP
IS
EXECUTED
NOT
WHEN
IT
ENDS
SEE
COMMON
ERROR
ON
PAGE
WHILE
I
COUT
I
I
I
WHILE
I
NO
OUTPUT
PROGRAM
DOES
NOT
TERMINATE
NOTE
THE
SEMICOLON
BEFORE
THE
THIS
LOOP
HAS
AN
EMPTY
BODY
IT
RUNS
FOREVER
CHECKING
WHETHER
I
AND
DOING
NOTHING
IN
THE
BODY
COUT
I
I
SHOULD
YEAR
START
AT
OR
AT
SHOULD
YOU
TEST
FOR
BALANCE
TARGET
OR
FOR
BALANCE
TARGET
IT
IS
EASY
TO
BE
OFF
BY
ONE
IN
THESE
EXPRESSIONS
SOME
PEOPLE
TRY
TO
SOLVE
OFF
BY
ONE
ERRORS
BY
RANDOMLY
INSERTING
OR
UNTIL
THE
PRO
GRAM
SEEMS
TO
WORK
A
TERRIBLE
STRATEGY
IT
CAN
TAKE
A
LONG
TIME
TO
COMPILE
AND
TEST
ALL
THE
VARI
OUS
POSSIBILITIES
EXPENDING
A
SMALL
AMOUNT
OF
MENTAL
EFFORT
IS
A
REAL
TIME
SAVER
FORTUNATELY
OFF
BY
ONE
ERRORS
ARE
EASY
TO
AVOID
SIMPLY
BY
WORKING
THROUGH
A
COUPLE
OF
TEST
CASES
AND
USING
THE
INFORMATION
FROM
THE
TEST
CASES
TO
COME
UP
WITH
A
RATIONALE
FOR
YOUR
DECISIONS
SHOULD
YEAR
START
AT
OR
AT
LOOK
AT
A
SCENARIO
WITH
SIMPLE
VAL
UES
AN
INITIAL
BALANCE
OF
AND
AN
INTEREST
RATE
OF
PERCENT
AFTER
YEAR
THE
BALANCE
IS
AND
AFTER
YEAR
IT
IS
OR
OVER
SO
THE
INVESTMENT
DOUBLED
AFTER
YEARS
THE
LOOP
EXECUTED
TWO
TIMES
INCREMENTING
YEAR
EACH
TIME
HENCE
YEAR
MUST
START
AT
NOT
AT
YEAR
BALANCE
IN
OTHER
WORDS
THE
BALANCE
VARIABLE
DENOTES
THE
BALANCE
AFTER
THE
END
OF
THE
YEAR
AT
THE
OUTSET
THE
BALANCE
VARIABLE
CONTAINS
THE
BALANCE
AFTER
YEAR
AND
NOT
AFTER
YEAR
NEXT
SHOULD
YOU
USE
A
OR
COMPARISON
IN
THE
TEST
IF
YOU
WANT
TO
SETTLE
THIS
QUESTION
WITH
AN
EXAMPLE
YOU
NEED
TO
FIND
A
SCENARIO
IN
WHICH
THE
FINAL
BALANCE
IS
EXACTLY
TWICE
THE
INITIAL
BALANCE
THIS
HAPPENS
WHEN
THE
INTEREST
IS
PERCENT
THE
LOOP
EXECUTES
ONCE
NOW
YEAR
IS
AND
BALANCE
IS
EXACTLY
EQUAL
TO
HAS
THE
INVESTMENT
DOUBLED
AFTER
ONE
YEAR
IT
HAS
THEREFORE
THE
LOOP
SHOULD
NOT
EXECUTE
AGAIN
IF
THE
TEST
CONDITION
IS
BALANCE
TARGET
THE
LOOP
STOPS
AS
IT
SHOULD
IF
THE
TEST
CONDITION
HAD
BEEN
BALANCE
TARGET
THE
LOOP
WOULD
HAVE
EXECUTED
ONCE
MORE
IN
OTHER
WORDS
YOU
KEEP
ADDING
INTEREST
WHILE
THE
BALANCE
HAS
NOT
YET
DOUBLED
RANDOM
FACT
THE
FIRST
BUG
ACCORDING
TO
LEGEND
THE
FIRST
BUG
WAS
FOUND
IN
THE
MARK
II
A
HUGE
ELECTROME
CHANICAL
COMPUTER
AT
HARVARD
UNIVER
SITY
IT
REALLY
WAS
CAUSED
BY
A
BUG
A
MOTH
WAS
TRAPPED
IN
A
RELAY
SWITCH
ACTUALLY
FROM
THE
NOTE
THAT
THE
OPERATOR
LEFT
IN
THE
LOG
BOOK
NEXT
TO
THE
MOTH
SEE
THE
PHOTO
IT
APPEARS
AS
IF
THE
TERM
BUG
HAD
ALREADY
BEEN
IN
ACTIVE
USE
AT
THE
TIME
THE
FIRST
BUG
THE
PIONEERING
COMPUTER
SCIENTIST
MAURICE
WILKES
WROTE
SOMEHOW
AT
THE
MOORE
SCHOOL
AND
AFTERWARDS
ONE
HAD
ALWAYS
ASSUMED
THERE
WOULD
BE
NO
PARTICULAR
DIFFICULTY
IN
GETTING
PRO
GRAMS
RIGHT
I
CAN
REMEMBER
THE
EXACT
INSTANT
IN
TIME
AT
WHICH
IT
DAWNED
ON
ME
THAT
A
GREAT
PART
OF
MY
FUTURE
LIFE
WOULD
BE
SPENT
FINDING
MISTAKES
IN
MY
OWN
PROGRAMS
PROBLEM
SOLVING
HAND
TRACING
IN
PROGRAMMING
TIP
YOU
LEARNED
ABOUT
THE
METHOD
OF
HAND
TRACING
WHEN
YOU
HAND
TRACE
CODE
OR
PSEUDOCODE
YOU
WRITE
THE
NAMES
OF
THE
VARIABLES
ON
A
SHEET
OF
PAPER
MENTALLY
EXECUTE
EACH
STEP
OF
THE
CODE
AND
UPDATE
THE
VARIABLES
IT
IS
BEST
TO
HAVE
THE
CODE
WRITTEN
OR
PRINTED
ON
A
SHEET
OF
PAPER
USE
A
MARKER
SUCH
AS
A
PAPER
CLIP
TO
MARK
THE
CURRENT
LINE
WHENEVER
A
VARIABLE
CHANGES
CROSS
OUT
THE
OLD
VALUE
AND
WRITE
THE
NEW
VALUE
BELOW
WHEN
A
PROGRAM
PRODUCES
OUTPUT
ALSO
WRITE
DOWN
THE
OUTPUT
IN
ANOTHER
COLUMN
CONSIDER
THIS
EXAMPLE
WHAT
VALUE
IS
DISPLAYED
INT
N
INT
SUM
WHILE
N
INT
DIGIT
N
SUM
SUM
DIGIT
N
N
COUT
SUM
ENDL
THERE
ARE
THREE
VARIABLES
N
SUM
AND
DIGIT
N
SUM
DIGIT
THE
FIRST
TWO
VARIABLES
ARE
INITIALIZED
WITH
AND
BEFORE
THE
LOOP
IS
ENTERED
INT
N
INT
SUM
WHILE
N
INT
DIGIT
N
SUM
SUM
DIGIT
N
N
COUT
SUM
ENDL
BECAUSE
N
IS
GREATER
THAN
ZERO
ENTER
THE
LOOP
THE
VARIABLE
DIGIT
IS
SET
TO
THE
REMAIN
DER
OF
DIVIDING
BY
THE
VARIABLE
SUM
IS
SET
TO
INT
N
INT
SUM
WHILE
N
INT
DIGIT
N
SUM
SUM
DIGIT
N
N
COUT
SUM
ENDL
FINALLY
N
BECOMES
RECALL
THAT
THE
REMAINDER
IN
THE
DIVISION
IS
DIS
CARDED
BECAUSE
BOTH
ARGUMENTS
ARE
INTEGERS
CROSS
OUT
THE
OLD
VALUES
AND
WRITE
THE
NEW
ONES
UNDER
THE
OLD
ONES
INT
N
INT
SUM
WHILE
N
INT
DIGIT
N
SUM
SUM
DIGIT
N
N
COUT
SUM
ENDL
NOW
CHECK
THE
LOOP
CONDITION
AGAIN
INT
N
INT
SUM
WHILE
N
INT
DIGIT
N
SUM
SUM
DIGIT
N
N
COUT
SUM
ENDL
BECAUSE
N
IS
STILL
GREATER
THAN
ZERO
REPEAT
THE
LOOP
NOW
DIGIT
BECOMES
SUM
IS
SET
TO
AND
N
IS
SET
TO
REPEAT
THE
LOOP
ONCE
AGAIN
SETTING
DIGIT
TO
SUM
TO
AND
N
TO
ENTER
THE
LOOP
FOR
ONE
LAST
TIME
NOW
DIGIT
IS
SET
TO
SUM
TO
AND
N
BECOMES
ZERO
INT
N
INT
SUM
WHILE
N
BECAUSE
N
EQUALS
ZERO
INT
DIGIT
N
SUM
SUM
DIGIT
N
N
THIS
CONDITION
IS
NOT
TRUE
COUT
SUM
ENDL
THE
CONDITION
N
IS
NOW
FALSE
CONTINUE
WITH
THE
STATEMENT
AFTER
THE
LOOP
INT
N
INT
SUM
WHILE
N
INT
DIGIT
N
SUM
SUM
DIGIT
N
N
COUT
SUM
ENDL
THIS
STATEMENT
IS
AN
OUTPUT
STATEMENT
THE
VALUE
THAT
IS
OUTPUT
IS
THE
VALUE
OF
SUM
WHICH
IS
OF
COURSE
YOU
CAN
GET
THE
SAME
ANSWER
BY
JUST
RUNNING
THE
CODE
HOWEVER
HAND
TRACING
CAN
GIVE
YOU
AN
INSIGHT
THAT
YOU
WOULD
NOT
GET
IF
YOU
SIMPLY
RAN
THE
CODE
CONSIDER
AGAIN
WHAT
HAPPENS
IN
EACH
ITERATION
WE
EXTRACT
THE
LAST
DIGIT
OF
N
WE
ADD
THAT
DIGIT
TO
SUM
WE
STRIP
THE
DIGIT
OFF
N
IN
OTHER
WORDS
THE
LOOP
FORMS
THE
SUM
OF
THE
DIGITS
IN
N
YOU
NOW
KNOW
WHAT
THE
LOOP
DOES
FOR
ANY
VALUE
OF
N
NOT
JUST
THE
ONE
IN
THE
EXAMPLE
WHY
WOULD
ANYONE
WANT
TO
FORM
THE
SUM
OF
THE
DIGITS
OPERATIONS
OF
THIS
KIND
ARE
USEFUL
FOR
CHECKING
THE
VALIDITY
OF
CREDIT
CARD
NUMBERS
AND
OTHER
FORMS
OF
ID
NUMBERS
SEE
EXERCISE
HAND
TRACING
DOES
NOT
JUST
HELP
YOU
UNDERSTAND
CODE
THAT
WORKS
CORRECTLY
IT
IS
A
POWERFUL
TECHNIQUE
FOR
FINDING
ERRORS
IN
YOUR
CODE
WHEN
A
PROGRAM
BEHAVES
IN
A
WAY
THAT
YOU
DON
T
EXPECT
GET
OUT
A
SHEET
OF
PAPER
AND
TRACK
THE
VALUES
OF
THE
VARI
ABLES
AS
YOU
MENTALLY
STEP
THROUGH
THE
CODE
YOU
DON
T
NEED
A
WORKING
PROGRAM
TO
DO
HAND
TRACING
YOU
CAN
HAND
TRACE
PSEUDOCODE
IN
FACT
IT
IS
AN
EXCELLENT
IDEA
TO
HAND
TRACE
YOUR
PSEUDOCODE
BEFORE
YOU
GO
TO
THE
TROUBLE
OF
TRANSLATING
IT
INTO
ACTUAL
CODE
TO
CONFIRM
THAT
IT
WORKS
CORRECTLY
HAND
TRACE
THE
FOLLOWING
CODE
SHOWING
THE
VALUE
OF
N
AND
THE
OUTPUT
INT
N
WHILE
N
N
COUT
N
ENDL
HAND
TRACE
THE
FOLLOWING
CODE
SHOWING
THE
VALUE
OF
N
AND
THE
OUTPUT
WHAT
POTENTIAL
ERROR
DO
YOU
NOTICE
INT
N
WHILE
N
COUT
N
N
HAND
TRACE
THE
FOLLOWING
CODE
ASSUMING
THAT
A
IS
AND
N
IS
THEN
EXPLAIN
WHAT
THE
CODE
DOES
FOR
ARBITRARY
VALUES
OF
A
AND
N
INT
R
INT
I
WHILE
I
N
R
R
A
I
TRACE
THE
FOLLOWING
CODE
WHAT
ERROR
DO
YOU
OBSERVE
INT
N
WHILE
N
COUT
N
ENDL
N
N
THE
FOLLOWING
PSEUDOCODE
IS
INTENDED
TO
COUNT
THE
NUMBER
OF
DIGITS
IN
THE
NUMBER
N
COUNT
TEMP
N
WHILE
TEMP
INCREMENT
COUNT
DIVIDE
TEMP
BY
TRACE
THE
PSEUDOCODE
FOR
N
AND
N
WHAT
ERROR
DO
YOU
FIND
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
THE
FOR
LOOP
IT
OFTEN
HAPPENS
THAT
YOU
WANT
TO
EXECUTE
A
SEQUENCE
OF
STATEMENTS
A
GIVEN
NUMBER
OF
TIMES
YOU
CAN
USE
A
WHILE
LOOP
THAT
IS
CONTROLLED
BY
A
COUNTER
AS
IN
THE
FOLLOWING
EXAMPLE
COUNTER
INITIALIZE
THE
COUNTER
WHILE
COUNTER
CHECK
THE
COUNTER
COUT
COUNTER
ENDL
COUNTER
UPDATE
THE
COUNTER
BECAUSE
THIS
LOOP
TYPE
IS
SO
COMMON
THERE
IS
A
SPECIAL
FORM
FOR
IT
CALLED
THE
FOR
LOOP
SEE
SYNTAX
FOR
COUNTER
COUNTER
COUNTER
COUT
COUNTER
ENDL
SOME
PEOPLE
CALL
THIS
LOOP
COUNT
CONTROLLED
IN
CONTRAST
THE
WHILE
LOOP
OF
THE
PRECEDING
SECTION
CAN
BE
CALLED
AN
EVENT
CONTROLLED
LOOP
BECAUSE
IT
EXECUTES
UNTIL
AN
EVENT
OCCURS
FOR
EXAMPLE
WHEN
THE
BALANCE
REACHES
THE
TARGET
ANOTHER
COMMONLY
USED
TERM
FOR
A
COUNT
CONTROLLED
LOOP
IS
DEFINITE
YOU
KNOW
FROM
THE
OUTSET
THAT
THE
LOOP
BODY
WILL
BE
EXECUTED
A
DEFINITE
NUMBER
OF
TIMES
TEN
TIMES
IN
OUR
EXAMPLE
IN
CONTRAST
YOU
DO
NOT
KNOW
HOW
MANY
ITERATIONS
IT
TAKES
TO
ACCUMULATE
A
TARGET
BALANCE
SUCH
A
LOOP
IS
CALLED
INDEFINITE
THE
FOR
LOOP
NEATLY
GROUPS
THE
INITIALIZATION
CONDI
TION
AND
UPDATE
EXPRESSIONS
TOGETHER
HOWEVER
IT
IS
IMPORTANT
TO
REALIZE
THAT
THESE
EXPRESSIONS
ARE
NOT
EXE
CUTED
TOGETHER
SEE
FIGURE
YOU
CAN
VISUALIZE
THE
FOR
LOOP
AS
AN
ORDERLY
SEQUENCE
OF
STEPS
THE
INITIALIZATION
IS
EXECUTED
ONCE
BEFORE
THE
LOOP
IS
ENTERED
THE
CONDITION
IS
CHECKED
BEFORE
EACH
ITERATION
THE
UPDATE
IS
EXECUTED
AFTER
EACH
ITERATION
FIGURE
EXECUTION
OF
A
FOR
LOOP
SYNTAX
FOR
STATEMENT
A
FOR
LOOP
CAN
COUNT
DOWN
INSTEAD
OF
UP
FOR
COUNTER
COUNTER
COUNTER
THE
INCREMENT
OR
DECREMENT
NEED
NOT
BE
IN
STEPS
OF
FOR
COUNTER
COUNTER
COUNTER
COUNTER
SEE
TABLE
ON
PAGE
FOR
ADDITIONAL
VARIATIONS
SO
FAR
WE
ASSUMED
THAT
THE
COUNTER
VARIABLE
HAD
ALREADY
BEEN
DEFINED
BEFORE
THE
FOR
LOOP
ALTERNATIVELY
YOU
CAN
DEFINE
A
VARIABLE
IN
THE
LOOP
INITIALIZATION
SUCH
A
VARIABLE
IS
DEFINED
ONLY
IN
THE
LOOP
FOR
INT
COUNTER
COUNTER
COUNTER
COUNTER
NO
LONGER
DEFINED
HERE
HERE
IS
A
TYPICAL
USE
OF
THE
FOR
LOOP
WE
WANT
TO
PRINT
THE
BALANCE
OF
OUR
SAVINGS
ACCOUNT
OVER
A
PERIOD
OF
YEARS
AS
SHOWN
IN
THIS
TABLE
YEAR
BALANCE
THE
FOR
LOOP
PATTERN
APPLIES
BECAUSE
THE
VARIABLE
YEAR
STARTS
AT
AND
THEN
MOVES
IN
CONSTANT
INCREMENTS
UNTIL
IT
REACHES
THE
TARGET
FOR
INT
YEAR
YEAR
NYEARS
YEAR
UPDATE
BALANCE
PRINT
YEAR
AND
BALANCE
HERE
IS
THE
COMPLETE
PROGRAM
FIGURE
SHOWS
THE
CORRESPONDING
FLOWCHART
FIGURE
FLOWCHART
OF
A
FOR
LOOP
INVTABLE
CPP
INCLUDE
IOSTREAM
INCLUDE
IOMANIP
USING
NAMESPACE
STD
INT
MAIN
CONST
DOUBLE
RATE
CONST
DOUBLE
DOUBLE
BALANCE
INT
NYEARS
COUT
ENTER
NUMBER
OF
YEARS
CIN
NYEARS
COUT
FIXED
SETPRECISION
FOR
INT
YEAR
YEAR
NYEARS
YEAR
BALANCE
BALANCE
RATE
COUT
SETW
YEAR
SETW
BALANCE
ENDL
RETURN
PROGRAM
RUN
ENTER
NUMBER
OF
YEARS
LOOP
VALUES
OF
I
COMMENT
FOR
I
I
I
NOTE
THAT
THE
LOOP
IS
EXECUTED
TIMES
SEE
PROGRAMMING
TIP
ON
PAGE
FOR
I
I
I
USE
I
FOR
DECREASING
VALUES
FOR
I
I
I
I
USE
I
I
FOR
A
STEP
SIZE
OF
FOR
I
I
I
I
INFINITE
LOOP
YOU
CAN
USE
OR
INSTEAD
OF
TO
AVOID
THIS
PROBLEM
FOR
I
I
I
I
YOU
CAN
SPECIFY
ANY
RULE
FOR
MODIFYING
I
SUCH
AS
DOUBLING
IT
IN
EVERY
STEP
FOR
I
I
STR
LENGTH
I
UNTIL
THE
LAST
VALID
INDEX
OF
THE
STRING
STR
IN
THE
LOOP
BODY
USE
THE
EXPRESSION
STR
SUBSTR
I
TO
GET
A
STRING
CONTAINING
THE
ITH
CHARACTER
WRITE
THE
FOR
LOOP
OF
THE
INVTABLE
CPP
PROGRAM
AS
A
WHILE
LOOP
HOW
MANY
NUMBERS
DOES
THIS
LOOP
PRINT
FOR
INT
N
N
N
COUT
N
ENDL
WRITE
A
FOR
LOOP
THAT
PRINTS
ALL
EVEN
NUMBERS
BETWEEN
AND
INCLUSIVE
WRITE
A
FOR
LOOP
THAT
COMPUTES
THE
SUM
OF
THE
INTEGERS
FROM
TO
N
HOW
WOULD
YOU
MODIFY
THE
FOR
LOOP
OF
THE
INVTABLE
CPP
PROGRAM
TO
PRINT
ALL
BAL
ANCES
UNTIL
THE
INVESTMENT
HAS
DOUBLED
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
THE
DO
LOOP
SOMETIMES
YOU
WANT
TO
EXECUTE
THE
BODY
OF
A
LOOP
AT
LEAST
ONCE
AND
PERFORM
THE
LOOP
TEST
AFTER
THE
BODY
IS
EXECUTED
THE
DO
LOOP
SERVES
THAT
PURPOSE
DO
STATEMENTS
WHILE
CONDITION
THE
BODY
OF
THE
DO
LOOP
IS
EXECUTED
FIRST
THEN
THE
CONDITION
IS
TESTED
SOME
PEOPLE
CALL
SUCH
A
LOOP
A
POST
TEST
LOOP
BECAUSE
THE
CONDITION
IS
TESTED
AFTER
COMPLETING
THE
LOOP
BODY
IN
CONTRAST
WHILE
AND
FOR
LOOPS
ARE
PRE
TEST
LOOPS
IN
THOSE
LOOP
TYPES
THE
CONDITION
IS
TESTED
BEFORE
ENTERING
THE
LOOP
BODY
A
TYPICAL
EXAMPLE
FOR
SUCH
A
LOOP
IS
INPUT
VALIDATION
SUPPOSE
YOU
ASK
A
USER
TO
ENTER
A
VALUE
IF
THE
USER
DIDN
T
PAY
ATTENTION
AND
ENTERED
A
LARGER
VALUE
YOU
ASK
AGAIN
UNTIL
THE
VALUE
IS
CORRECT
OF
COURSE
YOU
CANNOT
TEST
THE
VALUE
UNTIL
THE
USER
HAS
ENTERED
IT
THIS
IS
A
PERFECT
FIT
FOR
THE
DO
LOOP
SEE
FIGURE
INT
VALUE
DO
COUT
ENTER
A
VALUE
CIN
VALUE
WHILE
VALUE
THE
DO
LOOP
FIGURE
FLOWCHART
OF
A
DO
LOOP
SUPPOSE
THAT
WE
WANT
TO
CHECK
FOR
INPUTS
THAT
ARE
AT
LEAST
AND
AT
MOST
MODIFY
THE
DO
LOOP
FOR
THIS
CHECK
REWRITE
THE
INPUT
CHECK
USING
A
WHILE
LOOP
WHAT
IS
THE
DISADVANTAGE
OF
YOUR
SOLUTION
SUPPOSE
C
DIDN
T
HAVE
A
DO
LOOP
COULD
YOU
REWRITE
ANY
DO
LOOP
AS
A
WHILE
LOOP
WRITE
A
DO
LOOP
THAT
READS
INTEGERS
AND
COMPUTES
THEIR
SUM
STOP
WHEN
READING
THE
VALUE
WRITE
A
DO
LOOP
THAT
READS
POSITIVE
INTEGERS
AND
COMPUTES
THEIR
SUM
STOP
WHEN
READING
THE
SAME
VALUE
TWICE
IN
A
ROW
FOR
EXAMPLE
IF
THE
INPUT
IS
THEN
THE
SUM
IS
AND
THE
LOOP
STOPS
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
PROCESSING
INPUT
IN
THIS
SECTION
YOU
WILL
LEARN
HOW
TO
READ
AND
PRO
CESS
A
SEQUENCE
OF
INPUT
VALUES
WHENEVER
YOU
READ
A
SEQUENCE
OF
INPUTS
YOU
NEED
TO
HAVE
SOME
METHOD
OF
INDICATING
THE
END
OF
THE
SEQUENCE
SOMETIMES
YOU
ARE
LUCKY
AND
NO
INPUT
VALUE
CAN
BE
ZERO
THEN
YOU
CAN
PROMPT
THE
USER
TO
KEEP
ENTERING
NUMBERS
OR
TO
FINISH
THE
SEQUENCE
IF
ZERO
IS
ALLOWED
BUT
NEGATIVE
NUMBERS
ARE
NOT
YOU
CAN
USE
TO
INDICATE
TERMINATION
A
VALUE
THAT
SERVES
AS
A
SIGNAL
FOR
TERMINATION
IS
CALLED
A
SENTINEL
LET
PUT
THIS
TECHNIQUE
TO
WORK
IN
A
PROGRAM
THAT
COMPUTES
THE
AVERAGE
OF
A
SET
OF
SALARY
VALUES
IN
OUR
SAMPLE
PROGRAM
WE
WILL
USE
AS
A
SENTINEL
AN
EMPLOYEE
WOULD
SURELY
NOT
WORK
FOR
A
NEGATIVE
SALARY
BUT
THERE
MAY
BE
VOLUNTEERS
WHO
WORK
FOR
FREE
INSIDE
THE
LOOP
WE
READ
AN
INPUT
IF
THE
INPUT
IS
NOT
WE
PROCESS
IT
IN
ORDER
TO
COMPUTE
THE
AVER
AGE
WE
NEED
THE
TOTAL
SUM
OF
ALL
SALARIES
AND
THE
NUMBER
OF
INPUTS
WHILE
IN
THE
MILITARY
A
SENTINEL
GUARDS
A
BORDER
OR
PASSAGE
IN
COMPUTER
SCIENCE
A
SENTINEL
VALUE
DENOTES
THE
END
OF
AN
INPUT
SEQUENCE
OR
THE
BORDER
BETWEEN
INPUT
SEQUENCES
CIN
SALARY
IF
SALARY
SUM
SUM
SALARY
COUNT
WE
STAY
IN
THE
LOOP
WHILE
THE
SENTINEL
VALUE
IS
NOT
DETECTED
WHILE
SALARY
THERE
IS
JUST
ONE
PROBLEM
WHEN
THE
LOOP
IS
ENTERED
FOR
THE
FIRST
TIME
NO
DATA
VALUE
HAS
BEEN
READ
BE
SURE
TO
INITIALIZE
SALARY
WITH
SOME
VALUE
OTHER
THAN
THE
SENTINEL
DOUBLE
SALARY
ANY
VALUE
OTHER
THAN
WILL
DO
ALTERNATIVELY
USE
A
DO
LOOP
DO
WHILE
SALARY
THE
FOLLOWING
PROGRAM
READS
INPUTS
UNTIL
THE
USER
ENTERS
THE
SENTINEL
AND
THEN
COM
PUTES
AND
PRINTS
THE
AVERAGE
SENTINEL
CPP
PROGRAM
RUN
NUMERIC
SENTINELS
ONLY
WORK
IF
THERE
IS
SOME
RESTRICTION
ON
THE
INPUT
IN
MANY
CASES
THOUGH
THERE
ISN
T
SUPPOSE
YOU
WANT
TO
COMPUTE
THE
AVERAGE
OF
A
DATA
SET
THAT
MAY
CONTAIN
OR
NEGATIVE
VALUES
THEN
YOU
CANNOT
USE
OR
TO
INDICATE
THE
END
OF
THE
INPUT
IN
SUCH
A
SITUATION
YOU
CAN
READ
INPUT
DATA
UNTIL
INPUT
FAILS
AS
YOU
HAVE
SEEN
IN
SECTION
THE
CONDITION
CIN
FAIL
IS
TRUE
IF
THE
PRECEDING
INPUT
HAS
FAILED
FOR
EXAMPLE
SUPPOSE
THAT
THE
INPUT
WAS
READ
WITH
THESE
STATEMENTS
DOUBLE
VALUE
CIN
VALUE
IF
THE
USER
ENTERS
A
VALUE
THAT
IS
NOT
A
NUMBER
SUCH
AS
Q
THEN
THE
INPUT
FAILS
WE
NOW
ENCOUNTER
AN
ADDITIONAL
COMPLEXITY
YOU
ONLY
KNOW
THAT
INPUT
FAILED
AFTER
YOU
HAVE
ENTERED
THE
LOOP
AND
ATTEMPTED
TO
READ
IT
TO
REMEMBER
THE
FAILURE
USE
A
BOOLEAN
VARIABLE
COUT
ENTER
VALUES
Q
TO
QUIT
BOOL
MORE
TRUE
WHILE
MORE
CIN
VALUE
IF
CIN
FAIL
MORE
FALSE
ELSE
PROCESS
VALUE
SOME
PROGRAMMERS
DISLIKE
THE
INTRODUCTION
OF
A
BOOLEAN
VARIABLE
TO
CONTROL
A
LOOP
SPECIAL
TOPIC
ON
PAGE
SHOWS
AN
ALTERNATIVE
MECHANISM
FOR
LEAVING
A
LOOP
HOW
EVER
WHEN
READING
INPUT
THERE
IS
AN
EASIER
WAY
THE
EXPRESSION
CIN
VALUE
CAN
BE
USED
IN
A
CONDITION
IT
EVALUATES
TO
TRUE
IF
CIN
HAS
NOT
FAILED
AFTER
READING
VALUE
THEREFORE
YOU
CAN
READ
AND
PROCESS
A
SET
OF
INPUTS
WITH
THE
FOLLOWING
LOOP
COUT
ENTER
VALUES
Q
TO
QUIT
WHILE
CIN
VALUE
PROCESS
VALUE
THIS
LOOP
IS
SUITABLE
FOR
PROCESSING
A
SINGLE
SEQUENCE
OF
INPUTS
YOU
WILL
LEARN
MORE
ABOUT
READING
INPUTS
IN
CHAPTER
WHAT
DOES
THE
SENTINEL
CPP
PROGRAM
PRINT
WHEN
THE
USER
IMMEDIATELY
TYPES
WHEN
PROMPTED
FOR
A
VALUE
WHY
DOES
THE
SENTINEL
CPP
PROGRAM
HAVE
TWO
CHECKS
OF
THE
FORM
SALARY
WHAT
WOULD
HAPPEN
IF
THE
DEFINITION
OF
THE
SALARY
VARIABLE
IN
SENTINEL
CPP
WAS
CHANGED
TO
DOUBLE
SALARY
WE
PROMPT
THE
USER
ENTER
VALUES
Q
TO
QUIT
WHAT
HAPPENS
WHEN
THE
USER
ENTERS
A
DIFFERENT
LETTER
WHAT
IS
WRONG
WITH
THE
FOLLOWING
LOOP
FOR
READING
A
SEQUENCE
OF
VALUES
COUT
ENTER
VALUES
Q
TO
QUIT
WHILE
CIN
FAIL
DOUBLE
VALUE
CIN
VALUE
SUM
SUM
VALUE
COUNT
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
SPECIAL
TOPIC
REDIRECTION
OF
INPUT
AND
OUTPUT
CONSIDER
THE
SENTINEL
PROGRAM
THAT
COMPUTES
THE
AVERAGE
VALUE
OF
AN
INPUT
SEQUENCE
IF
YOU
USE
SUCH
A
PROGRAM
THEN
IT
IS
QUITE
LIKELY
THAT
YOU
ALREADY
HAVE
THE
VALUES
IN
A
FILE
AND
IT
SEEMS
A
SHAME
THAT
YOU
HAVE
TO
TYPE
THEM
ALL
IN
AGAIN
THE
COMMAND
LINE
INTERFACE
OF
YOUR
OPERATING
SYSTEM
PROVIDES
A
WAY
TO
LINK
A
FILE
TO
THE
INPUT
OF
A
PROGRAM
AS
IF
ALL
THE
CHARACTERS
IN
THE
FILE
HAD
ACTUALLY
BEEN
TYPED
BY
A
USER
IF
YOU
TYPE
SENTINEL
NUMBERS
TXT
THE
PROGRAM
IS
EXECUTED
ITS
INPUT
INSTRUCTIONS
NO
LONGER
EXPECT
INPUT
FROM
THE
KEYBOARD
ALL
INPUT
COMMANDS
GET
THEIR
INPUT
FROM
THE
FILE
NUMBERS
TXT
THIS
PROCESS
IS
CALLED
INPUT
REDIRECTION
INPUT
REDIRECTION
IS
AN
EXCELLENT
TOOL
FOR
TESTING
PROGRAMS
WHEN
YOU
DEVELOP
A
PROGRAM
AND
FIX
ITS
BUGS
IT
IS
BORING
TO
KEEP
ENTERING
THE
SAME
INPUT
EVERY
TIME
YOU
RUN
THE
PROGRAM
SPEND
A
FEW
MINUTES
PUTTING
THE
INPUTS
INTO
A
FILE
AND
USE
REDIRECTION
YOU
CAN
ALSO
REDIRECT
OUTPUT
IN
THIS
PROGRAM
THAT
IS
NOT
TERRIBLY
USEFUL
IF
YOU
RUN
SENTINEL
NUMBERS
TXT
OUTPUT
TXT
THE
FILE
OUTPUT
TXT
CONTAINS
THE
INPUT
PROMPTS
AND
THE
OUTPUT
SUCH
AS
ENTER
A
VALUE
TO
FINISH
ENTER
A
VALUE
TO
FINISH
ENTER
A
VALUE
TO
FINISH
ENTER
A
VALUE
TO
FINISH
AVERAGE
HOWEVER
REDIRECTING
OUTPUT
IS
OBVIOUSLY
USEFUL
FOR
PROGRAMS
THAT
PRODUCE
LOTS
OF
OUTPUT
YOU
CAN
PRINT
THE
FILE
CONTAINING
THE
OUTPUT
OR
EDIT
IT
BEFORE
YOU
TURN
IT
IN
FOR
GRADING
PROBLEM
SOLVING
STORYBOARDS
WHEN
YOU
DESIGN
A
PROGRAM
THAT
INTERACTS
WITH
A
USER
YOU
NEED
TO
MAKE
A
PLAN
FOR
THAT
INTERACTION
WHAT
INFORMATION
DOES
THE
USER
PROVIDE
AND
IN
WHICH
ORDER
WHAT
INFORMATION
WILL
YOUR
PROGRAM
DISPLAY
AND
IN
WHICH
FORMAT
WHAT
SHOULD
HAPPEN
WHEN
THERE
IS
AN
ERROR
WHEN
DOES
THE
PROGRAM
QUIT
THIS
PLANNING
IS
SIMILAR
TO
THE
DEVELOPMENT
OF
A
MOVIE
OR
A
COMPUTER
GAME
WHERE
STORYBOARDS
ARE
USED
TO
PLAN
ACTION
SEQUENCES
A
STORYBOARD
IS
MADE
UP
OF
PANELS
THAT
SHOW
A
SKETCH
OF
EACH
STEP
ANNOTATIONS
EXPLAIN
WHAT
IS
HAPPENING
AND
NOTE
ANY
SPE
CIAL
SITUATIONS
STORYBOARDS
ARE
ALSO
USED
TO
DEVELOP
SOFTWARE
SEE
FIGURE
MAKING
A
STORYBOARD
IS
VERY
HELPFUL
WHEN
YOU
BEGIN
DESIGNING
A
PROGRAM
YOU
NEED
TO
ASK
YOURSELF
WHICH
INFORMATION
YOU
NEED
IN
ORDER
TO
COMPUTE
THE
ANSWERS
THAT
THE
PROGRAM
USER
WANTS
YOU
NEED
TO
DECIDE
HOW
TO
PRESENT
THOSE
ANSWERS
THESE
ARE
IMPORTANT
CONSIDERATIONS
THAT
YOU
WANT
TO
SETTLE
BEFORE
YOU
DESIGN
AN
ALGORITHM
FOR
COMPUTING
THE
ANSWERS
LET
LOOK
AT
A
SIMPLE
EXAMPLE
WE
WANT
TO
WRITE
A
PROGRAM
THAT
HELPS
USERS
WITH
QUESTIONS
SUCH
AS
HOW
MANY
TABLESPOONS
ARE
IN
A
PINT
OR
HOW
MANY
INCHES
ARE
CENTIMETERS
WHAT
INFORMATION
DOES
THE
USER
PROVIDE
THE
QUANTITY
AND
UNIT
TO
CONVERT
FROM
THE
UNIT
TO
CONVERT
TO
PROBLEM
SOLVING
STORYBOARDS
FIGURE
STORYBOARD
FOR
THE
DESIGN
OF
A
WEB
APPLICATION
WHAT
IF
THERE
IS
MORE
THAN
ONE
QUANTITY
A
USER
MAY
HAVE
A
WHOLE
TABLE
OF
CENTIMETER
VALUES
THAT
SHOULD
BE
CONVERTED
INTO
INCHES
WHAT
IF
THE
USER
ENTERS
UNITS
THAT
OUR
PROGRAM
DOESN
T
KNOW
HOW
TO
HANDLE
SUCH
AS
ANGSTROM
WHAT
IF
THE
USER
ASKS
FOR
IMPOSSIBLE
CONVERSIONS
SUCH
AS
INCHES
TO
GALLONS
LET
GET
STARTED
WITH
A
STORYBOARD
PANEL
IT
IS
A
GOOD
IDEA
TO
WRITE
THE
USER
INPUTS
IN
A
DIFFERENT
COLOR
UNDERLINE
THEM
IF
YOU
DON
T
HAVE
A
COLOR
PEN
HANDY
THE
STORYBOARD
SHOWS
HOW
WE
DEAL
WITH
A
POTENTIAL
CONFUSION
A
USER
WHO
WANTS
TO
KNOW
HOW
MANY
INCHES
ARE
CENTIMETERS
MAY
NOT
READ
THE
FIRST
PROMPT
CAREFULLY
AND
SPECIFY
INCHES
BUT
THEN
THE
OUTPUT
IS
IN
CM
ALERTING
THE
USER
TO
THE
PROBLEM
THE
STORYBOARD
ALSO
RAISES
AN
ISSUE
HOW
IS
THE
USER
SUPPOSED
TO
KNOW
THAT
CM
AND
IN
ARE
VALID
UNITS
WOULD
CENTIMETER
AND
INCHES
ALSO
WORK
WHAT
HAPPENS
WHEN
THE
USER
ENTERS
A
WRONG
UNIT
LET
MAKE
ANOTHER
STORYBOARD
TO
DEMONSTRATE
ERROR
HANDLING
TO
ELIMINATE
FRUSTRATION
IT
IS
BETTER
TO
LIST
THE
UNITS
THAT
THE
USER
CAN
SUPPLY
WE
SWITCHED
TO
A
SHORTER
PROMPT
TO
MAKE
ROOM
FOR
ALL
THE
UNIT
NAMES
EXERCISE
EXPLORES
A
DIFFERENT
ALTERNATIVE
THERE
IS
ANOTHER
ISSUE
THAT
WE
HAVEN
T
ADDRESSED
YET
HOW
DOES
THE
USER
QUIT
THE
PROGRAM
THE
FIRST
STORYBOARD
GIVES
THE
IMPRESSION
THAT
THE
PROGRAM
WILL
GO
ON
FOREVER
WE
CAN
ASK
THE
USER
AFTER
SEEING
THE
SENTINEL
THAT
TERMINATES
AN
INPUT
SEQUENCE
EXITING
THE
PROGRAM
FROM
UNIT
IN
FT
MI
MM
CM
M
KM
OZ
LB
G
KG
TSP
TBSP
PINT
GAL
CM
TO
UNIT
IN
ENTER
VALUES
TERMINATED
BY
ZERO
CM
IN
MORE
CONVERSIONS
Y
N
N
PROGRAM
EXITS
SENTINEL
TRIGGERS
THE
PROMPT
TO
EXIT
AS
YOU
CAN
SEE
FROM
THIS
CASE
STUDY
A
STORYBOARD
IS
ESSENTIAL
FOR
DEVELOPING
A
WORK
ING
PROGRAM
YOU
NEED
TO
KNOW
THE
FLOW
OF
THE
USER
INTERACTION
IN
ORDER
TO
STRUCTURE
YOUR
PROGRAM
PROVIDE
A
STORYBOARD
PANEL
FOR
A
PROGRAM
THAT
READS
A
NUMBER
OF
TEST
SCORES
AND
PRINTS
THE
AVERAGE
SCORE
THE
PROGRAM
ONLY
NEEDS
TO
PROCESS
ONE
SET
OF
SCORES
DON
T
WORRY
ABOUT
ERROR
HANDLING
GOOGLE
HAS
A
SIMPLE
INTERFACE
FOR
CONVERTING
UNITS
YOU
JUST
TYPE
THE
QUESTION
AND
YOU
GET
THE
ANSWER
MAKE
STORYBOARDS
FOR
AN
EQUIVALENT
INTERFACE
IN
A
C
PROGRAM
SHOW
THE
HAPPY
DAY
SCENARIO
IN
WHICH
ALL
GOES
WELL
AND
SHOW
THE
HANDLING
OF
TWO
KINDS
OF
ERRORS
CONSIDER
A
MODIFICATION
OF
THE
PROGRAM
IN
SELF
CHECK
DROP
THE
LOWEST
SCORE
BEFORE
COMPUTING
THE
AVERAGE
PROVIDE
A
STORYBOARD
FOR
THE
SITUATION
IN
WHICH
A
USER
ONLY
PROVIDES
ONE
SCORE
WHAT
IS
THE
PROBLEM
WITH
IMPLEMENTING
THE
FOLLOWING
STORYBOARD
IN
C
PRODUCE
A
STORYBOARD
FOR
A
PROGRAM
THAT
COMPARES
THE
GROWTH
OF
A
INVESTMENT
FOR
A
GIVEN
NUMBER
OF
YEARS
UNDER
TWO
INTEREST
RATES
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
COMMON
LOOP
ALGORITHMS
IN
THE
FOLLOWING
SECTIONS
WE
DISCUSS
SOME
OF
THE
MOST
COMMON
ALGORITHMS
THAT
ARE
IMPLEMENTED
AS
LOOPS
YOU
CAN
USE
THEM
AS
STARTING
POINTS
FOR
YOUR
LOOP
DESIGNS
SUM
AND
AVERAGE
VALUE
COMPUTING
THE
SUM
OF
A
NUMBER
OF
INPUTS
IS
A
VERY
COMMON
TASK
KEEP
A
RUNNING
TOTAL
A
VARIABLE
TO
WHICH
YOU
ADD
EACH
INPUT
VALUE
OF
COURSE
THE
TOTAL
SHOULD
BE
INI
TIALIZED
WITH
DOUBLE
TOTAL
DOUBLE
INPUT
WHILE
CIN
INPUT
TOTAL
TOTAL
INPUT
TO
COMPUTE
AN
AVERAGE
COUNT
HOW
MANY
VALUES
YOU
HAVE
AND
DIVIDE
BY
THE
COUNT
BE
SURE
TO
CHECK
THAT
THE
COUNT
IS
NOT
ZERO
DOUBLE
TOTAL
INT
COUNT
DOUBLE
INPUT
WHILE
CIN
INPUT
TOTAL
TOTAL
INPUT
COUNT
DOUBLE
AVERAGE
IF
COUNT
AVERAGE
TOTAL
COUNT
COUNTING
MATCHES
YOU
OFTEN
WANT
TO
KNOW
HOW
MANY
VALUES
FULFILL
A
PARTICULAR
CONDITION
FOR
EXAMPLE
YOU
MAY
WANT
TO
COUNT
HOW
MANY
SPACES
ARE
IN
A
STRING
KEEP
A
COUNTER
A
VARIABLE
THAT
IS
INITIALIZED
WITH
AND
INCREMENTED
WHENEVER
THERE
IS
A
MATCH
INT
SPACES
FOR
INT
I
I
STR
LENGTH
I
STRING
CH
STR
SUBSTR
I
IF
CH
SPACES
FOR
EXAMPLE
IF
STR
IS
THE
STRING
MY
FAIR
LADY
SPACES
IS
INCREMENTED
TWICE
WHEN
I
IS
AND
NOTE
THAT
THE
SPACES
VARIABLE
IS
DECLARED
OUTSIDE
THE
LOOP
WE
WANT
THE
LOOP
TO
UPDATE
A
SINGLE
VARIABLE
THE
CH
VARIABLE
IS
DECLARED
INSIDE
THE
LOOP
A
SEPARATE
VARI
ABLE
IS
CREATED
FOR
EACH
ITERATION
AND
REMOVED
AT
THE
END
OF
EACH
LOOP
ITERATION
THIS
LOOP
CAN
ALSO
BE
USED
FOR
SCANNING
INPUTS
THE
FOLLOWING
LOOP
READS
TEXT
A
WORD
AT
A
TIME
AND
COUNTS
THE
NUMBER
OF
WORDS
WITH
AT
MOST
THREE
LETTERS
INT
STRING
INPUT
WHILE
CIN
INPUT
IF
INPUT
LENGTH
IN
A
LOOP
THAT
COUNTS
MATCHES
A
COUNTER
IS
INCREMENTED
WHENEVER
A
MATCH
IS
FOUND
FINDING
THE
FIRST
MATCH
WHEN
YOU
COUNT
THE
VALUES
THAT
FULFILL
A
CON
DITION
YOU
NEED
TO
LOOK
AT
ALL
VALUES
HOW
EVER
IF
YOUR
TASK
IS
TO
FIND
A
MATCH
THEN
YOU
CAN
STOP
AS
SOON
AS
THE
CONDITION
IS
FULFILLED
HERE
IS
A
LOOP
THAT
FINDS
THE
FIRST
SPACE
IN
A
STRING
BECAUSE
WE
DO
NOT
VISIT
ALL
ELEMENTS
IN
THE
STRING
A
WHILE
LOOP
IS
A
BETTER
CHOICE
THAN
A
FOR
LOOP
BOOL
FOUND
FALSE
INT
POSITION
WHILE
FOUND
POSITION
STR
LENGTH
STRING
CH
STR
SUBSTR
POSITION
IF
CH
FOUND
TRUE
ELSE
POSITION
WHEN
SEARCHING
YOU
LOOK
AT
ITEMS
UNTIL
A
MATCH
IS
FOUND
IF
A
MATCH
WAS
FOUND
THEN
FOUND
IS
TRUE
AND
POSITION
IS
THE
INDEX
OF
THE
FIRST
MATCH
IF
THE
LOOP
DID
NOT
FIND
A
MATCH
THEN
FOUND
REMAINS
FALSE
AFTER
THE
END
OF
THE
LOOP
IN
THE
PRECEDING
EXAMPLE
WE
SEARCHED
A
STRING
FOR
A
CHARACTER
THAT
MATCHES
A
CON
DITION
YOU
CAN
APPLY
THE
SAME
PROCESS
FOR
USER
INPUT
SUPPOSE
YOU
ARE
ASKING
A
USER
TO
ENTER
A
POSITIVE
VALUE
KEEP
ASKING
UNTIL
THE
USER
PROVIDES
A
CORRECT
INPUT
BOOL
VALID
FALSE
DOUBLE
INPUT
WHILE
VALID
COUT
PLEASE
ENTER
A
POSITIVE
VALUE
CIN
INPUT
IF
INPUT
INPUT
VALID
TRUE
ELSE
COUT
INVALID
INPUT
ENDL
NOTE
THAT
THE
VARIABLE
INPUT
IS
DECLARED
OUTSIDE
THE
WHILE
LOOP
BECAUSE
YOU
WILL
WANT
TO
USE
THE
INPUT
AFTER
THE
LOOP
HAS
FINISHED
IF
IT
HAD
BEEN
DECLARED
INSIDE
THE
LOOP
BODY
YOU
WOULD
NOT
BE
ABLE
TO
USE
IT
OUTSIDE
THE
LOOP
MAXIMUM
AND
MINIMUM
TO
COMPUTE
THE
LARGEST
VALUE
IN
A
SEQUENCE
KEEP
A
VARIABLE
THAT
STORES
THE
LARGEST
ELE
MENT
THAT
YOU
HAVE
ENCOUNTERED
AND
UPDATE
IT
WHEN
YOU
FIND
A
LARGER
ONE
DOUBLE
LARGEST
CIN
LARGEST
DOUBLE
INPUT
WHILE
CIN
INPUT
IF
INPUT
LARGEST
LARGEST
INPUT
THIS
ALGORITHM
REQUIRES
THAT
THERE
IS
AT
LEAST
ONE
INPUT
TO
FIND
THE
HEIGHT
OF
THE
TALLEST
BUS
RIDER
REMEMBER
THE
LARGEST
VALUE
SO
FAR
AND
UPDATE
IT
WHENEVER
YOU
SEE
A
TALLER
ONE
TO
COMPUTE
THE
SMALLEST
VALUE
SIMPLY
REVERSE
THE
COMPARISON
DOUBLE
SMALLEST
CIN
SMALLEST
DOUBLE
INPUT
WHILE
CIN
INPUT
IF
INPUT
SMALLEST
SMALLEST
INPUT
COMPARING
ADJACENT
VALUES
WHEN
PROCESSING
A
SEQUENCE
OF
VALUES
IN
A
LOOP
YOU
SOMETIMES
NEED
TO
COMPARE
A
VALUE
WITH
THE
VALUE
THAT
JUST
PRECEDED
IT
FOR
EXAMPLE
SUPPOSE
YOU
WANT
TO
CHECK
WHETHER
A
SEQUENCE
OF
INPUTS
CONTAINS
ADJACENT
DUPLICATES
SUCH
AS
NOW
YOU
FACE
A
CHALLENGE
CONSIDER
THE
TYPICAL
LOOP
FOR
READING
A
VALUE
DOUBLE
INPUT
WHILE
CIN
INPUT
NOW
INPUT
CONTAINS
THE
CURRENT
INPUT
HOW
CAN
YOU
COMPARE
THE
CURRENT
INPUT
WITH
THE
PRECEDING
ONE
AT
ANY
TIME
INPUT
CONTAINS
THE
CURRENT
INPUT
OVERWRITING
THE
PREVIOUS
ONE
THE
ANSWER
IS
TO
STORE
THE
PREVIOUS
INPUT
LIKE
THIS
DOUBLE
INPUT
DOUBLE
PREVIOUS
WHILE
CIN
INPUT
IF
INPUT
PREVIOUS
COUT
DUPLICATE
INPUT
ENDL
PREVIOUS
INPUT
WHEN
COMPARING
ADJACENT
VALUES
STORE
THE
PREVIOUS
VALUE
IN
A
VARIABLE
ONE
PROBLEM
REMAINS
WHEN
THE
LOOP
IS
ENTERED
FOR
THE
FIRST
TIME
PREVIOUS
HAS
NOT
YET
BEEN
SET
YOU
CAN
SOLVE
THIS
PROBLEM
WITH
AN
INITIAL
INPUT
OPERATION
OUTSIDE
THE
LOOP
DOUBLE
INPUT
DOUBLE
PREVIOUS
CIN
PREVIOUS
WHILE
CIN
INPUT
IF
INPUT
PREVIOUS
COUT
DUPLICATE
INPUT
ENDL
PREVIOUS
INPUT
WHAT
TOTAL
IS
COMPUTED
WHEN
NO
USER
INPUT
IS
PROVIDED
IN
THE
ALGORITHM
IN
SECTION
HOW
DO
YOU
COMPUTE
THE
TOTAL
OF
ALL
POSITIVE
INPUTS
WHAT
IS
THE
VALUE
OF
POSITION
WHEN
NO
MATCH
IS
FOUND
IN
THE
ALGORITHM
IN
SECTION
WHAT
IS
WRONG
WITH
THE
FOLLOWING
LOOP
FOR
FINDING
THE
POSITION
OF
THE
FIRST
SPACE
IN
A
STRING
BOOL
FOUND
FALSE
FOR
INT
POSITION
FOUND
POSITION
STR
LENGTH
POSITION
STRING
CH
STR
SUBSTR
POSITION
IF
CH
FOUND
TRUE
HOW
DO
YOU
FIND
THE
LAST
SPACE
IN
A
STRING
WHAT
IS
WRONG
WITH
THE
FOLLOWING
LOOP
FOR
FINDING
THE
SMALLEST
INPUT
VALUE
DOUBLE
SMALLEST
DOUBLE
INPUT
WHILE
CIN
INPUT
IF
INPUT
SMALLEST
SMALLEST
INPUT
WHAT
HAPPENS
WITH
THE
ALGORITHM
IN
SECTION
WHEN
NO
INPUT
IS
PROVIDED
AT
ALL
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
STEP
DECIDE
WHAT
WORK
MUST
BE
DONE
INSIDE
THE
LOOP
EVERY
LOOP
NEEDS
TO
DO
SOME
KIND
OF
REPETITIVE
WORK
SUCH
AS
READING
ANOTHER
ITEM
UPDATING
A
VALUE
SUCH
AS
A
BANK
BALANCE
OR
TOTAL
INCREMENTING
A
COUNTER
IF
YOU
CAN
T
FIGURE
OUT
WHAT
NEEDS
TO
GO
INSIDE
THE
LOOP
START
BY
WRITING
DOWN
THE
STEPS
THAT
YOU
WOULD
TAKE
IF
YOU
SOLVED
THE
PROBLEM
BY
HAND
FOR
EXAMPLE
WITH
THE
TEMPERATURE
READING
PROBLEM
YOU
MIGHT
WRITE
READ
FIRST
VALUE
READ
SECOND
VALUE
IF
SECOND
VALUE
IS
HIGHER
THAN
THE
FIRST
SET
HIGHEST
TEMPERATURE
TO
THAT
VALUE
HIGHEST
MONTH
TO
READ
NEXT
VALUE
IF
VALUE
IS
HIGHER
THAN
THE
FIRST
AND
SECOND
SET
HIGHEST
TEMPERATURE
TO
THAT
VALUE
HIGHEST
MONTH
TO
READ
NEXT
VALUE
IF
VALUE
IS
HIGHER
THAN
THE
HIGHEST
TEMPERATURE
SEEN
SO
FAR
SET
HIGHEST
TEMPERATURE
TO
THAT
VALUE
HIGHEST
MONTH
TO
NOW
LOOK
AT
THESE
STEPS
AND
REDUCE
THEM
TO
A
SET
OF
UNIFORM
ACTIONS
THAT
CAN
BE
PLACED
INTO
THE
LOOP
BODY
THE
FIRST
ACTION
IS
EASY
READ
NEXT
VALUE
THE
NEXT
ACTION
IS
TRICKIER
IN
OUR
DESCRIPTION
WE
USED
TESTS
HIGHER
THAN
THE
FIRST
HIGHER
THAN
THE
FIRST
AND
SECOND
HIGHER
THAN
THE
HIGHEST
TEMPERATURE
SEEN
SO
FAR
WE
NEED
TO
SETTLE
ON
ONE
TEST
THAT
WORKS
FOR
ALL
ITERATIONS
THE
LAST
FORMULATION
IS
THE
MOST
GENERAL
SIMILARLY
WE
MUST
FIND
A
GENERAL
WAY
OF
SETTING
THE
HIGHEST
MONTH
WE
NEED
A
VARIABLE
THAT
STORES
THE
CURRENT
MONTH
RUNNING
FROM
TO
THEN
WE
CAN
FORMULATE
THE
SECOND
LOOP
ACTION
IF
VALUE
IS
HIGHER
THAN
THE
HIGHEST
TEMPERATURE
SET
HIGHEST
TEMPERATURE
TO
THAT
VALUE
HIGHEST
MONTH
TO
CURRENT
MONTH
ALTOGETHER
OUR
LOOP
IS
LOOP
READ
NEXT
VALUE
IF
VALUE
IS
HIGHER
THAN
THE
HIGHEST
TEMPERATURE
SET
HIGHEST
TEMPERATURE
TO
THAT
VALUE
HIGHEST
MONTH
TO
CURRENT
MONTH
INCREMENT
CURRENT
MONTH
STEP
SPECIFY
THE
LOOP
CONDITION
WHAT
GOAL
DO
YOU
WANT
TO
REACH
IN
YOUR
LOOP
TYPICAL
EXAMPLES
ARE
HAS
THE
COUNTER
REACHED
THE
FINAL
VALUE
HAVE
YOU
READ
THE
LAST
INPUT
VALUE
HAS
A
VALUE
REACHED
A
GIVEN
THRESHOLD
IN
OUR
EXAMPLE
WE
SIMPLY
WANT
THE
CURRENT
MONTH
TO
REACH
STEP
DETERMINE
THE
LOOP
TYPE
WE
DISTINGUISH
BETWEEN
TWO
MAJOR
LOOP
TYPES
A
DEFINITE
OR
COUNT
CONTROLLED
LOOP
IS
EXECUTED
A
DEFINITE
NUMBER
OF
TIMES
IN
AN
INDEFINITE
OR
EVENT
CONTROLLED
LOOP
THE
NUMBER
OF
ITERATIONS
IS
NOT
KNOWN
IN
ADVANCE
THE
LOOP
IS
EXECUTED
UNTIL
SOME
EVENT
HAPPENS
A
TYPICAL
EXAMPLE
OF
THE
LATTER
IS
A
LOOP
THAT
READS
DATA
UNTIL
A
SENTINEL
IS
ENCOUNTERED
IF
YOU
KNOW
IN
ADVANCE
HOW
MANY
TIMES
A
LOOP
IS
REPEATED
USE
A
FOR
STATEMENT
FOR
OTHER
LOOPS
CONSIDER
THE
LOOP
CONDITION
DO
YOU
NEED
TO
COMPLETE
ONE
ITERATION
OF
THE
LOOP
BODY
BEFORE
YOU
CAN
TELL
WHEN
TO
TERMINATE
THE
LOOP
IN
THAT
CASE
YOU
SHOULD
CHOOSE
A
DO
LOOP
OTH
ERWISE
USE
A
WHILE
LOOP
IN
OUR
EXAMPLE
WE
READ
TEMPERATURE
VALUES
THEREFORE
WE
CHOOSE
A
FOR
LOOP
STEP
SET
UP
VARIABLES
FOR
ENTERING
THE
LOOP
FOR
THE
FIRST
TIME
LIST
ALL
VARIABLES
THAT
ARE
USED
AND
UPDATED
IN
THE
LOOP
AND
DETERMINE
HOW
TO
INITIALIZE
THEM
COMMONLY
COUNTERS
ARE
INITIALIZED
WITH
OR
TOTALS
WITH
IN
OUR
EXAMPLE
THE
VARIABLES
ARE
CURRENT
MONTH
HIGHEST
VALUE
HIGHEST
MONTH
WE
NEED
TO
BE
CAREFUL
HOW
WE
SET
UP
THE
HIGHEST
TEMPERATURE
VALUE
WE
CAN
T
SIMPLY
SET
IT
TO
AFTER
ALL
OUR
PROGRAM
NEEDS
TO
WORK
WITH
TEMPERATURE
VALUES
FROM
ANTARCTICA
ALL
OF
WHICH
MAY
BE
NEGATIVE
A
GOOD
OPTION
IS
TO
SET
THE
HIGHEST
TEMPERATURE
VALUE
TO
THE
FIRST
INPUT
VALUE
OF
COURSE
THEN
WE
NEED
TO
REMEMBER
TO
ONLY
READ
IN
ANOTHER
VALUES
WITH
THE
CURRENT
MONTH
STARTING
AT
WE
ALSO
NEED
TO
INITIALIZE
THE
HIGHEST
MONTH
WITH
AFTER
ALL
IN
AN
AUSTRALIAN
CITY
WE
MAY
NEVER
FIND
A
MONTH
THAT
IS
WARMER
THAN
JANUARY
STEP
PROCESS
THE
RESULT
AFTER
THE
LOOP
HAS
FINISHED
IN
MANY
CASES
THE
DESIRED
RESULT
IS
SIMPLY
A
VARIABLE
THAT
WAS
UPDATED
IN
THE
LOOP
BODY
FOR
EXAMPLE
IN
OUR
TEMPERATURE
PROGRAM
THE
RESULT
IS
THE
HIGHEST
MONTH
SOMETIMES
THE
LOOP
COMPUTES
VALUES
THAT
CONTRIBUTE
TO
THE
FINAL
RESULT
FOR
EXAMPLE
SUPPOSE
YOU
ARE
ASKED
TO
AVERAGE
THE
TEMPERATURES
THEN
THE
LOOP
SHOULD
COMPUTE
THE
SUM
NOT
THE
AVERAGE
AFTER
THE
LOOP
HAS
COMPLETED
YOU
ARE
READY
TO
COMPUTE
THE
AVERAGE
DIVIDE
THE
SUM
BY
THE
NUMBER
OF
INPUTS
HERE
IS
OUR
COMPLETE
LOOP
READ
FIRST
VALUE
STORE
AS
HIGHEST
VALUE
HIGHEST
MONTH
FOR
CURRENT
MONTH
CURRENT
MONTH
CURRENT
MONTH
READ
NEXT
VALUE
IF
VALUE
IS
HIGHER
THAN
THE
HIGHEST
VALUE
SET
HIGHEST
VALUE
TO
THAT
VALUE
HIGHEST
MONTH
TO
CURRENT
MONTH
STEP
TRACE
THE
LOOP
WITH
TYPICAL
EXAMPLES
HAND
TRACE
YOUR
LOOP
CODE
AS
DESCRIBED
IN
SECTION
CHOOSE
EXAMPLE
VALUES
THAT
ARE
NOT
TOO
COMPLEX
EXECUTING
THE
LOOP
TIMES
IS
ENOUGH
TO
CHECK
FOR
THE
MOST
COMMON
ERRORS
PAY
SPECIAL
ATTENTION
WHEN
ENTERING
THE
LOOP
FOR
THE
FIRST
AND
LAST
TIME
SOMETIMES
YOU
WANT
TO
MAKE
A
SLIGHT
MODIFICATION
TO
MAKE
TRACING
FEASIBLE
FOR
EXAMPLE
WHEN
HAND
TRACING
THE
INVESTMENT
DOUBLING
PROBLEM
USE
AN
INTEREST
RATE
OF
PERCENT
RATHER
THAN
PERCENT
WHEN
HAND
TRACING
THE
TEMPERATURE
LOOP
USE
DATA
VALUES
NOT
LET
SAY
THE
DATA
ARE
HERE
IS
THE
WALKTHROUGH
CURRENT
MONTH
CURRENT
VALUE
HIGHEST
MONTH
HIGHEST
VALUE
THE
TRACE
DEMONSTRATES
THAT
HIGHEST
MONTH
AND
HIGHEST
VALUE
ARE
PROPERLY
SET
STEP
IMPLEMENT
THE
LOOP
IN
C
HERE
THE
LOOP
FOR
OUR
EXAMPLE
EXERCISE
ASKS
YOU
TO
COMPLETE
THE
PROGRAM
DOUBLE
CIN
INT
FOR
INT
DOUBLE
CIN
IF
COUT
ENDL
AVAILABLE
ONLINE
AT
WWW
WILEY
COM
COLLEGE
HORSTMANN
NESTED
LOOPS
IN
SECTION
YOU
SAW
HOW
TO
NEST
TWO
IF
STATEMENTS
SIMILARLY
COMPLEX
ITERATIONS
SOMETIMES
REQUIRE
A
NESTED
LOOP
A
LOOP
INSIDE
ANOTHER
LOOP
STATEMENT
WHEN
PRO
CESSING
TABLES
NESTED
LOOPS
OCCUR
NATURALLY
AN
OUTER
LOOP
ITERATES
OVER
ALL
ROWS
OF
THE
TABLE
AN
INNER
LOOP
DEALS
WITH
THE
COLUMNS
IN
THE
CURRENT
ROW
IN
THIS
SECTION
YOU
WILL
SEE
HOW
TO
PRINT
A
TABLE
FOR
SIMPLICITY
WE
WILL
SIMPLY
PRINT
POWERS
XN
AS
IN
THE
TABLE
AT
RIGHT
HERE
IS
THE
PSEUDOCODE
FOR
PRINTING
THE
TABLE
PRINT
TABLE
HEADER
FOR
X
FROM
TO
PRINT
TABLE
ROW
PRINT
ENDL
HOW
DO
YOU
PRINT
A
TABLE
ROW
YOU
NEED
TO
PRINT
A
VALUE
FOR
EACH
EXPONENT
THIS
REQUIRES
A
SECOND
LOOP
FOR
N
FROM
TO
PRINT
XN
THIS
LOOP
MUST
BE
PLACED
INSIDE
THE
PRECEDING
LOOP
WE
SAY
THAT
THE
INNER
LOOP
IS
NESTED
INSIDE
THE
OUTER
LOOP
SEE
FIGURE
FIGURE
FLOWCHART
OF
A
NESTED
LOOP
THE
HOUR
AND
MINUTE
DISPLAYS
IN
A
DIGITAL
CLOCK
ARE
AN
EXAMPLE
OF
NESTED
LOOPS
THE
HOURS
LOOP
TIMES
AND
FOR
EACH
HOUR
THE
MINUTES
LOOP
TIMES
THERE
ARE
ROWS
IN
THE
OUTER
LOOP
FOR
EACH
X
THE
PROGRAM
PRINTS
FOUR
COLUMNS
IN
THE
INNER
LOOP
THUS
A
TOTAL
OF
VALUES
ARE
PRINTED
FOLLOWING
IS
THE
COMPLETE
PROGRAM
NOTE
THAT
WE
ALSO
USE
LOOPS
TO
PRINT
THE
TABLE
HEADER
HOWEVER
THOSE
LOOPS
ARE
NOT
NESTED
POWTABLE
CPP
PROGRAM
RUN
X
X
X
X
NESTED
LOOPS
OUTPUT
EXPLANATION
FOR
I
I
I
PRINTS
ROWS
OF
FOR
J
J
J
COUT
COUT
ENDL
ASTERISKS
EACH
FOR
I
I
I
PRINTS
ROWS
OF
FOR
J
J
J
COUT
ASTERISKS
EACH
COUT
ENDL
FOR
I
I
I
PRINTS
ROWS
OF
FOR
J
J
I
J
COUT
LENGTHS
AND
COUT
ENDL
FOR
I
I
I
FOR
J
J
J
IF
J
COUT
ELSE
COUT
COUT
ENDL
PRINTS
ASTERISKS
IN
EVEN
COLUMNS
DASHES
IN
ODD
COLUMNS
FOR
I
I
I
FOR
J
J
J
IF
I
J
COUT
ELSE
COUT
COUT
ENDL
PRINTS
A
CHECKERBOARD
PATTERN
WHY
IS
THERE
A
STATEMENT
COUT
ENDL
IN
THE
OUTER
LOOP
BUT
NOT
IN
THE
INNER
LOOP
HOW
WOULD
YOU
CHANGE
THE
PROGRAM
SO
THAT
ALL
POWERS
FROM
TO
ARE
DISPLAYED
IF
YOU
MAKE
THE
CHANGE
IN
SELF
CHECK
HOW
MANY
VALUES
ARE
DISPLAYED
WHAT
DO
THE
FOLLOWING
NESTED
LOOPS
DISPLAY
FOR
INT
I
I
I
FOR
INT
J
J
J
COUT
I
J
COUT
ENDL
WRITE
NESTED
LOOPS
THAT
MAKE
THE
FOLLOWING
PATTERN
OF
BRACKETS
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
RANDOM
NUMBERS
AND
SIMULATIONS
A
SIMULATION
PROGRAM
USES
THE
COMPUTER
TO
SIMULATE
AN
ACTIVITY
IN
THE
REAL
WORLD
OR
AN
IMAGINARY
ONE
SIMULATIONS
ARE
COMMONLY
USED
FOR
PREDICTING
CLIMATE
CHANGE
ANALYZING
TRAFFIC
PICKING
STOCKS
AND
MANY
OTHER
APPLICATIONS
IN
SCIENCE
AND
BUSI
NESS
IN
THE
FOLLOWING
SECTIONS
YOU
WILL
LEARN
HOW
TO
IMPLEMENT
SIMULATIONS
THAT
MODEL
PHENOMENA
WITH
A
DEGREE
OF
RANDOMNESS
GENERATING
RANDOM
NUMBERS
MANY
EVENTS
IN
THE
REAL
WORLD
ARE
DIFFICULT
TO
PREDICT
WITH
ABSOLUTE
PRECISION
YET
WE
CAN
SOMETIMES
KNOW
THE
AVERAGE
BEHAVIOR
QUITE
WELL
FOR
EXAMPLE
A
STORE
MAY
KNOW
FROM
EXPERIENCE
THAT
A
CUSTOMER
ARRIVES
EVERY
FIVE
MINUTES
OF
COURSE
THAT
IS
AN
AVER
AGE
CUSTOMERS
DON
T
ARRIVE
IN
FIVE
MINUTE
INTERVALS
TO
ACCURATELY
MODEL
CUSTOMER
TRAFFIC
YOU
WANT
TO
TAKE
THAT
RANDOM
FLUCTUATION
INTO
ACCOUNT
NOW
HOW
CAN
YOU
RUN
SUCH
A
SIMULATION
IN
THE
COMPUTER
THE
C
LIBRARY
HAS
A
RANDOM
NUMBER
GENERATOR
WHICH
PRODUCES
NUMBERS
THAT
APPEAR
TO
BE
COMPLETELY
RANDOM
CALLING
RAND
YIELDS
A
RANDOM
INTEGER
BETWEEN
AND
WHICH
IS
AN
IMPLEMENTATION
DEPENDENT
CONSTANT
TYPICALLY
BUT
NOT
ALWAYS
THE
LARGEST
VALID
INT
VALUE
CALL
RAND
AGAIN
AND
YOU
GET
A
DIFFERENT
NUMBER
THE
RAND
FUNCTION
IS
DECLARED
IN
THE
CSTDLIB
HEADER
THE
FOLLOWING
PROGRAM
CALLS
THE
RAND
FUNCTION
TEN
TIMES
RANDOM
CPP
PROGRAM
RUN
ACTUALLY
THE
NUMBERS
ARE
NOT
COMPLETELY
RANDOM
THEY
ARE
DRAWN
FROM
SEQUENCES
OF
NUMBERS
THAT
DON
T
REPEAT
FOR
A
LONG
TIME
THESE
SEQUENCES
ARE
ACTUALLY
COMPUTED
FROM
FAIRLY
SIMPLE
FORMULAS
THEY
JUST
BEHAVE
LIKE
RANDOM
NUMBERS
FOR
THAT
REASON
THEY
ARE
OFTEN
CALLED
PSEUDORANDOM
NUMBERS
TRY
RUNNING
THE
PROGRAM
AGAIN
YOU
WILL
GET
THE
EXACT
SAME
OUTPUT
THIS
CONFIRMS
THAT
THE
RANDOM
NUMBERS
ARE
GENERATED
BY
FORMULAS
HOWEVER
WHEN
RUNNING
SIMU
LATIONS
YOU
DON
T
ALWAYS
WANT
TO
GET
THE
SAME
RESULTS
TO
OVERCOME
THIS
PROBLEM
SPECIFY
A
SEED
FOR
THE
RANDOM
NUMBER
SEQUENCE
EVERY
TIME
YOU
USE
A
NEW
SEED
THE
RANDOM
NUMBER
GENERATOR
STARTS
GENERATING
A
NEW
SEQUENCE
THE
SEED
IS
SET
WITH
THE
SRAND
FUNCTION
A
SIMPLE
VALUE
TO
USE
AS
A
SEED
IS
THE
CURRENT
TIME
SRAND
TIME
SIMPLY
MAKE
THIS
CALL
ONCE
IN
YOUR
PROGRAM
BEFORE
GENERATING
ANY
RANDOM
NUMBERS
THEN
THE
RANDOM
NUMBERS
WILL
BE
DIFFERENT
IN
EVERY
PROGRAM
RUN
ALSO
INCLUDE
THE
CTIME
HEADER
THAT
DECLARES
THE
TIME
FUNCTION
SIMULATING
DIE
TOSSES
IN
ACTUAL
APPLICATIONS
YOU
NEED
TO
TRANSFORM
THE
OUTPUT
FROM
THE
RANDOM
NUMBER
GENERATOR
INTO
DIFFERENT
RANGES
FOR
EXAM
PLE
TO
SIMULATE
THE
THROW
OF
A
DIE
YOU
NEED
RANDOM
NUMBERS
BETWEEN
AND
HERE
IS
THE
GENERAL
RECIPE
FOR
COMPUTING
RANDOM
INTEGERS
BETWEEN
TWO
BOUNDS
A
AND
B
AS
YOU
KNOW
FROM
PROGRAM
MING
TIP
ON
PAGE
THERE
ARE
B
A
VALUES
BETWEEN
A
AND
B
INCLUDING
THE
BOUNDS
THEMSELVES
FIRST
COMPUTE
RAND
B
A
TO
OBTAIN
A
RANDOM
VALUE
BETWEEN
AND
B
A
THEN
ADD
A
YIELDING
A
RANDOM
VALUE
BETWEEN
A
AND
B
INT
R
RAND
B
A
A
HERE
IS
A
PROGRAM
THAT
SIMULATES
THE
THROW
OF
A
PAIR
OF
DICE
DICE
CPP
PROGRAM
RUN
THE
MONTE
CARLO
METHOD
THE
MONTE
CARLO
METHOD
IS
AN
INGE
NIOUS
METHOD
FOR
FINDING
APPROXI
MATE
SOLUTIONS
TO
PROBLEMS
THAT
CAN
NOT
BE
PRECISELY
SOLVED
THE
METHOD
IS
NAMED
AFTER
THE
FAMOUS
CASINO
IN
MONTE
CARLO
HERE
IS
A
TYPICAL
EXAMPLE
IT
IS
DIFFICULT
TO
COMPUTE
THE
NUMBER
BUT
YOU
CAN
APPROXI
MATE
IT
QUITE
WELL
WITH
THE
FOLLOWING
SIMULATION
SIMULATE
SHOOTING
A
DART
INTO
A
SQUARE
SURROUNDING
A
CIRCLE
OF
RADIUS
THAT
IS
EASY
GENERATE
RANDOM
X
AND
Y
COORDINATES
BETWEEN
AND
IF
THE
GENERATED
POINT
LIES
INSIDE
THE
CIRCLE
WE
COUNT
IT
AS
A
HIT
THAT
IS
THE
CASE
WHEN
BECAUSE
OUR
SHOTS
ARE
ENTIRELY
RANDOM
WE
EXPECT
THAT
THE
RATIO
OF
HITS
TRIES
IS
APPROXIMATELY
EQUAL
TO
THE
RATIO
OF
THE
AREAS
OF
THE
CIRCLE
AND
THE
SQUARE
THAT
IS
THEREFORE
OUR
Y
ESTIMATE
FOR
IS
HITS
TRIES
THIS
METHOD
YIELDS
AN
ESTI
MATE
FOR
USING
NOTHING
BUT
SIMPLE
ARITHMETIC
TO
RUN
THE
MONTE
CARLO
SIMULATION
YOU
HAVE
TO
WORK
A
LITTLE
HARDER
WITH
RANDOM
NUMBER
GENERATION
WHEN
X
YOU
THROW
A
DIE
IT
HAS
TO
COME
UP
WITH
ONE
OF
SIX
FACES
WHEN
THROWING
A
DART
HOWEVER
THERE
ARE
MANY
POSSIBLE
OUTCOMES
YOU
MUST
GENERATE
A
RANDOM
FLOATING
POINT
NUMBER
FIRST
GENERATE
THE
FOLLOWING
VALUE
DOUBLE
R
RAND
BETWEEN
AND
THE
VALUE
R
IS
A
RANDOM
FLOATING
POINT
VALUE
BETWEEN
AND
YOU
HAVE
TO
MULTIPLY
BY
TO
ENSURE
THAT
ONE
OF
THE
OPERANDS
OF
THE
OPERATOR
IS
A
FLOATING
POINT
NUMBER
THE
DIVISION
RAND
WOULD
BE
AN
INTEGER
DIVISION
SEE
COMMON
ERROR
TO
GENERATE
A
RANDOM
VALUE
BETWEEN
AND
YOU
COMPUTE
DOUBLE
X
R
BETWEEN
AND
AS
R
RANGES
FROM
TO
X
RANGES
FROM
TO
HERE
IS
THE
PROGRAM
THAT
CARRIES
OUT
THE
SIMULATION
MONTECARLO
CPP
PROGRAM
RUN
ESTIMATE
FOR
PI
HOW
DO
YOU
SIMULATE
A
COIN
TOSS
WITH
THE
RAND
FUNCTION
HOW
DO
YOU
SIMULATE
THE
PICKING
OF
A
RANDOM
PLAYING
CARD
WHY
DOES
THE
DICE
CPP
FILE
INCLUDE
THE
CTIME
HEADER
IN
MANY
GAMES
YOU
THROW
A
PAIR
OF
DICE
TO
GET
A
VALUE
BETWEEN
AND
WHAT
IS
WRONG
WITH
THIS
SIMULATED
THROW
OF
A
PAIR
OF
DICE
INT
SUM
RAND
HOW
DO
YOU
GENERATE
A
RANDOM
FLOATING
POINT
NUMBER
BETWEEN
AND
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
RANDOM
FACT
SOFTWARE
PIRACY
AS
YOU
READ
THIS
YOU
HAVE
WRITTEN
A
FEW
COMPUTER
PROGRAMS
AND
YOU
HAVE
EXPERIENCED
FIRSTHAND
HOW
MUCH
EFFORT
IT
TAKES
TO
WRITE
EVEN
THE
HUMBLEST
OF
PROGRAMS
WRITING
A
REAL
SOFTWARE
PROD
UCT
SUCH
AS
A
FINANCIAL
APPLICATION
OR
A
COMPUTER
GAME
TAKES
A
LOT
OF
TIME
AND
MONEY
FEW
PEOPLE
AND
FEWER
COMPA
NIES
ARE
GOING
TO
SPEND
THAT
KIND
OF
TIME
AND
MONEY
IF
THEY
DON
T
HAVE
A
REA
SONABLE
CHANCE
TO
MAKE
MORE
MONEY
FROM
THEIR
EFFORT
ACTUALLY
SOME
COM
PANIES
GIVE
AWAY
THEIR
SOFTWARE
IN
THE
HOPE
THAT
USERS
WILL
UPGRADE
TO
MORE
ELABORATE
PAID
VERSIONS
OR
PAY
FOR
CON
SULTING
OTHER
COMPANIES
GIVE
AWAY
THE
SOFTWARE
THAT
ENABLES
USERS
TO
READ
AND
USE
FILES
BUT
SELL
THE
SOFTWARE
NEEDED
TO
CREATE
THOSE
FILES
FINALLY
THERE
ARE
INDIVIDUALS
WHO
DONATE
THEIR
TIME
OUT
OF
ENTHUSIASM
AND
PRODUCE
PROGRAMS
THAT
YOU
CAN
COPY
FREELY
SEE
RANDOM
FACT
FOR
MORE
INFORMATION
WHEN
SELLING
SOFTWARE
A
COMPANY
MUST
RELY
ON
THE
HONESTY
OF
ITS
CUS
TOMERS
IT
IS
AN
EASY
MATTER
FOR
AN
UNSCRUPULOUS
PERSON
TO
MAKE
COPIES
OF
COMPUTER
PROGRAMS
WITHOUT
PAYING
FOR
THEM
IN
MOST
COUNTRIES
THAT
IS
ILLE
GAL
MOST
GOVERNMENTS
PROVIDE
LEGAL
PROTECTION
SUCH
AS
COPYRIGHT
LAWS
AND
PATENTS
TO
ENCOURAGE
THE
DEVELOP
MENT
OF
NEW
PRODUCTS
COUNTRIES
THAT
TOLERATE
WIDESPREAD
PIRACY
HAVE
FOUND
THAT
THEY
HAVE
AN
AMPLE
CHEAP
SUPPLY
OF
FOREIGN
SOFTWARE
BUT
NO
LOCAL
MAN
UFACTURERS
WILLING
TO
DESIGN
GOOD
SOFT
WARE
FOR
THEIR
OWN
CITIZENS
SUCH
AS
WORD
PROCESSORS
IN
THE
LOCAL
SCRIPT
OR
FINANCIAL
PROGRAMS
ADAPTED
TO
THE
LOCAL
TAX
LAWS
WHEN
A
MASS
MARKET
FOR
SOFTWARE
FIRST
APPEARED
VENDORS
WERE
ENRAGED
BY
THE
MONEY
THEY
LOST
THROUGH
PIRACY
THEY
TRIED
TO
FIGHT
BACK
BY
VARIOUS
SCHEMES
TO
ENSURE
THAT
ONLY
THE
LEGITI
MATE
OWNER
COULD
USE
THE
SOFTWARE
SUCH
AS
DONGLES
DEVICES
THAT
MUST
BE
ATTACHED
TO
A
PRINTER
PORT
BEFORE
THE
SOFTWARE
WILL
RUN
LEGITIMATE
USERS
HATED
THESE
MEASURES
THEY
PAID
FOR
THE
SOFTWARE
BUT
THEY
HAD
TO
SUFFER
THROUGH
INCONVENIENCES
SUCH
AS
HAV
ING
MULTIPLE
DONGLES
STICK
OUT
FROM
THEIR
COMPUTER
IN
THE
UNITED
STATES
MARKET
PRESSURES
FORCED
MOST
VENDORS
TO
GIVE
UP
ON
THESE
COPY
PROTECTION
SCHEMES
BUT
THEY
ARE
STILL
COMMON
PLACE
IN
OTHER
PARTS
OF
THE
WORLD
BECAUSE
IT
IS
SO
EASY
AND
INEXPEN
SIVE
TO
PIRATE
SOFTWARE
AND
THE
CHANCE
OF
BEING
FOUND
OUT
IS
MINIMAL
YOU
HAVE
TO
MAKE
A
MORAL
CHOICE
FOR
YOUR
SELF
IF
A
PACKAGE
THAT
YOU
WOULD
REALLY
LIKE
TO
HAVE
IS
TOO
EXPENSIVE
FOR
YOUR
BUDGET
DO
YOU
STEAL
IT
OR
DO
YOU
STAY
HONEST
AND
GET
BY
WITH
A
MORE
AFFORD
ABLE
PRODUCT
OF
COURSE
PIRACY
IS
NOT
LIMITED
TO
SOFTWARE
THE
SAME
ISSUES
ARISE
FOR
OTHER
DIGITAL
PRODUCTS
AS
WELL
YOU
MAY
HAVE
HAD
THE
OPPORTUNITY
TO
OBTAIN
COPIES
OF
SONGS
OR
MOVIES
WITHOUT
PAYMENT
OR
YOU
MAY
HAVE
BEEN
FRUSTRATED
BY
A
COPY
PROTEC
TION
DEVICE
ON
YOUR
MUSIC
PLAYER
THAT
MADE
IT
DIFFICULT
FOR
YOU
TO
LISTEN
TO
SONGS
THAT
YOU
PAID
FOR
ADMITTEDLY
IT
CAN
BE
DIFFICULT
TO
HAVE
A
LOT
OF
SYM
PATHY
FOR
A
MUSICAL
ENSEMBLE
WHOSE
PUBLISHER
CHARGES
A
LOT
OF
MONEY
FOR
WHAT
SEEMS
TO
HAVE
BEEN
VERY
LITTLE
EFFORT
ON
THEIR
PART
AT
LEAST
WHEN
COMPARED
TO
THE
EFFORT
THAT
GOES
INTO
DESIGNING
AND
IMPLEMENTING
A
SOFT
WARE
PACKAGE
NEVERTHELESS
IT
SEEMS
ONLY
FAIR
THAT
ARTISTS
AND
AUTHORS
RECEIVE
SOME
COMPENSATION
FOR
THEIR
EFFORTS
HOW
TO
PAY
ARTISTS
AUTHORS
AND
PROGRAMMERS
FAIRLY
WITHOUT
BURDENING
HONEST
CUSTOMERS
IS
AN
UNSOLVED
PROBLEM
AT
THE
TIME
OF
THIS
WRITING
AND
MANY
COMPUTER
SCIENTISTS
ARE
ENGAGED
IN
RESEARCH
IN
THIS
AREA
CHAPTER
SUMMARY
EXPLAIN
THE
FLOW
OF
EXECUTION
IN
A
LOOP
LOOPS
EXECUTE
A
BLOCK
OF
CODE
REPEATEDLY
WHILE
A
CONDITION
REMAINS
TRUE
AN
OFF
BY
ONE
ERROR
IS
A
COMMON
ERROR
WHEN
PROGRAMMING
LOOPS
THINK
THROUGH
SIMPLE
TEST
CASES
TO
AVOID
THIS
TYPE
OF
ERROR
USE
THE
TECHNIQUE
OF
HAND
TRACING
TO
ANALYZE
THE
BEHAVIOR
OF
A
PROGRAM
HAND
TRACING
IS
A
SIMULATION
OF
CODE
EXECUTION
IN
WHICH
YOU
STEP
THROUGH
INSTRUCTIONS
AND
TRACK
THE
VALUES
OF
THE
VARIABLES
HAND
TRACING
CAN
HELP
YOU
UNDERSTAND
HOW
AN
UNFAMILIAR
ALGORITHM
WORKS
HAND
TRACING
CAN
SHOW
ERRORS
IN
CODE
OR
PSEUDOCODE
USE
FOR
LOOPS
FOR
IMPLEMENTING
COUNTING
LOOPS
THE
FOR
LOOP
IS
USED
WHEN
A
VALUE
RUNS
FROM
A
STARTING
POINT
TO
AN
ENDING
POINT
WITH
A
CONSTANT
INCREMENT
OR
DECREMENT
CHOOSE
BETWEEN
THE
WHILE
LOOP
AND
THE
DO
LOOP
THE
DO
LOOP
IS
APPROPRIATE
WHEN
THE
LOOP
BODY
MUST
BE
EXECUTED
AT
LEAST
ONCE
IMPLEMENT
LOOPS
THAT
READ
SEQUENCES
OF
INPUT
DATA
A
SENTINEL
VALUE
DENOTES
THE
END
OF
A
DATA
SET
BUT
IT
IS
NOT
PART
OF
THE
DATA
YOU
CAN
USE
A
BOOLEAN
VARIABLE
TO
CONTROL
A
LOOP
SET
THE
VARIABLE
TO
TRUE
BEFORE
ENTERING
THE
LOOP
THEN
SET
IT
TO
FALSE
TO
LEAVE
THE
LOOP
USE
INPUT
REDIRECTION
TO
READ
INPUT
FROM
A
FILE
USE
OUTPUT
REDIRECTION
TO
CAPTURE
PROGRAM
OUTPUT
IN
A
FILE
USE
THE
TECHNIQUE
OF
STORYBOARDING
FOR
PLANNING
USER
INTERACTIONS
A
STORYBOARD
CONSISTS
OF
ANNOTATED
SKETCHES
FOR
EACH
STEP
IN
AN
ACTION
SEQUENCE
DEVELOPING
A
STORYBOARD
HELPS
YOU
UNDERSTAND
THE
INPUTS
AND
OUTPUTS
THAT
ARE
REQUIRED
FOR
A
PROGRAM
KNOW
THE
MOST
COMMON
LOOP
ALGORITHMS
TO
COMPUTE
AN
AVERAGE
KEEP
A
TOTAL
AND
A
COUNT
OF
ALL
VALUES
TO
COUNT
VALUES
THAT
FULFILL
A
CONDITION
CHECK
ALL
VALUES
AND
INCREMENT
A
COUNTER
FOR
EACH
MATCH
IF
YOUR
GOAL
IS
TO
FIND
A
MATCH
EXIT
THE
LOOP
WHEN
THE
MATCH
IS
FOUND
TO
FIND
THE
LARGEST
VALUE
UPDATE
THE
LARGEST
VALUE
SEEN
SO
FAR
WHENEVER
YOU
SEE
A
LARGER
ONE
TO
COMPARE
ADJACENT
INPUTS
STORE
THE
PRECEDING
INPUT
IN
A
VARIABLE
USE
NESTED
LOOPS
TO
IMPLEMENT
MULTIPLE
LEVELS
OF
ITERATION
WHEN
THE
BODY
OF
A
LOOP
CONTAINS
ANOTHER
LOOP
THE
LOOPS
ARE
NESTED
A
TYPICAL
USE
OF
NESTED
LOOPS
IS
PRINTING
A
TABLE
WITH
ROWS
AND
COLUMNS
APPLY
LOOPS
TO
THE
IMPLEMENTATION
OF
SIMULATIONS
IN
A
SIMULATION
YOU
USE
THE
COMPUTER
TO
SIMULATE
AN
ACTIVITY
YOU
CAN
INTRODUCE
RANDOMNESS
BY
CALLING
THE
RANDOM
NUMBER
GENERATOR
PROVIDE
TRACE
TABLES
FOR
THESE
LOOPS
A
INT
I
INT
J
INT
N
WHILE
I
J
I
J
N
B
INT
I
INT
J
INT
N
WHILE
I
I
N
N
I
J
J
C
INT
I
INT
J
INT
N
WHILE
I
I
J
N
N
I
J
D
INT
I
INT
J
INT
N
WHILE
I
J
I
I
J
J
N
WHAT
DO
THESE
LOOPS
PRINT
A
FOR
INT
I
I
I
COUT
I
B
FOR
INT
I
I
I
COUT
I
C
FOR
INT
I
I
I
COUT
I
D
FOR
INT
I
I
I
COUT
I
E
FOR
INT
I
I
I
I
COUT
I
F
FOR
INT
I
I
I
IF
I
COUT
I
WHAT
IS
AN
INFINITE
LOOP
ON
YOUR
COMPUTER
HOW
CAN
YOU
TERMINATE
A
PROGRAM
THAT
EXECUTES
AN
INFINITE
LOOP
WHAT
IS
AN
OFF
BY
ONE
ERROR
GIVE
AN
EXAMPLE
FROM
YOUR
OWN
PROGRAMMING
EXPERIENCE
WRITE
A
PROGRAM
TRACE
FOR
THE
PSEUDOCODE
IN
EXERCISE
ASSUMING
THE
INPUT
VALUES
ARE
IS
THE
FOLLOWING
CODE
LEGAL
FOR
INT
I
I
I
FOR
INT
I
I
I
COUT
I
COUT
ENDL
WHAT
DOES
IT
PRINT
IS
IT
GOOD
CODING
STYLE
IF
NOT
HOW
WOULD
YOU
IMPROVE
IT
HOW
OFTEN
DO
THE
FOLLOWING
LOOPS
EXECUTE
ASSUME
THAT
I
IS
NOT
CHANGED
IN
THE
LOOP
BODY
A
FOR
INT
I
I
I
B
FOR
INT
I
I
I
C
FOR
INT
I
I
I
D
FOR
INT
I
I
I
E
FOR
INT
I
I
I
F
FOR
INT
I
I
I
I
G
FOR
INT
I
I
I
I
WRITE
PSEUDOCODE
FOR
A
PROGRAM
THAT
PRINTS
A
CALENDAR
SUCH
AS
THE
FOLLOWING
SU
M
T
W
TH
F
SA
WRITE
PSEUDOCODE
FOR
A
PROGRAM
THAT
PRINTS
A
CELSIUS
FAHRENHEIT
CONVERSION
TABLE
SUCH
AS
THE
FOLLOWING
CELSIUS
FAHRENHEIT
WRITE
PSEUDOCODE
FOR
A
PROGRAM
THAT
READS
A
SEQUENCE
OF
STUDENT
RECORDS
AND
PRINTS
THE
TOTAL
SCORE
FOR
EACH
STUDENT
EACH
RECORD
HAS
THE
STUDENT
FIRST
AND
LAST
NAME
FOLLOWED
BY
A
SEQUENCE
OF
TEST
SCORES
AND
A
SENTINEL
OF
THE
SEQUENCE
IS
TERMI
NATED
BY
THE
WORD
END
HERE
IS
A
SAMPLE
SEQUENCE
HARRY
MORGAN
SALLY
LIN
END
PROVIDE
A
TRACE
TABLE
FOR
THIS
SAMPLE
INPUT
REWRITE
THE
FOLLOWING
FOR
LOOP
INTO
A
WHILE
LOOP
INT
FOR
INT
I
I
I
I
REWRITE
THE
FOLLOWING
DO
WHILE
LOOP
INTO
A
WHILE
LOOP
INT
N
CIN
N
DOUBLE
X
DOUBLE
DO
N
N
N
X
X
WHILE
PROVIDE
TRACE
TABLES
OF
THE
FOLLOWING
LOOPS
A
INT
INT
N
WHILE
N
N
B
INT
FOR
INT
N
N
N
N
C
INT
INT
N
DO
N
N
WHILE
N
WHAT
DO
THE
FOLLOWING
LOOPS
PRINT
WORK
OUT
THE
ANSWER
BY
TRACING
THE
CODE
NOT
BY
USING
THE
COMPUTER
A
INT
FOR
INT
N
N
N
N
COUT
B
INT
FOR
INT
N
COUT
N
N
N
C
INT
INT
N
FOR
N
N
N
N
N
COUT
N
WHAT
DO
THE
FOLLOWING
PROGRAM
SEGMENTS
PRINT
FIND
THE
ANSWERS
BY
TRACING
THE
CODE
NOT
BY
USING
THE
COMPUTER
A
INT
N
FOR
INT
I
I
I
N
N
I
COUT
N
B
INT
I
DOUBLE
N
FOR
I
I
I
N
N
I
COUT
I
C
DOUBLE
X
DOUBLE
Y
INT
I
DO
Y
Y
X
X
Y
I
WHILE
X
COUT
I
D
DOUBLE
X
DOUBLE
Y
INT
I
WHILE
Y
X
X
Y
X
Y
I
COUT
I
GIVE
AN
EXAMPLE
OF
A
FOR
LOOP
WHERE
SYMMETRIC
BOUNDS
ARE
MORE
NATURAL
GIVE
AN
EXAMPLE
OF
A
FOR
LOOP
WHERE
ASYMMETRIC
BOUNDS
ARE
MORE
NATURAL
ADD
A
STORYBOARD
PANEL
FOR
THE
CONVERSION
PROGRAM
IN
SECTION
ON
PAGE
THAT
SHOWS
A
SCENARIO
WHERE
A
USER
ENTERS
INCOMPATIBLE
UNITS
IN
SECTION
WE
DECIDED
TO
SHOW
USERS
A
LIST
OF
ALL
VALID
UNITS
IN
THE
PROMPT
IF
THE
PROGRAM
SUPPORTS
MANY
MORE
UNITS
THIS
APPROACH
IS
UNWORKABLE
GIVE
A
STORYBOARD
PANEL
THAT
ILLUSTRATES
AN
ALTERNATE
APPROACH
IF
THE
USER
ENTERS
AN
UNKNOWN
UNIT
A
LIST
OF
ALL
KNOWN
UNITS
IS
SHOWN
CHANGE
THE
STORYBOARDS
IN
SECTION
TO
SUPPORT
A
MENU
THAT
ASKS
USERS
WHETHER
THEY
WANT
TO
CONVERT
UNITS
SEE
PROGRAM
HELP
OR
QUIT
THE
PROGRAM
THE
MENU
SHOULD
BE
DISPLAYED
AT
THE
BEGINNING
OF
THE
PROGRAM
WHEN
A
SEQUENCE
OF
VALUES
HAS
BEEN
CONVERTED
AND
WHEN
AN
ERROR
IS
DISPLAYED
DRAW
A
FLOW
CHART
FOR
A
PROGRAM
THAT
CARRIES
OUT
UNIT
CONVERSIONS
AS
DESCRIBED
IN
SECTION
IN
SECTION
THE
CODE
FOR
FINDING
THE
LARGEST
AND
SMALLEST
INPUT
INITIALIZES
THE
LARGEST
AND
SMALLEST
VARIABLES
WITH
AN
INPUT
VALUE
WHY
CAN
T
YOU
INITIALIZE
THEM
WITH
ZERO
WHAT
ARE
NESTED
LOOPS
GIVE
AN
EXAMPLE
WHERE
A
NESTED
LOOP
IS
TYPICALLY
USED
THE
NESTED
LOOPS
FOR
INT
I
I
HEIGHT
I
FOR
INT
J
J
WIDTH
J
COUT
COUT
ENDL
DISPLAY
A
RECTANGLE
OF
A
GIVEN
WIDTH
AND
HEIGHT
SUCH
AS
WRITE
A
SINGLE
FOR
LOOP
THAT
DISPLAYS
THE
SAME
RECTANGLE
SUPPOSE
YOU
DESIGN
AN
EDUCATIONAL
GAME
TO
TEACH
CHILDREN
HOW
TO
READ
A
CLOCK
HOW
DO
YOU
GENERATE
RANDOM
VALUES
FOR
THE
HOURS
AND
MINUTES
IN
A
TRAVEL
SIMULATION
HARRY
WILL
VISIT
ONE
OF
HIS
FRIENDS
THAT
ARE
LOCATED
IN
THREE
STATES
HE
HAS
TEN
FRIENDS
IN
CALIFORNIA
THREE
IN
NEVADA
AND
TWO
IN
UTAH
HOW
DO
YOU
PRODUCE
A
RANDOM
NUMBER
BETWEEN
AND
DENOTING
THE
DESTINATION
STATE
WITH
A
PROBABILITY
THAT
IS
PROPORTIONAL
TO
THE
NUMBER
OF
FRIENDS
IN
EACH
STATE
WRITE
PROGRAMS
WITH
LOOPS
THAT
COMPUTE
A
THE
SUM
OF
ALL
EVEN
NUMBERS
BETWEEN
AND
INCLUSIVE
B
THE
SUM
OF
ALL
SQUARES
BETWEEN
AND
INCLUSIVE
C
ALL
POWERS
OF
FROM
UP
TO
D
THE
SUM
OF
ALL
ODD
NUMBERS
BETWEEN
A
AND
B
INCLUSIVE
WHERE
A
AND
B
ARE
INPUTS
E
THE
SUM
OF
ALL
ODD
DIGITS
OF
AN
INPUT
FOR
EXAMPLE
IF
THE
INPUT
IS
THE
SUM
WOULD
BE
WRITE
PROGRAMS
THAT
READ
A
SEQUENCE
OF
INTEGER
INPUTS
AND
PRINT
A
THE
SMALLEST
AND
LARGEST
OF
THE
INPUTS
B
THE
NUMBER
OF
EVEN
AND
ODD
INPUTS
C
CUMULATIVE
TOTALS
FOR
EXAMPLE
IF
THE
INPUT
IS
THE
PROGRAM
SHOULD
PRINT
D
ALL
ADJACENT
DUPLICATES
FOR
EXAMPLE
IF
THE
INPUT
IS
THE
PROGRAM
SHOULD
PRINT
WRITE
PROGRAMS
THAT
READ
A
LINE
OF
INPUT
AS
A
STRING
AND
PRINT
A
ONLY
THE
UPPERCASE
LETTERS
IN
THE
STRING
B
EVERY
SECOND
LETTER
OF
THE
STRING
C
THE
STRING
WITH
ALL
VOWELS
REPLACED
BY
AN
UNDERSCORE
D
THE
NUMBER
OF
VOWELS
IN
THE
STRING
E
THE
POSITIONS
OF
ALL
VOWELS
IN
THE
STRING
COMPLETE
THE
PROGRAM
IN
HOW
TO
ON
PAGE
YOUR
PROGRAM
SHOULD
READ
TWELVE
TEMPERATURE
VALUES
AND
PRINT
THE
MONTH
WITH
THE
HIGHEST
TEMPERATURE
CREDIT
CARD
NUMBER
CHECK
THE
LAST
DIGIT
OF
A
CREDIT
CARD
NUMBER
IS
THE
CHECK
DIGIT
WHICH
PROTECTS
AGAINST
TRANSCRIPTION
ERRORS
SUCH
AS
AN
ERROR
IN
A
SINGLE
DIGIT
OR
SWITCHING
TWO
DIGITS
THE
FOLLOWING
METHOD
IS
USED
TO
VERIFY
ACTUAL
CREDIT
CARD
NUMBERS
BUT
FOR
SIMPLICITY
WE
WILL
DESCRIBE
IT
FOR
NUMBERS
WITH
DIGITS
INSTEAD
OF
STARTING
FROM
THE
RIGHTMOST
DIGIT
FORM
THE
SUM
OF
EVERY
OTHER
DIGIT
FOR
EXAMPLE
IF
THE
CREDIT
CARD
NUMBER
IS
THEN
YOU
FORM
THE
SUM
DOUBLE
EACH
OF
THE
DIGITS
THAT
WERE
NOT
INCLUDED
IN
THE
PRECEDING
STEP
ADD
ALL
DIGITS
OF
THE
RESULTING
NUMBERS
FOR
EXAMPLE
WITH
THE
NUMBER
GIVEN
ABOVE
DOUBLING
THE
DIGITS
STARTING
WITH
THE
NEXT
TO
LAST
ONE
YIELDS
ADDING
ALL
DIGITS
IN
THESE
VALUES
YIELDS
ADD
THE
SUMS
OF
THE
TWO
PRECEDING
STEPS
IF
THE
LAST
DIGIT
OF
THE
RESULT
IS
THE
NUMBER
IS
VALID
IN
OUR
CASE
SO
THE
NUMBER
IS
VALID
WRITE
A
PROGRAM
THAT
IMPLEMENTS
THIS
ALGORITHM
THE
USER
SHOULD
SUPPLY
AN
DIGIT
NUMBER
AND
YOU
SHOULD
PRINT
OUT
WHETHER
THE
NUMBER
IS
VALID
OR
NOT
IF
IT
IS
NOT
VALID
YOU
SHOULD
PRINT
OUT
THE
VALUE
OF
THE
CHECK
DIGIT
THAT
WOULD
MAKE
THE
NUMBER
VALID
CURRENCY
CONVERSION
WRITE
A
PROGRAM
THAT
FIRST
ASKS
THE
USER
TO
TYPE
TODAY
EX
CHANGE
RATE
BETWEEN
U
DOLLARS
AND
JAPANESE
YEN
THEN
READS
U
DOLLAR
VALUES
AND
CONVERTS
EACH
TO
YEN
USE
AS
A
SENTINEL
WRITE
A
PROGRAM
THAT
FIRST
ASKS
THE
USER
TO
TYPE
IN
TODAY
EXCHANGE
RATE
BETWEEN
U
DOLLARS
AND
JAPANESE
YEN
THEN
READS
U
DOLLAR
VALUES
AND
CONVERTS
EACH
TO
JAPANESE
YEN
USE
AS
THE
SENTINEL
VALUE
TO
DENOTE
THE
END
OF
DOLLAR
INPUTS
THEN
THE
PROGRAM
READS
A
SEQUENCE
OF
YEN
AMOUNTS
AND
CONVERTS
THEM
TO
DOLLARS
THE
SECOND
SEQUENCE
IS
TERMINATED
BY
ANOTHER
ZERO
VALUE
WRITE
A
PROGRAM
THAT
READS
A
SET
OF
FLOATING
POINT
VALUES
ASK
THE
USER
TO
ENTER
THE
VALUES
THEN
PRINT
THE
AVERAGE
OF
THE
VALUES
THE
SMALLEST
OF
THE
VALUES
THE
LARGEST
OF
THE
VALUES
THE
RANGE
THAT
IS
THE
DIFFERENCE
BETWEEN
THE
SMALLEST
AND
LARGEST
OF
COURSE
YOU
MAY
ONLY
PROMPT
FOR
THE
VALUES
ONCE
TRANSLATE
THE
FOLLOWING
PSEUDOCODE
FOR
FINDING
THE
MINIMUM
VALUE
FROM
A
SET
OF
INPUTS
INTO
A
C
PROGRAM
SET
A
BOOLEAN
VARIABLE
FIRST
TO
TRUE
WHILE
ANOTHER
VALUE
HAS
BEEN
READ
SUCCESSFULLY
IF
FIRST
IS
TRUE
SET
THE
MINIMUM
TO
THE
VALUE
SET
FIRST
TO
FALSE
ELSE
IF
THE
VALUE
IS
LESS
THAN
THE
MINIMUM
SET
THE
MINIMUM
TO
THE
VALUE
PRINT
THE
MINIMUM
TRANSLATE
THE
FOLLOWING
PSEUDOCODE
FOR
RANDOMLY
PERMUTING
THE
CHARACTERS
IN
A
STRING
INTO
A
C
PROGRAM
READ
A
WORD
REPEAT
WORD
LENGTH
TIMES
PICK
A
RANDOM
POSITION
I
IN
THE
WORD
PICK
A
RANDOM
POSITION
J
I
IN
THE
WORD
SWAP
THE
LETTERS
AT
POSITIONS
J
AND
I
PRINT
THE
WORD
TO
SWAP
THE
LETTERS
CONSTRUCT
SUBSTRINGS
AS
FOLLOWS
FIRST
I
THEN
REPLACE
THE
STRING
WITH
MIDDLE
J
LAST
FIRST
WORD
SUBSTR
J
MIDDLE
WORD
SUBSTR
I
LAST
WRITE
A
PROGRAM
THAT
READS
A
WORD
AND
PRINTS
EACH
CHARACTER
OF
THE
WORD
ON
A
SEPA
RATE
LINE
FOR
EXAMPLE
IF
THE
USER
PROVIDES
THE
INPUT
HARRY
THE
PROGRAM
PRINTS
H
A
R
R
Y
WRITE
A
PROGRAM
THAT
READS
A
WORD
AND
PRINTS
THE
WORD
IN
REVERSE
FOR
EXAMPLE
IF
THE
USER
PROVIDES
THE
INPUT
HARRY
THE
PROGRAM
PRINTS
YRRAH
WRITE
A
PROGRAM
THAT
READS
A
WORD
AND
PRINTS
THE
NUMBER
OF
VOWELS
IN
THE
WORD
FOR
THIS
EXERCISE
ASSUME
THAT
A
E
I
O
U
Y
ARE
VOWELS
FOR
EXAMPLE
IF
THE
USER
PROVIDES
THE
INPUT
HARRY
THE
PROGRAM
PRINTS
VOWELS
WRITE
A
PROGRAM
THAT
READS
A
WORD
AND
PRINTS
THE
NUMBER
OF
SYLLABLES
IN
THE
WORD
FOR
THIS
EXERCISE
ASSUME
THAT
SYLLABLES
ARE
DETERMINED
AS
FOLLOWS
EACH
SEQUENCE
OF
VOWELS
A
E
I
O
U
Y
EXCEPT
FOR
THE
LAST
E
IN
A
WORD
IS
A
VOWEL
HOWEVER
IF
THAT
ALGO
RITHM
YIELDS
A
COUNT
OF
CHANGE
IT
TO
FOR
EXAMPLE
WORD
SYLLABLES
HARRY
HAIRY
HARE
THE
WRITE
A
PROGRAM
THAT
READS
A
WORD
AND
PRINTS
ALL
SUBSTRINGS
SORTED
BY
LENGTH
FOR
EXAMPLE
IF
THE
USER
PROVIDES
THE
INPUT
RUM
THE
PROGRAM
PRINTS
R
U
M
RU
UM
RUM
WRITE
A
PROGRAM
THAT
READS
A
NUMBER
AND
PRINTS
ALL
OF
ITS
BINARY
DIGITS
PRINT
THE
REMAINDER
NUMBER
THEN
REPLACE
THE
NUMBER
WITH
NUMBER
KEEP
GOING
UNTIL
THE
NUMBER
IS
FOR
EXAMPLE
IF
THE
USER
PROVIDES
THE
INPUT
THE
OUTPUT
SHOULD
BE
MEAN
AND
STANDARD
DEVIATION
WRITE
A
PROGRAM
THAT
READS
A
SET
OF
FLOATING
POINT
DATA
VALUES
CHOOSE
AN
APPROPRIATE
MECHANISM
FOR
PROMPTING
FOR
THE
END
OF
THE
DATA
SET
WHEN
ALL
VALUES
HAVE
BEEN
READ
PRINT
OUT
THE
COUNT
OF
THE
VALUES
THE
AVERAGE
AND
THE
STANDARD
DEVIATION
THE
AVERAGE
OF
A
DATA
SET
XN
IS
X
XI
N
WHERE
XI
XN
IS
THE
SUM
OF
THE
INPUT
VALUES
THE
STANDARD
DEVIATION
IS
HOWEVER
THIS
FORMULA
IS
NOT
SUITABLE
FOR
THE
TASK
BY
THE
TIME
THE
PROGRAM
HAS
COMPUTED
X
THE
INDIVIDUAL
XI
ARE
LONG
GONE
UNTIL
YOU
KNOW
HOW
TO
SAVE
THESE
VALUES
USE
THE
NUMERICALLY
LESS
STABLE
FORMULA
YOU
CAN
COMPUTE
THIS
QUANTITY
BY
KEEPING
TRACK
OF
THE
COUNT
THE
SUM
AND
THE
SUM
OF
SQUARES
AS
YOU
PROCESS
THE
INPUT
VALUES
THE
FIBONACCI
NUMBERS
ARE
DEFINED
BY
THE
SEQUENCE
FN
FN
FN
REFORMULATE
THAT
AS
FNEW
FIBONACCI
NUMBERS
DESCRIBE
THE
GROWTH
OF
A
RABBIT
POPULATION
AFTER
THAT
DISCARD
WHICH
IS
NO
LONGER
NEEDED
AND
SET
TO
AND
TO
FNEW
REPEAT
FNEW
AN
APPROPRIATE
NUMBER
OF
TIMES
IMPLEMENT
A
PROGRAM
THAT
COMPUTES
THE
FIBONACCI
NUMBERS
IN
THAT
WAY
FACTORING
OF
INTEGERS
WRITE
A
PROGRAM
THAT
ASKS
THE
USER
FOR
AN
INTEGER
AND
THEN
PRINTS
OUT
ALL
ITS
FACTORS
FOR
EXAMPLE
WHEN
THE
USER
ENTERS
THE
PROGRAM
SHOULD
PRINT
PRIME
NUMBERS
WRITE
A
PROGRAM
THAT
PROMPTS
THE
USER
FOR
AN
INTEGER
AND
THEN
PRINTS
OUT
ALL
PRIME
NUMBERS
UP
TO
THAT
INTEGER
FOR
EXAMPLE
WHEN
THE
USER
ENTERS
THE
PROGRAM
SHOULD
PRINT
RECALL
THAT
A
NUMBER
IS
A
PRIME
NUMBER
IF
IT
IS
NOT
DIVISIBLE
BY
ANY
NUMBER
EXCEPT
AND
ITSELF
WRITE
A
PROGRAM
THAT
PRINTS
A
MULTIPLICATION
TABLE
LIKE
THIS
WRITE
A
PROGRAM
THAT
READS
AN
INTEGER
AND
DISPLAYS
USING
ASTERISKS
A
FILLED
AND
HOLLOW
SQUARE
PLACED
NEXT
TO
EACH
OTHER
FOR
EXAMPLE
IF
THE
SIDE
LENGTH
IS
THE
PROGRAM
SHOULD
DISPLAY
WRITE
A
PROGRAM
THAT
READS
AN
INTEGER
AND
DISPLAYS
USING
ASTERISKS
A
FILLED
DIAMOND
OF
THE
GIVEN
SIDE
LENGTH
FOR
EXAMPLE
IF
THE
SIDE
LENGTH
IS
THE
PROGRAM
SHOULD
DISPLAY
THE
GAME
OF
NIM
THIS
IS
A
WELL
KNOWN
GAME
WITH
A
NUMBER
OF
VARIANTS
THE
FOLLOWING
VARIANT
HAS
AN
INTERESTING
WINNING
STRATEGY
TWO
PLAYERS
ALTERNATELY
TAKE
MARBLES
FROM
A
PILE
IN
EACH
MOVE
A
PLAYER
CHOOSES
HOW
MANY
MARBLES
TO
TAKE
THE
PLAYER
MUST
TAKE
AT
LEAST
ONE
BUT
AT
MOST
HALF
OF
THE
MARBLES
THEN
THE
OTHER
PLAYER
TAKES
A
TURN
THE
PLAYER
WHO
TAKES
THE
LAST
MARBLE
LOSES
YOU
WILL
WRITE
A
PROGRAM
IN
WHICH
THE
COMPUTER
PLAYS
AGAINST
A
HUMAN
OPPONENT
GENERATE
A
RANDOM
INTEGER
BETWEEN
AND
TO
DENOTE
THE
INITIAL
SIZE
OF
THE
PILE
GENERATE
A
RANDOM
INTEGER
BETWEEN
AND
TO
DECIDE
WHETHER
THE
COMPUTER
OR
THE
HUMAN
TAKES
THE
FIRST
TURN
GENERATE
A
RANDOM
INTEGER
BETWEEN
AND
TO
DECIDE
WHETHER
THE
COMPUTER
PLAYS
SMART
OR
STUPID
IN
STUPID
MODE
THE
COMPUTER
SIMPLY
TAKES
A
RANDOM
LEGAL
VALUE
BETWEEN
AND
N
FROM
THE
PILE
WHENEVER
IT
HAS
A
TURN
IN
SMART
MODE
THE
COMPUTER
TAKES
OFF
ENOUGH
MARBLES
TO
MAKE
THE
SIZE
OF
THE
PILE
A
POWER
OF
TWO
MINUS
THAT
IS
OR
THAT
IS
ALWAYS
A
LEGAL
MOVE
EXCEPT
WHEN
THE
SIZE
OF
THE
PILE
IS
CURRENTLY
ONE
LESS
THAN
A
POWER
OF
TWO
IN
THAT
CASE
THE
COMPUTER
MAKES
A
RANDOM
LEGAL
MOVE
YOU
WILL
NOTE
THAT
THE
COMPUTER
CANNOT
BE
BEATEN
IN
SMART
MODE
WHEN
IT
HAS
THE
FIRST
MOVE
UNLESS
THE
PILE
SIZE
HAPPENS
TO
BE
OR
OF
COURSE
A
HUMAN
PLAYER
WHO
HAS
THE
FIRST
TURN
AND
KNOWS
THE
WINNING
STRATEGY
CAN
WIN
AGAINST
THE
COMPUTER
THE
DRUNKARD
WALK
A
DRUNKARD
IN
A
GRID
OF
STREETS
RANDOMLY
PICKS
ONE
OF
FOUR
DIRECTIONS
AND
STUMBLES
TO
THE
NEXT
INTERSECTION
THEN
AGAIN
RANDOMLY
PICKS
ONE
OF
FOUR
DIRECTIONS
AND
SO
ON
YOU
MIGHT
THINK
THAT
ON
AVERAGE
THE
DRUNKARD
DOESN
T
MOVE
VERY
FAR
BECAUSE
THE
CHOICES
CANCEL
EACH
OTHER
OUT
BUT
THAT
IS
ACTUALLY
NOT
THE
CASE
REPRESENT
LOCATIONS
AS
INTEGER
PAIRS
X
Y
IMPLEMENT
THE
DRUNKARD
WALK
OVER
INTERSECTIONS
AND
PRINT
THE
BEGINNING
AND
ENDING
LOCATION
THE
MONTY
HALL
PARADOX
MARILYN
VOS
SAVANT
DESCRIBED
THE
FOLLOWING
PROBLEM
LOOSELY
BASED
ON
A
GAME
SHOW
HOSTED
BY
MONTY
HALL
IN
A
POPULAR
MAGAZINE
SUPPOSE
YOU
RE
ON
A
GAME
SHOW
AND
YOU
RE
GIVEN
THE
CHOICE
OF
THREE
DOORS
BEHIND
ONE
DOOR
IS
A
CAR
BEHIND
THE
OTHERS
GOATS
YOU
PICK
A
DOOR
SAY
NO
AND
THE
HOST
WHO
KNOWS
WHAT
BEHIND
THE
DOORS
OPENS
ANOTHER
DOOR
SAY
NO
WHICH
HAS
A
GOAT
HE
THEN
SAYS
TO
YOU
DO
YOU
WANT
TO
PICK
DOOR
NO
IS
IT
TO
YOUR
ADVAN
TAGE
TO
SWITCH
YOUR
CHOICE
MS
VOS
SAVANT
PROVED
THAT
IT
IS
TO
YOUR
ADVANTAGE
BUT
MANY
OF
HER
READERS
INCLUD
ING
SOME
MATHEMATICS
PROFESSORS
DISAGREED
ARGUING
THAT
THE
PROBABILITY
WOULD
NOT
CHANGE
BECAUSE
ANOTHER
DOOR
WAS
OPENED
YOUR
TASK
IS
TO
SIMULATE
THIS
GAME
SHOW
IN
EACH
ITERATION
RANDOMLY
PICK
A
DOOR
NUMBER
BETWEEN
AND
FOR
PLACING
THE
CAR
RANDOMLY
HAVE
THE
PLAYER
PICK
A
DOOR
RANDOMLY
HAVE
THE
GAME
SHOW
HOST
PICK
ONE
OF
THE
TWO
DOORS
HAVING
A
GOAT
NOW
INCREMENT
A
COUNTER
FOR
STRATEGY
IF
THE
PLAYER
WINS
BY
SWITCHING
TO
THE
THIRD
DOOR
AND
INCREMENT
A
COUNTER
FOR
STRATEGY
IF
THE
PLAYER
WINS
BY
STICKING
WITH
THE
ORIGINAL
CHOICE
RUN
ITERATIONS
AND
PRINT
BOTH
COUNTERS
THE
BUFFON
NEEDLE
EXPERIMENT
THE
FOLLOWING
EXPERIMENT
WAS
DEVISED
BY
COMTE
GEORGES
LOUIS
LECLERC
DE
BUFFON
A
FRENCH
NATURALIST
A
NEEDLE
OF
LENGTH
INCH
IS
DROPPED
ONTO
PAPER
THAT
IS
RULED
WITH
LINES
INCHES
APART
IF
THE
NEEDLE
DROPS
ONTO
A
LINE
WE
COUNT
IT
AS
A
HIT
SEE
FIGURE
BUFFON
CONJECTURED
THAT
THE
QUOTIENT
TRIES
HITS
APPROXIMATES
FIGURE
THE
BUFFON
NEEDLE
EXPERIMENT
FIGURE
A
HIT
IN
THE
BUFFON
NEEDLE
EXPERIMENT
YHIGH
YLOW
FOR
THE
BUFFON
NEEDLE
EXPERIMENT
YOU
MUST
GENERATE
TWO
RANDOM
NUMBERS
ONE
TO
DESCRIBE
THE
STARTING
POSITION
AND
ONE
TO
DESCRIBE
THE
ANGLE
OF
THE
NEEDLE
WITH
THE
X
AXIS
THEN
YOU
NEED
TO
TEST
WHETHER
THE
NEEDLE
TOUCHES
A
GRID
LINE
GENERATE
THE
LOWER
POINT
OF
THE
NEEDLE
ITS
X
COORDINATE
IS
IRRELEVANT
AND
YOU
MAY
ASSUME
ITS
Y
COORDINATE
YLOW
TO
BE
ANY
RANDOM
NUMBER
BETWEEN
AND
THE
ANGLE
BETWEEN
THE
NEEDLE
AND
THE
X
AXIS
CAN
BE
ANY
VALUE
BETWEEN
DEGREES
AND
DEGREES
RADIANS
THE
UPPER
END
OF
THE
NEEDLE
HAS
Y
COORDINATE
YHIGH
YLOW
SIN
THE
NEEDLE
IS
A
HIT
IF
YHIGH
IS
AT
LEAST
AS
SHOWN
IN
FIGURE
STOP
AFTER
TRIES
AND
PRINT
THE
QUOTIENT
TRIES
HITS
THIS
PROGRAM
IS
NOT
SUITABLE
FOR
COMPUTING
THE
VALUE
OF
YOU
NEED
IN
THE
COMPUTATION
OF
THE
ANGLE
ENGINEERING
IN
A
PREDATOR
PREY
SIMULATION
YOU
COMPUTE
THE
POPULATIONS
OF
PREDATORS
AND
PREY
USING
THE
FOLLOWING
EQUATIONS
PREYN
PREDN
PREYN
A
B
PREDN
PREDN
C
D
PREYN
HERE
A
IS
THE
RATE
AT
WHICH
PREY
BIRTH
EXCEEDS
NATURAL
DEATH
B
IS
THE
RATE
OF
PREDATION
C
IS
THE
RATE
AT
WHICH
PREDATOR
DEATHS
EXCEED
BIRTHS
WITHOUT
FOOD
AND
D
REPRESENTS
PREDATOR
INCREASE
IN
THE
PRESENCE
OF
FOOD
WRITE
A
PROGRAM
THAT
PROMPTS
USERS
FOR
THESE
RATES
THE
INITIAL
POPULATION
SIZES
AND
THE
NUMBER
OF
PERIODS
THEN
PRINT
THE
POPULATIONS
FOR
THE
GIVEN
NUMBER
OF
PERIODS
AS
INPUTS
TRY
A
B
C
AND
D
WITH
INITIAL
PREY
AND
PREDATOR
POPULATIONS
OF
AND
ENGINEERING
PROJECTILE
FLIGHT
SUPPOSE
A
CANNONBALL
IS
PROPELLED
STRAIGHT
INTO
THE
AIR
WITH
A
STARTING
VELOCITY
ANY
CALCULUS
BOOK
WILL
STATE
THAT
THE
POSITION
OF
THE
BALL
AFTER
T
SECONDS
IS
T
WHERE
G
M
IS
THE
GRAVITATIONAL
FORCE
OF
THE
EARTH
NO
CALCULUS
BOOK
EVER
MENTIONS
WHY
SOMEONE
WOULD
WANT
TO
CARRY
OUT
SUCH
AN
OBVIOUSLY
DANGEROUS
EXPERIMENT
SO
WE
WILL
DO
IT
IN
THE
SAFETY
OF
THE
COMPUTER
IN
FACT
WE
WILL
CONFIRM
THE
THEOREM
FROM
CALCULUS
BY
A
SIMULATION
IN
OUR
SIMULA
TION
WE
WILL
CONSIDER
HOW
THE
BALL
MOVES
IN
VERY
SHORT
TIME
INTERVALS
T
IN
A
SHORT
TIME
INTERVAL
THE
VELOCITY
V
IS
NEARLY
CONSTANT
AND
WE
CAN
COMPUTE
THE
DISTANCE
THE
BALL
MOVES
AS
V
T
IN
OUR
PROGRAM
WE
WILL
SIMPLY
SET
CONST
DOUBLE
AND
UPDATE
THE
POSITION
BY
V
THE
VELOCITY
CHANGES
CONSTANTLY
IN
FACT
IT
IS
REDUCED
BY
THE
GRAVITATIONAL
FORCE
OF
THE
EARTH
IN
A
SHORT
TIME
INTERVAL
V
G
T
WE
MUST
KEEP
THE
VELOCITY
UPDATED
AS
V
V
G
IN
THE
NEXT
ITERATION
THE
NEW
VELOCITY
IS
USED
TO
UPDATE
THE
DISTANCE
NOW
RUN
THE
SIMULATION
UNTIL
THE
CANNONBALL
FALLS
BACK
TO
THE
EARTH
GET
THE
INITIAL
VELOCITY
AS
AN
INPUT
M
SEC
IS
A
GOOD
VALUE
UPDATE
THE
POSITION
AND
VELOCITY
TIMES
PER
SECOND
BUT
PRINT
OUT
THE
POSITION
ONLY
EVERY
FULL
SECOND
ALSO
PRINTOUT
THE
VALUES
FROM
THE
EXACT
FORMULA
T
FOR
COMPARISON
NOTE
YOU
MAY
WONDER
WHETHER
THERE
IS
A
BENEFIT
TO
THIS
SIMULATION
WHEN
AN
EXACT
FORMULA
IS
AVAILABLE
WELL
THE
FORMULA
FROM
THE
CALCULUS
BOOK
IS
NOT
EXACT
ACTUALLY
THE
GRAVITATIONAL
FORCE
DIMINISHES
THE
FARTHER
THE
CANNONBALL
IS
AWAY
FROM
THE
SURFACE
OF
THE
EARTH
THIS
COMPLICATES
THE
ALGEBRA
SUFFICIENTLY
THAT
IT
IS
NOT
POSSIBLE
TO
GIVE
AN
EXACT
FORMULA
FOR
THE
ACTUAL
MOTION
BUT
THE
COMPUTER
SIMULATION
CAN
SIMPLY
BE
EXTENDED
TO
APPLY
A
VARIABLE
GRAVITATIONAL
FORCE
FOR
CANNONBALLS
THE
CALCULUS
BOOK
FORMULA
IS
ACTUALLY
GOOD
ENOUGH
BUT
COMPUTERS
ARE
NECESSARY
TO
COMPUTE
ACCURATE
TRAJECTORIES
FOR
HIGHER
FLYING
OBJECTS
SUCH
AS
BALLISTIC
MISSILES
ENGINEERING
A
SIMPLE
MODEL
FOR
THE
HULL
OF
A
SHIP
IS
GIVEN
BY
B
Z
Y
L
T
WHERE
B
IS
THE
BEAM
L
IS
THE
LENGTH
AND
T
IS
THE
DRAFT
NOTE
THERE
ARE
TWO
VALUES
OF
Y
FOR
EACH
X
AND
Z
BECAUSE
THE
HULL
IS
SYMMETRIC
FROM
STARBOARD
TO
PORT
THE
CROSS
SECTIONAL
AREA
AT
A
POINT
X
IS
CALLED
THE
SECTION
IN
NAUTICAL
PARLANCE
TO
COMPUTE
IT
LET
Z
GO
FROM
TO
T
IN
N
INCREMENTS
EACH
OF
SIZE
T
N
FOR
EACH
VALUE
OF
Z
COMPUTE
THE
VALUE
FOR
Y
THEN
SUM
THE
AREAS
OF
TRAPEZOIDAL
STRIPS
AT
RIGHT
ARE
THE
STRIPS
WHERE
N
WRITE
A
PROGRAM
THAT
READS
IN
VALUES
FOR
B
L
T
X
AND
N
AND
THEN
PRINTS
OUT
THE
CROSS
SECTIONAL
AREA
AT
X
ENGINEERING
RADIOACTIVE
DECAY
OF
RADIOACTIVE
MATERIALS
CAN
BE
MODELED
BY
THE
EQUATION
A
T
LOG
H
WHERE
A
IS
THE
AMOUNT
OF
THE
MATERIAL
AT
TIME
T
IS
THE
AMOUNT
AT
TIME
AND
H
IS
THE
HALF
LIFE
TECHNETIUM
IS
A
RADIOISOTOPE
THAT
IS
USED
IN
IMAGING
OF
THE
BRAIN
IT
HAS
A
HALF
LIFE
OF
HOURS
YOUR
PROGRAM
SHOULD
DISPLAY
THE
RELATIVE
AMOUNT
A
IN
A
PATIENT
BODY
EVERY
HOUR
FOR
HOURS
AFTER
RECEIVING
A
DOSE
ENGINEERING
THE
PHOTO
AT
LEFT
SHOWS
AN
ELECTRIC
DEVICE
CALLED
A
TRANSFORMER
TRANSFORMERS
ARE
OFTEN
CONSTRUCTED
BY
WRAPPING
COILS
OF
WIRE
AROUND
A
FERRITE
CORE
THE
FIGURE
BELOW
ILLUSTRATES
A
SITUATION
THAT
OCCURS
IN
VARIOUS
AUDIO
DEVICES
SUCH
AS
CELL
PHONES
AND
MUSIC
PLAYERS
IN
THIS
CIRCUIT
A
TRANSFORMER
IS
USED
TO
CONNECT
A
SPEAKER
TO
THE
OUTPUT
OF
AN
AUDIO
AMPLIFIER
THE
SYMBOL
USED
TO
REPRESENT
THE
TRANSFORMER
IS
INTENDED
TO
SUGGEST
TWO
COILS
OF
WIRE
THE
PARAMETER
N
OF
THE
TRANSFORMER
IS
CALLED
THE
TURNS
RATIO
OF
THE
TRANS
FORMER
THE
NUMBER
OF
TIMES
THAT
A
WIRE
IS
WRAPPED
AROUND
THE
CORE
TO
FORM
A
COIL
IS
CALLED
THE
NUMBER
OF
TURNS
IN
THE
COIL
THE
TURNS
RATIO
IS
LITERALLY
THE
RATIO
OF
THE
NUMBER
OF
TURNS
IN
THE
TWO
COILS
OF
WIRE
WHEN
DESIGNING
THE
CIRCUIT
WE
ARE
CONCERNED
PRIMARILY
WITH
THE
VALUE
OF
THE
POWER
DELIVERED
TO
THE
SPEAKERS
THAT
POWER
CAUSES
THE
SPEAKERS
TO
PRODUCE
THE
SOUNDS
WE
WANT
TO
HEAR
SUPPOSE
WE
WERE
TO
CONNECT
THE
SPEAKERS
DIRECTLY
TO
THE
AMPLIFIER
WITHOUT
USING
THE
TRANSFORMER
SOME
FRACTION
OF
THE
POWER
AVAILABLE
FROM
THE
AMPLIFIER
WOULD
GET
TO
THE
SPEAKERS
THE
REST
OF
THE
AVAILABLE
POWER
WOULD
BE
LOST
IN
THE
AMPLIFIER
ITSELF
THE
TRANSFORMER
IS
ADDED
TO
THE
CIRCUIT
TO
INCREASE
THE
FRACTION
OF
THE
AMPLIFIER
POWER
THAT
IS
DELIVERED
TO
THE
SPEAKERS
THE
POWER
PS
DELIVERED
TO
THE
SPEAKERS
IS
CALCULATED
USING
THE
FORMULA
PS
RS
NVS
N
RS
WRITE
A
C
PROGRAM
THAT
MODELS
THE
CIRCUIT
SHOWN
AND
VARIES
THE
TURNS
RATIO
FROM
TO
IN
INCREMENTS
THEN
DETERMINES
THE
VALUE
OF
THE
TURNS
RATIO
THAT
MAXI
MIZES
THE
POWER
DELIVERED
TO
THE
SPEAKERS
YEARS
YEARS
ADD
A
STATEMENT
COUT
BALANCE
ENDL
AS
THE
LAST
STATEMENT
IN
THE
WHILE
LOOP
THE
PROGRAM
PRINTS
THE
SAME
OUTPUT
THIS
IS
BECAUSE
THE
BALANCE
AFTER
YEARS
IS
SLIGHTLY
BELOW
AND
AFTER
YEARS
IT
IS
SLIGHTLY
ABOVE
NOTE
THAT
THE
VALUE
IS
PRINTED
EVEN
THOUGH
IT
IS
LARGER
THAN
N
OUTPUT
N
OUTPUT
THERE
IS
A
COMMA
AFTER
THE
LAST
VALUE
USUALLY
COMMAS
ARE
BETWEEN
VALUES
ONLY
A
N
R
I
THE
CODE
COMPUTES
AN
N
OUTPUT
THIS
IS
AN
INFINITE
LOOP
N
IS
NEVER
EQUAL
TO
COUNT
N
THIS
YIELDS
THE
CORRECT
ANSWER
THE
NUMBER
HAS
DIGITS
COUNT
N
THIS
YIELDS
THE
WRONG
ANSWER
THE
NUMBER
ALSO
HAS
DIGITS
THE
LOOP
CONDITION
SHOULD
HAVE
BEEN
WHILE
TEMP
INT
YEAR
WHILE
YEAR
NYEARS
BALANCE
BALANCE
RATE
COUT
SETW
YEAR
SETW
BALANCE
ENDL
YEAR
NUMBERS
FOR
INT
I
I
I
I
COUT
N
ENDL
INT
SUM
FOR
INT
I
I
N
I
SUM
SUM
I
FOR
INT
YEAR
BALANCE
YEAR
HOWEVER
IT
IS
BEST
NOT
TO
USE
A
FOR
LOOP
IN
THIS
CASE
BECAUSE
THE
LOOP
CONDITION
DOES
NOT
RELATE
TO
THE
YEAR
VARIABLE
A
WHILE
LOOP
WOULD
BE
A
BETTER
CHOICE
DO
COUT
ENTER
A
VALUE
BETWEEN
AND
CIN
VALUE
WHILE
VALUE
VALUE
INT
VALUE
WHILE
VALUE
COUT
ENTER
A
VALUE
CIN
VALUE
HERE
THE
VARIABLE
VALUE
HAD
TO
BE
INITIALIZED
WITH
AN
ARTIFICIAL
VALUE
TO
ENSURE
THAT
THE
LOOP
IS
ENTERED
AT
LEAST
ONCE
YES
THE
DO
LOOP
DO
BODY
WHILE
CONDITION
IS
EQUIVALENT
TO
THIS
WHILE
LOOP
BOOL
FIRST
TRUE
WHILE
FIRST
CONDITION
BODY
FIRST
FALSE
INT
X
INT
SUM
DO
CIN
X
SUM
SUM
X
WHILE
X
INT
X
INT
PREVIOUS
DO
PREVIOUS
X
CIN
X
SUM
SUM
X
WHILE
PREVIOUS
X
NO
DATA
THE
FIRST
CHECK
ENDS
THE
LOOP
AFTER
THE
SENTINEL
HAS
BEEN
READ
THE
SECOND
CHECK
ENSURES
THAT
THE
SENTINEL
IS
NOT
PROCESSED
AS
AN
INPUT
VALUE
THE
WHILE
LOOP
WOULD
NEVER
BE
ENTERED
THE
USER
WOULD
NEVER
BE
PROMPTED
FOR
IN
PUT
SINCE
COUNT
STAYS
THE
PROGRAM
WOULD
THEN
PRINT
NO
DATA
THE
STREAM
ALSO
FAILS
A
MORE
ACCURATE
PROMPT
WOULD
HAVE
BEEN
ENTER
VALUES
A
KEY
OTHER
THAN
A
DIGIT
TO
QUIT
BUT
THAT
MIGHT
BE
MORE
CONFUSING
TO
THE
PROGRAM
USER
WHO
WOULD
NEED
NOW
PONDER
WHICH
KEY
TO
CHOOSE
YOU
DON
T
KNOW
WHETHER
THE
INPUT
FAILS
UNTIL
AFTER
YOU
TRY
READING
INPUT
COMPUTING
THE
AVERAGE
SIMPLE
CONVERSION
UNKNOWN
UNIT
PROGRAM
DOESN
T
UNDERSTAND
QUESTION
SYNTAX
ONE
SCORE
IS
NOT
ENOUGH
IT
WOULD
NOT
BE
POSSIBLE
TO
IMPLEMENT
THIS
INTERFACE
USING
THE
C
FEATURES
WE
HAVE
COVERED
UP
TO
THIS
POINT
THERE
IS
NO
WAY
FOR
THE
PROGRAM
TO
KNOW
WHEN
THE
FIRST
SET
OF
INPUTS
ENDS
WHEN
YOU
READ
NUMBERS
WITH
CIN
VALUE
IT
IS
YOUR
CHOICE
WHETHER
TO
PUT
THEM
ON
A
SINGLE
LINE
OR
MULTIPLE
LINES
COMPARING
TWO
INTEREST
RATES
YEAR
00
00
00
THE
TOTAL
IS
ZERO
DOUBLE
TOTAL
DOUBLE
INPUT
WHILE
CIN
INPUT
IF
INPUT
TOTAL
TOTAL
INPUT
POSITION
IS
STR
LENGTH
THE
LOOP
WILL
STOP
WHEN
A
MATCH
IS
FOUND
BUT
YOU
CANNOT
ACCESS
THE
MATCH
BECAUSE
POSITION
IS
NOT
DEFINED
OUTSIDE
THE
LOOP
START
THE
LOOP
AT
THE
END
OF
STRING
BOOL
FOUND
FALSE
INT
POSITION
STR
LENGTH
WHILE
FOUND
POSITION
STRING
CH
STR
SUBSTR
POSITION
IF
CH
FOUND
TRUE
ELSE
POSITION
UNLESS
THE
INPUT
CONTAINS
ZERO
OR
NEGATIVE
NUMBERS
THE
SMALLEST
VALUE
IS
INCORRECTLY
COMPUTED
AS
WHEN
EXECUTING
CIN
PREVIOUS
CIN
FAILS
AND
PREVIOUS
IS
UNCHANGED
THE
STATEMENT
CIN
INPUT
ALSO
FAILS
AND
THE
WHILE
LOOP
IS
NEVER
ENTERED
ALL
VALUES
IN
THE
INNER
LOOP
SHOULD
BE
DISPLAYED
ON
THE
SAME
LINE
CHANGE
LINES
AND
TO
FOR
INT
N
N
NMAX
N
CHANGE
NMAX
TO
THE
OUTER
LOOP
IS
EXECUTED
TIMES
AND
THE
INNER
LOOP
TIMES
FOR
INT
I
I
I
FOR
INT
J
J
J
COUT
COUT
ENDL
COMPUTE
RAND
AND
USE
FOR
HEADS
FOR
TAILS
OR
THE
OTHER
WAY
AROUND
COMPUTE
RAND
AND
ASSOCIATE
THE
NUMBERS
WITH
THE
FOUR
SUITS
THEN
COM
PUTE
RAND
AND
ASSOCIATE
THE
NUMBERS
WITH
JACK
ACE
QUEEN
AND
KING
IT
IS
REQUIRED
FOR
CALLING
THE
TIME
FUNCTION
THE
CALL
WILL
PRODUCE
A
VALUE
BETWEEN
AND
BUT
ALL
VALUES
HAVE
THE
SAME
PROBA
BILITY
WHEN
THROWING
A
PAIR
OF
DICE
THE
NUMBER
IS
SIX
TIMES
AS
LIKELY
AS
THE
NUMBER
THE
CORRECT
FORMULA
IS
INT
SUM
RAND
RAND
RAND
THIS
PAGE
INTENTIONALLY
LEFT
BLANK
TO
APPRECIATE
THE
IMPORTANCE
OF
FUNCTION
COMMENTS
TO
DEVELOP
STRATEGIES
FOR
DECOMPOSING
COMPLEX
TASKS
INTO
SIMPLER
ONES
TO
BE
ABLE
TO
DETERMINE
THE
SCOPE
OF
A
VARIABLE
TO
RECOGNIZE
WHEN
TO
USE
VALUE
AND
REFERENCE
PARAMETERS
FUNCTIONS
AS
BLACK
BOXES
IMPLEMENTING
FUNCTIONS
SYNTAX
FUNCTION
DEFINITION
PROGRAMMING
TIP
FUNCTION
COMMENTS
PARAMETER
PASSING
PROGRAMMING
TIP
DO
NOT
MODIFY
PARAMETER
VARIABLES
RETURN
VALUES
COMMON
ERROR
MISSING
RETURN
VALUE
SPECIAL
TOPIC
FUNCTION
DECLARATIONS
HOW
TO
IMPLEMENTING
A
FUNCTION
WORKED
EXAMPLE
MATCHING
AND
REPLACING
PARTS
OF
A
STRING
WORKED
EXAMPLE
USING
A
DEBUGGER
FUNCTIONS
WITHOUT
RETURN
VALUES
PROBLEM
SOLVING
REUSABLE
FUNCTIONS
PROBLEM
SOLVING
STEPWISE
REFINEMENT
PROGRAMMING
TIP
KEEP
FUNCTIONS
SHORT
PROGRAMMING
TIP
TRACING
FUNCTIONS
PROGRAMMING
TIP
STUBS
WORKED
EXAMPLE
CALCULATING
A
COURSE
GRADE
VARIABLE
SCOPE
AND
GLOBAL
VARIABLES
PROGRAMMING
TIP
AVOID
GLOBAL
VARIABLES
REFERENCE
PARAMETERS
PROGRAMMING
TIP
PREFER
RETURN
VALUES
TO
REFERENCE
PARAMETERS
SPECIAL
TOPIC
CONSTANT
REFERENCES
RECURSIVE
FUNCTIONS
OPTIONAL
HOW
TO
THINKING
RECURSIVELY
RANDOM
FACT
THE
EXPLOSIVE
GROWTH
OF
PERSONAL
COMPUTERS
FUNCTIONS
AS
BLACK
BOXES
A
FUNCTION
IS
A
SEQUENCE
OF
INSTRUCTIONS
WITH
A
NAME
YOU
HAVE
ALREADY
ENCOUNTERED
SEVERAL
FUNCTIONS
FOR
EXAMPLE
THE
FUNCTION
NAMED
POW
WHICH
WAS
INTRODUCED
IN
CHAPTER
CONTAINS
INSTRUCTIONS
TO
COMPUTE
A
POWER
XY
MOREOVER
EVERY
C
PRO
GRAM
HAS
A
FUNCTION
CALLED
MAIN
YOU
CALL
A
FUNCTION
IN
ORDER
TO
EXECUTE
ITS
INSTRUCTIONS
FOR
EXAMPLE
CONSIDER
THE
FOLLOWING
PROGRAM
INT
MAIN
DOUBLE
Z
POW
BY
USING
THE
EXPRESSION
POW
MAIN
CALLS
THE
POW
FUNCTION
ASKING
IT
TO
COMPUTE
THE
POWER
THE
MAIN
FUNCTION
IS
TEMPORARILY
SUSPENDED
THE
INSTRUCTIONS
OF
THE
POW
FUNCTION
EXECUTE
AND
COMPUTE
THE
RESULT
THE
POW
FUNCTION
RETURNS
ITS
RESULT
THAT
IS
THE
VALUE
BACK
TO
MAIN
AND
THE
MAIN
FUNCTION
RESUMES
EXECUTION
SEE
FIGURE
FIGURE
EXECUTION
FLOW
DURING
A
FUNCTION
CALL
FUNCTIONS
AS
BLACK
BOXES
FIGURE
THE
POW
FUNCTION
AS
A
BLACK
BOX
WHEN
ANOTHER
FUNCTION
CALLS
THE
POW
FUNCTION
IT
PROVIDES
INPUTS
SUCH
AS
THE
EXPRESSIONS
AND
IN
THE
CALL
POW
THESE
EXPRESSIONS
ARE
CALLED
ARGUMENTS
THIS
TERMINOLOGY
AVOIDS
CONFUSION
WITH
OTHER
INPUTS
SUCH
AS
THOSE
PROVIDED
BY
A
HUMAN
USER
SIMILARLY
THE
OUTPUT
THAT
THE
POW
FUNCTION
COMPUTES
IS
CALLED
THE
RETURN
VALUE
FUNCTIONS
CAN
HAVE
MULTIPLE
ARGUMENTS
BUT
THEY
HAVE
ONLY
ONE
RETURN
VALUE
NOTE
THAT
THE
RETURN
VALUE
OF
A
FUNCTION
IS
RETURNED
TO
THE
CALLING
FUNCTION
NOT
DIS
PLAYED
ON
THE
SCREEN
FOR
EXAMPLE
SUPPOSE
YOUR
PROGRAM
CONTAINS
A
STATEMENT
DOUBLE
Z
POW
WHEN
THE
POW
FUNCTION
RETURNS
ITS
RESULT
THE
RETURN
VALUE
IS
STORED
IN
THE
VARIABLE
Z
IF
YOU
WANT
THE
VALUE
TO
BE
DISPLAYED
YOU
NEED
TO
ADD
A
STATEMENT
SUCH
AS
COUT
Z
AT
THIS
POINT
YOU
MAY
WONDER
HOW
THE
POW
FUNCTION
PERFORMS
ITS
JOB
FOR
EXAMPLE
HOW
DOES
POW
COMPUTE
THAT
IS
BY
MULTIPLYING
WITH
LOGARITHMS
FORTUNATELY
AS
A
USER
OF
THE
FUNCTION
YOU
DON
T
NEED
TO
KNOW
HOW
THE
FUNCTION
IS
IMPLEMENTED
YOU
JUST
NEED
TO
KNOW
THE
SPECIFICATION
OF
THE
FUNCTION
IF
YOU
PROVIDE
ARGUMENTS
X
AND
Y
THE
FUNCTION
RETURNS
XY
ENGINEERS
USE
THE
TERM
BLACK
BOX
FOR
A
DEVICE
WITH
A
GIVEN
SPECIFICATION
BUT
UNKNOWN
IMPLEMENTATION
YOU
CAN
THINK
OF
POW
AS
A
BLACK
BOX
AS
SHOWN
IN
FIGURE
WHEN
YOU
DESIGN
YOUR
OWN
FUNCTIONS
YOU
WILL
WANT
TO
MAKE
THEM
APPEAR
AS
BLACK
BOXES
TO
OTHER
PROGRAMMERS
THOSE
PROGRAMMERS
WANT
TO
USE
YOUR
FUNCTIONS
WITH
OUT
KNOWING
WHAT
GOES
ON
INSIDE
EVEN
IF
YOU
ARE
THE
ONLY
PERSON
WORKING
ON
A
PRO
GRAM
MAKING
EACH
FUNCTION
INTO
A
BLACK
BOX
PAYS
OFF
THERE
ARE
FEWER
DETAILS
THAT
YOU
NEED
TO
KEEP
IN
MIND
ALTHOUGH
A
THERMOSTAT
IS
USUALLY
WHITE
YOU
CAN
THINK
OF
IT
AS
A
BLACK
BOX
THE
INPUT
IS
THE
DESIRED
TEMPERATURE
AND
THE
OUTPUT
IS
A
SIGNAL
TO
THE
HEATER
OR
AIR
CONDITIONER
CONSIDER
THE
FUNCTION
CALL
POW
WHAT
ARE
THE
ARGUMENTS
AND
RETURN
VALUE
WHAT
IS
THE
RETURN
VALUE
OF
THE
FUNCTION
CALL
POW
POW
THE
CEIL
FUNCTION
IN
THE
C
STANDARD
LIBRARY
TAKES
A
SINGLE
ARGUMENT
X
AND
RETURNS
THE
SMALLEST
INTEGER
X
WHAT
IS
THE
RETURN
VALUE
OF
CEIL
IT
IS
POSSIBLE
TO
DETERMINE
THE
ANSWER
TO
SELF
CHECK
WITHOUT
KNOWING
HOW
THE
CEIL
FUNCTION
IS
IMPLEMENTED
USE
AN
ENGINEERING
TERM
TO
DESCRIBE
THIS
ASPECT
OF
THE
CEIL
FUNCTION
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
IMPLEMENTING
FUNCTIONS
IN
THIS
SECTION
YOU
WILL
LEARN
HOW
TO
IMPLEMENT
A
FUNCTION
FROM
A
GIVEN
SPECIFICATION
WE
WILL
USE
A
VERY
SIMPLE
EXAMPLE
A
FUNCTION
TO
COMPUTE
THE
VOLUME
OF
A
CUBE
WITH
A
GIVEN
SIDE
LENGTH
THE
FUNCTION
USES
A
GIVEN
SIDE
LENGTH
TO
COMPUTE
THE
VOLUME
OF
A
CUBE
WHEN
WRITING
THIS
FUNCTION
YOU
NEED
TO
PICK
A
NAME
FOR
THE
FUNCTION
DECLARE
A
VARIABLE
FOR
EACH
ARGUMENT
DOUBLE
THESE
VARIABLES
ARE
CALLED
PARAMETER
VARIABLES
SPECIFY
THE
TYPE
OF
THE
RETURN
VALUE
DOUBLE
PUT
ALL
THIS
INFORMATION
TOGETHER
TO
FORM
THE
FIRST
LINE
OF
THE
FUNCTION
DEFINITION
DOUBLE
DOUBLE
NEXT
SPECIFY
THE
BODY
OF
THE
FUNCTION
THE
STATEMENTS
THAT
ARE
EXECUTED
WHEN
THE
FUNCTION
IS
CALLED
THE
VOLUME
OF
A
CUBE
OF
SIDE
LENGTH
IS
HOWEVER
FOR
GREATER
CLARITY
OUR
PARAMETER
VARIABLE
HAS
BEEN
CALLED
NOT
SO
WE
NEED
TO
COMPUTE
LENGTH
WE
WILL
STORE
THIS
VALUE
IN
A
VARIABLE
CALLED
VOLUME
DOUBLE
VOLUME
IN
ORDER
TO
RETURN
THE
RESULT
OF
THE
FUNCTION
USE
THE
RETURN
STATEMENT
RETURN
VOLUME
THE
BODY
OF
A
FUNCTION
IS
ENCLOSED
IN
BRACES
HERE
IS
THE
COMPLETE
FUNCTION
DOUBLE
DOUBLE
DOUBLE
VOLUME
RETURN
VOLUME
IMPLEMENTING
FUNCTIONS
THE
RETURN
STATEMENT
GIVES
THE
FUNCTION
RESULT
TO
THE
CALLER
LET
PUT
THIS
FUNCTION
TO
USE
WE
LL
SUPPLY
A
MAIN
FUNCTION
THAT
CALLS
THE
FUNCTION
TWICE
INT
MAIN
DOUBLE
DOUBLE
COUT
A
CUBE
WITH
SIDE
LENGTH
HAS
VOLUME
ENDL
COUT
A
CUBE
WITH
SIDE
LENGTH
HAS
VOLUME
ENDL
RETURN
WHEN
THE
FUNCTION
IS
CALLED
WITH
DIFFERENT
ARGUMENTS
THE
FUNCTION
RETURNS
DIFFERENT
RESULTS
CONSIDER
THE
CALL
THE
ARGUMENT
CORRESPONDS
TO
THE
LENGTH
PARAMETER
VARIABLE
THEREFORE
IN
THIS
CALL
IS
THE
FUNCTION
COM
PUTES
OR
WHEN
THE
FUNCTION
IS
CALLED
WITH
A
DIFFERENT
ARGUMENT
SAY
THEN
THE
FUNCTION
COMPUTES
NOW
WE
COMBINE
BOTH
FUNCTIONS
INTO
A
TEST
PROGRAM
BECAUSE
MAIN
CALLS
VOLUME
THE
FUNCTION
MUST
BE
KNOWN
BEFORE
THE
MAIN
FUNCTION
IS
DEFINED
THIS
IS
EASILY
ACHIEVED
BY
PLACING
FIRST
AND
MAIN
LAST
IN
THE
SOURCE
FILE
SEE
SPECIAL
TOPIC
ON
PAGE
FOR
AN
ALTERNATIVE
SYNTAX
FUNCTION
DEFINITION
HERE
IS
THE
COMPLETE
PROGRAM
NOTE
THE
COMMENT
THAT
DESCRIBES
THE
BEHAVIOR
OF
THE
FUNCTION
PROGRAMMING
TIP
ON
PAGE
DESCRIBES
THE
FORMAT
OF
THE
COMMENT
CUBE
CPP
PROGRAM
RUN
WHAT
IS
THE
VALUE
OF
WHAT
IS
THE
VALUE
OF
PROVIDE
AN
ALTERNATE
IMPLEMENTATION
OF
THE
BODY
OF
THE
FUNCTION
BY
CALLING
THE
POW
FUNCTION
DEFINE
A
FUNCTION
THAT
COMPUTES
THE
AREA
OF
A
SQUARE
OF
A
GIVEN
SIDE
LENGTH
CONSIDER
THIS
FUNCTION
INT
MYSTERY
INT
X
INT
Y
DOUBLE
RESULT
X
Y
Y
X
RETURN
RESULT
WHAT
IS
THE
RESULT
OF
THE
CALL
MYSTERY
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
PROGRAMMING
TIP
FUNCTION
COMMENTS
WHENEVER
YOU
WRITE
A
FUNCTION
YOU
SHOULD
COMMENT
ITS
BEHAVIOR
COMMENTS
ARE
FOR
HUMAN
READERS
NOT
COMPILERS
AND
THERE
IS
NO
UNIVERSAL
STANDARD
FOR
THE
LAYOUT
OF
A
FUNCTION
COM
MENT
IN
THIS
BOOK
WE
WILL
USE
THE
FOLLOWING
LAYOUT
COMPUTES
THE
VOLUME
OF
A
CUBE
PARAM
THE
SIDE
LENGTH
OF
THE
CUBE
RETURN
THE
VOLUME
DOUBLE
DOUBLE
DOUBLE
VOLUME
RETURN
VOLUME
THIS
PARTICULAR
DOCUMENTATION
STYLE
IS
BORROWED
FROM
THE
JAVA
PROGRAMMING
LANGUAGE
IT
IS
WIDELY
SUPPORTED
BY
C
TOOLS
AS
WELL
FOR
EXAMPLE
BY
THE
DOXYGEN
TOOL
WWW
DOXYGEN
ORG
THE
FIRST
LINE
OF
THE
COMMENT
DESCRIBES
THE
PURPOSE
OF
THE
FUNCTION
EACH
PARAM
CLAUSE
DESCRIBES
A
PARAMETER
VARIABLE
AND
THE
RETURN
CLAUSE
DESCRIBES
THE
RETURN
VALUE
NOTE
THAT
THE
FUNCTION
COMMENT
DOES
NOT
DOCUMENT
THE
IMPLEMENTATION
HOW
THE
FUNCTION
DOES
WHAT
IT
DOES
BUT
RATHER
THE
DESIGN
WHAT
THE
FUNCTION
DOES
ITS
INPUTS
AND
ITS
RESULTS
THE
COMMENT
ALLOWS
OTHER
PROGRAMMERS
TO
USE
THE
FUNCTION
AS
A
BLACK
BOX
PARAMETER
PASSING
IN
THIS
SECTION
WE
EXAMINE
THE
MECHANISM
OF
PASSING
ARGUMENTS
INTO
FUNCTIONS
WHEN
A
FUNCTION
IS
CALLED
ITS
PARAMETER
VARIABLES
ARE
CREATED
ANOTHER
COMMONLY
USED
TERM
FOR
A
PARAMETER
VARIABLE
IS
FORMAL
PARAMETER
IN
THE
FUNCTION
CALL
AN
EXPRESSION
IS
SUPPLIED
FOR
EACH
PARAMETER
VARIABLE
CALLED
THE
ARGUMENT
ANOTHER
COMMONLY
USED
TERM
FOR
THIS
EXPRESSION
IS
ACTUAL
PARAMETER
EACH
PARAMETER
VARI
ABLE
IS
INITIALIZED
WITH
THE
VALUE
OF
THE
CORRESPONDING
ARGUMENT
CONSIDER
THE
FUNCTION
CALL
ILLUSTRATED
IN
FIGURE
DOUBLE
PIE
FRUIT
PIE
FRUIT
A
RECIPE
FOR
A
FRUIT
PIE
MAY
SAY
TO
USE
ANY
KIND
OF
FRUIT
HERE
FRUIT
IS
AN
EXAMPLE
OF
A
PARAMETER
VARIABLE
APPLES
AND
CHERRIES
ARE
EXAMPLES
OF
ARGUMENTS
FIGURE
PARAMETER
PASSING
THE
PARAMETER
VARIABLE
OF
THE
FUNCTION
IS
CREATED
THE
PARAMETER
VARIABLE
IS
INITIALIZED
WITH
THE
VALUE
OF
THE
ARGUMENT
THAT
WAS
PASSED
IN
THE
CALL
IN
OUR
CASE
IS
SET
TO
THE
FUNCTION
COMPUTES
THE
EXPRESSION
WHICH
HAS
THE
VALUE
THAT
VALUE
IS
STORED
IN
THE
VARIABLE
VOLUME
THE
FUNCTION
RETURNS
ALL
OF
ITS
VARIABLES
ARE
REMOVED
THE
RETURN
VALUE
IS
TRANS
FERRED
TO
THE
CALLER
THAT
IS
THE
FUNCTION
CALLING
THE
FUNCTION
NOW
CONSIDER
WHAT
HAPPENS
IN
A
SUBSEQUENT
CALL
A
NEW
PARAMETER
VARIABLE
IS
CREATED
RECALL
THAT
THE
PREVIOUS
PARAMETER
VARIABLE
WAS
REMOVED
WHEN
THE
FIRST
CALL
TO
RETURNED
IT
IS
INITIALIZED
WITH
THE
ARGUMENT
AND
THE
PROCESS
REPEATS
AFTER
THE
SECOND
FUNCTION
CALL
IS
COMPLETE
ITS
VARIABLES
ARE
AGAIN
REMOVED
LIKE
ANY
OTHER
VARIABLES
PARAMETER
VARIABLES
CAN
ONLY
BE
SET
TO
VALUES
OF
COMPAT
IBLE
TYPES
FOR
EXAMPLE
THE
PARAMETER
VARIABLE
OF
THE
FUNCTION
HAS
TYPE
DOUBLE
IT
IS
VALID
TO
CALL
OR
IN
THE
LATTER
CALL
THE
INTEGER
IS
AUTOMATICALLY
CONVERTED
TO
THE
DOUBLE
VALUE
HOWEVER
A
CALL
VOLUME
TWO
IS
NOT
LEGAL
WHAT
DOES
THIS
PROGRAM
PRINT
USE
A
DIAGRAM
LIKE
FIGURE
TO
FIND
THE
ANSWER
DOUBLE
MYSTERY
INT
X
INT
Y
DOUBLE
Z
X
Y
Z
Z
RETURN
Z
INT
MAIN
INT
A
INT
B
COUT
MYSTERY
A
B
ENDL
WHAT
DOES
THIS
PROGRAM
PRINT
USE
A
DIAGRAM
LIKE
FIGURE
TO
FIND
THE
ANSWER
INT
MYSTERY
INT
X
INT
Y
X
X
RETURN
Y
INT
MAIN
INT
A
COUT
MYSTERY
A
ENDL
WHAT
DOES
THE
FOLLOWING
PROGRAM
PRINT
USE
A
DIAGRAM
LIKE
FIGURE
TO
FIND
THE
ANSWER
INT
MYSTERY
INT
N
N
N
RETURN
N
INT
MAIN
INT
A
COUT
MYSTERY
A
ENDL
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
RETURN
VALUES
YOU
USE
THE
RETURN
STATEMENT
TO
SPECIFY
THE
RESULT
OF
A
FUNCTION
WHEN
THE
RETURN
STATE
MENT
IS
PROCESSED
THE
FUNCTION
EXITS
IMMEDIATELY
THIS
BEHAVIOR
IS
CONVENIENT
FOR
HANDLING
EXCEPTIONAL
CASES
AT
THE
BEGINNING
DOUBLE
DOUBLE
IF
RETURN
DOUBLE
VOLUME
RETURN
VOLUME
IF
THE
FUNCTION
IS
CALLED
WITH
A
NEGATIVE
VALUE
FOR
THEN
THE
FUNCTION
RETURNS
AND
THE
REMAINDER
OF
THE
FUNCTION
IS
NOT
EXECUTED
SEE
FIGURE
IN
THE
PRECEDING
EXAMPLE
EACH
RETURN
STATEMENT
RETURNED
A
CONSTANT
OR
A
VARIABLE
ACTUALLY
THE
RETURN
STATEMENT
CAN
RETURN
THE
VALUE
OF
ANY
EXPRESSION
INSTEAD
OF
SAV
ING
THE
RETURN
VALUE
IN
A
VARIABLE
AND
RETURNING
THE
VARIABLE
IT
IS
OFTEN
POSSIBLE
TO
ELIMINATE
THE
VARIABLE
AND
RETURN
A
MORE
COMPLEX
EXPRESSION
DOUBLE
DOUBLE
RETURN
IT
IS
IMPORTANT
THAT
EVERY
BRANCH
OF
A
FUNCTION
RETURN
A
VALUE
CONSIDER
THE
FOLLOWING
INCORRECT
FUNCTION
DOUBLE
DOUBLE
IF
RETURN
ERROR
SUPPOSE
YOU
CALL
WITH
A
NEGATIVE
VALUE
FOR
THE
SIDE
LENGTH
OF
COURSE
YOU
AREN
T
SUPPOSED
TO
CALL
THAT
BUT
IT
MIGHT
HAPPEN
AS
THE
RESULT
OF
A
CODING
ERROR
BECAUSE
THE
IF
CONDITION
IS
NOT
TRUE
THE
RETURN
STATEMENT
IS
NOT
EXECUTED
HOWEVER
THE
FUNC
TION
MUST
RETURN
SOMETHING
DEPENDING
ON
THE
CIRCUMSTANCES
THE
COMPILER
MIGHT
FIGURE
A
RETURN
STATEMENT
EXITS
A
FUNCTION
IMMEDIATELY
FLAG
THIS
AS
AN
ERROR
OR
THE
FUNCTION
MIGHT
RETURN
A
RANDOM
VALUE
PROTECT
AGAINST
THIS
PROBLEM
BY
RETURNING
SOME
SAFE
VALUE
DOUBLE
DOUBLE
IF
RETURN
RETURN
THE
LAST
STATEMENT
OF
EVERY
FUNCTION
OUGHT
TO
BE
A
RETURN
STATEMENT
THIS
ENSURES
THAT
SOME
VALUE
GETS
RETURNED
WHEN
THE
FUNCTION
REACHES
THE
END
SPECIAL
TOPIC
FUNCTION
DECLARATIONS
IT
IS
A
COMPILE
TIME
ERROR
TO
CALL
A
FUNCTION
THAT
THE
COMPILER
DOES
NOT
KNOW
JUST
AS
IT
IS
AN
ERROR
TO
USE
AN
UNDEFINED
VARIABLE
YOU
CAN
AVOID
THIS
ERROR
IF
YOU
DEFINE
ALL
FUNCTIONS
BEFORE
THEY
ARE
FIRST
USED
FIRST
DEFINE
LOWER
LEVEL
HELPER
FUNCTIONS
THEN
THE
MID
LEVEL
WORKHORSE
FUNCTIONS
AND
FINALLY
MAIN
IN
YOUR
PROGRAM
SOME
PROGRAMMERS
PREFER
TO
LIST
THE
MAIN
FUNCTION
FIRST
IN
THEIR
PROGRAMS
IF
YOU
SHARE
THAT
PREFERENCE
YOU
NEED
TO
LEARN
HOW
TO
DECLARE
THE
OTHER
FUNCTIONS
AT
THE
TOP
OF
THE
PROGRAM
A
DECLARATION
OF
A
FUNCTION
LISTS
THE
RETURN
TYPE
FUNCTION
NAME
AND
PARAMETER
VARIABLES
BUT
IT
CONTAINS
NO
BODY
DOUBLE
DOUBLE
THIS
IS
AN
ADVERTISEMENT
THAT
PROMISES
THAT
THE
FUNCTION
IS
IMPLEMENTED
ELSEWHERE
IT
IS
EASY
TO
DISTINGUISH
DECLARATIONS
FROM
DEFINITIONS
DECLARATIONS
END
IN
A
SEMICOLON
WHEREAS
DEFINI
TIONS
ARE
FOLLOWED
BY
A
BLOCK
DECLARATIONS
ARE
ALSO
CALLED
PROTOTYPES
IN
A
FUNCTION
PROTOTYPE
THE
NAMES
OF
THE
PARAMETERS
ARE
OPTIONAL
YOU
COULD
ALSO
WRITE
DOUBLE
DOUBLE
HOWEVER
IT
IS
A
GOOD
IDEA
TO
INCLUDE
PARAMETER
NAMES
IN
ORDER
TO
DOCUMENT
THE
PURPOSE
OF
EACH
PARAMETER
THE
DECLARATIONS
OF
COMMON
FUNCTIONS
SUCH
AS
POW
ARE
CONTAINED
IN
HEADER
FILES
IF
YOU
HAVE
A
LOOK
INSIDE
CMATH
YOU
WILL
FIND
THE
DECLARATION
OF
POW
AND
THE
OTHER
MATH
FUNCTIONS
STEP
DESCRIBE
WHAT
THE
FUNCTION
SHOULD
DO
PROVIDE
A
SIMPLE
ENGLISH
DESCRIPTION
SUCH
AS
COMPUTE
THE
VOLUME
OF
A
PYRAMID
WHOSE
BASE
IS
A
SQUARE
STEP
DETERMINE
THE
FUNCTION
INPUTS
MAKE
A
LIST
OF
ALL
THE
PARAMETERS
THAT
CAN
VARY
IT
IS
COMMON
FOR
BEGINNERS
TO
IMPLEMENT
FUNCTIONS
THAT
ARE
OVERLY
SPECIFIC
FOR
EXAMPLE
YOU
MAY
KNOW
THAT
THE
GREAT
PYRAMID
OF
GIZA
THE
LARGEST
OF
THE
EGYPTIAN
PYRAMIDS
HAS
A
HEIGHT
OF
METERS
AND
A
BASE
LENGTH
OF
METERS
YOU
SHOULD
NOT
USE
THESE
NUMBERS
IN
YOUR
CALCULATION
EVEN
IF
THE
ORIGINAL
PROBLEM
ONLY
ASKED
ABOUT
THE
GREAT
PYRAMID
IT
IS
JUST
AS
EASY
AND
FAR
MORE
USEFUL
TO
WRITE
A
FUNCTION
THAT
COMPUTES
THE
VOLUME
OF
ANY
PYRAMID
IN
OUR
CASE
THE
PARAMETERS
ARE
THE
PYRAMID
HEIGHT
AND
BASE
LENGTH
AT
THIS
POINT
WE
HAVE
ENOUGH
INFORMATION
TO
DOCUMENT
THE
FUNCTION
COMPUTES
THE
VOLUME
OF
A
PYRAMID
WHOSE
BASE
IS
A
SQUARE
PARAM
HEIGHT
THE
HEIGHT
OF
THE
PYRAMID
PARAM
THE
LENGTH
OF
ONE
SIDE
OF
THE
PYRAMID
BASE
RETURN
THE
VOLUME
OF
THE
PYRAMID
STEP
DETERMINE
THE
TYPES
OF
THE
PARAMETER
VARIABLES
AND
THE
RETURN
VALUE
THE
HEIGHT
AND
BASE
LENGTH
CAN
BOTH
BE
FLOATING
POINT
NUMBERS
THEREFORE
WE
WILL
CHOOSE
THE
TYPE
DOUBLE
FOR
BOTH
PARAMETER
VARIABLES
THE
COMPUTED
VOLUME
IS
ALSO
A
FLOATING
POINT
NUM
BER
YIELDING
A
RETURN
TYPE
OF
DOUBLE
THEREFORE
THE
FUNCTION
WILL
BE
DEFINED
AS
DOUBLE
DOUBLE
HEIGHT
DOUBLE
STEP
WRITE
PSEUDOCODE
FOR
OBTAINING
THE
DESIRED
RESULT
IN
MOST
CASES
A
FUNCTION
NEEDS
TO
CARRY
OUT
SEVERAL
STEPS
TO
FIND
THE
DESIRED
ANSWER
YOU
MAY
NEED
TO
USE
MATHEMATICAL
FORMULAS
BRANCHES
OR
LOOPS
EXPRESS
YOUR
FUNCTION
IN
PSEUDOCODE
AN
INTERNET
SEARCH
YIELDS
THE
FACT
THAT
THE
VOLUME
OF
A
PYRAMID
IS
COMPUTED
AS
VOLUME
X
HEIGHT
X
BASE
AREA
SINCE
THE
BASE
IS
A
SQUARE
WE
HAVE
BASE
AREA
BASE
LENGTH
X
BASE
LENGTH
USING
THESE
TWO
EQUATIONS
WE
CAN
COMPUTE
THE
VOLUME
FROM
THE
PARAMETER
VARIABLES
STEP
IMPLEMENT
THE
FUNCTION
BODY
IN
OUR
EXAMPLE
THE
FUNCTION
BODY
IS
QUITE
SIMPLE
NOTE
THE
USE
OF
THE
RETURN
STATEMENT
TO
RETURN
THE
RESULT
DOUBLE
RETURN
HEIGHT
STEP
TEST
YOUR
FUNCTION
AFTER
IMPLEMENTING
A
FUNCTION
YOU
SHOULD
TEST
IT
IN
ISOLATION
SUCH
A
TEST
IS
CALLED
A
UNIT
TEST
WORK
OUT
TEST
CASES
BY
HAND
AND
MAKE
SURE
THAT
THE
FUNCTION
PRODUCES
THE
CORRECT
RESULTS
FOR
EXAMPLE
FOR
A
PYRAMID
WITH
HEIGHT
AND
BASE
LENGTH
WE
EXPECT
THE
AREA
TO
BE
IF
THE
HEIGHT
IS
WE
EXPECT
AN
AREA
OF
INT
MAIN
COUT
VOLUME
ENDL
COUT
EXPECTED
COUT
VOLUME
ENDL
COUT
EXPECTED
RETURN
THE
OUTPUT
CONFIRMS
THAT
THE
FUNCTION
WORKED
AS
EXPECTED
VOLUME
EXPECTED
VOLUME
EXPECTED
FUNCTIONS
WITHOUT
RETURN
VALUES
SOMETIMES
YOU
NEED
TO
CARRY
OUT
A
SEQUENCE
OF
INSTRUCTIONS
THAT
DOES
NOT
YIELD
A
VALUE
IF
THAT
INSTRUCTION
SEQUENCE
OCCURS
MULTIPLE
TIMES
YOU
WILL
WANT
TO
PACKAGE
IT
INTO
A
FUNCTION
IN
C
YOU
USE
THE
RETURN
TYPE
VOID
TO
INDICATE
THE
ABSENCE
OF
A
RETURN
VALUE
HERE
IS
A
TYPICAL
EXAMPLE
YOUR
TASK
IS
TO
PRINT
A
STRING
IN
A
BOX
LIKE
THIS
HELLO
A
VOID
FUNCTION
RETURNS
NO
VALUE
BUT
IT
CAN
PRODUCE
OUTPUT
HOWEVER
DIFFERENT
STRINGS
CAN
BE
SUBSTITUTED
FOR
HELLO
A
FUNCTION
FOR
THIS
TASK
CAN
BE
DEFINED
AS
FOLLOWS
VOID
STRING
STR
NOW
YOU
DEVELOP
THE
BODY
OF
THE
FUNCTION
IN
THE
USUAL
WAY
BY
FORMULATING
A
GENERAL
METHOD
FOR
SOLVING
THE
TASK
PRINT
A
LINE
THAT
CONTAINS
THE
CHARACTER
N
TIMES
WHERE
N
IS
THE
LENGTH
OF
THE
STRING
PRINT
A
LINE
CONTAINING
THE
STRING
SURROUNDED
WITH
A
TO
THE
LEFT
AND
RIGHT
PRINT
ANOTHER
LINE
CONTAINING
THE
CHARACTER
N
TIMES
HERE
IS
THE
FUNCTION
IMPLEMENTATION
PRINTS
A
STRING
IN
A
BOX
PARAM
STR
THE
STRING
TO
PRINT
VOID
STRING
STR
AVAILABLE
ONLINE
AT
WWW
WILEY
COM
COLLEGE
HORSTMANN
FUNCTIONS
WITHOUT
RETURN
VALUES
INT
N
STR
LENGTH
FOR
INT
I
I
N
I
COUT
COUT
ENDL
COUT
STR
ENDL
FOR
INT
I
I
N
I
COUT
COUT
ENDL
NOTE
THAT
THIS
FUNCTION
DOESN
T
COMPUTE
ANY
VALUE
IT
PERFORMS
SOME
ACTIONS
AND
THEN
RETURNS
TO
THE
CALLER
SEE
THE
SAMPLE
PROGRAM
BOX
CPP
BECAUSE
THERE
IS
NO
RETURN
VALUE
YOU
CANNOT
USE
IN
AN
EXPRESSION
YOU
CAN
CALL
HELLO
BUT
NOT
RESULT
HELLO
ERROR
DOESN
T
RETURN
A
RESULT
IF
YOU
WANT
TO
RETURN
FROM
A
VOID
FUNCTION
BEFORE
REACHING
THE
END
YOU
USE
A
RETURN
STATEMENT
WITHOUT
A
VALUE
FOR
EXAMPLE
VOID
STRING
STR
INT
N
STR
LENGTH
IF
N
RETURN
RETURN
IMMEDIATELY
HOW
DO
YOU
GENERATE
THE
FOLLOWING
PRINTOUT
USING
THE
FUNCTION
HELLO
WORLD
WHAT
IS
WRONG
WITH
THE
FOLLOWING
STATEMENT
COUT
HELLO
IMPLEMENT
A
FUNCTION
SHOUT
THAT
PRINTS
A
LINE
CONSISTING
OF
A
STRING
FOLLOWED
BY
THREE
EXCLAMATION
MARKS
FOR
EXAMPLE
SHOUT
HELLO
SHOULD
PRINT
HELLO
THE
FUNCTION
SHOULD
NOT
RETURN
A
VALUE
HOW
WOULD
YOU
MODIFY
THE
FUNCTION
TO
LEAVE
A
SPACE
AROUND
THE
STRING
THAT
IS
BEING
BOXED
LIKE
THIS
HELLO
THE
FUNCTION
CONTAINS
THE
CODE
FOR
PRINTING
A
LINE
OF
CHARACTERS
TWICE
PLACE
THAT
CODE
INTO
A
SEPARATE
FUNCTION
AND
USE
THAT
FUNCTION
TO
SIM
PLIFY
WHAT
IS
THE
CODE
OF
BOTH
FUNCTIONS
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
PROBLEM
SOLVING
REUSABLE
FUNCTIONS
YOU
HAVE
USED
MANY
FUNCTIONS
FROM
THE
C
STANDARD
LIBRARY
THESE
FUNCTIONS
HAVE
BEEN
PROVIDED
AS
A
PART
OF
STANDARD
C
SO
THAT
PROGRAMMERS
NEED
NOT
RECREATE
THEM
OF
COURSE
THE
C
LIBRARY
DOESN
T
COVER
EVERY
CONCEIVABLE
NEED
YOU
WILL
OFTEN
BE
ABLE
TO
SAVE
YOURSELF
TIME
BY
DESIGNING
YOUR
OWN
FUNCTIONS
THAT
CAN
BE
USED
FOR
MUL
TIPLE
PROBLEMS
WHEN
YOU
WRITE
NEARLY
IDENTICAL
CODE
OR
PSEUDOCODE
MULTIPLE
TIMES
EITHER
IN
THE
SAME
PROGRAM
OR
IN
SEPARATE
PROGRAMS
CONSIDER
INTRODUCING
A
FUNCTION
HERE
IS
A
TYPICAL
EXAMPLE
OF
CODE
REPLICATION
INT
HOURS
DO
COUT
ENTER
A
VALUE
BETWEEN
AND
CIN
HOURS
WHILE
HOURS
HOURS
INT
MINUTES
DO
COUT
ENTER
A
VALUE
BETWEEN
AND
CIN
MINUTES
WHILE
MINUTES
MINUTES
THIS
PROGRAM
SEGMENT
READS
TWO
VARIABLES
MAKING
SURE
THAT
EACH
OF
THEM
IS
WITHIN
A
CERTAIN
RANGE
IT
IS
EASY
TO
EXTRACT
THE
COMMON
BEHAVIOR
INTO
A
FUNCTION
PROMPTS
A
USER
TO
ENTER
A
VALUE
UP
TO
A
GIVEN
MAXIMUM
UNTIL
THE
USER
PROVIDES
A
VALID
INPUT
PARAM
HIGH
THE
LARGEST
ALLOWABLE
INPUT
RETURN
THE
VALUE
PROVIDED
BY
THE
USER
BETWEEN
AND
HIGH
INCLUSIVE
INT
INT
HIGH
INT
INPUT
DO
COUT
ENTER
A
VALUE
BETWEEN
AND
HIGH
CIN
INPUT
WHILE
INPUT
INPUT
HIGH
RETURN
INPUT
THEN
USE
THIS
FUNCTION
TWICE
INT
HOURS
INT
MINUTES
WE
HAVE
NOW
REMOVED
THE
REPLICATION
OF
THE
LOOP
IT
ONLY
OCCURS
ONCE
INSIDE
THE
FUNCTION
NOTE
THAT
THE
FUNCTION
CAN
BE
REUSED
IN
OTHER
PROGRAMS
THAT
NEED
TO
READ
INTEGER
VALUES
HOWEVER
WE
SHOULD
CONSIDER
THE
POSSIBILITY
THAT
THE
SMALLEST
VALUE
NEED
NOT
ALWAYS
BE
ZERO
PROBLEM
SOLVING
REUSABLE
FUNCTIONS
WHEN
CARRYING
OUT
THE
SAME
TASK
MULTIPLE
TIMES
USE
A
FUNCTION
HERE
IS
A
BETTER
ALTERNATIVE
PROMPTS
A
USER
TO
ENTER
A
VALUE
WITHIN
A
GIVEN
RANGE
UNTIL
THE
USER
PROVIDES
A
VALID
INPUT
PARAM
LOW
THE
SMALLEST
ALLOWABLE
INPUT
PARAM
HIGH
THE
LARGEST
ALLOWABLE
INPUT
RETURN
THE
VALUE
PROVIDED
BY
THE
USER
BETWEEN
LOW
AND
HIGH
INCLUSIVE
INT
INT
LOW
INT
HIGH
INT
INPUT
DO
COUT
ENTER
A
VALUE
BETWEEN
LOW
AND
HIGH
CIN
INPUT
WHILE
INPUT
LOW
INPUT
HIGH
RETURN
INPUT
IN
OUR
PROGRAM
WE
CALL
INT
HOURS
ANOTHER
PROGRAM
CAN
CALL
INT
MONTH
IN
GENERAL
YOU
WILL
WANT
TO
PROVIDE
PARAMETER
VARIABLES
FOR
THE
VALUES
THAT
VARY
WHEN
A
FUNCTION
IS
REUSED
CONSIDER
THE
FOLLOWING
STATEMENTS
INT
INT
TOTAL
INT
INT
TOTAL
INTRODUCE
A
FUNCTION
TO
REDUCE
CODE
DUPLICATION
CONSIDER
THIS
CODE
THAT
PRINTS
A
PAGE
NUMBER
ON
THE
LEFT
OR
RIGHT
SIDE
OF
A
PAGE
IF
PAGE
COUT
PAGE
ENDL
ELSE
COUT
SETW
PAGE
ENDL
INTRODUCE
A
FUNCTION
WITH
RETURN
TYPE
BOOL
TO
MAKE
THE
CONDITION
IN
THE
IF
STATEMENT
EASIER
TO
UNDERSTAND
CONSIDER
THE
FOLLOWING
FUNCTION
THAT
COMPUTES
COMPOUND
INTEREST
FOR
AN
ACCOUNT
WITH
AN
INITIAL
BALANCE
OF
AND
AN
INTEREST
RATE
OF
PERCENT
DOUBLE
BALANCE
INT
YEARS
RETURN
POW
YEARS
HOW
CAN
YOU
MAKE
THIS
FUNCTION
MORE
REUSABLE
THE
COMMENT
EXPLAINS
WHAT
THE
FOLLOWING
LOOP
DOES
USE
A
FUNCTION
INSTEAD
COUNTS
THE
NUMBER
OF
SPACES
INT
SPACES
FOR
INT
I
I
INPUT
LENGTH
I
IF
INPUT
SUBSTR
I
SPACES
IN
SELF
CHECK
YOU
WERE
ASKED
TO
IMPLEMENT
A
FUNCTION
THAT
COUNTS
SPACES
HOW
CAN
YOU
GENERALIZE
IT
SO
THAT
IT
CAN
COUNT
ANY
CHARACTER
WHY
WOULD
YOU
WANT
TO
DO
THIS
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
PROBLEM
SOLVING
STEPWISE
REFINEMENT
ONE
OF
THE
MOST
POWERFUL
STRATEGIES
FOR
PROBLEM
SOLVING
IS
THE
PROCESS
OF
STEPWISE
REFINEMENT
TO
SOLVE
A
DIFFICULT
TASK
BREAK
IT
DOWN
INTO
SIMPLER
TASKS
THEN
KEEP
BREAK
ING
DOWN
THE
SIMPLER
TASKS
INTO
EVEN
SIMPLER
ONES
UNTIL
YOU
ARE
LEFT
WITH
TASKS
THAT
YOU
KNOW
HOW
TO
SOLVE
HERE
IS
AN
APPLICATION
OF
THIS
PROCESS
TO
A
PROBLEM
OF
EVERYDAY
LIFE
YOU
GET
UP
IN
THE
MORNING
AND
SIMPLY
MUST
GET
COFFEE
HOW
DO
YOU
GET
COFFEE
YOU
SEE
WHETHER
YOU
CAN
GET
SOMEONE
ELSE
SUCH
AS
YOUR
MOTHER
OR
MATE
TO
BRING
YOU
SOME
IF
THAT
FAILS
YOU
MUST
MAKE
COFFEE
HOW
DO
YOU
MAKE
COFFEE
A
PRODUCTION
PROCESS
IS
BROKEN
DOWN
INTO
SEQUENCES
OF
ASSEMBLY
STEPS
IF
THERE
IS
INSTANT
COFFEE
AVAILABLE
YOU
CAN
MAKE
INSTANT
COFFEE
HOW
DO
YOU
MAKE
INSTANT
COFFEE
SIMPLY
BOIL
WATER
AND
MIX
THE
BOILING
WATER
WITH
THE
INSTANT
COFFEE
HOW
DO
YOU
BOIL
WATER
IF
THERE
IS
A
MICROWAVE
THEN
YOU
FILL
A
CUP
WITH
WATER
PLACE
IT
IN
THE
MICROWAVE
AND
HEAT
IT
FOR
THREE
MINUTES
OTHERWISE
YOU
FILL
A
KETTLE
WITH
WATER
AND
HEAT
IT
ON
THE
STOVE
UNTIL
THE
WATER
COMES
TO
A
BOIL
ON
THE
OTHER
HAND
IF
YOU
DON
T
HAVE
INSTANT
COFFEE
YOU
MUST
BREW
COFFEE
HOW
DO
YOU
BREW
COFFEE
YOU
ADD
WATER
TO
THE
COFFEE
MAKER
PUT
IN
A
FILTER
GRIND
COFFEE
PUT
THE
COFFEE
IN
THE
FILTER
AND
TURN
THE
COF
FEE
MAKER
ON
HOW
DO
YOU
GRIND
COFFEE
YOU
ADD
COFFEE
BEANS
TO
THE
COFFEE
GRINDER
AND
PUSH
THE
BUTTON
FOR
SECONDS
FIGURE
SHOWS
A
FLOWCHART
VIEW
OF
THE
COFFEE
MAKING
SOLUTION
REFINEMENTS
ARE
SHOWN
AS
EXPANDING
BOXES
IN
C
YOU
IMPLEMENT
A
REFINEMENT
AS
A
FUNCTION
FOR
EXAMPLE
A
FUNCTION
WOULD
CALL
AND
IT
WOULD
BE
CALLED
FROM
A
FUNCTION
LET
US
APPLY
THE
PROCESS
OF
STEPWISE
REFINEMENT
TO
A
PROGRAMMING
PROBLEM
FIGURE
FLOWCHART
OF
COFFEE
MAKING
SOLUTION
WHEN
PRINTING
A
CHECK
IT
IS
CUSTOMARY
TO
WRITE
THE
CHECK
AMOUNT
BOTH
AS
A
NUMBER
AND
AS
A
TEXT
STRING
TWO
HUNDRED
SEVENTY
FOUR
DOLLARS
AND
CENTS
DOING
SO
REDUCES
THE
RECIPIENT
TEMPTATION
TO
ADD
A
FEW
DIGITS
IN
FRONT
OF
THE
AMOUNT
FOR
A
HUMAN
THIS
ISN
T
PARTICULARLY
DIFFICULT
BUT
HOW
CAN
A
COMPUTER
DO
THIS
THERE
IS
NO
BUILT
IN
FUNCTION
THAT
TURNS
INTO
TWO
HUNDRED
SEVENTY
FOUR
WE
NEED
TO
PROGRAM
THIS
FUNCTION
HERE
IS
THE
DESCRIPTION
OF
THE
FUNCTION
WE
WANT
TO
WRITE
TURNS
A
NUMBER
INTO
ITS
ENGLISH
NAME
PARAM
NUMBER
A
POSITIVE
INTEGER
RETURN
THE
NAME
OF
NUMBER
E
G
TWO
HUNDRED
SEVENTY
FOUR
STRING
INT
NUMBER
HOW
CAN
THIS
FUNCTION
DO
ITS
JOB
LET
LOOK
AT
A
SIMPLE
CASE
FIRST
IF
THE
NUMBER
IS
BETWEEN
AND
WE
NEED
TO
COMPUTE
ONE
NINE
IN
FACT
WE
NEED
THE
SAME
COMPUTATION
AGAIN
FOR
THE
HUNDREDS
TWO
HUNDRED
USING
THE
STEPWISE
DECOMPOSITION
PROCESS
WE
DESIGN
ANOTHER
FUNCTION
FOR
THIS
SIMPLER
TASK
AGAIN
RATHER
THAN
IMPLE
MENTING
THE
FUNCTION
WE
FIRST
WRITE
THE
COMMENT
TURNS
A
DIGIT
INTO
ITS
ENGLISH
NAME
PARAM
DIGIT
AN
INTEGER
BETWEEN
AND
RETURN
THE
NAME
OF
DIGIT
ONE
NINE
STRING
INT
DIGIT
THIS
SOUNDS
SIMPLE
ENOUGH
TO
IMPLEMENT
USING
AN
IF
STATEMENT
WITH
NINE
BRANCHES
NO
FURTHER
FUNCTIONS
SHOULD
BE
REQUIRED
FOR
COMPLETING
THE
FUNCTION
SO
WE
WILL
WORRY
ABOUT
THE
IMPLEMENTATION
LATER
NUMBERS
BETWEEN
AND
ARE
SPECIAL
CASES
LET
HAVE
A
SEPARATE
FUNCTION
NAME
THAT
CONVERTS
THEM
INTO
STRINGS
ELEVEN
TWELVE
THIRTEEN
AND
SO
ON
TURNS
A
NUMBER
BETWEEN
AND
INTO
ITS
ENGLISH
NAME
PARAM
NUMBER
AN
INTEGER
BETWEEN
AND
RETURN
THE
NAME
OF
THE
NUMBER
TEN
NINETEEN
STRING
INT
NUMBER
NEXT
SUPPOSE
THAT
THE
NUMBER
IS
BETWEEN
AND
THEN
WE
SHOW
THE
TENS
AS
TWENTY
THIRTY
NINETY
FOR
SIMPLICITY
AND
CONSISTENCY
PUT
THAT
COMPUTATION
INTO
A
SEPARATE
FUNCTION
GIVES
THE
NAME
OF
THE
TENS
PART
OF
A
NUMBER
BETWEEN
AND
PARAM
NUMBER
AN
INTEGER
BETWEEN
AND
RETURN
THE
NAME
OF
THE
TENS
PART
OF
THE
NUMBER
TWENTY
NINETY
STRING
INT
NUMBER
NOW
SUPPOSE
THE
NUMBER
IS
AT
LEAST
AND
AT
MOST
IF
THE
NUMBER
IS
EVENLY
DIVISI
BLE
BY
WE
USE
AND
WE
ARE
DONE
OTHERWISE
WE
PRINT
THE
TENS
WITH
NAME
AND
THE
ONES
WITH
IF
THE
NUMBER
IS
BETWEEN
AND
THEN
WE
SHOW
A
DIGIT
THE
WORD
HUNDRED
AND
THE
REMAINDER
AS
DESCRIBED
PREVIOUSLY
HERE
IS
THE
PSEUDOCODE
OF
THE
ALGORITHM
PART
NUMBER
THE
PART
THAT
STILL
NEEDS
TO
BE
CONVERTED
NAME
THE
NAME
OF
THE
NUMBER
IF
PART
NAME
NAME
OF
HUNDREDS
IN
PART
HUNDRED
REMOVE
HUNDREDS
FROM
PART
IF
PART
APPEND
PART
TO
NAME
REMOVE
TENS
FROM
PART
ELSE
IF
PART
APPEND
PART
TO
NAME
PART
IF
PART
APPEND
PART
TO
NAME
THIS
PSEUDOCODE
HAS
A
NUMBER
OF
IMPORTANT
IMPROVEMENTS
OVER
THE
VERBAL
DESCRIP
TION
IT
SHOWS
HOW
TO
ARRANGE
THE
TESTS
STARTING
WITH
THE
COMPARISONS
AGAINST
THE
LARGER
NUMBERS
AND
IT
SHOWS
HOW
THE
SMALLER
NUMBER
IS
SUBSEQUENTLY
PROCESSED
IN
FURTHER
IF
STATEMENTS
ON
THE
OTHER
HAND
THIS
PSEUDOCODE
IS
VAGUE
ABOUT
THE
ACTUAL
CONVERSION
OF
THE
PIECES
JUST
REFERRING
TO
NAME
OF
HUNDREDS
AND
THE
LIKE
FURTHERMORE
WE
WERE
VAGUE
ABOUT
SPACES
AS
IT
STANDS
THE
CODE
WOULD
PRODUCE
STRINGS
WITH
NO
SPACES
TWOHUNDREDSEVENTYFOUR
FOR
EXAMPLE
COMPARED
TO
THE
COMPLEXITY
OF
THE
MAIN
PROBLEM
ONE
WOULD
HOPE
THAT
SPACES
ARE
A
MINOR
ISSUE
IT
IS
BEST
NOT
TO
MUDDY
THE
PSEUDOCODE
WITH
MINOR
DETAILS
NOW
TURN
THE
PSEUDOCODE
INTO
REAL
CODE
THE
LAST
THREE
CASES
ARE
EASY
BECAUSE
HELPER
FUNCTIONS
ARE
ALREADY
DEVELOPED
FOR
THEM
IF
PART
NAME
NAME
PART
PART
PART
ELSE
IF
PART
NAME
NAME
PART
PART
IF
PART
NAME
NAME
PART
FINALLY
LET
US
TACKLE
THE
CASE
OF
NUMBERS
BETWEEN
AND
BECAUSE
PART
PART
IS
A
SINGLE
DIGIT
AND
WE
OBTAIN
ITS
NAME
BY
CALLING
THEN
WE
ADD
THE
HUNDRED
SUFFIX
IF
PART
NAME
PART
HUNDRED
PART
PART
NOW
YOU
HAVE
SEEN
ALL
THE
IMPORTANT
BUILDING
BLOCKS
FOR
THE
FUNCTION
HERE
IS
THE
COMPLETE
PROGRAM
INTNAME
CPP
IF
DIGIT
RETURN
ONE
IF
DIGIT
RETURN
TWO
IF
DIGIT
RETURN
THREE
IF
DIGIT
RETURN
FOUR
IF
DIGIT
RETURN
FIVE
IF
DIGIT
RETURN
SIX
IF
DIGIT
RETURN
SEVEN
IF
DIGIT
RETURN
EIGHT
IF
DIGIT
RETURN
NINE
RETURN
TURNS
A
NUMBER
BETWEEN
AND
INTO
ITS
ENGLISH
NAME
PARAM
NUMBER
AN
INTEGER
BETWEEN
AND
RETURN
THE
NAME
OF
THE
GIVEN
NUMBER
TEN
NINETEEN
STRING
INT
NUMBER
IF
NUMBER
RETURN
TEN
IF
NUMBER
RETURN
ELEVEN
IF
NUMBER
RETURN
TWELVE
IF
NUMBER
RETURN
THIRTEEN
IF
NUMBER
RETURN
FOURTEEN
IF
NUMBER
RETURN
FIFTEEN
IF
NUMBER
RETURN
SIXTEEN
IF
NUMBER
RETURN
SEVENTEEN
IF
NUMBER
RETURN
EIGHTEEN
IF
NUMBER
RETURN
NINETEEN
RETURN
GIVES
THE
NAME
OF
THE
TENS
PART
OF
A
NUMBER
BETWEEN
AND
PARAM
NUMBER
AN
INTEGER
BETWEEN
AND
RETURN
THE
NAME
OF
THE
TENS
PART
OF
THE
NUMBER
TWENTY
NINETY
STRING
INT
NUMBER
IF
NUMBER
RETURN
NINETY
IF
NUMBER
RETURN
EIGHTY
IF
NUMBER
RETURN
SEVENTY
IF
NUMBER
RETURN
SIXTY
IF
NUMBER
RETURN
FIFTY
IF
NUMBER
RETURN
FORTY
IF
NUMBER
RETURN
THIRTY
IF
NUMBER
RETURN
TWENTY
RETURN
TURNS
A
NUMBER
INTO
ITS
ENGLISH
NAME
PARAM
NUMBER
A
POSITIVE
INTEGER
RETURN
THE
NAME
OF
THE
NUMBER
E
G
TWO
HUNDRED
SEVENTY
FOUR
STRING
INT
NUMBER
INT
PART
NUMBER
THE
PART
THAT
STILL
NEEDS
TO
BE
CONVERTED
STRING
NAME
THE
RETURN
VALUE
PROGRAM
RUN
EXPLAIN
HOW
YOU
CAN
IMPROVE
THE
FUNCTION
SO
THAT
IT
CAN
HANDLE
ARGU
MENTS
UP
TO
WHY
DOES
LINE
SET
PART
WHAT
HAPPENS
WHEN
YOU
CALL
HOW
CAN
YOU
CHANGE
THE
FUNCTION
TO
HANDLE
THIS
CASE
CORRECTLY
TRACE
THE
FUNCTION
CALL
AS
DESCRIBED
IN
PROGRAMMING
TIP
USE
THE
PROCESS
OF
STEPWISE
REFINEMENT
TO
BREAK
DOWN
THE
TASK
OF
PRINTING
THE
FOLLOWING
TABLE
INTO
SIMPLER
TASKS
I
I
I
I
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
PROGRAMMING
TIP
TRACING
FUNCTIONS
WHEN
YOU
DESIGN
A
COMPLEX
SET
OF
FUNCTIONS
IT
IS
A
GOOD
IDEA
TO
CARRY
OUT
A
MANUAL
WALK
THROUGH
BEFORE
ENTRUSTING
YOUR
PROGRAM
TO
THE
COMPUTER
TAKE
AN
INDEX
CARD
OR
SOME
OTHER
PIECE
OF
PAPER
AND
WRITE
DOWN
THE
FUNCTION
CALL
THAT
YOU
WANT
TO
STUDY
WRITE
THE
NAME
OF
THE
FUNCTION
AND
THE
NAMES
AND
VALUES
OF
THE
PARAMETER
VARI
ABLES
LIKE
THIS
THEN
WRITE
THE
NAMES
AND
INITIAL
VALUES
OF
THE
FUNCTION
VARIABLES
WRITE
THEM
IN
A
TABLE
SINCE
YOU
WILL
UPDATE
THEM
AS
YOU
WALK
THROUGH
THE
CODE
WE
ENTER
THE
TEST
PART
PART
IS
AND
PART
IS
IS
EASILY
SEEN
TO
BE
FOUR
HAD
BEEN
COMPLICATED
YOU
WOULD
HAVE
STARTED
ANOTHER
SHEET
OF
PAPER
TO
FIGURE
OUT
THAT
FUNCTION
CALL
IT
IS
QUITE
COMMON
TO
ACCUMULATE
SEVERAL
SHEETS
IN
THIS
WAY
NOW
NAME
HAS
CHANGED
TO
NAME
PART
HUNDRED
THAT
IS
FOUR
HUN
DRED
AND
PART
HAS
CHANGED
TO
PART
OR
PROGRAMMING
TIP
STUBS
WHEN
WRITING
A
LARGER
PROGRAM
IT
IS
NOT
ALWAYS
FEASIBLE
TO
IMPLEMENT
AND
TEST
ALL
FUNCTIONS
AT
ONCE
YOU
OFTEN
NEED
TO
TEST
A
FUNCTION
THAT
CALLS
ANOTHER
BUT
THE
OTHER
FUNCTION
HASN
T
YET
BEEN
IMPLEMENTED
THEN
YOU
CAN
TEMPORARILY
REPLACE
THE
MISSING
FUNCTION
WITH
A
STUB
A
STUB
IS
A
FUNC
TION
THAT
RETURNS
A
SIMPLE
VALUE
THAT
IS
SUFFICIENT
FOR
TESTING
ANOTHER
FUNCTION
HERE
ARE
EXAMPLES
OF
STUB
FUNCTIONS
TURNS
A
DIGIT
INTO
ITS
ENGLISH
NAME
PARAM
DIGIT
AN
INTEGER
BETWEEN
AND
RETURN
THE
NAME
OF
DIGIT
ONE
NINE
STRING
INT
DIGIT
STUBS
ARE
INCOMPLETE
FUNCTIONS
THAT
CAN
BE
USED
FOR
TESTING
RETURN
MUMBLE
GIVES
THE
NAME
OF
THE
TENS
PART
OF
A
NUMBER
BETWEEN
AND
PARAM
NUMBER
AN
INTEGER
BETWEEN
AND
RETURN
THE
TENS
NAME
OF
THE
NUMBER
TWENTY
NINETY
STRING
INT
NUMBER
RETURN
MUMBLETY
IF
YOU
COMBINE
THESE
STUBS
WITH
THE
FUNCTION
AND
TEST
IT
WITH
AN
ARGUMENT
OF
YOU
WILL
GET
A
RESULT
OF
MUMBLE
HUNDRED
MUMBLETY
MUMBLE
WHICH
INDICATES
THAT
THE
BASIC
LOGIC
OF
THE
FUNCTION
IS
WORKING
CORRECTLY
VARIABLE
SCOPE
AND
GLOBAL
VARIABLES
IT
IS
POSSIBLE
TO
DEFINE
THE
SAME
VARIABLE
NAME
MORE
THAN
ONCE
IN
A
PROGRAM
WHEN
THE
VARIABLE
NAME
IS
USED
YOU
NEED
TO
KNOW
TO
WHICH
DEFINITION
IT
BELONGS
IN
THIS
SEC
TION
WE
DISCUSS
THE
RULES
FOR
DEALING
WITH
MULTIPLE
DEFINITIONS
OF
THE
SAME
NAME
A
VARIABLE
THAT
IS
DEFINED
WITHIN
A
FUNCTION
IS
VISIBLE
FROM
THE
POINT
AT
WHICH
IT
IS
DEFINED
UNTIL
THE
END
OF
THE
BLOCK
IN
WHICH
IT
WAS
DEFINED
THIS
AREA
IS
CALLED
THE
SCOPE
OF
THE
VARIABLE
CONSIDER
THE
VOLUME
VARIABLES
IN
THE
FOLLOWING
EXAMPLE
DOUBLE
DOUBLE
DOUBLE
VOLUME
RETURN
VOLUME
INT
MAIN
DOUBLE
VOLUME
COUT
VOLUME
ENDL
RETURN
EACH
VOLUME
VARIABLE
IS
DEFINED
IN
A
SEPARATE
FUNCTION
AND
THEIR
SCOPES
DO
NOT
OVERLAP
IN
THE
SAME
WAY
THAT
THERE
CAN
BE
A
STREET
NAMED
MAIN
STREET
IN
DIFFERENT
CITIES
A
C
PROGRAM
CAN
HAVE
MULTIPLE
VARIABLES
WITH
THE
SAME
NAME
AVAILABLE
ONLINE
AT
WWW
WILEY
COM
COLLEGE
HORSTMANN
VARIABLE
SCOPE
AND
GLOBAL
VARIABLES
IT
IS
NOT
LEGAL
TO
DEFINE
TWO
VARIABLES
WITH
THE
SAME
NAME
IN
THE
SAME
SCOPE
FOR
EXAMPLE
THE
FOLLOWING
IS
NOT
LEGAL
INT
MAIN
DOUBLE
VOLUME
DOUBLE
VOLUME
ERROR
CANNOT
DEFINE
ANOTHER
VOLUME
VARIABLE
IN
THIS
SCOPE
HOWEVER
YOU
CAN
DEFINE
ANOTHER
VARIABLE
WITH
THE
SAME
NAME
IN
A
NESTED
BLOCK
HERE
WE
DEFINE
TWO
VARIABLES
CALLED
AMOUNT
THE
SCOPE
OF
THE
PARAMETER
VARIABLE
AMOUNT
IS
THE
ENTIRE
FUNCTION
EXCEPT
INSIDE
THE
NESTED
BLOCK
INSIDE
THE
NESTED
BLOCK
AMOUNT
REFERS
TO
THE
VARIABLE
THAT
WAS
DEFINED
IN
THAT
BLOCK
WE
SAY
THAT
THE
INNER
VARIABLE
SHADOWS
THE
VARIABLE
THAT
IS
DEFINED
IN
THE
OUTER
BLOCK
YOU
SHOULD
AVOID
THIS
POTENTIALLY
CONFUSING
SITUATION
IN
THE
FUNCTIONS
THAT
YOU
WRITE
SIMPLY
BY
RENAMING
ONE
OF
THE
VARIABLES
VARIABLES
THAT
ARE
DEFINED
INSIDE
FUNCTIONS
ARE
CALLED
LOCAL
VARIABLES
C
ALSO
SUP
PORTS
GLOBAL
VARIABLES
VARIABLES
THAT
ARE
DEFINED
OUTSIDE
FUNCTIONS
A
GLOBAL
VARIABLE
IS
VISIBLE
TO
ALL
FUNCTIONS
THAT
ARE
DEFINED
AFTER
IT
FOR
EXAMPLE
THE
IOSTREAM
HEADER
DEFINES
GLOBAL
VARIABLES
CIN
AND
COUT
HERE
IS
AN
EXAMPLE
OF
A
GLOBAL
VARIABLE
INT
BALANCE
A
GLOBAL
VARIABLE
VOID
WITHDRAW
DOUBLE
AMOUNT
IF
BALANCE
AMOUNT
BALANCE
BALANCE
AMOUNT
INT
MAIN
WITHDRAW
COUT
BALANCE
ENDL
RETURN
THE
SCOPE
OF
THE
VARIABLE
BALANCE
EXTENDS
OVER
BOTH
THE
WITHDRAW
AND
THE
MAIN
FUNCTIONS
GENERALLY
GLOBAL
VARIABLES
ARE
NOT
A
GOOD
IDEA
WHEN
MULTIPLE
FUNCTIONS
UPDATE
GLOBAL
VARIABLES
THE
RESULT
CAN
BE
DIFFICULT
TO
PREDICT
PARTICULARLY
IN
LARGER
PROGRAMS
THAT
ARE
DEVELOPED
BY
MULTIPLE
PROGRAMMERS
IT
IS
VERY
IMPORTANT
THAT
THE
EFFECT
OF
EACH
FUNCTION
BE
CLEAR
AND
EASY
TO
UNDERSTAND
YOU
SHOULD
AVOID
GLOBAL
VARIABLES
IN
YOUR
PROGRAMS
CONSIDER
THIS
SAMPLE
PROGRAM
INT
X
INT
MYSTERY
INT
X
INT
FOR
INT
I
I
X
I
INT
X
I
X
RETURN
X
INT
MAIN
X
INT
MYSTERY
X
COUT
ENDL
WHICH
LINE
DEFINES
A
GLOBAL
VARIABLE
WHICH
LINES
DEFINE
LOCAL
VARIABLES
NAMED
X
WHICH
LINES
ARE
IN
THE
SCOPE
OF
THE
DEFINITION
OF
X
IN
LINE
WHICH
VARIABLE
IS
CHANGED
BY
THE
ASSIGNMENT
IN
LINE
THIS
PROGRAM
DEFINES
TWO
VARIABLES
WITH
THE
SAME
NAME
WHOSE
SCOPES
DON
T
OVERLAP
WHAT
ARE
THEY
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
REFERENCE
PARAMETERS
IF
YOU
WANT
TO
WRITE
A
FUNCTION
THAT
CHANGES
THE
VALUE
OF
AN
ARGUMENT
YOU
MUST
USE
A
REFERENCE
PARAMETER
IN
ORDER
TO
ALLOW
THE
CHANGE
WE
FIRST
EXPLAIN
WHY
A
DIFFERENT
PARAMETER
TYPE
IS
NECESSARY
THEN
WE
SHOW
YOU
THE
SYNTAX
FOR
REFERENCE
PARAMETERS
CONSIDER
A
FUNCTION
THAT
SIMULATES
WITHDRAWING
A
GIVEN
AMOUNT
OF
MONEY
FROM
A
BANK
ACCOUNT
PROVIDED
THAT
SUFFICIENT
FUNDS
ARE
AVAILABLE
IF
THE
AMOUNT
OF
MONEY
IS
INSUFFICIENT
A
PENALTY
IS
DEDUCTED
INSTEAD
THE
FUNCTION
WOULD
BE
USED
AS
FOLLOWS
DOUBLE
WITHDRAW
NOW
IS
WITHDRAW
INSUFFICIENT
FUNDS
NOW
IS
HERE
IS
A
FIRST
ATTEMPT
VOID
WITHDRAW
DOUBLE
BALANCE
DOUBLE
AMOUNT
DOES
NOT
WORK
CONST
DOUBLE
PENALTY
IF
BALANCE
AMOUNT
BALANCE
BALANCE
AMOUNT
ELSE
BALANCE
BALANCE
PENALTY
BUT
THIS
DOESN
T
WORK
LET
WALK
THROUGH
THE
FUNCTION
CALL
WITHDRAW
SEE
FIGURE
AS
THE
FUNCTION
STARTS
THE
PARAMETER
VARIABLE
BALANCE
IS
CREATED
AND
SET
TO
THE
SAME
VALUE
AS
AND
AMOUNT
IS
SET
TO
THEN
BALANCE
IS
MODIFIED
OF
COURSE
THAT
MODIFICATION
HAS
NO
EFFECT
ON
BECAUSE
BALANCE
IS
A
SEPARATE
VARIABLE
WHEN
THE
FUNCTION
RETURNS
BALANCE
IS
FORGOTTEN
AND
NO
MONEY
WAS
WITH
DRAWN
FROM
FIGURE
WHEN
BALANCE
AND
ACCOUNT
ARE
VALUE
PARAMETERS
MAIN
FUNCTION
WITHDRAW
FUNCTION
FIGURE
REFERENCE
AND
VALUE
PARAMETERS
THE
PARAMETER
VARIABLE
BALANCE
IS
CALLED
A
VALUE
PARAMETER
BECAUSE
IT
IS
INITIALIZED
WITH
THE
VALUE
OF
THE
SUPPLIED
ARGUMENT
ALL
FUNCTIONS
THAT
WE
HAVE
WRITTEN
SO
FAR
USE
VALUE
PARAMETERS
IN
THIS
SITUATION
THOUGH
WE
DON
T
JUST
WANT
BALANCE
TO
HAVE
THE
SAME
VALUE
AS
WE
WANT
BALANCE
TO
REFER
TO
THE
ACTUAL
VARIABLE
ACCOUNT
OR
OR
WHATEVER
VARIABLE
IS
SUPPLIED
IN
THE
CALL
THE
CONTENTS
OF
THAT
VARIABLE
SHOULD
BE
UPDATED
YOU
USE
A
REFERENCE
PARAMETER
WHEN
YOU
WANT
TO
UPDATE
A
VARIABLE
THAT
WAS
SUP
PLIED
IN
THE
FUNCTION
CALL
WHEN
WE
MAKE
BALANCE
INTO
A
REFERENCE
PARAMETER
THEN
BALANCE
IS
NOT
A
NEW
VARIABLE
BUT
A
REFERENCE
TO
AN
EXISTING
VARIABLE
ANY
CHANGE
IN
BAL
ANCE
IS
ACTUALLY
A
CHANGE
IN
THE
VARIABLE
TO
WHICH
BALANCE
REFERS
IN
THAT
PARTICULAR
CALL
FIGURE
SHOWS
THE
DIFFERENCE
BETWEEN
VALUE
AND
REFERENCE
PARAMETERS
TO
INDICATE
A
REFERENCE
PARAMETER
YOU
PLACE
AN
AFTER
THE
TYPE
NAME
VOID
WITHDRAW
DOUBLE
BALANCE
DOUBLE
AMOUNT
THE
TYPE
DOUBLE
IS
READ
A
REFERENCE
TO
A
DOUBLE
OR
MORE
BRIEFLY
DOUBLE
REF
THE
WITHDRAW
FUNCTION
NOW
HAS
TWO
PARAMETER
VARIABLES
ONE
OF
TYPE
DOUBLE
REF
AND
THE
OTHER
A
VALUE
PARAMETER
OF
TYPE
DOUBLE
THE
BODY
OF
THE
FUNCTION
IS
UNCHANGED
WHAT
HAS
CHANGED
IS
THE
MEANING
OF
THE
ASSIGNMENTS
TO
THE
BALANCE
VARIABLE
THE
ASSIGNMENT
BALANCE
BALANCE
AMOUNT
NOW
CHANGES
THE
VARIABLE
THAT
WAS
PASSED
TO
THE
FUNCTION
SEE
FIGURE
A
REFERENCE
PARAMETER
FOR
A
BANK
BALANCE
IS
LIKE
AN
ATM
CARD
IT
ALLOWS
YOU
TO
CHANGE
THE
BALANCE
IN
CONTRAST
A
VALUE
PARAMETER
CAN
ONLY
TELL
YOU
THE
BALANCE
FIGURE
WHEN
BALANCE
IS
A
REFERENCE
PARAMETER
FOR
EXAMPLE
THE
CALL
WITHDRAW
MODIFIES
THE
VARIABLE
AND
THE
CALL
WITHDRAW
MODIFIES
THE
VARIABLE
THE
ARGUMENT
FOR
A
REFERENCE
PARAMETER
MUST
ALWAYS
BE
A
VARIABLE
IT
WOULD
BE
AN
ERROR
TO
SUPPLY
A
NUMBER
WITHDRAW
ERROR
ARGUMENT
FOR
REFERENCE
PARAMETER
MUST
BE
A
VARIABLE
THE
REASON
IS
CLEAR
THE
FUNCTION
MODIFIES
THE
REFERENCE
PARAMETER
BUT
IT
IS
IMPOSSI
BLE
TO
CHANGE
THE
VALUE
OF
A
NUMBER
FOR
THE
SAME
REASON
YOU
CANNOT
SUPPLY
AN
EXPRESSION
WITHDRAW
ERROR
ARGUMENT
FOR
REFERENCE
PARAMETER
MUST
BE
A
VARIABLE
ACCOUNT
CPP
PROGRAM
RUN
WOULD
THE
WITHDRAW
FUNCTION
WORK
CORRECTLY
IF
THE
AMOUNT
PARAMETER
WAS
DEFINED
AS
DOUBLE
INSTEAD
OF
DOUBLE
THE
FOLLOWING
FUNCTION
IS
INTENDED
TO
TRANSFER
THE
GIVEN
AMOUNT
OF
MONEY
FROM
ONE
ACCOUNT
TO
ANOTHER
SUPPLY
THE
FUNCTION
PARAMETERS
VOID
TRANSFER
IF
AMOUNT
AMOUNT
AMOUNT
CHANGE
THE
WITHDRAW
FUNCTION
SO
THAT
IT
RETURNS
A
BOOL
VALUE
INDICATING
WHETHER
THE
WITHDRAWAL
WAS
SUCCESSFUL
DO
NOT
CHARGE
A
PENALTY
IF
THE
BALANCE
WAS
INSUFFICIENT
WRITE
A
FUNCTION
MINMAX
SO
THAT
THE
CALL
MINMAX
X
Y
A
B
SETS
A
TO
THE
SMALLER
OF
X
AND
Y
AND
B
TO
THE
LARGER
OF
X
AND
Y
WHAT
DOES
THIS
PROGRAM
PRINT
VOID
MYSTERY
INT
A
INT
B
A
A
B
B
B
A
A
B
A
INT
MAIN
INT
X
INT
Y
MYSTERY
X
Y
COUT
X
Y
ENDL
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
RECURSIVE
FUNCTIONS
OPTIONAL
A
RECURSIVE
FUNCTION
IS
A
FUNCTION
THAT
CALLS
ITSELF
THIS
IS
NOT
AS
UNUSUAL
AS
IT
SOUNDS
AT
FIRST
SUPPOSE
YOU
FACE
THE
ARDUOUS
TASK
OF
CLEANING
UP
AN
ENTIRE
HOUSE
YOU
MAY
WELL
SAY
TO
YOURSELF
I
LL
PICK
A
ROOM
AND
CLEAN
IT
AND
THEN
I
LL
CLEAN
THE
OTHER
ROOMS
IN
OTHER
WORDS
THE
CLEANUP
TASK
CALLS
ITSELF
BUT
WITH
A
SIMPLER
INPUT
EVENTUALLY
ALL
THE
ROOMS
WILL
BE
CLEANED
IN
C
A
RECURSIVE
FUNCTION
USES
THE
SAME
PRINCIPLE
HERE
IS
A
TYPICAL
EXAMPLE
WE
WANT
TO
PRINT
TRIANGLE
PATTERNS
LIKE
THIS
CLEANING
UP
A
HOUSE
CAN
BE
SOLVED
RECURSIVELY
CLEAN
ONE
ROOM
THEN
CLEAN
UP
THE
REST
SPECIFICALLY
OUR
TASK
IS
TO
PROVIDE
A
FUNCTION
VOID
INT
THE
TRIANGLE
GIVEN
ABOVE
IS
PRINTED
BY
CALLING
TO
SEE
HOW
RECURSION
HELPS
CONSIDER
HOW
A
TRIANGLE
WITH
SIDE
LENGTH
CAN
BE
OBTAINED
FROM
A
TRIANGLE
WITH
SIDE
LENGTH
PRINT
THE
TRIANGLE
WITH
SIDE
LENGTH
PRINT
A
LINE
WITH
FOUR
MORE
GENERALLY
FOR
AN
ARBITRARY
SIDE
LENGTH
PRINT
THE
TRIANGLE
WITH
SIDE
LENGTH
PRINT
A
LINE
WITH
SIDE
LENGTH
HERE
IS
THE
PSEUDOCODE
TRANSLATED
TO
C
VOID
INT
FOR
INT
I
I
I
COUT
COUT
ENDL
THERE
IS
JUST
ONE
PROBLEM
WITH
THIS
IDEA
WHEN
THE
SIDE
LENGTH
IS
WE
DON
T
WANT
TO
CALL
AND
SO
ON
THE
SOLUTION
IS
SIMPLY
TO
TREAT
THIS
AS
A
SPECIAL
CASE
AND
NOT
TO
PRINT
ANYTHING
WHEN
IS
LESS
THAN
VOID
INT
IF
RETURN
FOR
INT
I
I
I
COUT
LOOK
AT
THE
FUNCTION
ONE
MORE
TIME
AND
NOTICE
HOW
UTTERLY
REASONABLE
IT
IS
IF
THE
SIDE
LENGTH
IS
NOTHING
NEEDS
TO
BE
PRINTED
THE
NEXT
PART
IS
JUST
AS
REASON
ABLE
PRINT
THE
SMALLER
TRIANGLE
AND
DON
T
THINK
ABOUT
WHY
THAT
WORKS
THEN
PRINT
A
ROW
OF
CLEARLY
THE
RESULT
IS
A
TRIANGLE
OF
THE
DESIRED
SIZE
THERE
ARE
TWO
KEY
REQUIREMENTS
TO
MAKE
SURE
THAT
THE
RECURSION
IS
SUCCESSFUL
EVERY
RECURSIVE
CALL
MUST
SIMPLIFY
THE
TASK
IN
SOME
WAY
THERE
MUST
BE
SPECIAL
CASES
TO
HANDLE
THE
SIMPLEST
TASKS
DIRECTLY
THE
FUNCTION
CALLS
ITSELF
AGAIN
WITH
SMALLER
AND
SMALLER
SIDE
LENGTHS
EVENTUALLY
THE
SIDE
LENGTH
MUST
REACH
AND
THE
FUNCTION
STOPS
CALLING
ITSELF
HERE
IS
WHAT
HAPPENS
WHEN
WE
PRINT
A
TRIANGLE
WITH
SIDE
LENGTH
THE
CALL
PRINTTRIANGLE
CALLS
PRINTTRIANGLE
THE
CALL
PRINTTRIANGLE
CALLS
PRINTTRIANGLE
THE
CALL
PRINTTRIANGLE
CALLS
PRINTTRIANGLE
THE
CALL
PRINTTRIANGLE
CALLS
PRINTTRIANGLE
THE
CALL
PRINTTRIANGLE
RETURNS
DOING
NOTHING
THE
CALL
PRINTTRIANGLE
PRINTS
THE
CALL
PRINTTRIANGLE
PRINTS
THE
CALL
PRINTTRIANGLE
PRINTS
THE
CALL
PRINTS
THE
CALL
PATTERN
OF
A
RECURSIVE
FUNCTION
LOOKS
COMPLICATED
AND
THE
KEY
TO
THE
SUCCESS
FUL
DESIGN
OF
A
RECURSIVE
FUNCTION
IS
NOT
TO
THINK
ABOUT
IT
THIS
SET
OF
RUSSIAN
DOLLS
LOOKS
SIMILAR
TO
THE
CALL
PATTERN
OF
A
RECURSIVE
FUNCTION
TRIANGLE
CPP
PROGRAM
RUN
RECURSION
IS
NOT
REALLY
NECESSARY
TO
PRINT
TRIANGLE
SHAPES
YOU
CAN
USE
NESTED
LOOPS
LIKE
THIS
FOR
INT
I
I
I
FOR
INT
J
J
I
J
COUT
COUT
ENDL
HOWEVER
THIS
PAIR
OF
LOOPS
IS
A
BIT
TRICKY
MANY
PEOPLE
FIND
THE
RECURSIVE
SOLUTION
SIMPLER
TO
UNDERSTAND
CONSIDER
THIS
SLIGHT
MODIFICATION
OF
THE
FUNCTION
VOID
INT
IF
RETURN
FOR
INT
I
I
I
COUT
WHAT
IS
THE
RESULT
OF
CONSIDER
THIS
RECURSIVE
FUNCTION
INT
MYSTERY
INT
N
IF
N
RETURN
RETURN
N
MYSTERY
N
WHAT
IS
MYSTERY
CONSIDER
THIS
RECURSIVE
FUNCTION
INT
MYSTERY
INT
N
IF
N
RETURN
RETURN
MYSTERY
N
WHAT
IS
MYSTERY
WRITE
A
RECURSIVE
FUNCTION
FOR
PRINTING
N
BOX
SHAPES
IN
A
ROW
THE
FUNCTION
IN
SECTION
ACCEPTED
ARGUMENTS
USING
A
RECURSIVE
CALL
EXTEND
ITS
RANGE
TO
FOR
EXAMPLE
AN
INPUT
OF
SHOULD
RETURN
TWELVE
THOUSAND
THREE
HUNDRED
FORTY
FIVE
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
STEP
BREAK
THE
INPUT
INTO
PARTS
THAT
CAN
THEMSELVES
BE
INPUTS
TO
THE
PROBLEM
IN
YOUR
MIND
FIX
A
PARTICULAR
INPUT
OR
SET
OF
INPUTS
FOR
THE
TASK
THAT
YOU
WANT
TO
SOLVE
AND
THINK
HOW
YOU
CAN
SIMPLIFY
THE
INPUTS
LOOK
FOR
SIMPLIFICATIONS
THAT
CAN
BE
SOLVED
BY
THE
SAME
TASK
AND
WHOSE
SOLUTIONS
ARE
RELATED
TO
THE
ORIGINAL
TASK
IN
THE
DIGIT
SUM
PROBLEM
CONSIDER
HOW
WE
CAN
SIMPLIFY
AN
INPUT
SUCH
AS
N
WOULD
IT
HELP
TO
SUBTRACT
AFTER
ALL
BUT
CONSIDER
N
THERE
SEEMS
TO
BE
NO
OBVIOUS
RELATIONSHIP
BETWEEN
AND
A
MUCH
MORE
PROMISING
IDEA
IS
TO
REMOVE
THE
LAST
DIGIT
THAT
IS
COMPUTE
N
THE
DIGIT
SUM
OF
IS
DIRECTLY
RELATED
TO
THE
DIGIT
SUM
OF
STEP
COMBINE
SOLUTIONS
WITH
SIMPLER
INPUTS
INTO
A
SOLUTION
OF
THE
ORIGINAL
PROBLEM
IN
YOUR
MIND
CONSIDER
THE
SOLUTIONS
FOR
THE
SIMPLER
INPUTS
THAT
YOU
HAVE
DISCOVERED
IN
STEP
DON
T
WORRY
HOW
THOSE
SOLUTIONS
ARE
OBTAINED
SIMPLY
HAVE
FAITH
THAT
THE
SOLUTIONS
ARE
READILY
AVAILABLE
JUST
SAY
TO
YOURSELF
THESE
ARE
SIMPLER
INPUTS
SO
SOMEONE
ELSE
WILL
SOLVE
THE
PROBLEM
FOR
ME
IN
THE
CASE
OF
THE
DIGIT
SUM
TASK
ASK
YOURSELF
HOW
YOU
CAN
OBTAIN
IF
YOU
KNOW
YOU
SIMPLY
ADD
THE
LAST
DIGIT
AND
YOU
ARE
DONE
HOW
DO
YOU
GET
THE
LAST
DIGIT
AS
THE
REMAINDER
N
THE
VALUE
N
CAN
THEREFORE
BE
OBTAINED
AS
N
N
DON
T
WORRY
HOW
N
IS
COMPUTED
THE
INPUT
IS
SMALLER
AND
THEREFORE
IT
JUST
WORKS
STEP
FIND
SOLUTIONS
TO
THE
SIMPLEST
INPUTS
A
RECURSIVE
COMPUTATION
KEEPS
SIMPLIFYING
ITS
INPUTS
TO
MAKE
SURE
THAT
THE
RECURSION
COMES
TO
A
STOP
YOU
MUST
DEAL
WITH
THE
SIMPLEST
INPUTS
SEPARATELY
COME
UP
WITH
SPECIAL
SOLUTIONS
FOR
THEM
THAT
IS
USUALLY
VERY
EASY
LOOK
AT
THE
SIMPLEST
INPUTS
FOR
THE
TEST
A
NUMBER
WITH
A
SINGLE
DIGIT
RANDOM
FACT
THE
EXPLOSIVE
GROWTH
OF
PERSONAL
COMPUTERS
IN
MARCIAN
E
TED
HOFF
AN
ENGI
NEER
AT
INTEL
CORPO
RATION
WAS
WORKING
ON
A
CHIP
FOR
A
MANUFACTURER
OF
ELECTRONIC
CALCULATORS
HE
REALIZED
THAT
IT
WOULD
BE
A
BETTER
IDEA
TO
DEVELOP
A
GENERAL
PURPOSE
CHIP
THAT
COULD
BE
PROGRAMMED
TO
INTER
FACE
WITH
THE
KEYS
AND
DISPLAY
OF
A
CAL
CULATOR
RATHER
THAN
TO
DO
YET
ANOTHER
CUSTOM
DESIGN
THUS
THE
MICROPROCES
SOR
WAS
BORN
AT
THE
TIME
ITS
PRIMARY
APPLICATION
WAS
AS
A
CONTROLLER
FOR
CAL
CULATORS
WASHING
MACHINES
AND
THE
LIKE
IT
TOOK
YEARS
FOR
THE
COMPUTER
INDUSTRY
TO
NOTICE
THAT
A
GENUINE
CEN
TRAL
PROCESSING
UNIT
WAS
NOW
AVAILABLE
AS
A
SINGLE
CHIP
HOBBYISTS
WERE
THE
FIRST
TO
CATCH
ON
IN
THE
FIRST
COMPUTER
KIT
THE
ALTAIR
WAS
AVAILABLE
FROM
MITS
ELECTRONICS
FOR
ABOUT
THE
KIT
CONSISTED
OF
THE
MICROPROCESSOR
A
CIR
CUIT
BOARD
A
VERY
SMALL
AMOUNT
OF
MEMORY
TOGGLE
SWITCHES
AND
A
ROW
OF
DISPLAY
LIGHTS
PURCHASERS
HAD
TO
SOL
DER
AND
ASSEMBLE
IT
THEN
PROGRAM
IT
IN
MACHINE
LANGUAGE
THROUGH
THE
TOGGLE
SWITCHES
IT
WAS
NOT
A
BIG
HIT
THE
FIRST
BIG
HIT
WAS
THE
APPLE
II
IT
WAS
A
REAL
COMPUTER
WITH
A
KEYBOARD
A
MONITOR
AND
A
FLOPPY
DISK
DRIVE
WHEN
IT
WAS
FIRST
RELEASED
USERS
HAD
A
MACHINE
THAT
COULD
PLAY
SPACE
INVADERS
RUN
A
PRIMITIVE
BOOKKEEP
ING
PROGRAM
OR
LET
USERS
PROGRAM
IT
IN
BASIC
THE
ORIGINAL
APPLE
II
DID
NOT
EVEN
SUPPORT
LOWERCASE
LETTERS
MAK
ING
IT
WORTHLESS
FOR
WORD
PROCESSING
THE
BREAKTHROUGH
CAME
IN
WITH
A
NEW
SPREADSHEET
PROGRAM
VISICALC
IN
A
SPREADSHEET
YOU
ENTER
FINANCIAL
DATA
AND
THEIR
RELATIONSHIPS
INTO
A
GRID
OF
ROWS
AND
COLUMNS
SEE
THE
FIGURE
AT
RIGHT
THEN
YOU
MODIFY
SOME
OF
THE
DATA
AND
WATCH
IN
REAL
TIME
HOW
THE
OTHERS
CHANGE
FOR
EXAMPLE
YOU
CAN
SEE
HOW
CHANGING
THE
MIX
OF
WIDGETS
IN
A
MANUFACTURING
PLANT
MIGHT
AFFECT
ESTIMATED
COSTS
AND
PROFITS
MIDDLE
MANAGERS
IN
COMPANIES
WHO
UNDER
STOOD
COMPUTERS
AND
WERE
FED
UP
WITH
HAVING
TO
WAIT
FOR
HOURS
OR
DAYS
TO
GET
THEIR
DATA
RUNS
BACK
FROM
THE
COMPUT
ING
CENTER
SNAPPED
UP
VISICALC
AND
THE
COMPUTER
THAT
WAS
NEEDED
TO
RUN
IT
FOR
THEM
THE
COMPUTER
WAS
A
SPREAD
SHEET
MACHINE
THE
NEXT
BIG
HIT
WAS
THE
IBM
PER
SONAL
COMPUTER
EVER
AFTER
KNOWN
AS
THE
PC
IT
WAS
THE
FIRST
WIDELY
AVAILABLE
PERSONAL
COMPUTER
THAT
USED
INTEL
BIT
PROCESSOR
THE
WHOSE
SUCCESSORS
ARE
STILL
BEING
USED
IN
PER
SONAL
COMPUTERS
TODAY
THE
SUCCESS
OF
THE
PC
WAS
BASED
NOT
ON
ANY
ENGI
NEERING
BREAKTHROUGHS
BUT
ON
THE
FACT
THAT
IT
WAS
EASY
TO
CLONE
IBM
PUBLISHED
THE
COMPUTER
SPECIFICATIONS
IN
ORDER
TO
ENCOURAGE
THIRD
PARTIES
TO
DEVELOP
PLUG
IN
CARDS
PERHAPS
IBM
DID
NOT
FORESEE
THAT
FUNCTIONALLY
EQUIVALENT
VERSIONS
OF
THEIR
COMPUTER
COULD
BE
RECREATED
BY
OTHERS
BUT
A
VARIETY
OF
PC
CLONE
VENDORS
EMERGED
AND
ULTI
MATELY
IBM
STOPPED
SELLING
PERSONAL
COMPUTERS
IBM
NEVER
PRODUCED
AN
OPERATING
SYSTEM
FOR
ITS
PCS
THAT
IS
THE
SOFT
WARE
THAT
ORGANIZES
THE
INTERACTION
BETWEEN
THE
USER
AND
THE
COMPUTER
STARTS
APPLICATION
PROGRAMS
AND
MAN
AGES
DISK
STORAGE
AND
OTHER
RESOURCES
INSTEAD
IBM
OFFERED
CUSTOMERS
THE
OPTION
OF
THREE
SEPARATE
OPERATING
SYSTEMS
MOST
CUSTOMERS
COULDN
T
CARE
LESS
ABOUT
THE
OPERATING
SYSTEM
A
NUMBER
WITH
A
SINGLE
DIGIT
IS
ITS
OWN
DIGIT
SUM
SO
YOU
CAN
STOP
THE
RECURSION
WHEN
N
AND
RETURN
N
IN
THAT
CASE
OR
IF
YOU
PREFER
YOU
CAN
BE
EVEN
LAZIER
IF
N
HAS
A
SINGLE
DIGIT
THEN
N
N
EQUALS
N
YOU
CAN
SIMPLY
TERMINATE
THE
RECURSION
WHEN
N
IS
ZERO
STEP
IMPLEMENT
THE
SOLUTION
BY
COMBINING
THE
SIMPLE
CASES
AND
THE
REDUCTION
STEP
NOW
YOU
ARE
READY
TO
IMPLEMENT
THE
SOLUTION
MAKE
SEPARATE
CASES
FOR
THE
SIMPLE
INPUTS
THAT
YOU
CONSIDERED
IN
STEP
IF
THE
INPUT
ISN
T
ONE
OF
THE
SIMPLEST
CASES
THEN
IMPLEMENT
THE
LOGIC
YOU
DISCOVERED
IN
STEP
HERE
IS
THE
COMPLETE
FUNCTION
INT
INT
N
SPECIAL
CASE
FOR
TERMINATING
THE
RECURSION
IF
N
RETURN
GENERAL
CASE
RETURN
N
N
THEY
CHOSE
THE
SYSTEM
THAT
WAS
ABLE
TO
LAUNCH
MOST
OF
THE
FEW
APPLICATIONS
THAT
EXISTED
AT
THE
TIME
IT
HAPPENED
TO
BE
DOS
DISK
OPERATING
SYSTEM
BY
MICROSOFT
MICROSOFT
LICENSED
THE
SAME
OPERATING
SYSTEM
TO
OTHER
HARDWARE
VENDORS
AND
ENCOURAGED
SOFTWARE
COMPANIES
TO
WRITE
DOS
APPLICATIONS
A
HUGE
NUMBER
OF
USEFUL
APPLICATION
PROGRAMS
FOR
PC
COMPATIBLE
MACHINES
WAS
THE
RESULT
PC
APPLICATIONS
WERE
CERTAINLY
USE
FUL
BUT
THEY
WERE
NOT
EASY
TO
LEARN
EVERY
VENDOR
DEVELOPED
A
DIFFERENT
USER
INTERFACE
THE
COLLECTION
OF
KEY
STROKES
MENU
OPTIONS
AND
SETTINGS
THAT
A
USER
NEEDED
TO
MASTER
TO
USE
A
SOFTWARE
PACKAGE
EFFECTIVELY
DATA
EXCHANGE
BETWEEN
APPLICATIONS
WAS
DIFFICULT
BECAUSE
EACH
PROGRAM
USED
A
DIFFERENT
DATA
FORMAT
THE
APPLE
MAC
INTOSH
CHANGED
ALL
THAT
IN
THE
DESIGNERS
OF
THE
MACINTOSH
HAD
THE
VISION
TO
SUPPLY
AN
INTUITIVE
USER
INTER
FACE
WITH
THE
COMPUTER
AND
TO
FORCE
SOFTWARE
DEVELOPERS
TO
ADHERE
TO
IT
IT
TOOK
MICROSOFT
AND
PC
COMPATIBLE
MANUFACTURERS
YEARS
TO
CATCH
UP
MOST
PERSONAL
COMPUTERS
ARE
USED
FOR
ACCESSING
INFORMATION
FROM
ONLINE
SOURCES
ENTERTAINMENT
WORD
PROCESS
ING
AND
HOME
FINANCE
SOME
ANALYSTS
PREDICT
THAT
THE
PERSONAL
COMPUTER
WILL
MERGE
WITH
THE
TELEVISION
SET
AND
CABLE
NETWORK
INTO
AN
ENTERTAINMENT
AND
INFORMATION
APPLIANCE
THE
VISICALC
SPREADSHEET
RUNNING
ON
AN
APPLE
II
UNDERSTAND
THE
CONCEPTS
OF
FUNCTIONS
ARGUMENTS
AND
RETURN
VALUES
A
FUNCTION
IS
A
NAMED
SEQUENCE
OF
INSTRUCTIONS
ARGUMENTS
ARE
SUPPLIED
WHEN
A
FUNCTION
IS
CALLED
THE
RETURN
VALUE
IS
THE
RESULT
THAT
THE
FUNCTION
COMPUTES
BE
ABLE
TO
IMPLEMENT
FUNCTIONS
WHEN
DEFINING
A
FUNCTION
YOU
PROVIDE
A
NAME
FOR
THE
FUNCTION
A
VARIABLE
FOR
EACH
ARGUMENT
AND
A
TYPE
FOR
THE
RESULT
FUNCTION
COMMENTS
EXPLAIN
THE
PURPOSE
OF
THE
FUNCTION
THE
MEANING
OF
THE
PARAMETER
VARIABLES
AND
RETURN
VALUE
AS
WELL
AS
ANY
SPECIAL
REQUIREMENTS
DESCRIBE
THE
PROCESS
OF
PARAMETER
PASSING
PARAMETER
VARIABLES
HOLD
THE
ARGUMENT
VALUES
SUPPLIED
IN
THE
FUNCTION
CALL
DESCRIBE
THE
PROCESS
OF
RETURNING
A
VALUE
FROM
A
FUNCTION
THE
RETURN
STATEMENT
TERMINATES
A
FUNCTION
CALL
AND
YIELDS
THE
FUNCTION
RESULT
DESIGN
AND
IMPLEMENT
FUNCTIONS
WITHOUT
RETURN
VALUES
USE
A
RETURN
TYPE
OF
VOID
TO
INDICATE
THAT
A
FUNCTION
DOES
NOT
RETURN
A
VALUE
DEVELOP
FUNCTIONS
THAT
CAN
BE
REUSED
FOR
MULTIPLE
PROBLEMS
ELIMINATE
REPLICATED
CODE
OR
PSEUDOCODE
BY
DEFINING
A
FUNCTION
DESIGN
YOUR
FUNCTIONS
TO
BE
REUSABLE
SUPPLY
PARAMETER
VARIABLES
FOR
THE
VALUES
THAT
CAN
VARY
WHEN
THE
FUNCTION
IS
REUSED
APPLY
THE
DESIGN
PRINCIPLE
OF
STEPWISE
REFINEMENT
USE
THE
PROCESS
OF
STEPWISE
REFINEMENT
TO
DECOMPOSE
COMPLEX
TASKS
INTO
SIMPLER
ONES
WHEN
YOU
DISCOVER
THAT
YOU
NEED
A
FUNCTION
WRITE
A
DESCRIPTION
OF
THE
PARAMETER
VARIABLES
AND
RETURN
VALUES
A
FUNCTION
MAY
REQUIRE
SIMPLER
FUNCTIONS
TO
CARRY
OUT
ITS
WORK
DETERMINE
THE
SCOPE
OF
VARIABLES
IN
A
PROGRAM
THE
SCOPE
OF
A
VARIABLE
IS
THE
PART
OF
THE
PROGRAM
IN
WHICH
IT
IS
VISIBLE
A
VARIABLE
IN
A
NESTED
BLOCK
SHADOWS
A
VARIABLE
WITH
THE
SAME
NAME
IN
AN
OUTER
BLOCK
A
LOCAL
VARIABLE
IS
DEFINED
INSIDE
A
FUNCTION
A
GLOBAL
VARIABLE
IS
DEFINED
OUTSIDE
A
FUNCTION
AVOID
GLOBAL
VARIABLES
IN
YOUR
PROGRAMS
DESCRIBE
HOW
REFERENCE
PARAMETERS
WORK
MODIFYING
A
VALUE
PARAMETER
HAS
NO
EFFECT
ON
THE
CALLER
A
REFERENCE
PARAMETER
REFERS
TO
A
VARIABLE
THAT
IS
SUPPLIED
IN
A
FUNCTION
CALL
MODIFYING
A
REFERENCE
PARAMETER
UPDATES
THE
VARIABLE
THAT
WAS
SUPPLIED
IN
THE
CALL
UNDERSTAND
RECURSIVE
FUNCTION
CALLS
AND
IMPLEMENT
SIMPLE
RECURSIVE
FUNCTIONS
A
RECURSIVE
COMPUTATION
SOLVES
A
PROBLEM
BY
USING
THE
SOLUTION
OF
THE
SAME
PROBLEM
WITH
SIMPLER
INPUTS
FOR
A
RECURSION
TO
TERMINATE
THERE
MUST
BE
SPECIAL
CASES
FOR
THE
SIMPLEST
INPUTS
THE
KEY
TO
FINDING
A
RECURSIVE
SOLUTION
IS
REDUCING
THE
INPUT
TO
A
SIMPLER
INPUT
FOR
THE
SAME
PROBLEM
WHEN
DESIGNING
A
RECURSIVE
SOLUTION
DO
NOT
WORRY
ABOUT
MULTIPLE
NESTED
CALLS
SIMPLY
FOCUS
ON
REDUCING
A
PROBLEM
TO
A
SLIGHTLY
SIMPLER
ONE
WHAT
IS
THE
DIFFERENCE
BETWEEN
AN
ARGUMENT
AND
A
RETURN
VALUE
HOW
MANY
ARGU
MENTS
CAN
A
FUNCTION
HAVE
HOW
MANY
RETURN
VALUES
IN
WHICH
SEQUENCE
ARE
THE
LINES
OF
THE
PROGRAM
CUBE
CPP
ON
PAGE
EXECUTED
STARTING
WITH
THE
FIRST
LINE
OF
MAIN
GIVE
EXAMPLES
OF
THE
FOLLOWING
EITHER
FROM
THE
C
LIBRARY
OR
FROM
THE
FUNCTIONS
DISCUSSED
IN
THIS
CHAPTER
A
A
FUNCTION
WITH
TWO
DOUBLE
ARGUMENTS
AND
A
DOUBLE
RETURN
VALUE
B
A
FUNCTION
WITH
A
DOUBLE
ARGUMENT
AND
A
DOUBLE
RETURN
VALUE
C
A
FUNCTION
WITH
TWO
INT
ARGUMENTS
AND
AN
INT
RETURN
VALUE
D
A
FUNCTION
WITH
AN
INT
ARGUMENT
AND
A
STRING
RETURN
VALUE
E
A
FUNCTION
WITH
A
STRING
ARGUMENT
AND
NO
RETURN
VALUE
F
A
FUNCTION
WITH
A
REFERENCE
PARAMETER
AND
NO
RETURN
VALUE
G
A
FUNCTION
WITH
NO
ARGUMENTS
AND
AN
INT
RETURN
VALUE
TRUE
OR
FALSE
A
A
FUNCTION
HAS
EXACTLY
ONE
RETURN
STATEMENT
B
A
FUNCTION
HAS
AT
LEAST
ONE
RETURN
STATEMENT
C
A
FUNCTION
HAS
AT
MOST
ONE
RETURN
VALUE
D
A
FUNCTION
WITH
RETURN
VALUE
VOID
NEVER
HAS
A
RETURN
STATEMENT
E
WHEN
EXECUTING
A
RETURN
STATEMENT
THE
FUNCTION
EXITS
IMMEDIATELY
F
A
FUNCTION
WITH
RETURN
VALUE
VOID
MUST
PRINT
A
RESULT
G
A
FUNCTION
WITHOUT
ARGUMENTS
ALWAYS
RETURNS
THE
SAME
VALUE
CONSIDER
THESE
FUNCTIONS
DOUBLE
F
DOUBLE
X
RETURN
G
X
SQRT
H
X
DOUBLE
G
DOUBLE
X
RETURN
H
X
DOUBLE
H
DOUBLE
X
RETURN
X
X
K
X
DOUBLE
K
DOUBLE
X
RETURN
X
WITHOUT
ACTUALLY
COMPILING
AND
RUNNING
A
PROGRAM
DETERMINE
THE
RESULTS
OF
THE
FOLLOWING
FUNCTION
CALLS
A
DOUBLE
F
B
DOUBLE
G
H
C
DOUBLE
K
G
H
D
DOUBLE
F
F
F
E
DOUBLE
F
G
H
K
WRITE
PSEUDOCODE
FOR
A
FUNCTION
THAT
TRANSLATES
A
TELEPHONE
NUMBER
WITH
LETTERS
IN
IT
SUCH
AS
FLOWERS
INTO
THE
ACTUAL
PHONE
NUMBER
USE
THE
STANDARD
LETTERS
ON
A
PHONE
PAD
DESIGN
A
FUNCTION
THAT
PRINTS
A
FLOATING
POINT
NUMBER
AS
A
CURRENCY
VALUE
WITH
A
SIGN
AND
TWO
DECIMAL
DIGITS
A
INDICATE
HOW
THE
PROGRAMS
CPP
AND
INVTABLE
CPP
SHOULD
CHANGE
TO
USE
YOUR
FUNCTION
B
WHAT
CHANGE
IS
REQUIRED
IF
THE
PROGRAMS
SHOULD
SHOW
A
DIFFERENT
CURRENCY
SUCH
AS
EURO
FOR
EACH
OF
THE
VARIABLES
IN
THE
FOLLOWING
PROGRAM
INDICATE
THE
SCOPE
THEN
DETER
MINE
WHAT
THE
PROGRAM
PRINTS
WITHOUT
ACTUALLY
RUNNING
THE
PROGRAM
INT
A
INT
B
INT
F
INT
C
INT
N
A
C
IF
N
C
N
A
B
RETURN
N
INT
G
INT
C
INT
N
INT
A
C
IF
N
F
C
N
A
B
RETURN
N
INT
MAIN
INT
I
INT
B
G
I
COUT
A
B
I
ENDL
RETURN
WE
HAVE
SEEN
THREE
KINDS
OF
VARIABLES
IN
C
GLOBAL
VARIABLES
PARAMETER
VARIABLES
AND
LOCAL
VARIABLES
CLASSIFY
THE
VARIABLES
OF
EXERCISE
ACCORDING
TO
THESE
CATEGORIES
USE
THE
PROCESS
OF
STEPWISE
REFINEMENT
TO
DESCRIBE
THE
PROCESS
OF
MAKING
SCRAMBLED
EGGS
DISCUSS
WHAT
YOU
DO
IF
YOU
DO
NOT
FIND
EGGS
IN
THE
REFRIGERATOR
HOW
MANY
PARAMETERS
DOES
THE
FOLLOWING
FUNCTION
HAVE
HOW
MANY
RETURN
VALUES
DOES
IT
HAVE
HINT
THE
C
NOTIONS
OF
PARAMETER
AND
RETURN
VALUE
ARE
NOT
THE
SAME
AS
THE
INTUITIVE
NOTIONS
OF
INPUT
AND
OUTPUT
VOID
AVERAGE
DOUBLE
AVG
COUT
PLEASE
ENTER
TWO
NUMBERS
DOUBLE
X
DOUBLE
Y
CIN
X
Y
AVG
X
Y
PERFORM
A
WALKTHROUGH
OF
THE
FUNCTION
WITH
THE
FOLLOWING
ARGUMENTS
A
B
C
D
E
F
G
CONSIDER
THE
FOLLOWING
FUNCTION
INT
F
INT
N
IF
N
RETURN
IF
N
N
IS
EVEN
RETURN
F
N
ELSE
RETURN
F
N
PERFORM
TRACES
OF
THE
COMPUTATIONS
F
F
F
F
F
F
F
F
F
AND
F
ELIMINATE
THE
GLOBAL
VARIABLE
IN
THE
CODE
AT
THE
END
OF
SECTION
BY
A
PASSING
THE
BALANCE
TO
THE
WITHDRAW
FUNCTION
AND
RETURNING
THE
UPDATED
BALANCE
B
PASSING
THE
BALANCE
AS
A
REFERENCE
PARAMETER
TO
THE
WITHDRAW
FUNCTION
GIVEN
THE
FOLLOWING
FUNCTIONS
TRACE
THE
FUNCTION
CALL
INT
I
INT
ISQRT
INT
N
I
WHILE
I
I
N
I
RETURN
I
VOID
INT
N
FOR
I
I
N
I
COUT
ISQRT
I
HOW
CAN
YOU
FIX
THE
CODE
SO
THAT
THE
OUTPUT
IS
AS
EXPECTED
THAT
IS
CONSIDER
THE
FOLLOWING
FUNCTION
THAT
IS
INTENDED
TO
SWAP
THE
VALUES
OF
TWO
INTEGERS
VOID
INT
A
INT
B
A
B
B
A
INT
MAIN
INT
X
INT
Y
X
Y
COUT
X
Y
ENDL
RETURN
WHY
DOESN
T
THE
FUNCTION
SWAP
THE
CONTENTS
OF
X
AND
Y
HOW
CAN
YOU
REWRITE
THE
FUNCTION
TO
WORK
CORRECTLY
CONSIDER
THE
FOLLOWING
FUNCTION
THAT
IS
INTENDED
TO
SWAP
THE
VALUES
OF
TWO
INTEGERS
VOID
INT
A
INT
B
INT
TEMP
A
A
B
B
TEMP
INT
MAIN
INT
X
INT
Y
X
Y
COUT
X
Y
ENDL
RETURN
WHY
DOESN
T
THE
FUNCTION
SWAP
THE
CONTENTS
OF
X
AND
Y
HOW
CAN
YOU
REWRITE
THE
FUNCTION
TO
WORK
CORRECTLY
THE
FOLLOWING
FUNCTION
SWAPS
TWO
INTEGERS
WITHOUT
REQUIRING
A
TEMPORARY
VARIABLE
VOID
INT
A
INT
B
A
A
B
B
A
B
A
B
A
HOWEVER
IT
FAILS
IN
ONE
IMPORTANT
CASE
NAMELY
WHEN
CALLING
X
X
EXPLAIN
WHAT
SHOULD
HAPPEN
AND
WHAT
ACTUALLY
HAPPENS
GIVE
PSEUDOCODE
FOR
A
RECURSIVE
FUNCTION
FOR
PRINTING
ALL
SUBSTRINGS
OF
A
GIVEN
STRING
FOR
EXAMPLE
THE
SUBSTRINGS
OF
THE
STRING
RUM
ARE
RUM
ITSELF
RU
UM
R
U
M
AND
THE
EMPTY
STRING
YOU
MAY
ASSUME
THAT
ALL
LETTERS
OF
THE
STRING
ARE
DIFFERENT
GIVE
PSEUDOCODE
FOR
A
RECURSIVE
FUNCTION
THAT
SORTS
ALL
LETTERS
IN
A
STRING
FOR
EXAM
PLE
THE
STRING
GOODBYE
WOULD
BE
SORTED
INTO
BDEGOOY
THE
MAX
FUNCTION
THAT
IS
DECLARED
IN
THE
ALGORITHM
HEADER
RETURNS
THE
LARGER
OF
ITS
TWO
ARGUMENTS
WRITE
A
PROGRAM
THAT
READS
THREE
FLOATING
POINT
NUMBERS
USES
THE
MAX
FUNCTION
AND
DISPLAYS
THE
LARGER
OF
THE
FIRST
TWO
INPUTS
THE
LARGER
OF
THE
LAST
TWO
INPUTS
THE
LARGEST
OF
ALL
THREE
INPUTS
WRITE
A
FUNCTION
THAT
COMPUTES
THE
BALANCE
OF
A
BANK
ACCOUNT
WITH
A
GIVEN
INITIAL
BALANCE
AND
INTEREST
RATE
AFTER
A
GIVEN
NUMBER
OF
YEARS
ASSUME
INTEREST
IS
COM
POUNDED
YEARLY
WRITE
THE
FOLLOWING
FUNCTIONS
AND
PROVIDE
A
PROGRAM
TO
TEST
THEM
A
DOUBLE
SMALLEST
DOUBLE
X
DOUBLE
Y
DOUBLE
Z
RETURNING
THE
SMALLEST
OF
THE
ARGUMENTS
B
DOUBLE
AVERAGE
DOUBLE
X
DOUBLE
Y
DOUBLE
Z
RETURNING
THE
AVERAGE
OF
THE
ARGUMENTS
WRITE
THE
FOLLOWING
FUNCTIONS
A
BOOL
DOUBLE
X
DOUBLE
Y
DOUBLE
Z
RETURNING
TRUE
IF
THE
ARGUMENTS
ARE
ALL
THE
SAME
B
BOOL
DOUBLE
X
DOUBLE
Y
DOUBLE
Z
RETURNING
TRUE
IF
THE
ARGUMENTS
ARE
ALL
DIFFERENT
C
BOOL
SORTED
DOUBLE
X
DOUBLE
Y
DOUBLE
Z
RETURNING
TRUE
IF
THE
ARGUMENTS
ARE
SORTED
WITH
THE
SMALLEST
ONE
COMING
FIRST
PROVIDE
A
PROGRAM
THAT
TESTS
YOUR
FUNCTIONS
WRITE
THE
FOLLOWING
FUNCTIONS
A
INT
INT
N
RETURNING
THE
FIRST
DIGIT
OF
THE
ARGUMENT
B
INT
INT
N
RETURNING
THE
LAST
DIGIT
OF
THE
ARGUMENT
C
INT
DIGITS
INT
N
RETURNING
THE
NUMBER
OF
DIGITS
OF
THE
ARGUMENT
FOR
EXAMPLE
IS
IS
AND
DIGITS
IS
PROVIDE
A
PROGRAM
THAT
TESTS
YOUR
FUNCTIONS
WRITE
A
FUNCTION
STRING
MIDDLE
STRING
STR
THAT
RETURNS
A
STRING
CONTAINING
THE
MIDDLE
CHARACTER
IN
STR
IF
THE
LENGTH
OF
STR
IS
ODD
OR
THE
TWO
MIDDLE
CHARACTERS
IF
THE
LENGTH
IS
EVEN
FOR
EXAMPLE
MIDDLE
MIDDLE
RETURNS
DD
WRITE
A
FUNCTION
STRING
REPEAT
STRING
STR
INT
N
THAT
RETURNS
THE
STRING
STR
REPEATED
N
TIMES
FOR
EXAMPLE
REPEAT
HO
RETURNS
HOHOHO
WRITE
A
FUNCTION
INT
STRING
STR
THAT
RETURNS
A
COUNT
OF
ALL
VOWELS
IN
THE
STRING
STR
VOWELS
ARE
THE
LETTERS
A
E
I
O
AND
U
AND
THEIR
UPPERCASE
VARIANTS
WRITE
A
FUNCTION
INT
STRING
STR
THAT
RETURNS
A
COUNT
OF
ALL
WORDS
IN
THE
STRING
STR
WORDS
ARE
SEPARATED
BY
SPACES
FOR
EXAMPLE
MARY
HAD
A
LITTLE
LAMB
SHOULD
RETURN
IT
IS
A
WELL
KNOWN
PHENOMENON
THAT
MOST
PEOPLE
ARE
EASILY
ABLE
TO
READ
A
TEXT
WHOSE
WORDS
HAVE
TWO
CHARACTERS
FLIPPED
PROVIDED
THE
FIRST
AND
LAST
LETTER
OF
EACH
WORD
ARE
NOT
CHANGED
FOR
EXAMPLE
I
DN
OT
GVIE
A
DMAN
FOR
A
MAN
TAHT
CAN
OLNY
SEPLL
A
WROD
ONE
WAY
MRAK
TAIWN
WRITE
A
FUNCTION
STRING
SCRAMBLE
STRING
WORD
THAT
CONSTRUCTS
A
SCRAMBLED
VERSION
OF
A
GIVEN
WORD
RANDOMLY
FLIPPING
TWO
CHARACTERS
OTHER
THAN
THE
FIRST
AND
LAST
ONE
THEN
WRITE
A
PROGRAM
THAT
READS
WORDS
FROM
CIN
AND
PRINTS
THE
SCRAMBLED
WORDS
WRITE
FUNCTIONS
DOUBLE
DOUBLE
R
DOUBLE
DOUBLE
R
DOUBLE
DOUBLE
R
DOUBLE
H
DOUBLE
DOUBLE
R
DOUBLE
H
DOUBLE
DOUBLE
R
DOUBLE
H
DOUBLE
DOUBLE
R
DOUBLE
H
THAT
COMPUTE
THE
VOLUME
AND
SURFACE
AREA
OF
A
SPHERE
WITH
RADIUS
R
A
CYLINDER
WITH
A
CIRCULAR
BASE
WITH
RADIUS
R
AND
HEIGHT
H
AND
A
CONE
WITH
A
CIRCULAR
BASE
WITH
RADIUS
R
AND
HEIGHT
H
THEN
WRITE
A
PROGRAM
THAT
PROMPTS
THE
USER
FOR
THE
VALUES
OF
R
AND
H
CALLS
THE
SIX
FUNCTIONS
AND
PRINTS
THE
RESULTS
WRITE
FUNCTIONS
DOUBLE
DISTANCE
DOUBLE
DOUBLE
DOUBLE
DOUBLE
VOID
MIDPOINT
DOUBLE
DOUBLE
DOUBLE
DOUBLE
DOUBLE
XMID
DOUBLE
YMID
VOID
SLOPE
DOUBLE
DOUBLE
DOUBLE
DOUBLE
BOOL
VERTICAL
DOUBLE
THAT
COMPUTE
THE
DISTANCE
MIDPOINT
AND
SLOPE
OF
THE
LINE
SEGMENT
JOINING
THE
POINTS
AND
THE
SLOPE
FUNCTION
SHOULD
EITHER
SET
VERTICAL
TO
TRUE
AND
NOT
SET
OR
SET
VERTICAL
TO
FALSE
AND
SET
TO
THE
SLOPE
WRITE
A
FUNCTION
DOUBLE
STRING
PROMPT
THAT
DISPLAYS
THE
PROMPT
STRING
FOLLOWED
BY
A
SPACE
READS
A
FLOATING
POINT
NUMBER
IN
AND
RETURNS
IT
HERE
IS
A
TYPICAL
USAGE
SALARY
PLEASE
ENTER
YOUR
SALARY
WHAT
PERCENTAGE
RAISE
WOULD
YOU
LIKE
WRITE
A
FUNCTION
VOID
INT
A
INT
B
THAT
SWAPS
THE
VALUES
OF
A
AND
B
IF
A
IS
GREATER
THAN
B
AND
OTHERWISE
LEAVES
A
AND
B
UNCHANGED
FOR
EXAMPLE
INT
U
INT
V
INT
W
INT
X
U
V
U
IS
STILL
V
IS
STILL
W
X
W
IS
NOW
X
IS
NOW
WRITE
A
FUNCTION
INT
A
INT
B
INT
C
THAT
SWAPS
ITS
THREE
ARGUMENTS
TO
ARRANGE
THEM
IN
SORTED
ORDER
FOR
EXAMPLE
INT
V
INT
W
INT
X
V
W
X
V
IS
NOW
W
IS
NOW
X
IS
NOW
HINT
USE
OF
EXERCISE
ENHANCE
THE
FUNCTION
SO
THAT
IT
WORKS
CORRECTLY
FOR
VALUES
ENHANCE
THE
FUNCTION
SO
THAT
IT
WORKS
CORRECTLY
FOR
NEGATIVE
VALUES
AND
ZERO
CAUTION
MAKE
SURE
THE
IMPROVED
FUNCTION
DOESN
T
PRINT
AS
TWENTY
ZERO
FOR
SOME
VALUES
FOR
EXAMPLE
THE
FUNCTION
RETURNS
A
STRING
WITH
A
LEADING
SPACE
TWENTY
REPAIR
THAT
BLEMISH
AND
ENSURE
THAT
SPACES
ARE
INSERTED
ONLY
WHEN
NECESSARY
HINT
THERE
ARE
TWO
WAYS
OF
ACCOMPLISHING
THIS
EITHER
ENSURE
THAT
LEADING
SPACES
ARE
NEVER
INSERTED
OR
REMOVE
LEADING
SPACES
FROM
THE
RESULT
BEFORE
RETURNING
IT
WRITE
A
PROGRAM
THAT
PRINTS
A
PAYCHECK
ASK
THE
PROGRAM
USER
FOR
THE
NAME
OF
THE
EMPLOYEE
THE
HOURLY
RATE
AND
THE
NUMBER
OF
HOURS
WORKED
IF
THE
NUMBER
OF
HOURS
EXCEEDS
THE
EMPLOYEE
IS
PAID
TIME
AND
A
HALF
THAT
IS
PERCENT
OF
THE
HOURLY
RATE
ON
THE
HOURS
EXCEEDING
YOUR
CHECK
SHOULD
LOOK
SIMILAR
TO
THAT
IN
THE
FIGURE
BELOW
USE
FICTITIOUS
NAMES
FOR
THE
PAYER
AND
THE
BANK
BE
SURE
TO
USE
STEPWISE
REFINEMENT
AND
BREAK
YOUR
SOLUTION
INTO
SEVERAL
FUNCTIONS
USE
THE
FUNCTION
TO
PRINT
THE
DOLLAR
AMOUNT
OF
THE
CHECK
WRITE
A
FUNCTION
THAT
COMPUTES
THE
WEEKDAY
OF
A
GIVEN
DATE
USING
A
FORMULA
KNOWN
AS
ZELLER
CONGRUENCE
LET
D
THE
DAY
OF
THE
MONTH
MM
THE
MODIFIED
MONTH
MARCH
DECEMBER
JANUARY
FEBRUARY
W
THE
WEEKDAY
MONDAY
TUESDAY
SUNDAY
THEN
W
D
MM
YEAR
YEAR
HERE
ALL
DENOTE
INTEGER
DIVISION
AND
DENOTES
THE
REMAINDER
OPERATION
LEAP
YEARS
WRITE
A
FUNCTION
BOOL
INT
YEAR
THAT
TESTS
WHETHER
A
YEAR
IS
A
LEAP
YEAR
THAT
IS
A
YEAR
WITH
DAYS
LEAP
YEARS
ARE
NECESSARY
TO
KEEP
THE
CALENDAR
SYNCHRONIZED
WITH
THE
SUN
BECAUSE
THE
EARTH
REVOLVES
AROUND
THE
SUN
ONCE
EVERY
DAYS
ACTUALLY
THAT
FIGURE
IS
NOT
ENTIRELY
PRECISE
AND
FOR
ALL
DATES
AFTER
THE
GREGORIAN
CORRECTION
APPLIES
USUALLY
YEARS
THAT
ARE
DIVISIBLE
BY
ARE
LEAP
YEARS
FOR
EXAMPLE
HOWEVER
YEARS
THAT
ARE
DIVISIBLE
BY
FOR
EXAMPLE
ARE
NOT
LEAP
YEARS
BUT
YEARS
THAT
ARE
DIVISIBLE
BY
ARE
LEAP
YEARS
FOR
EXAMPLE
WRITE
A
PROGRAM
THAT
CONVERTS
A
ROMAN
NUMBER
SUCH
AS
MCMLXXVIII
TO
ITS
DECIMAL
NUMBER
REPRESENTATION
HINT
FIRST
WRITE
A
FUNCTION
THAT
YIELDS
THE
NUMERIC
VALUE
OF
EACH
OF
THE
LETTERS
THEN
USE
THE
FOLLOWING
ALGORITHM
TOTAL
WHILE
THE
ROMAN
NUMBER
STRING
IS
NOT
EMPTY
IF
THE
FIRST
CHARACTER
HAS
A
LARGER
VALUE
THAN
THE
SECOND
OR
THE
STRING
HAS
LENGTH
ADD
VALUE
FIRST
CHARACTER
TO
TOTAL
REMOVE
THE
CHARACTER
ELSE
ADD
VALUE
SECOND
CHARACTER
VALUE
FIRST
CHARACTER
TO
TOTAL
REMOVE
BOTH
CHARACTERS
IN
EXERCISE
YOU
WERE
ASKED
TO
WRITE
A
PROGRAM
TO
CONVERT
A
NUMBER
TO
ITS
REPRESENTATION
IN
ROMAN
NUMERALS
AT
THE
TIME
YOU
DID
NOT
KNOW
HOW
TO
ELIMINATE
DUPLICATE
CODE
AND
AS
A
CONSEQUENCE
THE
RESULTING
PROGRAM
WAS
RATHER
LONG
REWRITE
THAT
PROGRAM
BY
IMPLEMENTING
AND
USING
THE
FOLLOWING
FUNCTION
STRING
INT
N
STRING
ONE
STRING
FIVE
STRING
TEN
THAT
FUNCTION
TRANSLATES
ONE
DIGIT
USING
THE
STRINGS
SPECIFIED
FOR
THE
ONE
FIVE
AND
TEN
VALUES
YOU
WOULD
CALL
THE
FUNCTION
AS
FOLLOWS
N
I
V
X
N
N
N
X
L
C
POSTAL
BAR
CODES
FOR
FASTER
SORTING
OF
LETTERS
THE
UNITED
STATES
POSTAL
SERVICE
ENCOUR
AGES
COMPANIES
THAT
SEND
LARGE
VOLUMES
OF
MAIL
TO
USE
A
BAR
CODE
DENOTING
THE
ZIP
CODE
SEE
FIGURE
ECRLOT
CODE
JOHN
DOE
FRANKLIN
BLVD
SUNNYVALE
CA
FIGURE
A
POSTAL
BAR
CODE
THE
ENCODING
SCHEME
FOR
A
FIVE
DIGIT
ZIP
CODE
IS
SHOWN
IN
FIGURE
THERE
ARE
FULL
HEIGHT
FRAME
BARS
ON
EACH
SIDE
THE
FIVE
ENCODED
DIGITS
ARE
FOLLOWED
BY
A
CHECK
DIGIT
WHICH
IS
COMPUTED
AS
FOLLOWS
ADD
UP
ALL
DIGITS
AND
CHOOSE
THE
CHECK
DIGIT
TO
MAKE
THE
SUM
A
MULTIPLE
OF
FOR
EXAMPLE
THE
ZIP
CODE
HAS
A
SUM
OF
SO
THE
CHECK
DIGIT
IS
TO
MAKE
THE
SUM
EQUAL
TO
FRAME
BARS
DIGIT
DIGIT
DIGIT
DIGIT
DIGIT
CHECK
DIGIT
FIGURE
ENCODING
FOR
FIVE
DIGIT
BAR
CODES
EACH
DIGIT
OF
THE
ZIP
CODE
AND
THE
CHECK
DIGIT
IS
ENCODED
ACCORDING
TO
THE
FOLLOWING
TABLE
WHERE
DENOTES
A
HALF
BAR
AND
A
FULL
BAR
DIGIT
BAR
WEIGHT
BAR
WEIGHT
BAR
WEIGHT
BAR
WEIGHT
BAR
WEIGHT
THE
DIGIT
CAN
BE
EASILY
COMPUTED
FROM
THE
BAR
CODE
USING
THE
COLUMN
WEIGHTS
FOR
EXAMPLE
IS
THE
ONLY
EXCEPTION
IS
WHICH
WOULD
YIELD
ACCORDING
TO
THE
WEIGHT
FORMULA
WRITE
A
PROGRAM
THAT
ASKS
THE
USER
FOR
A
ZIP
CODE
AND
PRINTS
THE
BAR
CODE
USE
FOR
HALF
BARS
FOR
FULL
BARS
FOR
EXAMPLE
BECOMES
WRITE
A
PROGRAM
THAT
READS
IN
A
BAR
CODE
WITH
DENOTING
HALF
BARS
AND
DENOTING
FULL
BARS
AND
PRINTS
OUT
THE
ZIP
CODE
IT
REPRESENTS
PRINT
AN
ERROR
MESSAGE
IF
THE
BAR
CODE
IS
NOT
CORRECT
WRITE
A
PROGRAM
THAT
PRINTS
INSTRUCTIONS
TO
GET
COFFEE
ASKING
THE
USER
FOR
INPUT
WHENEVER
A
DECISION
NEEDS
TO
BE
MADE
DECOMPOSE
EACH
TASK
INTO
A
FUNCTION
FOR
EXAMPLE
VOID
COUT
ADD
WATER
TO
THE
COFFEE
MAKER
ENDL
COUT
PUT
A
FILTER
IN
THE
COFFEE
MAKER
ENDL
COUT
PUT
THE
COFFEE
IN
THE
FILTER
ENDL
WRITE
A
RECURSIVE
FUNCTION
STRING
REVERSE
STRING
STR
THAT
COMPUTES
THE
REVERSE
OF
A
STRING
FOR
EXAMPLE
REVERSE
FLOW
SHOULD
RETURN
WOLF
HINT
REVERSE
THE
SUBSTRING
STARTING
AT
THE
SECOND
CHARACTER
THEN
ADD
THE
FIRST
CHARACTER
AT
THE
END
FOR
EXAMPLE
TO
REVERSE
FLOW
FIRST
REVERSE
LOW
TO
WOL
THEN
ADD
THE
F
AT
THE
END
WRITE
A
RECURSIVE
FUNCTION
BOOL
STRING
STR
THAT
RETURNS
TRUE
IF
STR
IS
A
PALINDROME
THAT
IS
A
WORD
THAT
IS
THE
SAME
WHEN
REVERSED
EXAMPLES
OF
PALINDROME
ARE
DEED
ROTOR
OR
AIBOHPHOBIA
HINT
A
WORD
IS
A
PALINDROME
IF
THE
FIRST
AND
LAST
LETTERS
MATCH
AND
THE
REMAINDER
IS
ALSO
A
PALINDROME
USE
RECURSION
TO
IMPLEMENT
A
FUNCTION
BOOL
FIND
STRING
STR
STRING
MATCH
THAT
TESTS
WHETHER
MATCH
IS
CONTAINED
IN
STR
BOOL
B
FIND
MISSISSIPPI
SIP
SETS
B
TO
TRUE
HINT
IF
STR
STARTS
WITH
MATCH
THEN
YOU
ARE
DONE
IF
NOT
CONSIDER
THE
STRING
THAT
YOU
OBTAIN
BY
REMOVING
THE
FIRST
CHARACTER
USE
RECURSION
TO
DETERMINE
THE
NUMBER
OF
DIGITS
IN
A
NUMBER
N
HINT
IF
N
IS
IT
HAS
ONE
DIGIT
OTHERWISE
IT
HAS
ONE
MORE
DIGIT
THAN
N
USE
RECURSION
TO
COMPUTE
AN
WHERE
N
IS
A
POSITIVE
INTEGER
HINT
IF
N
IS
THEN
AN
A
OTHERWISE
AN
A
AN
ENGINEERING
THE
EFFECTIVE
FOCAL
LENGTH
F
OF
A
LENS
OF
THICKNESS
D
THAT
HAS
SURFACES
WITH
RADII
OF
CURVATURE
AND
IS
GIVEN
BY
N
N
D
F
R
R
NR
R
WHERE
N
IS
THE
REFRACTIVE
INDEX
OF
THE
LENS
MEDIUM
WRITE
A
FUNCTION
THAT
COMPUTES
F
IN
TERMS
OF
THE
OTHER
PARAMETERS
ENGINEERING
A
LABORATORY
CONTAINER
IS
SHAPED
LIKE
THE
FRUSTUM
OF
A
CONE
WRITE
FUNCTIONS
TO
COMPUTE
THE
VOLUME
AND
SURFACE
AREA
USING
THESE
EQUATIONS
V
H
R
R
R
R
ENGINEERING
IN
A
MOVIE
THEATER
THE
ANGLE
AT
WHICH
A
VIEWER
SEES
THE
PICTURE
ON
THE
SCREEN
DEPENDS
ON
THE
DISTANCE
X
OF
THE
VIEWER
FROM
THE
SCREEN
FOR
A
MOVIE
THEATER
WITH
THE
DIMENSIONS
SHOWN
IN
THE
PICTURE
BELOW
WRITE
A
FUNCTION
THAT
COMPUTES
THE
ANGLE
FOR
A
GIVEN
DISTANCE
X
FT
FT
NEXT
PROVIDE
A
MORE
GENERAL
FUNCTION
THAT
WORKS
FOR
THEATERS
WITH
ARBITRARY
DIMENSIONS
ENGINEERING
ELECTRIC
WIRE
LIKE
THAT
IN
THE
PHOTO
IS
A
CYLINDRICAL
CONDUCTOR
COVERED
BY
AN
INSULAT
ING
MATERIAL
THE
RESISTANCE
OF
A
PIECE
OF
WIRE
IS
GIVEN
BY
THE
FORMULA
R
L
L
A
WHERE
IS
THE
RESISTIVITY
OF
THE
CONDUCTOR
AND
L
A
AND
D
ARE
THE
LENGTH
CROSS
SECTIONAL
AREA
AND
DIAMETER
OF
THE
WIRE
THE
RESISTIVITY
OF
COPPER
IS
M
THE
WIRE
DIAMETER
D
IS
COMMONLY
SPECIFIED
BY
THE
AMERICAN
WIRE
GAUGE
AWG
WHICH
IS
AN
INTEGER
N
THE
DIAMETER
OF
AN
AWG
N
WIRE
IS
GIVEN
BY
THE
FORMULA
N
D
MM
WRITE
A
C
FUNCTION
DOUBLE
DIAMETER
INT
THAT
ACCEPTS
THE
WIRE
GAUGE
AND
RETURNS
THE
CORRESPONDING
WIRE
DIAMETER
WRITE
ANOTHER
C
FUNCTION
DOUBLE
DOUBLE
LENGTH
INT
THAT
ACCEPTS
THE
LENGTH
AND
GAUGE
OF
A
PIECE
OF
COPPER
WIRE
AND
RETURNS
THE
RESISTANCE
OF
THAT
WIRE
THE
RESISTIVITY
OF
ALUMINUM
IS
M
WRITE
A
THIRD
C
FUNCTION
DOUBLE
DOUBLE
LENGTH
INT
THAT
ACCEPTS
THE
LENGTH
AND
GAUGE
OF
A
PIECE
OF
ALUMINUM
WIRE
AND
RETURNS
THE
RESISTANCE
OF
THAT
WIRE
WRITE
A
C
PROGRAM
TO
TEST
THESE
FUNCTIONS
ENGINEERING
THE
DRAG
FORCE
ON
A
CAR
IS
GIVEN
BY
FD
WHERE
IS
THE
DENSITY
OF
AIR
KG
V
IS
THE
VELOCITY
IN
UNITS
OF
M
A
IS
THE
PROJECTED
AREA
OF
THE
CAR
AND
CD
IS
THE
DRAG
COEFFICIENT
THE
AMOUNT
OF
POWER
IN
WATTS
REQUIRED
TO
OVERCOME
SUCH
DRAG
FORCE
IS
P
FDV
AND
THE
EQUIVALENT
HORSEPOWER
REQUIRED
IS
HP
P
WRITE
A
PROGRAM
THAT
ACCEPTS
A
CAR
VELOCITY
AND
COMPUTES
THE
POWER
IN
WATTS
AND
IN
HORSEPOWER
NEEDED
TO
OVER
COME
THE
RESULTING
DRAG
FORCE
NOTE
MPH
M
THE
ARGUMENTS
ARE
AND
THE
RETURN
VALUE
IS
THE
INNER
CALL
TO
POW
RETURNS
THEREFORE
THE
OUTER
CALL
RETURNS
USERS
OF
THE
FUNCTION
CAN
TREAT
IT
AS
A
BLACK
BOX
DOUBLE
VOLUME
POW
RETURN
VOLUME
DOUBLE
DOUBLE
DOUBLE
AREA
RETURN
AREA
WHEN
THE
FUNCTION
IS
CALLED
X
IS
SET
TO
Y
IS
SET
TO
AND
Z
BECOMES
THEN
Z
IS
CHANGED
TO
AND
THAT
VALUE
IS
RETURNED
AND
PRINTED
WHEN
THE
FUNCTION
IS
CALLED
X
IS
SET
TO
THEN
Y
IS
SET
TO
AND
THAT
VALUE
IS
RETURNED
AND
PRINTED
WHEN
THE
FUNCTION
IS
CALLED
N
IS
SET
TO
THEN
N
IS
INCREMENTED
TWICE
SETTING
IT
TO
THAT
VALUE
IS
RETURNED
AND
PRINTED
HELLO
WORLD
THE
FUNCTION
DOES
NOT
RETURN
A
VALUE
THEREFORE
YOU
CANNOT
USE
IT
IN
A
EXPRESSION
VOID
SHOUT
STRING
STR
COUT
STR
ENDL
VOID
STRING
STR
INT
N
STR
LENGTH
FOR
INT
I
I
N
I
COUT
COUT
ENDL
COUT
STR
ENDL
FOR
INT
I
I
N
I
COUT
COUT
ENDL
VOID
INT
COUNT
FOR
INT
I
I
COUNT
I
COUT
COUT
ENDL
VOID
STRING
STR
INT
N
STR
LENGTH
N
COUT
STR
ENDL
N
INT
TOTAL
INT
TOTAL
WHERE
THE
FUNCTION
IS
DEFINED
AS
PARAM
AMOUNT
AN
AMOUNT
IN
DOLLARS
AND
CENTS
RETURN
THE
AMOUNT
IN
PENNIES
ROUNDED
TO
THE
NEAREST
PENNY
INT
DOUBLE
AMOUNT
RETURN
INT
AMOUNT
IF
PAGE
WHERE
THE
FUNCTION
IS
DEFINED
AS
FOLLOWS
BOOL
INT
N
RETURN
N
ADD
PARAMETER
VARIABLES
SO
YOU
CAN
PASS
THE
INITIAL
BALANCE
AND
INTEREST
RATE
TO
THE
FUNCTION
DOUBLE
BALANCE
DOUBLE
DOUBLE
RATE
INT
YEARS
RETURN
POW
RATE
YEARS
INT
SPACES
INPUT
WHERE
THE
FUNCTION
IS
DEFINED
AS
FOLLOWS
PARAM
STR
ANY
STRING
RETURN
THE
NUMBER
SPACES
IN
STR
INT
STRING
STR
INT
COUNT
FOR
INT
I
I
STR
LENGTH
I
IF
STR
SUBSTR
I
COUNT
RETURN
COUNT
IT
IS
VERY
EASY
TO
REPLACE
THE
SPACE
WITH
ANY
CHARACTER
PARAM
STR
ANY
STRING
PARAM
CH
A
STRING
OF
LENGTH
RETURN
THE
NUMBER
OF
TIMES
THAT
CH
OCCURS
IN
STR
INT
COUNT
STRING
STR
STRING
CH
INT
COUNT
FOR
INT
I
I
STR
LENGTH
I
IF
STR
SUBSTR
I
CH
COUNT
RETURN
COUNT
THIS
IS
USEFUL
IF
YOU
WANT
TO
COUNT
OTHER
CHARACTERS
FOR
EXAMPLE
COUNT
INPUT
COUNTS
HOW
MANY
COMMAS
ARE
IN
THE
INPUT
CHANGE
LINE
TO
NAME
NAME
PART
HUNDRED
IN
LINE
ADD
THE
STATEMENT
IF
PART
NAME
PART
THOUSAND
PART
PART
IN
LINE
CHANGE
TO
IN
THE
COMMENT
IN
THE
CASE
OF
TEENS
WE
ALREADY
HAVE
THE
LAST
DIGIT
AS
PART
OF
THE
NAME
NOTHING
IS
PRINTED
ONE
WAY
OF
DEALING
WITH
THIS
CASE
IS
TO
ADD
THE
FOLLOWING
STATE
MENT
BEFORE
LINE
IF
NUMBER
RETURN
ZERO
HERE
IS
THE
APPROXIMATE
TRACE
NOTE
THAT
THE
STRING
STARTS
WITH
A
BLANK
SPACE
EXERCISE
ASKS
YOU
TO
ELIMINATE
IT
HERE
IS
ONE
POSSIBLE
SOLUTION
BREAK
UP
THE
TASK
PRINT
TABLE
INTO
PRINT
HEADER
AND
PRINT
BODY
THE
PRINT
HEADER
TASK
CALLS
PRINT
SEPARATOR
PRINTS
THE
HEADER
CELLS
AND
CALLS
PRINT
SEPARATOR
AGAIN
THE
PRINT
BODY
TASK
REPEATEDLY
CALLS
PRINT
ROW
AND
THEN
CALLS
PRINT
SEPARATOR
LINES
BUT
NOT
THROUGH
THE
GLOBAL
VARIABLE
DEFINED
IN
LINE
THE
VARIABLES
DEFINED
IN
LINES
AND
YES
BUT
SINCE
THE
FUNCTION
DOES
NOT
MODIFY
THE
AMOUNT
PARAMETER
VARIABLE
THERE
IS
NO
NEED
TO
DO
SO
VOID
TRANSFER
DOUBLE
DOUBLE
DOUBLE
AMOUNT
BOOL
WITHDRAW
DOUBLE
BALANCE
DOUBLE
AMOUNT
IF
BALANCE
AMOUNT
BALANCE
BALANCE
AMOUNT
RETURN
TRUE
ELSE
RETURN
FALSE
VOID
MINMAX
DOUBLE
X
DOUBLE
Y
DOUBLE
A
DOUBLE
B
IF
X
Y
A
X
B
Y
ELSE
A
Y
B
X
THE
PROGRAM
SETS
X
TO
THEN
Y
TO
THEN
X
TO
IT
PRINTS
MYSTERY
MYSTERY
MYSTERY
MYSTERY
MYSTERY
THE
IDEA
IS
TO
PRINT
ONE
THEN
PRINT
N
OF
THEM
VOID
INT
N
IF
N
RETURN
COUT
N
SIMPLY
ADD
THE
FOLLOWING
TO
THE
BEGINNING
OF
THE
FUNCTION
IF
PART
RETURN
PART
THOUSAND
PART
CHAPTER
ARRAYS
AND
VE
CTORS
TO
BECOME
FAMILIAR
WITH
USING
ARRAYS
AND
VECTORS
TO
COLLECT
VALUES
TO
LEARN
ABOUT
COMMON
ALGORITHMS
FOR
PROCESSING
ARRAYS
AND
VECTORS
TO
WRITE
FUNCTIONS
THAT
RECEIVE
AND
RETURN
ARRAYS
AND
VECTORS
TO
BE
ABLE
TO
USE
TWO
DIMENSIONAL
ARRAYS
ARRAYS
SYNTAX
DEFINING
AN
ARRAY
COMMON
ERROR
BOUNDS
ERRORS
PROGRAMMING
TIP
USE
ARRAYS
FOR
SEQUENCES
OF
RELATED
VALUES
RANDOM
FACT
AN
EARLY
INTERNET
WORM
COMMON
ARRAY
ALGORITHMS
SPECIAL
TOPIC
SORTING
WITH
THE
C
LIBRARY
SPECIAL
TOPIC
A
SORTING
ALGORITHM
SPECIAL
TOPIC
BINARY
SEARCH
ARRAYS
AND
FUNCTIONS
SPECIAL
TOPIC
CONSTANT
ARRAY
PARAMETERS
PROBLEM
SOLVING
ADAPTING
ALGORITHMS
HOW
TO
WORKING
WITH
ARRAYS
WORKED
EXAMPLE
ROLLING
THE
DICE
PROBLEM
SOLVING
DISCOVERING
ALGORITHMS
BY
MANIPULATING
PHYSICAL
OBJECTS
TWO
DIMENSIONAL
ARRAYS
SYNTAX
TWO
DIMENSIONAL
ARRAY
DEFINITION
COMMON
ERROR
OMITTING
THE
COLUMN
SIZE
OF
A
TWO
DIMENSIONAL
ARRAY
PARAMETER
WORKED
EXAMPLE
A
WORLD
POPULATION
TABLE
VECTORS
SYNTAX
DEFINING
A
VECTOR
PROGRAMMING
TIP
PREFER
VECTORS
OVER
ARRAYS
RANDOM
FACT
THE
FIRST
PROGRAMMER
ARRAYS
WE
START
THIS
CHAPTER
BY
INTRODUCING
THE
ARRAY
DATA
TYPE
ARRAYS
ARE
THE
FUNDAMENTAL
MECHANISM
IN
C
FOR
COLLECTING
MULTIPLE
VALUES
IN
THE
FOLLOWING
SECTIONS
YOU
WILL
LEARN
HOW
TO
DEFINE
ARRAYS
AND
HOW
TO
ACCESS
ARRAY
ELEMENTS
DEFINING
ARRAYS
SUPPOSE
YOU
WRITE
A
PROGRAM
THAT
READS
A
SEQUENCE
OF
VALUES
AND
PRINTS
OUT
THE
SEQUENCE
MARKING
THE
LARGEST
VALUE
LIKE
THIS
LARGEST
VALUE
YOU
DO
NOT
KNOW
WHICH
VALUE
TO
MARK
AS
THE
LARGEST
ONE
UNTIL
YOU
HAVE
SEEN
THEM
ALL
AFTER
ALL
THE
LAST
VALUE
MIGHT
BE
THE
LARGEST
ONE
THEREFORE
THE
PROGRAM
MUST
FIRST
STORE
ALL
VALUES
BEFORE
IT
CAN
PRINT
THEM
COULD
YOU
SIMPLY
STORE
EACH
VALUE
IN
A
SEPARATE
VARIABLE
IF
YOU
KNOW
THAT
THERE
ARE
TEN
INPUTS
THEN
YOU
CAN
STORE
THE
VALUES
IN
TEN
VARIABLES
HOWEVER
SUCH
A
SEQUENCE
OF
VARIABLES
IS
NOT
VERY
PRACTICAL
TO
USE
YOU
WOULD
HAVE
TO
WRITE
QUITE
A
BIT
OF
CODE
TEN
TIMES
ONCE
FOR
EACH
OF
THE
VARIABLES
TO
SOLVE
THIS
PROBLEM
USE
AN
ARRAY
A
STRUCTURE
FOR
STORING
A
SEQUENCE
OF
VALUES
FIGURE
AN
ARRAY
OF
SIZE
SYNTAX
DEFINING
AN
ARRAY
HERE
WE
DEFINE
AN
ARRAY
THAT
CAN
HOLD
TEN
VALUES
DOUBLE
VALUES
THIS
IS
THE
DEFINITION
OF
A
VARIABLE
VALUES
WHOSE
TYPE
IS
ARRAY
OF
DOUBLE
THAT
IS
VAL
UES
STORES
A
SEQUENCE
OF
FLOATING
POINT
NUMBERS
THE
INDICATES
THE
SIZE
OF
THE
ARRAY
SEE
FIGURE
THE
ARRAY
SIZE
MUST
BE
A
CONSTANT
THAT
IS
KNOWN
AT
COMPILE
TIME
WHEN
YOU
DEFINE
AN
ARRAY
YOU
CAN
SPECIFY
THE
INITIAL
VALUES
FOR
EXAMPLE
DOUBLE
VALUES
WHEN
YOU
SUPPLY
INITIAL
VALUES
YOU
DON
T
NEED
TO
SPECIFY
THE
ARRAY
SIZE
THE
COM
PILER
DETERMINES
THE
SIZE
BY
COUNTING
THE
VALUES
INT
NUMBERS
AN
ARRAY
OF
TEN
INTEGERS
CONST
INT
SIZE
INT
NUMBERS
SIZE
IT
IS
A
GOOD
IDEA
TO
USE
A
NAMED
CONSTANT
FOR
THE
SIZE
INT
SIZE
INT
NUMBERS
SIZE
CAUTION
IN
STANDARD
C
THE
SIZE
MUST
BE
A
CONSTANT
THIS
ARRAY
DEFINITION
WILL
NOT
WORK
WITH
ALL
COMPILERS
INT
SQUARES
AN
ARRAY
OF
FIVE
INTEGERS
WITH
INITIAL
VALUES
INT
SQUARES
YOU
CAN
OMIT
THE
ARRAY
SIZE
IF
YOU
SUPPLY
INITIAL
VALUES
THE
SIZE
IS
SET
TO
THE
NUMBER
OF
INITIAL
VALUES
INT
SQUARES
IF
YOU
SUPPLY
FEWER
INITIAL
VALUES
THAN
THE
SIZE
THE
REMAINING
VALUES
ARE
SET
TO
THIS
ARRAY
CONTAINS
STRING
NAMES
AN
ARRAY
OF
THREE
STRINGS
ACCESSING
ARRAY
ELEMENTS
THE
VALUES
STORED
IN
AN
ARRAY
ARE
CALLED
ITS
ELEMENTS
EACH
ELEMENT
HAS
A
POSITION
NUMBER
CALLED
AN
INDEX
TO
ACCESS
A
VALUE
IN
THE
VALUES
ARRAY
YOU
MUST
SPECIFY
WHICH
INDEX
YOU
WANT
TO
USE
THAT
IS
DONE
WITH
THE
OPERATOR
VALUES
NOW
THE
ELEMENT
WITH
INDEX
IS
FILLED
WITH
SEE
FIGURE
FIGURE
FILLING
AN
ARRAY
ELEMENT
YOU
CAN
DISPLAY
THE
CONTENTS
OF
THE
ELEMENT
WITH
INDEX
WITH
THE
FOLLOWING
COMMAND
COUT
VALUES
ENDL
AS
YOU
CAN
SEE
THE
ELEMENT
VALUES
CAN
BE
USED
LIKE
ANY
VARIABLE
OF
TYPE
DOUBLE
IN
C
ARRAY
POSITIONS
ARE
COUNTED
IN
A
WAY
THAT
YOU
MAY
FIND
SURPRISING
IF
YOU
LOOK
CAREFULLY
AT
FIGURE
YOU
WILL
FIND
THAT
THE
FIFTH
ELEMENT
WAS
FILLED
WHEN
WE
CHANGED
VALUES
IN
C
THE
ELEMENTS
OF
ARRAYS
ARE
NUMBERED
STARTING
AT
THAT
IS
THE
LEGAL
ELEMENTS
FOR
THE
VALUES
ARRAY
ARE
VALUES
THE
FIRST
ELEMENT
VALUES
THE
SECOND
ELEMENT
VALUES
THE
THIRD
ELEMENT
VALUES
THE
FOURTH
ELEMENT
VALUES
THE
FIFTH
ELEMENT
VALUES
THE
TENTH
ELEMENT
YOU
WILL
SEE
IN
CHAPTER
WHY
THIS
NUMBERING
SCHEME
WAS
CHOSEN
IN
C
YOU
HAVE
TO
BE
CAREFUL
ABOUT
INDEX
VALUES
TRYING
TO
ACCESS
A
ELEMENT
THAT
DOES
NOT
EXIST
IN
THE
ARRAY
IS
A
SERIOUS
ERROR
FOR
EXAMPLE
IF
VALUES
HAS
TWENTY
ELEMENTS
YOU
ARE
NOT
ALLOWED
TO
ACCESS
VALUES
ATTEMPTING
TO
ACCESS
AN
ELEMENT
WHOSE
INDEX
IS
NOT
WITHIN
THE
VALID
INDEX
RANGE
IS
CALLED
A
BOUNDS
ERROR
THE
COMPILER
DOES
NOT
CATCH
THIS
TYPE
OF
ERROR
EVEN
THE
RUN
NING
PROGRAM
GENERATES
NO
ERROR
MESSAGE
IF
YOU
MAKE
A
BOUNDS
ERROR
YOU
SILENTLY
READ
OR
OVERWRITE
ANOTHER
MEMORY
LOCATION
AS
A
CONSEQUENCE
YOUR
PROGRAM
MAY
HAVE
RANDOM
ERRORS
AND
IT
CAN
EVEN
CRASH
LIKE
A
POST
OFFICE
BOX
THAT
IS
IDENTIFIED
BY
A
BOX
NUMBER
AN
ARRAY
ELEMENT
IS
IDENTIFIED
BY
AN
INDEX
THE
MOST
COMMON
BOUNDS
ERROR
IS
THE
FOLLOWING
DOUBLE
VALUES
COUT
VALUES
THERE
IS
NO
VALUES
IN
AN
ARRAY
WITH
TEN
ELEMENTS
THE
LEGAL
INDEX
VALUES
RANGE
FROM
TO
TO
VISIT
ALL
ELEMENTS
OF
AN
ARRAY
USE
A
VARIABLE
FOR
THE
INDEX
SUPPOSE
VALUES
HAS
TEN
ELEMENTS
AND
THE
INTEGER
VARIABLE
I
TAKES
VALUES
AND
SO
ON
UP
TO
THEN
THE
EXPRESSION
VALUES
I
YIELDS
EACH
ELEMENT
IN
TURN
FOR
EXAMPLE
THIS
LOOP
DISPLAYS
ALL
ELEMENTS
FOR
INT
I
I
I
COUT
VALUES
I
ENDL
NOTE
THAT
IN
THE
LOOP
CONDITION
THE
INDEX
IS
LESS
THAN
BECAUSE
THERE
IS
NO
ELEMENT
CORRESPONDING
TO
VALUES
PARTIALLY
FILLED
ARRAYS
AN
ARRAY
CANNOT
CHANGE
SIZE
AT
RUN
TIME
THIS
IS
A
PROBLEM
WHEN
YOU
DON
T
KNOW
IN
ADVANCE
HOW
MANY
ELEMENTS
YOU
NEED
IN
THAT
SITUATION
YOU
MUST
COME
UP
WITH
A
GOOD
GUESS
ON
THE
MAXIMUM
NUMBER
OF
ELEMENTS
THAT
YOU
NEED
TO
STORE
WE
CALL
THIS
QUANTITY
THE
CAPACITY
FOR
EXAMPLE
WE
MAY
DECIDE
THAT
WE
SOMETIMES
WANT
TO
STORE
MORE
THAN
TEN
VALUES
BUT
NEVER
MORE
THAN
CONST
INT
CAPACITY
DOUBLE
VALUES
CAPACITY
IN
A
TYPICAL
PROGRAM
RUN
ONLY
PART
OF
THE
ARRAY
WILL
BE
OCCUPIED
BY
ACTUAL
ELEMENTS
WE
CALL
SUCH
AN
ARRAY
A
PARTIALLY
FILLED
ARRAY
YOU
MUST
KEEP
A
COMPANION
VARIABLE
THAT
COUNTS
HOW
MANY
ELEMENTS
ARE
ACTUALLY
USED
IN
FIGURE
WE
CALL
THE
COMPANION
VARI
ABLE
WITH
A
PARTIALLY
FILLED
ARRAY
YOU
NEED
TO
REMEMBER
HOW
MANY
ELEMENTS
ARE
FILLED
FIGURE
A
PARTIALLY
FILLED
ARRAY
THE
FOLLOWING
LOOP
COLLECTS
VALUES
AND
FILLS
UP
THE
VALUES
ARRAY
INT
DOUBLE
INPUT
WHILE
CIN
INPUT
CAPACITY
IF
CAPACITY
VALUES
INPUT
AT
THE
END
OF
THIS
LOOP
CONTAINS
THE
ACTUAL
NUMBER
OF
ELEMENTS
IN
THE
ARRAY
NOTE
THAT
YOU
HAVE
TO
STOP
ACCEPTING
INPUTS
IF
THE
SIZE
OF
THE
ARRAY
REACHES
THE
CAPACITY
TO
PROCESS
THE
GATHERED
ARRAY
ELEMENTS
YOU
AGAIN
USE
THE
COMPANION
VARIABLE
NOT
THE
CAPACITY
THIS
LOOP
PRINTS
THE
PARTIALLY
FILLED
ARRAY
FOR
INT
I
I
I
COUT
VALUES
I
ENDL
DEFINE
AN
ARRAY
OF
INTEGERS
CONTAINING
THE
FIRST
FIVE
PRIME
NUMBERS
ASSUME
THE
ARRAY
PRIMES
HAS
BEEN
INITIALIZED
AS
DESCRIBED
IN
SELF
CHECK
WHAT
IS
ITS
CONTENTS
AFTER
EXECUTING
THE
FOLLOWING
LOOP
FOR
INT
I
I
I
PRIMES
I
PRIMES
I
ASSUME
THE
ARRAY
PRIMES
HAS
BEEN
INITIALIZED
AS
DESCRIBED
IN
SELF
CHECK
WHAT
IS
ITS
CONTENTS
AFTER
EXECUTING
THE
FOLLOWING
LOOP
FOR
INT
I
I
I
PRIMES
I
GIVEN
THE
DEFINITION
CONST
INT
CAPACITY
DOUBLE
VALUES
CAPACITY
WRITE
STATEMENTS
TO
PUT
A
ZERO
INTO
THE
ELEMENTS
OF
THE
ARRAY
VALUES
WITH
THE
LOWEST
AND
THE
HIGHEST
VALID
INDEX
GIVEN
THE
ARRAY
DEFINED
IN
SELF
CHECK
WRITE
A
LOOP
TO
PRINT
THE
ELEMENTS
OF
THE
ARRAY
VALUES
IN
REVERSE
ORDER
STARTING
WITH
THE
LAST
ELEMENT
DEFINE
AN
ARRAY
CALLED
WORDS
THAT
CAN
HOLD
TEN
VALUES
OF
TYPE
STRING
DEFINE
AN
ARRAY
CONTAINING
TWO
STRINGS
YES
AND
NO
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
RANDOM
FACT
AN
EARLY
INTERNET
WORM
IN
NOVEMBER
ROBERT
MORRIS
A
STU
DENT
AT
CORNELL
UNIVERSITY
LAUNCHED
A
SO
CALLED
VIRUS
PROGRAM
THAT
INFECTED
ABOUT
COMPUTERS
CONNECTED
TO
THE
INTERNET
ACROSS
THE
UNITED
STATES
TENS
OF
THOUSANDS
OF
COMPUTER
USERS
WERE
UNABLE
TO
READ
THEIR
E
MAIL
OR
OTH
ERWISE
USE
THEIR
COMPUTERS
ALL
MAJOR
UNIVERSITIES
AND
MANY
HIGH
TECH
COM
PANIES
WERE
AFFECTED
THE
INTERNET
WAS
MUCH
SMALLER
THEN
THAN
IT
IS
NOW
THE
PARTICULAR
KIND
OF
VIRUS
USED
IN
THIS
ATTACK
IS
CALLED
A
WORM
THE
VIRUS
PROGRAM
CRAWLED
FROM
ONE
COMPUTER
ON
THE
INTERNET
TO
THE
NEXT
THE
WORM
WOULD
ATTEMPT
TO
CONNECT
TO
FINGER
A
PROGRAM
IN
THE
UNIX
OPERATING
SYS
TEM
FOR
FINDING
INFORMATION
ON
A
USER
WHO
HAS
AN
ACCOUNT
ON
A
PARTICULAR
COMPUTER
ON
THE
NETWORK
LIKE
MANY
PROGRAMS
IN
UNIX
FINGER
WAS
WRIT
TEN
IN
THE
C
LANGUAGE
IN
C
AS
IN
C
ARRAYS
HAVE
A
FIXED
SIZE
TO
STORE
THE
USER
NAME
TO
BE
LOOKED
UP
SAY
WAL
TERS
CS
SJSU
EDU
THE
FINGER
PROGRAM
ALLOCATED
AN
ARRAY
OF
CHARACTERS
UNDER
THE
ASSUMPTION
THAT
NOBODY
WOULD
EVER
PROVIDE
SUCH
A
LONG
INPUT
UNFORTUNATELY
C
LIKE
C
DOES
NOT
CHECK
THAT
AN
ARRAY
INDEX
IS
LESS
THAN
THE
LENGTH
OF
THE
ARRAY
IF
YOU
WRITE
INTO
AN
ARRAY
USING
AN
INDEX
THAT
IS
TOO
LARGE
YOU
SIMPLY
OVERWRITE
MEMORY
LOCATIONS
THAT
BELONG
TO
SOME
OTHER
OBJECTS
IN
SOME
VERSIONS
OF
THE
FINGER
PROGRAM
THE
PROGRAMMER
HAD
BEEN
LAZY
AND
HAD
NOT
CHECKED
WHETHER
THE
ARRAY
HOLDING
THE
INPUT
CHARACTERS
WAS
LARGE
ENOUGH
TO
HOLD
THE
INPUT
SO
THE
WORM
PROGRAM
PURPOSEFULLY
FILLED
THE
CHARACTER
ARRAY
WITH
BYTES
THE
EXCESS
BYTES
WOULD
OVERWRITE
A
RETURN
ADDRESS
WHICH
THE
ATTACKER
KNEW
WAS
STORED
JUST
AFTER
THE
LINE
BUF
FER
WHEN
THAT
FUNCTION
WAS
FINISHED
IT
DIDN
T
RETURN
TO
ITS
CALLER
BUT
TO
CODE
SUPPLIED
BY
THE
WORM
SEE
FIGURE
THAT
CODE
RAN
UNDER
THE
SAME
SUPER
USER
PRIVILEGES
AS
FINGER
ALLOWING
THE
WORM
TO
GAIN
ENTRY
INTO
THE
REMOTE
SYS
TEM
HAD
THE
PROGRAMMER
WHO
WROTE
FINGER
BEEN
MORE
CONSCIENTIOUS
THIS
PARTICULAR
ATTACK
WOULD
NOT
BE
POS
SIBLE
IN
C
AS
IN
C
ALL
PROGRAMMERS
MUST
BE
VERY
CAREFUL
NOT
TO
OVERRUN
ARRAY
BOUNDARIES
ONE
MAY
WELL
SPECULATE
WHAT
WOULD
POSSESS
THE
VIRUS
AUTHOR
TO
SPEND
MANY
WEEKS
TO
PLAN
THE
ANTISOCIAL
ACT
OF
BREAKING
INTO
THOUSANDS
OF
COMPUT
ERS
AND
DISABLING
THEM
IT
APPEARS
THAT
THE
BREAK
IN
WAS
FULLY
INTENDED
BY
THE
AUTHOR
BUT
THE
DISABLING
OF
THE
COM
PUTERS
WAS
A
BUG
CAUSED
BY
CONTINU
OUS
REINFECTION
MORRIS
WAS
SENTENCED
TO
YEARS
PROBATION
HOURS
OF
COMMUNITY
SERVICE
AND
FINED
000
IN
RECENT
YEARS
COMPUTER
ATTACKS
HAVE
INTENSIFIED
AND
THE
MOTIVES
HAVE
BECOME
MORE
SINISTER
INSTEAD
OF
DIS
ABLING
COMPUTERS
VIRUSES
OFTEN
STEAL
FINANCIAL
DATA
OR
USE
THE
ATTACKED
COM
PUTERS
FOR
SENDING
SPAM
E
MAIL
SADLY
MANY
OF
THESE
ATTACKS
CONTINUE
TO
BE
POSSIBLE
BECAUSE
OF
POORLY
WRITTEN
PRO
GRAMS
THAT
ARE
SUSCEPTIBLE
TO
BUFFER
OVERRUN
ERRORS
BEFORE
THE
ATTACK
LINE
BUFFER
BYTES
RETURN
ADDRESS
AFTER
THE
ATTACK
OVERRUN
BUFFER
BYTES
RETURN
ADDRESS
FIGURE
A
BUFFER
OVERRUN
ATTACK
COMMON
ARRAY
ALGORITHMS
IN
THE
FOLLOWING
SECTIONS
WE
DISCUSS
SOME
OF
THE
MOST
COMMON
ALGORITHMS
FOR
PROCESSING
SEQUENCES
OF
VALUES
WE
PRESENT
THE
ALGORITHMS
SO
THAT
YOU
CAN
USE
THEM
WITH
FULLY
AND
PARTIALLY
FILLED
ARRAYS
AS
WELL
AS
VECTORS
WHICH
WE
WILL
INTRODUCE
IN
SECTION
WHEN
WE
USE
THE
EXPRESSION
SIZE
OF
VALUES
YOU
SHOULD
REPLACE
IT
WITH
A
CONSTANT
OR
VARIABLE
THAT
YIELDS
THE
NUMBER
OF
ELEMENTS
IN
THE
ARRAY
OR
THE
EXPRESSION
VALUES
SIZE
IF
VALUES
IS
A
VECTOR
FILLING
THIS
LOOP
FILLS
AN
ARRAY
WITH
ZEROES
FOR
INT
I
I
SIZE
OF
VALUES
I
VALUES
I
NEXT
LET
US
FILL
AN
ARRAY
SQUARES
WITH
THE
NUMBERS
AND
SO
ON
NOTE
THAT
THE
ELEMENT
WITH
INDEX
CONTAINS
THE
ELEMENT
WITH
INDEX
CONTAINS
AND
SO
ON
FOR
INT
I
I
SIZE
OF
SQUARES
I
SQUARES
I
I
I
COPYING
CONSIDER
TWO
ARRAYS
INT
SQUARES
INT
NOW
SUPPOSE
YOU
WANT
TO
COPY
ALL
VALUES
FROM
THE
FIRST
ARRAY
TO
THE
SECOND
THE
FOL
LOWING
ASSIGNMENT
IS
AN
ERROR
SQUARES
ERROR
IN
C
YOU
CANNOT
ASSIGN
ONE
ARRAY
TO
ANOTHER
INSTEAD
YOU
MUST
USE
A
LOOP
TO
COPY
ALL
ELEMENTS
FOR
INT
I
I
I
I
SQUARES
I
SQUARES
FIGURE
COPYING
ELEMENTS
TO
COPY
AN
ARRAY
SUM
AND
AVERAGE
VALUE
YOU
HAVE
ALREADY
ENCOUNTERED
THIS
ALGORITHM
IN
SECTION
HERE
IS
THE
CODE
FOR
COMPUTING
THE
SUM
OF
ALL
ELEMENTS
IN
AN
ARRAY
DOUBLE
TOTAL
FOR
INT
I
I
SIZE
OF
VALUES
I
TOTAL
TOTAL
VALUES
I
TO
OBTAIN
THE
AVERAGE
DIVIDE
BY
THE
NUMBER
OF
ELEMENTS
DOUBLE
AVERAGE
TOTAL
SIZE
OF
VALUES
BE
SURE
TO
CHECK
THAT
THE
SIZE
IS
NOT
ZERO
MAXIMUM
AND
MINIMUM
USE
THE
ALGORITHM
FROM
SECTION
THAT
KEEPS
A
VARIABLE
FOR
THE
LARGEST
ELEMENT
THAT
YOU
HAVE
ENCOUNTERED
SO
FAR
HERE
IS
THE
IMPLEMENTATION
FOR
ARRAYS
DOUBLE
LARGEST
VALUES
FOR
INT
I
I
SIZE
OF
VALUES
I
IF
VALUES
I
LARGEST
LARGEST
VALUES
I
NOTE
THAT
THE
LOOP
STARTS
AT
BECAUSE
WE
INITIALIZE
LARGEST
WITH
VALUES
TO
COMPUTE
THE
SMALLEST
VALUE
REVERSE
THE
COMPARISON
THESE
ALGORITHMS
REQUIRE
THAT
THE
ARRAY
CONTAIN
AT
LEAST
ONE
ELEMENT
ELEMENT
SEPARATORS
WHEN
YOU
DISPLAY
THE
ELEMENTS
OF
A
COLLECTION
YOU
USUALLY
WANT
TO
SEPARATE
THEM
OFTEN
WITH
COMMAS
OR
VERTICAL
LINES
LIKE
THIS
NOTE
THAT
THERE
IS
ONE
FEWER
SEPARATOR
THAN
THERE
ARE
NUMBERS
PRINT
THE
SEPARATOR
BEFORE
EACH
ELEMENT
EXCEPT
THE
INITIAL
ONE
WITH
INDEX
FOR
INT
I
I
SIZE
OF
VALUES
I
IF
I
COUT
COUT
VALUES
I
TO
PRINT
FIVE
ELEMENTS
YOU
NEED
FOUR
SEPARATORS
LINEAR
SEARCH
YOU
OFTEN
NEED
TO
SEARCH
FOR
THE
POSITION
OF
AN
ELEMENT
SO
THAT
YOU
CAN
REPLACE
OR
REMOVE
IT
VISIT
ALL
ELEMENTS
UNTIL
YOU
HAVE
FOUND
A
MATCH
OR
YOU
HAVE
COME
TO
THE
END
OF
THE
ARRAY
HERE
WE
SEARCH
FOR
THE
POSITION
OF
THE
FIRST
ELEMENT
EQUAL
TO
INT
POS
BOOL
FOUND
FALSE
WHILE
POS
SIZE
OF
VALUES
FOUND
IF
VALUES
POS
FOUND
TRUE
TO
SEARCH
FOR
A
SPECIFIC
ELEMENT
VISIT
THE
ELEMENTS
AND
STOP
WHEN
YOU
ENCOUNTER
THE
MATCH
ELSE
POS
IF
FOUND
IS
TRUE
THEN
POS
IS
THE
POSITION
OF
THE
FIRST
MATCH
REMOVING
AN
ELEMENT
CONSIDER
A
PARTIALLY
FILLED
ARRAY
VALUES
WHOSE
CURRENT
SIZE
IS
STORED
IN
THE
VARIABLE
SUPPOSE
YOU
WANT
TO
REMOVE
THE
ELEMENT
WITH
INDEX
POS
FROM
VALUES
IF
THE
ELEMENTS
ARE
NOT
IN
ANY
PARTICULAR
ORDER
THAT
TASK
IS
EASY
TO
ACCOMPLISH
SIMPLY
OVERWRITE
THE
ELEMENT
TO
BE
REMOVED
WITH
THE
LAST
ELEMENT
THEN
DECREMENT
THE
VARI
ABLE
TRACKING
THE
SIZE
SEE
FIGURE
VALUES
POS
VALUES
THE
SITUATION
IS
MORE
COMPLEX
IF
THE
ORDER
OF
THE
ELEMENTS
MATTERS
THEN
YOU
MUST
MOVE
ALL
ELEMENTS
FOLLOWING
THE
ELEMENT
TO
BE
REMOVED
TO
A
LOWER
INDEX
THEN
DECRE
MENT
THE
VARIABLE
HOLDING
THE
SIZE
OF
THE
ARRAY
SEE
FIGURE
FOR
INT
I
POS
I
I
VALUES
I
VALUES
I
POS
POS
FIGURE
REMOVING
AN
ELEMENT
IN
AN
UNORDERED
ARRAY
FIGURE
REMOVING
AN
ELEMENT
IN
AN
ORDERED
ARRAY
INSERTING
AN
ELEMENT
IF
THE
ORDER
OF
THE
ELEMENTS
DOES
NOT
MATTER
YOU
CAN
SIMPLY
INSERT
NEW
ELEMENTS
AT
THE
END
INCREMENTING
THE
VARIABLE
TRACKING
THE
SIZE
SEE
FIGURE
FOR
A
PARTIALLY
FILLED
ARRAY
IF
CAPACITY
VALUES
IT
IS
MORE
WORK
TO
INSERT
AN
ELEMENT
AT
A
PARTICULAR
POSITION
IN
THE
MIDDLE
OF
A
SEQUENCE
FIRST
INCREASE
THE
VARIABLE
HOLDING
THE
CURRENT
SIZE
NEXT
MOVE
ALL
ELEMENTS
ABOVE
THE
INSERTION
LOCATION
TO
A
HIGHER
INDEX
FINALLY
INSERT
THE
NEW
ELEMENT
HERE
IS
THE
CODE
FOR
A
PARTIALLY
FILLED
ARRAY
IF
CAPACITY
FOR
INT
I
I
POS
I
VALUES
I
VALUES
I
VALUES
POS
NOTE
THE
ORDER
OF
THE
MOVEMENT
WHEN
YOU
REMOVE
AN
ELEMENT
YOU
FIRST
MOVE
THE
NEXT
ELEMENT
DOWN
TO
A
LOWER
INDEX
THEN
THE
ONE
AFTER
THAT
UNTIL
YOU
FINALLY
GET
TO
THE
END
OF
THE
ARRAY
WHEN
YOU
INSERT
AN
ELEMENT
YOU
START
AT
THE
END
OF
THE
ARRAY
MOVE
THAT
ELEMENT
TO
A
HIGHER
INDEX
THEN
MOVE
THE
ONE
BEFORE
THAT
AND
SO
ON
UNTIL
YOU
FINALLY
GET
TO
THE
INSERTION
LOCATION
SEE
FIGURE
POS
FIGURE
FIGURE
INSERTING
AN
ELEMENT
IN
AN
UNORDERED
ARRAY
INSERTING
AN
ELEMENT
IN
AN
ORDERED
ARRAY
SWAPPING
ELEMENTS
YOU
OFTEN
NEED
TO
SWAP
ELEMENTS
OF
AN
ARRAY
FOR
EXAMPLE
THE
SORTING
ALGORITHM
IN
SPECIAL
TOPIC
ON
PAGE
SORTS
AN
ARRAY
BY
REPEATEDLY
SWAPPING
ELEMENTS
FIGURE
SWAPPING
ARRAY
ELEMENTS
CONSIDER
THE
TASK
OF
SWAPPING
THE
ELEMENTS
AT
POSI
TIONS
I
AND
J
OF
AN
ARRAY
VALUES
WE
D
LIKE
TO
SET
VALUES
I
TO
VALUES
J
BUT
THAT
OVERWRITES
THE
VALUE
THAT
IS
CURRENTLY
STORED
IN
VALUES
I
SO
WE
WANT
TO
SAVE
THAT
FIRST
DOUBLE
TEMP
VALUES
I
VALUES
I
VALUES
J
NOW
WE
CAN
SET
VALUES
J
TO
THE
SAVED
VALUE
VALUES
J
TEMP
FIGURE
SHOWS
THE
PROCESS
TO
SWAP
TWO
ELEMENTS
YOU
NEED
A
TEMPORARY
VARIABLE
READING
INPUT
IF
YOU
KNOW
HOW
MANY
INPUT
VALUES
THE
USER
WILL
SUPPLY
IT
IS
SIMPLE
TO
PLACE
THEM
INTO
AN
ARRAY
DOUBLE
VALUES
FOR
I
I
I
CIN
VALUES
I
HOWEVER
THIS
TECHNIQUE
DOES
NOT
WORK
IF
YOU
NEED
TO
READ
AN
ARBITRARY
NUMBER
OF
INPUTS
IN
THAT
CASE
ADD
THE
VALUES
TO
AN
ARRAY
UNTIL
THE
END
OF
THE
INPUT
HAS
BEEN
REACHED
DOUBLE
VALUES
CAPACITY
INT
DOUBLE
INPUT
WHILE
CIN
INPUT
IF
CAPACITY
VALUES
INPUT
NOW
VALUES
IS
A
PARTIALLY
FILLED
ARRAY
AND
THE
COMPANION
VARIABLE
IS
SET
TO
THE
NUMBER
OF
INPUT
VALUES
THIS
LOOP
DISCARDS
ANY
INPUTS
THAT
WON
T
FIT
IN
THE
ARRAY
A
BETTER
APPROACH
WOULD
BE
TO
COPY
VALUES
TO
A
NEW
LARGER
ARRAY
WHEN
THE
CAPACITY
IS
REACHED
SEE
SECTION
THE
FOLLOWING
PROGRAM
SOLVES
THE
TASK
THAT
WE
SET
OURSELVES
AT
THE
BEGINNING
OF
THIS
CHAPTER
TO
MARK
THE
LARGEST
VALUE
IN
AN
INPUT
SEQUENCE
LARGEST
CPP
PROGRAM
RUN
WHAT
IS
THE
OUTPUT
OF
THE
LARGEST
CPP
PROGRAM
WITH
THE
FOLLOWING
INPUTS
Q
WRITE
A
LOOP
THAT
COUNTS
HOW
MANY
ELEMENTS
IN
AN
ARRAY
ARE
EQUAL
TO
ZERO
CONSIDER
THE
ALGORITHM
TO
FIND
THE
LARGEST
ELEMENT
IN
AN
ARRAY
WHY
DON
T
WE
INITIALIZE
LARGEST
AND
I
WITH
ZERO
LIKE
THIS
DOUBLE
LARGEST
FOR
INT
I
I
SIZE
OF
VALUES
I
IF
VALUES
I
LARGEST
LARGEST
VALUES
I
WHEN
PRINTING
SEPARATORS
WE
SKIPPED
THE
SEPARATOR
BEFORE
THE
INITIAL
ELEMENT
REWRITE
THE
LOOP
SO
THAT
THE
SEPARATOR
IS
PRINTED
AFTER
EACH
ELEMENT
EXCEPT
FOR
THE
LAST
ELEMENT
WHAT
IS
WRONG
WITH
THESE
STATEMENTS
FOR
PRINTING
AN
ARRAY
WITH
SEPARATORS
COUT
VALUES
FOR
INT
I
I
SIZE
OF
VALUES
I
COUT
VALUES
I
WHEN
SEARCHING
FOR
A
MATCH
WE
USED
A
WHILE
LOOP
NOT
A
FOR
LOOP
WHAT
IS
WRONG
WITH
USING
THIS
LOOP
INSTEAD
FOR
POS
POS
SIZE
OF
VALUES
FOUND
POS
IF
VALUES
POS
FOUND
TRUE
WHEN
INSERTING
AN
ELEMENT
INTO
AN
ARRAY
WE
MOVED
THE
ELEMENTS
WITH
LARGER
INDEX
VALUES
STARTING
AT
THE
END
WHY
IS
IT
WRONG
TO
START
AT
THE
INSERTION
LOCA
TION
LIKE
THIS
FOR
INT
I
POS
I
SIZE
OF
VALUES
I
VALUES
I
VALUES
I
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
SPECIAL
TOPIC
A
SORTING
ALGORITHM
A
SORTING
ALGORITHM
REARRANGES
THE
ELEMENTS
OF
A
SEQUENCE
SO
THAT
THEY
ARE
STORED
IN
SORTED
ORDER
HERE
IS
A
SIMPLE
SORTING
ALGORITHM
CALLED
SELECTION
SORT
CONSIDER
SORTING
THE
FOLLOWING
ARRAY
VALUES
AN
OBVIOUS
FIRST
STEP
IS
TO
FIND
THE
SMALLEST
ELEMENT
IN
THIS
CASE
THE
SMALLEST
ELEMENT
IS
STORED
IN
VALUES
YOU
SHOULD
MOVE
THE
TO
THE
BEGINNING
OF
THE
ARRAY
OF
COURSE
THERE
IS
ALREADY
AN
ELEMENT
STORED
IN
VALUES
NAMELY
THEREFORE
YOU
CANNOT
SIMPLY
MOVE
VAL
UES
INTO
VALUES
WITHOUT
MOVING
THE
SOMEWHERE
ELSE
YOU
DON
T
YET
KNOW
WHERE
THE
SHOULD
END
UP
BUT
YOU
KNOW
FOR
CERTAIN
THAT
IT
SHOULD
NOT
BE
IN
VALUES
SIMPLY
GET
IT
OUT
OF
THE
WAY
BY
SWAPPING
IT
WITH
VALUES
NOW
THE
FIRST
ELEMENT
IS
IN
THE
CORRECT
PLACE
IN
THE
FOREGOING
FIGURE
THE
DARKER
COLOR
INDICATES
THE
PORTION
OF
THE
ARRAY
THAT
IS
ALREADY
SORTED
NEXT
TAKE
THE
MINIMUM
OF
THE
REMAINING
ENTRIES
VALUES
VALUES
THAT
MINIMUM
VALUE
IS
ALREADY
IN
THE
CORRECT
PLACE
YOU
DON
T
NEED
TO
DO
ANYTHING
IN
THIS
CASE
SIMPLY
EXTEND
THE
SORTED
AREA
BY
ONE
TO
THE
RIGHT
REPEAT
THE
PROCESS
THE
MINIMUM
VALUE
OF
THE
UNSORTED
REGION
IS
WHICH
NEEDS
TO
BE
SWAPPED
WITH
THE
FIRST
VALUE
OF
THE
UNSORTED
REGION
SPECIAL
TOPIC
BINARY
SEARCH
WHEN
AN
ARRAY
IS
SORTED
THERE
IS
A
MUCH
FASTER
SEARCH
ALGORITHM
THAN
THE
LINEAR
SEARCH
OF
SEC
TION
CONSIDER
THE
FOLLOWING
SORTED
ARRAY
VALUES
WE
WOULD
LIKE
TO
SEE
WHETHER
THE
VALUE
IS
IN
THE
ARRAY
LET
NARROW
OUR
SEARCH
BY
FINDING
WHETHER
THE
VALUE
IS
IN
THE
FIRST
OR
SECOND
HALF
OF
THE
ARRAY
THE
LAST
POINT
IN
THE
FIRST
HALF
OF
THE
DATA
SET
VALUES
IS
WHICH
IS
SMALLER
THAN
THE
VALUE
WE
ARE
LOOKING
FOR
HENCE
WE
SHOULD
LOOK
IN
THE
SECOND
HALF
OF
THE
ARRAY
FOR
A
MATCH
THAT
IS
IN
THE
SEQUENCE
NOW
THE
LAST
VALUE
OF
THE
FIRST
HALF
OF
THIS
SEQUENCE
IS
HENCE
THE
VALUE
MUST
BE
LOCATED
IN
THE
SEQUENCE
THE
LAST
VALUE
OF
THE
FIRST
HALF
OF
THIS
VERY
SHORT
SEQUENCE
IS
WHICH
IS
SMALLER
THAN
THE
VALUE
THAT
WE
ARE
SEARCHING
SO
WE
MUST
LOOK
IN
THE
SECOND
HALF
ARRAYS
AND
FUNCTIONS
IN
THIS
SECTION
WE
WILL
EXPLORE
HOW
TO
WRITE
FUNCTIONS
THAT
PROCESS
ARRAYS
A
FUNCTION
THAT
PROCESSES
THE
VALUES
IN
AN
ARRAY
NEEDS
TO
KNOW
THE
NUMBER
OF
VALID
ELEMENTS
IN
THE
ARRAY
FOR
EXAMPLE
HERE
IS
A
SUM
FUNCTION
THAT
COMPUTES
THE
SUM
OF
ALL
ELEMENTS
IN
AN
ARRAY
DOUBLE
SUM
DOUBLE
VALUES
INT
SIZE
DOUBLE
TOTAL
FOR
INT
I
I
SIZE
I
TOTAL
TOTAL
VALUES
I
RETURN
TOTAL
NOTE
THE
SPECIAL
SYNTAX
FOR
ARRAY
PARAMETER
VARIABLES
WHEN
WRITING
AN
ARRAY
PARAM
ETER
VARIABLE
YOU
PLACE
AN
EMPTY
BEHIND
THE
PARAMETER
NAME
DO
NOT
SPECIFY
THE
SIZE
OF
THE
ARRAY
INSIDE
THE
BRACKETS
WHEN
YOU
CALL
THE
FUNCTION
SUPPLY
BOTH
THE
NAME
OF
THE
ARRAY
AND
THE
SIZE
FOR
EXAMPLE
DOUBLE
DOUBLE
SCORES
67
DOUBLE
SUM
SCORES
YOU
CAN
ALSO
PASS
A
SMALLER
SIZE
TO
THE
FUNCTION
DOUBLE
SUM
SCORES
THIS
CALL
COMPUTES
THE
SUM
OF
THE
FIRST
FIVE
ELEMENTS
OF
THE
SCORES
ARRAY
REMEMBER
THE
FUNCTION
HAS
NO
WAY
OF
KNOWING
HOW
MANY
ELEMENTS
THE
ARRAY
HAS
IT
SIMPLY
RELIES
ON
THE
SIZE
THAT
THE
CALLER
PROVIDES
ARRAY
PARAMETERS
ARE
ALWAYS
REFERENCE
PARAMETERS
YOU
WILL
SEE
THE
REASON
IN
CHAPTER
FUNCTIONS
CAN
MODIFY
ARRAY
ARGUMENTS
AND
THOSE
MODIFICATIONS
AFFECT
THE
ARRAY
THAT
WAS
PASSED
INTO
THE
FUNCTION
FOR
EXAMPLE
THE
FOLLOWING
MULTIPLY
FUNC
TION
UPDATES
ALL
ELEMENTS
IN
THE
ARRAY
VOID
MULTIPLY
DOUBLE
VALUES
INT
SIZE
DOUBLE
FACTOR
FOR
INT
I
I
SIZE
I
VALUES
I
VALUES
I
FACTOR
YOU
DO
NOT
USE
AN
SYMBOL
TO
DENOTE
THE
REFERENCE
PARAMETER
IN
THIS
CASE
ALTHOUGH
ARRAYS
CAN
BE
FUNCTION
ARGUMENTS
THEY
CANNOT
BE
FUNCTION
RETURN
TYPES
IF
A
FUNCTION
COMPUTES
MULTIPLE
VALUES
THE
CALLER
OF
THE
FUNCTION
MUST
PROVIDE
AN
ARRAY
PARAMETER
VARIABLE
TO
HOLD
THE
RESULT
VOID
SQUARES
INT
N
INT
RESULT
FOR
INT
I
I
N
I
RESULT
I
I
I
WHEN
A
FUNCTION
CHANGES
THE
SIZE
OF
AN
ARRAY
IT
SHOULD
INDICATE
TO
THE
CALLER
HOW
MANY
ELEMENTS
THE
ARRAY
HAS
AFTER
THE
CALL
THE
EASIEST
WAY
TO
DO
THIS
IS
TO
RETURN
THE
NEW
SIZE
HERE
IS
AN
EXAMPLE
A
FUNCTION
THAT
ADDS
INPUT
VALUES
TO
AN
ARRAY
INT
DOUBLE
INPUTS
INT
CAPACITY
INT
DOUBLE
INPUT
WHILE
CIN
INPUT
IF
CAPACITY
INPUTS
INPUT
RETURN
NOTE
THAT
THIS
FUNCTION
ALSO
NEEDS
TO
KNOW
THE
CAPACITY
OF
THE
ARRAY
GENERALLY
A
FUNCTION
THAT
ADDS
ELEMENTS
TO
AN
ARRAY
NEEDS
TO
KNOW
IS
CAPACITY
YOU
WOULD
CALL
THIS
FUNCTION
LIKE
THIS
CONST
INT
DOUBLE
VALUES
INT
VALUES
VALUES
IS
A
PARTIALLY
FILLED
ARRAY
THE
VARIABLE
SPECIFIES
ITS
SIZE
ALTERNATIVELY
YOU
CAN
PASS
THE
SIZE
AS
A
REFERENCE
PARAMETER
THIS
IS
MORE
APPROPRIATE
FOR
FUNCTIONS
THAT
MODIFY
AN
EXISTING
ARRAY
VOID
DOUBLE
INPUTS
INT
CAPACITY
INT
DOUBLE
INPUT
WHILE
CIN
INPUT
IF
CAPACITY
INPUTS
INPUT
THIS
FUNCTION
IS
CALLED
AS
VALUES
AFTER
THE
CALL
THE
VARIABLE
CONTAINS
THE
NEW
SIZE
THE
FOLLOWING
EXAMPLE
PROGRAM
READS
VALUES
FROM
STANDARD
INPUT
DOUBLES
THEM
AND
PRINTS
THE
RESULT
THE
PROGRAM
USES
THREE
FUNCTIONS
THE
FUNCTION
FILLS
AN
ARRAY
WITH
THE
INPUT
VALUES
IT
RETURNS
THE
NUMBER
OF
ELEMENTS
THAT
WERE
READ
THE
MULTIPLY
FUNCTION
MODIFIES
THE
CONTENTS
OF
THE
ARRAY
THAT
IT
RECEIVES
DEMON
STRATING
THAT
ARRAYS
ARE
PASSED
BY
REFERENCE
THE
PRINT
FUNCTION
DOES
NOT
MODIFY
THE
CONTENTS
OF
THE
ARRAY
THAT
IT
RECEIVES
FUNCTIONS
CPP
INCLUDE
IOSTREAM
USING
NAMESPACE
STD
READS
A
SEQUENCE
OF
FLOATING
POINT
NUMBERS
PARAM
INPUTS
AN
ARRAY
CONTAINING
THE
NUMBERS
PARAM
CAPACITY
THE
CAPACITY
OF
THAT
ARRAY
RETURN
THE
NUMBER
OF
INPUTS
STORED
IN
THE
ARRAY
INT
DOUBLE
INPUTS
INT
CAPACITY
INT
COUT
PLEASE
ENTER
VALUES
Q
TO
QUIT
ENDL
BOOL
MORE
TRUE
WHILE
MORE
DOUBLE
INPUT
CIN
INPUT
IF
CIN
FAIL
MORE
FALSE
ELSE
IF
CAPACITY
INPUTS
INPUT
RETURN
MULTIPLIES
ALL
ELEMENTS
OF
AN
ARRAY
BY
A
FACTOR
PARAM
VALUES
A
PARTIALLY
FILLED
ARRAY
PARAM
SIZE
THE
NUMBER
OF
ELEMENTS
IN
VALUES
PROGRAM
RUN
WHAT
HAPPENS
IF
YOU
CALL
THE
SUM
FUNCTION
AND
YOU
LIE
ABOUT
THE
SIZE
FOR
EXAM
PLE
CALLING
DOUBLE
RESULT
SUM
VALUES
EVEN
THOUGH
VALUES
HAS
SIZE
HOW
DO
YOU
CALL
THE
SQUARES
FUNCTION
TO
COMPUTE
THE
FIRST
FIVE
SQUARES
AND
STORE
THE
RESULT
IN
AN
ARRAY
NUMBERS
WRITE
A
FUNCTION
THAT
RETURNS
THE
FIRST
POSITION
OF
AN
ELEMENT
IN
AN
ARRAY
OR
IF
THE
ELEMENT
IS
NOT
PRESENT
USE
THE
LINEAR
SEARCH
ALGORITHM
OF
SECTION
REWRITE
THE
FUNCTION
SO
THAT
THE
ARRAY
SIZE
IS
A
REFERENCE
PARAMETER
NOT
A
RETURN
VALUE
WRITE
THE
HEADER
FOR
A
FUNCTION
THAT
APPENDS
TWO
ARRAYS
INTO
ANOTHER
ARRAY
DO
NOT
IMPLEMENT
THE
FUNCTION
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
PROBLEM
SOLVING
ADAPTING
ALGORITHMS
IN
SECTION
YOU
WERE
INTRODUCED
TO
A
NUMBER
OF
FUNDAMENTAL
ARRAY
ALGORITHMS
THESE
ALGORITHMS
FORM
THE
BUILDING
BLOCKS
FOR
MANY
PROGRAMS
THAT
PROCESS
ARRAYS
IN
GENERAL
IT
IS
A
GOOD
PROBLEM
SOLVING
STRATEGY
TO
HAVE
A
REPERTOIRE
OF
FUNDAMENTAL
ALGORITHMS
THAT
YOU
CAN
COMBINE
AND
ADAPT
CONSIDER
THIS
EXAMPLE
PROBLEM
YOU
ARE
GIVEN
THE
QUIZ
SCORES
OF
A
STUDENT
YOU
ARE
TO
COMPUTE
THE
FINAL
QUIZ
SCORE
WHICH
IS
THE
SUM
OF
ALL
SCORES
AFTER
DROPPING
THE
LOW
EST
ONE
FOR
EXAMPLE
IF
THE
SCORES
ARE
THEN
THE
FINAL
SCORE
IS
WE
DO
NOT
HAVE
A
READY
MADE
ALGORITHM
FOR
THIS
SITUATION
INSTEAD
CONSIDER
WHICH
ALGORITHMS
MAY
BE
RELATED
THESE
INCLUDE
CALCULATING
THE
SUM
SECTION
FINDING
THE
MINIMUM
VALUE
SECTION
REMOVING
AN
ELEMENT
SECTION
NOW
WE
CAN
FORMULATE
A
PLAN
OF
ATTACK
THAT
COMBINES
THESE
ALGORITHMS
FIND
THE
MINIMUM
REMOVE
IT
FROM
THE
ARRAY
CALCULATE
THE
SUM
LET
TRY
IT
OUT
WITH
OUR
EXAMPLE
THE
MINIMUM
OF
IS
HOW
DO
WE
REMOVE
IT
NOW
WE
HAVE
A
PROBLEM
THE
REMOVAL
ALGORITHM
IN
SECTION
LOCATES
THE
ELE
MENT
TO
BE
REMOVED
BY
USING
THE
POSITION
OF
THE
ELEMENT
NOT
THE
VALUE
BUT
WE
HAVE
ANOTHER
ALGORITHM
FOR
THAT
LINEAR
SEARCH
SECTION
WE
NEED
TO
FIX
OUR
PLAN
OF
ATTACK
FIND
THE
MINIMUM
VALUE
FIND
ITS
POSITION
REMOVE
THAT
POSITION
FROM
THE
ARRAY
CALCULATE
THE
SUM
WILL
IT
WORK
LET
CONTINUE
WITH
OUR
EXAMPLE
WE
FOUND
A
MINIMUM
VALUE
OF
LINEAR
SEARCH
TELLS
US
THAT
THE
VALUE
OCCURS
AT
POSITION
WE
REMOVE
IT
FINALLY
WE
COMPUTE
THE
SUM
THIS
WALKTHROUGH
DEMONSTRATES
THAT
OUR
STRATEGY
WORKS
CAN
WE
DO
BETTER
IT
SEEMS
A
BIT
INEFFICIENT
TO
FIND
THE
MINIMUM
AND
THEN
MAKE
ANOTHER
PASS
THROUGH
THE
ARRAY
TO
OBTAIN
ITS
POSITION
WE
CAN
ADAPT
THE
ALGORITHM
FOR
FINDING
THE
MINIMUM
TO
YIELD
THE
POSITION
OF
THE
MINIMUM
HERE
IS
THE
ORIGINAL
ALGORITHM
DOUBLE
SMALLEST
VALUES
FOR
INT
I
I
SIZE
OF
VALUES
I
IF
VALUES
I
SMALLEST
SMALLEST
VALUES
I
WHEN
WE
FIND
THE
SMALLEST
VALUE
WE
ALSO
WANT
TO
UPDATE
THE
POSITION
IF
VALUES
I
SMALLEST
SMALLEST
VALUES
I
I
IN
FACT
THEN
THERE
IS
NO
REASON
TO
KEEP
TRACK
OF
THE
SMALLEST
VALUE
ANY
LONGER
IT
IS
SIM
PLY
VALUES
WITH
THIS
INSIGHT
WE
CAN
ADAPT
THE
ALGORITHM
AS
FOLLOWS
INT
FOR
INT
I
I
SIZE
OF
VALUES
I
IF
VALUES
I
VALUES
I
WITH
THIS
ADAPTATION
OUR
PROBLEM
IS
SOLVED
WITH
THE
FOLLOWING
STRATEGY
FIND
THE
POSITION
OF
THE
MINIMUM
REMOVE
IT
FROM
THE
ARRAY
CALCULATE
THE
SUM
IN
HOW
TO
ON
PAGE
WE
DEVELOP
A
C
PROGRAM
FROM
THIS
STRATEGY
THE
NEXT
SECTION
SHOWS
YOU
A
TECHNIQUE
FOR
DISCOVERING
A
NEW
ALGORITHM
WHEN
NONE
OF
THE
FUNDAMENTAL
ALGORITHMS
CAN
BE
ADAPTED
TO
A
TASK
SECTION
HAS
TWO
ALGORITHMS
FOR
REMOVING
AN
ELEMENT
WHICH
OF
THE
TWO
SHOULD
BE
USED
TO
SOLVE
THE
TASK
DESCRIBED
IN
THIS
SECTION
IT
ISN
T
ACTUALLY
NECESSARY
TO
REMOVE
THE
MINIMUM
IN
ORDER
TO
COMPUTE
THE
TOTAL
SCORE
DESCRIBE
AN
ALTERNATIVE
HOW
CAN
YOU
PRINT
THE
NUMBER
OF
POSITIVE
AND
NEGATIVE
VALUES
IN
A
GIVEN
ARRAY
USING
ONE
OR
MORE
OF
THE
ALGORITHMS
IN
SECTION
HOW
CAN
YOU
PRINT
ALL
POSITIVE
VALUES
IN
AN
ARRAY
SEPARATED
BY
COMMAS
CONSIDER
THE
FOLLOWING
ALGORITHM
FOR
COLLECTING
ALL
MATCHES
IN
AN
ARRAY
INT
FOR
INT
I
I
SIZE
OF
VALUES
I
IF
VALUES
I
FULFILLS
THE
CONDITION
MATCHES
VALUES
I
HOW
CAN
THIS
ALGORITHM
HELP
YOU
WITH
SELF
CHECK
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
STEP
DECOMPOSE
YOUR
TASK
INTO
STEPS
YOU
WILL
USUALLY
WANT
TO
BREAK
DOWN
YOUR
TASK
INTO
MULTIPLE
STEPS
SUCH
AS
READING
THE
DATA
INTO
AN
ARRAY
PROCESSING
THE
DATA
IN
ONE
OR
MORE
STEPS
DISPLAYING
THE
RESULTS
IN
OUR
SAMPLE
PROBLEM
THIS
YIELDS
THE
FOLLOWING
PSEUDOCODE
READ
INPUTS
COMPUTE
THE
FINAL
SCORE
DISPLAY
THE
SCORE
WHEN
DECIDING
HOW
TO
PROCESS
THE
DATA
YOU
SHOULD
BE
FAMILIAR
WITH
THE
ARRAY
ALGORITHMS
IN
SECTION
MANY
PROCESSING
TASKS
CAN
BE
SOLVED
BY
COMBINING
OR
ADAPTING
ONE
OR
MORE
OF
THESE
ALGORITHMS
THE
PRECEDING
SECTION
SHOWED
YOU
HOW
TO
DECOMPOSE
COMPUTE
THE
FINAL
SCORE
INTO
FUNDAMEN
TAL
ALGORITHMS
FIND
THE
POSITION
OF
THE
MINIMUM
REMOVE
IT
FROM
THE
ARRAY
CALCULATE
THE
SUM
STEP
DETERMINE
FUNCTIONS
ARGUMENTS
AND
RETURN
VALUES
FOR
EACH
STEP
EVEN
THOUGH
IT
MAY
BE
POSSIBLE
TO
PUT
ALL
STEPS
INTO
THE
MAIN
FUNCTION
THIS
IS
RARELY
A
GOOD
IDEA
THE
SIMPLEST
AND
BEST
APPROACH
IS
TO
MAKE
EACH
NONTRIVIAL
STEP
INTO
A
SEPARATE
FUNCTION
IN
OUR
EXAMPLE
WE
WILL
IMPLEMENT
FOUR
FUNCTIONS
REMOVE
SUM
FOR
EACH
FUNCTION
THAT
PROCESSES
AN
ARRAY
YOU
WILL
NEED
TO
PASS
THE
ARRAY
ITSELF
AND
THE
ARRAY
SIZE
FOR
EXAMPLE
DOUBLE
SUM
DOUBLE
VALUES
INT
SIZE
IF
THE
FUNCTION
MODIFIES
THE
SIZE
IT
NEEDS
TO
TELL
THE
CALLER
WHAT
THE
NEW
SIZE
IS
THE
FUNCTION
CAN
RETURN
THE
SIZE
OR
IT
CAN
USE
A
REFERENCE
PARAMETER
FOR
THE
SIZE
THE
SECOND
APPROACH
IS
A
BETTER
CHOICE
FOR
A
FUNCTION
THAT
MODIFIES
AN
EXISTING
ARRAY
WE
USE
THE
FIRST
APPROACH
WITH
THE
FUNCTION
THAT
READS
INPUT
VALUES
INT
DOUBLE
VALUES
INT
CAPACITY
RETURNS
THE
SIZE
THE
REMOVE
FUNCTION
MODIFIES
THE
PARAMETER
VOID
REMOVE
DOUBLE
VALUES
INT
INT
POS
AT
THIS
POINT
YOU
SHOULD
DOCUMENT
EACH
FUNCTION
LIKE
THIS
REMOVES
AN
ELEMENT
FROM
AN
ARRAY
THE
ORDER
OF
THE
ELEMENTS
IS
NOT
PRESERVED
PARAM
VALUES
A
PARTIALLY
FILLED
ARRAY
PARAM
THE
NUMBER
OF
ELEMENTS
IN
VALUES
WILL
BE
REDUCED
BY
IF
THE
POSITION
IS
VALID
PARAM
POS
THE
POSITION
OF
THE
ELEMENT
TO
BE
REMOVED
VOID
REMOVE
DOUBLE
VALUES
INT
INT
POS
STEP
IMPLEMENT
EACH
FUNCTION
USING
HELPER
FUNCTIONS
WHEN
NEEDED
WE
WON
T
SHOW
THE
CODE
FOR
THE
FUNCTION
BECAUSE
YOU
HAVE
SEEN
IT
ALREADY
LET
US
IMPLEMENT
THE
FUNCTION
IT
CALLS
THREE
HELPER
FUNCTIONS
REMOVE
AND
SUM
REMOVES
THE
SMALLEST
VALUE
OF
AN
ARRAY
AND
RETURNS
THE
SUM
OF
THE
REMAINING
VALUES
PARAM
VALUES
A
PARTIALLY
FILLED
ARRAY
PARAM
THE
NUMBER
OF
ELEMENTS
IN
VALUES
WILL
BE
REDUCED
BY
RETURN
THE
SUM
OF
THE
VALUES
EXCLUDING
THE
MINIMUM
DOUBLE
DOUBLE
VALUES
INT
INT
POS
VALUES
REMOVE
VALUES
POS
RETURN
SUM
VALUES
WE
DISCUSSED
THE
ALGORITHM
FOR
IN
THE
PRECEDING
SECTION
GETS
THE
POSITION
OF
THE
MINIMUM
VALUE
FROM
AN
ARRAY
PARAM
VALUES
A
PARTIALLY
FILLED
ARRAY
PARAM
SIZE
THE
NUMBER
OF
ELEMENTS
IN
VALUES
RETURN
THE
POSITION
OF
THE
SMALLEST
ELEMENT
IN
VALUES
INT
DOUBLE
VALUES
INT
SIZE
INT
FOR
INT
I
I
SIZE
I
IF
VALUES
I
VALUES
I
RETURN
THE
REMAINING
HELPER
FUNCTIONS
USE
THE
ALGORITHMS
FROM
SECTION
YOU
WILL
FIND
THE
IMPLE
MENTATIONS
IN
THE
BOOK
COMPANION
CODE
STEP
CONSIDER
BOUNDARY
CONDITIONS
FOR
THE
FUNCTIONS
THAT
YOU
ARE
IMPLEMENTING
MOST
FUNCTIONS
THAT
OPERATE
ON
ARRAYS
ARE
A
BIT
INTRICATE
AND
YOU
HAVE
TO
BE
CAREFUL
THAT
YOU
HANDLE
BOTH
NORMAL
AND
EXCEPTIONAL
SITUATIONS
WHAT
HAPPENS
WITH
AN
EMPTY
ARRAY
AN
ARRAY
THAT
CONTAINS
A
SINGLE
ELEMENT
WHEN
NO
MATCH
IS
FOUND
WHEN
THERE
ARE
MULTIPLE
MATCHES
CONSIDER
THESE
BOUNDARY
CONDITIONS
AND
MAKE
SURE
THAT
YOUR
FUNCTIONS
WORK
CORRECTLY
HERE
IS
ONE
EXAMPLE
OF
SUCH
A
CONSIDERATION
HOW
DO
WE
KNOW
THAT
THE
FUNC
TION
WILL
BE
CALLED
WITH
AN
ARRAY
OF
SIZE
AT
LEAST
RECALL
THAT
YOU
MUST
HAVE
AT
LEAST
ONE
ELE
MENT
IN
ORDER
TO
FIND
THE
MINIMUM
THAT
FUNCTION
IS
CALLED
FROM
THE
FUNCTION
HOWEVER
THE
FUNCTION
COULD
CONCEIVABLY
BE
CALLED
WITH
AN
EMPTY
ARRAY
WE
NEED
TO
EITHER
INCLUDE
A
TEST
OR
ADD
A
RESTRICTION
TO
THE
FUNCTION
COMMENT
WE
WILL
OPT
FOR
THE
LATTER
AND
CHANGE
THE
COMMENT
FOR
THE
VALUES
PARAMETER
VARIABLE
OF
THE
FUNCTION
TO
PARAM
VALUES
A
PARTIALLY
FILLED
ARRAY
OF
SIZE
CONSIDER
ANOTHER
POTENTIAL
PROBLEM
WHAT
IF
THERE
ARE
MULTIPLE
MATCHES
THAT
MEANS
THAT
A
STUDENT
HAD
MORE
THAN
ONE
TEST
WITH
A
LOW
SCORE
THE
FUNCTION
REMOVES
ONLY
ONE
OF
THE
OCCURRENCES
OF
THAT
LOW
SCORE
AND
THAT
IS
THE
DESIRED
BEHAVIOR
STEP
ASSEMBLE
AND
TEST
THE
COMPLETE
PROGRAM
NOW
WE
ARE
READY
TO
COMBINE
THE
INDIVIDUAL
FUNCTIONS
INTO
A
COMPLETE
PROGRAM
BEFORE
DOING
THIS
CONSIDER
SOME
TEST
CASES
AND
THEIR
EXPECTED
OUTPUT
TEST
CASE
EXPECTED
OUTPUT
COMMENT
SEE
STEP
ONLY
ONE
INSTANCE
OF
THE
LOW
SCORE
SHOULD
BE
REMOVED
AFTER
REMOVING
THE
LOW
SCORE
NO
SCORE
REMAINS
NO
INPUTS
ERROR
THAT
IS
NOT
A
LEGAL
INPUT
THIS
MAIN
FUNCTION
COMPLETES
THE
SOLUTION
SEE
SCORES
CPP
INT
MAIN
CONST
INT
CAPACITY
DOUBLE
SCORES
CAPACITY
INT
SCORES
CAPACITY
IF
COUT
AT
LEAST
ONE
SCORE
IS
REQUIRED
ENDL
ELSE
DOUBLE
SCORE
SCORES
COUT
FINAL
SCORE
SCORE
ENDL
RETURN
PROBLEM
SOLVING
DISCOVERING
ALGORITHMS
BY
MANIPULATING
PHYSICAL
OBJECTS
IN
SECTION
YOU
SAW
HOW
TO
SOLVE
A
PROBLEM
BY
COMBINING
AND
ADAPTING
KNOWN
ALGORITHMS
BUT
WHAT
DO
YOU
DO
WHEN
NONE
OF
THE
STANDARD
ALGORITHMS
IS
SUFFICIENT
FOR
YOUR
TASK
IN
THIS
SECTION
YOU
WILL
LEARN
A
TECHNIQUE
FOR
DISCOVERING
ALGORITHMS
BY
MANIPULATING
PHYSICAL
OBJECTS
CONSIDER
THE
FOLLOWING
TASK
YOU
ARE
GIVEN
AN
ARRAY
WHOSE
SIZE
IS
AN
EVEN
NUMBER
AND
YOU
ARE
TO
SWITCH
THE
FIRST
AND
THE
SECOND
HALF
FOR
EXAMPLE
IF
THE
ARRAY
CONTAINS
THE
EIGHT
NUMBERS
THEN
YOU
SHOULD
CHANGE
IT
TO
MANY
STUDENTS
FIND
IT
QUITE
CHALLENGING
TO
COME
UP
WITH
AN
ALGORITHM
THEY
MAY
KNOW
THAT
A
LOOP
IS
REQUIRED
AND
THEY
MAY
REALIZE
THAT
ELEMENTS
SHOULD
BE
INSERTED
SECTION
OR
SWAPPED
SECTION
BUT
THEY
DO
NOT
HAVE
SUFFICIENT
INTUITION
TO
DRAW
DIAGRAMS
DESCRIBE
AN
ALGORITHM
OR
WRITE
DOWN
PSEUDOCODE
ONE
USEFUL
TECHNIQUE
FOR
DISCOVERING
AN
ALGORITHM
IS
TO
MANIPULATE
PHYSICAL
OBJECTS
START
BY
LINING
UP
SOME
OBJECTS
TO
DENOTE
AN
ARRAY
COINS
PLAYING
CARDS
OR
SMALL
TOYS
ARE
GOOD
CHOICES
AVAILABLE
ONLINE
AT
WWW
WILEY
COM
COLLEGE
HORSTMANN
MANIPULATING
PHYSICAL
OBJECTS
CAN
GIVE
YOU
IDEAS
FOR
DISCOVERING
ALGORITHMS
HERE
WE
ARRANGE
EIGHT
COINS
VISUALIZING
THE
REMOVAL
OF
AN
ARRAY
ELEMENT
NOW
LET
STEP
BACK
AND
SEE
WHAT
WE
CAN
DO
TO
CHANGE
THE
ORDER
OF
THE
COINS
WE
CAN
REMOVE
A
COIN
SECTION
WE
CAN
INSERT
A
COIN
SECTION
VISUALIZING
THE
INSERTION
OF
AN
ARRAY
ELEMENT
OR
WE
CAN
SWAP
TWO
COINS
SECTION
VISUALIZING
THE
SWAPPING
OF
TWO
COINS
GO
AHEAD
LINE
UP
SOME
COINS
AND
TRY
OUT
THESE
THREE
OPERATIONS
RIGHT
NOW
SO
THAT
YOU
GET
A
FEEL
FOR
THEM
NOW
HOW
DOES
THAT
HELP
US
WITH
OUR
PROBLEM
SWITCHING
THE
FIRST
AND
THE
SECOND
HALF
OF
THE
ARRAY
LET
PUT
THE
FIRST
COIN
INTO
PLACE
BY
SWAPPING
IT
WITH
THE
FIFTH
COIN
HOWEVER
AS
C
PROGRAMMERS
WE
WILL
SAY
THAT
WE
SWAP
THE
COINS
IN
POSITIONS
AND
NEXT
WE
SWAP
THE
COINS
IN
POSITIONS
AND
TWO
MORE
SWAPS
AND
WE
ARE
DONE
NOW
AN
ALGORITHM
IS
BECOMING
APPARENT
I
J
WE
LL
THINK
ABOUT
THAT
IN
A
MINUTE
WHILE
DON
T
KNOW
YET
SWAP
ELEMENTS
AT
POSITIONS
I
AND
J
I
J
WHERE
DOES
THE
VARIABLE
J
START
WHEN
WE
HAVE
EIGHT
COINS
THE
COIN
AT
POSITION
ZERO
IS
MOVED
TO
POSITION
IN
GENERAL
IT
IS
MOVED
TO
THE
MIDDLE
OF
THE
ARRAY
OR
TO
POSITION
SIZE
AND
HOW
MANY
ITERATIONS
DO
WE
MAKE
WE
NEED
TO
SWAP
ALL
COINS
IN
THE
FIRST
HALF
THAT
IS
WE
NEED
TO
SWAP
SIZE
COINS
THE
PSEUDOCODE
IS
I
J
SIZE
WHILE
I
SIZE
SWAP
ELEMENTS
AT
POSITIONS
I
AND
J
I
J
IT
IS
A
GOOD
IDEA
TO
MAKE
A
WALKTHROUGH
OF
THE
PSEUDOCODE
SEE
SECTION
YOU
CAN
USE
PAPER
CLIPS
TO
DENOTE
THE
POSITIONS
OF
THE
VARIABLES
I
AND
J
IF
THE
WALKTHROUGH
IS
SUCCESSFUL
THEN
WE
KNOW
THAT
THERE
WAS
NO
OFF
BY
ONE
ERROR
IN
THE
PSEUDOCODE
SELF
CHECK
ASKS
YOU
TO
CARRY
OUT
THE
WALKTHROUGH
AND
EXERCISE
ASKS
YOU
TO
TRANSLATE
THE
PSEUDOCODE
TO
C
EXERCISE
SUGGESTS
A
DIFFERENT
ALGORITHM
FOR
SWITCHING
THE
TWO
HALVES
OF
AN
ARRAY
BY
REPEATEDLY
REMOVING
AND
INSERTING
COINS
MANY
PEOPLE
FIND
THAT
THE
MANIPULATION
OF
PHYSICAL
OBJECTS
IS
LESS
INTIMIDATING
THAN
DRAWING
DIAGRAMS
OR
MENTALLY
ENVISIONING
ALGORITHMS
GIVE
IT
A
TRY
WHEN
YOU
NEED
TO
DESIGN
A
NEW
ALGORITHM
WALK
THROUGH
THE
ALGORITHM
THAT
WE
DEVELOPED
IN
THIS
SECTION
USING
TWO
PAPER
CLIPS
TO
INDICATE
THE
POSITIONS
FOR
I
AND
J
EXPLAIN
WHY
THERE
ARE
NO
BOUNDS
ERRORS
IN
THE
PSEUDOCODE
TAKE
OUT
SOME
COINS
AND
SIMULATE
THE
FOLLOWING
PSEUDOCODE
USING
TWO
PAPER
CLIPS
TO
INDICATE
THE
POSITIONS
FOR
I
AND
J
I
J
SIZE
WHILE
I
J
SWAP
ELEMENTS
AT
POSITIONS
I
AND
J
I
J
WHAT
DOES
THE
ALGORITHM
DO
CONSIDER
THE
TASK
OF
REARRANGING
ALL
VALUES
IN
AN
ARRAY
SO
THAT
THE
EVEN
NUMBERS
COME
FIRST
OTHERWISE
THE
ORDER
DOESN
T
MATTER
FOR
EXAMPLE
THE
ARRAY
COULD
BE
REARRANGED
TO
USING
COINS
AND
PAPERCLIPS
DISCOVER
AN
ALGORITHM
THAT
SOLVES
THIS
TASK
BY
SWAPPING
ELEMENTS
THEN
DESCRIBE
IT
IN
PSEUDOCODE
DISCOVER
AN
ALGORITHM
FOR
THE
TASK
OF
SELF
CHECK
THAT
USES
REMOVAL
AND
INSERTION
OF
ELEMENTS
INSTEAD
OF
SWAPPING
CONSIDER
THE
ALGORITHM
IN
SECTION
THAT
FINDS
THE
LARGEST
ELEMENT
IN
A
SEQUENCE
OF
INPUTS
NOT
THE
LARGEST
ELEMENT
IN
AN
ARRAY
WHY
IS
THIS
ALGORITHM
BETTER
VISUAL
IZED
BY
PICKING
PLAYING
CARDS
FROM
A
DECK
RATHER
THAN
ARRANGING
TOY
SOLDIERS
IN
A
SEQUENCE
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
TWO
DIMENSIONAL
ARRAYS
IT
OFTEN
HAPPENS
THAT
YOU
WANT
TO
STORE
COLLECTIONS
OF
VALUES
THAT
HAVE
A
TWO
DIMENSIONAL
LAYOUT
SUCH
DATA
SETS
COMMONLY
OCCUR
IN
FINANCIAL
AND
SCIENTIFIC
APPLICATIONS
AN
ARRANGEMENT
CONSISTING
OF
ROWS
AND
COLUMNS
OF
VALUES
IS
CALLED
A
TWO
DIMENSIONAL
ARRAY
OR
A
MATRIX
LET
EXPLORE
HOW
TO
STORE
THE
EXAMPLE
DATA
SHOWN
IN
FIGURE
THE
MEDAL
COUNTS
OF
THE
FIGURE
SKATING
COMPETITIONS
AT
THE
WINTER
OLYMPICS
GOLD
SILVER
BRONZE
CANADA
CHINA
GERMANY
KOREA
JAPAN
RUSSIA
UNITED
STATES
FIGURE
FIGURE
SKATING
MEDAL
COUNTS
DEFINING
TWO
DIMENSIONAL
ARRAYS
C
USES
AN
ARRAY
WITH
TWO
SUBSCRIPTS
TO
STORE
A
TWO
DIMENSIONAL
ARRAY
FOR
EXAM
PLE
HERE
IS
THE
DEFINITION
OF
AN
ARRAY
WITH
ROWS
AND
COLUMNS
SUITABLE
FOR
STORING
OUR
MEDAL
COUNT
DATA
CONST
INT
COUNTRIES
CONST
INT
MEDALS
INT
COUNTS
COUNTRIES
MEDALS
YOU
CAN
INITIALIZE
THE
ARRAY
BY
GROUPING
EACH
ROW
AS
FOLLOWS
INT
COUNTS
COUNTRIES
MEDALS
JUST
AS
WITH
ONE
DIMENSIONAL
ARRAYS
YOU
CANNOT
CHANGE
THE
SIZE
OF
A
TWO
DIMEN
SIONAL
ARRAY
ONCE
IT
HAS
BEEN
DEFINED
SYNTAX
TWO
DIMENSIONAL
ARRAY
DEFINITION
ACCESSING
ELEMENTS
TO
ACCESS
A
PARTICULAR
ELEMENT
IN
THE
TWO
DIMENSIONAL
ARRAY
YOU
NEED
TO
SPECIFY
TWO
SUBSCRIPTS
IN
SEPARATE
BRACKETS
TO
SELECT
THE
ROW
AND
COLUMN
RESPECTIVELY
SEE
SYNTAX
AND
FIGURE
INT
VALUE
COUNTS
TO
ACCESS
ALL
VALUES
IN
A
TWO
DIMENSIONAL
ARRAY
YOU
USE
TWO
NESTED
LOOPS
FOR
EXAM
PLE
THE
FOLLOWING
LOOP
PRINTS
ALL
ELEMENTS
OF
COUNTS
FOR
INT
I
I
COUNTRIES
I
PROCESS
THE
ITH
ROW
FOR
INT
J
J
MEDALS
J
PROCESS
THE
JTH
COLUMN
IN
THE
ITH
ROW
COUT
SETW
COUNTS
I
J
COUT
ENDL
START
A
NEW
LINE
AT
THE
END
OF
THE
ROW
COLUMN
INDEX
COUNTS
FIGURE
ACCESSING
AN
ELEMENT
IN
A
TWO
DIMENSIONAL
ARRAY
COMPUTING
ROW
AND
COLUMN
TOTALS
A
COMMON
TASK
IS
TO
COMPUTE
ROW
OR
COLUMN
TOTALS
IN
OUR
EXAMPLE
THE
ROW
TOTALS
GIVE
US
THE
TOTAL
NUMBER
OF
MEDALS
WON
BY
A
PARTICULAR
COUNTRY
FINDING
THE
RIGHT
INDEX
VALUES
IS
A
BIT
TRICKY
AND
IT
IS
A
GOOD
IDEA
TO
MAKE
A
QUICK
SKETCH
TO
COMPUTE
THE
TOTAL
OF
ROW
I
WE
NEED
TO
VISIT
THE
FOLLOWING
ELEMENTS
MEDALS
ROW
I
AS
YOU
CAN
SEE
WE
NEED
TO
COMPUTE
THE
SUM
OF
COUNTS
I
J
WHERE
J
RANGES
FROM
TO
MEDALS
THE
FOLLOWING
LOOP
COMPUTES
THE
TOTAL
INT
TOTAL
FOR
INT
J
J
MEDALS
J
TOTAL
TOTAL
COUNTS
I
J
COMPUTING
COLUMN
TOTALS
IS
SIMILAR
FORM
THE
SUM
OF
COUNTS
I
J
WHERE
I
RANGES
FROM
TO
COUNTRIES
COLUMN
J
J
J
J
J
J
J
J
INT
TOTAL
FOR
INT
I
I
COUNTRIES
I
COUNTRIES
TOTAL
TOTAL
COUNTS
I
J
TWO
DIMENSIONAL
ARRAY
PARAMETERS
WHEN
PASSING
A
TWO
DIMENSIONAL
ARRAY
TO
A
FUNCTION
YOU
MUST
SPECIFY
THE
NUMBER
OF
COLUMNS
AS
A
CONSTANT
WITH
THE
PARAMETER
TYPE
FOR
EXAMPLE
THIS
FUNCTION
COMPUTES
THE
TOTAL
OF
A
GIVEN
ROW
CONST
INT
COLUMNS
INT
INT
TABLE
COLUMNS
INT
ROW
INT
TOTAL
FOR
INT
J
J
COLUMNS
J
TOTAL
TOTAL
TABLE
ROW
J
RETURN
TOTAL
THIS
FUNCTION
CAN
COMPUTE
ROW
TOTALS
OF
A
TWO
DIMENSIONAL
ARRAY
WITH
AN
ARBITRARY
NUMBER
OF
ROWS
BUT
THE
ARRAY
MUST
HAVE
COLUMNS
YOU
HAVE
TO
WRITE
A
DIFFERENT
FUNCTION
IF
YOU
WANT
TO
COMPUTE
ROW
TOTALS
OF
A
TWO
DIMENSIONAL
ARRAY
WITH
COLUMNS
TO
UNDERSTAND
THIS
LIMITATION
YOU
NEED
TO
KNOW
HOW
THE
ARRAY
ELEMENTS
ARE
STORED
IN
MEMORY
ALTHOUGH
THE
ARRAY
APPEARS
TO
BE
TWO
DIMENSIONAL
THE
ELEMENTS
ARE
STILL
STORED
AS
A
LINEAR
SEQUENCE
FIGURE
SHOWS
HOW
THE
COUNTS
ARRAY
IS
STORED
ROW
BY
ROW
FOR
EXAMPLE
TO
REACH
COUNTS
THE
PROGRAM
MUST
FIRST
SKIP
PAST
ROWS
AND
AND
THEN
LOCATE
OFFSET
IN
ROW
THE
OFFSET
FROM
THE
START
OF
THE
ARRAY
IS
NUMBER
OF
COLUMNS
NOW
CONSIDER
THE
FUNCTION
THE
COMPILER
GENERATES
CODE
TO
FIND
THE
ELEMENT
TABLE
I
J
BY
COMPUTING
THE
OFFSET
I
COLUMNS
J
THE
COMPILER
USES
THE
VALUE
THAT
YOU
SUPPLIED
IN
THE
SECOND
PAIR
OF
BRACKETS
WHEN
DECLARING
THE
PARAMETER
INT
INT
TABLE
COLUMNS
INT
ROW
NOTE
THAT
THE
FIRST
PAIR
OF
BRACKETS
SHOULD
BE
EMPTY
JUST
AS
WITH
ONE
DIMENSIONAL
ARRAYS
ROW
ROW
ROW
ROW
COUNTS
FIGURE
A
TWO
DIMENSIONAL
ARRAY
IS
STORED
AS
A
SEQUENCE
OF
ROWS
THE
FUNCTION
DID
NOT
NEED
TO
KNOW
THE
NUMBER
OF
ROWS
OF
THE
ARRAY
IF
THE
NUMBER
OF
ROWS
IS
REQUIRED
PASS
IT
AS
A
VARIABLE
AS
IN
THIS
EXAMPLE
INT
INT
TABLE
COLUMNS
INT
ROWS
INT
COLUMN
INT
TOTAL
FOR
INT
I
I
ROWS
I
TOTAL
TOTAL
TABLE
I
COLUMN
RETURN
TOTAL
WORKING
WITH
TWO
DIMENSIONAL
ARRAYS
IS
ILLUSTRATED
IN
THE
FOLLOWING
PROGRAM
THE
PROGRAM
PRINTS
OUT
THE
MEDAL
COUNTS
AND
THE
ROW
TOTALS
MEDALS
CPP
COUT
COUNTRY
GOLD
SILVER
BRONZE
TOTAL
ENDL
PRINT
COUNTRIES
COUNTS
AND
ROW
TOTALS
FOR
INT
I
I
COUNTRIES
I
COUT
SETW
COUNTRIES
I
PROCESS
THE
ITH
ROW
FOR
INT
J
J
MEDALS
J
COUT
SETW
COUNTS
I
J
INT
TOTAL
COUNTS
I
COUT
SETW
TOTAL
ENDL
RETURN
PROGRAM
RUN
COUNTRY
GOLD
SILVER
BRONZE
TOTAL
CANADA
CHINA
GERMANY
KOREA
JAPAN
RUSSIA
UNITED
STATES
WHAT
RESULTS
DO
YOU
GET
IF
YOU
TOTAL
THE
COLUMNS
IN
OUR
SAMPLE
DATA
CONSIDER
AN
ARRAY
FOR
A
BOARD
GAME
INT
BOARD
USING
TWO
NESTED
LOOPS
INITIALIZE
THE
BOARD
SO
THAT
ZEROES
AND
ONES
ALTERNATE
AS
ON
A
CHECKERBOARD
HINT
CHECK
WHETHER
I
J
IS
EVEN
DEFINE
A
TWO
DIMENSIONAL
ARRAY
FOR
REPRESENTING
A
TIC
TAC
TOE
BOARD
THE
BOARD
HAS
THREE
ROWS
AND
COLUMNS
AND
CONTAINS
STRINGS
X
O
AND
WRITE
AN
ASSIGNMENT
STATEMENT
TO
PLACE
AN
X
IN
THE
UPPER
RIGHT
CORNER
OF
THE
TIC
TAC
TOE
BOARD
WHICH
ELEMENTS
ARE
ON
THE
DIAGONAL
JOINING
THE
UPPER
LEFT
AND
THE
LOWER
RIGHT
CORNERS
OF
THE
TIC
TAC
TOE
BOARD
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
VECTORS
WHEN
YOU
WRITE
A
PROGRAM
THAT
COLLECTS
VALUES
FROM
USER
INPUT
YOU
DON
T
ALWAYS
KNOW
HOW
MANY
VALUES
YOU
WILL
HAVE
UNFORTUNATELY
THE
SIZE
OF
THE
ARRAY
HAS
TO
BE
KNOWN
WHEN
THE
PROGRAM
IS
COMPILED
IN
SECTION
YOU
SAW
HOW
YOU
CAN
ADDRESS
THIS
PROBLEM
WITH
PARTIALLY
FILLED
ARRAYS
THE
VEC
TOR
CONSTRUCT
WHICH
WE
DISCUSS
IN
THE
FOLLOWING
SECTIONS
OFFERS
A
MORE
CONVENIENT
SOLUTION
A
VEC
TOR
COLLECTS
A
SEQUENCE
OF
VALUES
JUST
LIKE
AN
ARRAY
DOES
BUT
ITS
SIZE
CAN
CHANGE
A
VECTOR
EXPANDS
TO
HOLD
AS
MANY
ELEMENTS
AS
NEEDED
AVAILABLE
ONLINE
AT
WWW
WILEY
COM
COLLEGE
HORSTMANN
SYNTAX
DEFINING
A
VECTOR
DEFINING
VECTORS
WHEN
YOU
DEFINE
A
VECTOR
YOU
SPECIFY
THE
TYPE
OF
THE
ELEMENTS
IN
ANGLE
BRACKETS
LIKE
THIS
VECTOR
DOUBLE
VALUES
YOU
CAN
OPTIONALLY
SPECIFY
THE
INITIAL
SIZE
FOR
EXAMPLE
HERE
IS
A
DEFINITION
OF
A
VECTOR
WHOSE
INITIAL
SIZE
IS
VECTOR
DOUBLE
VALUES
IF
YOU
DEFINE
A
VECTOR
WITHOUT
AN
INITIAL
SIZE
IT
HAS
SIZE
WHILE
THERE
WOULD
BE
NO
POINT
IN
DEFINING
AN
ARRAY
OF
SIZE
ZERO
IT
IS
OFTEN
USEFUL
TO
HAVE
VECTORS
WITH
INITIAL
SIZE
ZERO
AND
THEN
GROW
THEM
AS
NEEDED
IN
ORDER
TO
USE
VECTORS
IN
YOUR
PROGRAM
YOU
NEED
TO
INCLUDE
THE
VECTOR
HEADER
YOU
ACCESS
THE
VECTOR
ELEMENTS
AS
VALUES
I
JUST
AS
YOU
DO
WITH
ARRAYS
THE
SIZE
MEMBER
FUNCTION
RETURNS
THE
CURRENT
SIZE
OF
A
VECTOR
IN
A
LOOP
THAT
VISITS
ALL
VECTOR
ELEMENTS
USE
THE
SIZE
MEMBER
FUNCTION
LIKE
THIS
FOR
INT
I
I
VALUES
SIZE
I
COUT
VALUES
I
ENDL
GROWING
AND
SHRINKING
VECTORS
IF
YOU
NEED
ADDITIONAL
ELEMENTS
YOU
USE
THE
FUNCTION
TO
ADD
AN
ELEMENT
TO
THE
END
OF
THE
VECTOR
THEREBY
INCREASING
ITS
SIZE
BY
THE
FUNCTION
IS
A
MEM
BER
FUNCTION
THAT
YOU
MUST
CALL
WITH
THE
DOT
NOTATION
LIKE
THIS
VALUES
AFTER
THIS
CALL
THE
VECTOR
VALUES
IN
FIGURE
HAS
SIZE
AND
VALUES
CONTAINS
THE
VALUE
FIGURE
ADDING
AN
ELEMENT
WITH
IT
IS
VERY
COMMON
TO
START
WITH
AN
EMPTY
VECTOR
AND
USE
THE
FUNCTION
TO
FILL
IT
FOR
EXAMPLE
VECTOR
DOUBLE
VALUES
INITIALLY
EMPTY
VALUES
NOW
VALUES
HAS
SIZE
AND
ELEMENT
VALUES
NOW
VALUES
HAS
SIZE
AND
ELEMENTS
VALUES
NOW
VALUES
HAS
SIZE
AND
ELEMENTS
ANOTHER
COMMON
USE
FOR
THE
MEMBER
FUNCTION
IS
TO
FILL
A
VECTOR
WITH
INPUT
VALUES
VECTOR
DOUBLE
VALUES
INITIALLY
EMPTY
DOUBLE
INPUT
WHILE
CIN
INPUT
VALUES
INPUT
NOTE
HOW
THIS
INPUT
LOOP
IS
MUCH
SIMPLER
THAN
THE
ONE
IN
SECTION
ANOTHER
MEMBER
FUNCTION
REMOVES
THE
LAST
ELEMENT
OF
A
VECTOR
SHRINKING
ITS
SIZE
BY
ONE
SEE
FIGURE
VALUES
FIGURE
REMOVING
AN
ELEMENT
WITH
VECTORS
AND
FUNCTIONS
YOU
CAN
USE
VECTORS
AS
FUNCTION
ARGUMENTS
IN
EXACTLY
THE
SAME
WAY
AS
ANY
OTHER
VAL
UES
FOR
EXAMPLE
THE
FOLLOWING
FUNCTION
COMPUTES
THE
SUM
OF
A
VECTOR
OF
FLOATING
POINT
NUMBERS
DOUBLE
SUM
VECTOR
DOUBLE
VALUES
DOUBLE
TOTAL
FOR
INT
I
I
VALUES
SIZE
I
TOTAL
TOTAL
VALUES
I
RETURN
TOTAL
THIS
FUNCTION
VISITS
THE
VECTOR
ELEMENTS
BUT
IT
DOES
NOT
MODIFY
THEM
IF
YOUR
FUNC
TION
MODIFIES
THE
ELEMENTS
USE
A
REFERENCE
PARAMETER
THE
FOLLOWING
FUNCTION
MULTI
PLIES
ALL
VALUES
OF
A
VECTOR
WITH
A
GIVEN
FACTOR
VOID
MULTIPLY
VECTOR
DOUBLE
VALUES
DOUBLE
FACTOR
NOTE
THE
FOR
INT
I
I
VALUES
SIZE
I
VALUES
I
VALUES
I
FACTOR
SOME
PROGRAMMERS
USE
A
CONSTANT
REFERENCE
SEE
SPECIAL
TOPIC
FOR
VECTOR
PARAM
ETERS
THAT
ARE
NOT
MODIFIED
FOR
EXAMPLE
DOUBLE
SUM
CONST
VECTOR
DOUBLE
VALUES
CONST
ADDED
FOR
EFFICIENCY
A
FUNCTION
CAN
RETURN
A
VECTOR
AGAIN
VECTORS
ARE
NO
DIFFERENT
FROM
ANY
OTHER
VALUES
IN
THIS
REGARD
SIMPLY
BUILD
UP
THE
RESULT
IN
THE
FUNCTION
AND
RETURN
IT
IN
THIS
EXAMPLE
THE
SQUARES
FUNCTION
RETURNS
A
VECTOR
OF
SQUARES
FROM
UP
TO
N
VECTOR
INT
SQUARES
INT
N
VECTOR
INT
RESULT
FOR
INT
I
I
N
I
RESULT
I
I
RETURN
RESULT
AS
YOU
CAN
SEE
IT
IS
EASY
TO
USE
VECTORS
WITH
FUNCTIONS
THERE
ARE
NO
SPECIAL
RULES
TO
KEEP
IN
MIND
VECTOR
ALGORITHMS
MOST
OF
THE
ALGORITHMS
IN
SECTION
APPLY
WITHOUT
CHANGE
TO
VECTORS
SIMPLY
REPLACE
SIZE
OF
VALUES
WITH
VALUES
SIZE
IN
THIS
SECTION
WE
DISCUSS
WHICH
OF
THE
ALGO
RITHMS
ARE
DIFFERENT
FOR
VECTORS
COPYING
AS
DISCUSSED
IN
SECTION
YOU
NEED
AN
EXPLICIT
LOOP
TO
MAKE
A
COPY
OF
AN
ARRAY
IT
IS
MUCH
EASIER
TO
MAKE
A
COPY
OF
A
VECTOR
YOU
SIMPLY
ASSIGN
IT
TO
ANOTHER
VECTOR
CON
SIDER
THIS
EXAMPLE
VECTOR
INT
SQUARES
FOR
INT
I
I
I
SQUARES
I
I
VECTOR
INT
INITIALLY
EMPTY
SQUARES
NOW
CONTAINS
THE
SAME
ELEMENTS
AS
SQUARES
FINDING
MATCHES
SECTION
SHOWS
YOU
HOW
TO
FIND
THE
FIRST
MATCH
BUT
SOMETIMES
YOU
WANT
TO
HAVE
ALL
MATCHES
THIS
IS
TEDIOUS
WITH
ARRAYS
BUT
SIMPLE
USING
A
VECTOR
THAT
COLLECTS
THE
MATCHES
HERE
WE
COLLECT
ALL
ELEMENTS
THAT
ARE
GREATER
THAN
VECTOR
DOUBLE
MATCHES
FOR
INT
I
I
VALUES
SIZE
I
IF
VALUES
I
MATCHES
VALUES
I
REMOVING
AN
ELEMENT
WHEN
YOU
REMOVE
AN
ELEMENT
FROM
A
VECTOR
YOU
WANT
TO
ADJUST
THE
SIZE
OF
THE
VECTOR
BY
CALLING
THE
MEMBER
FUNCTION
HERE
IS
THE
CODE
FOR
REMOVING
AN
ELEMENT
AT
POS
WHEN
THE
ORDER
DOESN
T
MATTER
INT
VALUES
SIZE
VALUES
POS
VALUES
REPLACE
ELEMENT
AT
POS
WITH
LAST
ELEMENT
VALUES
DELETE
LAST
ELEMENT
WHEN
REMOVING
AN
ELEMENT
FROM
AN
ORDERED
VECTOR
FIRST
MOVE
THE
ELEMENTS
THEN
REDUCE
THE
SIZE
FOR
INT
I
POS
I
VALUES
SIZE
I
VALUES
I
VALUES
I
VALUES
INSERTING
AN
ELEMENT
INSERTING
AN
ELEMENT
AT
THE
END
OF
A
VECTOR
REQUIRES
NO
SPECIAL
CODE
SIMPLY
USE
THE
MEMBER
FUNCTION
WHEN
YOU
INSERT
AN
ELEMENT
IN
THE
MIDDLE
YOU
STILL
WANT
TO
CALL
SO
THAT
THE
SIZE
OF
THE
VECTOR
IS
INCREASED
USE
THE
FOLLOWING
CODE
INT
VALUES
SIZE
VALUES
VALUES
FOR
INT
I
I
POS
I
VALUES
I
VALUES
I
VALUES
POS
DEFINE
A
VECTOR
OF
INTEGERS
THAT
CONTAINS
THE
FIRST
FIVE
PRIME
NUMBERS
AND
USE
TO
ADD
THE
ELEMENTS
ANSWER
SELF
CHECK
WITHOUT
USING
WHAT
IS
THE
CONTENTS
OF
THE
VECTOR
NAMES
AFTER
THE
FOLLOWING
STATEMENTS
VECTOR
STRING
NAMES
NAMES
ANN
NAMES
BOB
NAMES
NAMES
CAL
SUPPOSE
YOU
WANT
TO
STORE
A
SET
OF
TEMPERATURE
MEASUREMENTS
THAT
IS
TAKEN
EVERY
FIVE
MINUTES
SHOULD
YOU
USE
A
VECTOR
OR
AN
ARRAY
SUPPOSE
YOU
WANT
TO
STORE
THE
NAMES
OF
THE
WEEKDAYS
SHOULD
YOU
USE
A
VECTOR
OR
AN
ARRAY
OF
SEVEN
STRINGS
WRITE
THE
HEADER
FOR
A
FUNCTION
THAT
APPENDS
TWO
VECTORS
YIELDING
A
THIRD
VECTOR
DO
NOT
IMPLEMENT
THE
FUNCTION
CONSIDER
THIS
PARTIALLY
COMPLETED
FUNCTION
THAT
APPENDS
THE
ELEMENTS
OF
ONE
VECTOR
TO
ANOTHER
VOID
APPEND
VECTOR
DOUBLE
TARGET
VECTOR
DOUBLE
SOURCE
FOR
INT
I
I
SOURCE
SIZE
I
TARGET
SOURCE
I
SPECIFY
WHETHER
THE
PARAMETERS
SHOULD
BE
VALUE
OR
REFERENCE
PARAMETERS
PRACTICE
IT
NOW
YOU
CAN
TRY
THESE
EXERCISES
AT
THE
END
OF
THE
CHAPTER
RANDOM
FACT
THE
FIRST
PROGRAMMER
BEFORE
POCKET
CALCU
LATORS
AND
PERSONAL
COMPUTERS
EXISTED
NAVIGATORS
AND
ENGINEERS
USED
MECHANICAL
ADDING
MACHINES
SLIDE
RULES
AND
TABLES
OF
LOGARITHMS
AND
TRIGONOMETRIC
FUNC
TIONS
TO
SPEED
UP
COMPUTATIONS
UNFOR
TUNATELY
THE
TABLES
FOR
WHICH
VALUES
HAD
TO
BE
COMPUTED
BY
HAND
WERE
NOTORIOUSLY
INACCURATE
THE
MATHEMA
TICIAN
CHARLES
BABBAGE
HAD
THE
INSIGHT
THAT
IF
A
MACHINE
COULD
BE
CONSTRUCTED
THAT
PRODUCED
PRINTED
TABLES
AUTOMATICALLY
BOTH
CALCULA
TION
AND
TYPESETTING
ERRORS
COULD
BE
AVOIDED
BABBAGE
SET
OUT
TO
DEVELOP
A
MACHINE
FOR
THIS
PURPOSE
WHICH
HE
CALLED
A
DIFERENCE
ENGINE
BECAUSE
IT
REPLICA
OF
BABBAGE
DIFERENCE
ENGINE
USED
SUCCESSIVE
DIFFERENCES
TO
COM
PUTE
POLYNOMIALS
FOR
EXAMPLE
CON
SIDER
THE
FUNCTION
F
X
WRITE
DOWN
THE
VALUES
FOR
F
F
F
AND
SO
ON
THEN
TAKE
THE
DIFERENCES
BETWEEN
SUCCESSIVE
VALUES
REPEAT
THE
PROCESS
TAKING
THE
DIFFER
ENCE
OF
SUCCESSIVE
VALUES
IN
THE
SECOND
COLUMN
AND
THEN
REPEAT
ONCE
AGAIN
NOW
THE
DIFFERENCES
ARE
ALL
THE
SAME
YOU
CAN
RETRIEVE
THE
FUNCTION
VALUES
BY
A
PATTERN
OF
ADDITIONS
YOU
NEED
TO
KNOW
THE
VALUES
AT
THE
FRINGE
OF
THE
PATTERN
AND
THE
CONSTANT
DIFFERENCE
YOU
CAN
TRY
IT
OUT
YOURSELF
WRITE
THE
HIGHLIGHTED
NUMBERS
ON
A
SHEET
OF
PAPER
AND
FILL
IN
THE
OTHERS
BY
ADDING
THE
NUMBERS
THAT
ARE
IN
THE
NORTH
AND
NORTHWEST
POSITIONS
THIS
METHOD
WAS
VERY
ATTRACTIVE
BECAUSE
MECHANICAL
ADDITION
MACHINES
HAD
BEEN
KNOWN
FOR
SOME
TIME
THEY
CONSISTED
OF
COG
WHEELS
WITH
COGS
PER
WHEEL
TO
REPRESENT
DIGITS
AND
MECHANISMS
TO
HANDLE
THE
CARRY
FROM
ONE
DIGIT
TO
THE
NEXT
MECHANICAL
MUL
TIPLICATION
MACHINES
ON
THE
OTHER
HAND
WERE
FRAGILE
AND
UNRELIABLE
BABBAGE
BUILT
A
SUCCESSFUL
PROTOTYPE
OF
THE
DIFFERENCE
ENGINE
AND
WITH
HIS
OWN
MONEY
AND
GOVERNMENT
GRANTS
PROCEEDED
TO
BUILD
THE
TABLE
PRINTING
MACHINE
HOWEVER
BECAUSE
OF
FUNDING
PROBLEMS
AND
THE
DIFFICULTY
OF
BUILDING
THE
MACHINE
TO
THE
REQUIRED
PRECISION
IT
WAS
NEVER
COMPLETED
WHILE
WORKING
ON
THE
DIFFERENCE
ENGINE
BABBAGE
CONCEIVED
OF
A
MUCH
GRANDER
VISION
THAT
HE
CALLED
THE
ANA
LYTICAL
ENGINE
THE
DIFFERENCE
ENGINE
WAS
DESIGNED
TO
CARRY
OUT
A
LIMITED
SET
OF
COMPUTATIONS
IT
WAS
NO
SMARTER
THAN
A
POCKET
CALCULATOR
IS
TODAY
BUT
BABBAGE
REALIZED
THAT
SUCH
A
MACHINE
COULD
BE
MADE
PROGRAMMABLE
BY
STOR
ING
PROGRAMS
AS
WELL
AS
DATA
THE
INTER
NAL
STORAGE
OF
THE
ANALYTICAL
ENGINE
WAS
TO
CONSIST
OF
000
REGISTERS
OF
DECIMAL
DIGITS
EACH
PROGRAMS
AND
CON
STANTS
WERE
TO
BE
STORED
ON
PUNCHED
CARDS
A
TECHNIQUE
THAT
WAS
AT
THAT
TIME
COMMONLY
USED
ON
LOOMS
FOR
WEAVING
PATTERNED
FABRICS
ADA
AUGUSTA
COUNTESS
OF
LOVELACE
THE
ONLY
CHILD
OF
LORD
BYRON
WAS
A
FRIEND
AND
SPONSOR
OF
CHARLES
BABBAGE
ADA
LOVELACE
WAS
ONE
OF
THE
FIRST
PEOPLE
TO
REALIZE
THE
POTENTIAL
OF
SUCH
A
MACHINE
NOT
JUST
FOR
COMPUTING
MATHEMATICAL
TABLES
BUT
FOR
PROCESSING
DATA
THAT
WERE
NOT
NUM
BERS
SHE
IS
CONSIDERED
BY
MANY
TO
BE
THE
WORLD
FIRST
PROGRAMMER
USE
ARRAYS
FOR
COLLECTING
VALUES
USE
AN
ARRAY
TO
COLLECT
A
SEQUENCE
OF
VALUES
OF
THE
SAME
TYPE
INDIVIDUAL
ELEMENTS
IN
AN
ARRAY
VALUES
ARE
ACCESSED
BY
AN
INTEGER
INDEX
I
USING
THE
NOTATION
VALUES
I
CHAPTER
SUMMARY
OVERRUN
BUFFER
BYTES
RETURN
ADDRESS
AN
ARRAY
ELEMENT
CAN
BE
USED
LIKE
ANY
VARIABLE
AN
ARRAY
INDEX
MUST
BE
AT
LEAST
ZERO
AND
LESS
THAN
THE
SIZE
OF
THE
ARRAY
A
BOUNDS
ERROR
WHICH
OCCURS
IF
YOU
SUPPLY
AN
INVALID
ARRAY
INDEX
CAN
CORRUPT
DATA
OR
CAUSE
YOUR
PROGRAM
TO
TERMINATE
WITH
A
PARTIALLY
FILLED
ARRAY
KEEP
A
COMPANION
VARIABLE
FOR
THE
CURRENT
SIZE
BE
ABLE
TO
USE
COMMON
ARRAY
ALGORITHMS
TO
COPY
AN
ARRAY
USE
A
LOOP
TO
COPY
ITS
ELEMENTS
TO
A
NEW
ARRAY
WHEN
SEPARATING
ELEMENTS
DON
T
PLACE
A
SEPARATOR
BEFORE
THE
FIRST
ELEMENT
A
LINEAR
SEARCH
INSPECTS
ELEMENTS
IN
SEQUENCE
UNTIL
A
MATCH
IS
FOUND
BEFORE
INSERTING
AN
ELEMENT
MOVE
ELEMENTS
TO
THE
END
OF
THE
ARRAY
STARTING
WITH
THE
LAST
ONE
USE
A
TEMPORARY
VARIABLE
WHEN
SWAPPING
TWO
ELEMENTS
IMPLEMENT
FUNCTIONS
THAT
PROCESS
ARRAYS
WHEN
PASSING
AN
ARRAY
TO
A
FUNCTION
ALSO
PASS
THE
SIZE
OF
THE
ARRAY
ARRAY
PARAMETERS
ARE
ALWAYS
REFERENCE
PARAMETERS
A
FUNCTION
RETURN
TYPE
CANNOT
BE
AN
ARRAY
WHEN
A
FUNCTION
MODIFIES
THE
SIZE
OF
AN
ARRAY
IT
NEEDS
TO
TELL
ITS
CALLER
A
FUNCTION
THAT
ADDS
ELEMENTS
TO
AN
ARRAY
NEEDS
TO
KNOW
ITS
CAPACITY
BE
ABLE
TO
COMBINE
AND
ADAPT
ALGORITHMS
FOR
SOLVING
A
PROGRAMMING
PROBLEM
BY
COMBINING
FUNDAMENTAL
ALGORITHMS
YOU
CAN
SOLVE
COMPLEX
PROGRAMMING
TASKS
YOU
SHOULD
BE
FAMILIAR
WITH
THE
IMPLEMENTATION
OF
FUNDAMENTAL
ALGORITHMS
SO
THAT
YOU
CAN
ADAPT
THEM
DISCOVER
ALGORITHMS
BY
MANIPULATING
PHYSICAL
OBJECTS
USE
A
SEQUENCE
OF
COINS
PLAYING
CARDS
OR
TOYS
TO
VISUALIZE
AN
ARRAY
OF
VALUES
YOU
CAN
USE
PAPER
CLIPS
AS
POSITION
MARKERS
OR
COUNTERS
USE
TWO
DIMENSIONAL
ARRAYS
FOR
DATA
THAT
IS
ARRANGED
IN
ROWS
AND
COLUMNS
USE
A
TWO
DIMENSIONAL
ARRAY
TO
STORE
TABULAR
DATA
INDIVIDUAL
ELEMENTS
IN
A
TWO
DIMENSIONAL
ARRAY
ARE
ACCESSED
BY
USING
TWO
SUBSCRIPTS
ARRAY
I
J
A
TWO
DIMENSIONAL
ARRAY
PARAMETER
MUST
HAVE
A
FIXED
NUMBER
OF
COLUMNS
USE
VECTORS
FOR
MANAGING
COLLECTIONS
WHOSE
SIZE
CAN
CHANGE
A
VECTOR
STORES
A
SEQUENCE
OF
VALUES
WHOSE
SIZE
CAN
CHANGE
USE
THE
SIZE
MEMBER
FUNCTION
TO
OBTAIN
THE
CURRENT
SIZE
OF
A
VECTOR
USE
THE
MEMBER
FUNCTION
TO
ADD
MORE
ELEMENTS
TO
A
VECTOR
USE
TO
REDUCE
THE
SIZE
VECTORS
CAN
OCCUR
AS
FUNCTION
ARGUMENTS
AND
RETURN
VALUES
USE
A
REFERENCE
PARAMETER
TO
MODIFY
THE
CONTENTS
OF
A
VECTOR
A
FUNCTION
CAN
RETURN
A
VECTOR
WRITE
CODE
THAT
FILLS
AN
ARRAY
DOUBLE
VALUES
WITH
EACH
SET
OF
VALUES
BELOW
A
B
C
D
E
F
G
CONSIDER
THE
FOLLOWING
ARRAY
INT
A
WHAT
IS
THE
VALUE
OF
TOTAL
AFTER
THE
FOLLOWING
LOOPS
COMPLETE
A
INT
TOTAL
FOR
INT
I
I
I
TOTAL
TOTAL
A
I
B
INT
TOTAL
FOR
INT
I
I
I
I
TOTAL
TOTAL
A
I
C
INT
TOTAL
FOR
INT
I
I
I
I
TOTAL
TOTAL
A
I
D
INT
TOTAL
FOR
INT
I
I
I
TOTAL
TOTAL
A
I
E
INT
TOTAL
FOR
INT
I
I
I
I
TOTAL
TOTAL
A
I
F
INT
TOTAL
FOR
INT
I
I
I
TOTAL
TOTAL
A
I
G
INT
TOTAL
FOR
INT
I
I
I
I
TOTAL
TOTAL
A
I
H
INT
TOTAL
FOR
INT
I
I
I
TOTAL
A
I
TOTAL
CONSIDER
THE
FOLLOWING
ARRAY
INT
A
REVIEW
EXERCISES
WHAT
ARE
THE
CONTENTS
OF
THE
ARRAY
A
AFTER
THE
FOLLOWING
LOOPS
COMPLETE
A
FOR
INT
I
I
I
A
I
A
I
B
FOR
INT
I
I
I
A
I
A
I
C
FOR
INT
I
I
I
A
I
A
I
D
FOR
INT
I
I
I
A
I
A
I
E
FOR
INT
I
I
I
A
I
A
I
A
I
F
FOR
INT
I
I
I
I
A
I
G
FOR
INT
I
I
I
A
I
A
I
H
FOR
INT
I
I
I
A
I
A
I
WRITE
A
LOOP
THAT
FILLS
AN
ARRAY
INT
VALUES
WITH
TEN
RANDOM
NUMBERS
BETWEEN
AND
WRITE
CODE
FOR
TWO
NESTED
LOOPS
THAT
FILL
VALUES
WITH
TEN
DIFFERENT
RANDOM
NUMBERS
BETWEEN
AND
WRITE
C
CODE
FOR
A
LOOP
THAT
SIMULTANEOUSLY
COMPUTES
BOTH
THE
MAXIMUM
AND
MINIMUM
OF
AN
ARRAY
WHAT
IS
WRONG
WITH
THE
FOLLOWING
LOOP
INT
VALUES
FOR
INT
I
I
I
VALUES
I
I
I
INTRODUCTION
THE
GAME
OF
MINESWEEPER
IS
A
GAME
OF
LOGIC
REASONING
A
BY
GRID
IS
CREATED
AND
MINES
ARE
PLACED
AT
RANDOM
IN
THE
GRID
THE
PLAYER
THEN
CLICKS
A
BUTTON
IN
THE
GRID
WHICH
EITHER
REVEALS
A
MINE
YOU
LOSE
OR
IT
REVEALS
HOW
MANY
MINES
THERE
ARE
IN
THE
NEIGHBORING
SQUARES
AWAY
IN
EACH
OF
THE
DIRECTIONS
YOUR
GOAL
IS
TO
FIND
THE
LOCATION
OF
ALL
MINES
WITHOUT
ACCIDENTALLY
EXPLODING
ONE
WHAT
I
VE
PROVIDED
TO
GET
YOU
STARTED
I
VE
PRODUCED
A
SKELETON
PROJECT
THIS
PROJECT
CONTAINS
THE
CODE
THAT
CREATES
THE
GRID
OF
BUTTONS
IT
ALSO
HAS
A
METHOD
THAT
INFORMS
YOU
WHEN
AND
WHICH
BUTTON
THE
USER
HAS
PLACED
YOUR
JOB
IS
TO
MODIFY
THE
CODE
IN
THE
SUBROUTINE
AND
THE
GRID
CLICK
SUBROUTINE
DO
NOT
MODIFY
ANY
OF
THE
CODE
I
VE
PROVIDED
EXCEPT
FOR
THE
EXAMPLE
CODE
IN
GRID
CLICK
WHAT
YOU
NEED
TO
DO
YOU
NEED
TO
CREATE
A
DIMENSIONAL
ARRAY
THAT
REPRESENTS
THE
PLAYING
BOARD
AND
IN
EACH
APPROPRIATE
ARRAY
ELEMENT
YOU
WILL
EITHER
INDICATE
IT
IS
A
MINE
OR
YOU
WILL
PLACE
THE
NUMBER
OF
MINES
IN
THE
SURROUNDING
SQUARES
IN
THE
SUBROUTINE
YOU
WILL
DO
THE
FOLLOWING
PLACE
MINES
AT
UNIQUE
RANDOM
COORDINATES
FILL
IN
THE
ARRAY
WITH
THE
NEIGHBOR
COUNTS
ACCORDING
TO
THE
FOLLOWING
EXAMPLES
GENERAL
CASE
FOR
ALL
OF
THE
ROWS
FROM
TO
AND
COLUMNS
FROM
TO
EACH
SQUARE
HAS
EIGHT
NEIGHBORS
IF
THE
SQUARE
YOU
ARE
EXAMINING
MARKED
WITH
THE
BELOW
DOES
NOT
CONTAIN
A
MINE
COUNT
HOW
MANY
MINES
ARE
IN
THE
SURROUNDING
SQUARES
FIRST
LAST
ROWS
COLUMNS
IN
THE
FIRST
ROW
LAST
ROW
FIRST
COLUMN
AND
LAST
COLUMN
THERE
ARE
ONLY
NEIGHBORS
CORNERS
IN
THE
TOP
RIGHT
TOP
LEFT
BOTTOM
RIGHT
AND
BOTTOM
LEFT
CORNERS
THERE
ARE
ONLY
NEIGHBORS
NOTE
LOOPS
WILL
GREATLY
HELP
YOU
IN
MOST
OF
THESE
CASES
HOWEVER
THERE
STILL
IS
A
LOT
OF
NEARLY
IDENTICAL
CODE
THAT
WILL
SEEM
TEDIOUS
IT
COPY
PASTE
AND
MODIFY
FOR
THE
MOST
PART
TIPS
AND
SUGGESTIONS
ON
EVERY
WINDOWS
MACHINE
THERE
IS
A
COPY
OF
MINESWEEPER
INSTALLED
PLAY
IT
TO
GET
A
FEEL
FOR
HOW
IT
SHOULD
LOOK
YOU
DON
T
HAVE
TO
BE
GOOD
AT
THE
GAME
JUST
UNDERSTAND
THE
RULES
I
VE
PROVIDED
AN
EXAMPLE
I
WROTE
AS
WELL
THERE
NO
SIMPLE
WAY
TO
DETERMINE
YOU
WON
SO
DON
T
WORRY
ABOUT
IT
JUST
HANDLE
DISPLAYING
A
MESSAGE
IF
YOU
CLICK
A
MINE
GET
SOME
GRAPH
PAPER
AND
DRAW
YOUR
SPECIAL
CASES
TO
UNDERSTAND
THEM
BETTER
TRY
TO
FOLLOW
THE
COMMENTS
I
VE
PROVIDED
TO
MAKE
SURE
YOU
DO
THE
RIGHT
THINGS
WHEN
START
WITH
THE
GENERAL
CASE
IT
A
BIT
EASIER
TO
UNDERSTAND
REMEMBER
TO
PLACE
THE
MINES
AT
UNIQUE
PLACES
THAT
MEANS
YOU
NEED
TO
CHECK
TO
SEE
IF
THERE
ALREADY
A
MINE
AT
THE
COORDINATES
YOU
PICKED
AND
IF
SO
TRY
AGAIN
SUBMISSION
SUBMISSION
IS
DONE
THROUGH
THE
USUAL
WEBSITE
HTTP
WWW
CS
PITT
EDU
JMISURDA
SUBMIT
REMEMBER
TO
NAME
THEM
WITH
YOUR
LAST
NAME
IF
THERE
ISN
T
A
LAST
NAME
ON
THE
FILE
OR
IN
THE
COMMENT
I
WILL
BE
UNABLE
TO
GRADE
IT
SINCE
I
WILL
NOT
SEE
YOU
AGAIN
SUBMISSION
IS
AFTER
THE
FINAL
BLACKJACK
ALSO
KNOWN
AS
IS
A
MULTIPLAYER
CARD
GAME
WITH
FAIRLY
SIMPLE
RULES
FOR
THIS
ASSIGNMENT
YOU
WILL
BE
IMPLEMENTING
A
SIMPLIFIED
VERSION
WHERE
A
USER
CAN
PLAY
AGAINST
THE
COMPUTER
WHO
ACTS
AS
DEALER
TWO
CARDS
ARE
DEALT
TO
EACH
PLAYER
THE
DEALER
SHOWS
ONE
CARD
FACE
UP
AND
THE
OTHER
IS
FACE
DOWN
THE
PLAYER
GETS
TO
SEE
BOTH
OF
HIS
OR
HER
CARDS
AND
THE
TOTAL
OF
THEM
IS
ADDED
FACE
CARDS
KINGS
QUEENS
AND
JACKS
ARE
WORTH
POINTS
ACES
ARE
WORTH
OR
POINTS
AND
ALL
OTHER
CARDS
ARE
WORTH
THEIR
FACE
VALUE
THE
GOAL
OF
THE
GAME
IS
TO
GET
AS
CLOSE
TO
BLACKJACK
WITHOUT
GOING
OVER
CALLED
BUSTING
THE
HUMAN
PLAYER
GOES
FIRST
MAKING
HIS
OR
HER
DECISIONS
BASED
ON
THE
SINGLE
DEALER
CARD
SHOWING
THE
PLAYER
HAS
TWO
CHOICES
HIT
OR
STAND
HIT
MEANS
TO
TAKE
ANOTHER
CARD
STAND
MEANS
THAT
THE
PLAYER
WISHES
NO
MORE
CARDS
AND
ENDS
THE
TURN
ALLOWING
FOR
THE
DEALER
TO
PLAY
THE
DEALER
MUST
HIT
IF
THEIR
CARD
TOTAL
IS
LESS
THAN
AND
MUST
STAND
IF
IT
IS
OR
HIGHER
WHICHEVER
PLAYER
GETS
CLOSEST
TO
WITHOUT
EXCEEDING
IT
WINS
INTERFACE
THE
INTERFACE
SHOULD
HAVE
A
MENU
WITH
A
NEW
AND
EXIT
OPTIONS
WHEN
THE
NEW
MENU
ITEM
IS
CLICKED
THE
GAME
SHOULD
BEGIN
DEAL
TWO
CARDS
TO
THE
PLAYER
AND
SHOW
THEIR
TOTAL
DEAL
CARDS
TO
THE
DEALER
HOWEVER
ONLY
SHOW
CARD
IN
THE
INTERFACE
ENABLE
THE
HIT
AND
STAND
BUTTONS
SO
THE
PLAYER
CAN
PLAY
THE
PLAYER
SHOULD
BE
ABLE
TO
PLAY
UNTIL
THEY
HIT
THE
STAND
BUTTON
OR
THEY
GO
OVER
IF
THEY
BUST
THE
HIT
AND
STAND
BUTTONS
GET
DISABLED
AND
A
MESSAGE
SAYING
THE
GAME
IS
OVER
SHOULD
BE
DISPLAYED
WHEN
THE
STAND
BUTTON
IS
HIT
THE
DEALER
CARDS
ARE
REVEALED
AND
THE
DEALER
PLAYS
USING
THE
RULES
ABOVE
WHEN
THE
DEALER
IS
DONE
PLAYING
A
WINNER
IS
DETERMINED
AND
DISPLAYED
IN
A
MESSAGE
BOX
THE
GAME
IS
THEN
OVER
UNTIL
THE
USER
CHOOSES
NEW
AGAIN
FROM
THE
MENU
REQUIREMENTS
FOR
THIS
ASSIGNMENT
YOU
NEED
TO
DO
THE
FOLLOWING
WRITE
A
PROGRAM
THAT
PLAYS
BLACKJACK
HAVE
THE
PROGRAM
INTELLIGENTLY
DETERMINE
IF
AN
ACE
SHOULD
BE
INTERPRETED
AS
A
OR
AN
THIS
IS
SOMEWHAT
CHALLENGING
YOU
NEED
TO
BE
ABLE
TO
ALSO
HANDLE
MULTIPLE
ACES
IF
THERE
ARE
ANY
ACES
IN
THE
HAND
AND
THE
TOTAL
EXCEEDS
CHANGE
THE
TO
A
I
E
SUBTRACT
UNTIL
THERE
ARE
NO
MORE
ACES
IN
THE
HAND
OR
THE
TOTAL
IS
BELOW
HINT
KEEP
A
COUNTER
THAT
SAYS
HOW
MANY
ACES
HAVE
BEEN
DEALT
SO
FAR
TO
A
PLAYER
YOU
DON
T
NEED
TO
BE
ABLE
TO
DEAL
FROM
A
REAL
DECK
JUST
GENERATE
A
RANDOM
NUMBER
WHERE
IS
AN
ACE
AND
AND
REPRESENT
AS
WELL
TO
GET
THE
RIGHT
DISTRIBUTION
OF
CARDS
YOU
CAN
IGNORE
SUIT
YOU
MUST
HAVE
COMMENTS
AND
GOOD
VARIABLE
CONTROL
NAMES
WE
WILL
DISCUSS
THIS
IN
CLASS
AGAIN
THIS
WILL
BE
A
PORTION
OF
YOUR
GRADE
HINTS
AND
TIPS
START
EARLY
WE
WILL
TALK
ABOUT
THE
MSGBOX
FUNCTION
AGAIN
TO
DISPLAY
MESSAGES
IF
YOU
WANT
THE
PROGRAM
TO
PAUSE
A
LITTLE
SO
YOU
CAN
SEE
THE
DEALER
CARDS
EACH
TURN
YOU
CAN
USE
THE
CODE
TO
PAUSE
HALF
A
SECOND
PLEASE
PLAY
WITH
THE
DEMO
I
VE
PROVIDED
ON
THE
WEBPAGE
SUBMISSION
PLACE
YOUR
FILES
INTO
A
ZIP
FOLDER
AS
WE
DID
FOR
THE
LAST
ASSIGNMENT
THE
URL
FOR
SUBMISSION
IS
HTTP
WWW
CS
PITT
EDU
JMISURDA
SUBMIT
IT
WILL
GO
LIVE
AT
CLASS
TIME
TUESDAY
NO
SUBMISSIONS
ACCEPTED
PRIOR
TO
THAT
IF
YOU
WANT
HELP
MAKE
SURE
YOU
SEE
ME
BEFORE
THE
DEADLINE
ALGORITHMS
ARE
PRECISE
STEPBYSTEP
INSTRUCTIONS
ON
HOW
TO
ACCOMPLISH
A
DESIRED
TASK
A
FORMAL
ALGORITHM
FOR
USE
WITH
COMPUTERS
OR
IN
MATHEMATICS
MUST
BE
VERY
DETAILED
AND
RESOLVE
THE
AMBIGUITIES
THAT
WE
TAKE
FOR
GRANTED
IN
EVERYDAY
LIFE
YOUR
FIRST
OUT
OF
CLASS
ASSIGNMENT
IS
TO
PICK
A
COMMON
OR
INTERESTING
TASK
AND
APPROACH
IT
ALGORITHMICALLY
BREAKING
IT
DOWN
TO
THE
LEVEL
THAT
A
COMPUTER
MIGHT
UNDERSTAND
ASSIGNMENT
FOR
THIS
PROJECT
YOU
NEED
TO
PICK
AN
EVERYDAY
OR
INTERESTING
TASK
AND
CREATE
AN
ALGORITHM
THAT
EXPLAINS
HOW
TO
DO
IT
YOU
NEED
TO
SPECIFY
WHAT
IF
ANYTHING
IS
INPUT
LIKE
INGREDIENTS
IN
A
RECIPE
THE
PROCESS
BY
WHICH
YOU
OPERATE
ON
THAT
INPUT
TO
PRODUCE
OR
ACCOMPLISH
A
TASK
WHAT
THE
OUTPUT
OF
THE
ALGORITHM
IS
WHAT
IF
ANY
ASSUMPTIONS
ARE
MADE
IN
THE
ALGORITHM
WHAT
TO
TURN
IN
TYPE
YOUR
ALGORITHM
UP
USING
THE
FOLLOWING
EXAMPLE
AS
A
TEMPLATE
NAME
THE
TASK
YOUR
ALGORITHM
DESCRIBES
THE
INPUT
AND
OUTPUT
AND
THEN
LIST
THE
STEPS
INVOLVED
NUMBERING
EACH
FOLLOWED
BY
WHAT
YOUR
ALGORITHM
ASSUMES
EXAMPLE
ALGORITHM
CALLING
A
FRIEND
ON
THE
TELEPHONE
INPUT
THE
TELEPHONE
NUMBER
OF
YOUR
FRIEND
OUTPUT
NONE
STEPS
PICK
UP
THE
PHONE
AND
LISTEN
FOR
A
DIAL
TONE
PRESS
EACH
DIGIT
OF
THE
PHONE
NUMBER
ON
THE
PHONE
IF
BUSY
HANG
UP
PHONE
WAIT
MINUTES
JUMP
TO
STEP
IF
NO
ONE
ANSWERS
LEAVE
A
MESSAGE
THEN
HANG
UP
IF
NO
ANSWERING
MACHINE
HANG
UP
AND
WAIT
HOURS
THEN
JUMP
TO
STEP
TALK
TO
FRIEND
HANG
UP
PHONE
ASSUMPTIONS
STEP
ASSUMES
THAT
YOU
LIVE
ALONE
AND
NO
ONE
ELSE
COULD
BE
ON
THE
PHONE
THE
ALGORITHM
ASSUMES
THE
EXISTENCE
OF
A
WORKING
PHONE
AND
ACTIVE
SERVICE
THE
ALGORITHM
ASSUMES
YOU
ARE
NOT
DEAF
OR
MUTE
THE
ALGORITHM
ASSUMES
A
NORMAL
CORDED
PHONE
REAL
LIFE
ALGORITHMS
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
ADVICE
PLEASE
DONT
GO
OVERBOARD
WITH
THIS
ASSIGNMENT
KEEP
THE
ALGORITHM
UNDER
STEPS
HOWEVER
DO
TRY
TO
MAKE
THIS
INTERESTING
AVOID
RECIPES
FOR
FOOD
OR
THE
LIKE
SINCE
THE
BOOK
DEALS
WITH
THESE
EXTENSIVELY
ALSO
NOTE
THAT
YOU
ARE
ALLOWED
TO
BE
SOMEWHAT
VAGUE
WITHOUT
BEING
IMPRECISE
NOTE
I
SAY
HERE
TO
LEAVE
A
MESSAGE
BUT
NOT
WHAT
THAT
MESSAGE
IS
THAT
WOULD
BE
DEPENDENT
ON
THE
INDIVIDUAL
CALL
AND
NOT
AFFECT
THE
ACTUAL
PROCESS
OF
MAKING
A
CALL
REASONABLE
ASSUMPTIONS
ARE
ALONG
THE
LINES
OF
ASSUMING
THE
PRESENCE
OF
NECESSARY
MATERIALS
UNREASONABLE
ASSUMPTIONS
INTRODUCE
AMBIGUITY
LIKE
ASSUMING
THE
UNIVERSAL
KNOWLEDGE
OF
HOW
MUCH
A
PINCH
OF
SALT
IS
GRADING
YOU
WILL
BE
GRADED
ON
YOUR
ORIGINALITY
AND
THE
PRECISION
OF
THE
ALGORITHM
THE
TASK
SHOULD
BE
CLEAR
TO
ME
AND
REPRODUCIBLE
FROM
THE
STEPS
YOU
LIST
TO
GET
A
SECOND
OPINION
ON
THIS
YOU
WILL
SPEND
A
FEW
MINUTES
IN
THE
CLASS
ON
THE
DUEDATE
TRADING
THEM
WITH
YOUR
CLASSMATES
THIS
ALLOWS
YOU
TO
ACT
BOTH
AS
THE
DESIGNER
OF
THE
ALGORITHM
AND
AS
THE
COMPUTER
IT
RUNS
ON
NOTE
I
WILL
NOTE
ACCEPT
YOUR
ASSIGNMENT
IF
IT
IS
NOT
TYPED
INTRODUCTION
THE
GAME
OF
CRAPS
IS
A
GAME
PLAYED
WITH
DICE
THEY
ARE
ROLLED
TOGETHER
AND
THEIR
POINTS
ARE
TOTALED
IF
YOU
ROLL
A
OR
YOU
IMMEDIATELY
LOSE
IF
YOU
ROLL
A
OR
YOU
IMMEDIATELY
WIN
ANY
OTHER
VALUE
IS
CALLED
THE
POINT
YOU
THEN
MUST
ROLL
THE
DICE
OVER
UNTIL
YOU
ROLL
THE
POINT
AGAIN
OR
YOU
ROLL
A
IF
YOU
ROLL
THE
POINT
AGAIN
YOU
WIN
IF
YOU
ROLL
YOU
LOSE
INTERFACE
A
SAMPLE
PROGRAM
CAN
BE
DOWNLOADED
FROM
THE
WEBSITE
SEE
THE
SCREENSHOTS
BELOW
FOR
EXAMPLE
BEHAVIOR
WHAT
YOU
NEED
TO
DO
CS
PROJECT
CRAPS
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
MAKE
A
CRAPS
PROGRAM
AS
SHOWN
ABOVE
ONE
IMPORTANT
THING
THAT
THE
PROGRAM
SHOULD
DO
IS
TO
ONLY
DISPLAY
THE
POINT
GROUPBOX
WHEN
IT
IS
APPROPRIATE
I
E
WHEN
YOU
ARE
TRYING
TO
ROLL
POINT
MAKE
SURE
IT
HANDLES
THE
SEPARATE
PHASES
OF
THE
GAME
CORRECTLY
THE
FIRST
ROLL
ROLLING
POINT
IF
NECESSARY
AFTER
THE
FIRST
ROLL
HINTS
AND
SUGGESTIONS
YOU
CAN
EITHER
REMEMBER
THE
POINT
IN
A
SEPARATE
VARIABLE
OR
YOU
CAN
EXTRACT
IT
FROM
THE
LABEL
YOU
STORE
IT
IN
FOR
LATER
COMPARISON
IF
YOU
SET
THE
VISIBLE
PROPERTY
OF
A
GROUPBOX
ANY
CONTROLS
INSIDE
IT
WILL
APPEAR
DISAPPEAR
AS
WELL
DON
T
FORGET
TO
SEED
THE
RANDOM
NUMBER
GENERATOR
YOU
NEED
TO
DETERMINE
WHETHER
THIS
ROLL
IS
IN
THE
FIRST
ROLL
PHASE
OR
THE
POINT
ROLL
PHASE
THERE
ARE
SEVERAL
DIFFERENT
WAYS
TO
DO
THIS
AND
YOU
CAN
USE
ANY
SUBMISSION
PLACE
YOUR
FILES
INTO
A
ZIP
FOLDER
AS
WE
DID
FOR
THE
LAST
ASSIGNMENT
THE
URL
FOR
SUBMISSION
IS
HTTP
WWW
CS
PITT
EDU
JMISURDA
SUBMIT
IT
WILL
GO
LIVE
AT
CLASS
TIME
TUESDAY
NO
SUBMISSIONS
ACCEPTED
PRIOR
TO
THAT
IF
YOU
WANT
HELP
MAKE
SURE
YOU
SEE
ME
BEFORE
THE
DEADLINE
THE
USERNAME
AND
PASSWORD
WILL
AGAIN
BE
AND
VBROCKS
INTRODUCTION
YOUR
FIRST
PROJECT
WILL
BE
MAKING
THE
GAME
OF
ROCK
PAPER
SCISSORS
FOR
THOSE
UNFAMILIAR
WITH
THE
RULES
TYPICALLY
THE
GAME
IS
PLAYED
WITH
TWO
PEOPLE
WHO
USE
HAND
GESTURES
TO
REPRESENT
A
ROCK
CLOSED
FIST
PAPER
AN
OPEN
HAND
OR
SCISSOR
A
V
MADE
WITH
YOUR
FINGERS
EACH
PERSON
DISPLAYS
THEIR
CHOICE
AT
THE
SAME
TIME
AND
THE
WINNER
IS
DETERMINED
BY
WINNER
IN
BOLD
SCISSORS
CUT
PAPER
PAPER
COVERS
ROCK
ROCK
BREAKS
SCISSORS
YOUR
JOB
WILL
BE
TO
WRITE
A
PROGRAM
WHERE
A
HUMAN
CAN
PLAY
AGAINST
THE
HAVE
THE
HUMAN
PLAYER
ENTER
THEIR
CHOICE
AND
THEN
HAVE
THE
COMPUTER
RANDOMLY
PICK
ITS
CHOICE
FOR
EACH
GAME
YOU
WILL
DISPLAY
WHAT
THE
COMPUTER
HAS
CHOSEN
AND
WHO
THE
WINNER
IS
INTERFACE
A
SCREENSHOT
OF
THE
INTERFACE
IS
SHOWN
BELOW
FOR
THIS
FIRST
PROJECT
I
WANT
YOU
TO
AS
CLOSELY
REPLICATE
THIS
AS
POSSIBLE
IT
DOESNT
NEED
TO
BE
PERFECT
NO
NEED
TO
COUNT
DOTS
OR
ANYTHING
THE
FONT
IS
POINT
IN
THE
EXAMPLE
AND
THE
TEXT
ALIGNMENT
THE
PLAYER
SHOULD
PICK
THEIR
GUESS
BY
SELECTING
A
BUTTON
FROM
THE
ROW
AT
THE
BOTTOM
WHEN
A
BUTTON
IS
CHOSEN
THE
COMPUTER
SHOULD
MAKE
ITS
GUESS
THAT
GUESS
SHOULD
BE
DISPLAYED
IN
THE
TOP
LABEL
AND
THE
WINNER
OF
THE
MATCH
SHOULD
BE
SHOWN
IN
THE
CENTER
EXAMPLE
RUN
CS
PROJECT
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
WHAT
YOU
NEED
TO
DO
AND
WHEN
THERE
ARE
TWO
DEADLINES
FOR
THIS
PROJECT
THE
FIRST
IS
IN
WEEK
WHERE
I
WANT
YOU
TO
BRING
YOUR
INTERFACE
TO
CLASS
TO
SHOW
ME
LOAD
IT
ONTO
A
FLASH
DRIVE
OR
DISK
AND
BRING
IT
TO
CLASS
READY
TO
DEMONSTRATE
THE
FINAL
DEADLINE
WILL
BE
A
WEEK
AFTER
THAT
FOR
THE
ENTIRE
PROGRAM
SUBMISSION
DETAILS
WILL
BE
FORTHCOMING
YOU
WILL
BE
TURNING
IN
YOUR
CODE
AND
A
WORKING
PROGRAM
FOR
ME
TO
TEST
HINTS
AND
SUGGESTIONS
I
HAVE
PLACED
THE
PROGRAM
THAT
I
WROTE
UP
ON
THE
WEB
FOR
YOU
TO
TRY
JUST
SO
YOU
UNDERSTAND
THE
INTERACTION
REQUIREMENTS
REMEMBER
THAT
THE
COMPUTER
DOES
NOT
KNOW
WHAT
A
ROCK
PAPER
OR
SCISSORS
ARE
SO
YOU
SHOULD
REPRESENT
THESE
THINGS
IN
A
WAY
THAT
A
COMPUTER
WOULD
LOVE
FOLLOW
THE
EXAMPLE
WE
WILL
DO
IN
CLASS
FOR
HOW
TO
GENERATE
RANDOM
NUMBERS
AND
MAKE
DECISIONS
START
EARLY
THIS
PROJECT
HAS
SOME
HANDHOLDING
LATER
ONES
YOU
WILL
HAVE
MORE
FREEDOM
ON
SO
DEVELOP
GOOD
HABITS
WITH
THIS
ONE
DESCRIPTION
COMPUTERS
HAVE
BECOME
INCREASINGLY
PERVASIVE
IN
TODAYS
SOCIETY
THEIR
POWER
TO
DO
COMPLICATED
AND
REPETITIVE
TASKS
QUICKLY
AND
EFFICIENTLY
HAS
MADE
THEM
INVALUABLE
TOOLS
IN
MODERN
SOCIETY
IN
THIS
CLASS
YOU
WILL
LEARN
TO
HARNESS
THE
POWER
OF
A
COMPUTER
TO
DO
NEW
TASKS
BY
CREATING
YOUR
OWN
SOFTWARE
AS
OPPOSED
TO
USING
EXISTING
PROGRAMS
WE
WILL
EXPLORE
THE
LIMITS
OF
WHAT
A
COMPUTER
CAN
AND
CANNOT
DO
EASILY
AND
PROVIDE
YOU
WITH
THE
KNOWLEDGE
AND
EXPERIENCE
TO
RECOGNIZE
THOSE
PROBLEMS
THAT
YOU
MAY
FIND
IN
LIFE
THAT
CAN
BE
SOLVED
WITH
THE
HELP
OF
A
COMPUTER
AND
THE
ABILITY
TO
MAKE
THE
COMPUTER
DO
THOSE
TASKS
THIS
CLASS
IS
MEANT
AS
A
FIRST
CLASS
IN
COMPUTER
SCIENCE
ANYONE
IS
WELCOME
TO
TAKE
IT
AS
COMPUTERS
CAN
BE
USEFUL
IN
A
VARIETY
OF
FIELDS
IT
IS
ALSO
MEANT
AS
AN
INTRODUCTION
TO
COMPUTER
SCIENCE
FOR
THOSE
STUDENTS
WHO
WISH
TO
PURSUE
THE
FIELD
FURTHER
BUT
LACK
PRIOR
EXPOSURE
TO
THE
MATERIAL
PREREQUISITES
THERE
ARE
NO
PREREQUISITES
CONCEPTS
FROM
BASIC
ALGEBRA
WILL
BE
DRAWN
UPON
PASSING
FAMILIARITY
WITH
THE
OPERATION
OF
A
COMPUTER
IS
ALSO
HELPFUL
IF
YOU
ARE
ALREADY
PROFICIENT
I
E
HAD
OR
COURSES
PRIOR
IN
COMPUTER
PROGRAMMING
THIS
IS
NOT
THE
COURSE
FOR
YOU
DISABILITY
RESOURCES
AND
SERVICES
IF
YOU
HAVE
A
DISABILITY
FOR
WHICH
YOU
ARE
REQUESTING
AN
ACCOMMODATION
YOU
ARE
ENCOURAGED
TO
CONTACT
BOTH
YOUR
INSTRUCTOR
AND
DISABILITY
RESOURCES
AND
SERVICES
WILLIAM
PITT
UNION
AS
EARLY
AS
POSSIBLE
IN
THE
TERM
DRS
WILL
VERIFY
YOUR
DISABILITY
AND
DETERMINE
REASONABLE
ACCOMMODATIONS
FOR
THIS
COURSE
COURSE
PURPOSES
AND
GOALS
CS
INTRODUCTION
TO
COMPUTER
PROGRAMMING
IN
VISUAL
BASIC
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
INTRODUCTION
TO
COMPUTER
PROGRAMMING
IS
MEANT
AS
A
COURSE
TO
EXPOSE
INTERESTED
STUDENTS
HOW
COMPUTER
SOFTWARE
IS
WRITTEN
AND
TESTED
IT
SEEKS
TO
ILLUMINATE
THE
CREATIVE
PROCESS
THAT
IS
COMPUTER
PROGRAMMING
FROM
THE
GROUND
UP
WITH
AN
EMPHASIS
ON
GOOD
PREPLANNING
AND
STYLE
IN
THIS
COURSE
WE
WILL
BE
WRITING
EVENT
DRIVEN
PROGRAMS
FOR
THE
WINDOWS
OPERATING
SYSTEM
IN
THE
VISUAL
BASIC
VB
PROGRAMMING
LANGUAGE
GOALS
FOR
THE
COURSE
INCLUDE
BEING
ABLE
TO
WRITE
COMPUTER
PROGRAMS
IN
VB
THAT
CAN
PERFORM
A
VARIETY
OF
TASKS
RECOGNIZING
AND
CREATING
WELLWRITTEN
PROGRAMS
IN
GOOD
PROGRAMMING
STYLE
PARTICIPATING
IN
THE
VARIOUS
STAGES
OF
THE
LIFECYCLE
OF
A
COMPUTER
PROGRAM
INCLUDING
PLANNING
IMPLEMENTATION
AND
DEBUGGING
TEXTBOOK
THE
TEXT
CAN
BE
FOUND
IN
THE
BOOKSTORE
SCHNEIDER
DAVID
I
AN
INTRODUCTION
TO
PROGRAMMING
USING
VISUAL
BASIC
NET
FIFTH
EDITION
PRENTICE
HALL
NEW
JERSEY
ISBN
ADDITIONAL
MATERIALS
IN
ADDITION
TO
THE
TEXTBOOK
YOU
WILL
ALSO
NEED
SOME
TYPE
OF
REMOVABLE
STORAGE
MEDIA
TO
STORE
YOUR
PROGRAMS
ON
WHILE
YOU
WORK
ON
THEM
I
SUGGEST
A
SMALL
INEXPENSIVE
USB
THUMB
DRIVE
ANYTHING
OVER
MB
SHOULD
BE
SUFFICIENT
FOR
THE
WORK
IN
THIS
COURSE
FLOPPY
DISKS
OR
REWRITEABLE
CDS
ARE
ALSO
USEABLE
BUT
ARE
A
MORE
BRITTLE
FORM
OF
STORAGE
MEANING
YOU
MAY
LOSE
YOUR
WORK
DURING
THE
TERM
SINCE
THIS
IS
A
COMPUTER
CLASS
WITH
OUT
OF
CLASS
ASSIGNMENTS
YOU
WILL
ALSO
NEED
ACCESS
TO
A
COMPUTER
THAT
HAS
VISUAL
BASIC
NET
VISUAL
BASIC
NET
OR
VISUAL
BASIC
INSTALLED
ON
IT
ALL
CAMPUS
LAB
COMPUTERS
ARE
ALREADY
INSTALLED
WITH
VISUAL
BASIC
NET
IF
YOU
WANT
TO
WORK
AT
HOME
WE
CAN
DISCUSS
WAYS
OF
DOING
THIS
VISUAL
STUDIO
NET
IS
AVAILABLE
ON
CDS
FOR
FREE
FROM
THE
CAMPUS
LABS
VISUAL
STUDIO
NET
CAN
BE
DOWNLOADED
FROM
HTTP
SOFTWARE
PITT
EDU
HOWEVER
IT
IS
HUGE
AND
VISUAL
BASIC
EXPRESS
CAN
BE
DOWNLOADED
FOR
FREE
FROM
MICROSOFT
CLASS
POLICIES
EXAMS
THERE
WILL
BE
A
MIDTERM
AND
A
FINAL
IN
THIS
CLASS
THE
FINAL
EXAM
IS
SCHEDULED
FOR
MONDAY
APRIL
FROM
P
M
P
M
CHEATING
ON
EXAMS
WILL
NOT
BE
TOLERATED
ANYONE
CAUGHT
CHEATING
WILL
BE
GIVEN
A
ZERO
FOR
THE
TEST
AND
REPORTED
TO
THE
DEPARTMENT
FOLLOWING
UNIVERSITY
PROCEDURES
QUIZZES
THERE
WILL
BE
UNANNOUNCED
QUIZZES
GIVEN
THROUGHOUT
THE
TERM
PROJECTS
THERE
WILL
BE
FOUR
OUTOFCLASS
ASSIGNMENTS
GIVEN
THESE
ARE
TO
BE
COMPLETED
IN
THE
GIVEN
TIME
NO
EXTENSIONS
WILL
BE
GIVEN
WITHOUT
A
VALID
EXCUSE
THESE
ARE
MEANT
TO
BE
YOUR
OWN
WORK
ANYONE
FOUND
TO
BE
COLLABORATING
WILL
BE
GIVEN
A
ZERO
FOR
THE
ASSIGNMENT
COLLABORATING
ALSO
MEANS
USING
CODE
FROM
PREVIOUS
TERMS
OTHER
UNIVERSITIES
YOUR
FRIENDS
OR
FINDING
IT
ON
THE
INTERNET
PARTICIPATION
ATTENDANCE
WILL
NOT
BE
TAKEN
BUT
IN
A
SMALL
CLASS
ANY
ABSENCE
WILL
BE
NOTICED
SEVERAL
UNEXCUSED
MISSED
CLASSES
WILL
ADVERSELY
AFFECT
YOUR
GRADE
ASKING
AND
ANSWERING
QUESTIONS
WILL
ALSO
BE
CONSIDERED
AS
PART
OF
THE
PARTICIPATION
GRADE
CS
INTRODUCTION
TO
COMPUTER
PROGRAMMING
IN
VISUAL
BASIC
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
GRADING
YOUR
GRADE
WILL
BE
BASED
UPON
EXAMS
PROJECTS
QUIZZES
THE
LOWEST
ONE
WILL
BE
DROPPED
AND
PARTICIPATION
EXAMS
EACH
PROJECTS
EACH
QUIZZES
PARTICIPATION
TOTAL
THE
SCALE
FOR
THE
TERM
WILL
BE
PERCENTAGE
LETTER
OR
ABOVE
A
A
B
B
C
C
D
D
DLESS
THAN
F
TERM
SCHEDULE
THE
DAILY
TOPICS
ARE
SUBJECT
TO
CHANGE
DEPENDING
ON
OUR
PACE
THEY
ARE
THERE
TO
ASSIST
YOU
IN
THE
READINGS
SO
YOU
CAN
FOCUS
ON
THOSE
CONCEPTS
PRIOR
TO
CLASS
WEEK
READINGS
FOR
THIS
WEEK
PURCHASE
THE
BOOK
TOPICS
INTRODUCTION
TO
THE
COURSE
DEMONSTRATION
OF
VISUAL
BASIC
WEEK
READINGS
FOR
THIS
WEEK
CHAPTER
TOPICS
EVENT
DRIVEN
PROGRAMMING
WINDOWS
BASICS
EXAMINATION
OF
DIALOGBASED
AND
VIEWBASED
APPLICATIONS
COMMON
WINDOWS
CONTROLS
INTERFACE
DESIGN
IN
VB
WEEK
READINGS
FOR
THIS
WEEK
CHAPTER
TOPICS
CS
INTRODUCTION
TO
COMPUTER
PROGRAMMING
IN
VISUAL
BASIC
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
PROBLEM
SOLVING
ALGORITHMS
FLOWCHARTS
WEEK
READINGS
FOR
THIS
WEEK
CHAPTER
APPENDIX
D
TOPICS
CONTROLS
AND
EVENTS
UNDER
VB
STEPPING
THROUGH
A
PROGRAM
NUMBERS
AND
ARITHMETIC
STRINGS
WEEK
READINGS
FOR
THIS
WEEK
CHAPTER
TOPICS
READING
THE
ONLINE
DOCUMENTATION
SUBROUTINES
FUNCTIONS
MODULES
WEEK
READINGS
FOR
THIS
WEEK
CHAPTER
TOPICS
LINEAR
CONTROL
FLOW
IF
THEN
BLOCKS
SELECT
CASE
BLOCKS
WEEK
READINGS
FOR
THIS
WEEK
CHAPTER
TOPICS
REPETITION
LOOPING
DOWHILE
FORNEXT
WEEK
READINGS
FOR
THIS
WEEK
CHAPTERS
MIDTERM
EXAM
FEBRUARY
DURING
CLASS
TOPICS
REVIEW
FOR
EXAM
WEEK
READINGS
FOR
THIS
WEEK
CHAPTER
TOPICS
ARRAYS
SORTING
AND
SEARCHING
MULTIDIMENSIONAL
ARRAYS
CS
INTRODUCTION
TO
COMPUTER
PROGRAMMING
IN
VISUAL
BASIC
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
SPRING
BREAK
NO
CLASSES
THIS
WEEK
WEEK
READINGS
FOR
THIS
WEEK
CHAPTER
TOPICS
FILES
TEXT
AND
BINARY
FILES
SEQUENTIAL
VS
RANDOM
ACCESS
WEEK
READINGS
FOR
THIS
WEEK
CHAPTER
TOPICS
ADDITIONAL
WINDOWS
CONTROLS
LIST
BOXES
COMMON
CONTROLS
WEEK
READINGS
FOR
THIS
WEEK
MSDN
ONLINE
HELP
TOPICS
INTERFACING
WITH
THE
API
SHELLNOTIFYICONDATA
WEEK
READINGS
FOR
THIS
WEEK
TBA
TOPICS
GOOD
PROGRAMMING
PRACTICES
EXAMPLES
OF
DOS
AND
DONTS
WEEK
READINGS
FOR
THIS
WEEK
TBA
TOPICS
VISUAL
BASIC
FOR
APPLICATIONS
OFFICE
MACROS
WEEK
READINGS
FOR
THIS
WEEK
NONE
TOPICS
REVIEW
FOR
THE
FINAL
EXAM
FINALS
WEEK
FINAL
EXAM
MONDAY
APRIL
FROM
00
P
M
P
M
IN
SENNOTT
SQUARE
NORMAL
CLASSROOM
CS
INTRODUCTION
TO
COMPUTER
PROGRAMMING
IN
VISUAL
BASIC
PROJECT
THE
GAME
OF
CRAPS
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
PROJECT
THE
GAME
OF
CRAPS
DUE
JUNE
INTRODUCTION
CRAPS
IS
PLAYED
WITH
TWO
DICE
WHICH
ARE
ROLLED
TOGETHER
THE
SUM
OF
THESE
TWO
DICE
IS
COMPUTED
AND
IF
THE
SUM
IS
OR
THE
PLAYER
LOSES
OR
THE
PLAYER
WINS
ANY
OTHER
NUMBER
IS
REFERRED
TO
AS
THE
POINT
THE
GOAL
THEN
BECOMES
TO
KEEP
ROLLING
THE
DICE
UNTIL
O
THE
PLAYER
ROLLS
A
THE
PLAYER
LOSES
O
THE
PLAYER
ROLLS
THE
POINT
THE
PLAYER
WINS
EXAMPLES
EX
ROLL
PLAYER
ROLLS
A
PLAYER
LOSES
EX
ROLL
PLAYER
ROLLS
A
PLAYER
WINS
EX
ROLL
PLAYER
ROLLS
A
THE
POINT
BECOMES
ROLL
PLAYER
ROLLS
A
ROLL
PLAYER
ROLLS
A
PLAYER
LOSES
EX
ROLL
PLAYER
ROLLS
A
THE
POINT
BECOMES
ROLL
PLAYER
ROLLS
A
ROLL
PLAYER
ROLLS
A
PLAYER
WINS
ASSIGNMENT
YOUR
JOB
ON
THIS
ASSIGNMENT
IS
TO
MAKE
A
SIMPLE
CRAPS
GAME
IN
THIS
GAME
THE
PLAYER
WILL
ENTER
HIS
OR
HER
NAME
THE
PROGRAM
WILL
DISPLAY
A
WELCOME
MESSAGE
AND
ASK
IF
THE
PLAYER
WOULD
LIKE
TO
PLAY
OR
QUIT
THE
PROGRAM
WILL
THEN
ROLL
TWO
DICE
AND
DISPLAY
THEM
AND
THEIR
TOTAL
IF
THE
PLAYER
HAS
WON
DISPLAY
A
MESSAGE
CONGRATULATING
THEM
IF
THE
PLAYER
HAS
LOST
REPORT
IT
TO
THEM
OTHERWISE
STORE
THIS
FIRST
ROLL
AS
THE
POINT
ROLL
AND
KEEP
ROLLING
UNTIL
THE
PLAYER
WINS
OR
LOSES
WHEN
THE
GAME
ENDS
ASK
IF
THE
PLAYER
WOULD
LIKE
TO
PLAY
AGAIN
EX
PROJECT
THE
GAME
OF
CRAPS
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
NOTE
THAT
YOU
NEED
NOT
MATCH
THIS
EXACTLY
IT
IS
ONLY
SHOWN
TO
GIVE
YOU
AN
IDEA
OF
HOW
TO
PROCEED
ROLLING
DICE
SINCE
WE
HAVENT
STUDIED
RANDOM
NUMBERS
YET
HERES
THE
CODE
TO
ROLL
A
SINGLE
DIE
IT
RETURNS
A
NUMBER
TO
INCLUSIVE
CLASS
CRAPS
PUBLIC
STATIC
VOID
MAIN
STRING
ARGS
INT
ROLLDIE
YOUR
CODE
HERE
PUBLIC
STATIC
INT
ROLLDIE
RETURN
INT
MATH
RANDOM
WELCOME
TO
JONS
CASINO
PLEASE
ENTER
YOUR
NAME
JONATHAN
WOULD
YOU
LIKE
TO
PLAY
OR
QUIT
PLAY
YOU
HAVE
ROLLED
YOU
WIN
WOULD
YOU
LIKE
TO
PLAY
AGAIN
Y
N
N
GOODBYE
JONATHAN
FOR
THIS
ASSIGNMENT
YOU
WILL
BE
IMPLEMENTING
A
GAME
OF
HIGHER
LOWER
THE
COMPUTER
WILL
PICK
A
RANDOM
NUMBER
BETWEEN
AND
SEE
PROVIDED
CODE
BELOW
THE
HUMAN
PLAYER
WILL
THEN
TRY
TO
GUESS
THAT
NUMBER
FOR
EACH
GUESS
THE
COMPUTER
WILL
RESPOND
SIMPLY
HIGHER
OR
LOWER
IF
THE
NUMBER
IT
HAS
CHOSEN
IS
GREATER
THAN
OR
LESS
THAN
THE
GUESS
RESPECTIVELY
THE
PLAYER
SHOULD
GET
ATTEMPTS
TO
GUESS
THE
NUMBER
CORRECTLY
IF
THE
PLAYER
HASNT
GUESSED
CORRECTLY
THE
COMPUTER
SHOULD
REVEAL
ITS
NUMBER
AND
THE
GAME
IS
OVER
EXAMPLE
RUN
WELCOME
TO
HIGHER
LOWER
ENTER
YOUR
NAME
JON
IVE
CHOSEN
MY
NUMBER
JON
ENTER
GUESS
HIGHER
ENTER
GUESS
LOWER
ENTER
GUESS
YOU
GUESSED
MY
NUMBER
PROVIDED
CODE
CLASS
HIGHERLOWER
PUBLIC
STATIC
VOID
MAIN
STRING
ARGS
INT
COMPNUM
COMPUTERGUESS
PLACE
YOUR
GAME
CODE
HERE
PUBLIC
STATIC
INT
COMPUTERGUESS
RETURN
INT
MATH
RANDOM
INTRODUCTION
YOU
MAY
REMEMBER
FROM
HIGH
SCHOOL
SCIENCE
THAT
WHILE
MASS
STAYS
CONSTANT
YOUR
WEIGHT
IS
ACTUALLY
DEPENDENT
ON
YOUR
MASS
MULTIPLIED
HOW
STRONG
THE
GRAVITATIONAL
PULL
OF
THE
PLANET
IS
SO
IF
YOU
WERE
TO
TRAVEL
TO
DIFFERENT
PLANETS
YOUR
WEIGHT
WOULD
CHANGE
IN
YOUR
FIRST
PROGRAMMING
PROJECT
YOU
ARE
ASKED
TO
COMPUTE
JUST
HOW
MUCH
SOMEONE
WOULD
WEIGH
ON
THE
OTHER
PLANETS
IN
OUR
SOLAR
SYSTEM
BACKGROUND
KNOWLEDGE
HERE
IS
THE
TABLE
OF
RELATIVE
GRAVITATIONAL
STRENGTH
AS
COMPARED
TO
EARTH
PLANET
RELATIVE
STRENGTH
MERCURY
VENUS
MARS
JUPITER
SATURN
URANUS
NEPTUNE
PLUTO
WHAT
YOU
NEED
TO
DO
YOUR
TASK
IS
TO
WRITE
A
PROGRAM
WHICH
ASKS
THE
USER
TO
INPUT
A
WEIGHT
DISPLAYS
THAT
WEIGHT
SCALED
APPROPRIATELY
ON
EACH
OF
THE
OTHER
PLANETS
EXAMPLE
WELCOME
TO
THE
PLANETARY
WEIGHT
CONVERTER
PLEASE
ENTER
THE
WEIGHT
YOUD
LIKE
TO
CONVERT
HERE
IS
YOUR
WEIGHT
ON
OTHER
PLANETS
MERCURY
LBS
VENUS
LBS
THE
MOON
LBS
MARS
LBS
JUPITER
LBS
SATURN
LBS
URANUS
LBS
NEPTUNE
LBS
PLUTO
LBS
SUBMISSION
SUBMISSION
GUIDELINES
WILL
BE
HANDED
OUT
NEXT
WEEK
SEPARATELY
REQUIREMENTS
ADVICE
HINTS
PROJECT
PLANETARY
WEIGHTS
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
YOUR
PROGRAM
MUST
COMPILE
AND
RUN
ON
THE
UNIXS
CIS
PITT
EDU
MACHINES
STYLE
WHICH
WE
WILL
BE
DISCUSSING
SHORTLY
WILL
ALSO
BE
GRADED
ON
IN
ADDITION
TO
CORRECTNESS
DONT
FORGET
TO
HAVE
APPROPRIATE
COMMENTS
IN
YOUR
CODE
START
EARLY
IN
CASE
YOU
HAVE
ANY
QUESTIONS
DONT
FORGET
THAT
THE
TA
CAN
HELP
YOU
TOO
DO
NOT
COLLABORATE
WITH
ANYONE
OTHER
THAN
ME
OR
THE
TA
DO
NOT
SEARCH
FOR
A
SOLUTION
ON
THE
WEB
OVERVIEW
ALGORITHMS
ARE
PRECISE
STEPBYSTEP
INSTRUCTIONS
ON
HOW
TO
ACCOMPLISH
A
DESIRED
TASK
A
FORMAL
ALGORITHM
FOR
USE
WITH
COMPUTERS
OR
IN
MATHEMATICS
MUST
BE
VERY
DETAILED
AND
RESOLVE
THE
AMBIGUITIES
THAT
WE
TAKE
FOR
GRANTED
IN
EVERYDAY
LIFE
YOUR
FIRST
OUT
OF
CLASS
ASSIGNMENT
IS
TO
PICK
A
COMMON
OR
INTERESTING
TASK
AND
APPROACH
IT
ALGORITHMICALLY
BREAKING
IT
DOWN
TO
THE
LEVEL
THAT
A
COMPUTER
MIGHT
UNDERSTAND
ASSIGNMENT
FOR
THIS
PROJECT
YOU
NEED
TO
PICK
AN
EVERYDAY
OR
INTERESTING
TASK
AND
CREATE
AN
ALGORITHM
THAT
EXPLAINS
HOW
TO
DO
IT
YOU
NEED
TO
SPECIFY
WHAT
IF
ANYTHING
IS
INPUT
LIKE
INGREDIENTS
IN
A
RECIPE
THE
PROCESS
BY
WHICH
YOU
OPERATE
ON
THAT
INPUT
TO
PRODUCE
OR
ACCOMPLISH
A
TASK
WHAT
THE
OUTPUT
OF
THE
ALGORITHM
IS
WHAT
IF
ANY
ASSUMPTIONS
ARE
MADE
IN
THE
ALGORITHM
WHAT
TO
TURN
IN
TYPE
YOUR
ALGORITHM
UP
USING
THE
FOLLOWING
EXAMPLE
AS
A
TEMPLATE
NAME
THE
TASK
YOUR
ALGORITHM
DESCRIBES
THE
INPUT
AND
OUTPUT
AND
THEN
LIST
THE
STEPS
INVOLVED
NUMBERING
EACH
FOLLOWED
BY
WHAT
YOUR
ALGORITHM
ASSUMES
EXAMPLE
ALGORITHM
CALLING
A
FRIEND
ON
THE
TELEPHONE
INPUT
THE
TELEPHONE
NUMBER
OF
YOUR
FRIEND
OUTPUT
NONE
STEPS
PICK
UP
THE
PHONE
AND
LISTEN
FOR
A
DIAL
TONE
PRESS
EACH
DIGIT
OF
THE
PHONE
NUMBER
ON
THE
PHONE
IF
BUSY
HANG
UP
PHONE
WAIT
MINUTES
JUMP
TO
STEP
IF
NO
ONE
ANSWERS
LEAVE
A
MESSAGE
THEN
HANG
UP
IF
NO
ANSWERING
MACHINE
HANG
UP
AND
WAIT
HOURS
THEN
JUMP
TO
STEP
TALK
TO
FRIEND
HANG
UP
PHONE
ASSUMPTIONS
STEP
ASSUMES
THAT
YOU
LIVE
ALONE
AND
NO
ONE
ELSE
COULD
BE
ON
THE
PHONE
THE
ALGORITHM
ASSUMES
THE
EXISTENCE
OF
A
WORKING
PHONE
AND
ACTIVE
SERVICE
THE
ALGORITHM
ASSUMES
YOU
ARE
NOT
DEAF
OR
MUTE
THE
ALGORITHM
ASSUMES
A
NORMAL
CORDED
PHONE
PROJECT
REAL
LIFE
ALGORITHMS
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
ADVICE
PLEASE
DON
T
GO
OVERBOARD
WITH
THIS
ASSIGNMENT
KEEP
THE
ALGORITHM
UNDER
STEPS
HOWEVER
DO
TRY
TO
MAKE
THIS
INTERESTING
AVOID
RECIPES
FOR
FOOD
OR
THE
LIKE
SINCE
THE
BOOK
DEALS
WITH
THESE
EXTENSIVELY
ALSO
NOTE
THAT
YOU
ARE
ALLOWED
TO
BE
SOMEWHAT
VAGUE
WITHOUT
BEING
IMPRECISE
NOTE
I
SAY
HERE
TO
LEAVE
A
MESSAGE
BUT
NOT
WHAT
THAT
MESSAGE
IS
THAT
WOULD
BE
DEPENDENT
ON
THE
INDIVIDUAL
CALL
AND
NOT
AFFECT
THE
ACTUAL
PROCESS
OF
MAKING
A
CALL
REASONABLE
ASSUMPTIONS
ARE
ALONG
THE
LINES
OF
ASSUMING
THE
PRESENCE
OF
NECESSARY
MATERIALS
UNREASONABLE
ASSUMPTIONS
INTRODUCE
AMBIGUITY
LIKE
ASSUMING
THE
UNIVERSAL
KNOWLEDGE
OF
HOW
MUCH
A
PINCH
OF
SALT
IS
GRADING
YOU
WILL
BE
GRADED
ON
YOUR
ORIGINALITY
AND
THE
PRECISION
OF
THE
ALGORITHM
THE
TASK
SHOULD
BE
CLEAR
TO
ME
AND
REPRODUCIBLE
FROM
THE
STEPS
YOU
LIST
TO
GET
A
SECOND
OPINION
ON
THIS
YOU
WILL
SPEND
A
FEW
MINUTES
IN
THE
CLASS
ON
THE
DUEDATE
TRADING
THEM
WITH
YOUR
CLASSMATES
THIS
ALLOWS
YOU
TO
ACT
BOTH
AS
THE
DESIGNER
OF
THE
ALGORITHM
AND
AS
THE
COMPUTER
IT
RUNS
ON
NOTE
I
WILL
NOTE
ACCEPT
YOUR
ASSIGNMENT
IF
IT
IS
NOT
TYPED
PRACTICE
TEST
WHAT
IS
WRONG
WITH
THE
FOLLOWING
CODE
CLASS
WRONG
PUBLIC
STATIC
VOID
MAIN
STRING
ARGS
INT
X
PRINTX
PUBLIC
STATIC
VOID
PRINTX
SYSTEM
OUT
PRINTLN
X
IS
X
FIX
THE
ABOVE
USING
PARAMETERS
WHY
CAN
T
YOU
WRITE
A
SWAP
METHOD
IN
JAVA
WRITE
A
FOR
LOOP
THAT
ITERATES
TIMES
HOW
WOULD
YOU
IN
JAVA
GET
A
RANDOM
NUMBER
BETWEEN
AND
PRACTICE
FINAL
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
WRITE
A
METHOD
CALLED
COINTOSS
THAT
RETURNS
FOR
HEADS
AND
FOR
TAILS
FOR
EACH
OF
THE
FOLLOWING
PROVIDE
THE
RECURSIVE
DEFINITION
AND
THE
BASE
CASE
A
SUM
B
FACTORIAL
C
POWER
PICK
ONE
OF
THE
ABOVE
AND
WRITE
A
RECURSIVE
METHOD
IN
JAVA
TO
CALCULATE
IT
PRACTICE
FINAL
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
WHAT
IS
AN
OBJECT
IN
OBJECT
ORIENTED
PROGRAMMING
WHAT
DOES
IT
MEAN
FOR
A
PROGRAM
TO
BE
EVENTDRIVEN
GIVEN
THE
FOLLOWING
METHOD
THAT
YOU
DO
NOT
NEED
TO
IMPLEMENT
BUT
CAN
USE
INT
MIN
INT
A
INT
START
THAT
RETURNS
THE
POSITION
OF
SMALLEST
ELEMENT
IN
A
STARTING
AT
POSITION
A
START
WRITE
THE
CODE
FOR
SELECTION
SORT
VOID
SELECTIONSORT
INT
DATA
PRACTICE
FINAL
LAB
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
NAME
LAB
INTRODUCTION
TO
UNIX
AND
JAVA
THIS
FIRST
LAB
IS
MEANT
TO
BE
AN
INTRODUCTION
TO
COMPUTER
ENVIRONMENTS
WE
WILL
BE
USING
THIS
TERM
YOU
MUST
HAVE
A
PITT
ID
TO
COMPLETE
THIS
LAB
NOTE
TEXT
IN
UNIX
IS
CASESENSITIVE
IS
DIFFERENT
FROM
IS
DIFFERENT
FROM
ALL
FILENAMES
OF
CONCERN
IN
THIS
LAB
ARE
LOWERCASE
PLEASE
FOLLOW
THE
INSTRUCTIONS
AS
LISTED
IN
THIS
DOCUMENT
HERE
ARE
A
FEW
COMMON
UNIX
COMMANDS
CD
CHANGE
DIRECTORY
LS
LIST
ALL
FILES
IN
CURRENT
DIRECTORY
PWD
DISPLAY
THE
CURRENT
DIRECTORY
MV
MOVE
OR
RENAME
A
FILE
CP
COPY
A
FILE
JAVAC
COMPILE
A
JAVA
FILE
JAVA
RUN
A
JAVA
PROGRAM
PICO
EDIT
A
TEXT
FILE
PART
I
TO
LOGIN
TO
THE
COMPUTERS
YOU
WILL
NEED
TO
USE
AN
SSH
CLIENT
THE
SSH
CLIENT
THAT
WE
WILL
BE
USING
IS
FSECURE
SSH
CLIENT
LOCATED
UNDER
PROGRAMS
IN
THE
START
MENU
WHEN
YOU
LOGIN
FIRST
YOU
ARE
PLACED
IN
YOUR
HOME
DIRECTORY
THE
COMMAND
LS
WILL
LIST
ALL
OF
THE
FILES
AND
DIRECTORIES
THERE
THE
ONE
WE
ARE
MOST
CONCERNED
WITH
IS
THE
PRIVATE
DIRECTORY
IT
IS
SPECIAL
IN
THAT
ONLY
YOU
CAN
ACCESS
FILES
INSIDE
THIS
DIRECTORY
IT
WILL
KEEP
YOUR
WORK
SAFE
FROM
OTHER
PEOPLE
LETS
MOVE
INTO
THE
PRIVATE
DIRECTORY
SO
WE
CAN
WORK
THERE
CD
PRIVATE
CHANGES
DIRECTORY
TO
THE
PRIVATE
DIRECTORY
FOR
THIS
CLASS
WELL
KEEP
ALL
OF
OUR
FILES
ORGANIZED
INTO
A
DIRECTORY
MAKE
IT
BY
TYPING
MKDIR
IF
YOU
WANT
TO
DOUBLE
CHECK
THAT
IT
WORKED
TYPE
LS
TO
LIST
WE
NOW
WANT
TO
MOVE
INTO
THE
DIRECTORY
TO
DO
OUR
ACTUAL
WORK
LAB
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
CD
NOW
WE
NEED
TO
DO
SOME
THINGS
TO
SET
UP
JAVA
SO
WE
CAN
USE
IT
THE
REST
OF
THE
TERM
THIS
ONLY
NEEDS
TO
BE
DONE
THIS
ONE
TIME
TYPE
CP
PUBLIC
TIO
JAR
AGAIN
TYPING
LS
SHOULD
SHOW
YOU
A
FILE
NAMED
TIO
JAR
CP
COPIES
A
FILE
A
JAR
FILE
IS
A
LOT
LIKE
A
ZIP
FILE
AND
WE
WILL
EXTRACT
IT
HERE
USING
THE
JAR
COMMAND
JAR
XVF
TIO
JAR
THAT
SHOULD
SHOW
A
BUNCH
OF
FILES
EXTRACTED
AND
WE
ARE
DONE
WITH
PART
I
PART
II
WHILE
STILL
IN
THE
DIRECTORY
TYPE
PICO
JAVA
PICO
IS
A
VERY
SIMPLE
TEXT
EDITOR
A
LOT
LIKE
NOTEPAD
ON
WINDOWS
IT
IS
WHAT
WE
WILL
BE
WRITING
OUR
PROGRAMS
IN
THIS
TERM
TYPE
THE
FOLLOWING
TEXT
IN
EXACTLY
AS
IT
IS
SHOWN
CLASS
PUBLIC
STATIC
VOID
MAIN
STRING
ARGS
SYSTEM
OUT
PRINTLN
HELLO
WORLD
SAVE
THE
FILE
BY
HITTING
CTRL
O
AND
THEN
ENTER
EXIT
PICO
BY
TYPING
CTRL
X
AT
THE
BOTTOM
OF
THE
PICO
WINDOW
IT
SHOWS
WHAT
KEYS
DO
SPECIAL
THINGS
THE
MEANS
TO
HOLD
CTRL
WHILE
PRESSING
THE
KEY
BACK
AT
THE
PROMPT
TYPE
JAVAC
JAVA
WHICH
WILL
MAKE
OUR
PROGRAM
A
FILE
NAMED
CLASS
WILL
BE
IN
THE
DIRECTORY
IF
WE
TYPE
LS
RUN
IT
BY
TYPING
JAVA
SHOW
THE
OUTPUT
TO
THE
TA
AND
YOU
ARE
DONE
WITH
THE
FIRST
LAB
HELPFUL
HINTS
LAB
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
KEEP
THIS
SHEET
AS
A
GUIDE
UNTIL
YOU
GET
COMFORTABLE
IN
UNIX
EVERY
TIME
YOU
WANT
TO
WRITE
A
PROGRAM
YOU
WILL
DO
THE
FOLLOWING
AFTER
LOGGING
INTO
YOUR
ACCOUNT
CD
PRIVATE
CS
HERE
YOU
WILL
WRITE
AND
SAVE
YOUR
FILES
USING
PICO
REMEMBER
CASE
MATTERS
DESCRIPTION
COMPUTERS
HAVE
BECOME
INCREASINGLY
PERVASIVE
IN
TODAYS
SOCIETY
THEIR
POWER
TO
DO
COMPLICATED
AND
REPETITIVE
TASKS
QUICKLY
AND
EFFICIENTLY
HAS
MADE
THEM
INVALUABLE
TOOLS
IN
MODERN
SOCIETY
IN
THIS
CLASS
YOU
WILL
LEARN
TO
HARNESS
THE
POWER
OF
A
COMPUTER
TO
DO
NEW
TASKS
BY
CREATING
YOUR
OWN
SOFTWARE
AS
OPPOSED
TO
USING
EXISTING
PROGRAMS
WE
WILL
EXPLORE
THE
LIMITS
OF
WHAT
A
COMPUTER
CAN
AND
CANNOT
DO
EASILY
AND
PROVIDE
YOU
WITH
THE
KNOWLEDGE
AND
EXPERIENCE
TO
RECOGNIZE
THOSE
PROBLEMS
THAT
YOU
MAY
FIND
IN
LIFE
THAT
CAN
BE
SOLVED
WITH
THE
HELP
OF
A
COMPUTER
AND
THE
ABILITY
TO
MAKE
THE
COMPUTER
DO
THOSE
TASKS
THIS
CLASS
IS
MEANT
AS
A
FIRST
CLASS
IN
COMPUTER
SCIENCE
ANYONE
IS
WELCOME
TO
TAKE
IT
AS
COMPUTERS
CAN
BE
USEFUL
IN
A
VARIETY
OF
FIELDS
IT
IS
ALSO
MEANT
AS
AN
INTRODUCTION
TO
COMPUTER
SCIENCE
FOR
THOSE
STUDENTS
WHO
WISH
TO
PURSUE
THE
FIELD
FURTHER
BUT
LACK
PRIOR
EXPOSURE
TO
THE
MATERIAL
PREREQUISITES
THERE
ARE
NO
PREREQUISITES
CONCEPTS
FROM
BASIC
ALGEBRA
WILL
BE
DRAWN
UPON
PASSING
FAMILIARITY
WITH
THE
OPERATION
OF
A
COMPUTER
IS
ALSO
HELPFUL
IF
YOU
ARE
ALREADY
PROFICIENT
HAD
OR
COURSES
PRIOR
IN
COMPUTER
PROGRAMMING
THIS
IS
NOT
THE
COURSE
FOR
YOU
COURSE
PURPOSES
AND
GOALS
INTRODUCTION
TO
COMPUTER
PROGRAMMING
IS
MEANT
AS
A
COURSE
TO
EXPOSE
INTERESTED
STUDENTS
HOW
COMPUTER
SOFTWARE
IS
WRITTEN
AND
TESTED
IT
SEEKS
TO
ILLUMINATE
THE
CREATIVE
PROCESS
THAT
IS
COMPUTER
PROGRAMMING
FROM
THE
GROUND
UP
WITH
AN
EMPHASIS
ON
GOOD
PREPLANNING
AND
STYLE
IN
THIS
COURSE
WE
WILL
BE
WRITING
PROCEDURAL
PROGRAMS
IN
THE
JAVA
PROGRAMMING
LANGUAGE
NOT
ONLY
WILL
YOU
LEARN
WHAT
THAT
PRECISELY
MEANS
BUT
YOU
WILL
ALSO
AT
THE
END
OF
THE
TERM
BE
ABLE
TO
WRITE
COMPUTER
PROGRAMS
IN
JAVA
THAT
CAN
PERFORM
A
VARIETY
OF
TASKS
CS
INTRODUCTION
TO
COMPUTER
PROGRAMMING
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
RECOGNIZE
AND
CREATE
WELLWRITTEN
PROGRAMS
IN
GOOD
PROGRAMMING
STYLE
PARTICIPATE
IN
THE
VARIOUS
STAGES
OF
THE
LIFECYCLE
OF
A
COMPUTER
PROGRAM
INCLUDING
PLANNING
IMPLEMENTATION
AND
DEBUGGING
TEXTBOOK
THE
TEXT
IS
POHL
IRA
AND
MCDOWELL
CHARLIE
JAVA
BY
DISSECTION
ADDISONWESLEY
IT
CAN
BE
FOUND
IN
THE
BOOKSTORE
CLASS
POLICIES
EXAMS
THERE
WILL
BE
A
MIDTERM
AND
A
FINAL
IN
THIS
CLASS
THE
SCHEDULED
FINAL
EXAM
IS
ON
THE
FINAL
DAY
OF
CLASS
INSERT
DATE
HERE
CHEATING
ON
EXAMS
WILL
NOT
BE
TOLERATED
ANYONE
CAUGHT
CHEATING
WILL
BE
GIVEN
A
ZERO
FOR
THE
TEST
AND
REPORTED
TO
THE
DEPARTMENT
FOLLOWING
UNIVERSITY
PROCEDURES
LABS
AND
QUIZZES
ATTENDING
RECITATION
IS
AN
IMPORTANT
PART
OF
THIS
COURSE
IN
RECITATION
YOU
WILL
BE
ABLE
TO
WORK
IN
A
STRUCTURED
SETTING
WHILE
COMPLETING
SMALL
TASKS
LABS
CONCEPTS
FROM
CLASS
WILL
BE
EXPANDED
UPON
AND
TESTED
WITH
UNANNOUNCED
QUIZZES
PROJECTS
THERE
WILL
BE
SIX
OUTOFCLASS
ASSIGNMENTS
GIVEN
THESE
ARE
TO
BE
COMPLETED
IN
THE
GIVEN
TIME
NO
EXTENSIONS
WILL
BE
GIVEN
WITHOUT
A
VALID
EXCUSE
THESE
ARE
MEANT
TO
BE
YOUR
OWN
WORK
ANYONE
FOUND
TO
BE
COLLABORATING
WILL
BE
GIVEN
A
ZERO
FOR
THE
ASSIGNMENT
COLLABORATING
ALSO
MEANS
USING
CODE
FROM
PREVIOUS
TERMS
OTHER
UNIVERSITIES
YOUR
FRIENDS
OR
FINDING
IT
ON
THE
INTERNET
PARTICIPATION
ATTENDANCE
WILL
NOT
BE
TAKEN
BUT
IN
SUCH
A
SMALL
CLASS
ANY
ABSENCE
WILL
BE
NOTICED
SEVERAL
UNEXCUSED
MISSED
CLASSES
WILL
ADVERSELY
AFFECT
YOUR
GRADE
GRADING
YOUR
GRADE
WILL
BE
BASED
UPON
EXAMS
PROJECTS
WEEKLY
LABS
AND
QUIZZES
THE
LOWEST
ONE
OF
WHICH
WILL
BE
DROPPED
AND
PARTICIPATION
EXAMS
EACH
PROJECTS
EACH
LABS
QUIZZES
PARTICIPATION
TOTAL
THE
SCALE
FOR
THE
TERM
WILL
BE
PERCENTAGE
LETTER
OR
ABOVE
A
A
B
B
CS
INTRODUCTION
TO
COMPUTER
PROGRAMMING
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
C
C
D
D
DLESS
THAN
F
DISABILITY
RESOURCES
AND
SERVICES
IF
YOU
HAVE
A
DISABILITY
FOR
WHICH
YOU
ARE
REQUESTING
AN
ACCOMMODATION
YOU
ARE
ENCOURAGED
TO
CONTACT
BOTH
YOUR
INSTRUCTOR
AND
DISABILITY
RESOURCES
AND
SERVICES
WILLIAM
PITT
UNION
AS
EARLY
AS
POSSIBLE
IN
THE
TERM
DRS
WILL
VERIFY
YOUR
DISABILITY
AND
DETERMINE
REASONABLE
ACCOMMODATIONS
FOR
THIS
COURSE
TERM
SCHEDULE
THE
DAILY
TOPICS
ARE
SUBJECT
TO
CHANGE
DEPENDING
ON
OUR
PACE
THEY
ARE
THERE
TO
ASSIST
YOU
IN
THE
READINGS
SO
YOU
CAN
FOCUS
ON
THOSE
CONCEPTS
PRIOR
TO
CLASS
WEEK
READINGS
FOR
THIS
WEEK
JBD
PROJECT
ASSIGNED
TUESDAY
TOPICS
INTRODUCTION
TO
THE
COURSE
COMPUTERS
AND
THE
INTERNET
USING
THE
LAB
AND
RECITATIONS
INTRODUCTION
TO
PROBLEM
SOLVING
COMPILING
AND
RUNNING
PROGRAMS
ALGORITHMS
WEEK
READINGS
FOR
THIS
WEEK
JBD
PROJECT
DUE
TUESDAY
NO
CLASS
THURSDAY
OUT
OF
TOWN
TOPICS
KEYWORDS
COMMENTS
PRIMITIVE
TYPES
IDENTIFIERS
VARIABLES
EXPRESSIONS
OPERATORS
USER
INPUT
STRINGS
PREDEFINED
METHODS
WEEK
READINGS
FOR
THIS
WEEK
JBD
APPENDIX
CS
INTRODUCTION
TO
COMPUTER
PROGRAMMING
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
PROJECT
ASSIGNED
TUESDAY
TOPICS
NUMERIC
TYPES
CHARACTERS
ARITHMETIC
EXPRESSIONS
TYPE
CONVERSION
ASSIGNMENT
INCREMENT
DECREMENT
OPERATOR
PRECEDENCE
WEEK
READINGS
FOR
THIS
WEEK
JBD
PROJECT
DUE
THURSDAY
PROJECT
ASSIGNED
THURSDAY
TOPICS
MORE
EXPRESSIONS
BLOCKS
EMPTY
STATEMENT
BOOLEAN
EXPRESSIONS
RELATIONAL
OPERATORS
LOGICAL
OPERATORS
CONDITIONAL
STATEMENTS
WEEK
READINGS
FOR
THIS
WEEK
TOPICS
ADVANCED
CONDITIONALS
INTRODUCTION
TO
REPETITION
WHILE
FOR
BREAK
CONTINUE
SWITCH
PROBLEMSOLVING
STRATEGIES
STYLE
MORE
APPLETS
TEXT
FIELDS
LABELS
WEEK
READINGS
FOR
THIS
WEEK
PROJECT
DUE
TUESDAY
MIDTERM
EXAM
THURSDAY
TOPICS
INTRODUCTION
TO
METHODS
STRUCTURED
PROGRAMMING
CALLING
DEFINING
METHODS
REVIEW
FOR
THE
MIDTERM
WEEK
READINGS
FOR
THIS
WEEK
PROJECT
ASSIGNED
TUESDAY
TOPICS
RETURN
TYPES
DETAILS
OF
PARAMETER
PASSING
CALLBYVALUE
RECURSION
CS
INTRODUCTION
TO
COMPUTER
PROGRAMMING
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
PARAMETERS
SCOPE
TOPDOWN
DESIGN
WEEK
READINGS
FOR
THIS
WEEK
PROJECT
DUE
THURSDAY
TOPICS
MATHEMATICAL
FUNCTIONS
OVERLOADING
STYLE
JAVADOC
COMMENTS
WEEK
READINGS
FOR
THIS
WEEK
PROJECT
ASSIGNED
TUESDAY
TOPICS
INTRODUCTION
TO
ARRAYS
DECLARING
INITIALIZING
ACCESSING
LENGTH
PASSING
TO
METHODS
FINDING
MIN
MAX
SEARCHING
SIMPLE
SORTING
SEARCHING
SORTED
ARRAYS
WEEK
READINGS
FOR
THIS
WEEK
PROJECT
DUE
THURSDAY
PROJECT
ASSIGNED
THURSDAY
TOPICS
BIGOH
NOTATION
BOOLEAN
ARRAYS
CHAR
ARRAYS
ARRAYS
INITIALIZING
ARRAYS
OF
NONPRIMITIVE
TYPES
INTRODUCTION
TO
FILES
CREATING
TEXT
FILES
READING
TEXT
FILES
WEEK
READINGS
FOR
THIS
WEEK
TOPICS
ENCRYPTING
DECRYPTING
TEXT
BINARY
FILES
DETECTING
ENDOFFILE
INTRODUCTION
TO
GUIS
SWING
BUTTONS
TEXT
NUMERICAL
INPUT
EVENTS
WEEK
READINGS
FOR
THIS
WEEK
NONE
PROJECT
DUE
TUESDAY
FINAL
EXAM
THURSDAY
DURING
CLASS
CS
INTRODUCTION
TO
COMPUTER
PROGRAMMING
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
TOPICS
DRAWING
REVISITED
COMPONENTS
LAYOUT
MANAGERS
REVIEW
FOR
THE
FINAL
PROJECT
BLACKJACK
REFINEMENTS
DUE
TUESDAY
JULY
NO
LATE
PENALTY
FOR
JULY
WITH
PROJECT
WE
HAD
AN
ASSUMPTION
THAT
THERE
WAS
AN
INFINITE
AMOUNT
OF
CARDS
AVAILABLE
TO
PLAY
WITH
IN
THIS
PROJECT
YOU
SHOULD
RECTIFY
THIS
ASSUMPTION
BY
MAKING
A
CARD
UNIQUE
AND
ONCE
DEALT
IS
NEVER
DEALT
AGAIN
TO
MAKE
A
CARD
UNIQUE
YOU
SHOULD
KEEP
TRACK
OF
WHETHER
YOU
HAVE
SEEN
THAT
PARTICULAR
CARD
BEFORE
IF
YOU
HAVE
REJECT
IT
AND
TRY
TO
DEAL
AGAIN
A
GOOD
PLACE
TO
KEEP
TRACK
OF
WHETHER
YOUVE
SEEN
A
CARD
IS
WITH
AN
ARRAY
ONE
ASSUMPTION
YOU
CAN
MAKE
IS
THAT
THE
DECK
IS
RESHUFFLED
BETWEEN
EACH
GAME
WHAT
YOU
NEED
TO
DO
MODIFY
YOUR
PROJECT
TO
DEAL
UNIQUE
CARDS
USE
AN
ARRAY
TO
MAINTAIN
A
HISTORY
OF
WHAT
CARDS
YOUVE
SEEN
SUBMIT
THIS
BY
THE
DUE
DATE
BLACKJACK
ALSO
KNOWN
AS
IS
A
MULTIPLAYER
CARD
GAME
WITH
FAIRLY
SIMPLE
RULES
FOR
THIS
ASSIGNMENT
YOU
WILL
BE
IMPLEMENTING
A
SIMPLIFIED
VERSION
WHERE
A
USER
CAN
PLAY
AGAINST
THE
COMPUTER
WHO
ACTS
AS
DEALER
TWO
CARDS
ARE
DEALT
TO
EACH
PLAYER
THE
DEALER
SHOWS
ONE
CARD
FACE
UP
AND
THE
OTHER
IS
FACE
DOWN
THE
PLAYER
GETS
TO
SEE
BOTH
OF
HIS
OR
HER
CARDS
AND
THE
TOTAL
OF
THEM
IS
ADDED
FACE
CARDS
KINGS
QUEENS
AND
JACKS
ARE
WORTH
POINTS
ACES
ARE
WORTH
OR
POINTS
AND
ALL
OTHER
CARDS
ARE
WORTH
THEIR
FACE
VALUE
THE
GOAL
OF
THE
GAME
IS
TO
GET
AS
CLOSE
TO
BLACKJACK
WITHOUT
GOING
OVER
CALLED
BUSTING
THE
HUMAN
PLAYER
GOES
FIRST
MAKING
HIS
OR
HER
DECISIONS
BASED
ON
THE
SINGLE
DEALER
CARD
SHOWING
THE
PLAYER
HAS
TWO
CHOICES
HIT
OR
STAND
HIT
MEANS
TO
TAKE
ANOTHER
CARD
STAND
MEANS
THAT
THE
PLAYER
WISHES
NO
MORE
CARDS
AND
ENDS
THE
TURN
ALLOWING
FOR
THE
DEALER
TO
PLAY
THE
DEALER
MUST
HIT
IF
THEIR
CARD
TOTAL
IS
LESS
THAN
AND
MUST
STAND
IF
IT
IS
OR
HIGHER
WHICHEVER
PLAYER
GETS
CLOSEST
TO
WITHOUT
EXCEEDING
IT
WINS
EXAMPLE
RUN
WELCOME
TO
JONS
CASINO
PLEASE
ENTER
YOUR
NAME
JONATHAN
THE
DEALER
YOU
WOULD
YOU
LIKE
TO
HIT
OR
STAND
HIT
THE
DEALER
YOU
BUSTED
YOU
BUSTED
DEALER
WINS
REQUIREMENTS
FOR
THIS
ASSIGNMENT
YOU
NEED
TO
DO
THE
FOLLOWING
WRITE
A
PROGRAM
THAT
PLAYS
BLACKJACK
HAVE
THE
PROGRAM
USE
AT
LEAST
FUNCTIONS
FOR
THE
DEALER
FOR
THE
PLAYER
PROJECT
BLACKJACK
HTTP
PEOPLE
CS
PITT
EDU
JMISURDA
TEACHING
HTM
TO
DEAL
A
CARD
HAVE
THE
PROGRAM
INTELLIGENTLY
DETERMINE
IF
AN
ACE
SHOULD
BE
INTERPRETED
AS
A
OR
AN
THIS
IS
SOMEWHAT
DIFFICULT
YOU
NEED
TO
BE
ABLE
TO
ALSO
HANDLE
MULTIPLE
ACES
IF
THERE
ARE
ANY
ACES
IN
THE
HAND
AND
THE
TOTAL
EXCEEDS
CHANGE
THE
TO
A
I
E
SUBTRACT
UNTIL
THERE
ARE
NO
MORE
ACES
IN
THE
HAND
OR
THE
TOTAL
IS
BELOW
HINT
KEEP
A
COUNTER
THAT
SAYS
HOW
MANY
ACES
HAVE
BEEN
DEALT
SO
FAR
TO
A
PLAYER
YOU
DONT
NEED
TO
BE
ABLE
TO
DEAL
FROM
A
REAL
DECK
JUST
GENERATE
A
RANDOM
NUMBER
WHERE
IS
AN
ACE
AND
AND
REPRESENT
AS
WELL
TO
GET
THE
RIGHT
DISTRIBUTION
OF
CARDS
YOU
CAN
IGNORE
SUIT
COURSE
OBJECTIVE
THE
COURSE
AIMS
TO
PROVIDE
A
GENTLE
INTRODUCTION
TO
DATA
SCIENCE
PRINCIPLES
METHODOLOGIES
TECHNOLOGIES
AND
TOOLS
FOR
NON
CS
MAJORS
THE
NAME
OF
THE
COURSE
COMES
FROM
THE
FAMOUS
ARTHUR
C
CLARKE
QUOTE
ANY
SUFFICIENTLY
ADVANCED
TECHNOLOGY
IS
INDISTINGUISHABLE
FROM
MAGIC
COURSE
DESCRIPTION
THIS
COURSE
IS
AN
INTRODUCTION
TO
DATA
SCIENCE
FOR
BEGINNERS
DESIGNED
AS
A
FIRST
COURSE
IN
COMPUTER
SCIENCE
FOR
NON
CS
MAJORS
AND
CS
MINORS
AIMING
TO
INTRODUCE
STUDENTS
TO
BASIC
DATA
MANAGEMENT
TECHNOLOGIES
AND
DATA
ANALYTICS
SKILLS
THE
COURSE
WILL
CONSIST
OF
ABOUT
OF
INTRODUCTION
TO
COMPUTER
PROGRAMMING
USING
PYTHON
OF
INTRODUCTION
TO
DATA
MANAGEMENT
TECHNOLOGIES
AND
OF
INTRODUCTION
TO
DATA
ANALYTICS
THE
COURSE
WILL
ADOPT
THE
POINT
OF
VIEW
OF
A
USER
OF
DATA
E
G
WHO
IS
JUST
COMBINING
DATA
AND
ANALYZING
IT
USING
TOOLS
AND
NOT
A
PROVIDER
OF
DATA
E
G
WHO
WOULD
BE
IMPLEMENTING
A
DATABASE
DRIVEN
WEB
SITE
AS
IS
TYPICALLY
BE
CASE
FOR
RELATED
COURSES
FOR
CS
MAJORS
COURSE
FORMAT
LECTURES
TWO
MINUTE
MEETINGS
PER
WEEK
LECTURES
WILL
BE
FAIRLY
INTERACTIVE
AND
WILL
IN
CLUDE
QUIZZES
AND
STUDENT
PRESENTATIONS
CLASS
PARTICIPATION
DISCUSSIONS
AND
IN
CLASS
QUIZZES
WILL
BE
A
COMPONENT
OF
THE
STUDENTS
FINAL
GRADE
RECITATIONS
ONE
MINUTE
MEETING
PER
WEEK
FRIDAY
NEEDS
TO
BE
IN
A
COMPUTER
LAB
TO
PROVIDE
HANDS
ON
EXPERIENCE
FOR
THE
PROJECTS
AND
ASSIGNMENTS
SOME
OF
THE
RECITATIONS
WILL
FOLLOW
THE
FLIPPED
CLASSROOM
MODEL
WHERE
ADDITIONAL
MATERIAL
WAS
GIVEN
AS
READING
PRACTICE
ASSIGNMENT
AHEAD
OF
TIME
EXAMS
WE
WILL
HAVE
TWO
MIDTERM
EXAMS
ROUGHLY
TIMED
AT
THE
ONE
THIRD
AND
THE
TWO
THIRDS
TIME
POINTS
OF
THE
TERM
BUT
NO
FINAL
EXAM
SINCE
THERE
WILL
BE
A
TERM
PROJECT
ASSIGNMENTS
THERE
WILL
BE
SIX
ASSIGNMENTS
ALL
OF
THEM
BEING
HANDS
ON
USING
REAL
DATA
SETS
WHENEVER
APPLICABLE
AT
LEAST
ONE
OF
THE
ASSIGNMENT
WILL
OPTIONALLY
BE
A
GROUP
ASSIGNMENT
FOR
GROUPS
OF
TWO
TO
THREE
STUDENTS
AT
LEAST
ONE
ASSIGNMENT
WILL
INCLUDE
AN
IN
CLASS
PRESENTATION
COMPONENT
TERM
PROJECT
THE
TERM
PROJECT
WILL
BE
A
GROUP
PROJECT
TEAMS
OF
TWO
TO
THREE
STUDENTS
AND
IT
WILL
INVOLVE
HYPOTHESIS
FORMATION
DATA
ACQUISITION
DATA
ANALYSIS
AND
DATA
PRESENTATION
TEXTBOOKS
THERE
ARE
TWO
REFERENCE
TEXTBOOKS
BOTH
AVAILABLE
FOR
FREE
FOR
STUDENTS
THROUGH
THE
UNIVERSITY
SUB
SCRIPTION
TO
O
REILLY
SAFARI
BOOKSHELF
PREREQUISITES
ALTHOUGH
THERE
ARE
NO
FORMAL
PREREQUISITES
SOME
FAMILIARITY
WITH
COMPUTERS
IN
GENERAL
AND
WITH
COMPUTER
PROGRAMMING
IN
PARTICULAR
ARE
HIGHLY
RECOMMENDED
ANTI
REQUISITES
THIS
COURSE
SHOULD
NOT
BE
TAKEN
BY
CS
MAJORS
OR
ANYONE
WHO
HAS
PASSED
FOUR
OF
THE
FIVE
COURSES
CLASS
WEB
PAGE
HTTP
DATA
WITCHCRAFT
ORG
ALL
HANDOUTS
AND
CLASS
NOTES
WILL
BE
PUBLISHED
ON
THE
CLASS
WEB
PAGE
YOU
ARE
EXPECTED
TO
CHECK
THIS
PAGE
FREQUENTLY
AT
LEAST
TWICE
A
WEEK
CLASS
COMMUNICATIONS
POLICIES
NEW
PLEASE
READ
CAREFULLY
MAILING
LIST
ALL
STUDENTS
WILL
BE
AUTOMATICALLY
SUBSCRIBED
TO
THE
CLASS
MAILING
LIST
SO
THAT
THEY
RECEIVE
TIME
SENSITIVE
ANNOUNCEMENTS
FROM
THE
INSTRUCTOR
AND
TA
IN
CLASS
STUDENT
RESPONSES
WE
WILL
USE
THE
SOCRATIVE
SYSTEM
HTTP
WWW
SOCRATIVE
COM
TO
CAPTURE
STUDENT
RESPONSES
TO
QUESTIONS
AND
RECORD
ATTENDANCE
IT
IS
CRUCIAL
THAT
YOU
PROVIDE
YOUR
PITT
USER
ACCOUNT
NAME
E
G
AT
THE
NAME
PROMPT
TO
PROPERLY
RECORD
YOUR
ANSWERS
EMAIL
TO
INSTRUCTOR
AND
TA
INSTEAD
OF
EMAIL
WE
WILL
USE
THE
PIAZZA
SYSTEM
WHICH
IS
ESSENTIALLY
A
WEB
BASED
BULLETIN
BOARD
FOR
QUESTIONS
AND
CLARIFICATIONS
TO
ASSIGNMENTS
MORE
INSTRUCTIONS
WILL
BE
POSTED
ON
THE
CLASS
WEB
SITE
CONFIDENTIAL
EMAIL
IN
CASE
YOU
NEED
TO
COMMUNICATE
WITH
THE
INSTRUCTOR
AND
TA
OUTSIDE
OF
THE
PIAZZA
SYSTEM
I
E
FOR
CONFIDENTIAL
MATTERS
YOU
SHOULD
SEND
EMAIL
TO
STAFF
CS
PITT
EDU
WE
WILL
MAKE
EVERY
EFFORT
TO
RESPOND
TO
ALL
EMAIL
REQUESTS
WITHIN
ONE
BUSINESS
DAY
AT
THE
LATEST
DUE
TO
SPAM
FILTERING
YOU
SHOULD
ALWAYS
USE
YOUR
PITT
EMAIL
ADDRESS
WHEN
SENDING
EMAIL
AND
INCLUDE
YOUR
FULL
NAME
E
MAIL
COMMUNICATION
POLICY
EACH
STUDENT
IS
ISSUED
A
UNIVERSITY
E
MAIL
ADDRESS
USERNAME
PITT
EDU
UPON
ADMITTANCE
THIS
E
MAIL
ADDRESS
MAY
BE
USED
BY
THE
UNIVERSITY
FOR
OFFICIAL
COMMUNICATION
WITH
STU
DENTS
STUDENTS
ARE
EXPECTED
TO
READ
E
MAIL
SENT
TO
THIS
ACCOUNT
ON
A
REGULAR
BASIS
FAILURE
TO
READ
AND
REACT
TO
UNIVERSITY
COMMUNICATIONS
IN
A
TIMELY
MANNER
DOES
NOT
ABSOLVE
THE
STUDENT
FROM
KNOWING
AND
COM
PLYING
WITH
THE
CONTENT
OF
THE
COMMUNICATIONS
THE
UNIVERSITY
PROVIDES
AN
E
MAIL
FORWARDING
SERVICE
THAT
ALLOWS
STUDENTS
TO
READ
THEIR
E
MAIL
VIA
OTHER
SERVICE
PROVIDERS
E
G
GMAIL
YAHOO
HOTMAIL
STUDENTS
THAT
CHOOSE
TO
FORWARD
THEIR
E
MAIL
FROM
THEIR
PITT
EDU
ADDRESS
TO
ANOTHER
ADDRESS
DO
SO
AT
THEIR
OWN
RISK
IF
E
MAIL
IS
LOST
AS
A
RESULT
OF
FORWARDING
IT
DOES
NOT
ABSOLVE
THE
STUDENT
FROM
RESPONDING
TO
OFFICIAL
COMMU
NICATIONS
SENT
TO
THEIR
UNIVERSITY
E
MAIL
ADDRESS
TO
FORWARD
E
MAIL
SENT
TO
YOUR
UNIVERSITY
ACCOUNT
GO
TO
HTTP
ACCOUNTS
PITT
EDU
LOG
INTO
YOUR
ACCOUNT
CLICK
ON
EDIT
FORWARDING
ADDRESSES
AND
FOLLOW
THE
INSTRUCTIONS
ON
THE
PAGE
BE
SURE
TO
LOG
OUT
OF
YOUR
ACCOUNT
WHEN
YOU
HAVE
FINISHED
FOR
THE
FULL
E
MAIL
COMMUNICATION
POLICY
GO
TO
WWW
BC
PITT
EDU
POLICIES
POLICY
HTML
TECHNOLOGY
POLICY
NEW
PLEASE
READ
CAREFULLY
SINCE
THIS
IS
THE
CENTURY
THE
USE
OF
LAPTOPS
TABLETS
AND
OTHER
DIGITAL
DEVICES
IS
ALLOWED
IN
CLASS
HOWEVER
WHEN
USING
DIGITAL
DEVICES
IN
THE
CLASSROOM
YOU
MUST
BE
MINDFUL
WHEN
YOU
ARE
EMAILING
TWEETING
TEXTING
SURFING
ETC
YOU
ARE
NOT
PAYING
ATTENTION
RESEARCH
SHOWS
THAT
NO
ONE
CAN
MULTITASK
THAT
WELL
YOU
INCLUDED
PAYING
ATTENTION
AND
TAKING
GOOD
NOTES
IS
ESSENTIAL
TO
SUCCESS
IN
THIS
COURSE
ISN
T
THAT
WHY
YOU
ARE
HERE
BE
RESPECTFUL
YOUR
USE
OF
DIGITAL
DEVICES
SHOULD
NOT
DISTRACT
OTHER
STUDENTS
IN
THE
CLASS
IT
IS
UNLIKELY
THAT
TAKING
NOTES
OR
SEARCHING
CLASS
RELATED
TOPICS
WILL
BE
DISTRACTING
TO
THE
OTHER
STUDENTS
HOWEVER
VIEWING
VIDEOS
OF
KITTENS
OR
ICE
BUCKET
CHALLENGES
GONE
WELL
OR
GONE
WRONG
WILL
LIKELY
DISTRACT
OTHERS
COMPLAINTS
ABOUT
INAPPROPRIATE
TECHNOLOGY
USE
IN
CLASS
WILL
RESULT
IN
YOUR
PRIVILEGES
BEING
CURTAILED
OR
REVOKED
BE
HONEST
EMAILING
SURFING
AND
THE
USE
OF
ANY
OTHER
APPLICATIONS
OR
TECHNOLOGIES
IS
NOT
ALLOWED
DURING
EXAMINATIONS
DOING
SO
UNLESS
EXPLICITLY
ALLOWED
IS
CONSIDERED
CHEATING
IN
THE
EXAM
AND
WILL
BE
DEALT
ACCORDINGLY
CELL
PHONE
USE
NEW
PLEASE
READ
CAREFULLY
ANSWERING
A
CELL
PHONE
OR
TEXTING
IS
VERY
DISRUPTIVE
AND
HENCE
ANY
USE
OF
A
CELL
PHONE
TO
MAKE
OR
RECEIVE
CALLS
OR
TEXT
MESSAGES
IS
NOT
PERMITTED
IN
THE
CLASS
OR
RECITATION
CELL
PHONES
MUST
BE
SWITCHED
TO
SILENT
MODE
AND
IF
YOU
HAVE
A
PHONE
CALL
WHICH
CANNOT
WAIT
UNTIL
THE
END
OF
THE
CLASS
YOU
NEED
TO
STEP
OUT
OF
THE
CLASS
AND
THEN
ANSWER
IT
AUDIO
VIDEO
RECORDING
TO
ENSURE
THE
FREE
AND
OPEN
DISCUSSION
OF
IDEAS
STUDENTS
MAY
NOT
RECORD
CLASSROOM
LECTURES
DISCUSSION
AND
OR
ACTIVITIES
WITHOUT
THE
ADVANCE
WRITTEN
PERMISSION
OF
THE
INSTRUCTOR
AND
ANY
SUCH
RECORDING
PROPERLY
APPROVED
IN
ADVANCE
CAN
BE
USED
SOLELY
FOR
THE
STUDENT
OWN
PRIVATE
USE
COPYRIGHTED
MATERIAL
ALL
MATERIAL
PROVIDED
THROUGH
THIS
WEB
SITE
IS
SUBJECT
TO
COPYRIGHT
THIS
APPLIES
TO
CLASS
AND
RECITATION
NOTES
SLIDES
HANDOUTS
ASSIGNMENTS
SOLUTIONS
PROJECT
DESCRIPTIONS
ETC
YOU
ARE
ALLOWED
AND
EXPECTED
TO
USE
ALL
THE
PROVIDED
MATERIAL
FOR
PERSONAL
USE
HOWEVER
YOU
ARE
STRICTLY
PROHIBITED
FROM
SHARING
THE
MATERIAL
WITH
OTHERS
IN
GENERAL
AND
FROM
POSTING
THE
MATERIAL
ON
THE
WEB
OR
OTHER
FILE
SHARING
VENUES
IN
PARTICULAR
GRADING
POLICY
UNLESS
EXPLICITLY
NOTED
OTHERWISE
THE
WORK
IN
THIS
COURSE
IS
TO
BE
DONE
INDEPENDENTLY
DISCUS
SIONS
WITH
OTHER
STUDENTS
ON
THE
ASSIGNMENTS
SHOULD
BE
LIMITED
TO
UNDERSTANDING
THE
STATEMENT
OF
THE
PROBLEMS
EXCEPT
WHEN
ASSIGNMENTS
ARE
TO
BE
DONE
IN
GROUPS
IN
WHICH
CASE
IT
IS
EXPECTED
OF
MEMBERS
OF
THE
SAME
GROUP
TO
WORK
TOGETHER
CHEATING
IN
ANY
WAY
INCLUDING
GIVING
YOUR
WORK
TO
SOMEONE
ELSE
WILL
RESULT
IN
AN
F
FOR
THE
COURSE
AND
A
REPORT
TO
THE
APPROPRIATE
UNIVERSITY
AUTHORITY
SUBMISSIONS
THAT
ARE
ALIKE
IN
A
SUBSTANTIVE
WAY
WILL
BE
CONSIDERED
TO
BE
CHEATING
BY
ALL
INVOLVED
PARTIES
PLEASE
PROTECT
YOURSELVES
BY
ONLY
STORING
YOUR
FILES
IN
PRIVATE
DIRECTORIES
AND
BY
RETRIEVING
ALL
PRINTOUTS
PROMPTLY
STUDENTS
ARE
EXPECTED
TO
ABIDE
BY
THE
DIETRICH
SCHOOL
OF
ARTS
AND
SCIENCES
ACADEMIC
INTEGRITY
CODE
OF
CONDUCT
POSTED
AT
HTTP
WWW
AS
PITT
EDU
FAC
POLICIES
ACADEMIC
INTEGRITY
ALL
ASSIGNMENTS
MUST
BE
SUBMITTED
ELECTRONICALLY
GRADES
CAN
BE
APPEALED
UP
TO
TWO
WEEKS
AFTER
THEY
HAVE
BEEN
POSTED
NO
APPEALS
WILL
BE
CONSIDERED
AFTER
THAT
TIME
ACADEMIC
INTEGRITY
POLICY
CHEATING
PLAGIARISM
WILL
NOT
BE
TOLERATED
STUDENTS
SUSPECTED
OF
VIOLATING
THE
UNI
VERSITY
OF
PITTSBURGH
POLICY
ON
ACADEMIC
INTEGRITY
NOTED
BELOW
WILL
BE
REQUIRED
TO
PARTICIPATE
IN
THE
OUTLINED
PROCEDURAL
PROCESS
AS
INITIATED
BY
THE
INSTRUCTOR
A
MINIMUM
SANCTION
OF
A
ZERO
SCORE
FOR
THE
QUIZ
EXAM
OR
PAPER
WILL
BE
IMPOSED
FOR
THE
FULL
ACADEMIC
INTEGRITY
POLICY
GO
TO
WWW
PROVOST
PITT
EDU
INFO
HTML
LATE
POLICY
A
LATE
ASSIGNMENT
WILL
RECEIVE
A
DEDUCTION
OF
POINTS
IF
IT
IS
UP
TO
ONE
DAY
PAST
THE
DEADLINE
AND
POINTS
IF
IT
IS
UP
TO
TWO
DAYS
PAST
THE
DEADLINE
ASSIGNMENTS
THAT
ARE
PAST
TWO
DAYS
LATE
WILL
NOT
BE
ACCEPTED
MAKE
UP
POLICY
STUDENTS
ARE
EXPECTED
TO
BE
PRESENT
FOR
ALL
EXAMS
AND
QUIZZES
MAKE
UP
EXAMS
WILL
ONLY
BE
GIVEN
IN
THE
EVENT
OF
AN
EMERGENCY
AND
ONLY
IF
THE
INSTRUCTOR
IS
INFORMED
IN
ADVANCE
FAILURE
TO
NOTIFY
THE
INSTRUCTOR
PRIOR
TO
MISSING
AN
EXAM
WILL
RESULT
IN
A
ZERO
FOR
THE
EXAM
FINAL
EXAM
CONFLICT
POLICY
IN
CASE
YOU
HAVE
A
FINAL
EXAM
CONFLICT
I
E
HAVE
MORE
THAN
TWO
EXAMS
SCHEDULED
ON
THE
SAME
DATE
DURING
FINALS
WEEK
YOU
NEED
TO
NOTIFY
THE
INSTRUCTORS
OF
ALL
CLASSES
INVOLVED
IN
ORDER
TO
RESOLVE
THE
CONFLICT
BY
THE
SIXTH
WEEK
OF
CLASSES
ACCORDING
TO
THE
UNIVERSITY
POLICY
POSTED
AT
HTTP
WWW
REGISTRAR
PITT
EDU
CLASSROOMSCHEDULING
HTML
STUDENTS
WITH
DISABILITIES
IF
YOU
HAVE
A
DISABILITY
FOR
WHICH
YOU
ARE
OR
MAY
BE
REQUESTING
AN
ACCOMMODATION
YOU
ARE
ENCOURAGED
TO
CONTACT
BOTH
YOUR
INSTRUCTOR
AND
THE
OFFICE
OF
DISABILITY
RESOURCES
AND
SERVICES
WILLIAM
PITT
UNION
AS
EARLY
AS
POSSIBLE
IN
THE
TERM
DISABILITY
RESOURCES
AND
SERVICES
WILL
VERIFY
YOUR
DISABILITY
AND
DETERMINE
REASONABLE
ACCOMMODATIONS
FOR
THIS
COURSE
THEIR
WEB
SITE
IS
HTTP
WWW
DRS
PITT
EDU
RELIGIOUS
OBSERVANCES
IN
ORDER
TO
ACCOMMODATE
THE
OBSERVANCE
OF
RELIGIOUS
HOLIDAYS
STUDENTS
SHOULD
INFORM
THE
INSTRUCTOR
BY
EMAIL
OF
ANY
SUCH
DAYS
THAT
CONFLICT
WITH
SCHEDULED
CLASS
ACTIVITIES
WITHIN
THE
FIRST
TWO
WEEKS
OF
THE
TERM
TENTATIVE
SCHEDULE
A
DETAILED
READING
GUIDE
WILL
BE
PUBLISHED
ON
THE
WEB
PAGE
ALONG
WITH
THE
CLASS
NOTES
AND
ADDITIONAL
ONLINE
ARTICLES
AND
RESOURCES
TIME
PERMITTING
THE
TENTATIVE
CLASS
SCHEDULE
FOR
LECTURES
RECITA
TIONS
ASSIGNMENTS
AND
EXAMS
WILL
BE
AS
FOLLOWS
WEEK
INTRODUCTION
TO
DATA
SCIENCE
AND
BIG
DATA
WEEK
INTRODUCTION
TO
PYTHON
PROGRAMMING
CONTROL
FLOW
VARIABLES
BASIC
DATA
STRUCTURES
WEEK
PYTHON
PROGRAMMING
USER
DEFINED
FUNCTIONS
WEEK
PYTHON
PROGRAMMING
FILE
INPUT
OUTPUT
WEEK
PYTHON
PROGRAMMING
PARSING
POPULAR
DATA
EXCHANGE
FORMATS
CSV
JSON
RSS
WEEK
INTRODUCTION
TO
DATA
MINING
CLUSTERING
ASSOCIATION
RULE
MINING
WEEK
INTRO
TO
DATA
VISUALIZATION
POWERPOINT
TABLEAU
GOOGLE
FUSION
TABLES
WEEK
DATA
VISUALIZATION
USING
PYTHON
WEEK
INTRODUCTION
TO
RECOMMENDATION
SYSTEMS
WEEK
INTRODUCTION
TO
DATA
WAREHOUSING
AND
STATISTICAL
DATA
SUMMARIZATION
WEEK
INTRODUCTION
TO
RELATIONAL
DATABASES
WEEK
INTRODUCTION
TO
SQL
SELECT
PROJECT
JOIN
QUERIES
WEEK
SQL
PROGRAMMING
USING
PYTHON
WEEK
ADVANCED
TOPICS
GRAPH
DATABASES
REST
APIS
WEEK
TERM
PROJECT
PRESENTATIONS
AN
DENOTES
AN
ASSIGNMENT
THAT
WEEK
WHEREAS
A
DENOTES
A
MIDTERM
EXAMINATION
THERE
IS
NO
FINAL
EXAM
INATION
IDEAS
FOR
TERM
PROJECTS
UTILIZING
OPEN
DATA
FROM
DIFFERENT
CITIES
E
G
PITTSBURGH
CHICAGO
AND
WASHINGTON
DC
IDENTIFYING
COMBINING
AND
ANALYZING
INTERESTING
DATASETS
FROM
HTTP
DATA
GOV
USING
PUBLICLY
AVAILABLE
CHALLENGE
DATA
E
G
FROM
KAGGLE
DEBS
ETC
UTILIZING
MOVIE
RATING
DATA
FROM
HTTP
GROUPLENS
ORG
DATASETS
MOVIELENS
ANALYZING
HISTORICAL
WEATHER
DATA
EXECUTE
THE
FOLLOWING
PYTHON
PROGRAM
THAT
PRINTS
RANDOM
INTEGERS
BETWEEN
AND
FROM
RANDOM
IMPORT
RANDINT
FOR
IDX
IN
RANGE
RANDINT
PRINT
TRY
IDX
NUMBER
DRAWN
WRITE
A
PYTHON
PROGRAM
THAT
GENERATES
RANDOM
INTEGERS
BETWEEN
AND
BUT
STOPS
WHEN
THE
NUMBER
IS
GENERATED
WRITE
A
PYTHON
PROGRAM
THAT
COMPUTES
THE
COMPOUND
INTEREST
FOR
A
BANK
ACCOUNT
ASSUME
YOUR
INITIAL
DEPOSIT
IS
STORED
IN
VARIABLE
DEPOSIT
AND
YOUR
INTEREST
RATE
IS
STORED
IN
VARIABLE
RATE
THE
INTEREST
TO
BE
PAID
AT
THE
END
OF
ONE
MONTH
WOULD
THEN
BE
INTEREST
DEPOSIT
RATE
THE
DEPOSIT
AT
THE
END
OF
ONE
MONTH
WOULD
THEN
BECOME
DEPOSIT
DEPOSIT
INTEREST
WRITE
A
PYTHON
PROGRAM
THAT
TAKES
INPUT
FROM
THE
USER
FOR
AN
INITIAL
DEPOSIT
AMOUNT
AN
INTEREST
RATE
E
G
TO
DENOTE
AND
THE
NUMBER
OF
MONTHS
TO
COMPUTE
THE
COMPOUND
INTEREST
FOR
PRINT
THE
INTEREST
AND
THE
UPDATED
DEPOSIT
TOTAL
FOR
EVERY
MONTH
AND
THE
FINAL
DEPOSIT
TOTAL
AT
THE
END
GIVEN
THE
FOLLOWING
DICTIONARY
SUN
CREAM
OF
POTATO
MON
TOMATO
BASIL
TUE
CREAM
OF
BROCCOLI
WED
CREAM
OF
POTATO
THU
WEDDING
FRI
CLAM
CHOWDER
SAT
CREAM
OF
BROCCOLI
WRITE
A
PYTHON
PROGRAM
THAT
WILL
ASK
FOR
A
DAY
FROM
THE
USER
AND
PRODUCE
THE
MATCHING
SOUP
OF
THE
DAY
OR
THE
MESSAGE
INVALID
DAY
OF
THE
WEEK
IF
THERE
IS
NO
MATCH
UPDATE
THE
ABOVE
PROGRAM
TO
MAKE
IT
LOOP
CONTINUOUSLY
ASKING
FOR
A
DAY
OF
THE
WEEK
UNTIL
THE
USER
GIVES
THE
WORD
BANANA
AS
INPUT
WRITE
A
PYTHON
SCRIPT
TO
SWAP
TWO
VARIABLES
FOR
INSTANCE
YOU
HAVE
THE
FOLLOWING
TWO
VARIABLES
BEFORE
SWAPPING
A
B
AFTER
SWAPPING
A
B
WRITE
A
PYTHON
SCRIPT
THAT
CONVERT
A
TEMPERATURE
BETWEEN
FAHRENHEIT
AND
CELSIUS
THE
FORMULA
TO
CONVERT
A
TEMPERATURE
FROM
FAHRENHEIT
TO
CELSIUS
IS
F
X
C
THE
FORMULA
TO
CONVERT
A
TEMPERATURE
FROM
CELSIUS
TO
FAHRENHEIT
IS
C
F
WRITE
A
PYTHON
SCRIPT
TO
CREATE
A
LIST
OF
ALL
THE
COURSES
THAT
YOU
ARE
TAKING
IN
THIS
SEMESTER
PRINT
THE
SECOND
COURSE
IN
THE
LIST
IN
ADDITION
PRINT
THE
LIST
VALUE
THAT
CORRESPONDS
TO
DATA
WITCHCRAFT
WRITE
A
PYTHON
SCRIPT
TO
CHECK
IF
A
NUMBER
IF
POSITIVE
OR
NEGATIVE
WRITE
A
PYTHON
SCRIPT
TO
CHECK
IF
A
NUMBER
IS
ODD
OR
EVEN
WRITE
A
PYTHON
SCRIPT
TO
PRINT
THE
PATTERN
ABCABCABCABCABCABCABCABC
USING
A
STRING
WITH
NOT
MORE
THAN
CHARACTERS
SETTING
UP
PYTHON
VERSION
TO
GET
STARTED
YOU
WILL
FIRST
NEED
TO
CHECK
IF
PYTHON
IS
PREINSTALLED
IN
YOUR
MACHINE
BY
TYPING
PYTHON
ON
THE
COMMAND
LINE
IF
IT
THEN
YOU
ARE
GOOD
TO
GET
STARTED
IF
NOT
THEN
HERE
ARE
SOME
RESOURCES
TO
HELP
YOU
SETUP
AND
START
CODING
IN
PYTHON
PLEASE
NOTE
THAT
WE
WILL
BE
USING
IN
THIS
COURSE
A
INSTALLATION
TO
INSTALL
PYTHON
VISIT
HTTPS
WWW
PYTHON
ORG
DOWNLOADS
AND
DOWNLOAD
THE
LATEST
VERSION
RELEASE
FOR
YOUR
MACHINE
ONCE
THE
INSTALLATION
PROCESS
IS
COMPLETE
TYPE
PYTHON
IN
COMMAND
LINE
AGAIN
IF
PYTHON
DOES
NOT
FIRE
UP
THEN
YOU
WILL
HAVE
TO
ADD
PYTHON
TO
YOUR
SYSTEM
PATH
VARIABLE
YOU
CAN
SET
THE
PATH
USING
SET
COMMAND
IN
WINDOWS
OR
THROUGH
THE
SYSTEM
VARIABLES
DIALOGUE
BOX
AND
EXPORT
COMMAND
IN
MAC
IF
YOU
HAVE
BOTH
AND
INSTALLED
PLEASE
MAKE
SURE
THAT
APPEARS
FIRST
ON
THE
SYSTEM
PATH
B
IDE
YOU
ARE
FREE
TO
USE
ANY
TEXT
EDITOR
OR
IDE
ONE
OPTION
IS
TO
USE
PYCHARM
IDE
WITH
A
FREE
COMMUNITY
EDITION
FOR
BOTH
WINDOWS
AND
MAC
AVAILABLE
HERE
HTTPS
WWW
JETBRAINS
COM
PYCHARM
DOWNLOAD
C
PACKAGE
MANAGER
YOU
CAN
INSTALL
PYTHON
PACKAGES
USING
PIP
PIP
COMES
PRE
INSTALLED
WITH
BUT
YOU
CAN
ALSO
INSTALL
IT
FROM
HERE
HTTPS
PIP
PYPA
IO
EN
STABLE
INSTALLING
ALTERNATIVELY
ANACONDA
IS
A
GREAT
PACKAGE
MANAGER
THAT
COMES
WITH
OVER
A
PRE
INSTALLED
PYTHON
PACKAGES
FOR
DATA
SCIENCE
AND
CAN
FOUND
HERE
HTTPS
WWW
CONTINUUM
IO
DOWNLOADS
SETTING
UP
PYTHON
VERSION
TO
GET
STARTED
YOU
WILL
FIRST
NEED
TO
CHECK
IF
PYTHON
IS
PREINSTALLED
IN
YOUR
MACHINE
BY
TYPING
PYTHON
ON
THE
COMMAND
LINE
IF
IT
THEN
YOU
ARE
GOOD
TO
GET
STARTED
IF
NOT
THEN
HERE
ARE
SOME
RESOURCES
TO
HELP
YOU
SETUP
AND
START
CODING
IN
PYTHON
PLEASE
NOTE
THAT
WE
WILL
BE
USING
X
IN
THIS
COURSE
VERSION
OF
PYTHON
BUT
NOT
OR
HIGHER
A
INSTALLATION
TO
INSTALL
PYTHON
VISIT
HTTPS
WWW
PYTHON
ORG
DOWNLOADS
AND
DOWNLOAD
ANY
X
RELEASE
FOR
YOUR
MACHINE
ONCE
THE
INSTALLATION
PROCESS
IS
COMPLETE
TYPE
PYTHON
IN
COMMAND
LINE
AGAIN
IF
PYTHON
DOES
NOT
FIRE
UP
THEN
YOU
WILL
HAVE
TO
ADD
PYTHON
TO
YOUR
SYSTEM
PATH
VARIABLE
YOU
CAN
SET
THE
PATH
USING
SET
COMMAND
IN
WINDOWS
OR
THROUGH
THE
SYSTEM
VARIABLES
DIALOGUE
BOX
AND
EXPORT
COMMAND
IN
MAC
IF
YOU
HAVE
BOTH
AND
INSTALLED
PLEASE
MAKE
SURE
THAT
APPEARS
FIRST
ON
THE
SYSTEM
PATH
B
IDE
YOU
ARE
FREE
TO
USE
ANY
TEXT
EDITOR
OR
IDE
ONE
OPTION
IS
TO
USE
PYCHARM
IDE
WITH
A
FREE
COMMUNITY
EDITION
FOR
BOTH
WINDOWS
AND
MAC
AVAILABLE
HERE
HTTPS
WWW
JETBRAINS
COM
PYCHARM
DOWNLOAD
C
PACKAGE
MANAGER
YOU
CAN
INSTALL
PYTHON
PACKAGES
USING
PIP
PIP
COMES
PRE
INSTALLED
WITH
7
BUT
YOU
CAN
ALSO
INSTALL
IT
FROM
HERE
HTTPS
PIP
PYPA
IO
EN
STABLE
INSTALLING
ALTERNATIVELY
ANACONDA
IS
A
GREAT
PACKAGE
MANAGER
THAT
COMES
WITH
OVER
A
PRE
INSTALLED
PYTHON
PACKAGES
FOR
DATA
SCIENCE
AND
CAN
FOUND
HERE
HTTPS
WWW
CONTINUUM
IO
DOWNLOADS
GOAL
GAIN
FAMILIARITY
WITH
PYTHON
DESCRIPTION
THIS
ASSIGNMENT
IS
MEANT
TO
HELP
YOU
GAIN
SOME
EXPERIENCE
WITH
THE
PYTHON
PROGRAMMING
LANGUAGE
YOU
ARE
ASKED
TO
COMPLETE
THE
FOLLOWING
PROBLEM
SETS
FROM
HTTP
SNAKIFY
ORG
HOW
TO
DO
YOUR
ASSIGNMENT
YOU
NEED
TO
SIGNUP
TO
HTTP
SNAKIFY
ORG
USING
THE
FOLLOWING
LINK
HTTP
PYTHONLAB
ORG
COMPLETE
AS
MANY
OF
THE
ABOVE
PROBLEMS
YOU
CAN
ON
HTTP
SNAKIFY
ORG
AND
SUBMIT
A
TEXT
FILE
TXT
THAT
SAYS
WHICH
PROBLEMS
YOU
DID
NOT
DO
USING
THE
WEB
SUBMIS
SION
INTERFACE
BELOW
A
SAMPLE
ASSIGN
TXT
FILE
IS
PROVIDED
YOU
SHOULD
FILL
OUT
YOUR
FIRST
LAST
NAME
AND
YOUR
PITT
EMAIL
ADDRESS
THAT
YOU
ALSO
USED
TO
REGISTER
FOR
HTTP
SNAKIFY
ORG
IF
YOU
COMPLETE
ALL
THE
PROBLEMS
THEN
YOUR
ASSIGN
TXT
FILE
SHOULD
ONLY
HAVE
LINES
THAT
START
WITH
ACADEMIC
HONESTY
THE
WORK
IN
THIS
ASSIGNMENT
IS
TO
BE
DONE
INDEPENDENTLY
BY
YOU
AND
ONLY
YOU
DISCUSSIONS
WITH
OTHER
STUDENTS
ON
THE
ASSIGNMENT
SHOULD
BE
LIMITED
TO
UNDERSTANDING
THE
STATEMENT
OF
THE
PROBLEM
CHEATING
IN
ANY
WAY
INCLUDING
GIVING
YOUR
WORK
TO
SOMEONE
ELSE
WILL
RESULT
IN
AN
F
FOR
THE
COURSE
AND
A
REPORT
TO
THE
APPROPRIATE
UNIVERSITY
AUTHORITY
FOR
FURTHER
DISCIPLINARY
ACTION
HOW
TO
SUBMIT
YOUR
ASSIGNMENT
WE
WILL
USE
A
WEB
BASED
ASSIGNMENT
SUBMISSION
INTERFACE
TO
SUBMIT
YOUR
ASSIGNMENT
GO
TO
THE
CLASS
WEB
PAGE
HTTP
ORG
AND
CLICK
THE
SUBMIT
BUTTON
YOU
CAN
SUBMIT
UP
TO
FIVE
FILES
AT
A
TIME
YOU
CAN
COME
BACK
AND
SUBMIT
MORE
FILES
PLEASE
NOTE
THAT
FILES
WITH
THE
SAME
NAME
WILL
OVERWRITE
PREVIOUSLY
SUBMITTED
FILES
USE
YOUR
PITTID
AS
THE
USERNAME
AND
THE
LAST
FOUR
DIGITS
OF
YOUR
PEOPLESOFT
ID
AS
THE
PASSWORD
THERE
IS
A
REMINDER
SERVICE
VIA
EMAIL
IF
YOU
FORGET
YOUR
PASSWORD
UPLOAD
YOUR
ASSIGNMENT
FILE
TO
THE
APPROPRIATE
ASSIGNMENT
FROM
THE
DROP
DOWN
LIST
CHECK
THROUGH
THE
WEB
INTERFACE
TO
VERIFY
WHAT
IS
THE
FILE
SIZE
THAT
HAS
BEEN
UPLOADED
AND
MAKE
SURE
IT
HAS
BEEN
SUBMITTED
IN
FULL
IT
IS
YOUR
RESPONSIBILITY
TO
MAKE
SURE
THE
ASSIGNMENT
WAS
PROPERLY
SUBMITTED
YOU
MUST
SUBMIT
YOUR
ASSIGNMENT
BEFORE
THE
DUE
DATE
SUNDAY
FEBRUARY
TO
AVOID
GETTING
ANY
LATE
PENALTY
THE
TIMESTAMP
OF
THE
ELECTRONIC
SUBMISSION
WILL
DETERMINE
IF
YOU
HAVE
MET
THE
DEADLINE
THERE
WILL
BE
NO
LATE
SUBMISSIONS
ALLOWED
AFTER
TUESDAY
FEBRUARY
GOAL
GAIN
FAMILIARITY
WITH
THE
WEB
BASED
ASSIGNMENT
SUBMISSION
INTERFACE
AND
THE
CLASS
HONOR
CODE
DESCRIPTION
THE
ASSIGNMENT
IS
TRIVIAL
AND
IS
MEANT
TO
FAMILIARIZE
YOU
WITH
THE
WEB
BASED
ASSIGNMENT
SUBMISSION
INTERFACE
IN
ORDER
TO
AVOID
LAST
MINUTE
PROBLEMS
OR
CASES
WHERE
YOU
THOUGHT
YOU
PROPERLY
SUBMITTED
YOUR
ASSIGNMENT
WHEN
YOU
DID
NOT
YOU
ARE
SIMPLY
ASKED
TO
SUBMIT
ONE
FILE
A
PLAIN
TEXT
A
DOC
OR
A
PDF
FILE
NAMED
PLEDGE
TXT
OR
PLEDGE
DOC
OR
PLEDGE
PDF
WITH
THE
FOLLOWING
PLEDGE
DATA
SCIENTIST
DATA
WIZARD
DATA
WITCH
COMMITMENT
I
READ
THE
SYLLABUS
INCLUDING
THE
POLICIES
ABOUT
CHEATING
AND
ON
MY
HONOR
AS
A
STUDENT
IN
CS
IN
THE
SPRING
TERM
I
WILL
NEITHER
GIVE
NOR
RECEIVE
AID
ON
MY
ASSIGNMENTS
AND
EXAMS
SIGN
YOUR
NAME
DATE
PLEASE
NOTE
THAT
WE
WILL
NOT
GRADE
YOUR
OTHER
ASSIGNMENTS
UNLESS
THIS
ASSIGNMENT
HAS
BEEN
PROPERLY
SUBMITTED
ACADEMIC
HONESTY
THE
WORK
IN
THIS
ASSIGNMENT
IS
TO
BE
DONE
INDEPENDENTLY
BY
YOU
AND
ONLY
YOU
DISCUSSIONS
WITH
OTHER
STUDENTS
ON
THE
ASSIGNMENT
SHOULD
BE
LIMITED
TO
UNDERSTANDING
THE
STATEMENT
OF
THE
PROBLEM
CHEATING
IN
ANY
WAY
INCLUDING
GIVING
YOUR
WORK
TO
SOMEONE
ELSE
WILL
RESULT
IN
AN
F
FOR
THE
COURSE
AND
A
REPORT
TO
THE
APPROPRIATE
UNIVERSITY
AUTHORITY
FOR
FURTHER
DISCIPLINARY
ACTION
HOW
TO
SUBMIT
YOUR
ASSIGNMENT
WE
WILL
USE
A
WEB
BASED
ASSIGNMENT
SUBMISSION
INTERFACE
TO
SUBMIT
YOUR
ASSIGNMENT
GO
TO
THE
CLASS
WEB
PAGE
HTTP
ORG
AND
CLICK
THE
SUBMIT
BUTTON
YOU
CAN
SUBMIT
UP
TO
FIVE
FILES
AT
A
TIME
YOU
CAN
COME
BACK
AND
SUBMIT
MORE
FILES
PLEASE
NOTE
THAT
FILES
WITH
THE
SAME
NAME
WILL
OVERWRITE
PREVIOUSLY
SUBMITTED
FILES
USE
YOUR
PITTID
AS
THE
USERNAME
AND
THE
LAST
FOUR
DIGITS
OF
YOUR
PEOPLESOFT
ID
AS
THE
PASSWORD
THERE
IS
A
REMINDER
SERVICE
VIA
EMAIL
IF
YOU
FORGET
YOUR
PASSWORD
UPLOAD
YOUR
ASSIGNMENT
FILE
TO
THE
APPROPRIATE
ASSIGNMENT
FROM
THE
DROP
DOWN
LIST
CHECK
THROUGH
THE
WEB
INTERFACE
TO
VERIFY
WHAT
IS
THE
FILE
SIZE
THAT
HAS
BEEN
UPLOADED
AND
MAKE
SURE
IT
HAS
BEEN
SUBMITTED
IN
FULL
IT
IS
YOUR
RESPONSIBILITY
TO
MAKE
SURE
THE
ASSIGNMENT
WAS
PROPERLY
SUBMITTED
YOU
MUST
SUBMIT
YOUR
ASSIGNMENT
BEFORE
THE
DUE
DATE
THURSDAY
JANUARY
TO
AVOID
GETTING
ANY
LATE
PENALTY
THE
TIMESTAMP
OF
THE
ELECTRONIC
SUBMISSION
WILL
DETERMINE
IF
YOU
HAVE
MET
THE
DEADLINE
THERE
WILL
BE
NO
LATE
SUBMISSIONS
ALLOWED
AFTER
SATURDAY
JANUARY
01
INTRODUCTION
CS
SPRING
DATA
WITCHCRAFT
ALEXANDROS
LABRINIDIS
HTTP
LABRINIDIS
CS
PITT
EDU
UNIVERSITY
OF
PITTSBURGH
GRADING
ASSIGNMENTS
ASSIGNMENTS
WITH
PROGRAMMING
CLASS
PARTICIPATION
WILL
USE
SOCRATIVE
SYSTEM
MIDTERM
EXAM
TUE
FEB
SNOW
DAY
THU
FEB
MIDTERM
EXAM
THU
MAR
TERM
PROJECT
DUE
MON
APR
PRESENTATIONS
IN
CLASS
APR
FINAL
EXAM
N
A
INDUSTRIES
THAT
ARE
DATA
DRIVEN
NOW
BUT
WERE
NOT
YEARS
AGO
TRANSPORTATION
MULTIMODAL
REAL
TIME
TRAFFIC
ADVERTISING
PERSONALIZED
TARGET
DEMOGRAPHICS
INSURANCE
CONSUMER
FACING
AIRLINE
PRICING
CONSUMER
FACING
AGGREGATORS
HIRING
ASSESSMENT
INTELLIGENCE
HUNCH
VS
ALGORITHM
HEALTHCARE
PERSONALIZED
MEDICINE
PITT
ME
INITIATIVE
REVIEWS
FOR
SHOPPING
RESTAURANTS
ETC
OBJECTIVES
AFTER
READING
THIS
CHAPTER
AND
COMPLETING
THE
EXERCISES
YOU
WILL
BE
ABLE
TO
EXPLAIN
WHAT
A
CONTROL
STRUCTURE
IS
EXPLAIN
THE
DIFFERENCE
BETWEEN
SEQUENTIAL
SELECTION
AND
ITERATIVE
CONTROL
DESCRIBE
AND
USE
BOOLEAN
OPERATORS
EXPLAIN
THE
NOTION
OF
LOGICALLY
EQUIVALENT
BOOLEAN
EXPRESSIONS
EXPLAIN
WHAT
IS
MEANT
BY
AN
INFINITE
LOOP
EXPLAIN
THE
DIFFERENCE
BETWEEN
A
DEFINITE
AND
INDEFINITE
LOOP
EXPLAIN
THE
USE
OF
INDENTATION
IN
PYTHON
EFFECTIVELY
USE
IF
STATEMENTS
IN
PYTHON
FOR
SELECTION
CONTROL
EFFECTIVELY
IMPLEMENT
MULTI
WAY
SELECTION
IN
PYTHON
EFFECTIVELY
USE
WHILE
STATEMENTS
IN
PYTHON
FOR
ITERATIVE
CONTROL
CHAPTER
CONTENTS
MOTIVATION
FUNDAMENTAL
CONCEPTS
WHAT
IS
A
CONTROL
STRUCTURE
BOOLEAN
EXPRESSIONS
CONDITIONALS
SELECTION
CONTROL
ITERATIVE
CONTROL
COMPUTATIONAL
PROBLEM
SOLVING
CALENDAR
MONTH
PROGRAM
CHAPTER
CONTROL
STRUCTURES
MOTIVATION
THE
FIRST
ELECTRONIC
COMPUTERS
OVER
SIXTY
YEARS
AGO
WERE
REFERRED
TO
AS
ELECTRONIC
BRAINS
THIS
GAVE
THE
MISLEADING
IMPRESSION
THAT
COMPUTERS
COULD
THINK
ALTHOUGH
VERY
COMPLEX
IN
THEIR
DESIGN
COMPUTERS
ARE
MACHINES
THAT
SIMPLY
DO
STEP
BY
STEP
INSTRUCTION
BY
INSTRUCTION
WHAT
THEY
ARE
TOLD
THUS
THERE
IS
NO
MORE
INTELLIGENCE
IN
A
COMPUTER
THAN
WHAT
IT
IS
INSTRUCTED
TO
DO
WHAT
COMPUTERS
CAN
DO
HOWEVER
IS
TO
EXE
CUTE
A
SERIES
OF
INSTRUCTIONS
VERY
QUICKLY
AND
VERY
RELIABLY
IT
IS
THE
SPEED
IN
WHICH
INSTRUCTIONS
CAN
BE
EXECUTED
THAT
GIVES
COMPUTERS
THEIR
POWER
SEE
FIGURE
SINCE
THE
EXECUTION
OF
MANY
SIMPLE
INSTRUCTIONS
CAN
RESULT
IN
VERY
COMPLEX
BEHAVIOR
AND
THUS
THIS
IS
THE
ENTICEMENT
OF
COMPUTING
A
COMPUTER
CAN
ACCOMPLISH
ANY
TASK
FOR
WHICH
THERE
IS
AN
ALGORITHM
FOR
DOING
SO
THE
INSTRUCTIONS
COULD
BE
FOR
SOMETHING
AS
SIMPLE
AS
SORTING
LISTS
OR
AS
AMBITIOUS
AS
PERFORMING
INTELLIGENT
TASKS
THAT
AS
OF
NOW
ONLY
HUMANS
ARE
CAPABLE
OF
PERFORMING
IN
THIS
CHAPTER
WE
LOOK
AT
HOW
TO
CONTROL
THE
ORDER
THAT
INSTRUCTIONS
ARE
EXECUTED
IN
PYTHON
FIGURE
PROCESSING
SPEED
FLOATING
POINT
OPERATIONS
PER
SECOND
FLOPS
FUNDAMENTAL
CONCEPTS
WHAT
IS
A
CONTROL
STRUCTURE
CONTROL
FLOW
IS
THE
ORDER
THAT
INSTRUCTIONS
ARE
EXECUTED
IN
A
PROGRAM
A
CONTROL
STATEMENT
IS
A
STATEMENT
THAT
DETERMINES
THE
CONTROL
FLOW
OF
A
SET
OF
INSTRUCTIONS
THERE
ARE
THREE
FUNDAMENTAL
FORMS
OF
CONTROL
THAT
PROGRAMMING
LANGUAGES
PROVIDE
SEQUENTIAL
CONTROL
SELECTION
CONTROL
AND
ITERATIVE
CONTROL
SEQUENTIAL
CONTROL
IS
AN
IMPLICIT
FORM
OF
CONTROL
IN
WHICH
INSTRUCTIONS
ARE
EXECUTED
IN
THE
ORDER
THAT
THEY
ARE
WRITTEN
A
PROGRAM
CONSISTING
OF
ONLY
SEQUENTIAL
CONTROL
IS
REFERRED
TO
AS
A
STRAIGHT
LINE
PROGRAM
THE
PROGRAM
EXAMPLES
IN
CHAPTER
ARE
ALL
STRAIGHT
LINE
PROGRAMS
SELEC
TION
CONTROL
IS
PROVIDED
BY
A
CONTROL
STATEMENT
THAT
SELECTIVELY
EXECUTES
INSTRUCTIONS
WHILE
ITERATIVE
BOOLEAN
EXPRESSIONS
CONDITIONS
CONTROL
IS
PROVIDED
BY
AN
ITERATIVE
CONTROL
STATEMENT
THAT
REPEATEDLY
EXECUTES
INSTRUCTIONS
EACH
IS
BASED
ON
A
GIVEN
CONDITION
COLLECTIVELY
A
SET
OF
INSTRUCTIONS
AND
THE
CONTROL
STATEMENTS
CONTROLLING
THEIR
EXECUTION
IS
CALLED
A
CONTROL
STRUCTURE
FEW
PROGRAMS
ARE
STRAIGHT
LINE
PROGRAMS
MOST
USE
ALL
THREE
FORMS
OF
CONTROL
DEPICTED
IN
FIGURE
WE
LOOK
AT
SELECTION
CONTROL
AND
ITERATIVE
CONTROL
NEXT
FIGURE
IF
STATEMENT
BOOLEAN
EXPRESSIONS
CONDITIONS
THE
BOOLEAN
DATA
TYPE
CONTAINS
TWO
BOOLEAN
VALUES
DENOTED
AS
TRUE
AND
FALSE
IN
PYTHON
A
BOOLEAN
EXPRESSION
IS
AN
EXPRESSION
THAT
EVALUATES
TO
A
BOOLEAN
VALUE
BOOLEAN
EXPRESSIONS
ARE
USED
TO
DENOTE
THE
CONDITIONS
FOR
SELECTION
AND
ITERATIVE
CONTROL
STATEMENTS
WE
LOOK
AT
THE
USE
OF
BOOLEAN
EXPRESSIONS
NEXT
RELATIONAL
OPERATORS
THE
RELATIONAL
OPERATORS
IN
PYTHON
PERFORM
THE
USUAL
COMPARISON
OPERATIONS
SHOWN
IN
FIGURE
RELATIONAL
EXPRESSIONS
ARE
A
TYPE
OF
BOOLEAN
EXPRESSION
SINCE
THEY
EVALUATE
TO
A
BOOLEAN
RESULT
THESE
OPERATORS
NOT
ONLY
APPLY
TO
NUMERIC
VALUES
BUT
TO
ANY
SET
OF
VALUES
THAT
HAS
AN
ORDERING
SUCH
AS
STRINGS
NOTE
THE
USE
OF
THE
COMPARISON
OPERATOR
FOR
DETERMINING
IF
TWO
VALUES
ARE
EQUAL
THIS
RATHER
THAN
THE
SINGLE
EQUAL
SIGN
IS
USED
SINCE
THE
EQUAL
SIGN
IS
USED
AS
THE
ASSIGNMENT
OPERATOR
THIS
IS
OFTEN
A
SOURCE
OF
CONFUSION
FOR
NEW
PROGRAMMERS
NUM
VARIABLE
NUM
IS
ASSIGNED
THE
VALUE
NUM
VARIABLE
NUM
IS
COMPARED
TO
THE
VALUE
CHAPTER
CONTROL
STRUCTURES
FIGURE
THE
RELATIONAL
OPERATORS
ALSO
IS
USED
FOR
INEQUALITY
SIMPLY
BECAUSE
THERE
IS
NO
KEYBOARD
CHARACTER
FOR
THE
FI
SYMBOL
STRING
VALUES
ARE
ORDERED
BASED
ON
THEIR
CHARACTER
ENCODING
WHICH
NORMALLY
FOLLOWS
A
LEXOGRAPHICAL
DICTIONARY
ORDERING
FOR
EXAMPLE
ALAN
IS
LESS
THAN
BRENDA
SINCE
THE
UNICODE
ASCII
VALUE
FOR
A
IS
AND
B
IS
HOWEVER
ALAN
IS
GREATER
THAN
COMES
AFTER
BRENDA
SINCE
THE
UNICODE
ENCODING
OF
LOWERCASE
LETTERS
COMES
AFTER
THE
ENCODING
OF
UPPERCASE
LETTERS
RECALL
FROM
CHAPTER
THAT
THE
ENCODING
OF
ANY
CHAR
ACTER
CAN
BE
OBTAINED
BY
USE
OF
THE
ORD
FUNCTION
LET
TR
Y
IT
FROM
THE
PYTHON
SHELL
ENTER
THE
FOLLOWING
AND
OBSERVE
THE
RESULTS
HELLO
HELLO
HELLO
ZEBRA
HELLO
ZEBRA
MEMBERSHIP
OPERATORS
PYTHON
PROVIDES
A
CONVENIENT
PAIR
OF
MEMBERSHIP
OPERATORS
THESE
OPERATORS
CAN
BE
USED
TO
EASILY
DETERMINE
IF
A
PARTICULAR
VALUE
OCCURS
WITHIN
A
SPECIFIED
LIST
OF
VALUES
THE
MEMBERSHIP
OPERATORS
ARE
GIVEN
IN
FIGURE
THE
IN
OPERATOR
IS
USED
TO
DETERMINE
IF
A
SPECIFIC
VALUE
IS
IN
A
GIVEN
LIST
RETURNING
TRUE
IF
FOUND
AND
FALSE
OTHERWISE
THE
NOT
IN
OPERATOR
RETURNS
THE
OPPOSITE
RESULT
THE
LIST
OF
VALUES
SURROUNDED
BY
MATCHING
PARENTHESES
IN
THE
FIGURE
ARE
CALLED
TUPLES
IN
PYTHON
TUPLES
AND
LISTS
ARE
COVERED
IN
CHAPTER
BOOLEAN
EXPRESSIONS
CONDITIONS
FIGURE
THE
MEMBERSHIP
OPERATORS
THE
MEMBERSHIP
OPERATORS
CAN
ALSO
BE
USED
TO
CHECK
IF
A
GIVEN
STRING
OCCURS
WITHIN
ANOTHER
STRING
DR
IN
DR
MADISON
TRUE
AS
WITH
THE
RELATIONAL
OPERATORS
THE
MEMBERSHIP
OPERATORS
CAN
BE
USED
TO
CONSTRUCT
BOOLEAN
EXPRESSIONS
BOOLEAN
OPERATORS
GEORGE
BOOLE
IN
THE
MID
DEVELOPED
WHAT
WE
NOW
CALL
BOOLEAN
ALGEBRA
HIS
GOAL
WAS
TO
DEVELOP
AN
ALGEBRA
BASED
ON
TRUE
FALSE
RATHER
THAN
NUMERICAL
VALUES
BOOLEAN
ALGEBRA
CONTAINS
A
SET
OF
BOOLEAN
LOGICAL
OPERATORS
DENOTED
BY
AND
OR
AND
NOT
IN
PYTHON
THESE
LOGICAL
OP
ERATORS
CAN
BE
USED
TO
CONSTRUCT
ARBITRARILY
COMPLEX
BOOLEAN
EXPRESSIONS
THE
BOOLEAN
OPERATORS
ARE
SHOWN
IN
FIGURE
LOGICAL
AND
IS
TRUE
ONLY
WHEN
BOTH
ITS
OPERANDS
ARE
TRUE
OTHERWISE
IT
IS
FALSE
LOGICAL
OR
IS
TRUE
WHEN
EITHER
OR
BOTH
OF
ITS
OPERANDS
ARE
TRUE
AND
THUS
FALSE
ONLY
WHEN
BOTH
OPERANDS
ARE
FALSE
LOGICAL
NOT
SIMPLY
REVERSES
TRUTH
VALUES
NOT
FALSE
EQUALS
TRUE
AND
NOT
TRUE
EQUALS
FALSE
CHAPTER
CONTROL
STRUCTURES
FIGURE
BOOLEAN
LOGIC
TRUTH
TABLE
ONE
MUST
BE
CAUTIOUS
WHEN
USING
BOOLEAN
OPERATORS
FOR
EXAMPLE
IN
MATHEMATICS
TO
DENOTE
THAT
A
VALUE
IS
WITHIN
A
CERTAIN
RANGE
IS
WRITTEN
AS
NUM
IN
MOST
PROGRAMMING
LANGUAGES
HOWEVER
THIS
EXPRESSION
DOES
NOT
MAKE
SENSE
TO
SEE
WHY
LET
ASSUME
THAT
NUM
HAS
THE
VALUE
THE
EXPRESSION
WOULD
THEN
BE
EVALUATED
AS
FOLLOWS
NUM
TRUE
IT
DOES
NOT
MAKE
SENSE
TO
CHECK
IF
TRUE
IS
LESS
THAN
OR
EQUAL
TO
SOME
PROGRAMMING
LANGUAGES
WOULD
GENERATE
A
MIXED
TYPE
EXPRESSION
ERROR
FOR
THIS
THE
CORRECT
WAY
OF
DENOTING
THE
CONDITION
IS
BY
USE
OF
THE
BOOLEAN
AND
OPERATOR
NUM
AND
NUM
IN
SOME
LANGUAGES
SUCH
AS
PYTHON
BOOLEAN
VALUES
TRUE
AND
FALSE
HAVE
INTEGER
VALUES
AND
RESPECTIVELY
IN
SUCH
CASES
THE
EXPRESSION
NUM
WOULD
EVALUATE
TO
TRUE
WOULD
EVALUATE
TO
WHICH
EQUALS
TRUE
THIS
WOULD
NOT
BE
THE
CORRECT
RESULT
FOR
THIS
EXPRESSION
HOWEVER
LET
SEE
WHAT
WE
GET
WHEN
WE
DO
EVALUATE
THIS
EXPRESSION
IN
THE
PYTHON
SHELL
NUM
NUM
FALSE
WE
ACTUALLY
GET
THE
CORRECT
RESULT
FALSE
SO
WHAT
IS
GOING
ON
HERE
THE
ANSWER
IS
THAT
PYTHON
IS
PLAYING
A
TRICK
HERE
FOR
BOOLEAN
EXPRESSIONS
OF
THE
PARTICULAR
FORM
VAR
PYTHON
AUTOMATICALLY
REWRITES
THIS
BEFORE
PERFORMING
THE
EVALUATION
VAR
AND
VAR
THUS
IT
IS
IMPORTANT
TO
NOTE
THAT
EXPRESSIONS
OF
THIS
FORM
ARE
HANDLED
IN
A
SPECIAL
WAY
IN
PYTHON
AND
WOULD
NOT
BE
PROPER
TO
USE
IN
MOST
OTHER
PROGRAMMING
LANGUAGES
ONE
MUST
ALSO
BE
CAREFUL
IN
THE
USE
OF
AND
OR
BOOLEAN
OPERATORS
FOR
EXAMPLE
NOT
NUM
AND
NUM
IS
TRUE
FOR
ANY
VALUE
OF
NUM
AS
IS
NUM
OR
NUM
AND
BOOLEAN
EXPRESSIONS
CONDITIONS
THEREFORE
ARE
NOT
USEFUL
EXPRESSIONS
THE
BOOLEAN
EXPRESSION
NUM
AND
NUM
IS
ALSO
USELESS
SINCE
IT
IS
ALWAYS
FALSE
FINALLY
BOOLEAN
LITERALS
TRUE
AND
FALSE
ARE
NEVER
QUOTED
DOING
SO
WOULD
CAUSE
THEM
TO
BE
TAKEN
AS
STRING
VALUES
TRUE
AND
AS
WE
SAW
BOOLEAN
EXPRESSIONS
DO
NOT
NECESSARILY
CONTAIN
BOOLEAN
OPERATORS
FOR
EXAMPLE
IS
A
BOOLEAN
EXPRESSION
BY
DEFINITION
BOOLEAN
LITERALS
TRUE
AND
FALSE
ARE
BOOLEAN
EXPRESSIONS
AS
WELL
LET
TR
Y
IT
FROM
THE
PYTHON
SHELL
ENTER
THE
FOLLOWING
AND
OBSERVE
THE
RESULTS
TRUE
AND
FALSE
AND
TRUE
OR
FALSE
OR
NOT
TRUE
AND
FALSE
NOT
OR
NOT
TRUE
AND
FALSE
NOT
OR
OPERATOR
PRECEDENCE
AND
BOOLEAN
EXPRESSIONS
THE
OPERATOR
PRECEDENCE
AND
OPERATOR
ASSOCIATIVITY
OF
ARITHMETIC
OPERATORS
WAS
GIVEN
IN
CHAPTER
OPERATOR
PRECEDENCE
ALSO
APPLIES
TO
BOOLEAN
OPERATORS
SINCE
BOOLEAN
EXPRESSIONS
CAN
CONTAIN
ARITHMETIC
AS
WELL
AS
RELATIONAL
AND
BOOLEAN
OPERATORS
THE
PRECEDENCE
OF
ALL
OPERATORS
NEEDS
TO
BE
COLLECTIVELY
APPLIED
AN
UPDATED
OPERATOR
PRECEDENCE
TABLE
IS
GIVEN
IN
FIGURE
FIGURE
OPERATOR
PRECEDENCE
OF
ARITHMETIC
RELATIONAL
AND
BOOLEAN
OPERATORS
CHAPTER
CONTROL
STRUCTURES
AS
BEFORE
IN
THE
TABLE
HIGHER
PRIORITY
OPERATORS
ARE
PLACED
ABOVE
LOWER
PRIORITY
ONES
THUS
WE
SEE
THAT
ALL
ARITHMETIC
OPERATORS
ARE
PERFORMED
BEFORE
ANY
RELATIONAL
OR
BOOLEAN
OPERATOR
TRUE
IN
ADDITION
ALL
OF
THE
RELATIONAL
OPERATORS
ARE
PERFORMED
BEFORE
ANY
BOOLEAN
OPERATOR
AND
TRUE
AND
FALSE
FALSE
OR
TRUE
OR
FALSE
TRUE
AND
AS
WITH
ARITHMETIC
OPERATORS
BOOLEAN
OPERATORS
HAVE
VARIOUS
LEVELS
OF
PRECEDENCE
UNARY
BOOLEAN
OPERATOR
NOT
HAS
HIGHER
PRECEDENCE
THAN
AND
AND
BOOLEAN
OPERATOR
AND
HAS
HIGHER
PRECEDENCE
THAN
OR
AND
OR
TRUE
AND
FALSE
OR
TRUE
FALSE
OR
TRUE
TRUE
NOT
OR
NOT
TRUE
OR
FALSE
FALSE
OR
FALSE
FALSE
AS
WITH
ARITHMETIC
EXPRESSIONS
IT
IS
GOOD
PROGRAMMING
PRACTICE
TO
USE
PARENTHESES
EVEN
IF
NOT
NEEDED
TO
ADD
CLARITY
AND
ENHANCE
READABILITY
THUS
THE
ABOVE
EXPRESSIONS
WOULD
BE
BETTER
WRITTEN
BY
DENOTING
AT
LEAST
SOME
OF
THE
SUBEXPRESSIONS
AND
OR
NOT
OR
IF
NOT
ALL
SUBEXPRESSIONS
AND
OR
NOT
OR
FINALLY
NOTE
FROM
FIGURE
ABOVE
THAT
ALL
RELATIONAL
AND
BOOLEAN
OPERATORS
ASSOCIATE
FROM
LEFT
TO
RIGHT
LET
TR
Y
IT
FROM
THE
PYTHON
SHELL
ENTER
THE
FOLLOWING
AND
OBSERVE
THE
RESULTS
NOT
TRUE
AND
FALSE
AND
NOT
NOT
TRUE
AND
FALSE
OR
TRUE
NOT
OR
SHORT
CIRCUIT
LAZY
EVALUATION
THERE
ARE
DIFFERENCES
IN
HOW
BOOLEAN
EXPRESSIONS
ARE
EVALUATED
IN
DIFFERENT
PROGRAMMING
LANGUAGES
FOR
LOGICAL
AND
IF
THE
FIRST
OPERAND
EVALUATES
TO
FALSE
THEN
REGARDLESS
OF
THE
VALUE
OF
THE
SECOND
OPERAND
THE
EXPRESSION
IS
FALSE
SIMILARLY
FOR
LOGICAL
OR
IF
THE
FIRST
OPERAND
EVALUATES
TO
TRUE
REGARDLESS
OF
THE
VALUE
OF
THE
SECOND
OPERAND
THE
EXPRESSION
IS
TRUE
BECAUSE
OF
THIS
SOME
PROGRAMMING
LANGUAGES
BOOLEAN
EXPRESSIONS
CONDITIONS
DO
NOT
EVALUATE
THE
SECOND
OPERAND
WHEN
THE
RESULT
IS
KNOWN
BY
THE
FIRST
OPERAND
ALONE
CALLED
SHORT
CIRCUIT
LAZY
EVALUATION
SUBTLE
ERRORS
CAN
RESULT
IF
THE
PROGRAMMER
IS
NOT
AWARE
OF
THIS
FOR
EXAMPLE
THE
EXPRESSION
IF
N
AND
N
TOLERANCE
WOULD
EVALUATE
WITHOUT
ERROR
FOR
ALL
VALUES
OF
N
WHEN
SHORT
CIRCUIT
EVALUATION
IS
USED
IF
PROGRAM
MING
IN
A
LANGUAGE
NOT
USING
SHORT
CIRCUIT
EVALUATION
HOWEVER
A
DIVIDE
BY
ZERO
ERROR
WOULD
RESULT
WHEN
N
IS
EQUAL
TO
IN
SUCH
CASES
THE
PROPER
CONSTRUCTION
WOULD
BE
IF
N
IF
N
TOLERANCE
IN
THE
PYTHON
PROGRAMMING
LANGUAGE
SHORT
CIRCUIT
EVALUATION
IS
USED
LOGICALLY
EQUIVALENT
BOOLEAN
EXPRESSIONS
IN
NUMERICAL
ALGEBRA
THERE
ARE
ARITHMETICALLY
EQUIVALENT
EXPRESSIONS
OF
DIFFERENT
FORM
FOR
EXAMPLE
X
Y
Z
AND
XY
XZ
ARE
EQUIVALENT
FOR
ANY
NUMERICAL
VALUES
X
Y
AND
Z
SIMILARLY
THERE
ARE
LOGICALLY
EQUIVALENT
BOOLEAN
EXPRESSIONS
OF
DIFFERENT
FORM
WE
GIVE
SOME
EXAMPLES
IN
FIGURE
FIGURE
LOGICALLY
EQUIVALENT
CONDITIONAL
EXPRESSIONS
CHAPTER
CONTROL
STRUCTURES
THE
RANGE
OF
VALUES
SATISFYING
EACH
SET
OF
EXPRESSIONS
IS
SHADED
IN
THE
FIGURE
BOTH
EXPRESSIONS
IN
ARE
TRUE
FOR
ANY
VALUE
EXCEPT
THE
EXPRESSIONS
IN
ARE
TRUE
FOR
ANY
VALUE
EXCEPT
AND
THE
EXPRESSIONS
IN
ARE
ONLY
TRUE
FOR
VALUES
IN
THE
RANGE
THROUGH
INCLUSIVE
THE
EXPRESSIONS
IN
ARE
TRUE
FOR
ALL
VALUES
EXCEPT
THROUGH
INCLUSIVE
FIGURE
LISTS
COMMON
FORMS
OF
LOGICALLY
EQUIVALENT
EXPRESSIONS
FIGURE
FORMS
OF
LOGICALLY
EQUIVALENT
BOOLEAN
EXPRESSIONS
THE
LAST
TWO
EQUIVALENCES
ABOVE
ARE
REFERRED
TO
AS
DE
MORGAN
LAWS
SELF
TEST
QUESTIONS
THREE
FORMS
OF
CONTROL
IN
PROGRAMMING
ARE
SEQUENTIAL
SELECTION
AND
CONTROL
WHICH
OF
THE
FOLLOWING
EXPRESSIONS
EVALUATE
TO
TRUE
A
B
C
D
E
WHICH
OF
THE
FOLLOWING
BOOLEAN
EXPRESSIONS
EVALUATE
TO
TRUE
A
DAVE
ED
B
DAVE
ED
C
DAVE
DALE
SELECTION
CONTROL
WHAT
IS
THE
VALUE
OF
VARIABLE
NUM
AFTER
THE
FOLLOWING
IS
EXECUTED
NUM
NUM
NUM
NUM
NUM
NUM
WHAT
DOES
THE
FOLLOWING
EXPRESSION
EVALUATE
TO
FOR
NAME
EQUAL
TO
ANN
NAME
IN
JACOB
MARYANN
THOMAS
EVALUATE
THE
FOLLOWING
BOOLEAN
EXPRESSIONS
USING
THE
OPERATOR
PRECEDENCE
RULES
OF
PYTHON
A
AND
B
AND
OR
WHICH
ONE
OF
THE
FOLLOWING
BOOLEAN
EXPRESSIONS
IS
NOT
LOGICALLY
EQUIVALENT
TO
THE
OTHER
TWO
A
NOT
NUM
OR
NUM
B
NUM
AND
NUM
C
NUM
AND
NUM
ANSWERS
ITERATIVE
A
B
D
A
FALSE
A
TRUE
B
FALSE
B
SELECTION
CONTROL
A
SELECTION
CONTROL
STATEMENT
IS
A
CONTROL
STATEMENT
PROVIDING
SELECTIVE
EXECUTION
OF
INSTRUCTIONS
A
SELECTION
CONTROL
STRUCTURE
IS
A
GIVEN
SET
OF
INSTRUCTIONS
AND
THE
SELECTION
CONTROL
STATEMENT
CONTROLLING
THEIR
EXECUTION
WE
LOOK
AT
THE
IF
STATEMENT
PROVIDING
SELECTION
CONTROL
IN
PYTHON
NEXT
IF
STATEMENT
AN
IF
STATEMENT
IS
A
SELECTION
CONTROL
STATEMENT
BASED
ON
THE
VALUE
OF
A
GIVEN
BOOLEAN
EXPRESSION
THE
IF
STATEMENT
IN
PYTHON
IS
DEPICTED
IN
FIGURE
FIGURE
IF
STATEMENT
NOTE
THAT
IF
STATEMENTS
MAY
OMIT
THE
ELSE
PART
A
VERSION
OF
THE
TEMPERATURE
CONVERSION
PROGRAM
FROM
CHAPTER
USING
AN
IF
STATEMENT
IS
GIVEN
IN
FIGURE
THIS
PROGRAM
EXTENDS
THE
ORIGINAL
PROGRAM
BY
CONVERTING
CELSIUS
TO
FAHRENHEIT
AS
WELL
AS
FAHRENHEIT
TO
CELSIUS
THE
IF
STATEMENT
LINE
SELECTS
THE
APPROPRIATE
SET
OF
INSTRUCTIONS
TO
EXECUTE
BASED
ON
USER
INPUT
F
FOR
FAHRENHEIT
TO
CELSIUS
AND
C
FOR
CELSIUS
TO
FAHRENHEIT
A
STATEMENT
THAT
CONTAINS
OTHER
STATEMENTS
SUCH
AS
THE
IF
STATEMENT
IS
CALLED
A
COMPOUND
STATEMENT
WE
LOOK
AT
PYTHON
USE
OF
INDENTATION
IN
COMPOUND
STATEMENTS
NEXT
CHAPTER
CONTROL
STRUCTURES
FIGURE
TEMPERATURE
CONVERSION
TWO
WAY
CONVERSION
INDENTATION
IN
PYTHON
ONE
FAIRLY
UNIQUE
ASPECT
OF
PYTHON
IS
THAT
THE
AMOUNT
OF
INDENTATION
OF
EACH
PROGRAM
LINE
IS
SIGNIFI
CANT
IN
MOST
PROGRAMMING
LANGUAGES
INDENTATION
HAS
NO
AFFECT
ON
PROGRAM
LOGIC
IT
IS
SIMPLY
USED
TO
ALIGN
PROGRAM
LINES
TO
AID
READABILITY
IN
PYTHON
HOWEVER
INDENTATION
IS
USED
TO
ASSOCIATE
AND
GROUP
STATEMENTS
AS
SHOWN
IN
FIGURE
FIGURE
COMPOUND
STATEMENT
IN
PYTHON
A
HEADER
IN
PYTHON
IS
A
SPECIFIC
KEYWORD
FOLLOWED
BY
A
COLON
IN
THE
FIGURE
THE
IF
ELSE
STATEMENT
CONTAINS
TWO
HEADERS
IF
WHICH
F
CONTAINING
KEYWORD
IF
AND
ELSE
CONSISTING
ONLY
OF
THE
KEYWORD
ELSE
HEADERS
THAT
ARE
PART
OF
THE
SAME
COMPOUND
STATEMENT
MUST
BE
INDENTED
THE
SAME
AMOUNT
OTHERWISE
A
SYNTAX
ERROR
WILL
RESULT
SELECTION
CONTROL
THE
SET
OF
STATEMENTS
FOLLOWING
A
HEADER
IN
PYTHON
IS
CALLED
A
SUITE
COMMONLY
CALLED
A
BLOCK
THE
STATEMENTS
OF
A
GIVEN
SUITE
MUST
ALL
BE
INDENTED
THE
SAME
AMOUNT
A
HEADER
AND
ITS
ASSOCIATED
SUITE
ARE
TOGETHER
REFERRED
TO
AS
A
CLAUSE
A
COMPOUND
STATEMENT
IN
PYTHON
MAY
CONSIST
OF
ONE
OR
MORE
CLAUSES
WHILE
FOUR
SPACES
IS
COMMONLY
USED
FOR
EACH
LEVEL
OF
INDENTATION
ANY
NUM
BER
OF
SPACES
MAY
BE
USED
AS
SHOWN
IN
FIGURE
FIGURE
COMPOUND
STATEMENTS
AND
INDENTATION
IN
PYTHON
BOTH
A
AND
B
IN
THE
FIGURE
ARE
PROPERLY
INDENTED
IN
A
BOTH
SUITES
HAVE
THE
SAME
AMOUNT
OF
INDENTATION
IN
B
EACH
SUITE
HAS
A
DIFFERENT
AMOUNT
OF
INDENTATION
THIS
IS
SYNTACTICALLY
CORRECT
ALTHOUGH
NOT
GOOD
PRACTICE
SINCE
THE
AMOUNT
OF
INDENTATION
WITHIN
EACH
SUITE
IS
CONSISTENT
BOTH
C
AND
D
ARE
EXAMPLES
OF
INVALID
INDENTATION
AND
THUS
SYNTACTICALLY
INCORRECT
IN
C
THE
IF
AND
ELSE
HEADERS
OF
THE
IF
STATEMENT
ARE
NOT
INDENTED
THE
SAME
AMOUNT
IN
D
THE
HEADERS
ARE
INDENTED
THE
SAME
AMOUNT
HOWEVER
THE
STATEMENTS
WITHIN
THE
SECOND
SUITE
ARE
NOT
PROPERLY
ALIGNED
FINALLY
NOTE
THAT
THE
SUITE
FOLLOWING
A
HEADER
CAN
ITSELF
BE
A
COMPOUND
STATEMENT
ANOTHER
IF
STATEMENT
FOR
EXAMPLE
THUS
COMPOUND
STATEMENTS
MAY
BE
NESTED
ONE
WITHIN
ANOTHER
WE
LOOK
AT
NESTED
COM
POUNDED
STATEMENTS
NEXT
FROM
IDLE
CREATE
AND
RUN
A
PYTHON
PROGRAM
CONTAINING
THE
CODE
ON
THE
LEFT
AND
OBSERVE
THE
RESULTS
MODIFY
AND
RUN
THE
CODE
TO
MATCH
THE
VERSION
ON
THE
RIGHT
AND
AGAIN
OBSERVE
THE
RESULTS
MAKE
SURE
TO
INDENT
THE
CODE
EXACTLY
AS
SHOWN
GRADE
IF
GRADE
PRINT
PASSING
GRADE
ELSE
PRINT
FAILING
GRADE
GRADE
IF
GRADE
PRINT
PASSING
GRADE
ELSE
PRINT
FAILING
GRADE
MULTI
WAY
SELECTION
IN
THIS
SECTION
WE
LOOK
AT
THE
TWO
MEANS
OF
CONSTRUCTING
MULTI
WAY
SELECTION
IN
PYTHON
ONE
INVOLVING
MULTIPLE
NESTED
IF
STATEMENTS
AND
THE
OTHER
INVOLVING
A
SINGLE
IF
STATEMENT
AND
THE
USE
OF
ELIF
HEADERS
CHAPTER
CONTROL
STRUCTURES
NESTED
IF
STATEMENTS
THERE
ARE
OFTEN
TIMES
WHEN
SELECTION
AMONG
MORE
THAN
TWO
SETS
OF
STATEMENTS
SUITES
IS
NEEDED
FOR
SUCH
SITUATIONS
IF
STATEMENTS
CAN
BE
NESTED
RESULTING
IN
MULTI
WAY
SELECTION
AN
EXAMPLE
OF
THIS
IS
GIVEN
IN
FIGURE
FIGURE
MULTI
WAY
SELECTION
USING
IF
STATEMENTS
THE
NESTED
IF
STATEMENTS
ON
THE
RIGHT
RESULT
IN
A
WAY
SELECTION
IN
THE
FIRST
IF
STATEMENT
IF
VARIABLE
GRADE
IS
GREATER
THAN
OR
EQUAL
TO
THEN
GRADE
OF
A
IS
DISPLAYED
THEREFORE
ITS
ELSE
SUITE
IS
NOT
EXECUTED
CONTAINING
THE
REMAINING
IF
STATEMENTS
IF
GRADE
IS
LESS
THAN
THE
ELSE
SUITE
IS
EXECUTED
IF
GRADE
IS
GREATER
THAN
OR
EQUAL
TO
GRADE
OF
B
IS
DISPLAYED
AND
THE
REST
OF
THE
IF
STATEMENTS
IN
ITS
ELSE
SUITE
ARE
SKIPPED
AND
SO
ON
THE
FINAL
ELSE
CLAUSE
IS
EXECUTED
ONLY
IF
ALL
THE
PREVIOUS
CONDITIONS
FAIL
DISPLAYING
GRADE
OF
F
THIS
IS
REFERRED
TO
AS
A
CATCH
ALL
CASE
AS
AN
EXAMPLE
USE
OF
NESTED
IF
STATEMENTS
AND
A
CHECK
FOR
INVALID
INPUT
IN
A
PROGRAM
WE
GIVE
A
REVISED
VER
SION
OF
THE
TEMPERATURE
CONVERSION
PROGRAM
FROM
FIGURE
IN
FIGURE
FIGURE
TEMPERATURE
CONVERSION
PROGRAM
INPUT
ERROR
DECTECTION
SELECTION
CONTROL
IN
THIS
VERSION
THERE
IS
A
CATCH
ALL
CLAUSE
LINE
FOR
HANDLING
INVALID
INPUT
WE
NEXT
LOOK
AT
A
MORE
CONCISE
MEANS
OF
DENOTING
MULTI
WAY
SELECTION
IN
PYTHON
THE
ELIF
HEADER
IN
PYTHON
IF
STATEMENTS
MAY
CONTAIN
ONLY
ONE
ELSE
HEADER
THUS
IF
ELSE
STATEMENTS
MUST
BE
NESTED
TO
ACHIEVE
MULTI
WAY
SELECTION
PYTHON
HOWEVER
HAS
ANOTHER
HEADER
CALLED
ELIF
ELSE
IF
THAT
PROVIDES
MULTI
WAY
SELECTION
IN
A
SINGLE
IF
STATEMENT
SHOWN
IN
FIGURE
ALL
THE
HEADERS
OF
AN
IF
ELIF
STATEMENT
ARE
INDENTED
THE
SAME
AMOUNT
THUS
AVOIDING
THE
DEEPLY
NESTED
LEVELS
OF
INDENTATION
WITH
THE
USE
OF
IF
ELSE
STATEMENTS
A
FINAL
ELSE
CLAUSE
MAY
BE
USED
FOR
CATCH
ALL
SITUATIONS
WE
NEXT
LOOK
AT
ITERATIVE
CONTROL
IN
PYTHON
FIGURE
THE
ELIF
HEADER
IN
PYTHON
CHAPTER
CONTROL
STRUCTURES
LET
APPLY
IT
NUMBER
OF
DAYS
IN
MONTH
PROGRAM
THE
FOLLOWING
PYTHON
PROGRAM
FIGURE
PROMPTS
THE
USER
FOR
A
GIVEN
MONTH
AND
YEAR
FOR
FEBRUARY
AND
DISPLAYS
HOW
MANY
DAYS
ARE
IN
THE
MONTH
THIS
PROGRAM
UTILIZES
THE
FOLLOWING
PRO
GRAMMING
FEATURES
IF
STATEMENT
ELIF
HEADER
LINES
PROVIDE
THE
PROGRAM
HEADER
AND
PROGRAM
GREETING
ON
LINE
VARIABLE
IS
INITIALIZED
TO
TRUE
FOR
THE
INPUT
ERROR
CHECKING
PERFORMED
LINE
PROMPTS
THE
USER
FOR
THE
MONTH
READ
AS
AN
INTEGER
VALUE
AND
STORES
IN
VARIABLE
MONTH
ON
LINE
THE
MONTH
OF
FEBRUARY
IS
CHECKED
FOR
FEBRUARY
IS
THE
ONLY
MONTH
THAT
MAY
HAVE
A
DIFFERENT
NUMBER
OF
DAYS
FOR
A
REGULAR
YEAR
AND
FOR
LEAP
YEARS
THUS
WHEN
FEBRUARY
IS
ENTERED
THE
USER
IS
ALSO
PROMPTED
FOR
THE
YEAR
LINE
IF
THE
YEAR
IS
A
LEAP
YEAR
THEN
VARIABLE
IS
SET
TO
OTHERWISE
IT
IS
SET
TO
GENERALLY
IF
A
YEAR
IS
EVENLY
DIVISIBLE
BY
THEN
IT
IS
A
LEAP
YEAR
HOWEVER
THERE
ARE
A
COUPLE
OF
EXCEPTIONS
IF
THE
YEAR
IS
DIVISIBLE
BY
BUT
IS
ALSO
DIVISIBLE
BY
THEN
IT
IS
NOT
A
LEAP
YEAR
UNLESS
IT
IS
ALSO
DIVISIBLE
BY
THEN
IT
IS
FOR
EXAMPLE
AND
WERE
LEAP
YEARS
BUT
WAS
NOT
THIS
CONDITION
IS
GIVEN
BELOW
YEAR
AND
NOT
YEAR
OR
YEAR
THUS
THE
CONDITIONS
FOR
WHICH
THIS
BOOLEAN
EXPRESSION
IS
TRUE
ARE
AND
YEAR
AND
NOT
YEAR
YEAR
AND
YEAR
SELECTION
CONTROL
FIGURE
NUMBER
OF
DAYS
IN
MONTH
PROGRAM
CHAPTER
CONTROL
STRUCTURES
LINE
CHECKS
IF
MONTH
IS
EQUAL
TO
OR
IF
TRUE
THEN
IS
ASSIGNED
TO
IF
NOT
TRUE
LINE
CHECKS
IF
MONTH
IS
EQUAL
TO
OR
ALL
THE
REMAINING
MONTHS
EXCEPT
FEBRUARY
IF
TRUE
THEN
IS
ASSIGNED
TO
IF
NOT
TRUE
THEN
AN
INVALID
MONTH
NUMBER
WAS
ENTERED
AND
IS
SET
TO
FALSE
FINALLY
THE
NUMBER
OF
DAYS
IN
THE
MONTH
IS
DIS
PLAYED
ONLY
IF
THE
INPUT
IS
VALID
LINE
SELF
TEST
QUESTIONS
ALL
IF
STATEMENTS
MUST
CONTAIN
EITHER
AN
ELSE
OR
ELIF
HEADER
TRUE
FALSE
A
COMPOUND
STATEMENT
IS
A
A
STATEMENT
THAT
SPANS
MORE
THAN
ONE
LINE
B
A
STATEMENT
THAT
CONTAINS
OTHER
STATEMENTS
C
A
STATEMENT
THAT
CONTAINS
AT
LEAST
ONE
ARITHMETIC
EXPRESSION
WHICH
OF
THE
FOLLOWING
STATEMENTS
ARE
TRUE
REGARDING
HEADERS
IN
PYTHON
A
HEADERS
BEGIN
WITH
A
KEYWORD
AND
END
WITH
A
COLON
B
HEADERS
ALWAYS
OCCUR
IN
PAIRS
C
ALL
HEADERS
OF
THE
SAME
COMPOUND
STATEMENT
MUST
BE
INDENTED
THE
SAME
AMOUNT
WHICH
OF
THE
FOLLOWING
STATEMENTS
IS
TRUE
A
STATEMENTS
WITHIN
A
SUITE
CAN
BE
INDENTED
A
DIFFERENT
AMOUNT
B
STATEMENTS
WITHIN
A
SUITE
CAN
BE
INDENTED
A
DIFFERENT
AMOUNT
AS
LONG
AS
ALL
HEADERS
IN
THE
STATEMENT
THAT
IT
OCCURS
IN
ARE
INDENTED
THE
SAME
AMOUNT
C
ALL
HEADERS
MUST
BE
INDENTED
THE
SAME
AMOUNT
AS
ALL
OTHER
HEADERS
IN
THE
SAME
STATEMENT
AND
ALL
STATEMENTS
IN
A
GIVEN
SUITE
MUST
BE
INDENTED
THE
SAME
AMOUNT
THE
ELIF
HEADER
ALLOWS
FOR
A
MULTI
WAY
SELECTION
THAT
CANNOT
BE
ACCOMPLISHED
OTHERWISE
B
MULTI
WAY
SELECTION
AS
A
SINGLE
IF
STATEMENT
C
THE
USE
OF
A
CATCH
ALL
CASE
IN
MULTI
WAY
SELECTION
ANSWERS
FALSE
B
A
C
C
B
ITERATIVE
CONTROL
AN
ITERATIVE
CONTROL
STATEMENT
IS
A
CONTROL
STATEMENT
PROVIDING
THE
REPEATED
EXECUTION
OF
A
SET
OF
INSTRUCTIONS
AN
ITERATIVE
CONTROL
STRUCTURE
IS
A
SET
OF
INSTRUCTIONS
AND
THE
ITERATIVE
CONTROL
STATEMENT
CONTROLLING
THEIR
EXECUTION
BECAUSE
OF
THEIR
REPEATED
EXECUTION
ITERATIVE
CONTROL
STRUCTURES
ARE
COMMONLY
REFERRED
TO
AS
LOOPS
WE
LOOK
AT
ONE
SPECIFIC
ITERATIVE
CONTROL
STATE
MENT
NEXT
THE
WHILE
STATEMENT
ITERATIVE
CONTROL
WHILE
STATEMENT
A
WHILE
STATEMENT
IS
AN
ITERATIVE
CONTROL
STATEMENT
THAT
REPEATEDLY
EXECUTES
A
SET
OF
STATEMENTS
BASED
ON
A
PROVIDED
BOOLEAN
EXPRESSION
CONDITION
ALL
ITERATIVE
CONTROL
NEEDED
IN
A
PROGRAM
CAN
BE
ACHIEVED
BY
USE
OF
THE
WHILE
STATEMENT
FIGURE
CONTAINS
AN
EXAMPLE
OF
A
WHILE
LOOP
IN
PYTHON
THAT
SUMS
THE
FIRST
N
INTEGERS
FOR
A
GIVEN
POSITIVE
VALUE
N
ENTERED
BY
THE
USER
FIGURE
THE
WHILE
STATEMENT
IN
PYTHON
AS
LONG
AS
THE
CONDITION
OF
A
WHILE
STATEMENT
IS
TRUE
THE
STATEMENTS
WITHIN
THE
LOOP
ARE
RE
EXECUTED
ONCE
THE
CONDITION
BECOMES
FALSE
THE
ITERATION
TERMINATES
AND
CONTROL
CONTINUES
WITH
THE
FIRST
STATE
MENT
AFTER
THE
WHILE
LOOP
NOTE
THAT
IT
IS
POSSIBLE
THAT
THE
FIRST
TIME
A
LOOP
IS
REACHED
THE
CONDITION
MAY
BE
FALSE
AND
THEREFORE
THE
LOOP
WOULD
NEVER
BE
EXECUTED
SUPPOSE
FOR
THE
EXAMPLE
IN
THE
FIGURE
THAT
THE
USER
ENTERS
THE
VALUE
SINCE
VARIABLE
CURRENT
IS
INITIALIZED
TO
REFERRED
TO
AS
A
COUNTER
VARIABLE
THE
FIRST
TIME
THE
WHILE
STATEMENT
IS
REACHED
CURRENT
IS
TRUE
THUS
THE
STATEMENTS
WITHIN
THE
LOOP
ARE
EXECUTED
AND
SUM
IS
UPDATED
TO
SUM
CURRENT
SINCE
SUM
IS
INITIALIZED
TO
SUM
BECOMES
SIMILARLY
CURRENT
IS
UPDATED
AND
ASSIGNED
TO
AFTER
THE
FIRST
TIME
THROUGH
THE
LOOP
CONTROL
RETURNS
TO
THE
TOP
OF
THE
LOOP
THE
CONDI
TION
IS
AGAIN
FOUND
TO
BE
TRUE
AND
THUS
THE
LOOP
IS
EXECUTED
A
SECOND
TIME
IN
THIS
ITERATION
BOTH
SUM
AND
CURRENT
BECOME
IN
THE
NEXT
ITERATION
THE
CONDITION
IS
STILL
TRUE
AND
THEREFORE
THE
LOOP
IS
EXECUTED
A
THIRD
TIME
THIS
TIME
SUM
BECOMES
AND
CURRENT
BECOMES
THUS
WHEN
CONTROL
RETURNS
TO
THE
TOP
OF
THE
LOOP
THE
CONDITION
IS
FALSE
AND
THE
LOOP
TERMINATES
THE
FINAL
VALUE
OF
SUM
THEREFORE
IS
THIS
PROCESS
IS
SUMMARIZED
IN
FIGURE
FIGURE
ITERATIVE
STEPS
FOR
ADDING
FIRST
THREE
INTEGERS
CHAPTER
CONTROL
STRUCTURES
INPUT
ERROR
CHECKING
THE
WHILE
STATEMENT
IS
WELL
SUITED
FOR
INPUT
ERROR
CHECKING
IN
A
PROGRAM
THIS
IS
DEMONSTRATED
IN
THE
REVISED
VERSION
OF
THE
TEMPERATURE
CONVERSION
PROGRAM
FROM
FIGURE
REPRODUCED
IN
FIGURE
FIGURE
TEMPERATURE
CONVERSION
PROGRAM
INVALID
INPUT
CHECKING
THE
DIFFERENCE
IN
THIS
PROGRAM
FROM
THE
PREVIOUS
VERSION
IS
THAT
RATHER
THAN
TERMINATING
ON
INVALID
INPUT
THE
PROGRAM
CONTINUES
TO
PROMPT
THE
USER
UNTIL
A
VALID
TEMPERATURE
CONVERSION
F
OR
C
IS
ENTERED
THUS
THE
ASSOCIATED
INPUT
STATEMENT
IS
CONTAINED
WITHIN
A
WHILE
LOOP
THAT
KEEPS
ITERAT
ING
AS
LONG
AS
VARIABLE
WHICH
CONTAINS
AN
INVALID
VALUE
ONCE
THE
USER
ENTERS
A
PROPER
VALUE
THE
LOOP
TERMINATES
ALLOWING
THE
PROGRAM
TO
CONTINUE
IN
IDLE
CREATE
AND
RUN
A
SIMPLE
PROGRAM
CONTAINING
THE
CODE
BELOW
AND
OBSERVE
THE
RESULTS
MAKE
SURE
TO
INDENT
THE
CODE
EXACTLY
AS
SHOWN
N
SUM
CURRENT
WHILE
CURRENT
N
SUM
SUM
CURRENT
CURRENT
CURRENT
PRINT
SUM
N
SUM
CURRENT
WHILE
CURRENT
N
SUM
SUM
CURRENT
CURRENT
CURRENT
PRINT
SUM
ITERATIVE
CONTROL
INFINITE
LOOPS
AN
INFINITE
LOOP
IS
AN
ITERATIVE
CONTROL
STRUCTURE
THAT
NEVER
TERMINATES
OR
EVENTUALLY
TERMINATES
WITH
A
SYSTEM
ERROR
INFINITE
LOOPS
ARE
GENERALLY
THE
RESULT
OF
PROGRAMMING
ERRORS
FOR
EXAMPLE
IF
THE
CONDITION
OF
A
WHILE
LOOP
CAN
NEVER
BE
FALSE
AN
INFINITE
LOOP
WILL
RESULT
WHEN
EXECUTED
CONSIDER
IF
THE
PROGRAM
SEGMENT
IN
FIGURE
REPRODUCED
IN
FIGURE
OMITTED
THE
STATEMENT
INCREMENTING
VARIABLE
CURRENT
SINCE
CURRENT
IS
INITIALIZED
TO
IT
WOULD
REMAIN
IN
ALL
ITERATIONS
CAUSING
THE
EXPRESSION
CURRENT
N
TO
BE
ALWAYS
BE
TRUE
THUS
THE
LOOP
WOULD
NEVER
TERMINATE
FIGURE
INFINITE
LOOP
SUCH
INFINITE
LOOPS
CAN
CAUSE
A
PROGRAM
TO
HANG
THAT
IS
TO
BE
UNRESPONSIVE
TO
THE
USER
IN
SUCH
CASES
THE
PROGRAM
MUST
BE
TERMINATED
BY
USE
OF
SOME
SPECIAL
KEYBOARD
INPUT
SUCH
AS
CTRL
C
TO
INTERRUPT
THE
EXECUTION
FROM
IDLE
CREATE
AND
RUN
A
SIMPLE
PROGRAM
CONTAINING
THE
CODE
BELOW
AND
OBSERVE
THE
RESULTS
MAKE
SURE
TO
INDENT
THE
CODE
EXACTLY
AS
SHOWN
TO
TERMINATE
AN
EXECUTING
LOOP
HIT
CTRL
C
WHILE
TRUE
PRINT
LOOPING
N
SUM
CURRENT
WHILE
CURRENT
N
SUM
SUM
CURRENT
PRINT
SUM
N
SUM
CURRENT
WHILE
CURRENT
N
SUM
SUM
CURRENT
N
N
PRINT
SUM
CHAPTER
CONTROL
STRUCTURES
DEFINITE
VS
INDEFINITE
LOOPS
A
DEFINITE
LOOP
IS
A
PROGRAM
LOOP
IN
WHICH
THE
NUMBER
OF
TIMES
THE
LOOP
WILL
ITERATE
CAN
BE
DETERMINED
BEFORE
THE
LOOP
IS
EXECUTED
FOR
EXAMPLE
THE
WHILE
LOOP
INTRODUCED
IN
FIGURE
IS
A
DEFINITE
LOOP
SUM
CURRENT
N
INPUT
ENTER
VALUE
WHILE
CURRENT
N
SUM
SUM
CURRENT
CURRENT
CURRENT
ALTHOUGH
IT
IS
NOT
KNOWN
WHAT
THE
VALUE
OF
N
WILL
BE
UNTIL
THE
INPUT
STATEMENT
IS
EXECUTED
ITS
VALUE
IS
KNOWN
BY
THE
TIME
THE
WHILE
LOOP
IS
REACHED
THUS
IT
WILL
EXECUTE
N
TIMES
AN
INDEFINITE
LOOP
IS
A
PROGRAM
LOOP
IN
WHICH
THE
NUMBER
OF
TIMES
THAT
THE
LOOP
WILL
ITERATE
CANNOT
BE
DETERMINED
BEFORE
THE
LOOP
IS
EXECUTED
CONSIDER
THE
WHILE
LOOP
IN
THE
TEMPERATURE
CON
VERSION
PROGRAM
OF
FIGURE
WHICH
INPUT
ENTER
SELECTION
WHILE
WHICH
F
AND
WHICH
C
WHICH
INPUT
PLEASE
ENTER
F
OR
C
IN
THIS
CASE
THE
NUMBER
OF
TIMES
THAT
THE
LOOP
WILL
BE
EXECUTED
DEPENDS
ON
HOW
MANY
TIMES
THE
USER
MISTYPES
THE
INPUT
THUS
A
WHILE
STATEMENT
CAN
BE
USED
TO
CONSTRUCT
BOTH
DEFINITE
AND
INDEFINITE
LOOPS
IN
THE
NEXT
CHAPTER
WE
LOOK
AT
THE
FOR
STATEMENT
SPECIFICALLY
SUITED
FOR
THE
CONSTRUCTION
OF
DEFINITE
LOOPS
BOOLEAN
FLAGS
AND
INDEFINITE
LOOPS
OFTEN
THE
CONDITION
OF
A
GIVEN
WHILE
LOOP
IS
DENOTED
BY
A
SINGLE
BOOLEAN
VARIABLE
CALLED
A
BOOLEAN
FLAG
THIS
IS
SHOWN
IN
FIGURE
BOOLEAN
VARIABLE
IS
A
BOOLEAN
FLAG
CONTROLLING
THE
WHILE
LOOP
AT
LINE
IF
THE
MILEAGE
OF
THE
LAST
OIL
CHANGE
IS
GREATER
THAN
THE
CURRENT
MILEAGE
AN
ERROR
MESSAGE
IS
DISPLAYED
LINES
AND
THE
WHILE
LOOP
IS
RE
EXECUTED
IF
THE
CURRENT
MILEAGE
IS
GREATER
THAN
OR
EQUAL
TO
THE
MILEAGE
OF
THE
LAST
OIL
CHANGE
IS
SET
TO
THIS
DIFFERENCE
AND
ENTRIES
IS
SET
TO
TRUE
CAUSING
THE
LOOP
TO
TERMINATE
THUS
LINES
DISPLAY
EITHER
THAT
THEY
ARE
DUE
FOR
AN
OIL
CHANGE
AN
OIL
CHANGE
WILL
SOON
BE
NEEDED
OR
THERE
IS
NO
IMMEDIATE
NEED
FOR
AN
OIL
CHANGE
ITERATIVE
CONTROL
FIGURE
INDEFINITE
LOOP
USING
A
BOOLEAN
FLAG
LET
APPLY
IT
COIN
CHANGE
EXERCISE
PROGRAM
THE
PYTHON
PROGRAM
IN
FIGURE
IMPLEMENTS
AN
EXERCISE
FOR
CHILDREN
LEARNING
TO
COUNT
CHANGE
IT
DISPLAYS
A
RANDOM
VALUE
BETWEEN
AND
CENTS
AND
ASKS
THE
USER
TO
ENTER
A
SET
OF
COINS
THAT
SUMS
EXACTLY
TO
THE
AMOUNT
SHOWN
THE
PROGRAM
UTILIZES
THE
FOLLOWING
PROGRAMMING
FEATURES
WHILE
LOOP
IF
STATEMENT
BOOLEAN
FLAG
RANDOM
NUMBER
GENERATOR
ON
LINE
THE
RANDOM
MODULE
IS
IMPORTED
FOR
USE
OF
FUNCTION
RANDINT
THIS
FUNCTION
IS
CALLED
ON
LINE
TO
RANDOMLY
GENERATE
A
COIN
VALUE
FOR
THE
USER
TO
MATCH
STORED
IN
VARIABLE
AMOUNT
LINES
PROVIDE
THE
PROGRAM
GREETING
ON
LINE
VARIABLE
TERMINATE
IS
INITIALIZED
TO
FALSE
USED
TO
CONTROL
WHEN
THE
MAIN
LOOP
AND
THUS
THE
PROGRAM
TERMINATES
ON
LINE
IS
INITIALIZED
TO
THE
EMPTY
STRING
LITERAL
USED
TO
DETERMINE
WHEN
THE
USER
HAS
ENTERED
AN
EMPTY
LINE
TO
END
THE
COIN
ENTRIES
THESE
TWO
VARIABLES
NEED
ONLY
BE
INITIALIZED
ONCE
AND
THEREFORE
ARE
ASSIGNED
BEFORE
THE
MAIN
WHILE
LOOP
THE
GAME
BEGINS
ON
LINE
SINCE
BOOLEAN
FLAG
TERMINATE
IS
INITIALIZED
TO
FALSE
THE
WHILE
LOOP
IS
EXECUTED
BESIDES
VARIABLE
AMOUNT
IS
INITIALIZED
TO
FALSE
AND
TOTAL
IS
INITIALIZED
TO
VARIABLE
SERVES
AS
ANOTHER
BOOLEAN
FLAG
TO
DETERMINE
IF
THE
CURRENT
GAME
IS
TO
CONTINUE
OR
NOT
THE
COIN
ENTRY
ENDS
IF
EITHER
THE
USER
ENTERS
A
BLANK
LINE
INDICAT
ING
THAT
THEY
ARE
DONE
ENTERING
COINS
IN
WHICH
CASE
THE
RESULT
IS
DISPLAYED
AND
IS
SET
TO
TRUE
LINE
OR
IF
THE
TOTAL
AMOUNT
ACCUMULATED
EXCEEDS
THE
TOTAL
AMOUNT
TO
BE
MATCHED
ON
LINE
AT
THE
TOP
OF
THE
WHILE
LOOP
A
THIRD
BOOLEAN
FLAG
IS
USED
THE
VALUE
OF
THIS
FLAG
DETERMINES
WHETHER
THE
USER
SHOULD
BE
PROMPTED
AGAIN
BECAUSE
OF
AN
INVALID
INPUT
A
VALUE
CHAPTER
CONTROL
STRUCTURES
FIGURE
COIN
CHANGE
EXERCISE
PROGRAM
CONTINUED
OTHER
THAN
OR
OR
THE
EMPTY
STRING
NOTE
THE
USE
OF
THE
MEMBERSHIP
OPERATOR
IN
LINE
THUS
ONCE
THE
USER
INPUTS
AN
APPROPRIATE
VALUE
IS
SET
TO
TRUE
LINE
OTHERWISE
THE
MESSAGE
INVALID
ENTRY
IS
DISPLAYED
AND
REMAINS
FALSE
CAUSING
THE
LOOP
TO
EXECUTE
AGAIN
THE
LIST
OF
VALID
ENTERED
VALUES
ON
LINE
INCLUDES
VARIABLE
SINCE
THIS
IS
THE
VALUE
INPUT
WHEN
THE
USER
HITS
RETURN
TO
TERMINATE
THEIR
ENTRY
OF
COIN
VALUES
WHEN
THE
EMPTY
STRING
IS
FOUND
LINE
THE
TOTAL
COIN
VALUE
ENTERED
IN
VARIABLE
TOTAL
IS
COMPARED
WITH
VARIABLE
AMOUNT
THE
AMOUNT
TO
BE
MATCHED
IF
EQUAL
THE
MESSAGE
CORRECT
IS
DISPLAYED
LINE
OTHERWISE
A
MESSAGE
IS
DISPLAYED
INDICATING
HOW
MUCH
THEY
ENTERED
THIS
AMOUNT
IS
ALWAYS
LESS
THAN
THE
REQUIRED
AMOUNT
SINCE
WHENEVER
VARIABLE
TOTAL
EXCEEDS
AMOUNT
THE
CURRENT
GAME
ENDS
LINES
ITERATIVE
CONTROL
FIGURE
COIN
CHANGE
EXERCISE
PROGRAM
CHAPTER
CONTROL
STRUCTURES
WHEN
LINE
IS
REACHED
BOOLEAN
FLAG
MAY
BE
EITHER
TRUE
OR
FALSE
IT
IS
TRUE
WHEN
THE
USER
HAS
INDICATED
THAT
THEY
HAVE
ENTERED
ALL
THEIR
COIN
VALUES
BY
HITTING
RETURN
OR
IF
THE
TOTAL
OF
THE
COIN
VALUES
ENTERED
EXCEEDS
THE
VALUE
IN
VARIABLE
AMOUNT
IT
IS
FALSE
OTHERWISE
THEREFORE
FLAG
VARIABLE
IS
USED
TO
DETERMINE
WHETHER
THE
USER
SHOULD
BE
PROMPTED
TO
PLAY
ANOTHER
GAME
LINE
IF
THEY
CHOOSE
TO
QUIT
THE
PROGRAM
WHEN
PROMPTED
THEN
BOOLEAN
VARI
ABLE
TERMINATE
IS
SET
TO
TRUE
THIS
CAUSES
THE
ENCOMPASSING
WHILE
LOOP
AT
LINE
TO
TERMINATE
LEAVING
ONLY
THE
FINAL
GOODBYE
MESSAGE
ON
LINE
TO
BE
EXECUTED
BEFORE
THE
PROGRAM
TERMINATES
SELF
TEST
QUESTIONS
A
WHILE
LOOP
CONTINUES
TO
ITERATE
UNTIL
ITS
CONDITION
BECOMES
FALSE
TRUE
FALSE
A
WHILE
LOOP
EXECUTES
ZERO
OR
MORE
TIMES
TRUE
FALSE
ALL
ITERATION
CAN
BE
ACHIEVED
BY
A
WHILE
LOOP
TRUE
FALSE
AN
INFINITE
LOOP
IS
AN
ITERATIVE
CONTROL
STRUCTURES
THAT
A
LOOPS
FOREVER
AND
MUST
BE
FORCED
TO
TERMINATE
B
LOOPS
UNTIL
THE
PROGRAM
TERMINATES
WITH
A
SYSTEM
ERROR
C
BOTH
OF
THE
ABOVE
THE
TERMS
DEFINITE
LOOP
AND
INDEFINITE
LOOP
ARE
USED
TO
INDICATE
WHETHER
A
A
GIVEN
LOOP
EXECUTES
AT
LEAST
ONCE
B
THE
NUMBER
OF
TIMES
THAT
A
LOOP
IS
EXECUTED
CAN
BE
DETERMINED
BEFORE
THE
LOOP
IS
EXECUTED
C
BOTH
OF
THE
ABOVE
A
BOOLEAN
FLAG
IS
A
A
VARIABLE
B
HAS
THE
VALUE
TRUE
OR
FALSE
C
IS
USED
AS
A
CONDITION
FOR
CONTROL
STATEMENTS
D
ALL
OF
THE
ABOVE
ANSWERS
TRUE
TRUE
TRUE
C
B
D
COMPUTATIONAL
PROBLEM
SOLVING
CALENDAR
MONTH
PROGRAM
THE
PROBLEM
THE
PROBLEM
IS
TO
DISPLAY
A
CALENDAR
MONTH
FOR
ANY
GIVEN
MONTH
BETWEEN
JANUARY
AND
DECEMBER
THE
FORMAT
OF
THE
MONTH
SHOULD
BE
AS
SHOWN
IN
FIGURE
PROBLEM
ANALYSIS
TWO
SPECIFIC
ALGORITHMS
ARE
NEEDED
FOR
THIS
PROBLEM
FIRST
WE
NEED
AN
ALGORITHM
FOR
COMPUTING
THE
FIRST
DAY
FIGURE
CALENDAR
MONTH
DISPLAY
OF
A
GIVEN
MONTH
FOR
YEARS
THROUGH
THIS
ALGORITHM
IS
GIVEN
IN
CHAPTER
THE
SECOND
NEEDED
ALGORITHM
IS
FOR
APPROPRIATELY
DISPLAYING
THE
CALENDAR
MONTH
GIVEN
THE
DAY
OF
THE
WEEK
THAT
CALENDAR
MONTH
PROGRAM
THE
FIRST
DAY
FALLS
ON
AND
THE
NUMBER
OF
DAYS
IN
THE
MONTH
WE
SHALL
DEVELOP
THIS
ALGORITHM
THE
DATA
REPRESENTATION
ISSUES
FOR
THIS
PROBLEM
ARE
STRAIGHT
FORWARD
PROGRAM
DESIGN
MEETING
THE
PROGRAM
REQUIREMENTS
WE
WILL
DEVELOP
AND
IMPLEMENT
AN
ALGORITHM
THAT
DISPLAYS
THE
MONTH
AS
GIVEN
THERE
IS
NO
REQUIRE
MENT
OF
HOW
THE
MONTH
AND
YEAR
ARE
TO
BE
ENTERED
WE
SHALL
THEREFORE
REQUEST
THE
USER
TO
ENTER
THE
MONTH
AND
YEAR
AS
INTEGER
VALUES
WITH
APPROPRIATE
INPUT
ERROR
CHECKING
DATA
DESCRIPTION
WHAT
NEEDS
TO
BE
REPRESENTED
IN
THE
PROGRAM
IS
THE
MONTH
AND
YEAR
ENTERED
WHETHER
THE
YEAR
IS
A
LEAP
YEAR
OR
NOT
THE
NUMBER
OF
DAYS
IN
THE
MONTH
AND
WHICH
DAY
THE
FIRST
OF
THE
MONTH
FALLS
ON
GIVEN
THAT
INFORMATION
THE
CALENDAR
MONTH
CAN
BE
DISPLAYED
THE
YEAR
AND
MONTH
WILL
BE
ENTERED
AND
STORED
AS
INTEGER
VALUES
REPRESENTED
BY
VARIABLES
YEAR
AND
MONTH
YEAR
MONTH
THE
REMAINING
VALUES
WILL
BE
COMPUTED
BY
THE
PROGRAM
BASED
ON
THE
GIVEN
YEAR
AND
MONTH
AS
GIVEN
BELOW
VARIABLE
HOLDS
A
BOOLEAN
TRUE
FALSE
VALUE
VARIABLES
AND
EACH
HOLD
INTEGER
VALUES
ALGORITHMIC
APPROACH
FIRST
WE
NEED
AN
ALGORITHM
FOR
DETERMINING
THE
DAY
OF
THE
WEEK
THAT
A
GIVEN
DATE
FALLS
ON
THE
ALGO
RITHM
FOR
THIS
FROM
CHAPTER
IS
REPRODUCED
IN
FIGURE
WE
ALSO
NEED
TO
DETERMINE
HOW
MANY
DAYS
ARE
IN
A
GIVEN
MONTH
WHICH
RELIES
ON
AN
ALGORITHM
FOR
DETERMINING
LEAP
YEARS
FOR
THE
MONTH
OF
FEBRUARY
THE
CODE
FOR
THIS
HAS
ALREADY
BEEN
DEVELOPED
IN
THE
NUMBER
OF
DAYS
IN
MONTH
PROGRAM
IN
SECTION
WE
SHALL
ALSO
REUSE
THE
PORTION
OF
CODE
FROM
THAT
PROGRAM
FOR
DETERMINING
LEAP
YEARS
REPRODUCED
BELOW
IF
YEAR
AND
NOT
YEAR
OR
YEAR
TRUE
ELSE
FALSE
LET
REVIEW
HOW
THIS
ALGORITHM
WORKS
AND
TRY
TO
DETERMINE
THE
DAY
OF
THE
WEEK
ON
WHICH
MAY
FALLS
FIRST
VARIABLE
HOLDING
THE
FIRST
TWO
DIGITS
OF
THE
YEAR
IS
SET
TO
AND
HOLDING
THE
LAST
TWO
DIGITS
OF
THE
YEAR
IS
SET
TO
STEPS
AND
VARIABLE
VALUE
IN
STEP
IS
THEN
SET
TO
VALUE
FLOOR
FLOOR
FLOOR
CHAPTER
CONTROL
STRUCTURES
FIGURE
DAY
OF
THE
WEEK
ALGORITHM
FROM
CHAPTER
IN
STEP
SINCE
IS
EQUAL
TO
VALUE
IS
INCREMENTED
BY
VALUE
VALUE
IN
STEP
SINCE
THE
MONTH
IS
EQUAL
TO
MAY
VALUE
IS
INCREMENTED
BY
VALUE
VALUE
IN
STEP
VALUE
IS
UPDATED
BASED
ON
THE
DAY
OF
THE
MONTH
SINCE
WE
WANT
TO
DETERMINE
THE
DAY
OF
THE
WEEK
FOR
THE
OF
MAY
VALUE
IS
UPDATED
AS
FOLLOWS
VALUE
VALUE
DAY
OF
THE
MONTH
MOD
MOD
MOD
THEREFORE
BY
STEP
OF
THE
ALGORITHM
THE
DAY
OF
THE
WEEK
FOR
MAY
IS
A
SATURDAY
A
TABLE
FOR
THE
INTERPRETATION
OF
THE
DAY
OF
THE
WEEK
FOR
THE
FINAL
COMPUTED
VALUE
IS
GIVEN
IN
FIGURE
CALENDAR
MONTH
PROGRAM
FIGURE
INTERPRETATION
OF
THE
DAY
OF
THE
WEEK
ALGORITHM
RESULTS
OVERALL
PROGRAM
STEPS
THE
OVERALL
STEPS
IN
THIS
PROGRAM
DESIGN
ARE
GIVEN
IN
FIGURE
PROGRAM
IMPLEMENTATION
AND
TESTING
STAGE
DETERMINING
THE
NUMBER
OF
DAYS
IN
THE
MONTH
LEAP
YEARS
WE
DEVELOP
AND
TEST
THE
PROGRAM
IN
THREE
STAGES
FIRST
WE
IMPLEMENT
AND
TEST
THE
CODE
THAT
DETER
MINES
FOR
A
GIVEN
MONTH
AND
YEAR
THE
NUMBER
OF
DAYS
IN
THE
MONTH
AND
WHETHER
THE
YEAR
IS
A
LEAP
YEAR
OR
NOT
GIVEN
IN
FIGURE
FIGURE
OVERALL
STEPS
OF
CALENDAR
MONTH
PROGRAM
CHAPTER
CONTROL
STRUCTURES
FIGURE
FIRST
STAGE
OF
CALENDAR
MONTH
PROGRAM
THE
MONTH
AND
YEAR
ENTERED
BY
THE
USER
ARE
STORED
IN
VARIABLES
MONTH
AND
YEAR
WHILE
LOOPS
ARE
USED
AT
LINES
AND
TO
PERFORM
INPUT
ERROR
CHECKING
LINES
ARE
ADAPTED
FROM
THE
PREVIOUS
NUMBER
OF
DAYS
IN
MONTH
PROGRAM
FOR
DETERMINING
LEAP
YEARS
LINES
ARE
SIMILAR
TO
THE
PREVIOUS
PROGRAM
FOR
DETERMINING
THE
NUMBER
OF
DAYS
IN
A
MONTH
STORED
IN
VARIABLE
LINES
CONTAIN
ADDED
CODE
FOR
THE
PURPOSE
OF
TESTING
THESE
INSTRUCTIONS
WILL
NOT
BE
PART
OF
THE
FINAL
PROGRAM
THE
PROGRAM
CONTINUES
TO
PROMPT
FOR
ANOTHER
MONTH
UNTIL
IS
ENTERED
THUS
BOOLEAN
FLAG
TERMI
NATE
IS
INITIALIZED
TO
FALSE
LINE
AND
SET
TO
TRUE
LINE
WHEN
THE
PROGRAM
IS
TO
TERMINATE
STAGE
TESTING
WE
GIVE
OUTPUT
FROM
THE
TESTING
OF
THIS
VERSION
OF
THE
PROGRAM
IN
FIGURE
CALENDAR
MONTH
PROGRAM
FIGURE
EXAMPLE
OUTPUT
OF
FIRST
STAGE
TESTING
THE
SET
OF
TEST
CASES
FOR
THIS
STAGE
OF
THE
PROGRAM
IS
GIVEN
IN
FIGURE
THE
TEST
CASES
ARE
SELECTED
SUCH
THAT
EACH
MONTH
IS
TESTED
WITHIN
THE
AND
THE
MONTH
OF
FEBRUARY
HAS
A
NUMBER
OF
TEST
CASES
TO
ENSURE
THAT
THE
PROGRAM
IS
WORKING
FOR
NON
LEAP
YEARS
TYPICAL
LEAP
YEARS
AND
EXCEPTION
YEARS
AND
THE
TEST
PLAN
ALSO
INCLUDES
THE
EXTREME
CASES
OF
JANUARY
AND
DECEMBER
THE
BEGINNING
AND
END
OF
THE
RANGE
OF
VALID
MONTHS
ALL
TEST
CASES
ARE
SHOWN
TO
HAVE
PASSED
AND
THUS
WE
CAN
MOVE
ON
TO
STAGE
OF
THE
PROGRAM
DEVELOPMENT
FIGURE
RESULTS
OF
EXECUTION
OF
TEST
PLAN
FOR
STAGE
STAGE
DETERMINING
THE
DAY
OF
THE
WEEK
WE
GIVE
THE
NEXT
STAGE
OF
THE
PROGRAM
IN
FIGURE
THIS
VERSION
INCLUDES
THE
CODE
FOR
DETERMINING
THE
DAY
OF
THE
WEEK
FOR
THE
FIRST
DAY
OF
A
GIVEN
MONTH
AND
YEAR
LINES
WITH
THE
FINAL
PRINT
STATEMENT
LINE
DISPLAYING
THE
TEST
RESULTS
NOTE
THAT
FOR
TESTING
PURPOSES
THERE
IS
NO
NEED
TO
CONVERT
THE
DAY
NUMBER
INTO
THE
ACTUAL
NAME
E
G
MONDAY
THIS
RAW
OUTPUT
IS
GOOD
ENOUGH
ALSO
FOR
THIS
PROGRAM
WE
WILL
NEED
TO
DETERMINE
ONLY
THE
DAY
OF
THE
WEEK
FOR
THE
FIRST
DAY
OF
ANY
CHAPTER
CONTROL
STRUCTURES
FIGURE
SECOND
STAGE
OF
CALENDAR
MONTH
PROGRAM
CONTINUED
GIVEN
MONTH
SINCE
ALL
REMAINING
DAYS
FOLLOW
SEQUENTIALLY
THEREFORE
THE
DAY
VALUE
IN
THE
DAY
OF
THE
WEEK
ALGORITHM
PART
OF
THE
CODE
IS
HARD
CODED
TO
ON
LINE
LET
LOOK
AT
THE
CODE
THAT
IMPLE
MENTS
THE
DAY
OF
THE
WEEK
ALGORITHM
THE
ALGORITHM
OPERATES
SEPARATELY
ON
THE
FIRST
TWO
DIGITS
AND
LAST
TWO
DIGITS
OF
THE
YEAR
ON
LINE
INTEGER
DIVISION
IS
USED
TO
EXTRACT
THE
FIRST
TWO
DIGITS
OF
THE
YEAR
FOR
EXAMPLE
CALENDAR
MONTH
PROGRAM
FIGURE
SECOND
STAGE
OF
CALENDAR
MONTH
PROGRAM
EQUALS
ON
LINE
THE
MODULUS
OPERATOR
IS
USED
TO
EXTRACT
THE
LAST
TWO
DIGITS
FOR
EXAMPLE
EQUALS
THE
REST
OF
THE
PROGRAM
THROUGH
LINE
FOLLOWS
THE
DAY
OF
THE
WEEK
ALGO
RITHM
GIVEN
ABOVE
STAGE
TESTING
WE
GIVE
A
SAMPLE
TEST
RUN
OF
THIS
VERSION
OF
THE
PROGRAM
IN
FIGURE
FIGURE
EXAMPLE
OUTPUT
OF
SECOND
STAGE
TESTING
FIGURE
SHOWS
THE
RESULTS
OF
THE
EXECUTION
OF
THE
TEST
PLAN
FOR
THIS
VERSION
OF
THE
PROGRAM
IT
INCLUDES
THE
SAME
MONTHS
AS
IN
THE
TEST
PLAN
FOR
THE
FIRST
STAGE
SINCE
ALL
TEST
CASES
PASSED
WE
CAN
MOVE
ON
TO
THE
FINAL
STAGE
OF
PROGRAM
DEVELOPMENT
FINAL
STAGE
DISPLAYING
THE
CALENDAR
MONTH
IN
THE
FINAL
STAGE
OF
THE
PROGRAM
FIGURE
WE
ADD
THE
CODE
FOR
DISPLAYING
THE
CALENDAR
MONTH
THE
CORRESPONDING
NAME
FOR
THE
MONTH
NUMBER
IS
DETERMINED
ON
LINES
AND
DISPLAYED
LINE
THE
WHILE
LOOP
AT
LINE
MOVES
THE
CURSOR
TO
THE
PROPER
STARTING
COLUMN
BY
PRINTING
CHAPTER
CONTROL
STRUCTURES
FIGURE
RESULTS
OF
EXECUTION
OF
TEST
PLAN
FOR
STAGE
FIGURE
FINAL
STAGE
OF
CALENDAR
MONTH
PROGRAM
CONTINUED
CALENDAR
MONTH
PROGRAM
FIGURE
FINAL
STAGE
OF
CALENDAR
MONTH
PROGRAM
CONTINUED
THE
NUMBER
OF
BLANK
CHARACTERS
FOR
EACH
COLUMN
TO
BE
SKIPPED
THE
WHILE
LOOP
AT
LINE
DISPLAYS
THE
DATES
SINGLE
DIGIT
DATES
ARE
OUTPUT
LINE
WITH
THREE
LEADING
SPACES
AND
TWO
DIGIT
DATES
WITH
TWO
LINE
SO
THAT
THE
COLUMNS
LINE
UP
EACH
USES
THE
NEWLINE
SUPPRESSION
FORM
OF
PRINT
PRINT
TO
PREVENT
THE
CURSOR
FROM
MOVING
TO
THE
NEXT
SCREEN
LINE
UNTIL
IT
IS
TIME
TO
DO
SO
VARIABLE
IS
INCREMENTED
FROM
TO
THE
NUMBER
OF
DAYS
IN
THE
MONTH
VARIABLE
IS
ALSO
INCREMENTED
BY
TO
KEEP
TRACK
OF
WHAT
COLUMN
THE
CURRENT
DATE
IS
BEING
CHAPTER
CONTROL
STRUCTURES
FIGURE
FINAL
STAGE
OF
CALENDAR
MONTH
PROGRAM
CALENDAR
MONTH
PROGRAM
DISPLAYED
IN
WHEN
EQUALS
IT
IS
RESET
TO
LINE
AND
PRINT
MOVES
THE
CURSOR
TO
THE
START
OF
THE
NEXT
LINE
LINE
OTHERWISE
IS
SIMPLY
INCREMENTED
BY
LINE
AN
EXAMPLE
TEST
RUN
OF
THIS
FINAL
VERSION
OF
THE
PROGRAM
IS
GIVEN
IN
FIGURE
FIGURE
EXAMPLE
OUTPUT
OF
FINAL
STAGE
TESTING
SOMETHING
IS
OBVIOUSLY
WRONG
THE
CALENDAR
MONTH
IS
DISPLAYED
WITH
EIGHT
COLUMNS
INSTEAD
OF
SEVEN
THE
TESTING
OF
ALL
OTHER
MONTHS
PRODUCES
THE
SAME
RESULTS
SINCE
THE
FIRST
TWO
STAGES
OF
THE
PROGRAM
WERE
SUCCESSFULLY
TESTED
THE
PROBLEM
MUST
BE
IN
THE
CODE
ADDED
IN
THE
FINAL
STAGE
THE
CODE
AT
LINE
SIMPLY
ASSIGNS
THE
MONTH
NAME
THEREFORE
WE
REFLECT
ON
THE
LOGIC
OF
THE
CODE
START
ING
ON
LINE
LINES
IS
WHERE
THE
COLUMN
IS
RESET
BACK
TO
COLUMN
AND
A
NEW
SCREEN
LINE
IS
STARTED
BASED
ON
THE
CURRENT
VALUE
OF
VARIABLE
IF
ELSE
PRINT
VARIABLE
IS
INITIALIZED
TO
AT
LINE
AND
IS
ADVANCED
TO
THE
PROPER
STARTING
COL
UMN
ON
LINES
VARIABLE
IS
SET
TO
THE
VALUE
FOR
THE
DAY
OF
THE
WEEK
FOR
THE
PARTICULAR
MONTH
BEING
DISPLAYED
SINCE
THE
DAY
OF
THE
WEEK
RESULTS
HAVE
BEEN
SUCCESSFULLY
TESTED
WE
CAN
ASSUME
THAT
WILL
HAVE
A
VALUE
BETWEEN
AND
WITH
THAT
ASSUMP
TION
WE
CAN
STEP
THOUGH
LINES
AND
SEE
IF
THIS
IS
WHERE
THE
PROBLEM
IS
STEPPING
THROUGH
A
PROGRAM
ON
PAPER
BY
TRACKING
THE
VALUES
OF
VARIABLES
IS
REFERRED
TO
AS
DESKCHECKING
WE
CHECK
WHAT
HAPPENS
AS
THE
VALUE
OF
APPROACHES
AS
SHOWN
IN
FIGURE
NOW
IT
IS
CLEAR
WHAT
THE
PROBLEM
IS
THE
CLASSIC
OFF
BY
ONE
ERROR
THE
CONDITION
OF
THE
WHILE
LOOP
SHOULD
BE
NOT
SHOULD
BE
RESET
TO
ONCE
THE
SEVENTH
COLUMN
HAS
BEEN
DISPLAYED
WHEN
IS
USING
THE
CHAPTER
CONTROL
STRUCTURES
FIGURE
DESKCHECKING
THE
VALUE
OF
VARIABLE
OPERATOR
CAUSES
TO
BE
RESET
TO
ONLY
AFTER
AN
EIGHTH
COLUMN
IS
DISPLAYED
THUS
WE
MAKE
THIS
CORRECTION
IN
THE
PROGRAM
IF
ELSE
PRINT
AFTER
RE
EXECUTING
THE
PROGRAM
WITH
THIS
CORRECTION
WE
GET
THE
CURRENT
OUTPUT
DEPICTED
IN
FIGURE
FIGURE
DISPLAY
OUTPUT
OF
FINAL
STAGE
OF
CALENDAR
MONTH
PROGRAM
ALTHOUGH
THE
COLUMN
ERROR
HAS
BEEN
CORRECTED
WE
FIND
THAT
THE
FIRST
OF
THE
MONTH
APPEARS
UNDER
THE
WRONG
COLUMN
THE
MONTH
SHOULD
START
ON
A
WEDNESDAY
FOURTH
COLUMN
NOT
A
THURSDAY
COLUMN
FIFTH
COLUMN
THE
PROBLEM
MUST
BE
IN
HOW
THE
FIRST
ROW
OF
THE
MONTH
IS
DISPLAYED
OTHER
MONTHS
ARE
TESTED
EACH
FOUND
TO
BE
OFF
BY
ONE
DAY
WE
THEREFORE
LOOK
AT
LINES
THAT
ARE
RESPONSIBLE
FOR
MOVING
OVER
THE
CURSOR
TO
THE
CORRECT
STARTING
COLUMN
WHILE
PRINT
CHAPTER
SUMMARY
WE
CONSIDER
WHETHER
THERE
IS
ANOTHER
OFF
BY
ONE
ERROR
RECONSIDERING
THE
CONDITION
OF
THE
WHILE
LOOP
WE
REALIZE
THAT
IN
FACT
THIS
IS
THE
ERROR
IF
THE
CORRECT
STARTING
COLUMN
IS
WEDNESDAY
THEN
THE
CURSOR
SHOULD
MOVE
PAST
THREE
COLUMNS
AND
PLACE
A
IN
THE
FOURTH
COLUMN
THE
CURRENT
CONDITION
HOWEVER
WOULD
MOVE
THE
CURSOR
PAST
FOUR
COLUMNS
THUS
PLACING
A
IN
THE
FIFTH
COLUMN
THURSDAY
THE
CORRECTED
CODE
IS
GIVEN
BELOW
WHILE
PRINT
THE
MONTH
IS
NOW
CORRECTLY
DISPLAYED
WE
COMPLETE
THE
TESTING
BY
EXECUTING
THE
PROGRAM
ON
A
SET
OF
TEST
CASES
FIGURE
ALTHOUGH
THE
TEST
PLAN
IS
NOT
AS
COMPLETE
AS
IT
COULD
BE
IT
INCLUDES
TEST
CASES
FOR
MONTHS
FROM
EACH
CENTURY
INCLUDING
BOTH
LEAP
YEARS
AND
NON
LEAP
YEARS
FIGURE
RESULTS
OF
EXECUTION
OF
TEST
PLAN
FOR
FINAL
STAGE
CHAPTER
SUMMAR
Y
GENERAL
TOPICS
CONTROL
STATEMENT
CONTROL
STRUCTURE
SEQUENTIAL
SELECTION
AND
ITERATIVE
CONTROL
RELATIONAL
OPERATORS
BOOLEAN
OPERATORS
BOOLEAN
EXPRESSIONS
OPERATOR
PRECEDENCE
AND
BOOLEAN
EXPRESSIONS
LOGICALLY
EQUIVALENT
BOOLEAN
EXPRESSIONS
SHORT
CIRCUIT
LAZY
EVALUATION
SELECTION
CONTROL
STATEMENTS
IF
STATEMENT
COMPOUND
STATEMENT
MULTI
WAY
SELECTION
WHILE
STATEMENTS
INPUT
ERROR
CHECKING
INFINITE
LOOPS
DEFINITE
VS
INDEFINITE
LOOPS
BOOLEAN
FLAGS
AND
INDEFINITE
LOOPS
DESKCHECKING
PYTHON
SPECIFIC
PROGRAMMING
TOPICS
MEMBERSHIP
OPERATORS
IN
NOT
IN
IF
STATEMENT
IN
PYTHON
ELSE
AND
ELIF
HEADERS
INDENTATION
IN
PYTHON
MULTI
WAY
SELECTION
IN
PYTHON
WHILE
STATEMENT
IN
PYTHON
CHAPTER
CONTROL
STRUCTURES
CHAPTER
EXERCISES
SECTION
WHICH
OF
THE
THREE
FORMS
OF
CONTROL
IS
AN
IMPLICIT
FORM
OF
CONTROL
WHAT
IS
MEANT
BY
A
STRAIGHT
LINE
PROGRAM
WHAT
IS
THE
DIFFERENCE
BETWEEN
A
CONTROL
STATEMENT
AND
A
CONTROL
STRUCTURE
SECTION
THE
BOOLEAN
DATA
TYPE
CONTAINS
TWO
LITERAL
VALUES
DENOTED
AS
AND
IN
PYTHON
WHICH
OF
THE
FOLLOWING
RELATIONAL
EXPRESSIONS
EVALUATE
TO
TRUE
A
C
B
D
JAKE
BRIAN
WHICH
OF
THE
FOLLOWING
RELATIONAL
EXPRESSIONS
EVALUATE
TO
FALSE
A
C
E
B
D
GIVE
AN
APPROPRIATE
EXPRESSION
FOR
EACH
OF
THE
FOLLOWING
A
TO
DETERMINE
IF
THE
NUMBER
DOES
NOT
APPEAR
IN
A
GIVEN
LIST
OF
NUMBERS
ASSIGNED
TO
VARIABLE
NUMS
B
TO
DETERMINE
IF
THE
NAME
ELLEN
APPEARS
IN
A
LIST
OF
NAMES
ASSIGNED
TO
VARIABLE
NAMES
C
TO
DETERMINE
IF
A
SINGLE
LAST
NAME
STORED
IN
VARIABLE
IS
EITHER
MORRIS
OR
MORRISON
EVALUATE
THE
FOLLOWING
PYTHON
EXPRESSIONS
A
B
WHAT
VALUE
FOR
X
MAKES
EACH
OF
THE
FOLLOWING
BOOLEAN
EXPRESSIONS
TRUE
A
X
OR
FALSE
B
X
AND
TRUE
C
NOT
X
OR
FALSE
D
NOT
X
AND
TRUE
EVALUATE
THE
BOOLEAN
EXPRESSIONS
BELOW
FOR
N
AND
K
A
N
AND
K
B
N
OR
K
C
NOT
N
AND
K
D
NOT
N
AND
NOT
K
E
N
OR
K
OR
K
GIVE
AN
APPROPRIATE
BOOLEAN
EXPRESSION
FOR
EACH
OF
THE
FOLLOWING
A
DETERMINE
IF
VARIABLE
NUM
IS
GREATER
THAN
OR
EQUAL
TO
AND
LESS
THAN
B
DETERMINE
IF
VARIABLE
NUM
IS
LESS
THAN
AND
GREATER
THAN
OR
EQUAL
TO
OR
IT
IS
EQUAL
TO
C
DETERMINE
IF
EITHER
THE
NAME
THOMPSON
OR
WU
APPEARS
IN
A
LIST
OF
NAMES
ASSIGNED
TO
VARIABLE
D
DETERMINE
IF
THE
NAME
THOMSON
APPEARS
AND
THE
NAME
WU
DOES
NOT
APPEAR
IN
A
LIST
OF
LAST
NAMES
ASSIGNED
TO
VARIABLE
EVALUATE
THE
FOLLOWING
BOOLEAN
EXPRESSIONS
FOR
AND
A
NOT
AND
B
NOT
AND
OR
CHAPTER
EXERCISES
GIVE
A
LOGICALLY
EQUIVALENT
EXPRESSION
FOR
EACH
OF
THE
FOLLOWING
A
NUM
OR
NUM
B
NUM
AND
NUM
C
NOT
NUM
AND
NOT
NUM
D
NUM
OR
NUM
SECTION
GIVE
AN
APPROPRIATE
IF
STATEMENT
FOR
EACH
OF
THE
FOLLOWING
A
AN
IF
STATEMENT
THAT
DISPLAYS
WITHIN
RANGE
IF
NUM
IS
BETWEEN
AND
INCLUSIVE
B
AN
IF
STATEMENT
THAT
DISPLAYS
WITHIN
RANGE
IF
NUM
IS
BETWEEN
AND
INCLUSIVE
AND
DIS
PLAYS
OUT
OF
RANGE
OTHERWISE
REWRITE
THE
FOLLOWING
IF
ELSE
STATEMENTS
USING
A
SINGLE
IF
STATEMENT
AND
ELIF
HEADERS
IF
TEMPERATURE
AND
HUMIDITY
PRINT
MUGGY
DAY
TODAY
ELSE
IF
TEMPERATURE
PRINT
WARM
BUT
NOT
MUGGY
TODAY
ELSE
IF
TEMPERATURE
PRINT
PLEASANT
TODAY
ELSE
IF
TEMPERATURE
PRINT
COLD
TODAY
ELSE
PRINT
COOL
TODAY
REGARDING
PROPER
INDENTATION
A
EXPLAIN
THE
CHANGE
IN
INDENTATION
NEEDED
IN
ORDER
FOR
THE
FOLLOWING
CODE
TO
BE
SYNTACTICALLY
CORRECT
B
INDICATE
OTHER
CHANGES
IN
THE
INDENTATION
OF
THE
CODE
THAT
IS
NOT
STRICTLY
NEEDED
BUT
WOULD
MAKE
THE
CODE
MORE
READABLE
IF
LEVEL
PRINT
VALUE
IS
WELL
WITHIN
RANGE
PRINT
RECHECK
IN
ONE
YEAR
ELIF
LEVEL
PRINT
VALUE
IS
WITHIN
RANGE
PRINT
RECHECK
WITHIN
ONE
MONTH
ELIF
LEVEL
PRINT
VALUE
IS
SLIGHTLY
HIGH
PRINT
RECHECK
IN
ONE
WEEK
ELIF
LEVEL
PRINT
VALUE
ABNORMALLY
HIGH
PRINT
SHUT
DOWN
SYSTEM
IMMEDIATELY
SECTION
WRITE
A
PROGRAM
SEGMENT
THAT
USES
A
WHILE
LOOP
TO
ADD
UP
ALL
THE
EVEN
NUMBERS
BETWEEN
AND
INCLUSIVE
CHAPTER
CONTROL
STRUCTURES
THE
FOLLOWING
WHILE
LOOP
IS
MEANT
TO
MULTIPLY
A
SERIES
OF
INTEGERS
INPUT
BY
THE
USER
UNTIL
A
SENTINEL
VALUE
OF
IS
ENTERED
INDICATE
ANY
ERRORS
IN
THE
CODE
GIVEN
PRODUCT
NUM
INPUT
ENTER
FIRST
NUMBER
WHILE
NUM
NUM
INPUT
ENTER
FIRST
NUMBER
PRODUCT
PRODUCT
NUM
PRINT
PRODUCT
PRODUCT
FOR
EACH
OF
THE
FOLLOWING
INDICATE
WHICH
IS
A
DEFINITE
LOOP
AND
WHICH
IS
AN
INDEFINITE
LOOP
A
NUM
INPUT
ENTER
A
NON
ZERO
VALUE
WHILE
NUM
NUM
INPUT
ENTER
A
NON
ZERO
VALUE
B
NUM
WHILE
N
PRINT
N
N
N
PYTHON
PROGRAMMING
EXERCISES
WRITE
A
PYTHON
PROGRAM
IN
WHICH
THE
USER
ENTERS
EITHER
A
B
OR
C
IF
A
IS
ENTERED
THE
PRO
GRAM
SHOULD
DISPLAY
THE
WORD
APPLE
IF
B
IS
ENTERED
IT
DISPLAYS
BANANA
AND
IF
C
IS
ENTERED
IT
DISPLAYS
COCONUT
USE
NESTED
IF
STATEMENTS
FOR
THIS
AS
DEPICTED
IN
FIGURE
REPEAT
QUESTION
USING
AN
IF
STATEMENT
WITH
ELIF
HEADERS
INSTEAD
WRITE
A
PYTHON
PROGRAM
IN
WHICH
A
STUDENT
ENTERS
THE
NUMBER
OF
COLLEGE
CREDITS
EARNED
IF
THE
NUMBER
OF
CREDITS
IS
GREATER
THAN
SENIOR
STATUS
IS
DISPLAYED
IF
GREATER
THAN
JUNIOR
STATUS
IS
DISPLAYED
IF
GREATER
THAN
SOPHOMORE
STATUS
IS
DISPLAYED
ELSE
FRESHMAN
STATUS
IS
DISPLAYED
WRITE
A
PROGRAM
THAT
SUMS
A
SERIES
OF
POSITIVE
INTEGERS
ENTERED
BY
THE
USER
EXCLUDING
ALL
NUMBERS
THAT
ARE
GREATER
THAN
WRITE
A
PROGRAM
IN
WHICH
THE
USER
CAN
ENTER
ANY
NUMBER
OF
POSITIVE
AND
NEGATIVE
INTEGER
VALUES
THAT
DISPLAYS
THE
NUMBER
OF
POSITIVE
VALUES
ENTERED
AS
WELL
AS
THE
NUMBER
OF
NEGATIVE
VALUES
WRITE
A
PROGRAM
CONTAINING
A
PAIR
OF
NESTED
WHILE
LOOPS
THAT
DISPLAYS
THE
INTEGER
VALUES
TEN
NUM
BERS
PER
ROW
WITH
THE
COLUMNS
ALIGNED
AS
SHOWN
BELOW
DISPLAY
THE
INTEGER
VALUES
AS
GIVEN
IN
QUESTION
USING
ONLY
ONE
WHILE
LOOP
PROGRAM
MODIFICATION
PROBLEMS
PROGRAM
MODIFICATION
PROBLEMS
TEMPERATURE
CONVERSION
PROGRAM
INPUT
ERROR
CHECKING
MODIFY
THE
TEMPERATURE
CONVERSION
PROGRAM
IN
FIGURE
TO
PERFORM
INPUT
ERROR
CHECKING
OF
ENTERED
TEMPERATURES
ON
THE
FAHRENHEIT
SCALE
ABSOLUTE
ZERO
IS
THEREFORE
ALL
VALID
FAHRENHEIT
TEM
PERATURES
START
AT
THAT
VALUE
WITH
NO
UPPER
LIMIT
ON
THE
CELSIUS
SCALE
ABSOLUTE
ZERO
IS
THE
PROGRAM
SHOULD
REPROMPT
THE
USER
FOR
ANY
INVALID
ENTERED
TEMPERATURES
TEMPERATURE
CONVERSION
PROGRAM
ADDITION
OF
KELVIN
SCALE
MODIFY
THE
TEMPERATURE
CONVERSION
PROGRAM
IN
FIGURE
TO
ADD
AN
ADDITIONAL
OPTION
OF
CONVERTING
TO
AND
FROM
DEGREES
KELVIN
THE
FORMULA
FOR
CONVERSION
TO
KELVIN
K
FROM
CELSIUS
C
IS
K
C
NUMBER
OF
DAYS
IN
MONTH
PROGRAM
INPUT
ERROR
CHECKING
MODIFY
THE
NUMBER
OF
DAYS
IN
MONTH
PROGRAM
OF
SECTION
SO
THAT
THE
PROGRAM
PROMPTS
THE
USER
TO
RE
ENTER
ANY
MONTH
NOT
IN
THE
RANGE
OR
YEAR
THAT
IS
AN
INVALID
VALUE
NUMBER
OF
DAYS
IN
MONTH
PROGRAM
INDICATION
OF
LEAP
YEARS
MODIFY
THE
NUMBER
OF
DAYS
IN
MONTH
PROGRAM
OF
SECTION
SO
THAT
THE
PROGRAM
DISPLAYS
IN
ADDITION
TO
THE
NUMBER
OF
DAYS
IN
THE
MONTH
THAT
THE
YEAR
IS
A
LEAP
YEAR
OR
NOT
AS
SHOWN
BELOW
ENTER
THE
MONTH
PLEASE
ENTER
THE
YEAR
E
G
THERE
ARE
DAYS
IN
THE
MONTH
A
LEAP
YEAR
OIL
CHANGE
NOTIFICATION
PROGRAM
NUMBER
OF
MILES
BEFORE
CHANGE
MODIFY
THE
OIL
CHANGE
NOTIFICATION
PROGRAM
IN
FIGURE
SO
THAT
THE
PROGRAM
DISPLAYS
THE
NUMBER
OF
MILES
LEFT
BEFORE
THE
NEXT
OIL
CHANGE
OR
THE
NUMBER
OF
MILES
OVERDUE
FOR
AN
OIL
CHANGE
AS
APPROPRIATE
COIN
CHANGE
EXERCISE
PROGRAM
ADDITION
OF
HALF
DOLLAR
COINS
MODIFY
THE
COIN
CHANGE
EXERCISE
PROGRAM
IN
SECTION
TO
ALLOW
FOR
THE
USE
OF
HALF
DOLLAR
COINS
MAKE
ALL
NECESSARY
CHANGES
IN
THE
PROGRAM
COIN
CHANGE
EXERCISE
PROGRAM
RAISING
THE
CHALLENGE
MODIFY
THE
COIN
CHANGE
EXERCISE
PROGRAM
IN
SECTION
SO
THAT
THE
LEAST
POSSIBLE
NUMBER
OF
COINS
MUST
BE
ENTERED
FOR
EXAMPLE
THE
LEAST
NUMBER
OF
COINS
THAT
TOTAL
TO
CENTS
IS
ONE
QUARTER
ONE
DIME
ONE
NICKEL
AND
THREE
PENNIES
CALENDAR
MONTH
PROGRAM
INDICATION
OF
LEAP
YEAR
MODIFY
THE
FINAL
VERSION
OF
THE
CALENDAR
MONTH
PROGRAM
IN
SECTION
SO
THAT
FOR
LEAP
YEARS
THE
MONTH
HEADING
IS
DISPLAYED
AS
IN
THE
FOLLOWING
CALENDAR
MONTH
PROGRAM
USER
ENTRY
OF
MONTH
NAME
MODIFY
THE
FINAL
VERSION
OF
THE
CALENDAR
MONTH
PROGRAM
TO
ALLOW
THE
USER
TO
ENTER
A
MONTH
NAME
E
G
JANUARY
RATHER
THAN
A
NUMBER
E
G
MAKE
ALL
APPROPRIATE
CHANGES
IN
THE
PROGRAM
AS
A
RESULT
OF
THIS
CHANGE
CHAPTER
CONTROL
STRUCTURES
CALENDAR
MONTH
PROGRAM
DAY
OF
THE
WEEK
HEADINGS
MODIFY
THE
FINAL
VERSION
OF
THE
CALENDAR
MONTH
PROGRAM
IN
SECTION
SO
THAT
THERE
IS
DAY
HEADING
FOR
EACH
OF
THE
COLUMNS
AS
SHOWN
BELOW
SAGE
PROGRAM
MODIFICATION
FOLLOWING
IS
THE
OUTPUT
OF
AN
ALL
KNOWING
SAGE
PROGRAM
THAT
REPLIES
WITH
RANDOM
RESPONSES
TO
QUES
TIONS
POSED
BY
THE
USER
THE
RESPONSES
GENERATED
HAVE
NO
MEANINGFUL
CONNECTION
TO
THE
QUESTIONS
ASKED
PROGRAM
DEVELOPMENT
PROBLEMS
IN
THE
A
PROGRAM
CALLED
ELIZA
WAS
DEVELOPED
THAT
WAS
ABLE
TO
BEHAVE
AS
A
PSYCHOTHERAPIST
IT
DID
NOT
REALLY
UNDERSTAND
ANYTHING
IT
ONLY
LOOKED
FOR
CERTAIN
WORDS
TO
TURN
THE
PATIENT
COMMENTS
OR
QUES
TIONS
BACK
TO
THE
PATIENT
FOR
EXAMPLE
IF
A
PATIENT
SAID
MY
MOM
DRIVES
ME
CRAZY
IT
MIGHT
REPLY
WITH
TELL
ME
MORE
ABOUT
YOUR
MOM
MODIFY
THIS
PROGRAM
SO
THAT
IT
APPEARS
TO
HAVE
UNDERSTANDING
BY
SIMILAR
MEANS
OF
WORD
RECOGNITION
AS
USED
IN
THE
ELIZA
PROGRAM
SPECIFICALLY
INCORPORATE
A
SET
OF
TRIGGER
WORDS
THAT
IF
FOUND
CAUSES
A
SPECIFIC
RESPONSE
TO
BE
GIVEN
FOR
EXAMPLE
IF
THE
WORD
I
APPEARS
IN
THE
QUESTION
FOR
EXAMPLE
WILL
I
EVER
BE
RICH
OR
AM
I
ALWAYS
GOING
TO
BE
HAPPY
THE
RESPONSE
MAY
BE
YOU
ARE
IN
CHARGE
OF
YOUR
OWN
DESTINY
IF
THE
WORD
NEW
APPEARS
IN
THE
QUESTION
FOR
EXAMPLE
WILL
I
FIND
A
NEW
BOYFRIEND
SOON
OR
WILL
I
FIND
A
NEW
LIFE
THE
RESPONSE
MAY
BE
CHANGES
ARE
UP
TO
YOU
AND
THE
UNPRE
DICTABLE
EVENTS
IN
LIFE
BE
CREATIVE
IN
ORDER
TO
DETERMINE
IF
A
GIVEN
WORD
OR
PHRASE
APPEARS
IN
A
GIVEN
QUESTION
MAKE
USE
OF
THE
IN
MEMBERSHIP
OPERATOR
PROGRAM
DEVELOPMENT
PROBLEMS
METRIC
CONVERSION
DEVELOP
AND
TEST
A
PYTHON
PROGRAM
THAT
CONVERTS
POUNDS
TO
GRAMS
INCHES
TO
CENTIMETERS
AND
KILOMETERS
TO
MILES
THE
PROGRAM
SHOULD
ALLOW
CONVERSIONS
BOTH
WAYS
LEAP
YEARS
TO
COME
DEVELOP
AND
TEST
A
PYTHON
PROGRAM
THAT
DISPLAYS
FUTURE
LEAP
YEARS
STARTING
WITH
THE
FIRST
OCCURRING
LEAP
YEAR
FROM
THE
CURRENT
YEAR
UNTIL
A
FINAL
YEAR
ENTERED
BY
THE
USER
HINT
MODULE
DATETIME
USED
IN
THE
AGE
IN
SECONDS
PROGRAM
OF
CHAPTER
WILL
BE
NEEDED
HERE
CHAPTER
CONTROL
STRUCTURES
THE
FIRST
TIME
HOME
BUYER
TAX
CREDIT
DEVELOP
AND
TEST
A
PYTHON
PROGRAM
THAT
DETERMINES
IF
AN
INDIVIDUAL
QUALIFIES
FOR
A
GOVERNMENT
FIRST
TIME
HOME
BUYER
TAX
CREDIT
OF
THE
CREDIT
WAS
ONLY
AVAILABLE
TO
THOSE
THAT
A
BOUGHT
A
HOUSE
THAT
COST
LESS
THAN
B
HAD
A
COMBINED
INCOME
OF
UNDER
AND
C
HAD
NOT
OWNED
A
PRIMARY
RESI
DENCE
IN
THE
LAST
THREE
YEARS
HOME
LOAN
AMORTIZATION
DEVELOP
AND
TEST
A
PYTHON
PROGRAM
THAT
CALCULATES
THE
MONTHLY
MORTGAGE
PAYMENTS
FOR
A
GIVEN
LOAN
AMOUNT
TERM
NUMBER
OF
YEARS
AND
RANGE
OF
INTEREST
RATES
FROM
TO
THE
FUNDAMENTAL
FORMULA
FOR
DETERMINING
THIS
IS
A
D
WHERE
A
IS
THE
ORIGINAL
LOAN
AMOUNT
AND
D
IS
THE
DISCOUNT
FACTOR
THE
DISCOUNT
FACTOR
IS
CALCULATED
AS
D
R
N
R
R
N
WHERE
N
IS
THE
NUMBER
OF
TOTAL
PAYMENTS
TIMES
THE
NUMBER
OF
YEARS
OF
THE
LOAN
AND
R
IS
THE
INTEREST
RATE
EXPRESSED
IN
DECIMAL
FORM
E
G
DIVIDED
BY
A
MONTHLY
PAYMENT
TABLE
SHOULD
BE
GENERATED
AS
SHOWN
BELOW
LOAN
AMOUNT
TERM
YEARS
INTEREST
RATE
MONTHLY
PAYMENT
CHECK
YOUR
RESULTS
WITH
AN
ONLINE
MORTGAGE
CALCULATOR
LIFE
SIGNS
DEVELOP
AND
TEST
A
PROGRAM
THAT
DETERMINES
HOW
MANY
BREATHS
AND
HOW
MANY
HEARTBEATS
A
PERSON
HAS
HAD
IN
THEIR
LIFE
THE
AVERAGE
RESPIRATION
BREATH
RATE
OF
PEOPLE
VARIES
WITH
AGE
USE
THE
BREATH
RATES
GIVEN
BELOW
FOR
USE
IN
YOUR
PROGRAM
BREATHS
PER
MINUTE
INFANT
YEARS
YEARS
YEARS
FOR
HEART
RATE
USE
AN
AVERAGE
OF
BEATS
PER
SECOND
IN
THIS
CHAPTER
WE
LOOK
AT
A
MEANS
OF
STRUCTURING
AND
ACCESSING
A
COLLECTION
OF
DATA
IN
PARTICULAR
WE
LOOK
AT
A
WAY
OF
ORGANIZING
DATA
IN
A
LINEAR
SEQUENCE
GENERALLY
REFERRED
TO
AS
A
LIST
OBJECTIVES
AFTER
READING
THIS
CHAPTER
AND
COMPLETING
THE
EXERCISES
YOU
WILL
BE
ABLE
TO
EXPLAIN
WHAT
A
LIST
IS
IN
PROGRAMMING
DESCRIBE
THE
TYPICAL
OPERATIONS
PERFORMED
ON
LISTS
EXPLAIN
WHAT
IS
MEANT
BY
LIST
TRAVERSAL
EFFECTIVELY
CREATE
AND
USE
LISTS
IN
PYTHON
EXPLAIN
THE
DIFFERENCE
BETWEEN
LISTS
AND
TUPLES
IN
PYTHON
EXPLAIN
WHAT
A
SEQUENCE
IS
IN
PYTHON
DESCRIBE
THE
SEQUENCE
OPERATIONS
COMMON
TO
LISTS
TUPLES
AND
STRINGS
IN
PYTHON
EFFECTIVELY
USE
NESTED
LISTS
AND
TUPLES
IN
PYTHON
EFFECTIVELY
ITERATE
OVER
LISTS
SEQUENCES
IN
PYTHON
EFFECTIVELY
USE
FOR
STATEMENTS
FOR
ITERATIVE
CONTROL
IN
PYTHON
USE
THE
RANGE
FUNCTION
IN
PYTHON
EXPLAIN
HOW
LIST
REPRESENTATION
RELATES
TO
LIST
ASSIGNMENT
IN
PYTHON
EFFECTIVELY
USE
LIST
COMPREHENSIONS
IN
PYTHON
WRITE
PYTHON
PROGRAMS
USING
SEQUENCES
CHAPTER
CONTENTS
MOTIVATION
FUNDAMENTAL
CONCEPTS
LIST
STRUCTURES
LISTS
SEQUENCES
IN
PYTHON
CHAPTER
LISTS
ITERATING
OVER
LISTS
SEQUENCES
IN
PYTHON
MORE
ON
PYTHON
LISTS
COMPUTATIONAL
PROBLEM
SOLVING
CALENDAR
YEAR
PROGRAM
MOTIVATION
THE
WAY
THAT
DATA
IS
ORGANIZED
HAS
A
SIGNIFICANT
IMPACT
ON
HOW
EFFEC
TIVELY
IT
CAN
BE
USED
ONE
OF
THE
MOST
OBVIOUS
AND
USEFUL
WAYS
TO
ORGANIZE
DATA
IS
AS
A
LIST
WE
USE
LISTS
IN
OUR
EVERYDAY
LIVES
WE
MAKE
SHOPPING
LISTS
TO
DO
LISTS
AND
MENTAL
CHECKLISTS
VARIOUS
FORMS
OF
LISTS
ARE
PROVIDED
BY
PROGRAMMING
LANGUAGES
DIFFERING
IN
THE
ELE
MENTS
THEY
CAN
STORE
MIXED
TYPE
THEIR
SIZE
VARIABLE
SIZE
WHETHER
THEY
CAN
BE
ALTERED
MUTABLE
AND
THE
OPERATIONS
THAT
CAN
BE
PER
FORMED
ON
THEM
SEE
FIGURE
LISTS
ALSO
OCCUR
IN
NATURE
OUR
DNA
IS
ESSENTIALLY
A
LONG
LIST
OF
MOLECULES
IN
THE
FORM
OF
A
DOUBLE
HELIX
FOUND
IN
THE
NUCLEUS
OF
ALL
HUMAN
CELLS
AND
ALL
LIVING
ORGANISMS
ITS
PURPOSE
IS
ALSO
TO
STORE
INFORMATION
SPECIFICALLY
THE
INSTRUCTIONS
THAT
ARE
USED
TO
CONSTRUCT
ALL
OTHER
CELLS
IN
THE
BODY
THAT
WE
CALL
GENES
GIVEN
THE
BILLION
NUCLEOTIDES
THAT
MAKE
UP
THE
HUMAN
GENOME
DETERMINING
THEIR
SEQUENCING
AND
THUS
UNDERSTANDING
OUR
GENETIC
MAKEUP
IS
FUNDAMENTALLY
A
COMPUTATIONAL
PROBLEM
IN
THIS
CHAPTER
WE
LOOK
AT
THE
USE
OF
LISTS
AND
OTHER
SEQUENCES
IN
PYTHON
FIGURE
LIST
PROPERTIES
AND
COMMON
OPERATIONS
LIST
STRUCTURES
FUNDAMENTAL
CONCEPTS
LIST
STRUCTURES
IN
THIS
SECTION
WE
INTRODUCE
THE
USE
OF
LISTS
IN
PROGRAMMING
THE
CONCEPT
OF
A
LIST
IS
SIMILAR
TO
OUR
EVERYDAY
NOTION
OF
A
LIST
WE
READ
OFF
ACCESS
ITEMS
ON
OUR
TO
DO
LIST
ADD
ITEMS
CROSS
OFF
DELETE
ITEMS
AND
SO
FORTH
WE
LOOK
AT
THE
USE
OF
LISTS
NEXT
WHAT
IS
A
LIST
A
LIST
IS
A
LINEAR
DATA
STRUCTURE
MEANING
THAT
ITS
ELEMENTS
HAVE
A
LINEAR
ORDERING
THAT
IS
THERE
IS
A
FIRST
ELEMENT
A
SECOND
ELEMENT
AND
SO
ON
FIGURE
DEPICTS
A
LIST
STORING
THE
AVERAGE
TEMPERATURE
FOR
EACH
DAY
OF
A
GIVEN
WEEK
IN
WHICH
EACH
ITEM
IN
THE
LIST
IS
IDENTIFIED
BY
ITS
INDEX
VALUE
THE
LOCATION
AT
INDEX
STORES
THE
TEMPERATURE
FOR
SUNDAY
THE
LOCATION
AT
INDEX
STORES
THE
TEMPERATURE
FOR
MONDAY
AND
SO
ON
IT
IS
CUSTOMARY
IN
PROGRAMMING
LANGUAGES
TO
BEGIN
NUMBER
ING
SEQUENCES
OF
ITEMS
WITH
AN
INDEX
VALUE
OF
RATHER
THAN
THIS
IS
REFERRED
TO
AS
ZERO
BASED
INDEXING
THIS
IS
IMPORTANT
TO
KEEP
IN
MIND
TO
AVOID
ANY
OFF
BY
ONE
ERRORS
IN
PROGRAMS
AS
WE
SHALL
SEE
WE
NEXT
LOOK
AT
SOME
COMMON
OPERATIONS
PERFORMED
ON
LISTS
FIGURE
INDEXED
DATA
STRUCTURE
COMMON
LIST
OPERATIONS
OPERATIONS
COMMONLY
PERFORMED
ON
LISTS
INCLUDE
RETRIEVE
UPDATE
INSERT
DELETE
REMOVE
AND
APPEND
FIGURE
DEPICTS
THESE
OPERATIONS
ON
A
LIST
OF
INTEGERS
CHAPTER
LISTS
FIGURE
COMMON
LIST
OPERATIONS
THE
OPERATION
DEPICTED
IN
A
RETRIEVES
ELEMENTS
OF
A
LIST
BY
INDEX
VALUE
THUS
THE
VALUE
IS
RETRIEVED
AT
INDEX
THE
FIFTH
ITEM
IN
THE
LIST
THE
REPLACE
OPERATION
IN
B
UPDATES
THE
CURRENT
VALUE
AT
INDEX
WITH
THE
INSERT
OPERATION
IN
C
INSERTS
THE
NEW
VALUE
AT
INDEX
THUS
SHIFTING
DOWN
ALL
ELEMENTS
BELOW
THAT
POINT
AND
LENGTHENING
THE
LIST
BY
ONE
IN
D
THE
REMOVE
OPERATION
DELETES
THE
ELEMENT
AT
INDEX
THUS
SHIFTING
UP
ALL
ELEMENTS
BELOW
THAT
POINT
AND
SHORTENING
THE
LIST
BY
ONE
FINALLY
THE
APPEND
OPERATION
IN
E
ADDS
A
NEW
VALUE
TO
THE
END
OF
THE
LIST
IN
THE
FOLLOWING
SECTIONS
WE
WILL
SEE
HOW
THESE
OPERATIONS
ARE
ACCOMPLISHED
IN
PYTHON
FIRST
WE
LOOK
AT
WHAT
IS
CALLED
LIST
TRAVERSAL
A
WAY
OF
ACCESSING
EACH
OF
THE
ELEMENTS
OF
A
GIVEN
LIST
LIST
TRAVERSAL
A
LIST
TRAVERSAL
IS
A
MEANS
OF
ACCESSING
ONE
BY
ONE
THE
ELEMENTS
OF
A
LIST
FOR
EXAMPLE
TO
ADD
UP
ALL
THE
ELEMENTS
IN
A
LIST
OF
INTEGERS
EACH
ELEMENT
CAN
BE
ACCESSED
ONE
BY
ONE
STARTING
WITH
THE
FIRST
AND
ENDING
WITH
THE
LAST
ELEMENT
SIMILARLY
THE
LIST
COULD
BE
TRAVERSED
STARTING
WITH
THE
LAST
ELEMENT
LIST
STRUCTURES
AND
ENDING
WITH
THE
FIRST
TO
FIND
A
PARTICULAR
VALUE
IN
A
LIST
ALSO
REQUIRES
TRAVERSAL
WE
DEPICT
THE
TASKS
OF
SUMMING
AND
SEARCHING
A
LIST
IN
FIGURE
FIGURE
LIST
TRAVERSAL
SELF
TEST
QUESTIONS
WHAT
WOULD
BE
THE
RANGE
OF
INDEX
VALUES
FOR
A
LIST
OF
ELEMENTS
A
B
C
WHICH
ONE
OF
THE
FOLLOWING
IS
NOT
A
COMMON
OPERATION
ON
LISTS
A
ACCESS
B
REPLACE
C
INTERLEAVE
D
APPEND
E
INSERT
F
DELETE
WHICH
OF
THE
FOLLOWING
WOULD
BE
THE
RESULTING
LIST
AFTER
INSERTING
THE
VALUE
AT
INDEX
ANSWERS
A
C
B
A
B
C
CHAPTER
LISTS
LISTS
SEQUENCES
IN
PYTHON
NEXT
WE
LOOK
AT
LISTS
AND
OTHER
SEQUENCE
TYPES
IN
PYTHON
PYTHON
LIST
TYPE
A
LIST
IN
PYTHON
IS
A
MUTABLE
LINEAR
DATA
STRUCTURE
OF
VARIABLE
LENGTH
ALLOWING
MIXED
TYPE
ELEMENTS
MUTABLE
MEANS
THAT
THE
CONTENTS
OF
THE
LIST
MAY
BE
ALTERED
LISTS
IN
PYTHON
USE
ZERO
BASED
INDEXING
THUS
ALL
LISTS
HAVE
INDEX
VALUES
N
WHERE
N
IS
THE
NUMBER
OF
ELEMENTS
IN
THE
LIST
LISTS
ARE
DENOTED
BY
A
COMMA
SEPARATED
LIST
OF
ELEMENTS
WITHIN
SQUARE
BRACKETS
AS
SHOWN
BELOW
ONE
TWO
THREE
APPLES
TRUE
AN
EMPTY
LIST
IS
DENOTED
BY
AN
EMPTY
PAIR
OF
SQUARE
BRACKETS
WE
SHALL
LATER
SEE
THE
USEFUL
NESS
OF
THE
EMPTY
LIST
ELEMENTS
OF
A
LIST
ARE
ACCESSED
BY
USING
AN
INDEX
VALUE
WITHIN
SQUARE
BRACKETS
LST
LST
ACCESS
OF
FIRST
ELEMENT
LST
ACCESS
OF
SECOND
ELEMENT
LST
ACCESS
OF
THIRD
ELEMENT
THUS
FOR
EXAMPLE
THE
FOLLOWING
PRINTS
THE
FIRST
ELEMENT
OF
LIST
LST
PRINT
LST
THE
ELEMENTS
IN
LIST
LST
CAN
BE
SUMMED
AS
FOLLOWS
SUM
LST
LST
LST
FOR
LONGER
LISTS
WE
WOULD
WANT
TO
HAVE
A
MORE
CONCISE
WAY
OF
TRAVERSING
THE
ELEMENTS
WE
DISCUSS
THIS
BELOW
ELEMENTS
OF
A
LIST
CAN
BE
UPDATED
REPLACED
OR
DELETED
REMOVED
AS
FOLLOWS
FOR
LST
LST
DEL
LST
REPLACEMENT
OF
WITH
AT
INDEX
REMOVAL
OF
AT
INDEX
METHODS
INSERT
AND
APPEND
ALSO
PROVIDE
A
MEANS
OF
ALTERING
A
LIST
LST
INSERT
INSERTION
OF
AT
INDEX
LST
APPEND
APPENDING
OF
TO
END
OF
LIST
IN
ADDITION
METHODS
SORT
AND
REVERSE
REORDER
THE
ELEMENTS
OF
A
GIVEN
LIST
THESE
LIST
MODIFYING
OPERATIONS
ARE
SUMMARIZED
IN
FIGURE
LISTS
SEQUENCES
IN
PYTHON
FIGURE
LIST
MODIFICATION
OPERATIONS
IN
PYTHON
METHODS
AND
THE
ASSOCIATED
DOT
NOTATION
USED
ARE
FULLY
EXPLAINED
IN
CHAPTER
ON
OBJECTS
AND
THEIR
USE
WE
ONLY
MENTION
METHODS
HERE
FOR
THE
SAKE
OF
COMPLETENESS
IN
COVERING
THE
TOPIC
OF
LIST
OPERATIONS
TUPLES
A
TUPLE
IS
AN
IMMUTABLE
LINEAR
DATA
STRUCTURE
THUS
IN
CONTRAST
TO
LISTS
ONCE
A
TUPLE
IS
DEFINED
IT
CANNOT
BE
ALTERED
OTHERWISE
TUPLES
AND
LISTS
ARE
ESSENTIALLY
THE
SAME
TO
DISTINGUISH
TUPLES
FROM
LISTS
TUPLES
ARE
DENOTED
BY
PARENTHESES
INSTEAD
OF
SQUARE
BRACKETS
AS
GIVEN
BELOW
NUMS
STUDENT
JOHN
SMITH
COMPUTER
SCIENCE
CHAPTER
LISTS
ANOTHER
DIFFERENCE
BETWEEN
TUPLES
AND
LISTS
IS
THAT
TUPLES
OF
ONE
ELEMENT
MUST
INCLUDE
A
COMMA
FOLLOWING
THE
ELEMENT
OTHERWISE
THE
PARENTHESIZED
ELEMENT
WILL
NOT
BE
MADE
INTO
A
TUPLE
AS
SHOWN
BELOW
CORRECT
WRONG
AN
EMPTY
TUPLE
IS
REPRESENTED
BY
A
SET
OF
EMPTY
PARENTHESES
WE
SHALL
LATER
SEE
THE
USEFUL
NESS
OF
THE
EMPTY
TUPLE
THE
ELEMENTS
OF
TUPLES
ARE
ACCESSED
THE
SAME
AS
LISTS
WITH
SQUARE
BRACKETS
NUMS
STUDENT
JOHN
SMITH
ANY
ATTEMPT
TO
ALTER
A
TUPLE
IS
INVALID
THUS
DELETE
UPDATE
INSERT
AND
APPEND
OPERATIONS
ARE
NOT
DEFINED
ON
TUPLES
FOR
NOW
WE
CAN
CONSIDER
USING
TUPLES
WHEN
THE
INFORMATION
TO
REPRESENT
SHOULD
NOT
BE
ALTERED
WE
WILL
SEE
ADDITIONAL
USES
OF
TUPLES
IN
THE
COMING
CHAPTERS
SEQUENCES
A
SEQUENCE
IN
PYTHON
IS
A
LINEARLY
ORDERED
SET
OF
ELEMENTS
ACCESSED
BY
AN
INDEX
NUMBER
LISTS
TUPLES
AND
STRINGS
ARE
ALL
SEQUENCES
STRINGS
LIKE
TUPLES
ARE
IMMUTABLE
THEREFORE
THEY
CANNOT
BE
ALTERED
WE
GIVE
SEQUENCE
OPERATIONS
COMMON
TO
STRINGS
LISTS
AND
TUPLES
IN
FIGURE
FOR
ANY
SEQUENCE
LEN
GIVES
ITS
LENGTH
AND
K
RETRIEVES
THE
ELEMENT
AT
INDEX
K
THE
SLICE
OPERATION
RETURNS
A
SUBSEQUENCE
OF
A
SEQUENCE
STARTING
WITH
THE
FIRST
INDEX
LOCATION
UP
TO
BUT
NOT
INCLUDING
THE
SECOND
THE
INDEX
FORM
OF
THE
SLICE
OPERATION
RETURNS
A
STRING
CONTAINING
ALL
THE
LIST
ELEMENTS
STARTING
FROM
THE
GIVEN
INDEX
LOCATION
TO
THE
END
OF
THE
SEQUENCE
THE
COUNT
METHOD
RETURNS
HOW
MANY
INSTANCES
OF
A
GIVEN
VALUE
OCCUR
WITHIN
A
SEQUENCE
AND
THE
FIND
METHOD
RETURNS
THE
INDEX
LOCATION
OF
THE
FIRST
OCCURRENCE
OF
A
SPECIFIC
ITEM
RETURNING
IF
NOT
FOUND
FOR
DETERMINING
ONLY
IF
A
GIVEN
VALUE
OCCURS
WITHIN
A
LISTS
SEQUENCES
IN
PYTHON
FIGURE
SEQUENCE
OPERATIONS
IN
PYTHON
SEQUENCE
WITHOUT
NEEDING
TO
KNOW
WHERE
THE
IN
OPERATOR
INTRODUCED
IN
CHAPTER
CAN
BE
USED
INSTEAD
THE
OPERATOR
IS
USED
TO
DENOTE
CONCATENATION
SINCE
THE
PLUS
SIGN
ALSO
DENOTES
ADDITION
PYTHON
DETERMINES
WHICH
OPERATION
TO
PERFORM
BASED
ON
THE
OPERAND
TYPES
THUS
THE
PLUS
SIGN
IS
REFERRED
TO
AS
AN
OVERLOADED
OPERATOR
IF
BOTH
OPERANDS
ARE
NUMERIC
TYPES
ADDITION
IS
PERFORMED
IF
BOTH
OPERANDS
ARE
SEQUENCE
TYPES
CONCATENATION
IS
PERFORMED
IF
A
MIX
OF
NUMERIC
AND
SEQUENCE
OPERANDS
IS
USED
AN
UNSUPPORTED
OPERAND
TYPE
FOR
ERROR
MESSAGE
WILL
OCCUR
OPERATIONS
MIN
MAX
RETURN
THE
SMALLEST
LARGEST
VALUE
OF
A
SEQUENCE
AND
SUM
RETURNS
THE
SUM
OF
ALL
THE
ELEMENTS
WHEN
OF
NUMERIC
TYPE
FINALLY
THE
COMPARISON
OPERATOR
RETURNS
TRUE
IF
THE
TWO
SEQUENCES
ARE
THE
SAME
LENGTH
AND
THEIR
CORRESPONDING
ELEMENTS
ARE
EQUAL
TO
EACH
OTHER
LET
TR
Y
IT
FROM
THE
PYTHON
SHELL
ENTER
THE
FOLLOWING
AND
OBSERVE
THE
RESULTS
COCONUT
COUNT
O
COUNT
COUNT
INDEX
O
INDEX
INDEX
JUICE
CHAPTER
LISTS
NESTED
LISTS
LISTS
AND
TUPLES
CAN
CONTAIN
ELEMENTS
OF
ANY
TYPE
INCLUDING
OTHER
SEQUENCES
THUS
LISTS
AND
TUPLES
CAN
BE
NESTED
TO
CREATE
ARBITRARILY
COMPLEX
DATA
STRUCTURES
BELOW
IS
A
LIST
OF
EXAM
GRADES
FOR
EACH
STUDENT
IN
A
GIVEN
CLASS
IN
THIS
LIST
FOR
EXAMPLE
EQUALS
AND
EQUALS
THUS
THE
FOLLOWING
WOULD
ACCESS
THE
FIRST
EXAM
GRADE
OF
THE
FIRST
STUDENT
IN
THE
LIST
HOWEVER
THERE
IS
NO
NEED
FOR
INTERMEDIATE
VARIABLES
AND
THE
EXAM
GRADE
CAN
BE
DIRECTLY
ACCESSED
AS
FOLLOWS
TO
CALCULATE
THE
CLASS
AVERAGE
ON
THE
FIRST
EXAM
A
WHILE
LOOP
CAN
BE
CONSTRUCTED
THAT
ITERATES
OVER
THE
FIRST
GRADE
OF
EACH
STUDENT
LIST
OF
GRADES
SUM
K
WHILE
K
LEN
SUM
SUM
K
K
K
SUM
FLOAT
LEN
IF
WE
WANTED
TO
PRODUCE
A
NEW
LIST
CONTAINING
THE
EXAM
AVERAGE
FOR
EACH
STUDENT
IN
THE
CLASS
WE
COULD
DO
THE
FOLLOWING
K
WHILE
K
LEN
AVG
K
K
K
APPEND
AVG
K
K
EACH
TIME
THROUGH
THE
LOOP
THE
AVERAGE
OF
THE
EXAM
GRADES
FOR
A
STUDENT
IS
COMPUTED
AND
APPENDED
TO
LIST
WHEN
THE
LOOP
TERMINATES
WILL
CONTAIN
THE
CORRESPONDING
EXAM
AVERAGE
FOR
EACH
STUDENT
IN
THE
CLASS
LISTS
SEQUENCES
IN
PYTHON
LET
TR
Y
IT
FROM
THE
PYTHON
SHELL
ENTER
THE
FOLLOWING
AND
OBSERVE
THE
RESULTS
LST
LST
LST
LST
LST
LET
APPLY
IT
A
CHINESE
ZODIAC
PROGRAM
THE
FOLLOWING
PROGRAM
FIGURE
DETERMINES
THE
ANIMAL
AND
ASSOCIATED
CHARACTERISTICS
FROM
THE
CHINESE
ZODIAC
FOR
A
GIVEN
YEAR
OF
BIRTH
THIS
PROGRAM
UTILIZES
THE
FOLLOWING
PROGRAMMING
FEATURES
TUPLES
DATETIME
MODULE
EXAMPLE
EXECUTION
OF
THE
PROGRAM
IS
GIVEN
IN
FIGURE
FIGURE
EXECUTION
OF
THE
CHINESE
ZODIAC
PROGRAM
LINE
IMPORTS
THE
DATETIME
MODULE
IT
PROVIDES
THE
CURRENT
YEAR
LINE
USED
TO
CHECK
FOR
INVALID
YEARS
OF
BIRTH
ONLY
YEARS
BETWEEN
AND
THE
CURRENT
YEAR
ARE
CONSIDERED
VALID
LINES
PERFORM
THE
INITIALIZATION
FOR
THE
PROGRAM
THE
VARIABLES
ON
LINES
ARE
ASSIGNED
THE
CHARACTERISTICS
OF
EACH
ANIMAL
THE
SET
OF
CHARACTERISTICS
IS
REPRESENTED
AS
A
TUPLE
CHAPTER
LISTS
FIGURE
CHINESE
ZODIAC
PROGRAM
LINE
AND
NOT
A
LIST
TYPE
SINCE
THE
INFORMATION
IS
NOT
MEANT
TO
BE
ALTERED
IT
ASSOCIATES
EACH
SET
OF
CHARACTERISTICS
WITH
THE
CORRESPONDING
YEAR
OF
THE
TWELVE
YEAR
CYCLE
OF
THE
ZODIAC
BASED
ON
THEIR
POSITION
IN
THE
TUPLE
WE
COULD
HAVE
DEFINED
CHARACTERISTICS
TO
CONTAIN
EACH
OF
THE
TWELVE
STRING
DESCRIPTIONS
WITHOUT
THE
USE
OF
VARIABLES
RAT
OX
AND
SO
ON
IT
WAS
WRITTEN
THIS
ITERATING
OVER
LISTS
SEQUENCES
IN
PYTHON
WAY
FOR
THE
SAKE
OF
READABILITY
VARIABLE
TERMINATE
INITIALIZED
TO
FALSE
IS
A
BOOLEAN
FLAG
USED
TO
QUIT
THE
PROGRAM
ONCE
SET
TO
TRUE
IN
RESPONSE
TO
THE
USER
BEING
ASKED
TO
CONTINUE
WITH
ANOTHER
MONTH
OR
NOT
AT
LINE
LINES
DISPLAY
THE
PROGRAM
GREETING
LINES
COMPRISE
THE
MAIN
LOOP
OF
THE
PROGRAM
THE
WHILE
LOOP
AT
LINE
ENSURES
THAT
THE
ENTERED
YEAR
IS
VALID
ON
LINE
THE
FOR
THE
INDIVIDUAL
IS
ASSIGNED
A
VALUE
BETWEEN
BASED
ON
THEIR
YEAR
OF
BIRTH
SINCE
THE
YEAR
WAS
THE
YEAR
OF
THE
RAT
IN
THE
CHINESE
ZODIAC
THE
VALUE
OF
IS
LINES
THEN
USE
THE
AS
AN
INDEX
INTO
TUPLE
TO
GET
THE
ANIMAL
FOR
THAT
BIRTH
YEAR
AND
TUPLE
CHARACTERISTICS
TO
GET
THE
ASSOCIATED
PERSONAL
CHARACTERISTICS
TO
DISPLAY
THE
RESULTS
SELF
TEST
QUESTIONS
WHICH
OF
THE
FOLLOWING
SEQUENCE
TYPES
IS
A
MUTABLE
TYPE
A
STRINGS
B
LISTS
C
TUPLES
WHICH
OF
THE
FOLLOWING
IS
TRUE
A
LISTS
AND
TUPLES
ARE
DENOTED
BY
THE
USE
OF
SQUARE
BRACKETS
B
LISTS
ARE
DENOTED
BY
USE
OF
SQUARE
BRACKETS
AND
TUPLES
ARE
DENOTED
BY
THE
USE
OF
PARENTHESES
C
LISTS
ARE
DENOTED
BY
USE
OF
PARENTHESES
AND
TUPLES
ARE
DENOTED
BY
THE
USE
OF
SQUARE
BRACKETS
LISTS
AND
TUPLES
MUST
EACH
CONTAIN
AT
LEAST
ONE
ELEMENT
TRUE
FALSE
FOR
LST
WHAT
IS
THE
RESULT
OF
THE
FOLLOWING
OPERATION
LST
INSERT
A
B
C
WHICH
OF
THE
FOLLOWING
IS
THE
CORRECT
WAY
TO
DENOTE
A
TUPLE
OF
ONE
ELEMENT
A
B
C
D
WHICH
OF
THE
FOLLOWING
SET
OF
OPERATIONS
CAN
BE
APPLIED
TO
ANY
SEQUENCE
A
LEN
I
W
CONCATENATION
B
MAX
I
SUM
C
LEN
I
SORT
ANSWERS
B
B
FALSE
A
D
A
ITERATING
OVER
LISTS
SEQUENCES
IN
PYTHON
PYTHON
FOR
STATEMENT
PROVIDES
A
CONVENIENT
MEANS
OF
ITERATING
OVER
LISTS
AND
OTHER
SEQUENCES
IN
THIS
SECTION
WE
LOOK
AT
BOTH
FOR
LOOPS
AND
WHILE
LOOPS
FOR
LIST
ITERATION
FOR
LOOPS
A
FOR
STATEMENT
IS
AN
ITERATIVE
CONTROL
STATEMENT
THAT
ITERATES
ONCE
FOR
EACH
ELEMENT
IN
A
SPECIFIED
SEQUENCE
OF
ELEMENTS
THUS
FOR
LOOPS
ARE
USED
TO
CONSTRUCT
DEFINITE
LOOPS
FOR
EXAMPLE
A
FOR
LOOP
IS
GIVEN
IN
FIGURE
THAT
PRINTS
OUT
THE
VALUES
OF
A
SPECIFIC
LIST
OF
INTEGERS
CHAPTER
LISTS
FIGURE
THE
FOR
STATEMENT
IN
PYTHON
VARIABLE
K
IS
REFERRED
TO
AS
A
LOOP
VARIABLE
SINCE
THERE
ARE
SIX
ELEMENTS
IN
THE
PROVIDED
LIST
THE
FOR
LOOP
ITERATES
EXACTLY
SIX
TIMES
TO
CONTRAST
THE
USE
OF
FOR
LOOPS
AND
WHILE
LOOPS
FOR
LIST
ITERATION
THE
SAME
ITERATION
IS
PROVIDED
AS
A
WHILE
LOOP
BELOW
K
WHILE
K
LEN
NUMS
PRINT
NUMS
K
K
K
IN
THE
WHILE
LOOP
VERSION
LOOP
VARIABLE
K
MUST
BE
INITIALIZED
TO
AND
INCREMENTED
BY
EACH
TIME
THROUGH
THE
LOOP
IN
THE
FOR
LOOP
VERSION
LOOP
VARIABLE
K
AUTOMATICALLY
ITERATES
OVER
THE
PROVIDED
SEQUENCE
OF
VALUES
THE
FOR
STATEMENT
CAN
BE
APPLIED
TO
ALL
SEQUENCE
TYPES
INCLUDING
STRINGS
THUS
ITERATION
OVER
A
STRING
CAN
BE
DONE
AS
FOLLOWS
WHICH
PRINTS
EACH
LETTER
ON
A
SEPARATE
LINE
FOR
CH
IN
HELLO
PRINT
CH
NEXT
WE
LOOK
AT
THE
USE
OF
THE
BUILT
IN
RANGE
FUNCTION
WITH
FOR
LOOPS
THE
BUILT
IN
RANGE
FUNCTION
PYTHON
PROVIDES
A
BUILT
IN
RANGE
FUNCTION
THAT
CAN
BE
USED
FOR
GENERATING
A
SEQUENCE
OF
INTEGERS
THAT
A
FOR
LOOP
CAN
ITERATE
OVER
AS
SHOWN
BELOW
SUM
FOR
K
IN
RANGE
SUM
SUM
K
ITERATING
OVER
LISTS
SEQUENCES
IN
PYTHON
THE
VALUES
IN
THE
GENERATED
SEQUENCE
INCLUDE
THE
STARTING
VALUE
UP
TO
BUT
NOT
INCLUDING
THE
ENDING
VALUE
FOR
EXAMPLE
RANGE
GENERATES
THE
SEQUENCE
THUS
THIS
FOR
LOOP
ADDS
UP
THE
INTEGER
VALUES
THE
RANGE
FUNCTION
IS
CONVENIENT
WHEN
LONG
SEQUENCES
OF
INTEGERS
ARE
NEEDED
ACTUALLY
RANGE
DOES
NOT
CREATE
A
SEQUENCE
OF
INTEGERS
IT
CREATES
A
GENERATOR
FUNCTION
ABLE
TO
PRODUCE
EACH
NEXT
ITEM
OF
THE
SEQUENCE
WHEN
NEEDED
THIS
SAVES
MEMORY
ESPECIALLY
FOR
LONG
LISTS
THEREFORE
TYPING
RANGE
IN
THE
PYTHON
SHELL
DOES
NOT
PRODUCE
A
LIST
AS
EXPECTED
IT
SIMPLY
ECHOES
OUT
THE
CALL
TO
RANGE
BY
DEFAULT
THE
RANGE
FUNCTION
GENERATES
A
SEQUENCE
OF
CONSECUTIVE
INTEGERS
A
STEP
VALUE
CAN
BE
PROVIDED
HOWEVER
FOR
EXAMPLE
RANGE
PRODUCES
THE
SEQUENCE
WITH
A
STEP
VALUE
OF
A
SEQUENCE
CAN
ALSO
BE
GENERATED
BACKWARDS
WHEN
GIVEN
A
NEGATIVE
STEP
VALUE
FOR
EXAMPLE
RANGE
PRODUCES
THE
SEQUENCE
NOTE
THAT
SINCE
THE
GENERATED
SEQUENCE
ALWAYS
BEGINS
WITH
THE
PROVIDED
STARTING
VALUE
UP
TO
BUT
NOT
INCLUDING
THE
FINAL
VALUE
THE
FINAL
VALUE
HERE
IS
AND
NOT
ITERATING
OVER
LIST
ELEMENTS
VS
LIST
INDEX
VALUES
WHEN
THE
ELEMENTS
OF
A
LIST
NEED
TO
BE
ACCESSED
BUT
NOT
ALTERED
A
LOOP
VARIABLE
THAT
ITERATES
OVER
EACH
LIST
ELEMENT
IS
AN
APPROPRIATE
APPROACH
HOWEVER
THERE
ARE
TIMES
WHEN
THE
LOOP
VARIABLE
MUST
ITERATE
OVER
THE
INDEX
VALUES
OF
A
LIST
INSTEAD
A
COMPARISON
OF
THE
TWO
APPROACHES
IS
SHOWN
IN
FIGURE
FIGURE
ITERATING
OVER
THE
ELEMENTS
VS
THE
INDEX
VALUES
OF
A
GIVEN
SEQUENCE
CHAPTER
LISTS
SUPPOSE
THE
AVERAGE
OF
A
LIST
OF
CLASS
GRADES
NAMED
GRADES
NEEDS
TO
BE
COMPUTED
IN
THIS
CASE
A
FOR
LOOP
CAN
BE
CONSTRUCTED
TO
ITERATE
OVER
THE
GRADES
FOR
K
IN
GRADES
SUM
SUM
K
PRINT
CLASS
AVERAGE
IS
SUM
LEN
GRADES
HOWEVER
SUPPOSE
THAT
THE
INSTRUCTOR
MADE
A
MISTAKE
IN
GRADING
AND
A
POINT
NEEDED
TO
BE
ADDED
TO
EACH
STUDENT
GRADE
IN
ORDER
TO
ACCOMPLISH
THIS
THE
INDEX
VALUE
THE
LOCATION
OF
EACH
ELEMENT
MUST
BE
USED
TO
UPDATE
EACH
GRADE
VALUE
THUS
THE
LOOP
VARIABLE
OF
THE
FOR
LOOP
MUST
ITERATE
OVER
THE
INDEX
VALUES
OF
THE
LIST
FOR
K
IN
RANGE
LEN
GRADES
GRADES
K
GRADES
K
IN
SUCH
CASES
THE
LOOP
VARIABLE
K
IS
ALSO
FUNCTIONING
AS
AN
INDEX
VARIABLE
AN
INDEX
VARIABLE
IS
A
VARIABLE
WHOSE
CHANGING
VALUE
IS
USED
TO
ACCESS
ELEMENTS
OF
AN
INDEXED
DATA
STRUCTURE
NOTE
THAT
THE
RANGE
FUNCTION
MAY
BE
GIVEN
ONLY
ONE
ARGUMENT
IN
THAT
CASE
THE
STARTING
VALUE
OF
THE
RANGE
DEFAULTS
TO
THUS
RANGE
LEN
GRADES
IS
EQUIVALENT
TO
RANGE
LEN
GRADES
WHILE
LOOPS
AND
LISTS
SEQUENCES
THERE
ARE
SITUATIONS
IN
WHICH
A
SEQUENCE
IS
TO
BE
TRAVERSED
WHILE
A
GIVEN
CONDITION
IS
TRUE
IN
SUCH
CASES
A
WHILE
LOOP
IS
THE
APPROPRIATE
CONTROL
STRUCTURE
ANOTHER
APPROACH
FOR
THE
PARTIAL
TRAVERSAL
OF
A
SEQUENCE
IS
BY
USE
OF
A
FOR
LOOP
CONTAINING
BREAK
STATEMENTS
WE
AVOID
THE
USE
OF
BREAK
STATE
MENTS
IN
THIS
TEXT
FAVORING
THE
MORE
STRUCTURED
WHILE
LOOP
APPROACH
LET
SAY
THAT
WE
NEED
TO
DETERMINE
WHETHER
THE
VALUE
OCCURS
IN
LIST
NUMS
EQUAL
TO
IN
THIS
CASE
ONCE
THE
VALUE
IS
FOUND
THE
TRAVERSAL
OF
THE
LIST
IS
TERMINATED
AN
EXAMPLE
OF
THIS
IS
GIVEN
IN
FIGURE
VARIABLE
K
IS
INITIALIZED
TO
AND
USED
AS
AN
INDEX
VARIABLE
THUS
THE
FIRST
TIME
THROUGH
THE
LOOP
K
IS
AND
NUMS
WITH
THE
VALUE
IS
COMPARED
TO
SINCE
THEY
ARE
NOT
EQUAL
THE
SECOND
CLAUSE
OF
THE
IF
STATEMENT
IS
EXECUTED
INCREMENTING
K
TO
THE
LOOP
CONTINUES
UNTIL
EITHER
THE
ITEM
IS
FOUND
OR
THE
COMPLETE
LIST
HAS
BEEN
TRAVERSED
THE
FINAL
IF
STATEMENT
DETERMINES
ITERATING
OVER
LISTS
SEQUENCES
IN
PYTHON
FIGURE
LIST
SEARCH
IN
PYTHON
WHICH
OF
THE
TWO
POSSIBILITIES
FOR
ENDING
THE
LOOP
OCCURRED
DISPLAYING
EITHER
ITEM
FOUND
OR
ITEM
NOT
FOUND
FINALLY
NOTE
THAT
THE
CORRECT
LOOP
CONDITION
IS
K
LEN
NUMS
AND
NOT
K
LEN
NUMS
OTHERWISE
AN
INDEX
OUT
OF
RANGE
ERROR
WOULD
RESULT
LET
APPLY
IT
PASSWORD
ENCRYPTION
DECRYPTION
PROGRAM
THE
FOLLOWING
PROGRAM
FIGURE
ALLOWS
A
USER
TO
ENCRYPT
AND
DECRYPT
PASSWORDS
CONTAINING
UPPERCASE
LOWERCASE
CHARACTERS
DIGITS
AND
SPECIAL
CHARACTERS
THIS
PROGRAM
UTILIZES
THE
FOLLOWING
PROGRAMMING
FEATURES
FOR
LOOP
NESTED
SEQUENCES
TUPLES
EXAMPLE
PROGRAM
EXECUTION
IS
GIVEN
IN
FIGURE
LINES
PERFORM
THE
INITIALIZATION
NEEDED
FOR
THE
PROGRAM
VARIABLE
IS
USED
TO
HOLD
THE
ENCRYPTED
OR
DECRYPTED
OUTPUT
OF
THE
PROGRAM
SINCE
THE
OUTPUT
STRING
IS
CREATED
BY
APPENDING
TO
IT
EACH
TRANSLATED
CHARACTER
ONE
AT
A
TIME
IT
IS
INITIALIZED
TO
THE
EMPTY
STRING
CHAPTER
LISTS
FIGURE
EXECUTION
OF
PASSWORD
ENCRYPTION
DECRYPTION
PROGRAM
VARIABLE
HOLDS
THE
TUPLE
OF
TUPLES
USED
TO
ENCRYPT
DECRYPT
PASSWORDS
THIS
TUPLE
CONTAINS
AS
ELEMENTS
TUPLES
OF
LENGTH
TWO
A
M
B
H
ETC
THE
FIRST
TUPLE
A
M
FOR
EXAMPLE
IS
USED
TO
ENCODE
THE
LETTER
A
THUS
WHEN
ENCRYPTING
A
GIVEN
FILE
EACH
OCCURRENCE
OF
A
IS
REPLACED
BY
THE
LETTER
M
WHEN
DECRYPTING
THE
REVERSE
IS
DONE
ALL
OCCURRENCES
OF
LETTER
M
ARE
REPLACED
BY
THE
LETTER
A
LINE
CONTAINS
THE
PROGRAM
GREETING
LINE
INPUTS
FROM
THE
USER
WHETHER
THEY
WISH
TO
ENCRYPT
OR
DECRYPT
A
PASSWORD
BASED
ON
THE
RESPONSE
VARIABLE
ENCRYPTING
IS
SET
TO
EITHER
TRUE
OR
FALSE
LINE
THE
PROGRAM
SECTION
IN
LINES
PERFORMS
THE
ENCRYPTION
AND
DECRYPTION
IF
VARIABLE
ENCRYPTING
IS
EQUAL
TO
TRUE
THEN
IS
SET
TO
AND
IS
SET
TO
CAUSING
THE
DIRECTION
OF
THE
SUBSTITUTION
OF
LETTERS
TO
GO
FROM
THE
FIRST
IN
THE
PAIR
TO
THE
SECOND
A
RE
PLACED
BY
M
WHEN
ENCRYPTING
IS
FALSE
AND
THUS
DECRYPTION
SHOULD
BE
PERFORMED
THE
DIREC
TION
OF
THE
SUBSTITUTION
IS
FROM
THE
SECOND
OF
THE
PAIR
TO
THE
FIRST
M
REPLACED
BY
A
VARIABLE
LINE
IS
SET
TO
THE
DIFFERENCE
BETWEEN
THE
ENCODING
OF
THE
LOW
ERCASE
AND
THE
UPPERCASE
LETTERS
RECALL
THAT
THE
ENCODING
OF
THE
LOWERCASE
LETTERS
IS
GREATER
THAN
THAT
OF
THE
UPPERCASE
LETTERS
THE
FOR
LOOP
AT
LINE
PERFORMS
THE
ITERATION
OVER
THE
PAIRS
OF
LETTERS
IN
THE
ENCRYPTION
KEY
THE
FIRST
TIME
THROUGH
THE
LOOP
T
A
M
THUS
T
AND
T
REFER
TO
EACH
OF
THE
CHARACTERS
IN
THE
PAIR
SINCE
ALL
CHARACTERS
IN
THE
ENCRYPTION
KEY
ARE
IN
LOWERCASE
WHEN
UPPERCASE
LETTERS
ARE
FOUND
IN
THE
PASSWORD
THEY
ARE
CONVERTED
TO
LOWERCASE
BY
USE
OF
VARIABLE
LINE
BEFORE
BEING
COMPARED
TO
THE
LOWERCASE
LETTERS
IN
THE
ENCRYPTION
KEY
THIS
WORKS
BECAUSE
THE
CHARACTER
ENCODING
OF
ALL
LOWERCASE
LETTERS
IS
GREATER
THAN
THE
CORRESPONDING
UPPERCASE
VERSION
ORD
A
ORD
A
ORD
A
ORD
A
A
SIMILAR
APPROACH
IS
USED
FOR
CONVERTING
FROM
LOWERCASE
BACK
TO
UPPERCASE
FINALLY
ON
LINES
THE
ENCRYPTED
AND
DECRYPTED
VERSIONS
OF
THE
PASSWORD
ARE
DISPLAYED
TO
THE
USER
ITERATING
OVER
LISTS
SEQUENCES
IN
PYTHON
FIGURE
PASSWORD
ENCRYPTION
DECRYPTION
PROGRAM
THE
SUBSTITUTION
OCCURS
IN
THE
NESTED
FOR
LOOPS
IN
LINES
THE
OUTER
FOR
LOOP
ITERATES
VARIABLE
CH
OVER
EACH
CHARACTER
IN
THE
ENTERED
PASSWORD
TO
BE
ENCRYPTED
OR
DECRYPTED
THE
FIRST
STEP
OF
THE
OUTER
FOR
LOOP
IS
TO
INITIALIZE
TO
FALSE
THIS
VARIABLE
IS
USED
TO
INDICATE
IF
EACH
CHARACTER
IS
A
UPPERCASE
OR
LOWERCASE
LETTER
IF
SO
IT
IS
REPLACED
BY
ITS
CORRESPONDING
ENCODING
CHARACTER
IF
NOT
IT
MUST
BE
A
DIGIT
OR
SPECIAL
CHARACTER
AND
THUS
APPENDED
AS
IS
LINE
THE
CODE
ON
LINES
AND
LINES
IS
SIMILAR
TO
EACH
OTHER
THE
ONLY
DIFFERENCE
IS
THAT
SINCE
THE
LETTERS
IN
CHAPTER
LISTS
THE
ENCRYPTION
KEY
ARE
ALL
LOWERCASE
ANY
UPPERCASE
LETTERS
IN
THE
PASSWORD
NEED
TO
BE
CONVERTED
TO
LOWERCASE
BEFORE
BEING
COMPARED
TO
THE
LETTERS
IN
THE
KEY
SELF
TEST
QUESTIONS
FOR
NUMS
WHAT
DOES
THE
FOLLOWING
FOR
LOOP
OUTPUT
FOR
K
IN
NUMS
PRINT
K
A
B
C
FOR
NUMS
WHAT
DOES
THE
FOLLOWING
FOR
LOOP
OUTPUT
FOR
K
IN
RANGE
PRINT
NUMS
K
A
B
C
FOR
FRUIT
STRAWBERRY
WHAT
DOES
THE
FOLLOWING
FOR
LOOP
OUTPUT
FOR
K
IN
RANGE
LEN
FRUIT
PRINT
FRUIT
K
END
A
SRWER
B
TABRY
FOR
NUMS
WHAT
IS
THE
VALUE
OF
K
WHEN
THE
WHILE
LOOP
TERMINATES
K
WHILE
K
LEN
NUMS
AND
NUMS
K
K
K
A
B
C
ANSWERS
B
B
A
B
MORE
ON
PYTHON
LISTS
IN
THIS
SECTION
WE
TAKE
A
CLOSER
LOOK
AT
THE
ASSIGNMENT
OF
LISTS
WE
ALSO
INTRODUCE
A
USEFUL
AND
CONVENIENT
MEANS
OF
GENERATING
LISTS
THAT
THE
RANGE
FUNCTION
CANNOT
PRODUCE
CALLED
LIST
COMPREHENSIONS
ASSIGNING
AND
COPYING
LISTS
BECAUSE
OF
THE
WAY
THAT
LISTS
ARE
REPRESENTED
IN
PYTHON
WHEN
A
VARIABLE
IS
ASSIGNED
TO
ANOTHER
VARI
ABLE
HOLDING
A
LIST
EACH
VARIABLE
ENDS
UP
REFERRING
TO
THE
SAME
INSTANCE
OF
THE
LIST
IN
MEMORY
THIS
IS
DEPICTED
IN
FIGURE
MORE
ON
PYTHON
LISTS
FIGURE
ASSIGNMENT
OF
LISTS
THIS
HAS
IMPORTANT
IMPLICATIONS
FOR
EXAMPLE
IF
AN
ELEMENT
OF
IS
CHANGED
THEN
THE
CORRE
SPONDING
ELEMENT
OF
WILL
CHANGE
AS
WELL
CHANGE
MADE
IN
CHANGE
IN
CAUSES
A
CHANGE
IN
KNOWING
THAT
VARIABLES
AND
REFER
TO
THE
SAME
LIST
EXPLAINS
THIS
BEHAVIOR
THIS
ISSUE
DOES
NOT
APPLY
TO
STRINGS
AND
TUPLES
SINCE
THEY
ARE
IMMUTABLE
AND
THEREFORE
CANNOT
BE
MODIFIED
WHEN
NEEDED
A
COPY
OF
A
LIST
CAN
BE
MADE
AS
GIVEN
BELOW
LIST
IN
THIS
CASE
WE
GET
THE
FOLLOWING
RESULTS
LIST
CHANGE
MADE
IN
CHANGE
IN
DOES
NOT
CAUSE
ANY
CHANGE
IN
WHEN
COPYING
LISTS
THAT
HAVE
SUBLISTS
ANOTHER
MEANS
OF
COPYING
CALLED
DEEP
COPY
MAY
BE
NEEDED
WE
WILL
DISCUSS
THIS
FURTHER
IN
CHAPTER
WHEN
DISCUSSING
OBJECTS
IN
PYTHON
LET
TR
Y
IT
FROM
THE
PYTHON
SHELL
ENTER
THE
FOLLOWING
AND
OBSERVE
THE
RESULTS
RED
BLUE
GREEN
RED
BLUE
GREEN
LIST
YELLOW
YELLOW
CHAPTER
LISTS
LIST
COMPREHENSIONS
THE
RANGE
FUNCTION
ALLOWS
FOR
THE
GENERATION
OF
SEQUENCES
OF
INTEGERS
IN
FIXED
INCREMENTS
LIST
COMPREHENSIONS
IN
PYTHON
CAN
BE
USED
TO
GENERATE
MORE
VARIED
SEQUENCES
EXAMPLE
LIST
COMPRE
HENSIONS
ARE
GIVEN
IN
FIGURE
FIGURE
LIST
COMPREHENSIONS
IN
THE
FIGURE
A
GENERATES
A
LIST
OF
SQUARES
OF
THE
INTEGERS
IN
LIST
IN
B
SQUARES
ARE
GENERATED
FOR
EACH
VALUE
IN
RANGE
IN
C
ONLY
POSITIVE
ELEMENTS
OF
LIST
NUMS
ARE
INCLUDED
IN
THE
RESULTING
LIST
IN
D
A
LIST
CONTAINING
THE
CHARACTER
ENCODING
VALUES
IN
THE
STRING
HELLO
IS
CREATED
FINALLY
IN
E
TUPLE
VOWELS
IS
USED
FOR
GENERATING
A
LIST
CONTAINING
ONLY
THE
VOWELS
IN
STRING
W
LIST
COMPREHENSIONS
ARE
A
VERY
POWERFUL
FEATURE
OF
PYTHON
CALENDAR
YEAR
PROGRAM
COMPUTATIONAL
PROBLEM
SOLVING
CALENDAR
YEAR
PROGRAM
IN
THIS
SECTION
WE
EXTEND
THE
CALENDAR
MONTH
PROGRAM
GIVEN
IN
THE
COMPUTATIONAL
PROBLEM
SOLVING
SECTION
OF
CHAPTER
TO
DISPLAY
A
COMPLETE
CALENDAR
YEAR
THE
PROBLEM
THE
PROBLEM
IS
TO
DISPLAY
A
CALENDAR
YEAR
FOR
ANY
YEAR
BETWEEN
AND
INCLUSIVE
THE
FORMAT
OF
THE
DISPLAYED
YEAR
SHOULD
BE
AS
DEPICTED
IN
FIGURE
FIGURE
CALENDAR
MONTH
DISPLAY
PROBLEM
ANALYSIS
THE
COMPUTATIONAL
ISSUES
FOR
THIS
PROBLEM
ARE
SIMILAR
TO
THE
CALENDAR
MONTH
PROGRAM
OF
CHAPTER
WE
NEED
AN
ALGORITHM
FOR
COMPUTING
THE
FIRST
DAY
OF
A
GIVEN
MONTH
FOR
YEARS
HOWEVER
SINCE
THE
COMPLETE
YEAR
IS
BEING
DISPLAYED
ONLY
THE
DAY
OF
THE
WEEK
FOR
JANUARY
OF
THE
GIVEN
YEAR
NEEDS
BE
COMPUTED
THE
REST
OF
THE
DAYS
FOLLOW
FROM
KNOWING
THE
NUMBER
OF
DAYS
IN
EACH
MONTH
CHAPTER
LISTS
INCLUDING
FEBRUARY
FOR
LEAP
YEARS
THE
ALGORITHM
PREVIOUSLY
DEVELOPED
TO
DISPLAY
A
CALENDAR
MONTH
HOWEVER
IS
NOT
RELEVANT
FOR
THIS
PROGRAM
INSTEAD
THE
INFORMATION
WILL
FIRST
BE
STORED
IN
A
DATA
STRUCTURE
ALLOWING
FOR
THE
MONTHS
TO
BE
DISPLAYED
THREE
ACROSS
PROGRAM
DESIGN
MEETING
THE
PROGRAM
REQUIREMENTS
WE
WILL
DEVELOP
AND
IMPLEMENT
AN
ALGORITHM
THAT
DISPLAYS
THE
CALENDAR
YEAR
AS
SHOWN
IN
FIGURE
WE
SHALL
REQUEST
THE
USER
TO
ENTER
THE
FOUR
DIGIT
YEAR
TO
DISPLAY
WITH
APPROPRIATE
INPUT
ERROR
CHECKING
DATA
DESCRIPTION
THE
PROGRAM
NEEDS
TO
REPRESENT
THE
YEAR
ENTERED
WHETHER
IT
IS
A
LEAP
YEAR
THE
DAY
OF
THE
WEEK
FOR
JANUARY
OF
THE
YEAR
AND
THE
NUMBER
OF
DAYS
IN
EACH
MONTH
ACCOUNTING
FOR
LEAP
YEARS
THE
NAMES
OF
EACH
OF
THE
TWELVE
MONTHS
WILL
ALSO
BE
STORED
FOR
DISPLAY
IN
THE
CALENDAR
YEAR
GIVEN
THIS
INFORMATION
THE
CALENDAR
YEAR
CAN
BE
APPROPRIATELY
CONSTRUCTED
AND
DISPLAYED
WE
MAKE
USE
OF
NESTED
LISTS
FOR
REPRESENTING
THE
CALENDAR
YEAR
THE
DATA
STRUCTURE
WILL
START
OUT
AS
AN
EMPTY
LIST
AND
WILL
BE
BUILT
INCREMENTALLY
AS
EACH
NEW
CALENDAR
MONTH
IS
COMPUTED
THE
LIST
STRUCTURES
FOR
THE
CALENDAR
YEAR
AND
CALENDAR
MONTH
ARE
GIVEN
BELOW
ETC
WEEK
WEEK
WEEK
K
EACH
ITALICIZED
MONTH
IS
REPRESENTED
AS
A
LIST
OF
FOUR
TO
SIX
STRINGS
WITH
EACH
STRING
STORING
A
WEEK
OF
THE
MONTH
TO
BE
DISPLAYED
OR
A
BLANK
LINE
FOR
ALIGNMENT
PURPOSES
FEBRUARY
MAY
LINES
THE
STRINGS
ARE
FORMATTED
TO
CONTAIN
ALL
THE
SPACES
NEEDED
FOR
PROPER
ALIGNMENT
WHEN
DISPLAYED
FOR
EXAMPLE
SINCE
THE
FIRST
WEEK
OF
MAY
BEGINS
ON
A
FRIDAY
THE
STRING
VALUE
FOR
THIS
WEEK
WOULD
BE
THE
COMPLETE
REPRESENTATION
FOR
THE
CALENDAR
YEAR
IS
GIVEN
BELOW
WITH
THE
DETAILS
SHOWN
FOR
THE
MONTHS
OF
FEBRUARY
AND
MAY
CALENDAR
YEAR
PROGRAM
JANUARY
MARCH
APRIL
JUNE
JULY
AUGUST
SEPTEMBER
OCTOBER
NOVEMBER
DECEMBER
TYPICALLY
YEARLY
CALENDARS
COMBINE
THE
ONE
OR
TWO
REMAINING
DAYS
OF
THE
MONTH
ON
THE
SIXTH
LINE
OF
A
CALENDAR
MONTH
ONTO
THE
PREVIOUS
WEEK
WE
SHALL
NOT
DO
THAT
IN
THIS
PROGRAM
HOWEVER
ALGORITHMIC
APPROACH
WE
MAKE
USE
OF
THE
ALGORITHM
FOR
DETERMINING
THE
DAY
OF
THE
WEEK
PREVIOUSLY
USED
FOR
THIS
PROGRAM
HOWEVER
THE
ONLY
DATE
FOR
WHICH
THE
DAY
OF
THE
WEEK
NEEDS
TO
BE
DETERMINED
IS
JANUARY
OF
A
GIVEN
YEAR
THUS
THE
ORIGINAL
DAY
OF
THE
WEEK
ALGORITHM
CAN
BE
SIMPLIFIED
BY
REMOVING
VARIABLE
DAY
AND
REPLACING
ITS
OCCURRENCE
ON
LINE
WITH
GIVEN
IN
FIGURE
FIGURE
SIMPLIFIED
DAY
OF
THE
WEEK
ALGORITHM
OVERALL
PROGRAM
STEPS
THE
OVERALL
STEPS
IN
THIS
PROGRAM
DESIGN
ARE
GIVEN
IN
FIGURE
PROGRAM
IMPLEMENTATION
AND
TESTING
STAGE
DETERMINING
THE
DAY
OF
THE
WEEK
FOR
JANUARY
WE
FIRST
DEVELOP
AND
TEST
THE
CODE
FOR
DETERMINING
THE
DAY
OF
THE
WEEK
FOR
JANUARY
OF
A
GIVEN
YEAR
THIS
MODIFIED
CODE
FROM
THE
CALENDAR
MONTH
PROGRAM
IS
GIVEN
IN
FIGURE
CHAPTER
LISTS
FIGURE
OVERALL
STEPS
OF
CALENDAR
YEAR
PROGRAM
LINE
INITIALIZES
BOOLEAN
FLAG
TERMINATE
TO
FALSE
IF
THE
USER
ENTERS
FOR
THE
YEAR
IN
LINES
TERMINATE
IS
SET
TO
TRUE
AND
THE
WHILE
LOOP
AT
LINE
TERMINATES
THUS
TERMINATING
THE
PROGRAM
IF
A
VALID
YEAR
IS
ENTERED
LINES
ARE
EXECUTED
LINES
DETERMINE
IF
THE
YEAR
IS
A
LEAP
YEAR
USING
THE
SAME
CODE
AS
IN
THE
CALENDAR
MONTH
PROGRAM
ASSIGNING
BOOLEAN
VARIABLE
ACCORDINGLY
LINES
IMPLEMENT
THE
SIMPLI
FIED
DAY
OF
THE
WEEK
ALGORITHM
FOR
DETERMINING
THE
DAY
OF
THE
WEEK
FOR
JANUARY
OF
A
GIVEN
YEAR
IN
FIGURE
WITH
THE
RESULT
DISPLAYED
ON
LINE
STAGE
TESTING
WE
SHOW
A
SAMPLE
TEST
RUN
OF
THIS
STAGE
OF
THE
PROGRAM
IN
FIGURE
FIGURE
DISPLAYS
THE
TEST
CASES
USED
FOR
THIS
PROGRAM
SINCE
ALL
TEST
CASES
PASSED
WE
CAN
MOVE
ON
TO
THE
NEXT
STAGE
OF
PROGRAM
DEVELOPMENT
STAGE
CONSTRUCTING
THE
CALENDAR
YEAR
DATA
STRUCTURE
NEXT
WE
DEVELOP
THE
PART
OF
THE
PROGRAM
THAT
CONSTRUCTS
THE
DATA
STRUCTURE
HOLDING
ALL
OF
THE
CALENDAR
YEAR
INFORMATION
TO
BE
DISPLAYED
THE
DATA
STRUCTURE
BEGINS
EMPTY
AND
IS
INCREMENTALLY
BUILT
CON
SISTING
OF
NESTED
LISTS
AS
PREVIOUSLY
DISCUSSED
CALENDAR
YEAR
PROGRAM
FIGURE
STAGE
OF
THE
CALENDAR
YEAR
PROGRAM
FIGURE
EXAMPLE
OUTPUT
OF
FIRST
STAGE
TESTING
CHAPTER
LISTS
FIGURE
TEST
CASES
FOR
STAGE
OF
THE
CALENDAR
YEAR
PROGRAM
FIGURE
SHOWS
AN
IMPLEMENTATION
OF
THIS
STAGE
OF
THE
PROGRAM
LINES
PERFORM
THE
REQUIRED
INITIALIZATION
TUPLES
AND
NAMES
HAVE
BEEN
ADDED
TO
THE
PROGRAM
TO
STORE
THE
NUMBER
OF
DAYS
FOR
EACH
MONTH
WITH
FEBRUARY
HANDLED
AS
AN
EXCEPTION
AND
THE
MONTH
NAMES
ON
LINE
IS
INITIALIZED
TO
THE
EMPTY
LIST
IT
WILL
BE
CONSTRUCTED
MONTH
BY
MONTH
FOR
THE
TWELVE
MONTHS
OF
THE
YEAR
THERE
IS
THE
NEED
FOR
STRINGS
OF
BLANKS
OF
VARIOUS
LENGTHS
IN
THE
PROGRAM
INITIALIZED
AS
AND
LINES
THE
YEAR
DATA
STRUCTURE
WILL
CONTAIN
ALL
THE
SPACE
CHARACTERS
NEEDED
FOR
THE
CALENDAR
MONTHS
TO
BE
PROPERLY
DISPLAYED
THEREFORE
THERE
WILL
BE
NO
NEED
TO
DEVELOP
CODE
THAT
DETERMINES
HOW
EACH
MONTH
SHOULD
BE
DISPLAYED
AS
IN
THE
CALENDAR
MONTH
PROGRAM
THE
COMPLETE
STRUCTURE
WILL
SIM
PLY
BE
DISPLAYED
ROW
BY
ROW
LINES
ARE
THE
SAME
AS
THE
FIRST
STAGE
OF
THE
PROGRAM
FOR
DETERMINING
THE
DAY
OF
THE
WEEK
OF
A
GIVEN
DATE
ONCE
THE
DAY
OF
THE
WEEK
FOR
JANUARY
OF
THE
GIVEN
YEAR
IS
KNOWN
THE
DAYS
OF
THE
WEEK
FOR
ALL
REMAINING
DATES
SIMPLY
FOLLOW
THUS
THERE
IS
NO
NEED
TO
CALCULATE
THE
DAY
OF
THE
WEEK
FOR
ANY
OTHER
DATE
LINE
BEGINS
THE
FOR
LOOP
FOR
CONSTRUCTING
EACH
OF
THE
TWELVE
MONTHS
ON
LINE
THE
MONTH
NAME
IS
RETRIEVED
FROM
TUPLE
AND
ASSIGNED
TO
VARIABLE
DAY
HOLDING
THE
CURRENT
DAY
OF
THE
MONTH
IS
INITIALIZED
TO
FOR
THE
NEW
MONTH
LINE
IN
LINES
DETERMINED
BY
THE
DAY
OF
THE
WEEK
ALGORITHM
IS
CONVERTED
TO
THE
APPROPRIATE
COLUMN
NUMBER
THUS
SINCE
DENOTES
SATURDAY
IF
EQUALS
IS
SET
TO
OTHERWISE
IS
SET
TO
E
G
IF
IS
THEN
IS
SET
TO
IN
LINES
THE
INITIALIZATION
FOR
A
NEW
MONTH
FINISHES
WITH
THE
REASSIGNMENT
OF
AND
EACH
CALENDAR
WEEK
OF
A
GIVEN
MONTH
IS
INITIALLY
ASSIGNED
TO
THE
EMPTY
STRING
WITH
EACH
DATE
APPENDED
ONE
BY
ONE
VARIABLE
IS
USED
TO
KEEP
TRACK
OF
THE
CURRENT
COLUMN
DAY
OF
THE
WEEK
INCREMENTED
FROM
TO
SINCE
THE
FIRST
DAY
OF
THE
MONTH
CAN
FALL
ON
ANY
DAY
OF
THE
WEEK
THE
FIRST
WEEK
OF
ANY
MONTH
MAY
CONTAIN
BLANK
SKIPPED
COLUMNS
THIS
INCLUDES
THE
COLUMNS
FROM
UP
TO
BUT
NOT
INCLUDING
THE
WHILE
LOOP
IN
LINES
APPENDS
ANY
OF
THESE
SKIPPED
COLUMNS
TO
EMPTY
STRING
LINES
ASSIGN
TO
THE
NUMBER
OF
DAYS
STORED
IN
TUPLE
THE
EXCEPTION
FOR
FEBRUARY
BASED
ON
WHETHER
THE
YEAR
IS
A
LEAP
YEAR
OR
NOT
IS
HANDLED
AS
A
SPECIAL
CASE
THE
WHILE
LOOP
AT
LINE
INCREMENTS
VARIABLE
FROM
TO
THE
NUMBER
OF
CALENDAR
YEAR
PROGRAM
FIGURE
STAGE
OF
THE
CALENDAR
YEAR
PROGRAM
CONTINUED
CHAPTER
LISTS
FIGURE
STAGE
OF
THE
CALENDAR
YEAR
PROGRAM
DAYS
IN
THE
MONTH
IN
LINES
EACH
DATE
IS
APPENDED
TO
RIGHT
JUSTIFIED
AS
A
STRING
OF
LENGTH
THREE
BY
USE
OF
THE
FORMAT
FUNCTION
THUS
A
SINGLE
DIGIT
DATE
WILL
BE
APPENDED
WITH
TWO
LEADING
BLANKS
AND
A
DOUBLE
DIGIT
DATE
WITH
ONE
LEADING
BLANK
SO
THAT
THE
COLUMNS
OF
DATES
ALIGN
FOR
EACH
NEW
DATE
APPENDED
TO
A
CHECK
IS
MADE
ON
LINE
AS
TO
WHETHER
THE
END
OF
THE
WEEK
HAS
BEEN
REACHED
IF
THE
LAST
COLUMN
OF
THE
CALENDAR
WEEK
HAS
BEEN
REACHED
WHEN
EQUALS
THEN
THE
CONSTRUCTED
STRING
IS
APPENDED
TO
THE
LINE
IN
ADDITION
IS
RE
INITIALIZED
TO
THE
EMPTY
STRING
AND
IS
RESET
TO
LINES
IF
THE
LAST
COLUMN
OF
THE
CALENDAR
WEEK
HAS
NOT
YET
BEEN
REACHED
THEN
IS
SIMPLY
INCREMENTED
BY
LINE
THEN
ON
LINE
VARIABLE
IS
INCREMENTED
BY
WHETHER
OR
NOT
A
NEW
WEEK
IS
STARTED
WHEN
THE
WHILE
LOOP
AT
LINE
EVENTUALLY
TERMINATES
VARIABLE
HOLDS
THE
LAST
WEEK
OF
THE
CONSTRUCTED
MONTH
THEREFORE
AS
WITH
THE
FIRST
WEEK
OF
THE
MONTH
THE
LAST
WEEK
MAY
CONTAIN
EMPTY
COLUMNS
THIS
IS
HANDLED
BY
LINES
BEFORE
APPENDING
TO
ANY
REMAINING
UNFILLED
COLUMNS
ARE
APPENDED
TO
IT
THE
REASON
THAT
THESE
FINAL
CALENDAR
YEAR
PROGRAM
COLUMNS
MUST
BE
BLANK
FILLED
IS
BECAUSE
MONTHS
ARE
DISPLAYED
SIDE
BY
SIDE
AND
THEREFORE
ARE
NEEDED
TO
KEEP
THE
WHOLE
CALENDAR
PROPERLY
ALIGNED
THUS
THE
SUBSTRING
OF
PRODUCED
WILL
END
UP
AS
AN
EMPTY
STRING
IF
THE
VALUE
OF
IS
FOR
SATURDAY
THE
LAST
COLUMN
AS
IT
SHOULD
LINE
SETS
VARIABLE
TO
SINCE
HOLDS
THE
COLUMN
VALUE
OF
THE
NEXT
COLUMN
THAT
WOULD
HAVE
BEEN
USED
FOR
THE
CURRENT
MONTH
AND
THUS
IS
THE
FIRST
DAY
OF
THE
FOLLOWING
MONTH
ON
LINE
THE
COMPLETED
CURRENT
MONTH
IS
APPENDED
TO
LIST
AND
ON
LINE
IS
RESET
TO
AN
EMPTY
LIST
IN
ANTICIPATION
OF
THE
NEXT
MONTH
TO
BE
CONSTRUCTED
FINALLY
ON
LINE
THE
COMPLETE
LIST
IS
DISPLAYED
BECAUSE
THE
PROGRAM
PROMPTS
THE
USER
FOR
OTHER
YEARS
TO
BE
CONSTRUCTED
AND
DISPLAYED
THE
LIST
IS
RESET
TO
THE
EMPTY
LIST
LINE
STAGE
TESTING
THE
PROGRAM
TERMINATES
WITH
AN
ERROR
ON
LINE
ENTER
YEAR
YYYY
TO
QUIT
TRACEBACK
MOST
RECENT
CALL
LAST
FILE
C
MY
PYTHON
PROGRAMS
PY
LINE
IN
MODULE
INDEXERROR
TUPLE
INDEX
OUT
OF
RANGE
THIS
LINE
IS
WITHIN
THE
FOR
LOOP
AT
LINE
FOR
IN
RANGE
FOR
SOME
REASON
INDEX
VARIABLE
IS
OUT
OF
RANGE
FOR
TUPLE
WE
LOOK
AT
THE
FINAL
VALUE
OF
BY
TYPING
THE
VARIABLE
NAME
INTO
THE
PYTHON
SHELL
SINCE
HAS
INDEX
VALUES
SINCE
OF
LENGTH
AN
INDEX
VALUE
OF
SHOULD
NOT
BE
OUT
OF
RANGE
HOW
THEN
CAN
THIS
INDEX
OUT
OF
RANGE
ERROR
HAPPEN
JUST
TO
MAKE
SURE
THAT
NAMES
HAS
THE
RIGHT
VALUES
WE
DISPLAY
ITS
LENGTH
LEN
THIS
IS
NOT
RIGHT
THE
TUPLE
SHOULD
CONTAIN
ALL
TWELVE
MONTHS
OF
THE
YEAR
THAT
IS
THE
WAY
IT
WAS
INITIALIZED
ON
LINE
AND
TUPLES
UNLIKE
LISTS
CANNOT
BE
ALTERED
THEY
ARE
IMMUTABLE
THIS
DOES
NOT
SEEM
TO
MAKE
SENSE
TO
CONTINUE
OUR
INVESTIGATION
WE
DISPLAY
THE
VALUE
OF
THE
TUPLE
JANUARY
FEBRUARY
MARCH
APRIL
MAY
JUNEJULY
AUGUST
SEPTEMBER
OCTOBER
NOVEMBER
DECEMBER
CHAPTER
LISTS
NOW
WE
SEE
SOMETHING
THAT
DOESN
T
LOOK
RIGHT
MONTHS
JUNE
AND
JULY
ARE
CONCATENATED
INTO
ONE
STRING
VALUE
JUNEJULY
MAKING
THE
LENGTH
OF
THE
TUPLE
AND
NOT
AS
WE
DISCOVERED
THAT
WOULD
EXPLAIN
WHY
THE
INDEX
OUT
OF
RANGE
ERROR
OCCURRED
WHAT
THEN
IS
THE
PROBLEM
WHY
WERE
THE
STRINGS
JUNE
AND
JULY
CONCATENATED
WE
NEED
TO
LOOK
AT
THE
LINE
OF
CODE
THAT
CREATES
THIS
TUPLE
JANUARY
FEBRUARY
MARCH
APRIL
MAY
JUNE
JULY
AUGUST
SEPTEMBER
OCTOBER
NOVEMBER
DECEMBER
IT
LOOKS
OK
STRINGS
JUNE
AND
JULY
WERE
WRITTEN
AS
SEPARATE
STRINGS
WE
THEN
DECIDE
TO
COUNT
THE
NUMBER
OF
ITEMS
IN
THE
TUPLE
SINCE
ITEMS
IN
TUPLES
AND
LISTS
ARE
SEPARATED
BY
COMMAS
WE
COUNT
THE
NUMBER
OF
ITEMS
BETWEEN
THE
COMMAS
WE
COUNT
THE
ITEMS
UP
TO
MAY
WHICH
IS
FIVE
ITEMS
AS
IT
SHOULD
BE
THEN
JUNE
WHICH
IS
SIX
ITEMS
AH
THERE
IS
NO
COMMA
AFTER
THE
STRING
JUNE
THAT
MUST
BE
WHY
STRINGS
JUNE
AND
JULY
WERE
CONCATENATED
AND
THUS
THE
SOURCE
OF
THE
INDEX
OUT
OF
RANGE
ERROR
WE
TRY
TO
REPRODUCE
THIS
IN
THE
SHELL
JUNE
JULY
JUNEJULY
THAT
IT
WE
HAVE
FOUND
THE
PROBLEM
AND
SHOULD
FEEL
GOOD
ABOUT
IT
AFTER
MAKING
THE
CORRECTION
AND
RE
EXECUTING
THE
PROGRAM
WE
GET
THE
FOLLOWING
RESULTS
ENTER
YEAR
YYYY
TO
QUIT
ENTER
YEAR
YYYY
TO
QUIT
WE
CAN
SEE
IF
THE
OUTPUT
LOOKS
LIKE
THE
STRUCTURE
THAT
WE
EXPECT
THE
FIRST
ITEM
IN
THE
LIST
THE
STRUCTURE
FOR
THE
MONTH
OF
JANUARY
IS
AS
FOLLOWS
CALENDAR
YEAR
PROGRAM
IN
CHECKING
AGAINST
AVAILABLE
CALENDAR
MONTH
CALCULATORS
WE
SEE
THAT
THE
FIRST
DAY
OF
THE
MONTH
FOR
JANUARY
IS
A
THURSDAY
THUS
THE
FIRST
WEEK
OF
THE
MONTH
SHOULD
HAVE
FOUR
SKIPPED
DAYS
FOLLOWED
BY
AND
EACH
IN
A
COLUMN
WIDTH
OF
WE
FIND
THAT
THERE
ARE
FOURTEEN
BLANK
CHARACTERS
IN
THE
FIRST
LINE
THE
FIRST
TWELVE
ARE
FOR
THE
FOUR
SKIPPED
COLUMNS
AND
THE
LAST
TWO
ARE
FOR
THE
RIGHT
JUSTIFIED
STRING
IN
THE
COLUMN
OF
THE
FIRST
DAY
OF
THE
MONTH
BLANK
CHARS
BLANK
CHARS
SINCE
THERE
ARE
FIVE
WEEKS
IN
THE
MONTH
THERE
SHOULD
BE
ONE
EXTRA
BLANK
WEEK
AT
THE
END
OF
THE
LIST
TO
MATCH
THE
VERTICAL
SPACING
OF
ALL
OTHER
MONTHS
WE
SEE
IN
FACT
THAT
THE
LAST
SIXTH
STRING
IS
A
STRING
OF
BLANKS
SINCE
THE
STRUCTURE
LOOKS
CORRECT
WE
NOW
DEVELOP
THE
FINAL
STAGE
OF
THE
PROGRAM
THAT
DISPLAYS
THE
COMPLETE
CALENDAR
YEAR
STAGE
DISPLAYING
THE
CALENDAR
YEAR
DATA
STRUCTURE
WE
NOW
GIVE
THE
COMPLETE
CALENDAR
YEAR
PROGRAM
IN
FIGURE
IN
THIS
FINAL
VERSION
THE
ONLY
CHANGE
AT
THE
START
OF
THE
PROGRAM
IS
THAT
A
PROGRAM
GREETING
IS
ADDED
ON
LINE
THE
REST
OF
THE
PROGRAM
IS
THE
SAME
UP
TO
LINE
THE
POINT
WHERE
THE
CALENDAR
YEAR
HAS
BEEN
CONSTRUCTED
THE
PRINT
LINE
AND
RE
INITIALIZATION
OF
TO
THE
EMPTY
LIST
HAVE
BEEN
REMOVED
FROM
THE
PREVIOUS
VERSION
SINCE
THEY
WERE
ONLY
THERE
FOR
TESTING
PURPOSES
THE
NEW
CODE
IN
THIS
VERSION
OF
THE
PROGRAM
IS
IN
LINES
WHICH
DISPLAYS
THE
CALENDAR
YEAR
THE
CALENDAR
YEAR
OUTPUT
IS
GIVEN
IN
FIGURE
ON
LINE
THE
YEAR
IS
DISPLAYED
BECAUSE
THE
MONTHS
ARE
DISPLAYED
THREE
ACROSS
AS
SHOWN
IN
FIGURE
THE
FOR
LOOP
ON
LINE
ITERATES
VARIABLE
OVER
THE
VALUES
THUS
WHEN
IS
MONTHS
JANUARY
MARCH
ARE
DISPLAYED
WHEN
IS
MONTHS
APRIL
JUNE
ARE
DISPLAYED
AND
SO
FORTH
THE
FOR
LOOP
AT
LINE
DISPLAYS
THE
MONTH
NAMES
FOR
EACH
ROW
FOR
EXAMPLE
JANUARY
FEBRUARY
AND
MARCH
EACH
IS
DISPLAYED
LEFT
JUSTIFIED
IN
A
FIELD
WIDTH
OF
A
LEADING
BLANK
CHARACTER
IS
APPENDED
TO
THE
FORMATTING
STRING
TO
ALIGN
WITH
THE
FIRST
COLUMN
OF
NUMBERS
DISPLAYED
FOR
EACH
MONTH
THE
PRINT
FORM
OF
PRINT
IS
USED
WHICH
PREVENTS
THE
CURSOR
FROM
MOVING
TO
THE
NEXT
LINE
THUS
THE
MONTHS
CAN
BE
DISPLAYED
SIDE
BY
SIDE
VARIABLE
SEPARATOR
CONTAINS
THE
APPROPRIATE
NUMBER
OF
BLANK
SPACES
INITIALIZED
AT
THE
TOP
OF
THE
PRO
GRAM
TO
PROVIDE
THE
REQUIRED
AMOUNT
OF
PADDING
BETWEEN
THE
MONTHS
AS
SHOWN
BELOW
JANUARY
FEBRUARY
MARCH
LINES
PERFORM
THE
INITIALIZATION
NEEDED
FOR
THE
FOLLOWING
WHILE
LOOP
AT
LINE
WHICH
DISPLAYS
EACH
WEEK
ONE
BY
ONE
OF
THE
CURRENT
THREE
MONTHS
VARIABLE
WEEK
IS
INITIAL
IZED
TO
ZERO
FOR
EACH
MONTH
AND
IS
USED
TO
KEEP
COUNT
OF
THE
NUMBER
OF
WEEKS
DISPLAYED
VARIABLE
IS
INITIALIZED
TO
TRUE
TO
START
THE
EXECUTION
OF
THE
FOLLOWING
WHILE
LOOP
AT
LINE
WITHIN
THE
WHILE
LOOP
IS
INITIALIZED
TO
FALSE
IT
IS
THEN
SET
TO
TRUE
BY
ANY
OR
ALL
OF
THE
CURRENT
THREE
MONTHS
BEING
DISPLAYED
ONLY
IF
THEY
STILL
HAVE
MORE
CALENDAR
LINES
WEEKS
TO
PRINT
THUS
CAUSING
THE
WHILE
LOOP
TO
CONTINUE
WITH
ANOTHER
CHAPTER
LISTS
FIGURE
FINAL
STAGE
OF
THE
CALENDAR
YEAR
PROGRAM
CONTINUED
CALENDAR
YEAR
PROGRAM
FIGURE
FINAL
STAGE
OF
THE
CALENDAR
YEAR
PROGRAM
CONTINUED
CHAPTER
LISTS
FIGURE
FINAL
STAGE
OF
THE
CALENDAR
YEAR
PROGRAM
ITERATION
THIS
OCCURS
WITHIN
THE
FOR
LOOP
AT
LINES
SINCE
VARIABLE
INDICATES
THE
CURRENT
MONTH
BEING
DISPLAYED
THE
NUMBER
OF
WEEKS
IN
THE
MONTH
IS
DETERMINED
BY
THE
LENGTH
OF
THE
TUPLE
OF
STRINGS
FOR
THE
CURRENT
MONTH
K
LEN
K
NOTE
THAT
SOME
MONTHS
MAY
HAVE
NO
MORE
WEEKS
TO
DISPLAY
WHEREAS
OTHERS
MAY
THIS
IS
THE
CASE
FOR
THE
FIRST
THREE
MONTHS
OF
JANUARY
FEBRUARY
MARCH
IN
THIS
CASE
THE
WHILE
LOOP
NEEDS
TO
CONTINUE
TO
ITERATE
IN
ORDER
TO
DISPLAY
THE
LAST
LINES
OF
JANUARY
AND
MARCH
EVEN
THOUGH
THE
LAST
LINE
OF
FEBRUARY
HAS
BEEN
DISPLAYED
THEREFORE
IN
CASES
WHERE
A
GIVEN
MONTH
HAS
A
LINE
TO
PRINT
BUT
ANOTHER
MONTH
DOESN
T
A
BLANK
LINE
IS
DISPLAYED
IN
ORDER
TO
MAIN
TAIN
THE
CORRECT
ALIGNMENT
OF
MONTH
WEEKS
AFTER
THE
WEEK
OF
DATES
OR
BLANK
WEEK
IS
OUTPUT
FOR
EACH
OF
THE
THREE
MONTHS
THE
CURSOR
IS
MOVED
TO
THE
START
OF
THE
NEXT
LINE
ON
LINE
AND
VARIABLE
WEEK
IS
INCREMENTED
BY
ONE
LINE
BEFORE
THE
LOOP
BEGINS
THE
NEXT
ITERATION
FOR
DISPLAYING
THE
NEXT
ROW
OF
CALENDAR
WEEKS
CHAPTER
SUMMARY
FIGURE
CALENDAR
YEAR
PROGRAM
OUTPUT
FINALLY
THE
WHILE
LOOP
AT
LINE
CONTINUES
TO
ITERATE
UNTIL
THERE
ARE
NO
MORE
LINES
TO
DISPLAY
FOR
ALL
OF
THE
THREE
MONTHS
CURRENTLY
BEING
DISPLAYED
THAT
IS
UNTIL
IS
FALSE
FIGURE
DISPLAYS
THE
RESULTS
OF
TESTING
THIS
FINAL
VERSION
BY
USING
THE
TEST
PLAN
FROM
THE
CALENDAR
MONTH
PROGRAM
OF
CHAPTER
THE
TEST
PLAN
PASSED
FOR
ALL
TEST
CASES
CHAPTER
SUMMAR
Y
GENERAL
TOPICS
LINEAR
DATA
STRUCTURES
LIST
OPERATIONS
LIST
TRAVERSAL
THE
EMPTY
LIST
AND
ITS
USE
NESTED
LISTS
LIST
ITERATION
LOOP
VARIABLE
INDEX
VARIABLE
CHAPTER
LISTS
FIGURE
FINAL
CALENDAR
YEAR
PROGRAM
TESTING
PYTHON
SPECIFIC
PROGRAMMING
TOPICS
LISTS
IN
PYTHON
LIST
OPERATIONS
IN
PYTHON
EMPTY
LISTS
AND
TUPLES
IN
PYTHON
LISTS
TUPLES
AND
STRINGS
AS
SEQUENCES
IN
PYTHON
ADDITIONAL
SEQUENCE
OPERATIONS
NESTED
LISTS
AND
TUPLES
IN
PYTHON
FOR
WHILE
LOOPS
AND
LIST
ITERATION
IN
PYTHON
BUILT
IN
RANGE
FUNCTION
IN
PYTHON
ITERATING
OVER
LIST
SEQUENCE
ELEMENTS
VS
ITERATING
OVER
INDEX
VALUES
IN
PYTHON
ASSIGNING
LISTS
IN
PYTHON
LIST
COMPREHENSIONS
IN
PYTHON
CHAPTER
EXERCISES
SECTION
A
GIVE
THE
INDEX
VALUES
OF
ALL
THE
ODD
NUMBERS
IN
THE
FOLLOWING
LIST
REPRESENTATION
ASSUMING
ZERO
BASED
INDEXING
CHAPTER
EXERCISES
B
HOW
MANY
ELEMENTS
WOULD
BE
LOOKED
AT
WHEN
THE
LIST
IS
TRAVERSED
FROM
TOP
TO
BOTTOM
UNTIL
THE
VALUE
WAS
FOUND
SECTION
WHICH
OF
THE
FOLLOWING
LISTS
ARE
SYNTACTICALLY
CORRECT
IN
PYTHON
A
FOUR
B
C
FOUR
FOR
LST
WHAT
IS
THE
RESULT
OF
EACH
OF
THE
FOLLOWING
LIST
OPERATIONS
A
LST
B
LST
INSERT
C
DEL
LST
D
LST
APPEND
FOR
FRUIT
APPLE
BANANA
PEAR
CHERRY
USE
A
LIST
OPERATION
TO
CHANGE
THE
LIST
TO
APPLE
BANANA
CHERRY
FOR
A
LIST
OF
INTEGERS
LST
GIVE
THE
CODE
TO
RETRIEVE
THE
MAXIMUM
VALUE
OF
THE
SECOND
HALF
OF
THE
LIST
FOR
VARIABLE
CONTAINING
A
STRING
OF
LETTERS
AND
DIGITS
A
GIVE
AN
IF
STATEMENT
THAT
OUTPUTS
VERIFIED
IF
CONTAINS
BOTH
A
Z
AND
A
AND
OUTPUTS
FAILED
OTHERWISE
B
GIVE
A
PYTHON
INSTRUCTION
THAT
PRINTS
OUT
JUST
THE
LAST
THREE
CHARACTERS
IN
WHICH
OF
THE
FOLLOWING
ARE
VALID
OPERATIONS
ON
TUPLES
FOR
TUPLES
AND
A
LEN
B
C
APPEND
D
INSERT
FOR
HELLO
WORLD
ANSWER
THE
FOLLOWING
A
GIVE
AN
INSTRUCTION
THAT
PRINTS
THE
FOURTH
CHARACTER
OF
THE
STRING
B
GIVE
AN
INSTRUCTION
THAT
FINDS
THE
INDEX
LOCATION
OF
THE
FIRST
OCCURRENCE
OF
THE
LETTER
O
IN
THE
STRING
FOR
A
NESTED
LIST
LST
THAT
CONTAINS
SUBLISTS
OF
INTEGERS
OF
THE
FORM
A
GIVE
A
PYTHON
INSTRUCTION
THAT
DETERMINES
THE
LENGTH
OF
THE
LIST
B
GIVE
PYTHON
CODE
THAT
DETERMINES
HOW
MANY
TOTAL
INTEGER
VALUES
THERE
ARE
IN
LIST
LST
C
GIVE
PYTHON
CODE
THAT
TOTALS
ALL
THE
VALUES
IN
LIST
LST
D
GIVEN
AN
ASSIGNMENT
STATEMENT
THAT
ASSIGNS
THE
THIRD
INTEGER
OF
THE
FOURTH
ELEMENT
SUBLIST
OF
LST
TO
THE
VALUE
SECTION
FOR
A
LIST
OF
INTEGERS
NAMED
NUMS
A
WRITE
A
WHILE
LOOP
THAT
ADDS
UP
ALL
THE
VALUES
IN
NUMS
B
WRITE
A
FOR
LOOP
THAT
ADDS
UP
ALL
THE
VALUES
IN
NUMS
IN
WHICH
THE
LOOP
VARIABLE
IS
ASSIGNED
EACH
VALUE
IN
THE
LIST
C
WRITE
A
FOR
LOOP
THAT
ADDS
UP
ALL
THE
ELEMENTS
IN
NUMS
IN
WHICH
THE
LOOP
VARIABLE
IS
ASSIGNED
TO
THE
INDEX
VALUE
OF
EACH
ELEMENT
IN
THE
LIST
D
WRITE
A
FOR
LOOP
THAT
DISPLAYS
THE
ELEMENTS
IN
NUMS
BACKWARDS
E
WRITE
A
FOR
LOOP
THAT
DISPLAYS
EVERY
OTHER
ELEMENT
IN
NUMS
STARTING
WITH
THE
FIRST
ELEMENT
SECTION
FOR
AND
GIVE
THE
VALUES
OF
AND
WHERE
INDICATED
AFTER
THE
FOLLOWING
ASSIGNMENTS
A
B
C
D
CHAPTER
LISTS
GIVE
AN
APPROPRIATE
LIST
COMPREHENSION
FOR
EACH
OF
THE
FOLLOWING
A
PRODUCING
A
LIST
OF
CONSONANTS
THAT
APPEAR
IN
STRING
VARIABLE
W
B
PRODUCING
A
LIST
OF
NUMBERS
BETWEEN
AND
THAT
ARE
DIVISIBLE
BY
C
PRODUCING
A
LIST
OF
NUMBERS
FROM
A
LIST
OF
FLOATING
POINT
VALUES
THAT
ARE
WITHIN
SOME
DISTANCE
EPSILON
FROM
PYTHON
PROGRAMMING
EXERCISES
WRITE
A
PYTHON
PROGRAM
THAT
PROMPTS
THE
USER
FOR
A
LIST
OF
INTEGERS
STORES
IN
ANOTHER
LIST
ONLY
THOSE
VALUES
BETWEEN
AND
DISPLAYS
THE
RESULTING
LIST
WRITE
A
PYTHON
PROGRAM
THAT
PROMPTS
THE
USER
FOR
A
LIST
OF
INTEGERS
STORES
IN
ANOTHER
LIST
ONLY
THOSE
VALUES
THAT
ARE
IN
TUPLE
AND
DISPLAYS
THE
RESULTING
LIST
WRITE
A
PYTHON
PROGRAM
THAT
PROMPTS
THE
USER
FOR
A
LIST
OF
INTEGERS
AND
STORES
THEM
IN
A
LIST
FOR
ALL
VALUES
THAT
ARE
GREATER
THAN
THE
STRING
OVER
SHOULD
BE
STORED
INSTEAD
THE
PROGRAM
SHOULD
DISPLAY
THE
RESULTING
LIST
WRITE
A
PYTHON
PROGRAM
THAT
PROMPTS
THE
USER
TO
ENTER
A
LIST
OF
FIRST
NAMES
AND
STORES
THEM
IN
A
LIST
THE
PROGRAM
SHOULD
DISPLAY
HOW
MANY
TIMES
THE
LETTER
A
APPEARS
WITHIN
THE
LIST
WRITE
A
PYTHON
PROGRAM
THAT
PROMPTS
THE
USER
TO
ENTER
A
LIST
OF
WORDS
AND
STORES
IN
A
LIST
ONLY
THOSE
WORDS
WHOSE
FIRST
LETTER
OCCURS
AGAIN
WITHIN
THE
WORD
FOR
EXAMPLE
BABOON
THE
PROGRAM
SHOULD
DISPLAY
THE
RESULTING
LIST
WRITE
A
PYTHON
PROGRAM
THAT
PROMPTS
THE
USER
TO
ENTER
TYPES
OF
FRUIT
AND
HOW
MANY
POUNDS
OF
FRUIT
THERE
ARE
FOR
EACH
TYPE
THE
PROGRAM
SHOULD
THEN
DISPLAY
THE
INFORMATION
IN
THE
FORM
FRUIT
WEIGHT
LISTED
IN
AL
PHABETICAL
ORDER
ONE
FRUIT
TYPE
PER
LINE
AS
SHOWN
BELOW
APPLE
LBS
BANANA
LBS
ETC
WRITE
A
PYTHON
PROGRAM
THAT
PROMPTS
THE
USER
TO
ENTER
INTEGER
VALUES
FOR
EACH
OF
TWO
LISTS
IT
THEN
SHOULD
DISPLAYS
WHETHER
THE
LISTS
ARE
OF
THE
SAME
LENGTH
WHETHER
THE
ELEMENTS
IN
EACH
LIST
SUM
TO
THE
SAME
VALUE
AND
WHETHER
THERE
ARE
ANY
VALUES
THAT
OCCUR
IN
BOTH
LISTS
PROGRAM
MODIFICATION
PROBLEMS
CHINESE
ZODIAC
PROGRAM
JAPANESE
AND
VIETNAMESE
VARIATIONS
MODIFY
THE
CHINESE
ZODIAC
PROGRAM
IN
THE
CHAPTER
TO
ALLOW
THE
USER
TO
SELECT
THE
CHINESE
ZODIAC
THE
JAPANESE
ZODIAC
OR
THE
VIETNAMESE
ZODIAC
THE
JAPANESE
ZODIAC
IS
THE
SAME
AS
THE
CHINESE
ZODIAC
EX
CEPT
THAT
PIG
IS
SUBSTITUTED
WITH
WILD
BOAR
THE
VIETNAMESE
ZODIAC
IS
ALSO
THE
SAME
EXCEPT
THAT
THE
OX
IS
SUBSTITUTED
WITH
WATER
BUFFALO
AND
RABBIT
IS
REPLACED
WITH
CAT
CHINESE
ZODIAC
PROGRAM
IMPROVED
ACCURACY
THE
TRUE
CHINESE
ZODIAC
DOES
NOT
STRICTLY
FOLLOW
THE
YEAR
THAT
A
GIVEN
PERSON
WAS
BORN
IT
ALSO
DEPENDS
ON
THE
MONTH
AND
DATE
AS
WELL
WHICH
VARY
OVER
THE
YEARS
FOLLOWING
ARE
THE
CORRECT
RANGE
OF
DATES
FOR
EACH
OF
THE
ZODIAC
SYMBOLS
FOR
THE
YEARS
TO
WHICH
INCLUDES
TWO
FULL
CYCLES
OF
THE
ZODIAC
MODIFY
PROGRAM
DEVELOPMENT
PROBLEMS
THE
CHINESE
ZODIAC
PROGRAM
IN
THE
CHAPTER
SO
THAT
THE
USER
IS
PROMPTED
TO
ENTER
THEIR
DATE
OF
BIRTH
INCLUD
ING
MONTH
AND
DAY
AND
DISPLAYS
THE
NAME
AND
CHARACTERISTICS
OF
THE
CORRESPONDING
CHINESE
ZODIAC
SYM
BOL
BASED
ON
THE
MORE
ACCURATE
ZODIAC
PROVIDED
HERE
PASSWORD
ENCRYPTION
DECRYPTION
PROGRAM
MULTIPLE
EXECUTIONS
MODIFY
THE
PASSWORD
ENCRYPTION
DECRYPTION
PROGRAM
IN
THE
CHAPTER
SO
THAT
IT
ALLOWS
THE
USER
TO
CONTINUE
TO
ENCRYPT
AND
DECRYPT
PASSWORDS
UNTIL
THEY
QUIT
PASSWORD
ENCRYPTION
DECRYPTION
PROGRAM
SECURE
PASSWORD
CHECK
MODIFY
THE
PASSWORD
ENCRYPTION
DECRYPTION
PROGRAM
IN
THE
CHAPTER
SO
THAT
THE
PROGRAM
REJECTS
ANY
EN
TERED
PASSWORD
FOR
ENCRYPTION
THAT
IS
NOT
CONSIDERED
SECURE
ENOUGH
A
PASSWORD
IS
CONSIDERED
SECURE
IF
IT
CONTAINS
AT
LEAST
EIGHT
CHARACTERS
WITH
AT
LEAST
ONE
DIGIT
AND
ONE
SPECIAL
CHARACTER
ETC
PASSWORD
ENCRYPTION
DECRYPTION
PROGRAM
RANDOM
KEY
GENERATION
MODIFY
THE
ENCRYPTION
DECRYPTION
PROGRAM
IN
THE
CHAPTER
SO
THAT
A
NEW
ENCRYPTION
KEY
IS
RANDOMLY
GENERATED
EACH
TIME
THE
PROGRAM
IS
EXECUTED
SEE
THE
PYTHON
PROGRAMMERS
REFERENCE
FOR
INFORMATION
ON
THE
RANDOM
MODULE
CALENDAR
YEAR
PROGRAM
MULTILINGUAL
VERSION
MODIFY
THE
CALENDAR
YEAR
PROGRAM
SO
THAT
THE
USER
CAN
SELECT
THE
LANGUAGE
WITH
WHICH
THE
CALENDAR
MONTHS
ARE
LABELED
GIVE
THE
USER
THE
CHOICE
OF
AT
LEAST
THREE
DIFFERENT
LANGUAGES
FROM
WHICH
TO
SELECT
FIND
THE
MONTH
NAMES
FOR
THE
OTHER
LANGUAGES
ONLINE
CALENDAR
YEAR
PROGRAM
FLEXIBLE
CALENDAR
FORMAT
THE
PROGRAM
AS
IS
ALWAYS
DISPLAYS
THREE
MONTHS
PER
ROW
MODIFY
THE
CALENDAR
YEAR
PROGRAM
SO
THAT
THE
USER
CAN
SELECT
HOW
MANY
MONTHS
ARE
DISPLAYED
PER
ROW
ALLOW
THE
USER
TO
SELECT
EITHER
TWO
THREE
OR
FOUR
MONTHS
PER
ROW
PROGRAM
DEVELOPMENT
PROBLEMS
MORSE
CODE
ENCRYPTION
DECRYPTION
PROGRAM
DEVELOP
AND
TEST
A
PYTHON
PROGRAM
THAT
ALLOWS
A
USER
TO
TYPE
IN
A
MESSAGE
AND
HAVE
IT
CONVERTED
INTO
MORSE
CODE
AND
ALSO
ENTER
MORSE
CODE
AND
HAVE
IT
CONVERTED
BACK
TO
THE
ORIGINAL
MESSAGE
THE
ENCODING
OF
MORSE
CODE
IS
GIVEN
BELOW
CHAPTER
LISTS
FORMAT
THE
ORIGINAL
MESSAGE
CONTAINING
ENGLISH
WORDS
SO
THAT
THERE
IS
ONE
SENTENCE
PER
LINE
FORMAT
THE
MORSE
CODE
FILE
CONTAINING
DOTS
AND
DASHES
SO
THAT
THERE
IS
ONE
LETTER
PER
LINE
WITH
A
BLANK
LINE
FOLLOWING
THE
LAST
LETTER
OF
EACH
WORD
AND
TWO
BLANK
LINES
FOLLOWING
THE
END
OF
EACH
SENTENCE
EXCEPT
THE
LAST
HOLIDAYS
CALENDAR
DEVELOP
AND
TEST
A
PYTHON
PROGRAM
THAT
DISPLAYS
THE
DAY
OF
THE
WEEK
THAT
THE
FOLLOWING
HOLIDAYS
FALL
ON
FOR
A
YEAR
ENTERED
BY
THE
USER
NEW
YEAR
EVE
VALENTINE
DAY
ST
PATRICK
DAY
APRIL
FOOL
DAY
FOURTH
OF
JULY
LABOR
DAY
HALLOWEEN
USER
BIRTHDAY
NOTE
THAT
LABOR
DAY
AS
OPPOSED
TO
THE
OTHER
HOLIDAYS
ABOVE
DOES
NOT
FALL
ON
THE
SAME
DATE
EACH
YEAR
IT
OCCURS
EACH
YEAR
ON
THE
FIRST
MONDAY
OF
SEPTEMBER
THE
GAME
OF
BATTLESHIP
BATTLESHIP
IS
A
GAME
INVOLVING
SHIPS
AT
SEA
FOR
EACH
OF
TWO
PLAYERS
THE
SHIPS
ARE
LOCATED
IN
A
GRID
IN
WHICH
EACH
COLUMN
OF
THE
GRID
IS
IDENTIFIED
BY
A
LETTER
AND
EACH
ROW
BY
A
NUMBER
AS
SHOWN
BELOW
PROGRAM
DEVELOPMENT
PROBLEMS
THE
TOP
HALF
OF
THE
BOARD
CONTAINS
THE
SHIPS
OF
PLAYER
AND
THE
BOTTOM
HALF
THE
SHIPS
OF
PLAYER
THE
DARKENED
AREAS
INDICATE
THE
SIZE
AND
LOCATION
OF
SHIPS
EACH
PLAYER
STARTS
WITH
THE
SAME
NUMBER
AND
TYPES
OF
SHIPS
THE
LOCATION
OF
EACH
PLAYER
SHIPS
IS
DETERMINED
BY
THE
PLAYER
PLAYERS
TAKE
TURNS
TAKING
A
SHOT
AT
THE
OPPONENT
SHIPS
BY
CALLING
OUT
A
PARTICULAR
GRID
LOCATION
FOR
EXAMPLE
IF
PLAYER
CALLS
OUT
NO
SHIP
WOULD
BE
HIT
IN
THIS
EXAMPLE
IF
HOWEVER
THEY
WERE
TO
CALL
OUT
THEN
PLAYER
SHIP
ON
THE
BOTTOM
HALF
OF
THE
BOARD
WOULD
BE
HIT
EACH
PLAYER
CALLS
OUT
HIT
OR
MISS
WHEN
THEY
ARE
SHOT
AT
BY
THE
OTHER
PLAYER
WHEN
ALL
GRID
LOCATIONS
OF
A
GIVEN
SHIP
HAVE
BEEN
HIT
THE
SHIP
IS
SUNK
AND
THE
OP
PONENT
GETS
THE
NUMBER
OF
POINTS
BASED
ON
THE
SHIP
SIZE
GIVEN
BELOW
THE
NUMBER
OF
GRID
LOCATIONS
THAT
A
GIVEN
SHIP
TAKES
UP
INDICATES
ITS
TYPE
AND
POINT
VALUE
A
TYPICAL
SET
OF
SHIPS
IS
GIVEN
BELOW
DEVELOP
AND
TEST
A
PYTHON
PROGRAM
THAT
CAN
PLAY
THE
GAME
OF
BATTLESHIP
THE
USER
SHOULD
BE
ABLE
TO
SELECT
THE
SKILL
LEVEL
THE
HIGHER
THE
SKILL
LEVEL
THE
LARGER
THE
GRID
THAT
IS
CREATED
FOR
PLAY
ALL
GAMES
START
WITH
EXACTLY
ONE
OF
EACH
TYPE
OF
SHIP
FOR
EACH
PLAYER
THE
LOCATIONS
OF
THE
COMPUTER
SHIPS
WILL
BE
RANDOMLY
PLACED
THE
USER
HOWEVER
MUST
BE
ABLE
TO
ENTER
THE
LOCATION
OF
EACH
OF
THEIR
SHIPS
THE
COMPUTER
SHOTS
INTO
THE
OPPONENT
GRID
AREA
SHOULD
BE
RANDOMLY
GENERATED
HEURISTIC
PLAY
FOR
THE
GAME
OF
BATTLESHIP
A
HEURISTIC
IS
A
GENERAL
RULE
OF
THUMB
FOR
SOLVING
A
PROBLEM
MODIFY
THE
GAME
OF
BATTLESHIP
PROGRAM
FROM
THE
PREVIOUS
PROBLEM
SO
THAT
THE
LOCATIONS
OF
THE
SHOTS
THAT
THE
COMPUTER
MAKES
INTO
THE
OPPONENT
GRID
AREA
ARE
BASED
ON
HEURISTICS
RATHER
THAN
BEING
RANDOMLY
GENERATED
INCLUDE
AN
EXPLANATION
OF
THE
HEURISTICS
DEVELOPED
UP
UNTIL
THIS
POINT
WE
HAVE
VIEWED
A
COMPUTER
PROGRAM
AS
A
SINGLE
SERIES
OF
INSTRUCTIONS
MOST
PROGRAMS
HOWEVER
CONSIST
OF
DISTINCT
GROUPS
OF
INSTRUCTIONS
EACH
OF
WHICH
ACCOMPLISHES
A
SPECIFIC
TASK
SUCH
A
GROUP
OF
INSTRUCTIONS
IS
REFERRED
TO
AS
A
ROUTINE
PROGRAM
ROUTINES
CALLED
FUNCTIONS
IN
PYTHON
ARE
FUNDAMENTAL
BUILDING
BLOCKS
IN
SOFTWARE
DEVELOPMENT
WE
TAKE
OUR
FIRST
LOOK
AT
FUNCTIONS
IN
THIS
CHAPTER
OBJECTIVES
AFTER
READING
THIS
CHAPTER
AND
COMPLETING
THE
EXERCISES
YOU
WILL
BE
ABLE
TO
EXPLAIN
THE
CONCEPT
OF
A
PROGRAM
ROUTINE
EXPLAIN
THE
CONCEPT
OF
PARAMETER
PASSING
EXPLAIN
THE
CONCEPT
OF
VALUE
RETURNING
AND
NON
VALUE
RETURNING
FUNCTIONS
EXPLAIN
THE
NOTION
OF
THE
SIDE
EFFECTS
OF
A
FUNCTION
CALL
DIFFERENTIATE
BETWEEN
LOCAL
SCOPE
AND
GLOBAL
SCOPE
DEFINE
AND
USE
FUNCTIONS
IN
PYTHON
EXPLAIN
THE
CONCEPT
OF
KEYWORD
AND
DEFAULT
ARGUMENTS
IN
PYTHON
WRITE
A
PYTHON
PROGRAM
USING
PROGRAMMER
DEFINED
FUNCTIONS
EFFECTIVELY
USE
TRACE
STATEMENTS
FOR
PROGRAM
TESTING
CHAPTER
CONTENTS
MOTIVATION
FUNDAMENTAL
CONCEPTS
PROGRAM
ROUTINES
MORE
ON
FUNCTIONS
COMPUTATIONAL
PROBLEM
SOLVING
CREDIT
CARD
CALCULATION
PROGRAM
PROGRAM
ROUTINES
MOTIVATION
SO
FAR
WE
HAVE
LIMITED
OURSELVES
TO
USING
ONLY
THE
MOST
FUNDAMENTAL
FEATURES
OF
PYTHON
VARIABLES
EXPRESSIONS
CONTROL
STRUCTURES
INPUT
PRINT
AND
LISTS
IN
THEORY
THESE
ARE
THE
ONLY
INSTRUCTIONS
NEEDED
TO
WRITE
ANY
PRO
GRAM
THAT
IS
TO
PERFORM
ANY
COMPUTATION
FROM
A
PRACTICAL
POINT
OF
VIEW
HOWEVER
THESE
INSTRUCTIONS
ALONE
ARE
NOT
ENOUGH
THE
PROBLEM
IS
ONE
OF
COMPLEXITY
SOME
SMART
PHONES
FOR
EXAMPLE
CONTAIN
OVER
MILLION
LINES
OF
CODE
SEE
FIGURE
IMAGINE
THE
EFFORT
NEEDED
TO
DEVELOP
AND
DEBUG
SOFTWARE
OF
THAT
SIZE
IT
CERTAINLY
CANNOT
BE
IMPLEMENTED
BY
ANY
ONE
PERSON
IT
TAKES
A
TEAM
OF
PROGRAMMERS
TO
DEVELOP
SUCH
A
PROJECT
IN
ORDER
TO
MANAGE
THE
COMPLEXITY
OF
A
LARGE
PROBLEM
IT
IS
BROKEN
DOWN
INTO
SMALLER
SUBPROB
LEMS
THEN
EACH
SUBPROBLEM
CAN
BE
FOCUSED
ON
AND
SOLVED
SEPARATELY
IN
PROGRAMMING
WE
DO
THE
SAME
THING
PROGRAMS
ARE
DIVIDED
INTO
MANAGEABLE
PIECES
CALLED
PROGRAM
ROUTINES
OR
SIMPLY
ROU
TINES
DOING
SO
IS
A
FORM
OF
ABSTRACTION
IN
WHICH
A
MORE
GENERAL
LESS
DETAILED
VIEW
OF
A
SYSTEM
CAN
BE
ACHIEVED
IN
ADDITION
PROGRAM
ROUTINES
PROVIDE
THE
OPPORTUNITY
FOR
CODE
REUSE
SO
THAT
SYSTEMS
DO
NOT
HAVE
TO
BE
CREATED
FROM
SCRATCH
ROUTINES
THEREFORE
ARE
A
FUNDAMENTAL
BUILDING
BLOCK
IN
SOFTWARE
DEVELOPMENT
IN
THIS
CHAPTER
WE
LOOK
AT
THE
DEFINITION
AND
USE
OF
PROGRAM
ROUTINES
IN
PYTHON
FIGURE
MEASURES
OF
LINES
OF
PROGRAM
CODE
FUNDAMENTAL
CONCEPTS
PROGRAM
ROUTINES
WE
FIRST
INTRODUCE
THE
NOTION
OF
A
PROGRAM
ROUTINE
WE
THEN
LOOK
IN
PARTICULAR
AT
PROGRAM
ROUTINES
IN
PYTHON
CALLED
FUNCTIONS
WE
HAVE
ALREADY
BEEN
USING
PYTHON
BUILT
IN
FUNCTIONS
SUCH
AS
LEN
RANGE
AND
OTHERS
WE
NOW
LOOK
MORE
CLOSELY
AT
HOW
FUNCTIONS
ARE
USED
IN
PYTHON
AS
WELL
AS
HOW
TO
DEFINE
OUR
OWN
WHAT
IS
A
FUNCTION
ROUTINE
A
ROUTINE
IS
A
NAMED
GROUP
OF
INSTRUCTIONS
PERFORMING
SOME
TASK
A
ROUTINE
CAN
BE
INVOKED
CALLED
AS
MANY
TIMES
AS
NEEDED
IN
A
GIVEN
PROGRAM
AS
SHOWN
IN
FIGURE
CHAPTER
FUNCTIONS
FIGURE
PROGRAM
ROUTINE
WHEN
A
ROUTINE
TERMINATES
EXECUTION
AUTOMATICALLY
RETURNS
TO
THE
POINT
FROM
WHICH
IT
WAS
CALLED
SUCH
ROUTINES
MAY
BE
PREDEFINED
IN
THE
PROGRAMMING
LANGUAGE
OR
DESIGNED
AND
IMPLEMENTED
BY
THE
PROGRAMMER
A
FUNCTION
IS
PYTHON
VERSION
OF
A
PROGRAM
ROUTINE
SOME
FUNCTIONS
ARE
DESIGNED
TO
RETURN
A
VALUE
WHILE
OTHERS
ARE
DESIGNED
FOR
OTHER
PURPOSES
WE
LOOK
AT
THESE
TWO
TYPES
OF
FUNCTIONS
NEXT
DEFINING
FUNCTIONS
IN
ADDITION
TO
THE
BUILT
IN
FUNCTIONS
OF
PYTHON
THERE
IS
THE
CAPABILITY
TO
DEFINE
NEW
FUNCTIONS
SUCH
FUNCTIONS
MAY
BE
GENERALLY
USEFUL
OR
SPECIFIC
TO
A
PARTICULAR
PROGRAM
THE
ELEMENTS
OF
A
FUNCTION
DEFINITION
ARE
GIVEN
IN
FIGURE
FIGURE
EXAMPLE
OF
PYTHON
FUNCTION
DEFINITION
THE
FIRST
LINE
OF
A
FUNCTION
DEFINITION
IS
THE
FUNCTION
HEADER
A
FUNCTION
HEADER
STARTS
WITH
THE
KEY
WORD
DEF
FOLLOWED
BY
AN
IDENTIFIER
AVG
WHICH
IS
THE
FUNCTION
NAME
THE
FUNCTION
NAME
IS
FOLLOWED
BY
A
COMMA
SEPARATED
POSSIBLY
EMPTY
LIST
OF
IDENTIFIERS
CALLED
FORMAL
PARAMETERS
OR
SIMPLY
PARAMETERS
FOLLOWING
THE
PARAMETER
LIST
IS
A
COLON
FOLLOWING
THE
FUNCTION
HEADER
IS
THE
BODY
OF
THE
FUNCTION
A
SUITE
PROGRAM
BLOCK
CONTAINING
THE
FUNCTION
INSTRUCTIONS
AS
WITH
ALL
SUITES
THE
STATEMENTS
MUST
BE
INDENTED
AT
THE
SAME
LEVEL
RELATIVE
TO
THE
FUNCTION
HEADER
PROGRAM
ROUTINES
THE
NUMBER
OF
ITEMS
IN
A
PARAMETER
LIST
INDICATES
THE
NUMBER
OF
VALUES
THAT
MUST
BE
PASSED
TO
THE
FUNCTION
CALLED
ACTUAL
ARGUMENTS
OR
SIMPLY
ARGUMENTS
SUCH
AS
THE
VARIABLES
AND
BELOW
AVG
FUNCTIONS
ARE
GENERALLY
DEFINED
AT
THE
TOP
OF
A
PROGRAM
HOWEVER
EVERY
FUNCTION
MUST
BE
DEFINED
BEFORE
IT
IS
CALLED
WE
DISCUSS
MORE
ABOUT
FUNCTION
DEFINITION
AND
USE
IN
THE
FOLLOWING
SECTIONS
VALUE
RETURNING
FUNCTIONS
A
VALUE
RETURNING
FUNCTION
IS
A
PROGRAM
ROUTINE
CALLED
FOR
ITS
RETURN
VALUE
AND
IS
THEREFORE
SIMILAR
TO
A
MATHEMATICAL
FUNCTION
TAKE
THE
SIMPLE
MATHEMATICAL
FUNCTION
F
X
IN
THIS
NOTATION
X
STANDS
FOR
ANY
NUMERIC
VALUE
THAT
FUNCTION
F
MAY
BE
APPLIED
TO
FOR
EXAMPLE
F
PRO
GRAM
FUNCTIONS
ARE
SIMILARLY
USED
AS
ILLUSTRATED
IN
FIGURE
FUNCTION
AVG
TAKES
THREE
ARGUMENTS
AND
AND
RETURNS
THE
AVERAGE
OF
THE
THREE
THE
FUNCTION
CALL
AVG
THEREFORE
IS
AN
EXPRESSION
THAT
EVALUATES
TO
THE
RETURNED
FUNCTION
VALUE
THIS
IS
INDICATED
IN
THE
FUNCTION
RETURN
STATEMENT
OF
THE
FORM
RETURN
EXPR
WHERE
EXPR
MAY
BE
ANY
EXPRESSION
NEXT
WE
LOOK
AT
A
SECOND
FORM
OF
PROGRAM
ROUTINE
CALLED
FOR
A
PURPOSE
OTHER
THAN
A
RETURNED
FUNCTION
VALUE
FIGURE
CALL
TO
VALUE
RETURNING
FUNCTION
CHAPTER
FUNCTIONS
NON
VALUE
RETURNING
FUNCTIONS
A
NON
VALUE
RETURNING
FUNCTION
IS
CALLED
NOT
FOR
A
RETURNED
VALUE
BUT
FOR
ITS
SIDE
EFFECTS
A
SIDE
EFFECT
IS
AN
ACTION
OTHER
THAN
RETURNING
A
FUNCTION
VALUE
SUCH
AS
DISPLAYING
OUTPUT
ON
THE
SCREEN
THERE
IS
A
FUNDAMENTAL
DIFFERENCE
IN
THE
WAY
THAT
VALUE
RETURNING
AND
NON
VALUE
RETURNING
FUNCTIONS
ARE
CALLED
A
CALL
TO
A
VALUE
RETURNING
FUNCTION
IS
AN
EXPRESSION
AS
FOR
THE
CALL
TO
FUNCTION
AVG
RESULT
AVG
FACTOR
WHEN
NON
VALUE
RETURNING
FUNCTIONS
ARE
CALLED
HOWEVER
THE
FUNCTION
CALL
IS
A
STATEMENT
AS
SHOWN
IN
FIGURE
SINCE
SUCH
FUNCTIONS
DO
NOT
HAVE
A
RETURN
VALUE
IT
IS
INCORRECT
TO
USE
A
CALL
TO
A
NON
VALUE
RETURNING
FUNCTION
AS
AN
EXPRESSION
FIGURE
CALL
TO
NON
VALUE
RETURNING
FUNCTION
IN
THIS
EXAMPLE
FUNCTION
DISPLAYWELCOME
IS
CALLED
ONLY
FOR
THE
SIDE
EFFECT
OF
THE
SCREEN
OUTPUT
PRODUCED
FINALLY
EVERY
FUNCTION
IN
PYTHON
IS
TECHNICALLY
A
VALUE
RETURNING
FUNCTION
SINCE
ANY
FUNC
TION
THAT
DOES
NOT
EXPLICITLY
RETURN
A
FUNCTION
VALUE
VIA
A
RETURN
STATEMENT
AUTOMATICALLY
RETURNS
THE
SPECIAL
VALUE
NONE
WE
WILL
HOWEVER
CONSIDER
SUCH
FUNCTIONS
AS
NON
VALUE
RETURNING
FUNCTIONS
PROGRAM
ROUTINES
LET
APPLY
IT
TEMPERATURE
CONVERSION
PROGRAM
FUNCTION
VERSION
THE
FOLLOWING
IS
A
PROGRAM
FIGURE
THAT
ALLOWS
A
USER
TO
CONVERT
A
RANGE
OF
VALUES
FROM
FAHREN
HEIT
TO
CELSIUS
OR
CELSIUS
TO
FAHRENHEIT
AS
PRESENTED
IN
CHAPTER
IN
THIS
VERSION
HOWEVER
THE
PROGRAM
IS
DESIGNED
WITH
THE
USE
OF
FUNCTIONS
THIS
PROGRAM
UTILIZES
THE
FOLLOWING
PROGRAMMING
FEATURES
VALUE
RETURNING
FUNCTIONS
NON
VALUE
RETURNING
FUNCTIONS
EXAMPLE
EXECUTION
OF
THE
PROGRAM
IS
GIVEN
IN
FIGURE
FIGURE
EXECUTION
OF
TEMPERATURE
CONVERSION
PROGRAM
CHAPTER
FUNCTIONS
FIGURE
TEMPERATURE
CONVERSION
PROGRAM
FUNCTION
VERSION
IN
LINES
ARE
DEFINED
FUNCTIONS
DISPLAYWELCOME
GETCONVERTTO
DISPLAYFAHREN
TOCELSIUS
AND
DISPLAYCELSIUSTOFAHREN
THE
FUNCTIONS
ARE
DIRECTLY
CALLED
FROM
THE
MAIN
MODULE
OF
THE
PROGRAM
IN
LINES
ON
LINE
THE
NON
VALUE
RETURNING
FUNCTION
DISPLAYWELCOME
IS
CALLED
ITS
JOB
IS
TO
DIS
PLAY
INFORMATION
ABOUT
THE
PROGRAM
TO
THE
USER
IT
DOES
NOT
NEED
TO
BE
PASSED
ANY
ARGUMENTS
SINCE
IT
PERFORMS
THE
SAME
OUTPUT
EACH
TIME
IT
IS
CALLED
NEXT
ON
LINE
VALUE
RETURNING
FUNCTION
GET
CONVERTTO
IS
CALLED
THIS
FUNCTION
ALSO
IS
NOT
PASSED
ANY
ARGUMENTS
IT
SIMPLY
ASKS
THE
USER
TO
PROGRAM
ROUTINES
ENTER
EITHER
F
OR
C
TO
INDICATE
WHETHER
THEY
WANT
TO
CONVERT
FROM
FAHRENHEIT
TO
CELSIUS
OR
CELSIUS
TO
FAHRENHEIT
THE
INPUT
VALUE
ENTERED
IS
RETURNED
AS
THE
FUNCTION
VALUE
THE
INSTRUCTIONS
ON
LINE
THEN
PROMPT
THE
USER
FOR
THE
START
AND
END
RANGE
OF
TEMPERATURES
TO
BE
CONVERTED
THIS
TASK
DOES
NOT
WARRANT
THE
CONSTRUCTION
OF
A
FUNCTION
SINCE
THERE
ARE
ONLY
TWO
INPUT
INSTRUCTIONS
TO
ACCOMPLISH
THIS
THE
FINAL
PART
OF
THE
PROGRAM
DISPLAYS
THE
CONVERTED
RANGE
OF
TEMPERATURES
TWO
NON
VALUE
RETURNING
FUNCTIONS
ARE
DEFINED
FOR
ACCOMPLISHING
THIS
TASK
DISPLAYFAHRENTOCELSIUS
AND
DISPLAYCELSIUSTOFAHREN
EACH
IS
PASSED
TWO
ARGUMENTS
AND
WHICH
INDICATE
THE
RANGE
OF
TEMPERATURE
VALUES
TO
BE
CONVERTED
WHAT
IS
LEFT
TO
LOOK
AT
IS
THE
IMPLEMENTATION
OF
EACH
OF
THE
INDIVIDUAL
FUNCTIONS
THE
IMPLE
MENTATION
OF
FUNCTION
DISPLAYWELCOME
LINES
IS
VERY
STRAIGHTFORWARD
IT
SIMPLY
CONTAINS
THREE
PRINT
INSTRUCTIONS
FUNCTION
GETCONVERTTO
LINES
CONTAINS
A
CALL
TO
INPUT
FOLLOWED
BY
A
WHILE
LOOP
THAT
PERFORMS
INPUT
VALIDATION
THE
USER
IS
FORCED
TO
ENTER
EITHER
F
OR
C
AND
IS
CONTINUALLY
PROMPTED
TO
RE
ENTER
AS
LONG
AS
A
VALUE
OTHER
THAN
THESE
TWO
VALUES
IS
ENTERED
WHEN
THE
LOOP
TERMINATES
VARIABLE
WHICH
IS
RETURNED
BY
THE
RETURN
STATEMENT
IN
LINE
FUNCTION
DISPLAYFAHRENTOCELSIUS
LINES
AND
FUNCTION
DISPLAYCELSIUS
TOFAHREN
LINES
ARE
SIMILAR
IN
DESIGN
EACH
CONTAINS
TWO
PARAMETERS
START
AND
END
WHICH
ARE
EACH
PASSED
ACTUAL
ARGUMENTS
AND
IN
THE
MAIN
SECTION
OF
THE
PROGRAM
EACH
FIRST
PRINTS
THE
APPROPRIATE
COLUMN
HEADINGS
FOLLOWED
BY
A
FOR
STATEMENT
THAT
ITERATES
VARIABLE
TEMP
OVER
THE
REQUESTED
TEMPERATURE
RANGE
THE
CONVERSION
FORMULA
IS
DIFFERENT
IN
EACH
HOWEVER
EACH
HAS
THE
SAME
FINAL
PRINT
INSTRUCTION
TO
PRINT
OUT
THE
ORIGINAL
TEMPERATURE
AND
THE
CONVERTED
TEMPERATURE
IN
EACH
OF
THE
COLUMNS
SELF
TEST
QUESTIONS
THE
VALUES
PASSED
IN
A
GIVEN
FUNCTION
CALL
IN
PYTHON
ARE
CALLED
A
FORMAL
PARAMETERS
B
ACTUAL
ARGUMENTS
THE
IDENTIFIERS
OF
A
GIVEN
PYTHON
FUNCTION
PROVIDING
NAMES
FOR
THE
VALUES
PASSED
TO
IT
ARE
CALLED
A
FORMAL
PARAMETERS
B
ACTUAL
ARGUMENTS
FUNCTIONS
CAN
BE
CALLED
AS
MANY
TIMES
AS
NEEDED
IN
A
GIVEN
PROGRAM
TRUE
FALSE
WHEN
A
GIVEN
FUNCTION
IS
CALLED
IT
IS
SAID
TO
BE
A
SUBROGATED
B
INVOKED
C
ACTIVATED
WHICH
OF
THE
FOLLOWING
TYPES
OF
FUNCTIONS
MUST
CONTAIN
A
RETURN
STATEMENT
A
VALUE
RETURNING
FUNCTIONS
B
NON
VALUE
RETURNING
FUNCTIONS
VALUE
RETURNING
FUNCTION
CALLS
ARE
A
EXPRESSIONS
B
STATEMENTS
NON
VALUE
RETURNING
FUNCTION
CALLS
ARE
A
EXPRESSIONS
B
STATEMENTS
WHICH
OF
THE
FOLLOWING
TYPES
OF
ROUTINES
IS
MEANT
TO
PRODUCE
SIDE
EFFECTS
A
VALUE
RETURNING
FUNCTIONS
B
NON
VALUE
RETURNING
FUNCTIONS
ANSWERS
B
A
TRUE
B
A
A
B
B
CHAPTER
FUNCTIONS
MORE
ON
FUNCTIONS
IN
THIS
SECTION
WE
FURTHER
DISCUSS
ISSUES
RELATED
TO
FUNCTION
USE
INCLUDING
MORE
ON
FUNCTION
INVOCA
TION
AND
PARAMETER
PASSING
CALLING
VALUE
RETURNING
FUNCTIONS
CALLS
TO
VALUE
RETURNING
FUNCTIONS
CAN
BE
USED
ANYWHERE
THAT
A
FUNCTION
RETURN
VALUE
IS
APPROPRIATE
RESULT
MAX
HERE
WE
APPLY
BUILT
IN
FUNCTION
MAX
TO
A
LIST
OF
INTEGERS
EXAMPLES
OF
ADDITIONAL
ALLOWABLE
FORMS
OF
FUNCTION
CALLS
ARE
GIVEN
BELOW
A
RESULT
MAX
MAX
B
RESULT
ABS
MAX
C
IF
MAX
D
PRINT
LARGEST
VALUE
IN
IS
MAX
THE
EXAMPLES
DEMONSTRATE
THAT
AN
EXPRESSION
MAY
CONTAIN
MULTIPLE
FUNCTION
CALLS
AS
IN
A
A
FUNCTION
CALL
MAY
CONTAIN
FUNCTION
CALLS
AS
ARGUMENTS
AS
IN
B
CONDITIONAL
EXPRESSIONS
MAY
CONTAIN
FUNCTION
CALLS
AS
IN
C
AND
THE
ARGUMENTS
IN
PRINT
FUNCTION
CALLS
MAY
CONTAIN
FUNCTION
CALLS
AS
IN
D
WHAT
IF
A
FUNCTION
IS
TO
RETURN
MORE
THAN
ONE
VALUE
SUCH
AS
FUNCTION
MAXMIN
TO
RETURN
BOTH
THE
MAXIMUM
AND
MINIMUM
VALUES
OF
A
LIST
OF
INTEGERS
IN
PYTHON
WE
CAN
DO
THIS
BY
RETURNING
THE
TWO
VALUES
AS
A
SINGLE
TUPLE
FUNCTION
DEFINITION
DEF
MAXMIN
RETURN
MAX
MIN
FUNCTION
USE
A
MAXMIN
B
HIGH
LOW
MAXMIN
IN
A
ABOVE
THE
RETURNED
TUPLE
IS
ASSIGNED
TO
A
SINGLE
VARIABLE
THUS
TEMPS
CONTAINS
THE
MAXIMUM
TEMPERATURE
AND
CONTAINS
THE
MINI
MUM
TEMPERATURE
IN
B
HOWEVER
A
TUPLE
ASSIGNMENT
IS
USED
IN
THIS
CASE
VARIABLES
HIGH
AND
LOW
ARE
EACH
ASSIGNED
A
VALUE
OF
THE
TUPLE
BASED
ON
THE
ORDER
THAT
THEY
APPEAR
THUS
HIGH
IS
ASSIGNED
TO
THE
TUPLE
VALUE
AT
INDEX
AND
LOW
THE
TUPLE
VALUE
AT
INDEX
OF
THE
RETURNED
TUPLE
NOTE
THAT
IT
DOES
NOT
MAKE
SENSE
FOR
A
CALL
TO
A
VALUE
RETURNING
FUNCTION
TO
BE
USED
AS
A
STATE
MENT
FOR
EXAMPLE
MAX
SUCH
A
FUNCTION
CALL
DOES
NOT
HAVE
ANY
UTILITY
BECAUSE
THE
EXPRESSION
WOULD
EVALUATE
TO
A
VALUE
THAT
IS
NEVER
USED
AND
THUS
IS
EFFECTIVELY
THROWN
AWAY
FINALLY
WE
CAN
DESIGN
VALUE
RETURNING
FUNCTIONS
THAT
DO
NOT
TAKE
ANY
ARGUMENTS
AS
WE
SAW
IN
THE
GETCONVERTTO
FUNCTION
OF
THE
PREVIOUS
TEMPERATURE
CONVERSION
PROGRAM
EMPTY
PARENTHESES
MORE
ON
FUNCTIONS
ARE
USED
IN
BOTH
THE
FUNCTION
HEADER
AND
THE
FUNCTION
CALL
THIS
IS
NEEDED
TO
DISTINGUISH
THE
IDENTIFIER
AS
DENOTING
A
FUNCTION
NAME
AND
NOT
A
VARIABLE
CALLING
NON
VALUE
RETURNING
FUNCTIONS
AS
WE
HAVE
SEEN
NON
VALUE
RETURNING
FUNCTIONS
ARE
CALLED
FOR
THEIR
SIDE
EFFECTS
AND
NOT
FOR
A
RETURNED
FUNCTION
VALUE
THUS
SUCH
FUNCTION
CALLS
ARE
STATEMENTS
AND
THEREFORE
CAN
BE
USED
ANYWHERE
THAT
AN
EXECUTABLE
STATEMENT
IS
ALLOWED
CONSIDER
SUCH
A
FUNCTION
CALL
TO
DISPLAY
WELCOME
FROM
FIGURE
DISPLAYWELCOME
IT
WOULD
NOT
MAKE
SENSE
TO
TREAT
THIS
FUNCTION
CALL
AS
AN
EXPRESSION
SINCE
NO
MEANINGFUL
VALUE
IS
RETURNED
ONLY
THE
DEFAULT
RETURN
VALUE
NONE
THUS
FOR
EXAMPLE
THE
FOLLOWING
ASSIGNMENT
STATE
MENT
WOULD
NOT
SERVE
ANY
PURPOSE
DISPLAYWELCOME
FINALLY
AS
DEMONSTRATED
BY
FUNCTION
DISPLAYWELCOME
FUNCTIONS
CALLED
FOR
THEIR
SIDE
EFFECTS
CAN
BE
DESIGNED
TO
TAKE
NO
ARGUMENTS
THE
SAME
AS
WE
SAW
FOR
VALUE
RETURNING
FUNCTIONS
PARENTHESES
ARE
STILL
INCLUDED
IN
THE
FUNCTION
CALL
TO
INDICATE
THAT
IDENTIFIER
DISPLAYWELCOME
IS
A
FUNCTION
NAME
AND
NOT
A
VARIABLE
CHAPTER
FUNCTIONS
PARAMETER
PASSING
NOW
THAT
WE
HAVE
DISCUSSED
HOW
FUNCTIONS
ARE
CALLED
WE
TAKE
A
CLOSER
LOOK
AT
THE
PASSING
OF
ARGU
MENTS
TO
FUNCTIONS
ACTUAL
ARGUMENTS
VS
FORMAL
PARAMETERS
PARAMETER
PASSING
IS
THE
PROCESS
OF
PASSING
ARGUMENTS
TO
A
FUNCTION
AS
WE
HAVE
SEEN
ACTUAL
ARGU
MENTS
ARE
THE
VALUES
PASSED
TO
A
FUNCTION
FORMAL
PARAMETERS
TO
BE
OPERATED
ON
THIS
IS
ILLUSTRATED
IN
FIGURE
FIGURE
PARAMETER
PASSING
MORE
ON
FUNCTIONS
HERE
THE
VALUES
OF
BIRTHYR
THE
USER
YEAR
OF
BIRTH
AND
HSGRADYR
THE
USER
YEAR
OF
HIGH
SCHOOL
GRADUATION
ARE
PASSED
AS
THE
ACTUAL
ARGUMENTS
TO
FORMAL
PARAMETERS
AND
EACH
CALL
IS
PART
OF
THE
SAME
BOOLEAN
EXPRESSION
ORDERED
BIRTHYR
HSGRADYR
AND
ORDERED
HSGRADYR
COLGRADYR
IN
THE
SECOND
FUNCTION
CALL
OF
THE
EXPRESSION
A
DIFFER
ENT
SET
OF
VALUES
HSGRADYR
AND
COLGRADYR
ARE
PASSED
FORMAL
PARAMETER
NAMES
AND
HOWEVER
REMAIN
THE
SAME
NOTE
THAT
THE
CORRESPONDENCE
OF
ACTUAL
ARGUMENTS
AND
FORMAL
PARAMETERS
IS
DETERMINED
BY
THE
ORDER
OF
THE
ARGUMENTS
PASSED
AND
NOT
THEIR
NAMES
THUS
FOR
EXAMPLE
IT
IS
PERFECTLY
FINE
TO
PASS
AN
ACTUAL
ARGUMENT
NAMED
TO
FORMAL
PARAMETER
AND
ACTUAL
ARGUMENT
TO
FORMAL
PARAMETER
AS
GIVEN
IN
FIGURE
FIGURE
PARAMETER
PASSING
AND
ARGUMENT
NAMES
IN
THIS
EXAMPLE
FUNCTION
ORDERED
IS
CALLED
ONCE
WITH
ARGUMENTS
AND
A
SECOND
TIME
WITH
ARGUMENTS
EACH
IS
A
PROPER
FUNCTION
CALL
AND
EACH
IS
WHAT
IS
LOGICALLY
NEEDED
IN
THIS
INSTANCE
CHAPTER
FUNCTIONS
MUTABLE
VS
IMMUTABLE
ARGUMENTS
THERE
IS
AN
ISSUE
RELATED
TO
PARAMETER
PASSING
THAT
WE
HAVE
YET
TO
ADDRESS
WE
KNOW
THAT
WHEN
A
FUNCTION
IS
CALLED
THE
CURRENT
VALUES
OF
THE
ARGUMENTS
PASSED
BECOME
THE
INITIAL
VALUES
OF
THEIR
COR
RESPONDING
FORMAL
PARAMETERS
DEF
AVG
AVG
IN
THIS
CASE
LITERAL
VALUES
ARE
PASSED
AS
THE
ARGUMENTS
TO
FUNCTION
AVG
WHEN
VARIABLES
ARE
PASSED
AS
ACTUAL
ARGUMENTS
HOWEVER
AS
SHOWN
BELOW
DEF
AVG
AVG
THERE
IS
THE
QUESTION
AS
TO
WHETHER
ANY
CHANGES
TO
FORMAL
PARAMETERS
AND
IN
THE
FUNCTION
RESULT
IN
CHANGES
TO
THE
CORRESPONDING
ACTUAL
ARGUMENTS
AND
IN
THIS
CASE
FUNC
TION
AVG
DOESN
T
ASSIGN
VALUES
TO
ITS
FORMAL
PARAMETERS
SO
THERE
IS
NO
POSSIBILITY
OF
THE
ACTUAL
ARGU
MENTS
BEING
CHANGED
CONSIDER
HOWEVER
THE
FOLLOWING
FUNCTION
DEF
COUNTDOWN
N
WHILE
N
IF
N
PRINT
N
END
ELSE
PRINT
N
N
N
THIS
FUNCTION
SIMPLY
DISPLAYS
A
COUNTDOWN
OF
THE
PROVIDED
INTEGER
PARAMETER
VALUE
FOR
EXAMPLE
FUNCTION
CALL
COUNTDOWN
PRODUCES
THE
FOLLOWING
OUTPUT
WHAT
IF
THE
FUNCTION
CALL
CONTAINED
A
VARIABLE
AS
THE
ARGUMENT
FOR
EXAMPLE
COUNTDOWN
TICS
SINCE
FUNCTION
COUNTDOWN
ALTERS
THE
VALUE
OF
FORMAL
PARAMETER
N
DECREMENTING
IT
UNTIL
IT
REACHES
THE
VALUE
DOES
THE
CORRESPONDING
ACTUAL
ARGUMENT
HAVE
VALUE
AS
WELL
COUNTDOWN
MORE
ON
FUNCTIONS
IF
YOU
TRY
THIS
YOU
WILL
SEE
THAT
IS
UNCHANGED
NOW
CONSIDER
THE
FOLLOWING
FUNCTION
DEF
SUMPOS
NUMS
FOR
K
IN
RANGE
LEN
NUMS
TOTAL
SUMPOS
IF
NUMS
K
TOTAL
NUMS
K
RETURN
SUM
NUMS
FUNCTION
SUMPOS
RETURNS
THE
SUM
OF
ONLY
THE
POSITIVE
NUMBERS
IN
THE
PROVIDED
ARGUMENT
IT
DOES
THIS
BY
FIRST
REPLACING
ALL
NEGATIVE
VALUES
IN
PARAMETER
NUMS
WITH
THEN
SUMMING
THE
LIST
USING
BUILT
IN
FUNCTION
SUM
WE
SEE
ABOVE
THAT
THE
CORRESPONDING
ACTUAL
ARGUMENT
HAS
BEEN
AL
TERED
IN
THIS
CASE
WITH
ALL
OF
THE
ORIGINAL
NEGATIVE
VALUES
SET
TO
THE
REASON
THAT
THERE
WAS
NO
CHANGE
IN
INTEGER
ARGUMENT
ABOVE
BUT
THERE
WAS
IN
LIST
ARGUMENT
HAS
TO
DO
WITH
THEIR
TYPES
LISTS
ARE
MUTABLE
THUS
ARGUMENTS
OF
TYPE
LIST
WILL
BE
ALTERED
IF
PASSED
TO
A
FUNCTION
THAT
ALTERS
ITS
VALUE
INTEGERS
FLOATS
BOOLEANS
STRINGS
AND
TUPLES
ON
THE
OTHER
HAND
ARE
IMMUTABLE
THUS
ARGUMENTS
OF
THESE
TYPES
CANNOT
BE
ALTERED
AS
A
RESULT
OF
ANY
FUNCTION
CALL
IT
IS
GENERALLY
BETTER
TO
DESIGN
FUNCTIONS
THAT
DO
NOT
RETURN
RESULTS
THROUGH
THEIR
ARGUMENTS
IN
MOST
CASES
THE
RESULT
SHOULD
BE
RETURNED
AS
THE
FUNCTION
RETURN
VALUE
WHAT
IF
A
FUNCTION
NEEDS
TO
RETURN
MORE
THAN
ONE
FUNCTION
VALUE
THE
VALUES
CAN
BE
RETURNED
IN
A
TUPLE
AS
DISCUSSED
ABOVE
LET
TR
Y
IT
ENTER
THE
FOLLOWING
AND
OBSERVE
THE
RESULTS
NUM
DEF
INCR
N
DEF
UPDATE
NUMS
UPDATE
N
N
NUMS
NUMS
INCR
NUM
UPDATE
NUM
KEYWORD
ARGUMENTS
IN
PYTHON
THE
FUNCTIONS
WE
HAVE
LOOKED
AT
SO
FAR
WERE
CALLED
WITH
A
FIXED
NUMBER
OF
POSITIONAL
ARGUMENTS
A
POSITIONAL
ARGUMENT
IS
AN
ARGUMENT
THAT
IS
ASSIGNED
TO
A
PARTICULAR
PARAMETER
BASED
ON
ITS
POSI
TION
IN
THE
ARGUMENT
LIST
AS
ILLUSTRATED
BELOW
DEF
AMOUNT
RATE
TERM
CHAPTER
FUNCTIONS
THIS
FUNCTION
COMPUTES
AND
RETURNS
THE
MONTHLY
MORTGAGE
PAYMENT
FOR
A
GIVEN
LOAN
AMOUNT
AMOUNT
INTEREST
RATE
RATE
AND
NUMBER
OF
YEARS
OF
THE
LOAN
TERM
PYTHON
PROVIDES
THE
OPTION
OF
CALLING
ANY
FUNCTION
BY
THE
USE
OF
KEYWORD
ARGUMENTS
A
KEY
WORD
ARGUMENT
IS
AN
ARGUMENT
THAT
IS
SPECIFIED
BY
PARAMETER
NAME
RATHER
THAN
AS
A
POSITIONAL
ARGU
MENT
AS
SHOWN
BELOW
NOTE
THAT
KEYWORD
ARGUMENTS
BY
CONVENTION
DO
NOT
HAVE
A
SPACE
BEFORE
OR
AFTER
THE
EQUAL
SIGN
DEF
AMOUNT
RATE
TERM
THIS
CAN
BE
A
USEFUL
WAY
OF
CALLING
A
FUNCTION
IF
IT
IS
EASIER
TO
REMEMBER
THE
PARAMETER
NAMES
THAN
IT
IS
TO
REMEMBER
THEIR
ORDER
IT
IS
POSSIBLE
TO
CALL
A
FUNCTION
WITH
THE
USE
OF
BOTH
POSITIONAL
AND
KEY
WORD
ARGUMENTS
HOWEVER
ALL
POSITIONAL
ARGUMENTS
MUST
COME
BEFORE
ALL
KEYWORD
ARGUMENTS
IN
THE
FUNCTION
CALL
AS
SHOWN
BELOW
DEF
AMOUNT
RATE
TERM
06
THIS
FORM
OF
FUNCTION
CALL
MIGHT
BE
USEFUL
FOR
EXAMPLE
IF
YOU
REMEMBER
THAT
THE
FIRST
ARGUMENT
IS
THE
LOAN
AMOUNT
BUT
YOU
ARE
NOT
SURE
OF
THE
ORDER
OF
THE
LAST
TWO
ARGUMENTS
RATE
AND
TERM
MORE
ON
FUNCTIONS
DEFAULT
ARGUMENTS
IN
PYTHON
PYTHON
ALSO
PROVIDES
THE
ABILITY
TO
ASSIGN
A
DEFAULT
VALUE
TO
ANY
FUNCTION
PARAMETER
ALLOWING
FOR
THE
USE
OF
DEFAULT
ARGUMENTS
A
DEFAULT
ARGUMENT
IS
AN
ARGUMENT
THAT
CAN
BE
OPTIONALLY
PROVIDED
AS
SHOWN
HERE
DEF
AMOUNT
RATE
IN
THIS
CASE
THE
THIRD
ARGUMENT
IN
CALLS
TO
FUNCTION
IS
OPTIONAL
IF
OMITTED
PA
RAMETER
TERM
WILL
DEFAULT
TO
THE
VALUE
YEARS
AS
SHOWN
IF
ON
THE
OTHER
HAND
A
THIRD
ARGUMENT
IS
PROVIDED
THE
VALUE
PASSED
REPLACES
THE
DEFAULT
PARAMETER
VALUE
ALL
POSITIONAL
ARGUMENTS
MUST
COME
BEFORE
ANY
DEFAULT
ARGUMENTS
IN
A
FUNCTION
DEFINITION
VARIABLE
SCOPE
LOOKING
BACK
AT
THE
TEMPERATURE
CONVERSION
PROGRAM
IN
SECTION
WE
SEE
THAT
FUNCTIONS
DISPLAYFAHRENTOCELSIUS
AND
DISPLAYCELSIUSTOFAHREN
EACH
CONTAIN
VARIABLES
NAMED
TEMP
AND
WE
ASK
DO
THESE
IDENTIFIERS
REFER
TO
COMMON
ENTITIES
OR
DOES
EACH
FUNCTION
HAVE
ITS
OWN
DISTINCT
ENTITIES
THE
ANSWER
IS
BASED
ON
THE
CONCEPT
OF
IDENTIFIER
SCOPE
WHICH
WE
DISCUSS
NEXT
LOCAL
SCOPE
AND
LOCAL
VARIABLES
A
LOCAL
VARIABLE
IS
A
VARIABLE
THAT
IS
ONLY
ACCESSIBLE
FROM
WITHIN
A
GIVEN
FUNCTION
SUCH
VARIABLES
ARE
SAID
TO
HAVE
LOCAL
SCOPE
IN
PYTHON
ANY
VARIABLE
ASSIGNED
A
VALUE
IN
A
FUNCTION
BECOMES
A
LOCAL
VARI
ABLE
OF
THE
FUNCTION
CONSIDER
THE
EXAMPLE
IN
FIGURE
CHAPTER
FUNCTIONS
FIGURE
DEFINING
LOCAL
VARIABLES
BOTH
AND
CONTAIN
IDENTIFIER
N
FUNCTION
ASSIGNS
N
TO
WHILE
FUNCTION
ASSIGNS
N
TO
BOTH
FUNCTIONS
DISPLAY
THE
VALUE
OF
N
WHEN
CALLED
DISPLAYS
THE
VALUE
OF
N
BOTH
BEFORE
AND
AFTER
ITS
CALL
TO
IF
IDENTIFIER
N
REPRESENTS
THE
SAME
VARIABLE
THEN
SHOULDN
T
ITS
VALUE
CHANGE
TO
AFTER
THE
CALL
TO
HOWEVER
AS
SHOWN
BY
THE
OUTPUT
THE
VALUE
OF
N
REMAINS
THIS
IS
BECAUSE
THERE
ARE
TWO
DISTINCT
INSTANCES
OF
VARIABLE
N
EACH
LOCAL
TO
THE
FUNC
TION
ASSIGNED
IN
AND
INACCESSIBLE
FROM
THE
OTHER
NOW
CONSIDER
THE
EXAMPLE
IN
FIGURE
IN
THIS
CASE
THE
FUNCTIONS
ARE
THE
SAME
AS
ABOVE
EXCEPT
THAT
THE
ASSIGNMENT
TO
VARIABLE
N
IN
IS
COMMENTED
OUT
FIGURE
INACCESSIBILITY
OF
LOCAL
VARIABLES
IN
THIS
CASE
WE
GET
AN
ERROR
INDICATING
THAT
VARIABLE
N
IS
NOT
DEFINED
WITHIN
THIS
IS
BECAUSE
VARIABLE
N
DEFINED
IN
IS
INACCESSIBLE
FROM
IN
THIS
CASE
N
IS
EXPECTED
TO
BE
A
GLOBAL
VARIABLE
DISCUSSED
NEXT
THE
PERIOD
OF
TIME
THAT
A
VARIABLE
EXISTS
IS
CALLED
ITS
LIFETIME
LOCAL
VARIABLES
ARE
AUTOMATICALLY
CREATED
ALLOCATED
MEMORY
WHEN
A
FUNCTION
IS
CALLED
AND
DESTROYED
DEALLOCATED
WHEN
THE
FUNCTION
MORE
ON
FUNCTIONS
TERMINATES
THUS
THE
LIFETIME
OF
A
LOCAL
VARIABLE
IS
EQUAL
TO
THE
DURATION
OF
ITS
FUNCTION
EXECUTION
CONSEQUENTLY
THE
VALUES
OF
LOCAL
VARIABLES
ARE
NOT
RETAINED
FROM
ONE
FUNCTION
CALL
TO
THE
NEXT
THE
CONCEPT
OF
A
LOCAL
VARIABLE
IS
AN
IMPORTANT
ONE
IN
PROGRAMMING
IT
ALLOWS
VARIABLES
TO
BE
DEFINED
IN
A
FUNCTION
WITHOUT
REGARD
TO
THE
VARIABLE
NAMES
USED
IN
OTHER
FUNCTIONS
OF
THE
PROGRAM
IT
ALSO
ALLOWS
PREVIOUSLY
WRITTEN
FUNCTIONS
TO
BE
EASILY
INCORPORATED
INTO
A
PROGRAM
THE
USE
OF
GLOBAL
VARIABLES
ON
THE
OTHER
HAND
BRINGS
POTENTIAL
HAVOC
TO
PROGRAMS
DISCUSSED
NEXT
GLOBAL
VARIABLES
AND
GLOBAL
SCOPE
A
GLOBAL
VARIABLE
IS
A
VARIABLE
THAT
IS
DEFINED
OUTSIDE
OF
ANY
FUNCTION
DEFINITION
SUCH
VARIABLES
ARE
SAID
TO
HAVE
GLOBAL
SCOPE
THIS
IS
DEMONSTRATED
IN
FIGURE
FIGURE
ACCESS
TO
VALUE
OF
GLOBAL
VARIABLE
VARIABLE
MAX
IS
DEFINED
OUTSIDE
AND
AND
THEREFORE
GLOBAL
TO
EACH
AS
A
RESULT
IT
IS
DIRECTLY
ACCESSIBLE
BY
BOTH
FUNCTIONS
FOR
THIS
REASON
THE
USE
OF
GLOBAL
VARIABLES
IS
GENERALLY
CONSIDERED
TO
BE
BAD
PROGRAMMING
STYLE
ALTHOUGH
IT
PROVIDES
A
CONVENIENT
WAY
TO
SHARE
VALUES
AMONG
FUNCTIONS
ALL
FUNCTIONS
WITHIN
THE
SCOPE
OF
A
GLOBAL
VARIABLE
CAN
ACCESS
AND
ALTER
IT
THIS
MAY
INCLUDE
FUNCTIONS
THAT
HAVE
NO
NEED
TO
ACCESS
THE
VARIABLE
BUT
NONE
THE
LESS
MAY
UNINTENTION
ALLY
ALTER
IT
ANOTHER
REASON
THAT
THE
USE
OF
GLOBAL
VARIABLES
IS
BAD
PRACTICE
IS
RELATED
TO
CODE
REUSE
IF
A
FUNCTION
IS
TO
BE
REUSED
IN
ANOTHER
PROGRAM
THE
FUNCTION
WILL
NOT
WORK
PROPERLY
IF
IT
IS
RELIANT
ON
THE
EXISTENCE
OF
GLOBAL
VARIABLES
THAT
ARE
NONEXISTENT
IN
THE
NEW
PROGRAM
THUS
IT
IS
GOOD
CHAPTER
FUNCTIONS
PROGRAMMING
PRACTICE
TO
DESIGN
FUNCTIONS
SO
ALL
DATA
NEEDED
FOR
A
FUNCTION
OTHER
THAN
ITS
LOCAL
VARIABLES
ARE
EXPLICITLY
PASSED
AS
ARGUMENTS
AND
NOT
ACCESSED
THROUGH
GLOBAL
VARIABLES
LET
APPLY
IT
GPA
CALCULATION
PROGRAM
THE
FOLLOWING
PROGRAM
FIGURE
COMPUTES
A
SEMESTER
GPA
AND
NEW
CUMULATIVE
GPA
FOR
A
GIVEN
STUDENT
THIS
PROGRAM
UTILIZES
THE
FOLLOWING
PROGRAMMING
FEATURES
TUPLE
ASSIGNMENT
FIGURE
ILLUSTRATES
AN
EXAMPLE
EXECUTION
OF
THE
PROGRAM
FIGURE
EXECUTION
OF
GPA
CALCULATION
PROGRAM
FIGURE
GPA
CALCULATION
PROGRAM
CONTINUED
MORE
ON
FUNCTIONS
FIGURE
GPA
CALCULATION
PROGRAM
THE
PROGRAM
BEGINS
WITH
THE
DISPLAY
OF
THE
PROGRAM
GREETING
ON
LINE
LINES
GET
THE
NUM
BER
OF
EARNED
CREDITS
AND
CURRENT
CUMULATIVE
GPA
FROM
THE
USER
THESE
TWO
VARIABLES
ARE
BUNDLED
INTO
A
TUPLE
NAMED
ON
LINE
SINCE
THEY
ARE
ALWAYS
USED
TOGETHER
BUNDLING
THESE
VARIABLES
ALLOWS
THEM
TO
BE
PASSED
TO
FUNCTIONS
AS
ONE
PARAM
ETER
RATHER
THAN
AS
SEPARATE
PARAMETERS
FUNCTION
GETGRADES
IS
CALLED
ON
LINE
WHICH
GETS
THE
SEMESTER
GRADES
FROM
THE
USER
AND
ASSIGNS
IT
TO
VARIABLE
THE
VALUE
RETURNED
BY
FUNCTION
GETGRADES
IS
CHAPTER
FUNCTIONS
A
LIST
OF
SUBLISTS
IN
WHICH
EACH
SUBLIST
CONTAINS
THE
LETTER
GRADE
FOR
A
GIVEN
COURSE
AND
THE
ASSOCI
ATED
NUMBER
OF
CREDITS
A
B
A
C
ON
LINE
FUNCTION
CALCULATEGPA
IS
CALLED
WITH
ARGUMENTS
AND
THE
FUNCTION
RETURNS
A
TUPLE
CONTAINING
THE
SEMESTER
GPA
AND
NEW
CUMULATIVE
GPA
OF
THE
USER
A
TUPLE
ASSIGNMENT
IS
USED
TO
UNPACK
THE
TWO
VALUES
INTO
VARIABLES
AND
FINALLY
THESE
VALUES
ARE
DISPLAYED
ON
LINES
AND
FUNCTION
CALCULATEGPA
IS
DEFINED
IN
LINES
WITH
PARAMETERS
INFO
AND
A
GPA
IS
CALCULATED
AS
THE
TOTAL
QUALITY
POINTS
EARNED
FOR
A
GIVEN
SET
OF
COURSES
DIVIDED
BY
THE
TOTAL
NUMBER
OF
CREDITS
THE
COURSES
ARE
WORTH
THE
NUMBER
OF
QUAL
ITY
POINTS
FOR
A
GIVEN
COURSE
IS
DEFINED
AS
A
COURSE
GRADE
TIMES
THE
NUMBER
OF
CREDITS
THE
COURSE
IS
WORTH
THUS
ASSUMING
A
GRADE
OF
A
IS
WORTH
POINTS
B
WORTH
POINTS
AND
GRADES
OF
C
D
AND
F
WORTH
AND
POINTS
RESPECTIVELY
TO
CALCULATE
THE
SEMESTER
GPA
FOR
A
STUDENT
RECEIVING
A
IN
TWO
FOUR
CREDIT
COURSES
B
IN
TWO
THREE
CREDIT
COURSES
AND
A
C
IN
A
ONE
CREDIT
COURSE
WOULD
BE
A
A
B
B
C
WHERE
IS
THE
TOTAL
NUMBER
OF
CREDITS
OF
ALL
COURSES
SIMILARLY
IN
ORDER
TO
CALCULATE
A
NEW
CUMULATIVE
GPA
THE
TOTAL
QUALITY
POINTS
OF
THE
CURRENT
CUMULATIVE
GPA
PLUS
THE
TOTAL
QUALITY
POINTS
OF
THE
NEW
SEMESTER
GPA
IS
DIVIDED
BY
THE
TOTAL
NUMBER
OF
CREDITS
THE
STUDENT
HAS
EARNED
TO
DATE
THUS
TO
CALCULATE
A
NEW
CUMULATIVE
GPA
FOR
A
CURRENT
CU
MULATIVE
GPA
OF
EARNING
THIRTY
CREDITS
AND
A
NEW
SEMESTER
GPA
AS
GIVEN
ABOVE
EARNING
FIFTEEN
CREDITS
WOULD
BE
WITH
TOTAL
EARNED
CREDITS
THUS
IN
FUNCTION
CALCULATEGPA
LOCAL
VARIABLES
PTS
AND
ARE
INITIALIZED
TO
ZERO
THEIR
VALUES
FOR
THE
COURSES
PROVIDED
IN
PARAMETER
ARE
COMPUTED
IN
THE
FOR
LOOP
ON
LINES
THIS
LOOP
ALSO
CALCULATES
THE
SEMESTER
QUALITY
POINTS
AND
THE
NUMBER
OF
CREDITS
OF
THE
CURRENT
SEMESTER
ASSIGNED
TO
LOCAL
VARIABLES
AND
RESPECTIVELY
AT
LINES
AND
NOTE
THAT
IN
THE
CAL
CULATION
OF
THE
SEMESTER
QUALITY
POINTS
FUNCTION
CONVERTGRADE
IS
CALLED
TO
CONVERT
EACH
LETTER
GRADE
TO
ITS
CORRESPONDING
NUMERICAL
VALUE
FINALLY
AT
THE
END
OF
FUNCTION
CALCULATEGPA
LOCAL
VARIABLE
IS
ASSIGNED
TO
THE
TOTAL
SEMESTER
QUALITY
POINTS
DIVIDED
BY
THE
TOTAL
SEMESTER
CREDITS
SIMILARLY
LOCAL
VARIABLE
IS
ASSIGNED
TO
THE
TOTAL
QUALITY
POINTS
TO
DATE
DIVIDED
BY
THE
TOTAL
NUMBER
OF
CREDITS
EARNED
TO
DATE
FINALLY
ON
LINE
A
TUPLE
IS
RETURNED
CONTAINING
BOTH
OF
THESE
COMPUTED
VALUES
THE
REMAINING
FUNCTIONS
DEFINED
IN
THIS
PROGRAM
ARE
CONVERTGRADE
AND
GETGRADES
FUNCTION
CONVERTGRADE
IS
PASSED
A
LETTER
GRADE
AND
RETURNS
THE
CORRESPONDING
NUMERICAL
VALUE
SINCE
THE
ORDINAL
VALUE
VIA
THE
ORD
FUNCTION
OF
LETTERS
IN
PYTHON
ARE
SEQUENTIAL
INTEGERS
DETERMIN
ING
THE
DIFFERENCE
BETWEEN
THE
ORDINAL
VALUE
OF
A
AND
THE
ORDINAL
VALUE
OF
A
GIVEN
LETTER
GRADE
ALLOWS
CREDIT
CARD
CALCULATION
PROGRAM
THE
NUMERICAL
VALUE
OF
THE
LETTER
GRADE
TO
BE
DETERMINED
FOR
EXAMPLE
FOR
A
LETTER
GRADE
OF
A
THROUGH
D
ITS
NUMERICAL
VALUE
IS
DETERMINED
AND
RETURNED
AS
RETURN
ORD
A
ORD
A
RETURN
RETURN
ORD
B
ORD
A
RETURN
RETURN
ORD
C
ORD
A
RETURN
RETURN
ORD
D
ORD
A
RETURN
SINCE
THERE
IS
NO
LETTER
OF
GRADE
E
USED
A
GRADE
OF
F
HAS
TO
BE
HANDLED
SEPARATELY
FINALLY
FUNCTION
GETGRADES
RETURNS
A
LIST
OF
SUBLISTS
OF
GRADES
AND
CREDITS
ENTERED
BY
THE
USER
AS
MENTIONED
ABOVE
THUS
LOCAL
VARIABLE
IS
INITIALIZED
TO
AN
EMPTY
LIST
ON
LINE
THE
WHILE
LOOP
AT
LINE
ITERATES
UNTIL
BOOLEAN
VARIABLE
IS
FALSE
INITIAL
IZED
TO
TRUE
IN
LINE
THE
LOOP
CONTINUES
TO
ITERATE
AND
APPEND
ANOTHER
PAIR
OF
GRADE
CREDITS
TO
THE
LIST
UNTIL
THE
USER
HITS
THE
ENTER
KEY
WHEN
PROMPTED
FOR
A
COURSE
GRADE
LINE
SELF
TEST
QUESTIONS
A
FUNCTION
CALL
CAN
BE
MADE
ANYWHERE
WITHIN
A
PROGRAM
IN
WHICH
THE
RETURN
TYPE
OF
THE
FUNCTION
IS
APPROPRIATE
TRUE
FALSE
AN
EXPRESSION
MAY
CONTAIN
MORE
THAN
ONE
FUNCTION
CALL
TRUE
FALSE
FUNCTION
CALLS
MAY
CONTAIN
ARGUMENTS
THAT
ARE
FUNCTION
CALLS
TRUE
FALSE
ALL
VALUE
RETURNING
FUNCTIONS
MUST
CONTAIN
AT
LEAST
ONE
PARAMETER
TRUE
FALSE
EVERY
FUNCTION
MUST
HAVE
AT
LEAST
ONE
MUTABLE
PARAMETER
TRUE
FALSE
A
LOCAL
VARIABLE
IN
PYTHON
IS
A
VARIABLE
THAT
IS
A
DEFINED
INSIDE
OF
EVERY
FUNCTION
IN
A
GIVEN
PROGRAM
B
LOCAL
TO
A
GIVEN
PROGRAM
C
ONLY
ACCESSIBLE
FROM
WITHIN
THE
FUNCTION
IT
IS
DEFINED
A
GLOBAL
VARIABLE
IS
A
VARIABLE
THAT
IS
DEFINED
OUTSIDE
OF
ANY
FUNCTION
DEFINITION
TRUE
FALSE
THE
USE
OF
GLOBAL
VARIABLES
IS
A
GOOD
WAY
TO
ALLOW
DIFFERENT
FUNCTIONS
TO
ACCESS
AND
MODIFY
THE
SAME
VARIABLES
TRUE
FALSE
ANSWERS
TRUE
TRUE
TRUE
FALSE
FALSE
C
TRUE
FALSE
COMPUTATIONAL
PROBLEM
SOLVING
CREDIT
CARD
CALCULATION
PROGRAM
IN
THIS
SECTION
WE
DESIGN
IMPLEMENT
AND
TEST
A
PROGRAM
THAT
WILL
ALLOW
US
TO
DETERMINE
THE
LENGTH
OF
TIME
NEEDED
TO
PAY
OFF
A
CREDIT
CARD
BALANCE
AS
WELL
AS
THE
TOTAL
INTEREST
PAID
THE
PROBLEM
THE
PROBLEM
IS
TO
GENERATE
A
TABLE
SHOWING
THE
DECREASING
BALANCE
AND
ACCUMULATING
INTEREST
PAID
ON
A
CREDIT
CARD
ACCOUNT
FOR
A
GIVEN
CREDIT
CARD
BALANCE
INTEREST
RATE
AND
MONTHLY
PAYMENT
AS
SHOWN
IN
FIGURE
CHAPTER
FUNCTIONS
FIGURE
EXAMPLE
EXECUTION
OF
THE
CREDIT
CARD
CALCULATION
PROGRAM
PROBLEM
ANALYSIS
THE
FACTORS
THAT
DETERMINE
HOW
QUICKLY
A
LOAN
IS
PAID
OFF
ARE
THE
AMOUNT
OF
THE
LOAN
THE
INTEREST
RATE
CHARGED
AND
THE
MONTHLY
PAYMENTS
MADE
FOR
A
FIXED
RATE
HOME
MORTGAGE
THE
MONTHLY
PAYMENTS
ARE
PREDETERMINED
SO
THAT
THE
LOAN
IS
PAID
OFF
WITHIN
A
SPECIFIC
NUMBER
OF
YEARS
THEREFORE
THE
TOTAL
INTEREST
THAT
WILL
BE
PAID
ON
THE
LOAN
IS
MADE
EVIDENT
AT
THE
TIME
THE
LOAN
IS
SIGNED
FOR
A
CREDIT
CARD
THERE
IS
ONLY
A
MINIMUM
PAYMENT
REQUIRED
EACH
MONTH
IT
IS
NOT
ALWAYS
EX
PLICITLY
STATED
BY
THE
CREDIT
CARD
COMPANY
HOWEVER
HOW
LONG
IT
WOULD
TAKE
TO
PAY
OFF
THE
CARD
BY
MAKING
ONLY
THE
MINIMUM
PAYMENT
THE
MINIMUM
PAYMENT
FOR
A
CREDIT
CARD
IS
DEPENDENT
ON
THE
PARTICULAR
CREDIT
CARD
COMPANY
HOWEVER
IT
IS
USUALLY
AROUND
OF
THE
OUTSTANDING
LOAN
AMOUNT
EACH
MONTH
AND
NO
LESS
THAN
TWENTY
DOLLARS
THUS
CALCULATING
THIS
ALLOWS
US
TO
PROJECT
THE
AMOUNT
OF
TIME
THAT
IT
WOULD
TAKE
BEFORE
THE
ACCOUNT
BALANCE
BECOMES
ZERO
AS
WELL
AS
THE
TOTAL
INTEREST
PAID
PROGRAM
DESIGN
MEETING
THE
PROGRAM
REQUIREMENTS
NO
PARTICULAR
FORMAT
IS
SPECIFIED
FOR
HOW
THE
OUTPUT
IS
TO
BE
DISPLAYED
ALL
THAT
IS
REQUIRED
IS
THAT
THE
USER
BE
ABLE
TO
ENTER
THE
RELEVANT
INFORMATION
AND
THAT
THE
LENGTH
OF
TIME
TO
PAY
OFF
THE
LOAN
AND
THE
TOTAL
INTEREST
PAID
IS
DISPLAYED
THE
USER
WILL
ALSO
BE
GIVEN
THE
CHOICE
OF
ASSUMING
THE
MONTHLY
PAYMENT
TO
BE
THE
REQUIRED
MINIMUM
PAYMENT
OR
A
LARGER
SPECIFIED
AMOUNT
CREDIT
CARD
CALCULATION
PROGRAM
DATA
DESCRIPTION
ALL
THAT
NEEDS
TO
BE
REPRESENTED
IN
THIS
PROGRAM
ARE
NUMERICAL
VALUES
FOR
THE
LOAN
AMOUNT
THE
INTER
EST
RATE
AND
THE
MONTHLY
PAYMENT
MADE
THERE
IS
NO
NEED
TO
CREATE
A
DATA
STRUCTURE
AS
THE
TABLE
OF
PAYMENTS
CAN
BE
GENERATED
AS
IT
IS
DISPLAYED
ALGORITHMIC
APPROACH
THE
ONLY
ALGORITHM
NEEDED
FOR
THIS
PROBLEM
IS
THE
CALCULATION
OF
THE
REQUIRED
MINIMUM
PAYMENT
THE
MINIMUM
PAYMENT
IS
USUALLY
CALCULATED
AT
OR
OF
THE
OUTSTANDING
BALANCE
WITH
A
LOWER
LIMIT
OF
AROUND
THEREFORE
WE
WILL
ASSUME
A
WORST
CASE
SCENARIO
OF
A
MINIMUM
PAYMENT
CALCU
LATED
AT
WITH
A
MINIMUM
PAYMENT
OF
OVERALL
PROGRAM
STEPS
THE
OVERALL
STEPS
IN
THIS
PROGRAM
DESIGN
ARE
GIVEN
IN
FIGURE
FIGURE
OVERALL
STEPS
OF
THE
CREDIT
CARD
CALCULATION
PROGRAM
PROGRAM
IMPLEMENTATION
AND
TESTING
STAGE
DEVELOPING
THE
OVERALL
PROGRAM
STRUCTURE
WE
FIRST
DEVELOP
AND
TEST
THE
OVERALL
PROGRAM
STRUCTURE
GIVEN
IN
FIGURE
THE
PROGRAM
BEGINS
ON
LINE
WITH
A
CALL
TO
FUNCTION
DISPLAYWELCOME
NEXT
THE
CUR
RENT
CREDIT
CARD
BALANCE
AND
ANNUAL
INTEREST
RATE
APR
ARE
INPUT
FROM
THE
USER
LINES
EACH
READ
AS
AN
INTEGER
VALUE
SINCE
THE
MONTHLY
INTEREST
RATE
IS
WHAT
WILL
BE
USED
IN
THE
CALCULATIONS
THE
VALUE
IN
APR
IS
DIVIDED
BY
ON
LINE
THIS
CONVERTS
THE
VALUE
TO
A
MONTHLY
INTEREST
RATE
AS
WELL
AS
CONVERTING
IT
TO
DECIMAL
FORM
FOR
EXAMPLE
AS
THE
FINAL
VALUE
INPUT
FROM
THE
USER
IS
THE
MONTHLY
PAYMENTS
THAT
THEY
WISH
TO
HAVE
THE
PAYOFF
CALCULATED
WITH
THEY
HAVE
A
CHOICE
OF
EITHER
GOING
WITH
THE
MINIMUM
REQUIRED
MONTHLY
PAYMENT
ASSUMED
TO
BE
FOR
TESTING
PURPOSES
LINE
OR
A
SPECIFIED
MONTHLY
PAYMENT
LINE
THE
CREDIT
CARD
BALANCE
ANNUAL
PERCENTAGE
RATE
AND
THE
ASSUMED
MONTHLY
PAYMENTS
ARE
PASSED
TO
FUNC
TION
DISPLAYPAYMENTS
ON
LINE
TO
CALCULATE
AND
DISPLAY
THE
PAY
DOWN
OF
THE
BALANCE
AS
WELL
AS
THE
INTEREST
PAID
OVER
EACH
MONTH
OF
THE
PAYOFF
PERIOD
CHAPTER
FUNCTIONS
FIGURE
CREDIT
CARD
CALCULATION
PROGRAM
STAGE
FUNCTIONS
DISPLAYWELCOME
LINE
AND
DISPLAYPAYMENTS
LINE
CONSIST
ONLY
OF
TRACE
STATEMENTS
A
TRACE
STATEMENT
PRINTS
FOR
TESTING
PURPOSES
A
MESSAGE
INDICATING
THAT
A
CERTAIN
POINT
IN
THE
PROGRAM
HAS
BEEN
REACHED
TRACE
STATEMENTS
ARE
ALSO
USED
TO
DISPLAY
THE
VALUE
OF
CERTAIN
VARI
ABLES
ONCE
THIS
PART
OF
THE
PROGRAM
IS
WORKING
WE
CAN
FOCUS
ON
IMPLEMENTING
THE
FUNCTIONS
AND
FURTHER
DEVELOPING
THE
MAIN
PROGRAM
SECTION
STAGE
TESTING
WE
SHOW
SAMPLE
TEST
RUNS
OF
THIS
VERSION
OF
THE
PROGRAM
IN
FIGURE
FROM
THE
TEST
RESULTS
WE
SEE
THAT
THE
APPROPRIATE
VALUES
ARE
BEING
INPUT
AND
PASSED
TO
FUNC
TION
DISPLAYPAYMENTS
SO
IT
LOOKS
LIKE
THE
OVERALL
STRUCTURE
OF
THIS
STAGE
OF
THE
PROGRAM
IS
WORKING
CORRECTLY
STAGE
GENERATING
AN
UNFORMATTED
DISPLAY
OF
PAYMENTS
WE
NEXT
IMPLEMENT
FUNCTION
DISPLAYWELCOME
AND
DEVELOP
AN
INITIAL
IMPLEMENTATION
OF
FUNCTION
DISPLAYPAYMENTS
GIVEN
IN
FIGURE
WE
REMOVE
THE
TWO
PRINT
INSTRUCTIONS
THAT
WERE
INCLUDED
ONLY
FOR
TEST
PURPOSES
IN
STAGE
OF
THE
PROGRAM
PREVIOUSLY
ON
LINES
AND
CREDIT
CARD
CALCULATION
PROGRAM
FIGURE
OUTPUT
OF
FIRST
STAGE
TESTING
ALSO
THE
MINIMUM
REQUIRED
MONTHLY
PAYMENT
IS
COMPUTED
LINES
RATHER
THAN
BEING
SET
TO
FUNCTION
DISPLAYPAYMENTS
IS
WHERE
MOST
OF
THE
WORK
IS
DONE
IN
THE
PROGRAM
THEREFORE
WE
SHALL
DEVELOP
THIS
FUNCTION
IN
STAGES
AS
WELL
AT
THIS
POINT
WE
DEVELOP
THE
FUNCTION
TO
DISPLAY
FOR
EACH
MONTH
DURING
THE
LOAN
PAYOFF
THE
YEAR
THE
CURRENT
BALANCE
AND
THE
TOTAL
INTEREST
PAID
TO
DATE
WE
DELAY
ISSUES
OF
SCREEN
FORMATTING
FOR
THE
ALIGNMENT
OF
NUMBERS
AND
ONLY
INCLUDE
FORMATTING
FOR
ROUNDING
NUMERIC
VALUES
TO
TWO
DECIMAL
PLACES
THE
WHILE
LOOP
ON
LINE
ITERATES
WHILE
BALANCE
PASSED
AS
AN
ARGUMENT
TO
THE
FUNCTION
IS
GREATER
THAN
ZERO
THE
FUNCTION
WILL
KEEP
COUNT
OF
THE
NUMBER
OF
MONTHS
LINES
DISPLAYED
AS
WELL
AS
THE
TOTAL
INTEREST
PAID
VARIABLES
AND
ARE
USED
FOR
THIS
PUR
POSE
AND
ARE
THEREFORE
INITIALIZED
BEFORE
THE
LOOP
TO
LINES
ON
LINES
THE
INITIAL
IN
FORMATION
FOR
THE
CALCULATION
IS
DISPLAYED
WITHIN
THE
WHILE
LOOP
ON
LINE
THE
MONTHLY
INTEREST
PAID
IS
COMPUTED
AS
THE
CURRENT
BALANCE
OF
THAT
MONTH
DURING
THE
PAYOFF
PERIOD
BALANCE
TIMES
THE
MONTHLY
INTEREST
RATE
THE
TOTAL
INTEREST
PAID
IS
THEN
UPDATED
ON
LINE
ON
LINE
THE
NEW
BALANCE
IS
COMPUTED
AS
THE
CURRENT
BALANCE
PLUS
THE
INTEREST
FOR
THE
MONTH
MINUS
THE
MONTHLY
PAYMENT
THE
NEXT
STEP
IS
TO
DISPLAY
THESE
COMPUTED
VALUES
SINCE
TIME
IS
KEPT
TRACK
OF
IN
TERMS
OF
MONTHS
THE
CURRENT
YEAR
TO
BE
DISPLAYED
IS
COMPUTED
USING
INTEGER
DIVISION
LINE
ADDING
ONE
SO
THAT
THE
FIRST
YEAR
IS
DISPLAYED
AS
AND
NOT
THEN
ON
LINE
THE
LINE
REPRESENTING
THE
PAYMENT
FOR
THE
CURRENT
MONTH
IS
DISPLAYED
FORMATTING
IS
USED
SO
THAT
ALL
NUMERICAL
VALUES
ARE
DISPLAYED
WITH
TWO
DECIMAL
PLACES
FINALLY
VARIABLE
IS
INCREMENTED
BY
ONE
FOR
THE
NEXT
ITERATION
OF
THE
LOOP
STAGE
TESTING
WE
TEST
THIS
PROGRAM
ONCE
FOR
A
SPECIFIED
MONTHLY
PAYMENT
AMOUNT
AND
ONCE
FOR
THE
OPTION
OF
MINIMUM
MONTHLY
PAYMENTS
THE
RESULTS
ARE
GIVEN
IN
FIGURES
AND
CHAPTER
FUNCTIONS
FIGURE
CREDIT
CARD
CALCULATION
PROGRAM
STAGE
CREDIT
CARD
CALCULATION
PROGRAM
FIGURE
OUTPUT
OF
SECOND
STAGE
TESTING
USER
ENTERED
PAYMENT
FIGURE
OUTPUT
OF
SECOND
STAGE
TESTING
MINIMUM
PAYMENT
CHAPTER
FUNCTIONS
CLEARLY
THERE
IS
SOMETHING
WRONG
WITH
THIS
VERSION
OF
THE
PROGRAM
THE
VALUEERROR
GENERATED
IN
FIGURE
INDICATES
THAT
THE
FORMAT
SPECIFIER
IS
AN
UNKNOWN
FORMAT
CODE
FOR
A
STRING
TYPE
VALUE
REFERRING
TO
LINE
THUS
THIS
MUST
BE
REFERRING
TO
VARIABLE
BUT
THAT
SHOULD
BE
A
NUMERIC
VALUE
AND
NOT
A
STRING
VALUE
HOW
COULD
IT
HAVE
BECOME
A
STRING
TYPE
LET
CHECK
IF
THE
PROBLEM
ALSO
OCCURS
WHEN
SELECTING
THE
MINIMUM
PAYMENT
OPTION
FIGURE
IN
THIS
CASE
THE
PROGRAM
WORKS
SINCE
THE
PROBLEM
ONLY
OCCURRED
WHEN
THE
USER
ENTERED
THE
MONTHLY
PAYMENT
AS
OPPOSED
TO
THE
MINIMUM
PAYMENT
OPTION
WE
NEXT
TRY
TO
DETERMINE
WHAT
DIF
FERENCES
THERE
ARE
IN
THE
PROGRAM
RELATED
TO
THE
ASSIGNMENT
OF
VARIABLE
DETERMINE
MONTHLY
PAYMENT
RESPONSE
INPUT
USE
THE
MINIMUM
MONTHLY
PAYMENT
Y
N
IF
RESPONSE
IN
Y
Y
IF
BALANCE
ELSE
BALANCE
ELSE
INPUT
ENTER
MONTHLY
PAYMENT
WHEN
THE
USER
SELECTS
THE
MINIMUM
MONTHLY
PAYMENT
OPTION
VARIABLE
IS
SET
TO
INTEGER
VALUE
OR
OF
THE
CURRENT
BALANCE
IF
BALANCE
IS
GREATER
THAN
OTHERWISE
ITS
VALUE
IS
INPUT
FROM
THE
USER
THIS
VARIABLE
IS
NOT
REDEFINED
ANYWHERE
ELSE
IN
THE
PROGRAM
SINCE
THE
VARIABLE
IS
NOT
A
LOCAL
VARIABLE
WE
CAN
DISPLAY
ITS
VALUE
DIRECTLY
FROM
THE
PYTHON
SHELL
IT
IS
A
STRING
VALUE
WE
IMMEDIATELY
REALIZE
THAT
THE
INPUT
VALUE
FOR
VARIABLE
WAS
NOT
CONVERTED
TO
AN
INTEGER
TYPE
AND
WAS
THUS
LEFT
AS
A
STRING
TYPE
WE
FIX
THIS
PROBLEM
BY
RE
PLACING
THE
LINE
WITH
THE
FOLLOWING
INT
INPUT
ENTER
MONTHLY
PAYMENT
THIS
EXPLAINS
WHY
THE
PROBLEM
DID
NOT
APPEAR
IN
THE
TESTING
OF
STAGE
OF
THE
PROGRAM
IN
THAT
VER
SION
VARIABLE
WAS
NEVER
FORMATTED
AS
A
NUMERIC
VALUE
AND
ALSO
NEVER
USED
IN
A
NUMERICAL
CALCULATION
BOTH
OF
WHICH
WOULD
HAVE
GENERATED
AN
ERROR
AT
THIS
POINT
WE
EXECUTE
A
NUMBER
OF
TEST
CASES
FOR
VARIOUS
INITIAL
BALANCES
INTEREST
RATES
AND
MONTHLY
PAYMENTS
THE
RESULT
IS
GIVEN
IN
FIGURE
CHECKED
AGAINST
ONLINE
LOAN
PAYOFF
CALCULATOR
TOOLS
WE
NEXT
MOVE
ON
TO
THE
FINAL
STAGE
OF
PROGRAM
DEVELOPMENT
STAGE
FORMATTING
THE
DISPLAYED
OUTPUT
IN
THIS
FINAL
STAGE
OF
THE
PROGRAM
INPUT
ERROR
CHECKING
IS
ADDED
THE
PROGRAM
IS
ALSO
MODIFIED
TO
ALLOW
THE
USER
TO
CONTINUE
TO
ENTER
VARIOUS
MONTHLY
PAYMENTS
FOR
RECALCULATING
A
GIVEN
BALANCE
PAY
OFF
OUTPUT
FORMATTING
IS
ADDED
TO
MAKE
THE
DISPLAYED
INFORMATION
MORE
READABLE
FINALLY
WE
COR
RECT
THE
DISPLAY
OF
A
NEGATIVE
BALANCE
AT
THE
END
OF
THE
PAYOFF
SCHEDULE
AS
APPEARS
IN
FIGURE
THE
FINAL
VERSION
OF
THE
PROGRAM
IS
GIVEN
IN
FIGURE
CREDIT
CARD
CALCULATION
PROGRAM
FIGURE
TEST
CASES
FOR
STAGE
OF
THE
CREDIT
CARD
CALCULATION
PROGRAM
FIGURE
FINAL
STAGE
OF
THE
CREDIT
CARD
CALCULATION
PROGRAM
CONTINUED
CHAPTER
FUNCTIONS
FIGURE
FINAL
STAGE
OF
THE
CREDIT
CARD
CALCULATION
PROGRAM
CONTINUED
CREDIT
CARD
CALCULATION
PROGRAM
FIGURE
FINAL
STAGE
OF
THE
CREDIT
CARD
CALCULATION
PROGRAM
THE
FIRST
SET
OF
CHANGES
IN
THE
PROGRAM
PROVIDES
SOME
INPUT
ERROR
CHECKING
WE
WILL
ADDRESS
MEANS
OF
MORE
COMPLETE
ERROR
CHECKING
IN
CHAPTER
IN
LINES
TUPLES
AND
RESPONSE
ARE
DEFINED
THESE
ARE
USED
TO
CHECK
IF
INPUT
FROM
THE
USER
IS
AN
APPROPRIATE
YES
NO
RESPONSE
FOR
EXAMPLE
THE
WHILE
STATEMENT
ON
LINE
CHECKS
THAT
THE
INPUT
FROM
LINE
IS
EITHER
Y
Y
N
OR
N
WHILE
RESPONSE
NOT
IN
BY
CHECKING
IF
RESPONSE
IS
IN
THE
CONCATENATION
OF
TUPLES
AND
FOR
DETERMINING
THE
SPECIFIC
RESPONSE
THE
TUPLES
CAN
BE
USED
INDIVIDUALLY
LINE
IF
RESPONSE
IN
SIMILAR
INPUT
ERROR
CHECKING
IS
DONE
ON
LINE
THE
NEXT
SET
OF
CHANGES
ALLOWS
A
NUMBER
OF
PAYOFF
SCHEDULES
FOR
AN
ENTERED
BALANCE
TO
BE
CALCULATED
A
WHILE
STATEMENT
IS
ADDED
AT
LINE
WITH
ITS
CONDITION
BASED
ON
THE
VALUE
OF
BOOLEAN
VARIABLE
CALC
INITIALIZED
TO
TRUE
ON
LINE
TO
ACCOMMODATE
THE
RECALCULATION
OF
PAYOFF
SCHED
ULES
VARIABLES
AND
ARE
EACH
RESET
TO
IN
FUNCTION
DISPLAYPAYMENTS
LINES
OUTPUT
FORMATTING
IS
ADDED
IN
FUNCTION
DISPLAYPAYMENTS
ON
LINE
PAYOFF
SCHED
ULE
IS
DISPLAYED
RIGHT
JUSTIFIED
WITHIN
A
FIELD
OF
TWENTY
ON
LINES
THE
COLUMN
HEADINGS
ARE
DISPLAYED
WITH
APPROPRIATE
FIELD
WIDTHS
LINES
DISPLAY
THE
BALANCE
PAYMENT
NUMBER
AND
IN
TEREST
OF
EACH
MONTH
ALIGNED
UNDER
THE
COLUMN
HEADINGS
LINES
ENSURE
THAT
EACH
YEAR
IS
DIS
PLAYED
ONLY
ONCE
FINALLY
IN
LINES
VARIABLE
BALANCE
IS
SET
TO
ZERO
IF
IT
BECOMES
NEGATIVE
SO
THAT
NEGATIVE
BALANCES
ARE
NOT
DISPLAYED
CHAPTER
FUNCTIONS
STAGE
TESTING
WE
GIVE
EXAMPLE
OUTPUT
OF
THIS
VERSION
OF
THE
PROGRAM
FOR
BOTH
A
PAYOFF
USING
THE
REQUIRED
MINIMUM
MONTHLY
PAYMENT
AND
FOR
A
USER
ENTERED
MONTHLY
PAYMENT
IN
FIGURES
AND
FIGURE
DEPICTS
A
PORTION
OF
THE
OUTPUT
FOR
THE
SAKE
OF
SPACE
WE
RUN
THE
SAME
SET
OF
TEST
CASES
USED
IN
THE
TESTING
OF
THE
PREVIOUS
STAGE
VERSION
OF
THE
PROGRAM
GIVEN
IN
FIGURE
BASED
ON
THESE
RESULTS
WE
CAN
ASSUME
THAT
THE
PROGRAM
IS
FUNCTIONING
PROPERLY
FIGURE
OUTPUT
OF
THIRD
STAGE
TESTING
USER
ENTERED
PAYMENT
FIGURE
OUTPUT
OF
THIRD
STAGE
TESTING
MINIMUM
PAYMENT
FIGURE
TEST
CASES
FOR
STAGE
OF
THE
CREDIT
CARD
CALCULATION
PROGRAM
CHAPTER
FUNCTIONS
CHAPTER
SUMMAR
Y
GENERAL
TOPICS
PROGRAM
ROUTINES
VALUE
RETURNING
VS
NON
VALUE
RETURNING
FUNCTIONS
SIDE
EFFECTS
OF
FUNCTION
CALLS
PARAMETER
PASSING
ACTUAL
ARGUMENTS
VS
FORMAL
PARAMETERS
LOCAL
SCOPE
AND
LOCAL
VARIABLES
GLOBAL
SCOPE
AND
GLOBAL
VARIABLES
VARIABLE
LIFETIME
PYTHON
SPECIFIC
PROGRAMMING
TOPICS
DEFINING
FUNCTIONS
IN
PYTHON
BUILT
IN
FUNCTIONS
OF
PYTHON
VALUE
RETURNING
AND
NON
VALUE
RETURNING
FUNCTIONS
IN
PYTHON
TUPLE
ASSIGNMENT
IN
PYTHON
MUTABLE
VS
IMMUTABLE
ARGUMENTS
IN
PYTHON
LOCAL
VS
GLOBAL
VARIABLES
IN
PYTHON
CHAPTER
EXERCISES
SECTION
FUNCTION
AVG
RETURNS
THE
AVERAGE
OF
THREE
VALUES
AS
GIVEN
IN
THE
CHAPTER
WHICH
OF
THE
FOLLOWING
STATE
MENTS
EACH
MAKING
CALLS
TO
FUNCTION
AVG
ARE
VALID
ASSUME
THAT
ALL
VARIABLES
ARE
OF
NUMERIC
TYPE
A
RESULT
AVG
B
RESULT
AVG
AVG
C
RESULT
AVG
D
PRINT
AVG
E
AVG
WHICH
OF
THE
FOLLOWING
STATEMENTS
EACH
INVOLVING
CALLS
TO
FUNCTION
DISPLAYWELCOME
DISPLAYING
A
WELCOME
MESSAGE
ON
THE
SCREEN
AS
GIVEN
IN
THE
CHAPTER
ARE
VALID
A
PRINT
DISPLAYWELCOME
B
DISPLAYWELCOME
C
RESULT
DISPLAYWELCOME
D
DISPLAYWELCOME
SECTION
SUPPOSE
THERE
ARE
NINE
VARIABLES
EACH
HOLDING
AN
INTEGER
VALUE
AS
SHOWN
BELOW
FOR
WHICH
THE
AVERAGE
OF
THE
LARGEST
VALUE
IN
EACH
LINE
OF
VARIABLES
IS
TO
BE
COMPUTED
MAX2
AVERAGE
MAX2
USING
FUNCTIONS
AVG
AND
MAX
GIVE
AN
EXPRESSION
THAT
COMPUTES
THE
AVERAGE
AS
SHOWN
ABOVE
ASSUME
THAT
THERE
EXISTS
A
BOOLEAN
FUNCTION
NAMED
ISLEAPYEAR
THAT
DETERMINES
IF
A
GIVEN
YEAR
IS
A
LEAP
YEAR
OR
NOT
GIVE
AN
APPROPRIATE
IF
STATEMENT
THAT
PRINTS
YEAR
IS
A
LEAP
YEAR
IF
THE
YEAR
PASSED
IS
A
LEAP
YEAR
AND
YEAR
IS
NOT
A
LEAP
YEAR
OTHERWISE
FOR
VARIABLE
YEAR
PYTHON
PROGRAMMING
EXERCISES
FOR
THE
FOLLOWING
FUNCTION
DEFINITION
AND
ASSOCIATED
FUNCTION
CALLS
DEF
SOMEFUNCTION
MAIN
SOMEFUNCTION
A
LIST
ALL
THE
FORMAL
PARAMETERS
B
LIST
ALL
THE
ACTUAL
ARGUMENTS
FOR
THE
FOLLOWING
FUNCTION
INDICATE
WHETHER
EACH
FUNCTION
CALL
IS
PROPER
OR
NOT
IF
IMPROPER
EXPLAIN
WHY
DEF
GCD
FUNCTION
GCD
CALCULATES
THE
GREATEST
COMMON
DIVISOR
OF
AND
WITH
THE
REQUIREMENT
THAT
BE
LESS
THAN
OR
EQUAL
TO
AND
AND
ARE
INTEGER
VALUES
A
A
B
RESULT
GCD
A
B
B
A
B
RESULT
GCD
A
B
C
A
B
RESULT
GCD
B
A
D
A
B
C
RESULT
GCD
GCD
A
B
C
E
A
B
C
PRINT
GCD
A
GCD
C
B
PYTHON
PROGRAMMING
EXERCISES
WRITE
A
PYTHON
FUNCTION
NAMED
ZEROCHECK
THAT
IS
GIVEN
THREE
INTEGERS
AND
RETURNS
TRUE
IF
ANY
OF
THE
INTEGERS
IS
OTHERWISE
IT
RETURNS
FALSE
WRITE
A
PYTHON
FUNCTION
NAMED
THAT
IS
PASSED
THREE
INTEGERS
AND
RETURNS
TRUE
IF
THE
THREE
IN
TEGERS
ARE
IN
ORDER
FROM
SMALLEST
TO
LARGEST
OTHERWISE
IT
RETURNS
FALSE
WRITE
A
PYTHON
FUNCTION
NAMED
MODCOUNT
THAT
IS
GIVEN
A
POSITIVE
INTEGER
N
AND
A
SECOND
POSITIVE
INTE
GER
M
N
AND
RETURNS
HOW
MANY
NUMBERS
BETWEEN
AND
N
ARE
EVENLY
DIVISIBLE
BY
M
WRITE
A
PYTHON
FUNCTION
NAMED
HELLOWORLD
THAT
DISPLAYS
HELLO
WORLD
MY
NAME
IS
NAME
FOR
ANY
GIVEN
NAME
PASSED
TO
THE
ROUTINE
WRITE
A
PYTHON
FUNCTION
NAMED
PRINTASTERISKS
THAT
IS
PASSED
A
POSITIVE
INTEGER
VALUE
N
AND
PRINTS
OUT
A
LINE
OF
N
ASTERISKS
IF
N
IS
GREATER
THAN
THEN
ONLY
ASTERISKS
SHOULD
BE
DISPLAYED
CHAPTER
FUNCTIONS
WRITE
A
PYTHON
FUNCTION
NAMED
GETCONTINUE
THAT
DISPLAYS
TO
THE
USER
DO
YOU
WANT
TO
CONTINUE
Y
N
AND
CONTINUES
TO
PROMPT
THE
USER
UNTIL
EITHER
UPPERCASE
OR
LOWERCASE
Y
OR
N
IS
ENTERED
RETURNING
LOWERCASE
Y
OR
N
AS
THE
FUNCTION
VALUE
IMPLEMENT
A
PYTHON
FUNCTION
THAT
IS
PASSED
A
LIST
OF
NUMERIC
VALUES
AND
A
PARTICULAR
THRESHOLD
VALUE
AND
RETURNS
THE
LIST
WITH
ALL
VALUES
ABOVE
THE
GIVEN
THRESHOLD
VALUE
SET
TO
THE
LIST
SHOULD
BE
ALTERED
AS
A
SIDE
EFFECT
TO
THE
FUNCTION
CALL
AND
NOT
BY
FUNCTION
RETURN
VALUE
IMPLEMENT
THE
PYTHON
FUNCTION
DESCRIBED
IN
QUESTION
SO
THAT
THE
ALTERED
LIST
IS
RETURNED
AS
A
FUNCTION
VALUE
RATHER
THAN
BY
SIDE
EFFECT
PROGRAM
MODIFICATION
PROBLEMS
TEMPERATURE
CONVERSION
PROGRAM
ADDING
KELVIN
SCALE
MODIFY
THE
TEMPERATURE
CONVERSION
PROGRAM
IN
SECTION
SO
THAT
IT
ALLOWS
THE
USER
TO
SELECT
TEMPERA
TURE
CONVERSION
TO
INCLUDE
DEGREES
KELVIN
IN
ADDITION
TO
DEGREES
FAHRENHEIT
AND
DEGREES
CELSIUS
INCLUDE
INPUT
ERROR
CHECKING
FOR
INAPPROPRIATE
TEMPERATURE
VALUES
NOTE
REFER
TO
QUESTIONS
AND
FROM
CHAPTER
GPA
CALCULATION
PROGRAM
ACCOMMODATING
FIRST
SEMESTER
STUDENTS
MODIFY
THE
GPA
CALCULATION
PROGRAM
IN
SECTION
SO
THAT
IT
ASKS
THE
STUDENT
IF
THIS
IS
THEIR
FIRST
SEMESTER
IF
SO
THE
PROGRAM
SHOULD
ONLY
PROMPT
FOR
THEIR
CURRENT
SEMESTER
GRADES
AND
NOT
THEIR
CUMULA
TIVE
GPA
AND
TOTAL
EARNED
CREDITS
AND
DISPLAY
THEIR
SEMESTER
GPA
AND
CUMULATIVE
GPA
ACCORDINGLY
GPA
CALCULATION
PROGRAM
ALLOWING
FOR
PLUS
MINUS
GRADING
MODIFY
THE
GPA
CALCULATION
PROGRAM
IN
SECTION
SO
THAT
IT
IS
CAPABLE
OF
CALCULATING
A
GPA
FOR
PLUS
MINUS
LETTER
GRADES
A
B
AND
SO
FORTH
CREDIT
CARD
CALCULATION
PROGRAM
SUMMARIZED
OUTPUT
MODIFY
THE
CREDIT
CARD
CALCULATION
PROGRAM
IN
SECTION
SO
THAT
THE
USER
IS
GIVEN
THE
OPTION
OF
EITHER
DISPLAYING
THE
BALANCE
AND
INTEREST
PAID
MONTH
BY
MONTH
AS
CURRENTLY
WRITTEN
OR
TO
SIMPLY
HAVE
THE
TOTAL
NUMBER
OF
MONTHS
AND
THE
TOTAL
INTEREST
PAID
WITHOUT
THE
MONTH
BY
MONTH
DETAILS
CREDIT
CARD
CALCULATION
PROGRAM
ADJUSTABLE
MINIMUM
PAYMENT
MODIFY
THE
CREDIT
CARD
CALCULATION
PROGRAM
IN
SECTION
SO
THAT
THE
USER
CAN
ENTER
THE
PERCENTAGE
FROM
WHICH
THE
MINIMUM
MONTHLY
PAYMENT
IS
CALCULATED
ALSO
MODIFY
THE
PROGRAM
SO
THAT
THIS
MINIMUM
PAY
MENT
PERCENTAGE
IS
DISPLAYED
ALONG
WITH
THE
OTHER
CREDIT
CARD
RELATED
INFORMATION
CREDIT
CARD
CALCULATION
PROGRAM
RECALCULATION
WITH
NEW
BALANCE
MODIFY
THE
CREDIT
CARD
CALCULATION
PROGRAM
IN
SECTION
SO
THAT
THE
PROGRAM
WILL
ALLOW
THE
USER
TO
RECALCULATE
A
NEW
PAYOFF
SCHEDULE
FOR
A
NEW
ENTERED
BALANCE
PROGRAM
DEVELOPMENT
PROBLEMS
METRIC
CONVERSION
PROGRAM
DEVELOP
AND
TEST
A
PYTHON
PROGRAM
THAT
ALLOWS
THE
USER
TO
CONVERT
BETWEEN
THE
METRIC
MEASUREMENTS
OF
MILLIMETER
CENTIMETER
METER
KILOMETER
AND
INCHES
FEET
YARDS
AND
MILES
THE
PROGRAM
SHOULD
BE
WRIT
TEN
SO
THAT
ANY
ONE
MEASUREMENT
CAN
BE
CONVERTED
TO
THE
OTHER
GPA
PROJECTION
PROGRAM
DEVELOP
AND
TEST
A
PYTHON
PROGRAM
THAT
LETS
THE
USER
ENTER
THEIR
CURRENT
CUMULATIVE
GPA
THEIR
TOTAL
CRED
ITS
EARNED
AND
THE
NUMBER
OF
CREDITS
THEY
ARE
CURRENTLY
TAKING
THE
PROGRAM
SHOULD
THEN
REQUEST
FROM
THE
PROGRAM
DEVELOPMENT
PROBLEMS
USER
A
TARGET
CUMULATIVE
GPA
THAT
THEY
WISH
TO
ACHIEVE
AND
DISPLAY
THE
GPA
OF
THE
CURRENT
SEMESTER
NEEDED
TO
ACHIEVE
IT
TIC
TAC
TOE
TWO
PLAYER
PROGRAM
DEVELOP
AND
TEST
A
PYTHON
PROGRAM
THAT
LETS
TWO
PLAYERS
PLAY
TIC
TAC
TOE
LET
PLAYER
BE
X
AND
PLAYER
BE
O
DEVISE
A
METHOD
FOR
EACH
PLAYER
TO
INDICATE
WHERE
THEY
WISH
TO
PLACE
THEIR
SYMBOL
THE
PROGRAM
SHOULD
TERMINATE
IF
EITHER
THERE
IS
A
WINNER
OR
IF
THE
GAME
RESULTS
IN
A
TIE
THE
TIC
TAC
TOE
BOARD
SHOULD
BE
DISPLAYED
AFTER
EVERY
MOVE
AS
SHOWN
BELOW
TIC
TAC
TOE
AUTOMATED
PLAY
DEVELOP
AND
TEST
A
PYTHON
PROGRAM
THAT
PLAYS
TIC
TAC
TOE
AGAINST
THE
USER
DEVELOP
AN
APPROPRIATE
STRATEGY
OF
PLAY
AND
IMPLEMENT
IT
IN
YOUR
PROGRAM
THE
PROGRAM
SHOULD
BE
DESIGNED
TO
ALLOW
THE
USER
TO
CONTINUE
TO
PLAY
NEW
GAMES
UNTIL
THEY
DECIDE
TO
QUIT
THE
PROGRAM
SHOULD
DISPLAY
THE
TOTAL
NUMBER
OF
WINS
BY
THE
COMPUTER
VERSUS
THE
PLAYER
AT
THE
START
OF
EACH
NEW
GAME
IN
PROCEDURAL
PROGRAMMING
FUNCTIONS
ARE
THE
PRIMARY
BUILDING
BLOCKS
OF
PROGRAM
DESIGN
IN
OBJECT
ORIENTED
PROGRAMMING
OBJECTS
ARE
THE
FUNDAMENTAL
BUILDING
BLOCKS
IN
WHICH
FUNCTIONS
METHODS
ARE
A
COMPONENT
WE
FIRST
LOOK
AT
THE
USE
OF
INDIVIDUAL
SOFTWARE
OBJECTS
IN
THIS
CHAPTER
AND
IN
CHAPTER
LOOK
AT
THE
USE
OF
OBJECTS
IN
OBJECT
ORIENTED
DESIGN
OBJECTIVES
AFTER
READING
THIS
CHAPTER
AND
COMPLETING
THE
EXERCISES
YOU
WILL
BE
ABLE
TO
EXPLAIN
THE
CONCEPT
OF
AN
OBJECT
EXPLAIN
THE
DIFFERENCE
BETWEEN
A
REFERENCE
AND
DEREFERENCED
VALUE
DESCRIBE
THE
USE
OF
OBJECT
REFERENCES
EXPLAIN
THE
CONCEPT
OF
MEMORY
ALLOCATION
AND
DEALLOCATION
DESCRIBE
AUTOMATIC
GARBAGE
COLLECTION
EXPLAIN
THE
FUNDAMENTAL
FEATURES
OF
TURTLE
GRAPHICS
EFFECTIVELY
USE
OBJECTS
IN
PYTHON
DEVELOP
SIMPLE
TURTLE
GRAPHICS
PROGRAMS
IN
PYTHON
CHAPTER
CONTENTS
MOTIVATION
FUNDAMENTAL
CONCEPTS
SOFTWARE
OBJECTS
TURTLE
GRAPHICS
COMPUTATIONAL
PROBLEM
SOLVING
HORSE
RACE
SIMULATION
PROGRAM
SOFTWARE
OBJECTS
MOTIVATION
AN
OBJECT
IS
ONE
OF
THE
FIRST
CONCEPTS
THAT
A
BABY
UNDERSTANDS
DURING
ITS
DEVELOPMENT
THEY
UNDERSTAND
AN
OBJECT
AS
SOMETHING
THAT
HAS
A
SET
OF
ATTRIBUTES
BIG
RED
BALL
AND
A
RELATED
SET
OF
BEHAVIORS
IT
ROLLS
IT
BOUNCES
THE
IDEA
OF
INCORPORATING
OBJECTS
INTO
A
PROGRAMMING
LANGUAGE
CAME
OUT
OF
WORK
IN
COMPUTER
SIMULATION
GIVEN
THE
PREVALENCE
OF
OBJECTS
IN
THE
WORLD
IT
WAS
NATURAL
TO
PROVIDE
THE
CORRESPONDING
NOTION
OF
AN
OBJECT
WITHIN
A
SIMULATION
PROGRAM
IN
THE
EARLY
ALAN
KAY
AT
XEROX
PARC
PALO
ALTO
RESEARCH
CENTER
FULLY
EVOLVED
THE
NOTION
OF
OBJECT
ORIENTED
PROGRAMMING
WITH
THE
DEVELOPMENT
OF
A
PROGRAMMING
LANGUAGE
CALLED
SMALLTALK
THE
LANGUAGE
BECAME
THE
INSPIRATION
FOR
THE
DEVELOPMENT
OF
GRAPHICAL
USER
INTERFACES
GUIS
THE
PRIMARY
MEANS
OF
INTERACTING
WITH
COMPUTERS
TODAY
BEFORE
THAT
ALL
INTERACTION
WAS
THROUGH
TYPED
TEXT
IN
FACT
IT
WAS
A
VISIT
TO
XEROX
PARC
BY
STEVE
JOBS
OF
APPLE
COMPUTERS
THAT
LED
TO
THE
DEVELOPMENT
OF
THE
FIRST
COMMERCIALLY
SUCCESSFUL
GUI
BASED
COMPUTER
THE
APPLE
MACINTOSH
IN
FIGURE
LISTS
SOME
OF
THE
MOST
COMMONLY
USED
PROGRAMMING
LANGUAGES
AND
WHETHER
THEY
SUPPORT
PROCEDURAL
IMPERATIVE
PROGRAMMING
OBJECT
ORIENTED
PROGRAMMING
OR
BOTH
IN
THIS
CHAPTER
WE
LOOK
AT
THE
CREATION
AND
USE
OF
OBJECTS
IN
PYTHON
FIGURE
COMMON
PROGRAMMING
LANGUAGES
SUPPORTING
PROCEDURAL
AND
OR
OBJECT
ORIENTED
PROGRAMMING
FUNDAMENTAL
CONCEPTS
SOFTWARE
OBJECTS
OBJECTS
ARE
THE
FUNDAMENTAL
COMPONENT
OF
OBJECT
ORIENTED
PROGRAMMING
ALTHOUGH
WE
HAVE
NOT
YET
STATED
IT
ALL
VALUES
IN
PYTHON
ARE
REPRESENTED
AS
OBJECTS
THIS
INCLUDES
FOR
EXAMPLE
LISTS
AS
WELL
AS
NUMERIC
VALUES
WE
DISCUSS
OBJECT
ORIENTED
PROGRAMMING
IN
CHAPTER
IN
THIS
CHAPTER
WE
DISCUSS
WHAT
OBJECTS
ARE
AND
HOW
THEY
ARE
USED
CHAPTER
OBJECTS
AND
THEIR
USE
WHAT
IS
AN
OBJECT
THE
NOTION
OF
SOFTWARE
OBJECTS
DERIVES
FROM
OBJECTS
IN
THE
REAL
WORLD
ALL
OBJECTS
HAVE
CERTAIN
ATTRI
BUTES
AND
BEHAVIOR
THE
ATTRIBUTES
OF
A
CAR
FOR
EXAMPLE
INCLUDE
ITS
COLOR
NUMBER
OF
MILES
DRIVEN
CURRENT
LOCATION
AND
SO
ON
ITS
BEHAVIORS
INCLUDE
DRIVING
THE
CAR
CHANGING
THE
NUMBER
OF
MILES
DRIVEN
ATTRIBUTE
AND
PAINTING
THE
CAR
CHANGING
ITS
COLOR
ATTRIBUTE
FOR
EXAMPLE
SIMILARLY
AN
OBJECT
CONTAINS
A
SET
OF
ATTRIBUTES
STORED
IN
A
SET
OF
INSTANCE
VARIABLES
AND
A
SET
OF
FUNCTIONS
CALLED
METHODS
THAT
PROVIDE
ITS
BEHAVIOR
FOR
EXAMPLE
WHEN
SORTING
A
LIST
IN
PROCEDURAL
PROGRAMMING
THERE
ARE
TWO
DISTINCT
ENTITIES
A
SORT
FUNCTION
AND
A
LIST
TO
PASS
IT
AS
DEPICTED
IN
FIGURE
FIGURE
PROCEDURAL
PROGRAMMING
APPROACH
IN
OBJECT
ORIENTED
PROGRAMMING
THE
SORT
ROUTINE
WOULD
BE
PART
OF
THE
OBJECT
CONTAINING
THE
LIST
DEPICTED
IN
FIGURE
FIGURE
OBJECT
HERE
IS
AN
OBJECT
INSTANCE
OF
THE
PYTHON
BUILT
IN
LIST
TYPE
ALL
LIST
OBJECTS
CONTAIN
THE
SAME
SET
OF
METHODS
THUS
IS
SORTED
BY
SIMPLY
CALLING
THAT
OBJECT
SORT
METHOD
SORT
THE
PERIOD
IS
REFERRED
TO
AS
THE
DOT
OPERATOR
USED
TO
SELECT
A
MEMBER
OF
A
GIVEN
OBJECT
IN
THIS
CASE
THE
SORT
METHOD
NOTE
THAT
NO
ARGUMENTS
ARE
PASSED
TO
SORT
THAT
IS
BECAUSE
METHODS
OPER
ATE
ON
THE
DATA
OF
THE
OBJECT
THAT
THEY
ARE
PART
OF
THUS
THE
SORT
METHOD
DOES
NOT
NEED
TO
BE
TOLD
WHICH
LIST
TO
SORT
SUPPOSE
THERE
WERE
ANOTHER
LIST
OBJECT
CALLED
CONTAINING
A
LIST
OF
AUTOMO
BILE
PART
NUMBERS
SINCE
ALL
LIST
OBJECTS
BEHAVE
THE
SAME
WOULD
CONTAIN
THE
IDEN
TICAL
SET
OF
METHODS
AS
THE
DATA
THAT
THEY
WOULD
OPERATE
ON
HOWEVER
WOULD
BE
DIFFERENT
THUS
TWO
OBJECTS
OF
THE
SAME
TYPE
DIFFER
ONLY
IN
THE
PARTICULAR
SET
OF
VALUES
THAT
EACH
HOLDS
THIS
IS
DEPICTED
IN
FIGURE
SOFTWARE
OBJECTS
FIGURE
OBJECT
IN
ORDER
TO
SORT
THIS
LIST
THEREFORE
THE
SORT
METHOD
OF
OBJECT
IS
CALLED
SORT
THE
SORT
ROUTINE
IS
THE
SAME
AS
THE
SORT
ROUTINE
OF
OBJECT
IN
THIS
CASE
HOWEVER
THE
LIST
OF
PART
NUMBERS
IS
SORTED
INSTEAD
METHODS
APPEND
INSERT
REMOVE
COUNT
AND
REVERSE
ALSO
PROVIDE
ADDITIONAL
FUNCTIONALITY
FOR
LISTS
AS
WAS
DISCUSSED
IN
CHAPTER
WE
NEXT
DISCUSS
THE
WAY
THAT
OBJECTS
ARE
REPRESENTED
IN
PYTHON
OBJECT
REFERENCES
IN
THIS
SECTION
WE
LOOK
AT
HOW
OBJECTS
ARE
REPRESENTED
WHICH
ALL
VALUES
IN
PYTHON
ARE
AND
THE
EFFECT
IT
HAS
ON
THE
OPERATIONS
OF
ASSIGNMENT
AND
COMPARISON
AS
WELL
AS
PARAMETER
PASSING
REFERENCES
IN
PYTHON
IN
PYTHON
OBJECTS
ARE
REPRESENTED
AS
A
REFERENCE
TO
AN
OBJECT
IN
MEMORY
AS
SHOWN
IN
FIGURE
FIGURE
OBJECT
REFERENCE
A
REFERENCE
IS
A
VALUE
THAT
REFERENCES
OR
POINTS
TO
THE
LOCATION
OF
ANOTHER
ENTITY
THUS
WHEN
A
NEW
OBJECT
IN
PYTHON
IS
CREATED
TWO
ENTITIES
ARE
STORED
THE
OBJECT
AND
A
VARIABLE
HOLDING
A
REFERENCE
TO
THE
OBJECT
ALL
ACCESS
TO
THE
OBJECT
IS
THROUGH
THE
REFERENCE
VALUE
THIS
IS
DEPICTED
IN
FIGURE
CHAPTER
OBJECTS
AND
THEIR
USE
FIGURE
OBJECT
REFERENCES
TO
PYTHON
VALUES
THE
VALUE
THAT
A
REFERENCE
POINTS
TO
IS
CALLED
THE
DEREFERENCED
VALUE
THIS
IS
THE
VALUE
THAT
THE
VARI
ABLE
REPRESENTS
AS
SHOWN
IN
FIGURE
FIGURE
VARIABLES
DEREFERENCED
VALUES
WE
CAN
GET
THE
REFERENCE
VALUE
OF
A
VARIABLE
THAT
IS
THE
LOCATION
IN
WHICH
THE
CORRESPONDING
OBJECT
IS
STORED
BY
USE
OF
BUILT
IN
FUNCTION
ID
ID
N
ID
K
ID
WE
SEE
THAT
THE
DEREFERENCED
VALUES
OF
N
AND
K
IS
STORED
IN
THE
SAME
MEMORY
LOCATION
WHEREAS
THE
DEREFERENCED
VALUE
OF
IS
STORED
IN
A
DIFFERENT
LOCATION
EVEN
THOUGH
N
AND
K
ARE
EACH
SEPARATELY
ASSIGNED
LITERAL
VALUE
THEY
REFERENCE
THE
SAME
INSTANCE
OF
IN
MEMORY
WE
WOULD
EXPECT
THERE
TO
BE
SEPARATE
INSTANCES
OF
STORED
PYTHON
IS
USING
A
LITTLE
CLEVERNESS
HERE
SINCE
INTEGER
VALUES
ARE
IMMUTABLE
IT
ASSIGNED
BOTH
N
AND
K
TO
THE
SAME
INSTANCE
THIS
SAVES
MEMORY
AND
REDUCES
THE
NUMBER
OF
REFERENCE
LOCA
TIONS
THAT
PYTHON
MUST
MAINTAIN
FROM
THE
PROGRAMMER
PERSPECTIVE
HOWEVER
THEY
CAN
BE
TREATED
AS
IF
THEY
ARE
SEPARATE
INSTANCES
SOFTWARE
OBJECTS
THE
ASSIGNMENT
OF
REFERENCES
WITH
OUR
CURRENT
UNDERSTANDING
OF
REFERENCES
CONSIDER
WHAT
HAPPENS
WHEN
VARIABLE
N
IS
ASSIGNED
TO
VARIABLE
K
DEPICTED
IN
FIGURE
FIGURE
THE
ASSIGNMENT
OF
REFERENCES
WHEN
VARIABLE
N
IS
ASSIGNED
TO
K
IT
IS
THE
REFERENCE
VALUE
OF
K
THAT
IS
ASSIGNED
NOT
THE
DEREFERENCED
VALUE
AS
SHOWN
IN
FIGURE
THIS
CAN
BE
DETERMINED
BY
USE
OF
THE
BUILT
IN
ID
FUNCTION
AS
DEMONSTRATED
BELOW
ID
K
ID
K
ID
N
TRUE
ID
N
N
IS
K
TRUE
THUS
TO
VERIFY
THAT
TWO
VARIABLES
REFER
TO
THE
SAME
OBJECT
INSTANCE
WE
CAN
EITHER
COMPARE
THE
TWO
ID
VALUES
BY
USE
OF
THE
COMPARISON
OPERATOR
OR
MAKE
USE
OF
THE
PROVIDED
IS
OPERATOR
WHICH
PERFORMS
ID
K
ID
N
THUS
BOTH
N
AND
K
REFERENCE
THE
SAME
INSTANCE
OF
LITERAL
VALUE
THIS
OCCURRED
IN
THE
ABOVE
EXAMPLE
WHEN
N
AND
K
WERE
SEPARATELY
ASSIGNED
BECAUSE
INTEGERS
ARE
AN
IMMUTABLE
TYPE
AND
PYTHON
MAKES
ATTEMPTS
TO
SAVE
MEMORY
IN
THIS
CASE
HOWEVER
N
AND
K
REFERENCE
THE
SAME
INSTANCE
OF
BECAUSE
ASSIGNMENT
IN
PYTHON
ASSIGNS
REFERENCE
VALUES
WE
MUST
BE
AWARE
OF
THE
FACT
THEREFORE
THAT
WHEN
ASSIGNING
VARIABLES
REFERENCING
MUTABLE
VALUES
SUCH
AS
LISTS
BOTH
VARIABLES
REFERENCE
THE
SAME
LIST
INSTANCE
AS
WELL
WE
WILL
DISCUSS
THE
IMPLICATION
OF
THIS
NEXT
FINALLY
WE
LOOK
AT
WHAT
HAPPENS
WHEN
THE
VALUE
OF
ONE
OF
THE
TWO
VARIABLES
N
OR
K
IS
CHANGED
AS
DEPICTED
IN
FIGURE
FIGURE
REASSIGNMENT
OF
REFERENCE
VALUE
HERE
VARIABLE
K
IS
ASSIGNED
A
REFERENCE
VALUE
TO
A
NEW
MEMORY
LOCATION
HOLDING
THE
VALUE
THE
PREVIOUS
MEMORY
LOCATION
THAT
VARIABLE
K
REFERENCED
IS
RETAINED
SINCE
VARIABLE
N
IS
STILL
REFERENCING
IT
AS
A
RESULT
N
AND
K
POINT
TO
DIFFERENT
VALUES
AND
THEREFORE
ARE
NO
LONGER
EQUAL
CHAPTER
OBJECTS
AND
THEIR
USE
LET
TR
Y
IT
FROM
THE
PYTHON
SHELL
FIRST
ENTER
THE
FOLLOWING
AND
OBSERVE
THE
RESULTS
K
K
N
K
ID
K
ID
K
ID
N
ID
N
ID
K
ID
N
ID
K
ID
N
N
IS
K
N
IS
K
MEMORY
DEALLOCATION
AND
GARBAGE
COLLECTION
NEXT
WE
CONSIDER
WHAT
HAPPENS
WHEN
IN
ADDITION
TO
VARIABLE
K
BEING
REASSIGNED
VARIABLE
N
IS
REAS
SIGNED
AS
WELL
THE
RESULT
IS
DEPICTED
IN
FIGURE
FIGURE
INACCESSIBLE
VALUES
AFTER
N
IS
ASSIGNED
TO
THE
MEMORY
LOCATION
STORING
INTEGER
VALUE
IS
NO
LONGER
REFERENCED
THUS
IT
CAN
BE
DEALLOCATED
TO
DEALLOCATE
A
MEMORY
LOCATION
MEANS
TO
CHANGE
ITS
STATUS
FROM
CURRENTLY
IN
USE
TO
AVAILABLE
FOR
REUSE
IN
PYTHON
MEMORY
DEALLOCATION
IS
AUTOMATICALLY
PER
FORMED
BY
A
PROCESS
CALLED
GARBAGE
COLLECTION
GARBAGE
COLLECTION
IS
A
METHOD
OF
AUTOMATICALLY
DETERMINING
WHICH
LOCATIONS
IN
MEMORY
ARE
NO
LONGER
IN
USE
AND
DEALLOCATING
THEM
THE
GARBAGE
COLLECTION
PROCESS
IS
ONGOING
DURING
THE
EXECUTION
OF
A
PYTHON
PROGRAM
LIST
ASSIGNMENT
AND
COPYING
NOW
THAT
WE
UNDERSTAND
THE
USE
OF
REFERENCES
IN
PYTHON
WE
CAN
REVISIT
THE
DISCUSSION
ON
COPYING
LISTS
FROM
CHAPTER
WE
KNOW
THAT
WHEN
A
VARIABLE
IS
ASSIGNED
TO
ANOTHER
VARIABLE
REFERENCING
A
LIST
EACH
VARIABLE
ENDS
UP
REFERRING
TO
THE
SAME
INSTANCE
OF
THE
LIST
IN
MEMORY
DEPICTED
IN
FIGURE
SOFTWARE
OBJECTS
FIGURE
LIST
ASSIGNMENT
THUS
ANY
CHANGES
TO
THE
ELEMENTS
OF
RESULTS
IN
CHANGES
TO
WE
ALSO
LEARNED
THAT
A
COPY
OF
A
LIST
CAN
BE
MADE
AS
FOLLOWS
LIST
LIST
IS
REFERRED
TO
AS
A
LIST
CONSTRUCTOR
THE
RESULT
OF
THE
COPYING
IS
DEPICTED
IN
FIGURE
FIGURE
COPYING
OF
LISTS
BY
USE
OF
THE
LIST
CONSTRUCTOR
A
COPY
OF
THE
LIST
STRUCTURE
HAS
BEEN
MADE
THEREFORE
CHANGES
TO
THE
LIST
ELEMENTS
OF
WILL
NOT
RESULT
IN
CHANGES
IN
THE
SITUATION
IS
DIFFERENT
IF
A
LIST
CONTAINS
SUBLISTS
HOWEVER
LIST
THE
RESULTING
LIST
STRUCTURE
AFTER
THE
ASSIGNMENT
IS
DEPICTED
IN
FIGURE
FIGURE
SHALLOW
COPY
LIST
STRUCTURES
CHAPTER
OBJECTS
AND
THEIR
USE
WE
SEE
THAT
ALTHOUGH
COPIES
WERE
MADE
OF
THE
TOP
LEVEL
LIST
STRUCTURES
THE
ELEMENTS
WITHIN
EACH
LIST
WERE
NOT
COPIED
THIS
IS
REFERRED
TO
AS
A
SHALLOW
COPY
THUS
IF
A
TOP
LEVEL
ELEMENT
OF
ONE
LIST
IS
REAS
SIGNED
FOR
EXAMPLE
THE
OTHER
LIST
WOULD
REMAIN
UNCHANGED
AS
SHOWN
IN
FIGURE
FIGURE
TOP
LEVEL
REASSIGNMENT
OF
SHALLOW
COPIES
IF
HOWEVER
A
CHANGE
TO
ONE
OF
THE
SUBLISTS
IS
MADE
FOR
EXAMPLE
THE
COR
RESPONDING
CHANGE
WOULD
BE
MADE
IN
THE
OTHER
LIST
THAT
IS
WOULD
BE
EQUAL
TO
ALSO
AS
DEPICTED
IN
FIGURE
FIGURE
SUBLEVEL
REASSIGNMENT
OF
SHALLOW
COPIES
A
DEEP
COPY
OPERATION
OF
A
LIST
STRUCTURE
MAKES
A
COPY
OF
THE
COMPLETE
STRUCTURE
INCLUDING
SUB
LISTS
SINCE
IMMUTABLE
TYPES
CANNOT
BE
ALTERED
IMMUTABLE
PARTS
OF
THE
STRUCTURE
MAY
NOT
BE
COPIED
SUCH
AN
OPERATION
CAN
BE
PERFORMED
WITH
THE
DEEPCOPY
METHOD
OF
THE
COPY
MODULE
IMPORT
COPY
COPY
DEEPCOPY
THE
RESULT
OF
THIS
FORM
OF
COPYING
IS
GIVEN
IN
FIGURE
SOFTWARE
OBJECTS
FIGURE
DEEP
COPY
LIST
STRUCTURES
THUS
THE
REASSIGNMENT
OF
ANY
PART
TOP
LEVEL
OR
SUBLIST
OF
ONE
LIST
WILL
NOT
RESULT
IN
A
CHANGE
IN
THE
OTHER
IT
IS
UP
TO
YOU
AS
THE
PROGRAMMER
TO
DETERMINE
WHICH
FORM
OF
COPY
IS
NEEDED
FOR
LISTS
AND
OTHER
MUTABLE
TYPES
SUCH
AS
DICTIONARIES
AND
SETS
COVERED
IN
CHAPTER
LET
TR
Y
IT
FROM
THE
PYTHON
SHELL
ENTER
THE
FOLLOWING
AND
OBSERVE
THE
RESULTS
IMPORT
COPY
40
40
COPY
DEEPCOPY
ID
ID
ID
ID
40
40
LIST
COPY
DEEPCOPY
ID
ID
LIST1
LIST1
CHAPTER
OBJECTS
AND
THEIR
USE
SELF
TEST
QUESTIONS
ALL
OBJECTS
HAVE
A
SET
OF
AND
THE
OPERATOR
IS
USED
TO
SELECT
MEMBERS
OF
A
GIVEN
OBJECT
FUNCTIONS
THAT
ARE
PART
OF
AN
OBJECT
ARE
CALLED
THERE
ARE
TWO
VALUES
ASSOCIATED
WITH
EVERY
OBJECT
IN
PYTHON
THE
VALUE
AND
THE
VALUE
WHEN
MEMORY
LOCATIONS
ARE
DEALLOCATED
IT
MEANS
THAT
A
THE
MEMORY
LOCATIONS
ARE
MARKED
AS
UNUSABLE
FOR
THE
REST
OF
THE
PROGRAM
EXECUTION
B
THE
MEMORY
LOCATIONS
ARE
MARKED
AS
AVAILABLE
FOR
REUSE
DURING
THE
REMAINING
PROGRAM
EXECUTION
GARBAGE
COLLECTION
IS
THE
PROCESS
OF
AUTOMATICALLY
IDENTIFYING
WHICH
AREAS
OF
MEMORY
CAN
BE
DEALLOCATED
TRUE
FALSE
INDICATE
WHICH
OF
THE
FOLLOWING
IS
TRUE
A
WHEN
ONE
VARIABLE
IS
ASSIGNED
TO
ANOTHER
HOLDING
AN
INTEGER
VALUE
IF
THE
SECOND
VARIABLE
IS
ASSIGNED
A
NEW
VALUE
THE
VALUE
OF
THE
FIRST
VARIABLE
WILL
CHANGE
AS
WELL
B
WHEN
ONE
VARIABLE
IS
ASSIGNED
TO
ANOTHER
HOLDING
A
LIST
OF
INTEGER
VALUES
IF
THE
SECOND
VARIABLE
ASSIGNS
A
NEW
INTEGER
VALUE
TO
AN
ELEMENT
IN
THE
LIST
THE
LIST
THAT
THE
FIRST
VARIABLE
IS
ASSIGNED
TO
WILL
BE
CHANGED
AS
WELL
ANSWERS
ATTRIBUTES
BEHAVIOR
DOT
METHODS
REFERENCE
DEREFERENCED
B
TRUE
B
TURTLE
GRAPHICS
TURTLE
GRAPHICS
REFERS
TO
A
MEANS
OF
CONTROLLING
A
GRAPHICAL
ENTITY
A
TURTLE
IN
A
GRAPHICS
WINDOW
WITH
X
Y
COORDINATES
A
TURTLE
CAN
BE
TOLD
TO
DRAW
LINES
AS
IT
TRAVELS
THEREFORE
HAVING
THE
ABILITY
TO
CREATE
VARIOUS
GRAPHICAL
DESIGNS
TURTLE
GRAPHICS
WAS
FIRST
DEVELOPED
FOR
A
LANGUAGE
NAMED
LOGO
IN
THE
FOR
TEACHING
CHILDREN
HOW
TO
PROGRAM
REMNANTS
OF
LOGO
STILL
EXIST
TODAY
PYTHON
PROVIDES
THE
CAPABILITY
OF
TURTLE
GRAPHICS
IN
THE
TURTLE
PYTHON
STANDARD
LIBRARY
MOD
ULE
THERE
MAY
BE
MORE
THAN
ONE
TURTLE
ON
THE
SCREEN
AT
ONCE
EACH
TURTLE
IS
REPRESENTED
BY
A
DISTINCT
OBJECT
THUS
EACH
CAN
BE
INDIVIDUALLY
CONTROLLED
BY
THE
METHODS
AVAILABLE
FOR
TURTLE
OBJECTS
WE
INTRODUCE
TURTLE
GRAPHICS
HERE
FOR
TWO
REASONS
FIRST
TO
PROVIDE
A
MEANS
OF
BETTER
UNDERSTANDING
OBJECTS
IN
PROGRAMMING
AND
SECOND
TO
HAVE
SOME
FUN
CREATING
A
TURTLE
GRAPHICS
WINDOW
THE
FIRST
STEP
IN
THE
USE
OF
TURTLE
GRAPHICS
IS
THE
CREATION
OF
A
TURTLE
GRAPHICS
WINDOW
A
TURTLE
SCREEN
FIGURE
SHOWS
HOW
TO
CREATE
A
TURTLE
SCREEN
OF
A
CERTAIN
SIZE
WITH
AN
APPROPRIATE
TITLE
BAR
ASSUMING
THAT
THE
IMPORT
TURTLE
FORM
OF
IMPORT
IS
USED
EACH
OF
THE
TURTLE
GRAPHICS
METHODS
MUST
BE
CALLED
IN
THE
FORM
TURTLE
METHODNAME
THE
FIRST
METHOD
CALLED
SETUP
TURTLE
GRAPHICS
FIGURE
CREATING
A
TURTLE
GRAPHICS
WINDOW
CREATES
A
GRAPHICS
WINDOW
OF
THE
SPECIFIED
SIZE
IN
PIXELS
IN
THIS
CASE
A
WINDOW
OF
SIZE
PIXELS
WIDE
BY
PIXELS
HIGH
IS
CREATED
THE
CENTER
POINT
OF
THE
WINDOW
IS
AT
COORDINATE
THUS
X
COORDINATE
VALUES
TO
THE
RIGHT
OF
THE
CENTER
POINT
ARE
POSITIVE
VALUES
AND
THOSE
TO
THE
LEFT
ARE
NEGA
TIVE
VALUES
SIMILARLY
Y
COORDINATE
VALUES
ABOVE
THE
CENTER
POINT
ARE
POSITIVE
VALUES
AND
THOSE
BELOW
ARE
NEGATIVE
VALUES
THE
TOP
LEFT
TOP
RIGHT
BOTTOM
LEFT
AND
BOTTOM
LEFT
COORDINATES
FOR
A
WINDOW
OF
SIZE
ARE
AS
SHOWN
IN
FIGURE
A
TURTLE
GRAPHICS
WINDOW
IN
PYTHON
IS
ALSO
AN
OBJECT
THEREFORE
TO
SET
THE
TITLE
OF
THIS
WINDOW
WE
NEED
THE
REFERENCE
TO
THIS
OBJECT
THIS
IS
DONE
BY
CALL
TO
METHOD
SCREEN
FIGURE
PYTHON
TURTLE
GRAPHICS
WINDOW
OF
SIZE
THE
BACKGROUND
COLOR
OF
THE
TURTLE
WINDOW
CAN
BE
CHANGED
FROM
THE
DEFAULT
WHITE
BACKGROUND
COLOR
THIS
IS
DONE
USING
METHOD
BGCOLOR
WINDOW
TURTLE
SCREEN
WINDOW
BGCOLOR
BLUE
SEE
THE
DISCUSSION
ABOUT
PEN
COLOR
BELOW
FOR
DETAILS
ON
THE
SPECIFICATION
OF
COLOR
VALUES
CHAPTER
OBJECTS
AND
THEIR
USE
THE
DEFAULT
TURTLE
A
TURTLE
IS
AN
ENTITY
IN
A
TURTLE
GRAPHICS
WINDOW
THAT
CAN
BE
CONTROLLED
IN
VARIOUS
WAYS
LIKE
THE
GRAPHICS
WINDOW
TURTLES
ARE
OBJECTS
A
DEFAULT
TURTLE
IS
CREATED
WHEN
THE
SETUP
METHOD
IS
CALLED
THE
REFERENCE
TO
THIS
TURTLE
OBJECT
CAN
BE
OBTAINED
BY
TURTLE
GETTURTLE
A
CALL
TO
GETTURTLE
RETURNS
THE
REFERENCE
TO
THE
DEFAULT
TURTLE
AND
CAUSES
IT
TO
APPEAR
ON
THE
SCREEN
THE
INITIAL
POSITION
OF
ALL
TURTLES
IS
THE
CENTER
OF
THE
SCREEN
AT
COORDINATE
AS
SHOWN
IN
FIGURE
FIGURE
THE
DEFAULT
TURTLE
THE
DEFAULT
TURTLE
SHAPE
IS
AN
ARROWHEAD
THE
SIZE
OF
THE
TURTLE
SHAPE
WAS
ENLARGED
FROM
ITS
DEFAULT
SIZE
FOR
CLARITY
A
TURTLE
SHAPE
CAN
BE
SET
TO
BASIC
GEOMETRIC
SHAPES
OR
EVEN
MADE
FROM
A
PROVIDED
IMAGE
FILE
SHOWN
IN
SECTION
TURTLE
GRAPHICS
FUNDAMENTAL
TURTLE
ATTRIBUTES
AND
BEHAVIOR
RECALL
THAT
OBJECTS
HAVE
BOTH
ATTRIBUTES
AND
BEHAVIOR
TURTLE
OBJECTS
HAVE
THREE
FUNDAMENTAL
ATTRI
BUTES
POSITION
HEADING
ORIENTATION
AND
PEN
ATTRIBUTES
WE
DISCUSS
EACH
OF
THESE
ATTRIBUTES
NEXT
ABSOLUTE
POSITIONING
METHOD
POSITION
RETURNS
A
TURTLE
CURRENT
POSITION
FOR
NEWLY
CREATED
TURTLES
THIS
RETURNS
THE
TUPLE
A
TURTLE
POSITION
CAN
BE
CHANGED
USING
ABSOLUTE
POSITIONING
BY
MOVING
THE
TURTLE
TO
A
SPECIFIC
X
Y
COORDINATE
LOCATION
BY
USE
OF
METHOD
SETPOSITION
AN
EXAMPLE
OF
THIS
IS
GIVEN
IN
FIGURE
FIGURE
ABSOLUTE
POSITIONING
OF
TURTLE
THE
TURTLE
IS
MADE
INVISIBLE
BY
A
CALL
TO
METHOD
HIDETURTLE
SINCE
NEWLY
CREATED
TURTLES
ARE
POSITIONED
AT
COORDINATES
THE
SQUARE
WILL
BE
DISPLAYED
NEAR
THE
MIDDLE
OF
THE
TURTLE
WINDOW
TO
DRAW
THE
SQUARE
THE
TURTLE
IS
FIRST
POSITIONED
AT
COORDINATES
PIXELS
TO
THE
RIGHT
OF
ITS
CURRENT
POSITION
SINCE
THE
TURTLE
PEN
IS
DOWN
A
LINE
WILL
BE
DRAWN
FROM
LOCATION
TO
LOCA
TION
THE
TURTLE
IS
THEN
POSITIONED
AT
COORDINATES
WHICH
DRAWS
A
LINE
FROM
THE
BOTTOM
RIGHT
CORNER
TO
THE
TOP
RIGHT
CORNER
OF
THE
SQUARE
POSITIONING
THE
TURTLE
TO
COORDINATES
DRAWS
A
LINE
FROM
THE
TOP
RIGHT
CORNER
TO
THE
TOP
LEFT
CORNER
FINALLY
POSITIONING
THE
TURTLE
BACK
TO
CO
ORDINATES
DRAWS
THE
FINAL
LINE
FROM
THE
TOP
LEFT
CORNER
TO
THE
BOTTOM
LEFT
CORNER
TURTLE
HEADING
AND
RELATIVE
POSITIONING
A
TURTLE
POSITION
CAN
ALSO
BE
CHANGED
THROUGH
RELATIVE
POSITIONING
IN
THIS
CASE
THE
LOCATION
THAT
A
TURTLE
MOVES
TO
IS
DETERMINED
BY
ITS
SECOND
FUNDAMENTAL
ATTRIBUTE
ITS
HEADING
A
NEWLY
CREATED
TURTLE
HEADING
IS
TO
THE
RIGHT
AT
DEGREES
A
TURTLE
WITH
HEADING
DEGREES
MOVES
UP
WITH
A
HEADING
DEGREES
MOVES
LEFT
AND
WITH
A
HEADING
DEGREES
MOVES
DOWN
A
TURTLE
HEADING
CAN
BE
CHANGED
BY
TURNING
THE
TURTLE
A
GIVEN
NUMBER
OF
DEGREES
LEFT
LEFT
OR
RIGHT
RIGHT
THE
FORWARD
METHOD
MOVES
A
TURTLE
IN
THE
DIRECTION
THAT
IT
IS
CURRENTLY
HEADING
AN
EXAMPLE
OF
RELATIVE
POSITIONING
IS
GIVEN
IN
FIGURE
CHAPTER
OBJECTS
AND
THEIR
USE
FIGURE
RELATIVE
POSITIONING
OF
TURTLE
IN
THIS
EXAMPLE
THE
TURTLE
IS
CONTROLLED
USING
RELATIVE
POSITIONING
DRAWING
THE
SAME
SQUARE
AS
IN
FIGURE
ABOVE
SINCE
TURTLES
ARE
INITIALLY
POSITIONED
AT
COORDINATES
WITH
AN
INITIAL
HEAD
ING
OF
DEGREES
THE
FIRST
STEP
IS
TO
MOVE
THE
TURTLE
FORWARD
PIXELS
THAT
DRAWS
THE
BOTTOM
LINE
OF
THE
SQUARE
THE
TURTLE
IS
THEN
TURNED
LEFT
DEGREES
AND
AGAIN
MOVED
FORWARD
PIXELS
THIS
DRAWS
THE
LINE
OF
THE
RIGHT
SIDE
OF
THE
SQUARE
THESE
STEPS
CONTINUE
UNTIL
THE
TURTLE
ARRIVES
BACK
AT
THE
ORIGI
NAL
COORDINATES
COMPLETING
THE
SQUARE
METHODS
LEFT
AND
RIGHT
CHANGE
A
TURTLE
HEADING
RELATIVE
TO
ITS
CURRENT
HEADING
A
TURTLE
HEADING
CAN
ALSO
BE
SET
TO
A
SPECIFIC
HEADING
BY
USE
OF
METHOD
SETHEADING
SET
HEADING
IN
ADDITION
METHOD
HEADING
CAN
BE
USED
TO
DETERMINE
A
TURTLE
CURRENT
HEADING
PEN
ATTRIBUTES
THE
PEN
ATTRIBUTE
OF
A
TURTLE
OBJECT
IS
RELATED
TO
ITS
DRAWING
CAPABILITIES
THE
MOST
FUNDAMENTAL
OF
THESE
ATTRIBUTES
IS
WHETHER
THE
PEN
IS
CURRENTLY
UP
OR
DOWN
CONTROLLED
BY
METHODS
PENUP
AND
PEN
DOWN
WHEN
THE
PEN
ATTRIBUTE
VALUE
IS
UP
THE
TURTLE
CAN
BE
MOVED
TO
ANOTHER
LOCATION
WITHOUT
LINES
BEING
DRAWN
THIS
IS
ESPECIALLY
NEEDED
WHEN
DRAWING
GRAPHICAL
IMAGES
WITH
DISCONNECTED
SEGMENTS
EXAMPLE
USE
OF
THESE
METHODS
IS
GIVEN
IN
FIGURE
IN
THIS
EXAMPLE
THE
TURTLE
IS
HIDDEN
SO
THAT
ONLY
THE
NEEDED
LINES
APPEAR
SINCE
THE
INITIAL
LOCATION
OF
THE
TURTLE
IS
AT
COORDINATE
THE
PEN
IS
SET
TO
UP
SO
THAT
THE
POSITION
OF
THE
TURTLE
CAN
BE
SET
TO
WITHOUT
A
LINE
BEING
DRAWN
AS
IT
MOVES
THIS
PUTS
THE
TURTLE
AT
THE
BOTTOM
OF
THE
LEFT
SIDE
OF
THE
LETTER
THE
PEN
IS
THEN
SET
TO
DOWN
AND
THE
TURTLE
IS
MOVED
TO
COORDINATE
DRAWING
AS
IT
MOVES
THIS
THEREFORE
DRAWS
A
LINE
FROM
THE
BOTTOM
OF
THE
LEFT
SIDE
TO
THE
TOP
OF
THE
A
THE
TURTLE
IS
THEN
MOVED
WITH
ITS
PEN
STILL
DOWN
TO
THE
LOCATION
OF
THE
BOTTOM
OF
THE
RIGHT
SIDE
OF
THE
LETTER
COORDINATE
TO
CROSS
THE
A
THE
PEN
IS
AGAIN
SET
TO
UP
AND
THE
TURTLE
IS
MOVED
TO
THE
LOCATION
OF
THE
LEFT
END
OF
THE
CROSSING
LINE
COORDI
NATE
THE
PEN
IS
THEN
SET
TO
DOWN
AND
MOVED
TO
THE
END
OF
THE
CROSSING
LINE
AT
COORDINATE
TO
FINISH
THE
LETTER
TURTLE
GRAPHICS
FIGURE
EXAMPLE
USE
OF
METHODS
PENUP
AND
PENDOWN
THE
PEN
SIZE
OF
A
TURTLE
DETERMINES
THE
WIDTH
OF
THE
LINES
DRAWN
WHEN
THE
PEN
ATTRIBUTE
IS
DOWN
THE
PENSIZE
METHOD
IS
USED
TO
CONTROL
THIS
PENSIZE
THE
WIDTH
IS
GIVEN
IN
PIXELS
AND
IS
LIMITED
ONLY
BY
THE
SIZE
OF
THE
TURTLE
SCREEN
EXAMPLE
PEN
SIZES
ARE
DEPICTED
IN
FIGURE
FIGURE
EXAMPLE
TURTLE
PEN
SIZES
THE
PEN
COLOR
CAN
ALSO
BE
SELECTED
BY
USE
OF
THE
PENCOLOR
METHOD
PENCOLOR
BLUE
THE
NAME
OF
ANY
COMMON
COLOR
CAN
BE
USED
FOR
EXAMPLE
WHITE
RED
BLUE
GREEN
YELLOW
GRAY
AND
BLACK
COLORS
CAN
ALSO
BE
SPECIFIED
IN
RGB
RED
GREEN
BLUE
COMPONENT
VALUES
THESE
VALUES
CAN
BE
SPECIFIED
IN
THE
RANGE
IF
THE
COLOR
MODE
ATTRIBUTE
OF
THE
TURTLE
WINDOW
IS
SET
AS
GIVEN
BELOW
TURTLE
COLORMODE
PENCOLOR
VIOLET
THIS
PROVIDES
A
MEANS
FOR
A
FULL
SPECTRUM
OF
COLORS
TO
BE
DISPLAYED
CHAPTER
OBJECTS
AND
THEIR
USE
ADDITIONAL
TURTLE
ATTRIBUTES
IN
ADDITION
TO
THE
FUNDAMENTAL
TURTLE
ATTRIBUTES
ALREADY
DISCUSSED
WE
PROVIDE
DETAILS
ON
OTHER
ATTRI
BUTES
OF
A
TURTLE
THAT
MAY
BE
CONTROLLED
THIS
INCLUDES
WHETHER
THE
TURTLE
IS
VISIBLE
OR
NOT
THE
SIZE
BOTH
DEMONSTRATED
ABOVE
SHAPE
AND
FILL
COLOR
OF
THE
TURTLE
THE
TURTLE
SPEED
AND
THE
TILT
OF
THE
TURTLE
WE
WILL
DISCUSS
EACH
OF
THESE
ATTRIBUTES
NEXT
TURTLE
VISIBILITY
AS
WE
SAW
A
TURTLE
VISIBILITY
CAN
BE
CONTROLLED
BY
USE
OF
METHODS
HIDETURTLE
AND
SHOW
TURTLE
IN
WHICH
AN
INVISIBLE
TURTLE
CAN
STILL
DRAW
ON
THE
SCREEN
THERE
ARE
VARIOUS
REASONS
FOR
DOING
THIS
A
TURTLE
MAY
BE
MADE
INVISIBLE
WHILE
BEING
REPOSITIONED
ON
THE
SCREEN
IN
GAMING
A
TURTLE
MIGHT
BE
MADE
INVISIBLE
WHEN
IT
MEETS
ITS
DEMISE
OR
MAYBE
A
GIVEN
TURTLE
NEEDS
TO
BLINK
AS
WE
WILL
SEE
AT
THE
END
OF
THE
CHAPTER
TURTLE
SIZE
THE
SIZE
OF
A
TURTLE
SHAPE
CAN
BE
CONTROLLED
WITH
METHODS
RESIZEMODE
AND
TURTLESIZE
AS
SHOWN
IN
FIGURE
FIGURE
CHANGING
THE
SIZE
OF
A
TURTLE
THE
FIRST
INSTRUCTION
SETS
THE
RESIZE
ATTRIBUTE
OF
A
TURTLE
TO
USER
THIS
ALLOWS
THE
USER
PROGRAMMER
TO
CHANGE
THE
SIZE
OF
THE
TURTLE
BY
USE
OF
METHOD
TURTLESIZE
OTHERWISE
CALLS
TO
TURTLESIZE
WILL
HAVE
NO
EFFECT
THE
CALL
TO
METHOD
TURTLESIZE
IN
THE
FIGURE
IS
PASSED
TWO
PARAMETERS
THE
FIRST
IS
USED
TO
CHANGE
THE
WIDTH
OF
THE
SHAPE
PERPENDICULAR
TO
ITS
ORIENTATION
AND
THE
SECOND
CHANGES
ITS
LENGTH
PARALLEL
TO
ITS
ORIENTATION
EACH
VALUE
PROVIDES
A
FACTOR
BY
WHICH
THE
SIZE
IS
TO
BE
CHANGED
THUS
TURTLESIZE
STRETCHES
BOTH
THE
WIDTH
AND
LENGTH
OF
THE
CURRENT
TURTLE
SHAPE
BY
A
FACTOR
OF
A
THIRD
PARAMETER
CAN
ALSO
BE
ADDED
THAT
DETERMINES
THE
THICK
NESS
OF
THE
SHAPE
OUTLINE
TURTLE
GRAPHICS
THERE
ARE
TWO
OTHER
VALUES
THAT
METHOD
RESIZEMODE
MAY
BE
SET
TO
AN
ARGUMENT
VALUE
OF
AUTO
CAUSES
THE
SIZE
OF
THE
TURTLE
TO
CHANGE
WITH
CHANGES
IN
THE
PEN
SIZE
WHEREAS
A
VALUE
OF
NORESIZE
CAUSES
THE
TURTLE
SHAPE
TO
REMAIN
THE
SAME
SIZE
TURTLE
SHAPE
THERE
ARE
A
NUMBER
OF
WAYS
THAT
A
TURTLE
SHAPE
AND
FILL
COLOR
MAY
BE
DEFINED
TO
SOMETHING
OTHER
THAN
THE
DEFAULT
SHAPE
THE
ARROWHEAD
AND
FILL
COLOR
BLACK
FIRST
A
TURTLE
MAY
BE
ASSIGNED
ONE
OF
THE
FOLLOWING
PROVIDED
SHAPES
ARROW
TURTLE
CIRCLE
SQUARE
TRIANGLE
AND
CLASSIC
THE
DEFAULT
ARROWHEAD
SHAPE
AS
SHOWN
IN
FIGURE
FIGURE
AVAILABLE
TURTLE
SHAPES
THE
SHAPE
AND
FILL
COLORS
ARE
SET
BY
USE
OF
THE
SHAPE
AND
FILLCOLOR
METHODS
SHAPE
CIRCLE
FILLCOLOR
WHITE
NEW
SHAPES
MAY
BE
CREATED
AND
REGISTERED
WITH
ADDED
TO
THE
TURTLE
SCREEN
SHAPE
DICTIONARY
ONE
WAY
OF
CREATING
A
NEW
IS
SHAPE
BY
PROVIDING
A
SET
OF
COORDINATES
DENOTING
A
POLYGON
AS
SHOWN
IN
FIGURE
FIGURE
CREATING
A
NEW
POLYGON
TURTLE
SHAPE
CHAPTER
OBJECTS
AND
THEIR
USE
IN
THE
FIGURE
METHOD
IS
USED
TO
REGISTER
THE
NEW
TURTLE
SHAPE
WITH
THE
NAME
MYPOLYGON
THE
NEW
SHAPE
IS
PROVIDED
BY
THE
TUPLE
OF
COORDINATES
IN
THE
SECOND
ARGU
MENT
THESE
COORDINATES
DEFINE
THE
POLYGON
SHOWN
IN
THE
FIGURE
ONCE
THE
NEW
SHAPE
IS
DEFINED
A
TURTLE
CAN
BE
SET
TO
THAT
SHAPE
BY
CALLING
THE
SHAPE
METHOD
WITH
THE
DESIRED
SHAPE
NAME
THE
FILLCOLOR
METHOD
IS
THEN
CALLED
TO
MAKE
THE
FILL
COLOR
OF
THE
POLYGON
WHITE
WITH
THE
EDGES
REMAINING
BLACK
IT
IS
ALSO
POSSIBLE
TO
CREATE
TURTLE
SHAPES
COMPOSED
OF
VARIOUS
INDI
VIDUAL
POLYGONS
CALLED
COMPOUND
SHAPES
WE
REFER
THE
READER
TO
THE
OFFICIAL
ONLINE
PYTHON
DOCUMENTATION
OF
THE
TURTLE
MODULE
FOR
DETAILS
SEE
HTTP
DOCS
PYTHON
ORG
LIBRARY
TURTLE
HTML
MODULE
TURTLE
THE
CREATION
OF
THIS
POLYGON
MAY
NOT
SEEM
TOO
EXCITING
BUT
THE
ORIENTATION
OF
A
TURTLE
CAN
BE
CHANGED
IN
ADDITION
A
TURTLE
IS
ABLE
TO
STAMP
ITS
SHAPE
ON
THE
SCREEN
WHICH
REMAINS
THERE
EVEN
AFTER
THE
TURTLE
IS
REPOSITIONED
OR
RELOCATED
THAT
MEANS
THAT
WE
CAN
CREATE
ALL
SORTS
INTERESTING
GRAPHIC
PATTERNS
BY
APPROPRIATELY
REPOSITIONING
THE
TURTLE
AS
SHOWN
IN
FIGURE
FIGURE
CREATING
A
DESIGN
FROM
A
TURTLE
USING
A
POLYGON
SHAPE
ONLY
A
FEW
LINES
OF
CODE
ARE
NEEDED
TO
GENERATE
THIS
DESIGN
THE
FOR
LOOP
IN
THE
FIGURE
ITERATES
VARI
ABLE
ANGLE
OVER
THE
COMPLETE
RANGE
OF
DEGREES
TO
BY
INCREMENTS
OF
DEGREES
WITHIN
THE
LOOP
THE
TURTLE
HEADING
IS
SET
TO
THE
CURRENT
ANGLE
AND
THE
STAMP
METHOD
IS
CALLED
TO
STAMP
THE
POLYGON
SHAPE
AT
THE
TURTLE
CURRENT
POSITION
BY
VARYING
THE
SHAPE
OF
THE
POLYGON
AND
THE
ANGLES
THAT
THE
TURTLE
IS
SET
TO
A
WIDE
RANGE
OF
SUCH
DESIGNS
MAY
BE
PRODUCED
ANOTHER
WAY
THAT
A
TURTLE
SHAPE
CAN
BE
CREATED
IS
BY
USE
OF
AN
IMAGE
THE
IMAGE
FILE
USED
MUST
BE
A
GIF
FILE
WITH
FILE
EXTENSION
GIF
THE
NAME
OF
THE
FILE
IS
THEN
REGISTERED
AND
THE
SHAPE
OF
THE
TURTLE
SET
TO
THE
REGISTERED
NAME
GIF
SHAPE
GIF
THE
FINAL
PROGRAM
OF
THIS
CHAPTER
GIVES
AN
EXAMPLE
OF
THE
USE
OF
IMAGE
SHAPES
TURTLE
GRAPHICS
TURTLE
SPEED
AT
TIMES
YOU
MAY
WANT
TO
CONTROL
THE
SPEED
AT
WHICH
A
TURTLE
MOVES
A
TURTLE
SPEED
CAN
BE
SET
TO
A
RANGE
OF
SPEED
VALUES
FROM
TO
WITH
A
NORMAL
SPEED
BEING
AROUND
TO
SET
THE
SPEED
OF
THE
TURTLE
THE
SPEED
METHOD
IS
USED
SPEED
THE
FOLLOWING
SPEED
VALUES
CAN
BE
SET
USING
A
DESCRIPTIVE
RATHER
THAN
A
NUMERIC
VALUE
FAST
NORMAL
SLOW
SLOWEST
FASTEST
THUS
A
NORMAL
SPEED
CAN
ALSO
BE
SET
BY
SPEED
NORMAL
WHEN
USING
THE
TURTLE
FOR
LINE
DRAWING
ONLY
THE
TURTLE
WILL
MOVE
MORE
QUICKLY
IF
IT
IS
MADE
INVISIBLE
BY
USE
OF
THE
HIDETURTLE
METHOD
CREATING
MULTIPLE
TURTLES
SO
FAR
WE
HAVE
SEEN
EXAMPLES
IN
WHICH
THERE
IS
ONLY
ONE
TURTLE
OBJECT
THE
DEFAULT
TURTLE
CREATED
WITH
A
TURTLE
WINDOW
HOWEVER
IT
IS
POSSIBLE
TO
CREATE
AND
CONTROL
ANY
NUMBER
OF
TURTLE
OBJECTS
TO
CREATE
A
NEW
TURTLE
THE
TURTLE
METHOD
IS
USED
TURTLE
TURTLE
TURTLE
TURTLE
ETC
BY
STORING
TURTLE
OBJECTS
IN
A
LIST
ANY
NUMBER
OF
TURTLES
MAY
BE
MAINTAINED
TURTLES
TURTLES
APPEND
TURTLE
TURTLE
TURTLES
APPEND
TURTLE
TURTLE
ETC
AN
EXAMPLE
OF
USING
MULTIPLE
TURTLE
OBJECTS
IS
GIVEN
IN
THE
FOLLOWING
LET
APPLY
IT
SECTION
CHAPTER
OBJECTS
AND
THEIR
USE
LET
APPLY
IT
BOUNCING
BALLS
PROGRAM
FOLLOWING
IS
A
PROGRAM
FIGURE
THAT
DISPLAYS
ONE
OR
MORE
BOUNCING
BALLS
WITHIN
A
TURTLE
SCREEN
THIS
PROGRAM
UTILIZES
THE
FOLLOWING
PROGRAMMING
FEATURES
TURTLE
MODULE
TIME
MODULE
RANDOM
MODULE
EXAMPLE
EXECUTION
OF
THE
PROGRAM
IS
GIVEN
IN
FIGURE
FIGURE
EXECUTION
OF
BOUNCING
BALLS
PROGRAM
IN
ADDITION
TO
THE
TURTLE
GRAPHICS
MODULE
THIS
PROGRAM
MAKES
USE
OF
THE
TIME
AND
RANDOM
PYTHON
STANDARD
LIBRARY
MODULES
TO
ALLOW
CONTROL
OF
HOW
LONG
IN
SECONDS
THE
SIMULATION
IS
EXE
CUTED
AS
INDICATED
BY
THE
USER
AND
TO
GENERATE
THE
RANDOM
MOTION
OF
THE
BOUNCING
BALLS
THE
MAIN
SECTION
OF
THE
PROGRAM
BEGINS
ON
LINE
WITH
THE
PROGRAMMING
GREETING
ON
LINES
THE
SIZE
OF
THE
TURTLE
SCREEN
IN
PIXELS
IS
HARD
CODED
INTO
THE
PROGRAM
ASSIGNED
TO
VARIABLES
AND
SINCE
ALL
REFERENCES
TO
THE
SCREEN
SIZE
ARE
THROUGH
THESE
VARIABLES
THE
DESIRED
WINDOW
SIZE
CAN
BE
ALTERED
BY
SIMPLY
ALTERING
THESE
VARIABLES
TURTLE
GRAPHICS
FIGURE
BOUNCING
BALLS
PROGRAM
CONTINUED
ON
LINES
THE
TURTLE
SCREEN
IS
CREATED
AND
ITS
REFERENCE
VALUE
ASSIGNED
TO
VARIABLE
WINDOW
THE
TITLE
OF
THE
WINDOW
IS
ASSIGNED
THROUGH
A
CALL
TO
THE
TITLE
METHOD
FOLLOWING
THAT
THE
USER
IS
PROMPTED
TO
ENTER
THE
NUMBER
OF
SECONDS
FOR
THE
SIMULATION
AS
WELL
AS
THE
NUMBER
OF
SIMULTANEOUSLY
BOUNCING
BALLS
CHAPTER
OBJECTS
AND
THEIR
USE
FIGURE
BOUNCING
BALLS
PROGRAM
FUNCTION
CREATEBALLS
IS
CALLED
ON
LINE
TO
CREATE
AND
RETURN
A
LIST
OF
TURTLE
OBJECTS
WITH
A
BALL
SHAPE
THE
FUNCTION
DEFINITION
LINES
INITIALIZES
AN
EMPTY
LIST
NAMED
BALLS
AND
CREATES
THE
REQUESTED
NUMBER
OF
BALLS
ONE
BY
ONE
EACH
APPENDED
TO
THE
LIST
BY
USE
OF
THE
FOR
LOOP
AT
LINE
EACH
BALL
IS
CREATED
WITH
SHAPE
CIRCLE
FILL
COLOR
OF
BLACK
SPEED
OF
FASTEST
SPEED
AND
WITH
PEN
ATTRIBUTE
UP
IN
ADDITION
THE
INITIAL
HEADING
OF
EACH
TURTLE
IS
SET
TO
A
RANDOM
ANGLE
BETWEEN
AND
LINE
HORSE
RACE
SIMULATION
PROGRAM
BACK
IN
THE
MAIN
PROGRAM
SECTION
AT
LINE
THE
CURRENT
TIME
IN
SECONDS
IS
OBTAINED
FROM
A
CALL
TO
METHOD
TIME
OF
THE
TIME
MODULE
TIME
TIME
THE
CURRENT
TIME
VALUE
IS
STORED
IN
VARIABLE
THE
CURRENT
TIME
IS
THE
NUMBER
OF
SECONDS
SINCE
THE
EPOCH
WHICH
IS
JANUARY
THIS
WILL
BE
DISCUSSED
FURTHER
IN
THE
HORSE
RACING
PROGRAM
THAT
FOLLOWS
THE
WHILE
LOOP
BEGINNING
ON
LINE
BEGINS
THE
SIMULATION
THE
LOOP
ITERATES
AS
LONG
AS
BOOLEAN
VARI
ABLE
TERMINATE
IS
FALSE
INITIALIZED
TO
FALSE
ON
LINE
THE
FOR
LOOP
AT
LINE
MOVES
EACH
OF
THE
SPECIFIED
NUMBER
OF
BALLS
A
SMALL
DISTANCE
UNTIL
REACHING
ONE
OF
THE
FOUR
EDGES
OF
THE
WINDOW
LEFT
RIGHT
TOP
OR
BOTTOM
EDGE
BOOLEAN
FUNCTIONS
ATLEFTEDGE
ATRIGHTEDGE
ATTOPEDGE
AND
ATBOTTOMEDGE
ARE
USED
TO
DETERMINE
WHEN
A
BALL
IS
AT
AN
EDGE
DEFINED
IN
LINES
FUNC
TION
BOUNCEBALL
IS
CALLED
TO
BOUNCE
THE
BALL
IN
THE
OPPOSITE
DIRECTION
IT
IS
HEADING
AND
RETURNS
THE
NEW
HEADING
OF
THE
BALL
PASSED
AS
THE
ARGUMENT
TO
THAT
BALL
SETHEADING
METHOD
FINALLY
ON
LINE
A
CHECK
IS
MADE
TO
DETERMINE
WHETHER
THE
USER
REQUESTED
SIMULATION
TIME
HAS
BEEN
EX
CEEDED
IF
SO
BOOLEAN
VARIABLE
TERMINATE
IS
SET
TO
TRUE
AND
THE
PROGRAM
TERMINATES
BECAUSE
OF
THE
CALL
TO
EXITONCLICK
ON
LINE
THE
PROGRAM
WILL
PROPERLY
SHUT
DOWN
WHEN
THE
CLOSE
BUTTON
OF
THE
TURTLE
WINDOW
IS
CLICKED
SELF
TEST
QUESTIONS
A
TURTLE
SCREEN
IS
AN
PIXEL
WIDE
BY
PIXEL
HIGH
GRAPHICS
WINDOW
TRUE
FALSE
THE
THREE
MAIN
ATTRIBUTES
OF
A
TURTLE
OBJECT
ARE
AND
A
TURTLE
CAN
BE
MOVED
USING
EITHER
OR
POSITIONING
A
TURTLE
CAN
ONLY
DRAW
LINES
WHEN
IT
IS
NOT
HIDDEN
TRUE
FALSE
A
TURTLE
SHAPE
IS
LIMITED
TO
AN
ARROW
TURTLE
CIRCLE
SQUARE
TRIANGLE
OR
CLASSIC
DEFAULT
SHAPE
TRUE
FALSE
WHAT
ATTRIBUTE
OF
A
TURTLE
DETERMINES
THE
SIZE
OF
THE
LINES
IT
DRAW
A
PEN
SIZE
B
TURTLE
SIZE
A
TURTLE
CAN
DRAW
IN
ONE
OF
SEVEN
COLORS
TRUE
FALSE
A
TURTLE
CAN
LEAVE
AN
IMPRINT
OF
ITS
SHAPE
ON
THE
SCREEN
BY
USE
OF
THE
METHOD
IN
ORDER
TO
CREATE
A
NEW
TURTLE
OBJECT
THE
METHOD
IS
CALLED
ANSWERS
FALSE
POSITION
HEADING
PEN
ABSOLUTE
RELATIVE
FALSE
FALSE
A
FALSE
STAMP
TURTLE
COMPUTATIONAL
PROBLEM
SOLVING
HORSE
RACE
SIMULATION
PROGRAM
IN
THIS
SECTION
WE
DESIGN
IMPLEMENT
AND
TEST
A
PROGRAM
THAT
SIMULATES
A
HORSE
RACE
CHAPTER
OBJECTS
AND
THEIR
USE
THE
PROBLEM
THE
PROBLEM
IS
TO
CREATE
A
VISUALIZATION
OF
A
HORSE
RACE
IN
WHICH
HORSES
ARE
MOVED
AHEAD
A
RANDOM
DISTANCE
AT
FIXED
INTERVALS
UNTIL
THERE
IS
A
WINNER
AS
SHOWN
IN
FIGURE
FIGURE
EXAMPLE
HORSE
RACE
SIMULATION
PROBLEM
ANALYSIS
THE
PROGRAM
NEEDS
A
SOURCE
OF
RANDOM
NUMBERS
FOR
ADVANCING
THE
HORSES
A
RANDOM
DISTANCE
IN
THE
RACE
WE
CAN
USE
THE
RANDOM
NUMBER
GENERATOR
OF
THE
PYTHON
STANDARD
LIBRARY
MODULE
RANDOM
THAT
WE
USED
IN
CHAPTER
IN
THE
COIN
CHANGE
EXERCISE
EXAMPLE
THE
REMAINING
PART
OF
THE
PROBLEM
IS
HORSE
RACE
SIMULATION
PROGRAM
IN
THE
CREATION
OF
APPROPRIATE
GRAPHICS
FOR
PRODUCING
A
VISUALIZATION
OF
A
HORSE
RACE
WE
SHALL
MAKE
USE
OF
THE
TURTLE
GRAPHICS
MODULE
FROM
THE
PYTHON
STANDARD
LIBRARY
TO
DO
THIS
PROGRAM
DESIGN
MEETING
THE
PROGRAM
REQUIREMENTS
THERE
ARE
NO
SPECIFIC
REQUIREMENTS
FOR
THIS
PROBLEM
OTHER
THAN
TO
CREATE
AN
APPROPRIATE
SIMULATION
OF
A
HORSE
RACE
THEREFORE
THE
REQUIREMENT
IS
ESSENTIALLY
THE
GENERATION
OF
A
HORSE
RACE
IN
WHICH
THE
GRAPHICS
LOOK
SUFFICIENTLY
COMPELLING
AND
EACH
HORSE
HAS
AN
EQUAL
CHANCE
OF
WINNING
A
GIVEN
RACE
SINCE
A
SPECIFIC
NUMBER
OF
HORSES
WAS
NOT
SPECIFIED
WE
WILL
DESIGN
THE
PROGRAM
FOR
TEN
HORSES
IN
EACH
RACE
DATA
DESCRIPTION
THE
ESSENTIAL
INFORMATION
FOR
THIS
PROGRAM
IS
THE
CURRENT
LOCATION
OF
EACH
OF
THE
TEN
HORSES
IN
A
GIVEN
RACE
EACH
TURTLE
IS
AN
OBJECT
WHOSE
ATTRIBUTES
INCLUDE
ITS
SHAPE
AND
ITS
COORDINATE
POSITION
ON
THE
TURTLE
SCREEN
THEREFORE
WE
WILL
MAINTAIN
A
LIST
OF
TEN
TURTLE
OBJECTS
WITH
THE
SHAPE
ATTRIBUTE
OF
A
HORSE
IMAGE
FOR
THIS
PURPOSE
THUS
SUITABLE
HORSE
IMAGES
MUST
BE
FOUND
OR
CREATED
FOR
THIS
PURPOSE
ALGORITHMIC
APPROACH
THERE
IS
NO
ALGORITHM
PER
SE
NEEDED
IN
THIS
PROGRAM
OTHER
THAN
TO
ADVANCE
EACH
HORSE
A
RANDOM
DISTANCE
AT
FIXED
TIME
INTERVALS
UNTIL
ONE
OF
THE
HORSES
REACHES
A
CERTAIN
POINT
ON
THE
TURTLE
SCREEN
THE
FINISH
LINE
OVERALL
PROGRAM
STEPS
THE
OVERALL
STEPS
IN
THIS
PROGRAM
DESIGN
ARE
GIVEN
IN
FIGURE
FIGURE
OVERALL
STEPS
OF
THE
HORSE
RACE
SIMULATION
PROGRAM
PROGRAM
IMPLEMENTATION
AND
TESTING
STAGE
CREATING
AN
INITIAL
TURTLE
SCREEN
LAYOUT
WE
FIRST
DEVELOP
AND
TEST
AN
INITIAL
PROGRAM
THAT
LAYS
OUT
THE
POSITIONS
OF
THE
STARTING
HORSES
ON
THE
TURTLE
GRAPHICS
SCREEN
AS
SHOWN
IN
FIGURE
FIGURE
PROVIDES
THIS
FIRST
STAGE
OF
THE
PROGRAM
CHAPTER
OBJECTS
AND
THEIR
USE
FIGURE
OUTPUT
OF
STAGE
OF
THE
HORSE
RACE
SIMULATION
PROGRAM
AT
LINE
THE
TURTLE
MODULE
IS
IMPORTED
SINCE
THE
IMPORT
FORM
OF
IMPORT
IS
USED
EACH
CALL
TO
A
METHOD
OF
THIS
MODULE
MUST
BE
PREFIXED
WITH
THE
MODULE
NAME
FOR
EXAMPLE
TURTLE
SETUP
ON
LINE
WHICH
SETS
THE
TURTLE
SCREEN
SIZE
TO
A
WIDTH
OF
AND
A
HEIGHT
OF
PIXELS
THE
INTENT
OF
THIS
VERSION
OF
THE
PROGRAM
IS
TO
ENSURE
THAT
THE
TURTLE
SCREEN
IS
APPROPRIATELY
SIZED
AND
THAT
THE
INITIAL
LAYOUT
OF
HORSE
LOCATIONS
IS
ACHIEVED
THEREFORE
ONLY
THE
DEFAULT
TURTLE
SHAPE
IS
USED
AT
THIS
POINT
IN
THE
NEXT
VERSION
WE
WILL
FOCUS
ON
GENERATING
A
SET
OF
HORSE
IMAGES
ON
THE
SCREEN
THUS
ON
LINE
THE
TURTLE
SCREEN
OBJECT
IS
RETRIEVED
BY
THE
CALL
TO
TURTLE
SREEN
AND
ITS
REFERENCE
ASSIGNED
TO
VARIABLE
WINDOW
THE
START
LOCATION
OF
THE
FIRST
LOWEST
HORSE
IS
SET
TO
AN
X
COORDINATE
VALUE
OF
AND
A
Y
COORDINATE
VALUE
OF
THIS
PUTS
THE
TURTLE
SCREEN
OBJECT
AT
THE
LOWER
RIGHT
CORNER
OF
THE
SCREEN
THE
AMOUNT
OF
VERTICAL
SEPARATION
BETWEEN
THE
HORSES
IS
ASSIGNED
TO
VARIABLE
THESE
VALUES
WERE
DETERMINED
FROM
KNOWLEDGE
OF
THE
SCREEN
COORDINATES
IN
TURTLE
GRAPHICS
AND
A
LITTLE
TRIAL
AND
ERROR
NEXT
ON
LINE
A
CALL
IS
MADE
TO
FUNCTION
GENERATEHORSES
AT
LINES
15
THIS
FUNCTION
RETURNS
A
LIST
OF
TEN
NEW
TURTLE
OBJECTS
AND
ASSIGNED
TO
VARIABLE
HORSES
FUNCTION
NEWHORSE
LINES
IS
CALLED
BY
FUNCTION
GENERATEHORSES
TO
CREATE
EACH
NEW
HORSE
TURTLE
OBJECT
AT
THIS
STAGE
FUNCTION
NEWHORSE
SIMPLY
CREATES
AND
RETURNS
A
REGULAR
TURTLE
OBJECT
IN
THE
NEXT
STAGE
HOW
EVER
IT
WILL
BE
RESPONSIBLE
FOR
RETURNING
NEW
TURTLE
OBJECTS
WITH
AN
APPROPRIATE
HORSE
SHAPE
THE
POSITION
FOR
EACH
OF
THESE
HORSES
IS
DETERMINED
BY
FUNCTION
PLACEHORSES
ON
LINES
IT
IS
PASSED
THE
LIST
OF
HORSE
TURTLE
OBJECTS
THE
LOCATION
OF
THE
FIRST
TURTLE
AND
THE
AMOUNT
OF
SEPA
RATION
BETWEEN
EACH
ESTABLISHED
AS
PIXELS
ON
LINE
FUNCTION
PLACEHORSES
THEREFORE
HORSE
RACE
SIMULATION
PROGRAM
FIGURE
STAGE
OF
THE
HORSE
RACE
SIMULATION
PROGRAM
CONTAINS
A
FOR
LOOP
THAT
ITERATES
OVER
THE
LIST
OF
HORSE
OBJECTS
AND
MAKES
THEM
INITIALLY
HIDDEN
WITH
THEIR
PEN
UP
LINES
MOVES
EACH
TO
ITS
STARTING
POSITION
LINE
SETS
THE
HEADING
OF
EACH
TO
DEGREES
TO
MOVE
LEFT
LINE
AND
THEN
MAKES
EACH
VISIBLE
LINE
FINALLY
METHOD
EXITON
CLICK
IS
CALLED
SO
THAT
THE
PROGRAM
WILL
TERMINATE
WHEN
THE
USER
CLICKS
ON
THE
PROGRAM
WIN
DOW
CLOSE
BOX
IN
THE
NEXT
STAGE
WE
FURTHER
DEVELOP
THE
PROGRAM
TO
INCLUDE
THE
SPECIFIC
SHAPES
AND
IMAGES
FOR
THE
SIMULATION
CHAPTER
OBJECTS
AND
THEIR
USE
STAGE
ADDING
THE
APPROPRIATE
SHAPES
AND
IMAGES
WE
NEXT
DEVELOP
AND
TEST
THE
PROGRAM
WITH
ADDITIONAL
CODE
THAT
ADDS
THE
HORSE
SHAPES
IMAGES
NEEDED
THE
RESULTING
TURTLE
SCREEN
IS
SHOWN
IN
FIGURE
FIGURE
SHOWS
THIS
SECOND
STAGE
OF
THE
PROGRAM
FIGURE
OUTPUT
OF
STAGE
OF
THE
HORSE
RACE
SIMULATION
PROGRAM
IN
THIS
STAGE
OF
THE
PROGRAM
WE
ADD
FUNCTIONS
GETHORSEIMAGES
AND
REGISTERHORSEIMAGES
CALLED
FROM
LINES
AND
OF
THE
MAIN
PROGRAM
SECTION
FUNCTION
GETHORSEIMAGES
RETURNS
A
LIST
OF
GIF
IMAGE
FILES
EACH
IMAGE
CONTAINS
THE
SAME
HORSE
IMAGE
EACH
WITH
A
UNIQUE
NUMBER
TO
FUNCTION
REGISTERHORSEIMAGES
DOES
THE
REQUIRED
REGISTERING
OF
IMAGES
IN
TURTLE
GRAPHICS
BY
CALLING
METHOD
TURTLE
ON
EACH
FUNCTION
GENERATEHORSES
LINES
IS
IMPLEMENTED
THE
SAME
WAY
AS
IN
STAGE
TO
RETURN
A
LIST
OF
HORSE
TURTLE
OBJECTS
EXCEPT
THAT
IT
IS
ALTERED
TO
BE
PASSED
AN
ARGUMENT
CONTAINING
A
LIST
OF
HORSE
IMAGES
THUS
THE
CALL
TO
GENERATEHORSES
IN
LINE
IS
ALTERED
TO
PASS
THE
LIST
OF
IMAGES
IN
VARIABLE
FUNCTION
NEWHORSE
LINES
24
IS
ALTERED
AS
WELL
TO
BE
PASSED
A
PARTICULAR
HORSE
IMAGE
FOR
THE
HORSE
THAT
IS
CREATED
HORSE
SHAPE
STAGE
ANIMATING
THE
HORSES
NEXT
WE
DEVELOP
AND
TEST
THE
PROGRAM
WITH
ADDITIONAL
CODE
THAT
ANIMATES
THE
HORSES
SO
THAT
THEY
ARE
RANDOMLY
ADVANCED
UNTIL
A
HORSE
CROSSES
THE
FINISH
LINE
THE
RESULTING
TURTLE
SCREEN
IS
SHOWN
IN
FIGURE
FIGURE
PROVIDES
THIS
THIRD
STAGE
OF
THE
PROGRAM
HORSE
RACE
SIMULATION
PROGRAM
FIGURE
STAGE
OF
THE
HORSE
SIMULATION
RACE
PROGRAM
CONTINUED
TWO
NEW
FUNCTIONS
ARE
ADDED
IN
THIS
VERSION
OF
THE
PROGRAM
STARTHORSES
AND
DISPLAY
WINNER
FUNCTION
STARTHORSES
LINES
IS
PASSED
THE
LIST
OF
HORSE
TURTLE
OBJECTS
THE
LOCATION
OF
THE
FINISH
LINE
AS
AN
X
COORDINATE
VALUE
ON
THE
TURTLE
SCREEN
AND
THE
FUNDAMENTAL
INCRE
MENT
AMOUNT
EACH
HORSE
IS
ADVANCED
BY
ONE
TO
THREE
TIMES
THIS
AMOUNT
THE
WHILE
LOOP
FOR
INCREMENTALLY
MOVING
THE
HORSES
IS
ON
LINE
THE
LOOP
ITERATES
UNTIL
A
WINNER
IS
FOUND
THAT
IS
UNTIL
THE
VARIABLE
IS
TRUE
THEREFORE
IS
INITIALIZED
TO
FALSE
IN
LINE
VARIABLE
K
INITIALIZED
ON
LINE
IS
USED
TO
INDEX
INTO
THE
LIST
OF
HORSE
TURTLE
OBJECTS
SINCE
EACH
HORSE
IN
TURN
IS
ADVANCED
SOME
AMOUNT
DURING
THE
RACE
VARIABLE
K
IS
INCREMENTED
BY
ONE
MODULO
THE
NUMBER
OF
HORSES
IN
VARIABLE
LINE
WHEN
K
BECOMES
EQUAL
TO
IT
IS
RESET
TO
FOR
HORSE
THE
AMOUNT
THAT
EACH
HORSE
IS
ADVANCED
IS
A
FACTOR
OF
ONE
TO
THREE
RANDOMLY
DETERMINED
BY
CALL
TO
METHOD
RANDINT
OF
THE
PYTHON
STANDARD
LIBRARY
MODULE
RANDOM
IN
LINE
VARIABLE
IS
MULTIPLIED
BY
THIS
FACTOR
TO
MOVE
THE
HORSES
FORWARD
AN
APPROPRIATE
AMOUNT
CHAPTER
OBJECTS
AND
THEIR
USE
FIGURE
STAGE
OF
THE
HORSE
SIMULATION
RACE
PROGRAM
FIGURE
OUTPUT
OF
STAGE
OF
THE
HORSE
RACE
SIMULATION
PROGRAM
HORSE
RACE
SIMULATION
PROGRAM
FIGURE
STAGE
OF
THE
HORSE
RACE
SIMULATION
PROGRAM
CONTINUED
CHAPTER
OBJECTS
AND
THEIR
USE
FIGURE
STAGE
OF
THE
HORSE
RACE
SIMULATION
PROGRAM
THE
VALUE
OF
IS
INITIALIZED
IN
THE
MAIN
PROGRAM
SECTION
THIS
VALUE
CAN
BE
ADJUSTED
TO
SPEED
UP
OR
SLOW
DOWN
THE
OVERALL
SPEED
OF
THE
HORSES
FUNCTION
DISPLAYWINNER
DISPLAYS
THE
WINNING
HORSE
NUMBER
IN
THE
PYTHON
SHELL
LINES
61
THIS
FUNCTION
WILL
BE
REWRITTEN
IN
THE
NEXT
STAGE
OF
PROGRAM
DEVELOPMENT
TO
DISPLAY
A
WINNER
BANNER
IMAGE
IN
THE
TURTLE
SCREEN
THUS
THIS
IMPLEMENTATION
OF
THE
FUNCTION
IS
FOR
TESTING
PURPOSES
ONLY
THE
MAIN
PROGRAM
SECTION
LINES
IS
THE
SAME
AS
IN
THE
PREVIOUS
STAGE
OF
PROGRAM
DEVELOPMENT
EXCEPT
FOR
THE
INCLUSION
OF
THE
CALLS
TO
FUNCTIONS
STARTHORSES
AND
DISPLAY
WINNER
IN
LINES
AND
HORSE
RACE
SIMULATION
PROGRAM
FINAL
STAGE
ADDING
RACE
BANNERS
FINALLY
WE
ADD
THE
CODE
FOR
THE
DISPLAYING
OF
BANNERS
AT
VARIOUS
POINTS
IN
THE
RACE
AS
SHOWN
EARLIER
IN
FIGURE
IN
FIGURE
IS
THE
FINAL
STAGE
OF
THE
PROGRAM
THIS
FINAL
VERSION
IMPORTS
ONE
ADDITIONAL
MODULE
PYTHON
STANDARD
LIBRARY
MODULE
TIME
LINE
USED
TO
CONTROL
THE
BLINK
RATE
OF
THE
WINNING
HORSE
WHILE
THE
RACE
PROGRESSES
WITHIN
THE
WHILE
LOOP
AT
LINE
CHECKS
FOR
THE
LOCATION
OF
THE
LEAD
HORSE
ARE
MADE
IN
TWO
PLACES
BEFORE
AND
AFTER
THE
HALFWAY
MARK
OF
THE
RACE
ON
LINE
IF
THE
FIGURE
FINAL
STAGE
OF
THE
HORSE
RACE
SIMULATION
PROGRAM
CONTINUED
CHAPTER
OBJECTS
AND
THEIR
USE
FIGURE
FINAL
STAGE
OF
THE
HORSE
RACE
SIMULATION
PROGRAM
CONTINUED
X
COORDINATE
LOCATION
OF
THE
LEAD
HORSE
IS
LESS
THEN
THE
EARLY
LEAD
BANNER
IS
DISPLAYED
ON
LINE
BY
A
CALL
TO
FUNCTION
DISPLAYBANNER
OTHERWISE
IF
ONE
SECOND
HAS
ELAPSED
THEN
THE
MIDRACE
LEAD
BANNER
IS
DISPLAYED
ON
LINE
THE
SLEEP
METHOD
OF
THE
TIME
MODULE
IS
USED
TO
CONTROL
THE
BLINKING
OF
THE
WINNING
HORSE
IN
FUNCTION
DISPLAYWINNER
A
COUNT
DOWN
VARIABLE
IS
SET
TO
ON
LINE
THIS
WILL
CAUSE
THE
WINNING
HORSE
TO
BLINK
FIVE
TIMES
THE
FOLLOWING
WHILE
LOOP
DECREMENTS
HORSE
RACE
SIMULATION
PROGRAM
FIGURE
FINAL
STAGE
OF
THE
HORSE
RACE
SIMULATION
PROGRAM
CONTINUED
AND
CONTINUES
TO
ITERATE
UNTIL
IS
VARIABLE
SHOW
INITIAL
IZED
TO
FALSE
ON
LINE
IS
USED
TO
ALTERNATELY
SHOW
AND
HIDE
THE
TURTLE
BASED
ON
ITS
CURRENT
BOOLEAN
VALUE
WHICH
IS
TOGGLED
BACK
AND
FORTH
BETWEEN
TRUE
AND
FALSE
EACH
TIME
THROUGH
THE
LOOP
THE
SLEEP
METHOD
IS
CALLED
ON
LINE
TO
CAUSE
THE
PROGRAM
EXECUTION
TO
SUSPEND
FOR
FOUR
TENTHS
OF
A
SECOND
SO
THAT
THE
SWITCH
BETWEEN
THE
VISIBLE
AND
INVISIBLE
HORSE
APPEARS
SLOWLY
ENOUGH
TO
CAUSE
A
BLINKING
EFFECT
THIS
VERSION
OF
DISPLAYWINNER
REPLACES
THE
PREVIOUS
VER
SION
THAT
SIMPLY
DISPLAYED
THE
WINNING
HORSE
NUMBER
IN
THE
PYTHON
SHELL
WINDOW
ADDED
FUNCTIONS
GETBANNERIMAGES
LINES
41
REGISTERBANNERIMAGES
LINES
AND
DISPLAYBANNER
LINES
INCORPORATE
THE
BANNER
IMAGES
INTO
THE
PROGRAM
THE
SAME
WAY
THAT
THE
HORSE
IMAGES
WERE
INCORPORATED
IN
THE
PREVIOUS
PROGRAM
VERSION
FUNCTION
STARTHORSES
WAS
MODIFIED
TO
TAKE
ANOTHER
PARAMETER
BANNERS
CONTAINING
THE
LIST
OF
REGIS
TERED
BANNERS
DISPLAYED
DURING
THE
RACE
PASSED
TO
IT
FROM
THE
MAIN
PROGRAM
SECTION
CHAPTER
OBJECTS
AND
THEIR
USE
FIGURE
FINAL
STAGE
OF
THE
HORSE
RACE
SIMULATION
PROGRAM
CONTINUED
FINALLY
THE
DEFAULT
TURTLE
CREATED
WITH
THE
TURTLE
GRAPHICS
WINDOW
IS
UTILIZED
IN
FUNCTION
DISPLAYBANNERS
AND
IN
THE
MAIN
SECTION
IT
IS
USED
TO
DISPLAY
THE
VARIOUS
BANNERS
AT
THE
BOTTOM
OF
THE
SCREEN
TO
DO
THIS
THE
TURTLE
SHAPE
IS
CHANGED
TO
THE
APPROPRIATE
BANNER
IMAGES
STORED
IN
LIST
TO
PREVENT
THE
TURTLE
FROM
DRAWING
LINES
WHEN
MOVING
FROM
THE
INI
TIAL
COORDINATE
LOCATION
TO
WHERE
BANNERS
ARE
DISPLAYED
THE
DEFAULT
TURTLE
IS
HIDDEN
AND
ITS
PEN
ATTRIBUTE
IS
SET
TO
UP
LINES
CHAPTER
EXERCISES
FIGURE
FINAL
STAGE
OF
THE
HORSE
RACE
SIMULATION
PROGRAM
CHAPTER
SUMMAR
Y
GENERAL
TOPICS
SOFTWARE
OBJECTS
METHODS
REFERENCES
REFERENCE
VS
DEREFERENCED
VALUES
REFERENCE
ASSIGNMENT
MEMORY
ALLOCATION
DEALLOCATION
GARBAGE
COLLECTION
SHALLOW
VS
DEEP
COPY
OPERATIONS
PYTHON
SPECIFIC
PROGRAMMING
TOPICS
OBJECTS
AND
TURTLE
GRAPHICS
IN
PYTHON
CHAPTER
EXERCISES
SECTION
INDICATE
EXACTLY
WHAT
THE
CONTENTS
OF
AND
WOULD
BE
AFTER
EACH
OF
THE
FOLLOWING
SET
OF
ASSIGNMENTS
A
B
C
20
LIST
50
INDICATE
WHICH
OF
THE
FOLLOWING
SET
OF
ASSIGNMENTS
WOULD
RESULT
IN
AUTOMATIC
GARBAGE
COLLECTION
IN
PYTHON
A
B
HELLO
WORLD
C
NICE
DAY
FOR
THE
SET
OF
ASSIGNMENTS
IN
QUESTION
INDICATE
HOW
BOTH
THE
ID
METHOD
AND
IS
OPERATOR
CAN
BE
USED
TO
DETERMINE
IF
LISTS
AND
ARE
EACH
REFERENCING
THE
SAME
LIST
INSTANCE
IN
MEMORY
SECTION
GIVE
A
SET
OF
INSTRUCTIONS
TO
CREATE
A
TURTLE
WINDOW
OF
SIZE
PIXELS
WIDE
AND
PIXELS
HIGH
WITH
A
TITLE
OF
TURTLE
GRAPHICS
WINDOW
GIVE
A
SET
OF
INSTRUCTIONS
THAT
GETS
THE
DEFAULT
TURTLE
AND
SETS
IT
TO
AN
ACTUAL
TURTLE
SHAPE
CHAPTER
OBJECTS
AND
THEIR
USE
FOR
EACH
OF
THE
FOLLOWING
METHOD
CALLS
ON
TURTLE
INDICATE
IN
WHAT
PART
OF
THE
SCREEN
THE
TURTLE
WILL
BE
PLACED
RELATIVE
TO
THE
CENTER
OF
THE
SCREEN
A
SETPOSITION
B
SETPOSITION
C
SETPOSITION
D
SETPOSITION
250
FOR
THE
FOLLOWING
METHOD
CALLS
ON
TURTLE
DESCRIBE
THE
SHAPE
THAT
WILL
BE
DRAWN
PENUP
SETPOSITION
PENDOWN
SETPOSITION
SETPOSITION
50
SETPOSITION
50
SETPOSITION
WHAT
COLOR
LINE
WILL
BE
DRAWN
IN
THE
FOLLOWING
TURTLE
COLORMODE
PENCOLOR
PENDOWN
FORWARD
WHAT
WILL
BE
DISPLAYED
BY
THE
FOLLOWING
TURTLE
ACTIONS
PENDOWN
SHOWTURTLE
FORWARD
PENUP
FORWARD
PENDOWN
SHOWTURTLE
FORWARD
PYTHON
PROGRAMMING
EXERCISES
GIVE
A
SET
OF
INSTRUCTIONS
FOR
CONTROLLING
THE
TURTLE
TO
DRAW
A
LINE
FROM
THE
TOP
LEFT
CORNER
OF
THE
SCREEN
TO
THE
BOTTOM
RIGHT
CORNER
AND
FROM
THE
TOP
RIGHT
CORNER
TO
THE
BOTTOM
LEFT
CORNER
THEREBY
MAKING
A
BIG
X
ON
THE
SCREEN
THERE
SHOULD
BE
NO
OTHER
LINES
DRAWN
ON
THE
SCREEN
USING
RELATIVE
POSITIONING
GIVE
A
SET
OF
INSTRUCTIONS
FOR
CONTROLLING
THE
TURTLE
TO
DRAW
AN
ISOSCELES
TRIANGLE
ON
THE
SCREEN
THAT
IS
A
TRIANGLE
WITH
TWO
EQUAL
LENGTH
SIDES
GIVE
A
SET
OF
INSTRUCTIONS
FOR
CONTROLLING
THE
TURTLE
TO
DRAW
THE
LETTER
W
USING
RELATIVE
POSITIONING
GIVE
A
SET
OF
INSTRUCTIONS
FOR
CONTROLLING
THE
TURTLE
TO
CREATE
THREE
CONCENTRIC
CIRCLES
EACH
OF
DIFFERENT
COLOR
AND
LINE
WIDTH
GIVE
A
SET
OF
INSTRUCTIONS
THAT
SETS
THE
TURTLE
TO
AN
ACTUAL
TURTLE
SHAPE
AND
MOVES
IT
FROM
THE
BOTTOM
OF
THE
SCREEN
TOWARDS
THE
TOP
GETTING
SMALLER
AS
IT
MOVES
ALONG
GIVE
A
SET
OF
INSTRUCTIONS
THAT
MOVES
THE
TURTLE
WITH
AN
ACTUAL
TURTLE
SHAPE
FROM
THE
BOTTOM
OF
THE
SCREEN
TOWARD
THE
TOP
CHANGING
ITS
FILL
COLOR
WHEN
IT
CROSSES
THE
X
AXIS
OF
THE
GRID
COORDINATES
GIVE
A
SET
OF
INSTRUCTIONS
TO
CREATE
YOUR
OWN
POLYGON
SHAPE
AND
CREATE
AN
INTERESTING
DESIGN
WITH
IT
PROGRAM
MODIFICATION
PROBLEMS
GIVE
A
SET
OF
INSTRUCTIONS
SO
THAT
THE
TURTLE
INITIALLY
MOVES
SLOWLY
AROUND
THE
EDGE
OF
THE
SCREEN
THEN
MOVES
FASTER
AND
FASTER
AS
IT
GOES
AROUND
GIVE
A
SET
OF
INSTRUCTIONS
TO
CREATE
TWO
TURTLE
OBJECTS
EACH
WITH
CIRCLE
SHAPE
THAT
MOVE
TO
VARIOUS
LOCATIONS
OF
THE
TURTLE
SCREEN
EACH
STAMPING
THEIR
CIRCLE
SHAPE
OF
VARYING
SIZES
AND
COLORS
PROGRAM
MODIFICATION
PROBLEMS
BOUNCING
BALLS
WITH
COLOR
MODIFY
THE
BOUNCING
BALLS
SIMULATION
PROGRAM
SO
THAT
EXACTLY
THREE
BALLS
ARE
CREATED
EACH
WITH
A
DIFFERENT
COLOR
BOUNCING
BALLS
WITH
CHANGING
COLOR
MODIFY
THE
BOUNCING
BALLS
SIMULATION
PROGRAM
SO
THAT
EACH
TIME
A
BALL
HITS
AN
EDGE
OF
THE
TURTLE
GRAPHICS
SCREEN
IT
CHANGES
COLOR
BOUNCING
BALLS
WITH
TRAILING
LINES
MODIFY
THE
BOUNCING
BALLS
SIMULATION
PROGRAM
SO
THAT
A
TRAIL
IS
LEFT
ON
THE
SCREEN
OF
EACH
BALL
PATH
BOUNCING
BALL
CHASE
MODIFY
THE
BOUNCING
BALLS
SIMULATION
PROGRAM
SO
THAT
THERE
ARE
EXACTLY
THREE
BALLS
GENERATED
WITH
THE
FIRST
BALL
STARTED
IN
A
RANDOM
DIRECTION
HEADING
AND
THE
OTHER
TWO
BALLS
FOLLOWING
IT
CLOSELY
BEHIND
HORSE
RACING
PROGRAM
MULTIPLE
RACES
AND
SCORE
KEEPING
MODIFY
THE
HORSE
RACING
PROGRAM
SO
THAT
THE
USER
CAN
CONTINUE
TO
PLAY
ANOTHER
RACE
WITHOUT
HAVING
TO
RERUN
THE
PROGRAM
ALSO
THE
CUMULATIVE
WINS
OF
ALL
THE
HORSES
SHOULD
BE
DISPLAYED
IN
THE
SHELL
WINDOW
THIS
ALLOWS
THE
USER
TO
SEE
IF
SOME
HORSES
ARE
A
MORE
WINNING
HORSE
THAN
OTHERS
HORSE
RACING
PROGRAM
HANDICAP
RACING
MODIFY
THE
HORSE
RACING
PROGRAM
SO
THAT
THE
USER
CAN
ASSIGN
A
HANDICAP
TO
ONE
OR
MORE
HORSES
ON
A
SCALE
OF
TO
A
HANDICAP
IN
RACING
IS
A
MEANS
OF
GIVING
ADVANTAGE
TO
LESS
COMPETITIVE
HORSES
OVER
MORE
COMPETITIVE
ONES
IF
A
HORSE
IS
ASSIGNED
A
HANDICAP
OF
IT
SHOULD
MOVE
AHEAD
ONE
FIFTH
FARTHER
THAN
USUAL
A
HANDICAP
OF
WOULD
INCREASE
ITS
MOVE
BY
TWO
FIFTHS
AND
SO
FORTH
THE
LIST
OF
HANDICAPS
SHOULD
BE
DIS
PLAYED
IN
THE
SHELL
WINDOW
EACH
TIME
BEFORE
THE
RACE
BEGINS
HORSE
RACING
PROGRAM
PARI
MUTUEL
BETTING
MODIFY
THE
HORSE
RACING
PROGRAM
TO
ALLOW
INDIVIDUALS
TO
ENTER
THEIR
NAME
TO
REGISTER
THEMSELVES
TO
PLACE
BETS
THE
PROGRAM
SHOULD
BE
MODIFIED
SO
THAT
RACES
CAN
BE
CONSECUTIVELY
RUN
WITHOUT
HAVING
TO
RE
START
THE
PROGRAM
BEFORE
EACH
RACE
BETS
CAN
BE
PLACED
BY
REGISTERED
PLAYERS
EACH
BET
IS
FOR
WHICH
HORSE
WILL
WIN
THE
PAYOUT
WILL
BE
BASED
ON
THE
RULES
OF
PARI
MUTUEL
BETTING
DESCRIBED
BELOW
THE
AMOUNT
OF
MONEY
GAINED
OR
LOST
BY
EACH
REGISTERED
PLAYER
SHOULD
BE
CONSTANTLY
DISPLAYED
IN
THE
SHELL
EXAMPLE
OF
PARI
MUTUEL
BETTING
EACH
HORSE
HAS
A
CERTAIN
AMOUNT
OF
MONEY
WAGERED
ON
IT
ASSUMING
EIGHT
HORSES
00
00
00
00
40
00
THUS
THE
TOTAL
POOL
OF
MONEY
ON
THIS
PARTICULAR
WAGERING
EVENT
IS
00
FOLLOWING
THE
START
OF
THE
EVENT
NO
MORE
WAGERS
ARE
ACCEPTED
THE
EVENT
IS
DECIDED
AND
THE
WINNING
OUTCOME
IS
DETERMINED
TO
BE
OUTCOME
WITH
00
WAGERED
THE
PAYOUT
IS
NOW
CALCULATED
FIRST
THE
COMMISSION
OR
TAKE
FOR
THE
WAGERING
COMPANY
IS
DEDUCTED
FROM
THE
POOL
FOR
EXAMPLE
WITH
A
COMMISSION
RATE
OF
THE
POOL
IS
THIS
REMAINING
AMOUNT
IN
THE
POOL
IS
NOW
DISTRIBUTED
TO
THOSE
WHO
CHAPTER
OBJECTS
AND
THEIR
USE
WAGERED
ON
OUTCOME
440
PER
WAGERED
THIS
PAYOUT
INCLUDES
THE
WAGERED
PLUS
AN
ADDITIONAL
PROFIT
THUS
THE
ODDS
OF
OUTCOME
ARE
7
TO
WIKIPEDIA
CONTRIBUTORS
PARIMUTUEL
BETTING
WIKIPEDIA
THE
FREE
ENCYCLOPEDIA
WIKIPEDIA
THE
FREE
ENCYCLOPEDIA
MAY
7
WEB
MAY
2011
PROGRAM
DEVELOPMENT
PROBLEMS
DRUNKARD
WALK
A
RANDOM
WALK
IS
A
TRAJECTORY
TAKEN
BY
A
SEQUENCE
OF
RANDOM
STEPS
RANDOM
WALKS
CAN
BE
USED
TO
MODEL
THE
TRAVEL
OF
MOLECULES
THE
PATH
THAT
ANIMALS
TAKE
WHEN
LOOKING
FOR
FOOD
AND
FINANCIAL
FLUCTUATIONS
FOR
EXAMPLE
A
SPECIFIC
FORM
OF
RANDOM
WALK
IS
CALLED
THE
DRUNKARD
WALK
A
DRUNKEN
MAN
TRIES
TO
FIND
HIS
WAY
HOME
HE
DOES
SO
BY
MAKING
A
RANDOM
CHOICE
AT
EACH
STREET
INTERSECTION
OF
WHICH
OF
THE
FOUR
PATHS
TO
TAKE
CONTINUE
IN
THE
SAME
DIRECTION
GO
BACK
FROM
THE
DIRECTION
HE
CAME
TURN
LEFT
OR
TURN
RIGHT
THUS
THE
MAN
IS
TRAVELING
THE
SAME
DISTANCE
AFTER
EACH
CHOICE
OF
DIRECTION
ONE
CITY
BLOCK
IMPLEMENT
AND
TEST
A
PYTHON
PROGRAM
USING
TURTLE
GRAPHICS
TO
DISPLAY
RANDOM
WALKS
SELECT
AN
APPROPRIATE
NUMBER
OF
PIXELS
AS
THE
LENGTH
OF
A
CITY
BLOCK
NAME
REVERSAL
IMPLEMENT
AND
TEST
A
PYTHON
PROGRAM
USING
TURTLE
GRAPHICS
TO
ALLOW
THE
USER
TO
ENTER
THEIR
FIRST
NAME
AND
HAVE
IT
DISPLAYED
IN
THE
TURTLE
WINDOW
AS
A
REVERSE
MIRROR
IMAGE
BATTLESHIP
GAME
VISUALIZATION
IMPLEMENT
AND
TEST
A
PYTHON
PROGRAM
USING
TURTLE
GRAPHICS
TO
PROVIDE
A
VISUALIZATION
FOR
THE
GAME
OF
BATTLESHIP
DISCUSSED
IN
PROGRAM
DEVELOPMENT
PROBLEM
IN
CHAPTER
USING
AND
DEFINING
FUNCTIONS
AS
YOU
KNOW
FROM
THE
FUNCTIONS
YOU
HAVE
BEEN
USING
THE
EFFECT
OF
CALLING
A
PYTHON
FUNCTION
IS
EASY
TO
UNDERSTAND
FOR
EXAMPLE
WHEN
YOU
PLACE
MATH
SQRT
A
B
IN
A
PROGRAM
THE
EFFECT
IS
AS
IF
YOU
HAD
REPLACED
THAT
CODE
WITH
THE
RETURN
VALUE
THAT
IS
PRODUCED
BY
PYTHON
MATH
SQRT
FUNCTION
WHEN
PASSED
THE
EXPRESSION
A
B
AS
AN
ARGUMENT
THIS
USAGE
IS
SO
INTUITIVE
THAT
WE
HAVE
HARDLY
NEEDED
TO
COMMENT
ON
IT
IF
YOU
THINK
ABOUT
WHAT
THE
SYSTEM
HAS
TO
DO
TO
CREATE
THIS
EFFECT
HOWEVER
YOU
WILL
SEE
THAT
IT
INVOLVES
CHANGING
A
PROGRAM
CONTROL
FLOW
THE
IMPLICATIONS
OF
BEING
ABLE
TO
CHANGE
THE
CONTROL
FLOW
IN
THIS
WAY
ARE
AS
PROFOUND
AS
DOING
SO
FOR
CONDITIONALS
AND
LOOPS
YOU
CAN
DEFINE
FUNCTIONS
IN
ANY
PYTHON
PROGRAM
USING
THE
DEF
STATEMENT
THAT
SPECIFIES
THE
FUNCTION
SIGNATURE
FOLLOWED
BY
A
SEQUENCE
OF
STATEMENTS
THAT
CONSTITUTE
THE
FUNCTION
WE
WILL
CONSIDER
THE
DETAILS
SHORTLY
BUT
BEGIN
WITH
A
SIMPLE
EXAMPLE
THAT
ILLUSTRATES
HOW
FUNCTIONS
AFFECT
CONTROL
FLOW
OUR
FIRST
EXAMPLE
PRO
GRAM
HARMONICF
PY
INCLUDES
A
FUNCTION
NAMED
HARMONIC
THAT
TAKES
AN
ARGUMENT
N
AND
COMPUTES
THE
NTH
HARMONIC
NUMBER
SEE
PROGRAM
IT
ALSO
ILLUSTRATES
THE
TYPICAL
STRUCTURE
OF
A
PYTHON
PROGRAM
HAVING
THREE
COMPONENTS
A
SEQUENCE
OF
IMPORT
STATEMENTS
A
SEQUENCE
OF
FUNCTION
DEFINITIONS
ARBITRARY
GLOBAL
CODE
OR
THE
BODY
OF
THE
PROGRAM
PROGRAM
HAS
TWO
IMPORT
STATEMENTS
ONE
FUNCTION
DEFINITION
AND
FOUR
LINES
OF
ARBITRARY
GLOBAL
CODE
PYTHON
EXECUTES
THE
GLOBAL
CODE
WHEN
WE
INVOKE
THE
PRO
GRAM
BY
TYPING
PYTHON
HARMONICF
PY
ON
THE
COMMAND
LINE
THAT
GLOBAL
CODE
CALLS
THE
HARMONIC
FUNCTION
DEFINED
EARLIER
THE
IMPLEMENTATION
IN
HARMONICF
PY
IS
PREFERABLE
TO
OUR
ORIGINAL
IMPLE
MENTATION
FOR
COMPUTING
HARMONIC
NUMBERS
PROGRAM
BECAUSE
IT
CLEARLY
SEPARATES
THE
TWO
PRIMARY
TASKS
PERFORMED
BY
THE
PROGRAM
CALCULATING
HARMONIC
NUMBERS
AND
INTERACTING
WITH
THE
USER
FOR
PURPOSES
OF
ILLUSTRATION
WE
HAVE
MADE
THE
USER
INTERACTION
PART
OF
THE
PROGRAM
A
BIT
MORE
COMPLICATED
THAN
IN
PROGRAM
WHENEVER
YOU
CAN
CLEARLY
SEPARATE
TASKS
WITHIN
A
COMPUTATION
YOU
SHOULD
DO
SO
NEXT
WE
CAREFULLY
EXAMINE
PRECISELY
HOW
HARMONICF
PY
ACHIEVES
THIS
GOAL
CONTROL
FLOW
THE
DIAGRAM
ON
THE
NEXT
PAGE
ILLUSTRATES
THE
FLOW
OF
CONTROL
FOR
THE
COMMAND
PYTHON
HARMONICF
PY
FIRST
PYTHON
PROCESSES
THE
IMPORT
STATEMENTS
THUS
MAKING
ALL
OF
THE
FEATURES
DEFINED
IN
THE
SYS
AND
STDIO
MODULES
AVAILABLE
TO
THE
PROGRAM
NEXT
PYTHON
PROCESSES
THE
DEFINITION
OF
THE
HARMONIC
FUNCTION
AT
LINES
THROUGH
BUT
DOES
NOT
EXECUTE
THE
FUNCTION
PYTHON
EXECUTES
A
FUNCTION
ONLY
WHEN
IT
IS
CALLED
THEN
PYTHON
EXECUTES
THE
FIRST
STATEMENT
IN
THE
GLOBAL
CODE
AFTER
THE
FUNCTION
DEFINITION
THE
FOR
STATEMENT
WHICH
PROCEEDS
NOR
MALLY
UNTIL
PYTHON
BEGINS
TO
EXECUTE
THE
STATEMENT
VALUE
HARMONIC
ARG
START
ING
BY
EVALUATING
THE
EXPRESSION
HARMONIC
ARG
WHEN
ARG
IS
TO
DO
SO
IT
TRANS
FERS
CONTROL
TO
THE
HARMONIC
FUNCTION
THE
FLOW
OF
CONTROL
PASSES
TO
THE
CODE
IN
THE
FUNC
IMPORT
SYS
IMPORT
STDIO
DEF
HARMONIC
N
TOTAL
FOR
I
IN
RANGE
N
TOTAL
I
RETURN
TOTAL
FOR
I
IN
RANGE
LEN
SYS
ARGV
I
I
I
ARG
INT
SYS
ARGV
I
VALUE
HARMONIC
ARG
STDIO
WRITELN
VALUE
N
N
N
TION
DEFINITION
PYTHON
INITIAL
IZES
THE
PARAMETER
VARIABLE
N
TO
AND
THE
LOCAL
VARI
ABLE
TOTAL
TO
AND
THEN
EXECUTES
THE
FOR
LOOP
WITHIN
HARMONIC
WHICH
TERMINATES
AFTER
ONE
ITERATION
WITH
TOTAL
EQUAL
TO
THEN
PYTHON
EXECUTES
THE
RETURN
STATEMENT
AT
THE
END
OF
THE
DEFINITION
OF
HARMONIC
CAUSING
THE
FLOW
OF
CONTROL
TO
JUMP
BACK
TO
THE
CALLING
STATEMENT
VAL
UE
HARMONIC
ARG
CON
TINUING
FROM
WHERE
IT
LEFT
OFF
BUT
NOW
WITH
THE
EXPRESSION
HARMONIC
ARG
REPLACED
BY
THUS
PYTHON
ASSIGNS
TO
VALUE
AND
WRITES
IT
TO
STAN
DARD
OUTPUT
THEN
PYTHON
IT
ERATES
THE
LOOP
ONCE
MORE
AND
CALLS
THE
HARMONIC
FUNCTION
A
SECOND
TIME
WITH
N
INITIAL
FLOW
OF
CONTROL
FOR
PYTHON
HARMONICF
PY
IZED
TO
WHICH
RESULTS
IN
BEING
WRITTEN
THE
PROCESS
IS
THEN
REPEATED
A
THIRD
TIME
WITH
ARG
AND
THEN
N
EQUAL
TO
WHICH
RESULTS
IN
BEING
WRITTEN
FINALLY
THE
FOR
LOOP
TERMINATES
AND
THE
WHOLE
PROCESS
IS
COMPLETE
AS
THE
DIAGRAM
INDICATES
THE
SIMPLE
CODE
MASKS
A
RATHER
INTRI
CATE
FLOW
OF
CONTROL
PYTHON
HARMONICF
PY
PYTHON
HARMONICF
PY
I
ARG
HARMONIC
INFORMAL
FUNCTION
CALL
RETURN
TRACE
ONE
SIMPLE
APPROACH
TO
FOLLOWING
THE
CON
TROL
FLOW
THROUGH
FUNCTION
CALLS
IS
TO
IMAGINE
THAT
EACH
FUNCTION
WRITES
ITS
NAME
AND
ARGUMENT
WHEN
IT
IS
CALLED
AND
ITS
RETURN
VALUE
JUST
BEFORE
RETURNING
WITH
INDENTATION
ADDED
ON
CALLS
AND
SUB
TRACTED
ON
RETURNS
THE
RESULT
ENHANCES
THE
PROCESS
OF
TRAC
ING
A
PROGRAM
BY
WRITING
THE
VALUES
OF
ITS
VARIABLES
WHICH
TOTAL
TOTAL
RETURN
VALUE
I
ARG
HARMONIC
TOTAL
TOTAL
TOTAL
RETURN
VALUE
I
ARG
HARMONIC
TOTAL
TOTAL
TOTAL
TOTAL
TOTAL
RETURN
VALUE
INFORMAL
TRACE
WITH
FUNCTION
CALL
RETURN
FOR
PYTHON
HARMONICF
PY
WE
HAVE
BEEN
USING
SINCE
SECTION
AN
INFORMAL
TRACE
FOR
OUR
EXAMPLE
IS
SHOWN
AT
RIGHT
THE
ADDED
INDENTATION
EX
POSES
THE
FLOW
OF
THE
CONTROL
AND
HELPS
US
CHECK
THAT
EACH
FUNCTION
HAS
THE
EFFECT
THAT
WE
EXPECT
GENERALLY
ADDING
CALLS
ON
STDIO
WRITEF
TO
TRACE
ANY
PROGRAM
CONTROL
FLOW
IN
THIS
WAY
IS
A
FINE
APPROACH
TO
BEGIN
TO
UNDERSTAND
WHAT
IT
IS
DOING
IF
THE
RETURN
VALUES
MATCH
OUR
EXPECTATIONS
WE
NEED
NOT
TRACE
THE
FUNCTION
CODE
IN
DETAIL
SAVING
US
A
SUBSTANTIAL
AMOUNT
OF
WORK
FOR
THE
REST
OF
THIS
CHAPTER
YOUR
PROGRAMMING
WILL
BE
CEN
TERED
ON
CREATING
AND
USING
FUNCTIONS
SO
IT
IS
WORTHWHILE
TO
CONSIDER
IN
MORE
DETAIL
THEIR
BASIC
PROPERTIES
AND
IN
PARTICU
LAR
THE
TERMINOLOGY
SURROUNDING
FUNCTIONS
FOLLOWING
THAT
WE
WILL
STUDY
SEVERAL
EXAMPLES
OF
FUNCTION
IMPLEMENTATIONS
AND
APPLICATIONS
BASIC
TERMINOLOGY
AS
WE
HAVE
BEEN
DOING
THROUGHOUT
IT
IS
USEFUL
TO
DRAW
A
DISTINCTION
BETWEEN
ABSTRACT
CONCEPTS
AND
PYTHON
MECHANISMS
TO
IMPLEMENT
THEM
THE
PYTHON
IF
STATEMENT
IMPLEMENTS
THE
CONDITIONAL
THE
WHILE
STATEMENT
IMPLEMENTS
THE
LOOP
AND
SO
FORTH
THERE
ARE
SEVERAL
CONCEPTS
ROLLED
UP
IN
THE
IDEA
OF
A
MATHEMATICAL
FUNCTION
AND
THERE
ARE
PYTHON
CONSTRUCTS
CORRESPONDING
TO
EACH
AS
SUMMARIZED
IN
THE
TABLE
AT
THE
TOP
OF
THE
FOLLOWING
PAGE
WHILE
YOU
CAN
REST
ASSURED
THAT
THESE
FORMALISMS
HAVE
SERVED
MATHEMATICIANS
WELL
FOR
CENTURIES
AND
HAVE
SERVED
PRO
GRAMMERS
WELL
FOR
DECADES
WE
WILL
REFRAIN
FROM
CONSIDERING
IN
DETAIL
ALL
OF
THE
IMPLICATIONS
OF
THIS
CORRESPONDENCE
AND
FOCUS
ON
THOSE
THAT
WILL
HELP
YOU
LEARN
TO
PROGRAM
WHEN
WE
USE
A
SYMBOLIC
NAME
IN
A
FORMULA
THAT
DEFINES
A
MATHEMATICAL
FUNC
TION
SUCH
AS
F
X
X
THE
SYMBOL
X
IS
A
PLACEHOLDER
FOR
SOME
INPUT
VALUE
CONCEPT
PYTHON
CONSTRUCT
DESCRIPTION
FUNCTION
FUNCTION
MAPPING
INPUT
VALUE
ARGUMENT
INPUT
TO
FUNCTION
OUTPUT
VALUE
RETURN
VALUE
OUTPUT
OF
FUNCTION
FORMULA
FUNCTION
BODY
FUNCTION
DEFINITION
INDEPENDENT
VARIABLE
PARAMETER
VARIABLE
SYMBOLIC
PLACEHOLDER
FOR
INPUT
VALUE
THAT
WILL
BE
SUBSTITUTED
INTO
THE
FORMULA
TO
DETERMINE
THE
OUTPUT
VALUE
IN
PYTHON
WE
USE
A
PARAMETER
VARIABLE
AS
A
SYMBOLIC
PLACEHOLDER
AND
WE
REFER
TO
A
PARTICULAR
INPUT
VALUE
WHERE
THE
FUNCTION
IS
TO
BE
EVALUATED
AS
AN
ARGUMENT
FUNCTION
DEFINITION
THE
FIRST
LINE
OF
A
FUNCTION
DEFINITION
KNOWN
AS
ITS
SIGNATURE
GIVES
A
NAME
TO
THE
FUNCTION
AND
TO
EACH
PARAMETER
VARIABLE
THE
SIGNA
SIGNATURE
DEF
FUNCTION
NAME
PARAMETER
VARIABLE
N
FUNCTION
BODY
TURE
CONSISTS
OF
THE
KEYWORD
DEF
THE
FUNCTION
NAME
A
SEQUENCE
OF
ZERO
OR
MORE
PARAMETER
VARIABLE
NAMES
SEPARATED
BY
COMMAS
AND
ENCLOSED
IN
PARENTHESES
AND
A
COLON
THE
INDENTED
STATEMENTS
FOLLOWING
THE
SIGNATURE
DEFINE
THE
FUNCTION
BODY
THE
FUNCTION
LOCAL
VARIABLE
FOR
I
IN
RANGE
N
TOTAL
I
BODY
CAN
CONSIST
OF
THE
KINDS
OF
STATEMENTS
THAT
WE
DISCUSSED
IN
CHAPTER
IT
ALSO
CAN
CONTAIN
A
RETURN
STATEMENT
WHICH
TRANSFERS
CONTROL
BACK
TO
THE
POINT
WHERE
THE
FUNCTION
WAS
CALLED
AND
RETURNS
THE
RESULT
RETURN
RETURN
STATEMENT
VALUE
ANATOMY
OF
A
FUNCTION
DEFINITION
OF
THE
COMPUTATION
OR
RETURN
VALUE
THE
BODY
MAY
ALSO
DEFINE
LOCAL
VARIABLES
WHICH
ARE
VARIABLES
THAT
ARE
AVAILABLE
ONLY
INSIDE
THE
FUNCTION
IN
WHICH
THEY
ARE
DEFINED
FUNCTION
CALLS
AS
WE
HAVE
SEEN
THROUGHOUT
A
PYTHON
FUNCTION
CALL
IS
NOTHING
MORE
THAN
THE
FUNCTION
NAME
FOLLOWED
BY
ITS
ARGUMENTS
SEPARATED
BY
COMMAS
AND
ENCLOSED
IN
PARENTHESES
IN
PRECISELY
THE
SAME
FORM
AS
IS
CUSTOMARY
FOR
MATHEMATI
CAL
FUNCTIONS
AS
NOTED
IN
SECTION
EACH
ARGUMENT
CAN
BE
AN
EXPRESSION
WHICH
IS
EVALUATED
AND
THE
RESULTING
VALUE
PASSED
AS
INPUT
TO
THE
FUNCTION
WHEN
THE
FUNCTION
FINISHES
THE
RETURN
VALUE
TAKES
THE
PLACE
OF
THE
FUNCTION
CALL
AS
IF
IT
WERE
THE
VALUE
OF
ANATOMY
OF
A
FUNCTION
CALL
A
VARIABLE
PERHAPS
WITHIN
AN
EXPRESSION
MULTIPLE
ARGUMENTS
LIKE
A
MATHEMATICAL
FUNCTION
A
PYTHON
FUNCTION
CAN
HAVE
MORE
THAN
ONE
PARAMETER
VARIABLE
SO
IT
CAN
BE
CALLED
WITH
MORE
THAN
ONE
ARGU
MENT
THE
FUNCTION
SIGNATURE
LISTS
THE
NAME
OF
EACH
PARAMETER
VARIABLE
SEPARATED
BY
COMMAS
FOR
EXAMPLE
THE
FOLLOWING
FUNCTION
COMPUTES
THE
LENGTH
OF
THE
HYPOT
ENUSE
OF
A
RIGHT
TRIANGLE
WITH
SIDES
OF
LENGTH
A
AND
B
DEF
HYPOT
A
B
RETURN
MATH
SQRT
A
A
B
B
MULTIPLE
FUNCTIONS
YOU
CAN
DEFINE
AS
MANY
FUNCTIONS
AS
YOU
WANT
IN
A
PY
FILE
THE
FUNCTIONS
ARE
INDEPENDENT
EXCEPT
THAT
THEY
MAY
REFER
TO
EACH
OTHER
THROUGH
CALLS
THEY
CAN
APPEAR
IN
ANY
ORDER
IN
THE
FILE
DEF
SQUARE
X
RETURN
X
X
DEF
HYPOT
A
B
RETURN
MATH
SQRT
SQUARE
A
SQUARE
B
HOWEVER
THE
DEFINITION
OF
A
FUNCTION
MUST
APPEAR
BEFORE
ANY
GLOBAL
CODE
THAT
CALLS
IT
THAT
IS
THE
REASON
THAT
A
TYPICAL
PYTHON
PROGRAM
CONTAINS
IMPORT
STATEMENTS
FUNCTION
DEFINITIONS
AND
ARBITRARY
GLOBAL
CODE
IN
THAT
ORDER
MULTIPLE
RETURN
STATEMENTS
YOU
CAN
PUT
RETURN
STATEMENTS
IN
A
FUNCTION
WHER
EVER
YOU
NEED
THEM
CONTROL
GOES
BACK
TO
THE
CALLING
PROGRAM
AS
SOON
AS
THE
FIRST
RETURN
STATEMENT
IS
REACHED
THIS
PRIMALITY
TESTING
FUNCTION
IS
AN
EXAMPLE
OF
A
FUNCTION
THAT
IS
NATURAL
TO
DEFINE
USING
MULTIPLE
RETURN
STATEMENTS
DEF
ISPRIME
N
IF
N
RETURN
FALSE
I
WHILE
I
I
N
IF
N
I
RETURN
FALSE
I
RETURN
TRUE
SINGLE
RETURN
VALUE
A
PYTHON
FUNCTION
PROVIDES
ONLY
ONE
RETURN
VALUE
TO
THE
CALLER
OR
MORE
PRECISELY
IT
RETURNS
A
REFERENCE
TO
ONE
OBJECT
THIS
POLICY
IS
NOT
AS
RESTRICTIVE
AS
IT
MIGHT
SEEM
BECAUSE
PYTHON
DATA
TYPES
CAN
CONTAIN
MORE
INFORMA
TION
THAN
A
SINGLE
NUMBER
BOOLEAN
OR
STRING
FOR
EXAMPLE
YOU
WILL
SEE
LATER
IN
THIS
SECTION
THAT
YOU
CAN
USE
ARRAYS
AS
RETURN
VALUES
SCOPE
THE
SCOPE
OF
A
VARIABLE
IS
THE
SET
OF
STATEMENTS
THAT
CAN
REFER
TO
THAT
VARI
ABLE
DIRECTLY
THE
SCOPE
OF
A
FUNCTION
LOCAL
AND
PARAMETER
VARIABLES
IS
LIMITED
TO
THAT
FUNCTION
THE
SCOPE
OF
A
VARIABLE
DEFINED
IN
GLOBAL
CODE
KNOWN
AS
A
GLOBAL
VARIABLE
IS
LIMITED
TO
THE
PY
FILE
CONTAINING
THAT
VARIABLE
THEREFORE
GLOBAL
CODE
CANNOT
REFER
TO
EITHER
A
FUNCTION
LOCAL
OR
PARAMETER
VARIABLES
NOR
CAN
ONE
FUNC
TION
REFER
TO
EITHER
THE
LOCAL
OR
PARAMETER
VARIABLES
THAT
ARE
DEFINED
IN
ANOTHER
FUNC
TION
WHEN
A
FUNCTION
DEFINES
A
LOCAL
OR
PARAMETER
VARIABLE
WITH
THE
SAME
NAME
AS
A
GLOBAL
VARIABLE
SUCH
AS
I
IN
PROGRAM
THE
VARIABLE
NAME
IN
THE
FUNCTION
REFERS
TO
THE
LOCAL
OR
PARAMETER
VARIABLE
NOT
THE
GLOBAL
VARIABLE
A
GUIDING
PRINCIPLE
WHEN
DESIGNING
SOFTWARE
IS
TO
DEFINE
EACH
VARIABLE
SO
THAT
ITS
SCOPE
IS
AS
SMALL
AS
POSSIBLE
ONE
OF
THE
IMPORTANT
REASONS
THAT
WE
USE
FUNC
TIONS
IS
SO
THAT
CHANGES
MADE
TO
ONE
PART
SCOPE
OF
N
AND
TOTAL
THIS
CODE
SHOULD
NOT
REFER
TO
ARG
OR
VALUE
SCOPE
OF
I
TWO
DIFFERENT
VARIABLES
SCOPE
OF
I
SCOPE
OF
ARG
AND
VALUE
OF
A
PROGRAM
WILL
NOT
AFFECT
AN
UNRELATED
PART
OF
THE
PROGRAM
SO
WHILE
CODE
IN
A
FUNCTION
CAN
REFER
TO
GLOBAL
VARIABLES
IT
SHOULD
NOT
DO
SO
ALL
COMMUNICATION
THIS
CODE
CANNOT
REFER
TO
N
OR
TOTAL
SCOPE
OF
LOCAL
AND
PARAMETER
VARIABLES
FROM
A
CALLER
TO
A
FUNCTION
SHOULD
TAKE
PLACE
VIA
THE
FUNCTION
PARAMETER
VARI
ABLES
AND
ALL
COMMUNICATION
FROM
A
FUNCTION
TO
ITS
CALLER
SHOULD
TAKE
PLACE
VIA
THE
FUNCTION
RETURN
VALUE
IN
SECTION
WE
CONSIDER
A
TECHNIQUE
FOR
REMOVING
MOST
GLOBAL
CODE
THEREBY
LIMITING
SCOPE
AND
THE
POTENTIAL
FOR
UNEXPECTED
INTERACTIONS
DEFAULT
ARGUMENTS
A
PYTHON
FUNCTION
MAY
DESIGNATE
AN
ARGUMENT
TO
BE
OPTIONAL
BY
SPECIFYING
A
DEFAULT
VALUE
FOR
THAT
ARGUMENT
IF
YOU
OMIT
AN
OPTIONAL
ARGUMENT
IN
A
FUNCTION
CALL
THEN
PYTHON
SUBSTITUTES
THE
DEFAULT
VALUE
FOR
THAT
ARGUMENT
WE
HAVE
ALREADY
ENCOUNTERED
A
FEW
EXAMPLES
OF
THIS
FEATURE
FOR
EXAMPLE
MATH
LOG
X
B
RETURNS
THE
BASE
B
LOGARITHM
OF
X
IF
YOU
OMIT
THE
SECOND
ARGUMENT
THEN
B
DEFAULTS
TO
MATH
E
THAT
IS
MATH
LOG
X
RETURNS
THE
NATURAL
LOGARITHM
OF
X
IT
MIGHT
APPEAR
THAT
THE
MATH
MODULE
HAS
TWO
DIFFERENT
LOGARITHM
FUNCTIONS
BUT
IT
ACTUALLY
HAS
JUST
ONE
WITH
AN
OPTIONAL
ARGUMENT
AND
A
DEFAULT
VALUE
YOU
CAN
SPECIFY
AN
OPTIONAL
ARGUMENT
WITH
A
DEFAULT
VALUE
IN
A
USER
DEFINED
FUNCTION
BY
PUTTING
AN
EQUALS
SIGN
FOLLOWED
BY
THE
DEFAULT
VALUE
AFTER
THE
PARAMETER
VARIABLE
IN
THE
FUNCTION
SIGNATURE
YOU
CAN
SPECIFY
MORE
THAN
ONE
OPTIONAL
ARGU
MENT
IN
A
FUNCTION
SIGNATURE
BUT
ALL
OF
THE
OPTIONAL
ARGUMENTS
MUST
FOLLOW
ALL
OF
THE
MANDATORY
ARGUMENTS
FOR
EXAMPLE
CONSIDER
THE
PROBLEM
OF
COMPUTING
THE
NTH
GENERALIZED
HAR
MONIC
NUMBER
OF
ORDER
R
HN
R
NR
FOR
EXAMPLE
AND
THE
GENERALIZED
HARMONIC
NUMBERS
ARE
CLOSELY
RELATED
TO
THE
RIEMANN
ZETA
FUNCTION
FROM
NUMBER
THEORY
NOTE
THAT
THE
NTH
GENERALIZED
HARMONIC
NUMBER
OF
ORDER
R
IS
EQUAL
TO
THE
NTH
HARMONIC
NUMBER
THEREFORE
IT
IS
APPROPRIATE
TO
USE
AS
THE
DEFAULT
VALUE
FOR
R
IF
THE
CALLER
OMITS
THE
SECOND
ARGU
MENT
WE
SPECIFY
BY
WRITING
R
IN
THE
SIGNATURE
DEF
HARMONIC
N
R
TOTAL
FOR
I
IN
RANGE
N
TOTAL
I
R
RETURN
TOTAL
WITH
THIS
DEFINITION
HARMONIC
RETURNS
WHILE
BOTH
HARMONIC
AND
HARMONIC
RETURN
TO
THE
CLIENT
IT
APPEARS
THAT
WE
HAVE
TWO
DIFFERENT
FUNCTIONS
ONE
WITH
A
SINGLE
ARGUMENT
AND
ONE
WITH
TWO
ARGUMENTS
BUT
WE
ACHIEVE
THIS
EFFECT
WITH
A
SINGLE
IMPLEMENTATION
SIDE
EFFECTS
IN
MATHEMATICS
A
FUNCTION
MAPS
ONE
OR
MORE
INPUT
VALUES
TO
SOME
OUTPUT
VALUE
IN
COMPUTER
PROGRAMMING
MANY
FUNCTIONS
FIT
THAT
SAME
MODEL
THEY
ACCEPT
ONE
OR
MORE
ARGUMENTS
AND
THEIR
ONLY
PURPOSE
IS
TO
RETURN
A
VALUE
A
PURE
FUNCTION
IS
A
FUNCTION
THAT
GIVEN
THE
SAME
ARGUMENTS
ALWAYS
RETURN
THE
SAME
VALUE
WITHOUT
PRODUCING
ANY
OBSERVABLE
SIDE
EFFECTS
SUCH
AS
CONSUMING
INPUT
PRODUCING
OUTPUT
OR
OTHERWISE
CHANGING
THE
STATE
OF
THE
SYSTEM
SO
FAR
IN
THIS
SECTION
WE
HAVE
CONSIDERED
ONLY
PURE
FUNCTIONS
HOWEVER
IN
COMPUTER
PROGRAMMING
IT
IS
ALSO
USEFUL
TO
DEFINE
FUNCTIONS
THAT
DO
PRODUCE
SIDE
EFFECTS
IN
FACT
WE
OFTEN
DEFINE
FUNCTIONS
WHOSE
ONLY
PURPOSE
IS
TO
PRODUCE
SIDE
EFFECTS
AN
EXPLICIT
RETURN
STATEMENT
IS
OPTIONAL
IN
SUCH
A
FUNC
TION
CONTROL
RETURNS
TO
THE
CALLER
AFTER
PYTHON
EXECUTES
THE
FUNCTION
LAST
STATEMENT
FUNCTIONS
WITH
NO
SPECIFIED
RETURN
VALUE
ACTUALLY
RETURN
THE
SPECIAL
VALUE
NONE
WHICH
IS
USUALLY
IGNORED
FOR
EXAMPLE
THE
STDIO
WRITE
FUNCTION
HAS
THE
SIDE
EFFECT
OF
WRITING
THE
GIVEN
ARGUMENT
TO
STANDARD
OUTPUT
AND
HAS
NO
SPECIFIED
RETURN
VALUE
SIMILARLY
THE
FOLLOWING
FUNCTION
HAS
THE
SIDE
EFFECT
OF
DRAWING
A
TRIANGLE
TO
STANDARD
DRAWING
AND
HAS
NO
SPECIFIED
RETURN
VALUE
DEF
DRAWTRIANGLE
STDDRAW
LINE
STDDRAW
LINE
STDDRAW
LINE
IT
IS
GENERALLY
POOR
STYLE
TO
COMPOSE
A
FUNCTION
THAT
BOTH
PRODUCES
SIDE
EFFECTS
AND
RETURNS
A
VALUE
ONE
NOTABLE
EXCEPTION
ARISES
IN
FUNCTIONS
THAT
READ
INPUT
FOR
EX
AMPLE
THE
STDIO
READINT
FUNCTION
BOTH
RETURNS
A
VALUE
AN
INTEGER
AND
PRO
DUCES
A
SIDE
EFFECT
CONSUMING
ONE
INTEGER
FROM
STANDARD
INPUT
TYPE
CHECKING
IN
MATHEMATICS
THE
DEFINITION
OF
A
FUNCTION
SPECIFIES
BOTH
THE
DO
MAIN
AND
THE
RANGE
FOR
EXAMPLE
FOR
THE
HARMONIC
NUMBERS
THE
DOMAIN
IS
THE
POSITIVE
INTEGERS
AND
THE
RANGE
IS
THE
POSITIVE
REAL
NUMBERS
IN
PYTHON
WE
DO
NOT
SPECIFY
THE
TYPES
OF
THE
PARAMETER
VARIABLES
OR
THE
TYPE
OF
THE
RETURN
VALUE
AS
LONG
AS
PYTHON
CAN
APPLY
ALL
OF
THE
OPERATIONS
WITHIN
A
FUNCTION
PYTHON
EXECUTES
THE
FUNCTION
AND
RETURNS
A
VALUE
IF
PYTHON
CANNOT
APPLY
AN
OPERATION
TO
A
GIVEN
OBJECT
BECAUSE
IT
IS
OF
THE
WRONG
TYPE
IT
RAISES
A
RUN
TIME
ERROR
TO
INDICATE
THE
INVALID
TYPE
FOR
EXAMPLE
IF
YOU
CALL
THE
SQUARE
FUNCTION
DEFINED
EARLIER
WITH
AN
INT
ARGUMENT
THE
RESULT
IS
AN
INT
IF
YOU
CALL
IT
WITH
A
FLOAT
ARGUMENT
THE
RESULT
IS
A
FLOAT
HOWEVER
IF
YOU
CALL
IT
WITH
A
STRING
ARGUMENT
THEN
PYTHON
RAISES
A
TYPEERROR
AT
RUN
TIME
THIS
FLEXIBILITY
IS
A
POPULAR
FEATURE
OF
PYTHON
KNOWN
AS
POLYMORPHISM
BE
CAUSE
IT
ALLOWS
US
TO
DEFINE
A
SINGLE
FUNCTION
FOR
USE
WITH
OBJECTS
OF
DIFFERENT
TYPES
IT
CAN
ALSO
LEAD
TO
UNEXPECTED
ERRORS
WHEN
WE
CALL
A
FUNCTION
WITH
ARGUMENTS
OF
UN
ANTICIPATED
TYPES
IN
PRINCIPLE
WE
COULD
INCLUDE
CODE
TO
CHECK
FOR
SUCH
ERRORS
AND
WE
COULD
CAREFULLY
SPECIFY
WHICH
TYPES
OF
DATA
EACH
FUNCTION
IS
SUPPOSED
TO
WORK
WITH
LIKE
MOST
PYTHON
PROGRAMMERS
WE
REFRAIN
FROM
DOING
SO
HOWEVER
IN
THIS
BOOK
OUR
MESSAGE
IS
THAT
YOU
SHOULD
ALWAYS
BE
AWARE
OF
THE
TYPE
OF
YOUR
DATA
AND
THE
FUNCTIONS
THAT
WE
CONSIDER
IN
THIS
BOOK
ARE
BUILT
IN
LINE
WITH
THIS
PHILOSOPHY
WHICH
ADMITTEDLY
CLASHES
WITH
PYTHON
TENDENCY
TOWARD
POLYMORPHISM
WE
WILL
DISCUSS
THIS
ISSUE
IN
SOME
DETAIL
IN
SECTION
THE
TABLE
BELOW
SUMMARIZES
OUR
DISCUSSION
BY
COLLECTING
TOGETHER
THE
FUNCTION
DEFI
NITIONS
THAT
WE
HAVE
EXAMINED
SO
FAR
TO
CHECK
YOUR
UNDERSTANDING
TAKE
THE
TIME
TO
REREAD
THESE
EXAMPLES
CAREFULLY
PRIMALITY
TEST
DEF
ISPRIME
N
IF
N
RETURN
FALSE
I
WHILE
I
I
N
IF
N
I
RETURN
FALSE
I
RETURN
TRUE
HYPOTENUSE
OF
A
RIGHT
TRIANGLE
DEF
HYPOT
A
B
RETURN
MATH
SQRT
A
A
B
B
GENERALIZED
HARMONIC
NUMBER
DEF
HARMONIC
N
R
TOTAL
FOR
I
IN
RANGE
N
TOTAL
I
R
RETURN
TOTAL
DRAW
A
TRIANGLE
DEF
DRAWTRIANGLE
STDDRAW
LINE
STDDRAW
LINE
STDDRAW
LINE
Y0
TYPICAL
CODE
FOR
IMPLEMENTING
FUNCTIONS
IMPLEMENTING
MATHEMATICAL
FUNCTIONS
WHY
NOT
JUST
USE
THE
PYTHON
BUILT
IN
FUNCTIONS
AND
THOSE
THAT
ARE
DEFINED
IN
THE
STANDARD
OR
EXTENSION
PYTHON
MOD
ULES
FOR
EXAMPLE
WHY
NOT
USE
THE
MATH
HYPOT
FUNCTION
INSTEAD
OF
DEFINING
OUR
OWN
HYPOT
FUNCTION
THE
ANSWER
TO
THIS
QUESTION
IS
THAT
WE
DO
USE
SUCH
FUNC
TIONS
WHEN
THEY
ARE
PRESENT
BECAUSE
THEY
ARE
LIKELY
TO
BE
FASTER
AND
MORE
ACCURATE
HOWEVER
THERE
IS
AN
UNLIMITED
NUMBER
OF
FUNCTIONS
THAT
WE
MAY
WISH
TO
USE
AND
ONLY
A
FINITE
NUMBER
OF
FUNCTIONS
IS
DEFINED
IN
THE
PYTHON
STANDARD
AND
EXTENSION
MODULES
WHEN
YOU
NEED
A
FUNCTION
THAT
IS
NOT
DEFINED
IN
THE
PYTHON
STANDARD
OR
EXTENSION
MODULES
YOU
NEED
TO
DEFINE
THE
FUNCTION
YOURSELF
AS
AN
EXAMPLE
WE
CONSIDER
THE
KIND
OF
CODE
REQUIRED
FOR
A
FAMILIAR
AND
IM
PORTANT
APPLICATION
THAT
IS
OF
INTEREST
TO
MANY
POTENTIAL
COLLEGE
STUDENTS
IN
THE
UNITED
STATES
IN
A
RECENT
YEAR
OVER
MILLION
STUDENTS
TOOK
THE
SCHOLASTIC
APTITUDE
TEST
SAT
THE
TEST
CONSISTS
OF
TWO
MAJOR
SECTIONS
CRITICAL
READING
AND
MATHEMAT
ICS
SCORES
RANGE
FROM
LOWEST
TO
HIGHEST
ON
EACH
SECTION
SO
OVERALL
TEST
SCORES
RANGE
FROM
TO
MANY
UNIVERSITIES
CONSIDER
THESE
SCORES
WHEN
MAK
ING
IMPORTANT
DECISIONS
FOR
EXAMPLE
STUDENT
ATHLETES
ARE
REQUIRED
BY
THE
NATIONAL
COLLEGIATE
ATHLETIC
ASSOCIATION
NCAA
AND
THUS
BY
MANY
UNIVERSITIES
TO
HAVE
A
COMBINED
SCORE
OF
AT
LEAST
OUT
OF
AND
THE
MINIMUM
ELIGIBILITY
REQUIRE
MENT
FOR
CERTAIN
ACADEMIC
SCHOLARSHIPS
IS
OUT
OF
WHAT
PERCENTAGE
OF
TEST
TAKERS
IS
INELIGIBLE
FOR
ATHLETICS
WHAT
PERCENTAGE
IS
ELIGIBLE
FOR
THE
SCHOLARSHIPS
TWO
FUNCTIONS
FROM
STATISTICS
ENABLE
US
TO
COMPUTE
ACCURATE
ANSWERS
TO
THESE
QUESTIONS
THE
STANDARD
NORMAL
GAUSSIAN
PROBABILITY
DENSITY
FUNCTION
IS
CHARACTERIZED
BY
THE
FAMILIAR
BELL
SHAPED
CURVE
AND
DEFINED
BY
THE
FORMULA
X
E
THE
STANDARD
NORMAL
GAUSSIAN
CUMULATIVE
DISTRIBUTION
FUNCTION
F
Z
IS
DEFINED
TO
BE
THE
AREA
UNDER
THE
CURVE
DEFINED
BY
X
ABOVE
THE
X
AXIS
AND
TO
THE
LEFT
OF
THE
VERTICAL
LINE
X
Z
THESE
FUNCTIONS
PLAY
AN
IMPORTANT
ROLE
IN
SCIENCE
ENGINEERING
AND
FINANCE
BECAUSE
THEY
ARISE
AS
ACCURATE
MODELS
THROUGHOUT
THE
NATURAL
WORLD
AND
BE
CAUSE
THEY
ARE
ESSENTIAL
IN
UNDERSTANDING
EXPERIMENTAL
ERROR
IN
PARTICULAR
THESE
FUNCTIONS
ARE
KNOWN
TO
ACCU
RATELY
DESCRIBE
THE
DISTRIBUTION
OF
TEST
SCORES
IN
OUR
EX
AMPLE
AS
A
FUNCTION
OF
THE
MEAN
AVERAGE
VALUE
OF
THE
SCORES
AND
THE
STANDARD
DEVIATION
SQUARE
ROOT
OF
THE
AVERAGE
OF
THE
SQUARES
OF
THE
DIFFERENCES
BETWEEN
EACH
SCORE
AND
THE
MEAN
WHICH
ARE
PUBLISHED
EACH
YEAR
GIV
EN
THE
MEAN
AND
THE
STANDARD
DEVIATION
OF
THE
TEST
SCORES
THE
PERCENTAGE
OF
STUDENTS
WITH
SCORES
LESS
THAN
DISTRIBUTION
CP
AREA
IS
P
CUMULATIVE
P
P
CP
X
X
Z
A
GIVEN
VALUE
Z
IS
CLOSELY
APPROXIMATED
BY
THE
FUNCTION
F
Z
F
Z
FUNCTIONS
TO
CALCULATE
AND
F
ARE
NOT
AVAILABLE
IN
PYTHON
MATH
MODULE
SO
WE
DEVELOP
OUR
OWN
IMPLEMENTATIONS
GAUSSIAN
PROBABILITY
FUNCTIONS
CLOSED
FORM
IN
THE
SIMPLEST
SITUATION
WE
HAVE
A
CLOSED
FORM
MATHEMATICAL
FOR
MULA
DEFINING
OUR
FUNCTION
IN
TERMS
OF
FUNCTIONS
THAT
ARE
IMPLEMENTED
IN
PYTHON
MATH
MODULE
THIS
SITUATION
IS
THE
CASE
FOR
THE
MATH
MODULE
INCLUDES
FUNC
TIONS
TO
COMPUTE
THE
EXPONENTIAL
AND
THE
SQUARE
ROOT
FUNCTIONS
AND
A
CONSTANT
VALUE
FOR
SO
A
FUNCTION
PDF
CORRESPONDING
TO
THE
MATHEMATICAL
DEFINITION
IS
EASY
TO
IMPLEMENT
FOR
CONVENIENCE
GAUSS
PY
PROGRAM
USES
THE
DEFAULT
ARGUMENTS
AND
AND
ACTUALLY
COMPUTES
X
X
NO
CLOSED
FORM
IF
NO
FORMULA
IS
KNOWN
WE
MAY
NEED
A
MORE
COMPLICATED
ALGO
RITHM
TO
COMPUTE
FUNCTION
VALUES
THIS
SITUATION
IS
THE
CASE
FOR
F
NO
CLOSED
FORM
EXPRESSION
EXISTS
FOR
THIS
FUNCTION
ALGORITHMS
TO
COMPUTE
FUNCTION
VALUES
SOME
TIMES
FOLLOW
IMMEDIATELY
FROM
TAYLOR
SERIES
APPROXIMATIONS
BUT
DEVELOPING
RELI
ABLY
ACCURATE
IMPLEMENTATIONS
OF
MATHEMATICAL
FUNCTIONS
IS
AN
ART
AND
A
SCIENCE
THAT
NEEDS
TO
BE
ADDRESSED
CAREFULLY
TAKING
ADVANTAGE
OF
THE
KNOWLEDGE
BUILT
UP
IN
MATHEMATICS
OVER
THE
PAST
SEVERAL
CENTURIES
MANY
DIFFERENT
APPROACHES
HAVE
BEEN
STUDIED
FOR
EVALUATING
F
FOR
EXAMPLE
A
TAYLOR
SERIES
APPROXIMATION
TO
THE
RATIO
OF
F
AND
TURNS
OUT
TO
BE
AN
EFFECTIVE
BASIS
FOR
EVALUATING
THE
FUNCTION
F
Z
Z
Z
Z
Z
Z
THIS
FORMULA
READILY
TRANSLATES
TO
THE
PYTHON
CODE
FOR
THE
FUNCTION
CDF
IN
PRO
GRAM
FOR
SMALL
RESPECTIVELY
LARGE
Z
THE
VALUE
IS
EXTREMELY
CLOSE
TO
RESPEC
TIVELY
SO
THE
CODE
DIRECTLY
RETURNS
RESPECTIVELY
OTHERWISE
IT
USES
THE
TAYLOR
SERIES
TO
ADD
TERMS
UNTIL
THE
SUM
CONVERGES
AGAIN
FOR
CONVENIENCE
PROGRAM
ACTUALLY
COMPUTES
F
Z
F
Z
USING
THE
DEFAULTS
AND
RUNNING
GAUSS
PY
WITH
THE
APPROPRIATE
ARGUMENTS
ON
THE
COMMAND
LINE
TELLS
US
THAT
ABOUT
OF
THE
TEST
TAKERS
WERE
INELIGIBLE
FOR
ATHLETICS
IN
A
YEAR
WHEN
THE
MEAN
WAS
AND
THE
STANDARD
DEVIATION
WAS
IN
THE
SAME
YEAR
ABOUT
PERCENT
QUALIFIED
FOR
ACADEMIC
SCHOLARSHIPS
COMPUTING
WITH
MATHEMATICAL
FUNCTIONS
OF
ALL
SORTS
PLAYS
A
CENTRAL
ROLE
IN
SCIENCE
AND
ENGINEERING
IN
A
GREAT
MANY
APPLICATIONS
THE
FUNCTIONS
THAT
YOU
NEED
ARE
EXPRESSED
IN
TERMS
OF
THE
FUNCTIONS
IN
PYTHON
MATH
MODULE
AS
WE
HAVE
JUST
SEEN
WITH
PDF
OR
IN
TERMS
OF
A
TAYLOR
SERIES
APPROXIMATION
OR
SOME
OTHER
FORMULA
TION
THAT
IS
EASY
TO
COMPUTE
AS
WE
HAVE
JUST
SEEN
WITH
CDF
INDEED
SUPPORT
FOR
SUCH
COMPUTATIONS
HAS
PLAYED
A
CENTRAL
ROLE
THROUGHOUT
THE
EVOLUTION
OF
COMPUT
ING
SYSTEMS
AND
PROGRAMMING
LANGUAGES
PROGRAM
GAUSSIAN
FUNCTIONS
GAUSS
PY
IMPORT
MATH
IMPORT
SYS
IMPORT
STDIO
DEF
PDF
X
MU
SIGMA
X
FLOAT
X
MU
SIGMA
RETURN
MATH
EXP
X
X
MATH
SQRT
MATH
PI
SIGMA
DEF
CDF
Z
MU
SIGMA
Z
FLOAT
Z
MU
SIGMA
IF
Z
RETURN
IF
Z
RETURN
TOTAL
TERM
Z
I
WHILE
TOTAL
TOTAL
TERM
TOTAL
TERM
TERM
Z
Z
I
I
RETURN
TOTAL
PDF
Z
Z
FLOAT
SYS
ARGV
MU
FLOAT
SYS
ARGV
SIGMA
FLOAT
SYS
ARGV
STDIO
WRITELN
CDF
Z
MU
SIGMA
TOTAL
CUMULATED
SUM
TERM
CURRENT
TERM
THIS
CODE
IMPLEMENTS
THE
GAUSSIAN
NORMAL
PROBABILITY
DENSITY
PDF
AND
CUMULATIVE
DIS
TRIBUTION
CDF
FUNCTIONS
WHICH
ARE
NOT
IMPLEMENTED
IN
PYTHON
MATH
LIBRARY
THE
PDF
IMPLEMENTATION
FOLLOWS
DIRECTLY
FROM
ITS
DEFINITION
AND
THE
CDF
IMPLEMENTATION
USES
A
TAY
LOR
SERIES
AND
ALSO
CALLS
PDF
SEE
ACCOMPANYING
TEXT
AT
LEFT
AND
EXERCISE
NOTE
IF
YOU
ARE
REFERRING
TO
THIS
CODE
FOR
USE
IN
ANOTHER
PROGRAM
PLEASE
SEE
GAUSSIAN
PY
PROGRAM
WHICH
IS
DESIGNED
FOR
REUSE
PYTHON
GAUSS
PY
PYTHON
GAUSS
PY
USING
FUNCTIONS
TO
ORGANIZE
CODE
BEYOND
EVALUATING
MATHEMATICAL
FUNC
TIONS
THE
PROCESS
OF
CALCULATING
AN
OUTPUT
VALUE
AS
A
FUNCTION
OF
INPUT
VALUES
IS
IMPORTANT
AS
A
GENERAL
TECHNIQUE
FOR
ORGANIZING
CONTROL
FLOW
IN
ANY
COMPUTATION
DOING
SO
IS
A
SIMPLE
EXAMPLE
OF
AN
EXTREMELY
IMPORTANT
PRINCIPLE
THAT
IS
A
PRIME
GUIDING
FORCE
FOR
ANY
GOOD
PROGRAMMER
WHENEVER
YOU
CAN
CLEARLY
SEPARATE
TASKS
WITHIN
A
COMPUTATION
YOU
SHOULD
DO
SO
FUNCTIONS
ARE
NATURAL
AND
UNIVERSAL
MECHANISM
FOR
EXPRESSING
COMPUTATIONAL
TASKS
INDEED
THE
BIRD
EYE
VIEW
OF
A
PYTHON
PROGRAM
THAT
WE
BEGAN
WITH
IN
SEC
TION
WAS
EQUIVALENT
TO
A
FUNCTION
WE
BEGAN
BY
THINKING
OF
A
PYTHON
PROGRAM
AS
A
FUNCTION
THAT
TRANSFORMS
COMMAND
LINE
ARGUMENTS
INTO
AN
OUTPUT
STRING
THIS
VIEW
EXPRESSES
ITSELF
AT
MANY
DIFFERENT
LEVELS
OF
COMPUTATION
IN
PARTICULAR
IT
IS
GENERALLY
THE
CASE
THAT
YOU
CAN
EXPRESS
A
LONG
PROGRAM
MORE
NATURALLY
IN
TERMS
OF
FUNCTIONS
INSTEAD
OF
AS
A
SEQUENCE
OF
PYTHON
ASSIGNMENT
CONDITIONAL
AND
LOOP
STATEMENTS
WITH
THE
ABILITY
TO
DEFINE
FUNCTIONS
YOU
CAN
BETTER
ORGANIZE
YOUR
PRO
GRAMS
BY
DEFINING
FUNCTIONS
WITHIN
THEM
WHEN
APPROPRIATE
FOR
EXAMPLE
COUPON
PY
PROGRAM
ON
THE
FACING
PAGE
IS
AN
IMPROVED
VERSION
OF
COUPONCOLLECTOR
PY
PROGRAM
THAT
BETTER
SEPARATES
THE
INDIVID
UAL
COMPONENTS
OF
THE
COMPUTATION
IF
YOU
STUDY
PROGRAM
YOU
WILL
IDENTIFY
THREE
SEPARATE
TASKS
GIVEN
THE
NUMBER
OF
COUPON
VALUES
N
COMPUTE
A
RANDOM
COUPON
VALUE
GIVEN
N
DO
THE
COUPON
COLLECTION
EXPERIMENT
GET
N
FROM
THE
COMMAND
LINE
THEN
COMPUTE
AND
WRITE
THE
RESULT
PROGRAM
REARRANGES
THE
CODE
TO
REFLECT
THE
REALITY
THAT
THESE
THREE
ACTIVITIES
UNDERLIE
THE
COMPUTATION
THE
FIRST
TWO
ARE
IMPLEMENTED
AS
FUNCTIONS
THE
THIRD
AS
GLOBAL
CODE
WITH
THIS
ORGANIZATION
WE
COULD
CHANGE
GETCOUPON
FOR
EXAMPLE
WE
MIGHT
WANT
TO
DRAW
THE
RANDOM
NUMBERS
FROM
A
DIFFERENT
DISTRIBUTION
OR
THE
GLOBAL
CODE
FOR
EXAMPLE
WE
MIGHT
WANT
TO
TAKE
MULTIPLE
INPUTS
OR
RUN
MULTIPLE
EXPERIMENTS
WITHOUT
WORRYING
ABOUT
THE
EFFECT
OF
ANY
OF
THESE
CHANGES
ON
COLLECT
USING
FUNCTIONS
ISOLATES
THE
IMPLEMENTATION
OF
EACH
COMPONENT
OF
THE
COLLEC
TION
EXPERIMENT
FROM
OTHERS
OR
ENCAPSULATES
THEM
TYPICALLY
PROGRAMS
HAVE
MANY
INDEPENDENT
COMPONENTS
WHICH
MAGNIFIES
THE
BENEFITS
OF
SEPARATING
THEM
INTO
DIFFERENT
FUNCTIONS
WE
WILL
DISCUSS
THESE
BENEFITS
IN
FURTHER
DETAIL
AFTER
WE
HAVE
SEEN
SEVERAL
OTHER
EXAMPLES
BUT
YOU
CERTAINLY
CAN
APPRECIATE
THAT
IT
IS
BETTER
TO
EXPRESS
A
COMPUTATION
IN
A
PROGRAM
BY
BREAKING
IT
UP
INTO
FUNCTIONS
JUST
AS
IT
IS
BETTER
TO
EXPRESS
AN
IDEA
IN
AN
ESSAY
BY
BREAKING
IT
UP
INTO
PARAGRAPHS
WHENEVER
YOU
CAN
CLEARLY
SEPARATE
TASKS
WITHIN
A
COMPUTATION
YOU
SHOULD
DO
SO
PROGRAM
COUPON
COLLECTOR
REVISITED
COUPON
PY
IMPORT
RANDOM
IMPORT
SYS
IMPORT
STDARRAY
IMPORT
STDIO
DEF
GETCOUPON
N
RETURN
RANDOM
RANDRANGE
N
DEF
COLLECT
N
ISCOLLECTED
STDARRAY
N
FALSE
COUNT
COLLECTEDCOUNT
WHILE
COLLECTEDCOUNT
N
VALUE
GETCOUPON
N
COUNT
IF
NOT
ISCOLLECTED
VALUE
COLLECTEDCOUNT
ISCOLLECTED
VALUE
TRUE
RETURN
COUNT
N
INT
SYS
ARGV
RESULT
COLLECT
N
STDIO
WRITELN
RESULT
N
OF
COUPON
VALUES
TO
N
ISCOLLECTED
I
HAS
COUPON
I
BEEN
COLLECTED
COUNT
OF
COUPONS
COLLECTED
COLLECTEDCOUNT
OF
DISTINCT
COUPONS
COLLECTED
VALUE
VALUE
OF
CURRENT
COUPON
THIS
VERSION
OF
PROGRAM
ILLUSTRATES
THE
STYLE
OF
ENCAPSULATING
COMPUTATIONS
IN
FUNCTIONS
THIS
CODE
HAS
THE
SAME
EFFECT
AS
COUPONCOLLECTOR
PY
BUT
BETTER
SEPARATES
THE
CODE
INTO
ITS
THREE
CONSTITUENT
PIECES
GENERATING
A
RANDOM
INTEGER
BETWEEN
AND
N
RUNNING
A
COLLECTION
EXPERIMENT
AND
MANAGING
THE
I
O
PYTHON
COUPON
PY
PYTHON
COUPON
PY
PYTHON
COUPON
PY
PASSING
ARGUMENTS
AND
RETURNING
VALUES
NEXT
WE
EXAMINE
THE
SPECIFICS
OF
PYTHON
MECHANISMS
FOR
PASSING
ARGUMENTS
TO
AND
RETURNING
VALUES
FROM
FUNC
TIONS
THESE
MECHANISMS
ARE
CONCEPTUALLY
VERY
SIMPLE
BUT
IT
IS
WORTHWHILE
TO
TAKE
THE
TIME
TO
UNDERSTAND
THEM
FULLY
AS
THE
EFFECTS
ARE
ACTUALLY
PROFOUND
UNDERSTAND
ING
ARGUMENT
PASSING
AND
RETURN
VALUE
MECHANISMS
IS
KEY
TO
LEARNING
ANY
NEW
PROGRAMMING
LANGUAGE
IN
THE
CASE
OF
PYTHON
THE
CONCEPTS
OF
IMMUTABILITY
AND
ALIASING
PLAY
A
CENTRAL
ROLE
CALL
BY
OBJECT
REFERENCE
YOU
CAN
USE
PARAMETER
VARIABLES
ANYWHERE
IN
THE
BODY
OF
THE
FUNCTION
IN
THE
SAME
WAY
AS
YOU
USE
LOCAL
VARIABLES
THE
ONLY
DIFFERENCE
BETWEEN
A
PARAMETER
VARIABLE
AND
A
LOCAL
VARIABLE
IS
THAT
PYTHON
INITIALIZES
THE
PARAMETER
VARIABLE
WITH
THE
CORRESPONDING
ARGUMENT
PROVIDED
BY
THE
CALLING
CODE
WE
REFER
TO
THIS
APPROACH
AS
CALL
BY
OBJECT
REFERENCE
IT
IS
MORE
COMMONLY
KNOWN
AS
CALL
BY
VALUE
WHERE
THE
VALUE
IS
ALWAYS
AN
OBJECT
REFERENCE
NOT
THE
OBJECT
VALUE
ONE
CONSEQUENCE
OF
THIS
APPROACH
IS
THAT
IF
A
PARAMETER
VARIABLE
REFERS
TO
A
MUTABLE
OB
JECT
AND
YOU
CHANGE
THAT
OBJECT
VALUE
WITHIN
A
FUNCTION
THEN
THIS
ALSO
CHANGES
THE
OBJECT
VALUE
IN
THE
CALLING
CODE
BECAUSE
IT
IS
THE
SAME
OBJECT
NEXT
WE
EXPLORE
THE
RAMIFICATIONS
OF
THIS
APPROACH
IMMUTABILITY
AND
ALIASING
AS
DISCUSSED
IN
SECTION
ARRAYS
ARE
MUTABLE
DATA
TYPES
BECAUSE
WE
CAN
CHANGE
ARRAY
ELEMENTS
BY
CONTRAST
A
DATA
TYPE
IS
IMMUTABLE
IF
IT
IS
NOT
POSSIBLE
TO
CHANGE
THE
VALUE
OF
AN
OBJECT
OF
THAT
TYPE
THE
OTHER
DATA
TYPES
THAT
WE
HAVE
BEEN
US
ING
INT
FLOAT
STR
AND
BOOL
ARE
ALL
IMMUTABLE
IN
AN
IMMUTABLE
DATA
TYPE
OPERATIONS
THAT
MIGHT
SEEM
TO
CHANGE
A
VALUE
ACTUALLY
RESULT
IN
THE
CREATION
OF
A
NEW
OBJECT
AS
ILLUSTRATED
IN
THE
SIMPLE
EXAMPLE
AT
RIGHT
FIRST
THE
STATEMENT
I
CREATES
AN
INTEGER
AND
ASSIGNS
TO
I
A
REFERENCE
TO
THAT
INTEGER
THEN
J
I
ASSIGNS
I
AN
OBJECT
REFERENCE
TO
J
SO
BOTH
I
AND
J
REFERENCE
THE
SAME
OBJECT
THE
INTEGER
TWO
VARIABLES
THAT
REFERENCE
THE
SAME
OBJECTS
ARE
SAID
TO
BE
ALIASES
NEXT
J
RESULTS
IN
J
REFERENCING
AN
OBJECT
WITH
VALUE
BUT
IT
DOES
NOT
DO
SO
BY
CHANG
ING
THE
VALUE
OF
THE
EXISTING
INTEGER
FROM
TO
IN
INFORMAL
TRACE
I
I
J
I
J
OBJECT
LEVEL
TRACE
I
I
J
I
J
I
J
J
I
J
DEED
SINCE
INT
OBJECTS
ARE
IMMUTABLE
NO
STATEMENT
IMMUTABILITY
OF
INTEGERS
CAN
CHANGE
THE
VALUE
OF
THAT
EXISTING
INTEGER
INSTEAD
THAT
STATEMENT
CREATES
A
NEW
INTEGER
ADDS
IT
TO
THE
INTEGER
TO
CREATE
ANOTHER
NEW
INTEGER
AND
ASSIGNS
TO
J
A
REFERENCE
TO
THAT
INTEGER
BUT
I
STILL
REFERENCES
THE
ORIGINAL
NOTE
THAT
THE
NEW
INTEGER
HAS
NO
REFERENCE
TO
IT
IN
THE
END
THAT
IS
THE
SYSTEM
CONCERN
NOT
OURS
THE
IMMUTABILITY
OF
INTEGERS
FLOATS
STRINGS
AND
BOOLEANS
IS
A
FUNDAMENTAL
ASPECT
OF
PYTHON
WE
WILL
CONSIDER
THE
ADVANTAGES
AND
DISADVANTAGES
OF
THIS
APPROACH
IN
MORE
DETAIL
IN
SECTION
INTEGERS
FLOATS
BOOLEANS
AND
STRINGS
AS
ARGUMENTS
THE
KEY
POINT
TO
REMEMBER
ABOUT
PASSING
ARGUMENTS
TO
FUNCTIONS
IN
PYTHON
IS
THAT
WHENEVER
YOU
PASS
ARGU
MENTS
TO
A
FUNCTION
THE
ARGUMENTS
AND
THE
FUNCTION
PARAMETER
VARIABLES
BECOME
ALIASES
IN
PRACTICE
THIS
IS
THE
PREDOMINANT
USE
OF
ALIASING
IN
PYTHON
AND
IT
IS
IM
PORTANT
TO
UNDERSTAND
ITS
EFFECTS
FOR
PURPOSES
OF
ILLUSTRATION
SUPPOSE
THAT
WE
NEED
A
FUNCTION
THAT
INCREMENTS
AN
INTEGER
OUR
DISCUSSION
APPLIES
TO
ANY
MORE
COMPLI
CATED
FUNCTION
AS
WELL
A
PROGRAMMER
NEW
TO
PYTHON
MIGHT
TRY
THIS
DEFINITION
DEF
INC
J
J
AND
THEN
EXPECT
TO
INCREMENT
AN
INTEGER
I
WITH
THE
CALL
INC
I
CODE
LIKE
THIS
WOULD
WORK
IN
SOME
PROGRAM
MING
LANGUAGES
BUT
IT
HAS
NO
EFFECT
IN
PYTHON
AS
SHOWN
IN
THE
FIGURE
AT
RIGHT
FIRST
THE
STATEMENT
I
ASSIGNS
TO
GLOBAL
VARIABLE
I
A
REFERENCE
TO
THE
INTEGER
THEN
THE
STATEMENT
INC
I
PASSES
I
AN
OBJECT
REFERENCE
TO
THE
INC
FUNCTION
THAT
OBJECT
REFERENCE
IS
ASSIGNED
TO
THE
PARAMETER
VARIABLE
J
AT
THIS
POINT
I
AND
J
ARE
ALIASES
AS
BEFORE
THE
INC
FUNCTION
J
STATE
MENT
DOES
NOT
CHANGE
THE
INTEGER
BUT
RATHER
CREATES
A
NEW
INTEGER
AND
ASSIGNS
A
REFERENCE
TO
THAT
INTEGER
TO
J
BUT
WHEN
THE
INC
FUNCTION
RETURNS
TO
ITS
CALLER
ITS
PARAMETER
VARIABLE
J
GOES
OUT
OF
SCOPE
AND
THE
VARI
ABLE
I
STILL
REFERENCES
THE
INTEGER
THIS
EXAMPLE
ILLUSTRATES
THAT
IN
PYTHON
A
FUNCTION
CANNOT
PRODUCE
THE
SIDE
EFFECT
OF
CHANGING
THE
VALUE
OF
AN
INTEGER
OBJECT
NOTHING
CAN
DO
SO
TO
INCREMENT
VARI
INFORMAL
TRACE
I
I
INC
I
J
AFTER
RETURN
OBJECT
LEVEL
TRACE
I
I
INC
I
J
I
J
J
I
AFTER
RETURN
I
J
ABLE
I
WE
COULD
USE
THE
DEFINITION
ALIASING
IN
A
FUNCTION
CALL
DEF
INC
J
J
RETURN
J
AND
CALL
THE
FUNCTION
WITH
THE
ASSIGNMENT
STATEMENT
I
INC
I
THE
SAME
HOLDS
TRUE
FOR
ANY
IMMUTABLE
TYPE
A
FUNCTION
CANNOT
CHANGE
THE
VALUE
OF
AN
INTEGER
A
FLOAT
A
BOOLEAN
OR
A
STRING
ARRAYS
AS
ARGUMENTS
WHEN
A
FUNCTION
TAKES
AN
ARRAY
AS
AN
ARGUMENT
IT
IMPLE
MENTS
A
FUNCTION
THAT
OPERATES
ON
AN
ARBITRARY
NUMBER
OF
OBJECTS
FOR
EXAMPLE
THE
FOLLOWING
FUNCTION
COMPUTES
THE
MEAN
AVERAGE
OF
AN
ARRAY
OF
FLOATS
OR
INTEGERS
DEF
MEAN
A
TOTAL
FOR
V
IN
A
TOTAL
V
RETURN
TOTAL
LEN
A
WE
HAVE
BEEN
USING
ARRAYS
AS
ARGUMENTS
FROM
THE
BEGINNING
OF
THE
BOOK
FOR
EX
AMPLE
BY
CONVENTION
PYTHON
COLLECTS
THE
STRINGS
THAT
YOU
TYPE
AFTER
THE
PROGRAM
NAME
IN
THE
PYTHON
COMMAND
INTO
AN
ARRAY
SYS
ARGV
AND
IMPLICITLY
CALLS
YOUR
GLOBAL
CODE
WITH
THAT
ARRAY
OF
STRINGS
AS
THE
ARGUMENT
SIDE
EFFECTS
WITH
ARRAYS
SINCE
ARRAYS
ARE
MUTABLE
IT
IS
OFTEN
THE
CASE
THAT
THE
PUR
POSE
OF
A
FUNCTION
THAT
TAKES
AN
ARRAY
AS
ARGUMENT
IS
TO
PRODUCE
A
SIDE
EFFECT
SUCH
AS
CHANGING
THE
ORDER
OF
ARRAY
ELEMENTS
A
PROTOTYPICAL
EXAMPLE
OF
SUCH
A
FUNC
TION
IS
ONE
THAT
EXCHANGES
THE
ELEMENTS
AT
TWO
GIVEN
INDICES
IN
A
GIVEN
ARRAY
WE
CAN
ADAPT
THE
CODE
THAT
WE
EXAMINED
AT
THE
BEGINNING
OF
SECTION
DEF
EXCHANGE
A
I
J
TEMP
A
I
A
I
A
J
A
J
TEMP
THIS
IMPLEMENTATION
STEMS
NATURALLY
FROM
THE
PYTHON
ARRAY
REPRESENTATION
THE
FIRST
PARAMETER
VARIABLE
IN
EXCHANGE
IS
A
REFERENCE
TO
THE
ARRAY
NOT
TO
ALL
OF
THE
ARRAY
ELEMENTS
WHEN
YOU
PASS
AN
ARRAY
AS
AN
ARGUMENT
TO
A
FUNCTION
YOU
ARE
GIV
ING
IT
THE
OPPORTUNITY
TO
OPERATE
ON
THAT
ARRAY
NOT
A
COPY
OF
IT
A
FORMAL
TRACE
OF
A
CALL
ON
THIS
FUNCTION
IS
SHOWN
ON
THE
FACING
PAGE
THIS
DIAGRAM
IS
WORTHY
OF
CAREFUL
STUDY
TO
CHECK
YOUR
UNDERSTANDING
OF
PYTHON
FUNCTION
CALL
MECHANISM
A
SECOND
PROTOTYPICAL
EXAMPLE
OF
A
FUNCTION
THAT
TAKES
AN
ARRAY
ARGUMENT
AND
PRODUCES
SIDE
EFFECTS
IS
ONE
THAT
RANDOMLY
SHUFFLES
THE
ELEMENTS
IN
THE
ARRAY
USING
THIS
VERSION
OF
THE
ALGORITHM
THAT
WE
EXAMINED
IN
SECTION
AND
THE
EX
CHANGE
FUNCTION
JUST
DEFINED
DEF
SHUFFLE
A
N
LEN
A
FOR
I
IN
RANGE
N
R
RANDOM
RANDRANGE
I
N
EXCHANGE
A
I
R
INCIDENTALLY
PYTHON
STANDARD
FUNCTION
RANDOM
SHUFFLE
DOES
THE
SAME
TASK
AS
ANOTHER
EXAMPLE
WE
WILL
CONSIDER
IN
SECTION
FUNCTIONS
THAT
SORT
AN
ARRAY
REARRANGE
ITS
ELEMENTS
SO
THAT
THEY
ARE
IN
ORDER
ARRAYS
AS
RETURN
VALUES
A
FUNCTION
THAT
SORTS
SHUFFLES
OR
OTHERWISE
MODIFIES
AN
ARRAY
TAKEN
AS
ARGUMENT
DOES
NOT
HAVE
TO
RETURN
A
REFER
ENCE
TO
THAT
ARRAY
BECAUSE
IT
IS
CHANGING
THE
CONTENTS
OF
A
CLIENT
ARRAY
NOT
A
COPY
BUT
THERE
ARE
MANY
SITUATIONS
WHERE
IT
IS
USEFUL
FOR
A
FUNC
TION
TO
PROVIDE
AN
ARRAY
AS
A
RETURN
VALUE
CHIEF
AMONG
THESE
ARE
FUNCTIONS
THAT
CREATE
ARRAYS
FOR
THE
PURPOSE
OF
RETURNING
MULTIPLE
OBJECTS
OF
THE
SAME
TYPE
TO
A
CLIENT
AS
AN
EXAMPLE
CONSIDER
THE
FOLLOWING
X
X
EXCHANGE
X
J
I
A
X
FUNCTION
WHICH
RETURNS
AN
ARRAY
OF
RANDOM
FLOATS
DEF
RANDOMARRAY
N
A
STDARRAY
N
FOR
I
IN
RANGE
N
A
I
RANDOM
RANDOM
RETURN
A
LATER
IN
THIS
CHAPTER
WE
WILL
BE
DEVELOPING
NU
MEROUS
FUNCTIONS
THAT
RETURN
HUGE
AMOUNTS
OF
DATA
IN
THIS
WAY
TEMP
A
I
A
I
A
J
A
J
TEMP
AFTER
RETURN
TEMP
J
I
A
X
X
EXCHANGING
TWO
ELEMENTS
IN
AN
ARRAY
THE
TABLE
BELOW
CONCLUDES
OUR
DISCUSSION
OF
ARRAYS
AS
FUNCTION
ARGUMENTS
BY
HIGH
LIGHTING
SOME
TYPICAL
ARRAY
PROCESSION
FUNCTIONS
MEAN
OF
AN
ARRAY
DEF
MEAN
A
TOTAL
FOR
V
IN
A
TOTAL
V
RETURN
TOTAL
LEN
A
DOT
PRODUCT
OF
TWO
VECTORS
OF
THE
SAME
LENGTH
DEF
DOT
A
B
TOTAL
FOR
I
IN
RANGE
LEN
A
TOTAL
A
I
B
I
RETURN
TOTAL
EXCHANGE
TWO
ELEMENTS
IN
AN
ARRAY
DEF
EXCHANGE
A
I
J
TEMP
A
I
A
I
A
J
A
J
TEMP
WRITE
A
ONE
DIMENSIONAL
ARRAY
AND
ITS
LENGTH
DEF
A
STDIO
WRITELN
LEN
A
FOR
V
IN
A
STDIO
WRITELN
V
READ
A
TWO
DIMENSIONAL
ARRAY
OF
FLOATS
WITH
DIMENSIONS
DEF
M
STDIO
READINT
N
STDIO
READINT
A
STDARRAY
M
N
FOR
I
IN
RANGE
M
FOR
J
IN
RANGE
N
A
I
J
STDIO
READFLOAT
RETURN
A
TYPICAL
CODE
FOR
IMPLEMENTING
FUNCTIONS
WITH
ARRAYS
EXAMPLE
SUPERPOSITION
OF
SOUND
WAVES
AS
DISCUSSED
IN
SECTION
THE
SIMPLE
AUDIO
MODEL
THAT
WE
STUDIED
THERE
NEEDS
TO
BE
EMBELLISHED
TO
CREATE
SOUND
THAT
RESEMBLES
THE
SOUND
PRODUCED
BY
A
MUSICAL
INSTRUMENT
MANY
DIFFERENT
EM
BELLISHMENTS
ARE
POSSIBLE
WITH
FUNCTIONS
WE
CAN
SYSTEMATICALLY
APPLY
THEM
TO
PRO
DUCE
SOUND
WAVES
THAT
ARE
FAR
MORE
COMPLICATED
THAN
THE
SIMPLE
SINE
WAVES
THAT
WE
PRODUCED
IN
SECTION
AS
AN
ILLUSTRATION
OF
THE
EFFECTIVE
USE
OF
FUNCTIONS
TO
SOLVE
AN
INTERESTING
COMPUTATIONAL
PROBLEM
WE
CONSIDER
A
PROGRAM
THAT
HAS
ESSENTIALLY
THE
SAME
FUNCTIONALITY
AS
PLAYTHATTUNE
PY
PROGRAM
BUT
ADDS
HARMONIC
TONES
ONE
OCTAVE
ABOVE
AND
ONE
OCTAVE
BELOW
EACH
NOTE
TO
PRODUCE
A
MORE
REALISTIC
SOUND
CHORDS
AND
HARMONICS
NOTES
LIKE
CONCERT
A
HAVE
A
PURE
SOUND
THAT
IS
NOT
VERY
MUSICAL
BECAUSE
THE
SOUNDS
THAT
YOU
ARE
ACCUSTOMED
TO
HEARING
HAVE
MANY
OTHER
COMPONENTS
THE
SOUND
FROM
A
GUITAR
A
C
STRING
ECHOES
OFF
THE
WOODEN
PART
OF
THE
INSTRUMENT
THE
WALLS
OF
THE
ROOM
THAT
E
A
MAJOR
CHORD
A
YOU
ARE
IN
AND
SO
FORTH
YOU
MAY
THINK
OF
SUCH
EFFECTS
AS
MODIFYING
THE
BASIC
SINE
WAVE
FOR
EXAMPLE
MOST
MUSICAL
IN
STRUMENTS
PRODUCE
HARMONICS
THE
SAME
A
A
00
CONCERT
A
WITH
HARMONICS
SUPERPOSING
WAVES
TO
MAKE
COMPOSITE
SOUNDS
NOTE
IN
DIFFERENT
OCTAVES
AND
NOT
AS
LOUD
OR
YOU
MIGHT
PLAY
CHORDS
MULTIPLE
NOTES
AT
THE
SAME
TIME
TO
COMBINE
MULTIPLE
SOUNDS
WE
USE
SUPERPOSITION
SIMPLY
ADD
THEIR
WAVES
TOGETHER
AND
RESCALE
TO
MAKE
SURE
THAT
ALL
VALUES
STAY
BETWEEN
AND
AS
IT
TURNS
OUT
WHEN
WE
SU
PERPOSE
SINE
WAVES
OF
DIFFERENT
FREQUENCIES
IN
THIS
WAY
WE
CAN
GET
ARBITRARILY
COM
PLICATED
WAVES
INDEED
ONE
OF
THE
TRIUMPHS
OF
CENTURY
MATHEMATICS
WAS
THE
DEVELOPMENT
OF
THE
IDEA
THAT
ANY
SMOOTH
PERIODIC
FUNCTION
CAN
BE
EXPRESSED
AS
A
SUM
OF
SINE
AND
COSINE
WAVES
KNOWN
AS
A
FOURIER
SERIES
THIS
MATHEMATICAL
IDEA
CORRESPONDS
TO
THE
NOTION
THAT
WE
CAN
CREATE
A
LARGE
RANGE
OF
SOUNDS
WITH
MUSI
CAL
INSTRUMENTS
OR
OUR
VOCAL
CORDS
AND
THAT
ALL
SOUND
CONSISTS
OF
A
COMPOSITION
OF
VARIOUS
OSCILLATING
CURVES
ANY
SOUND
CORRESPONDS
TO
A
CURVE
AND
ANY
CURVE
CORRE
SPONDS
TO
A
SOUND
SO
WE
CAN
CREATE
ARBITRARILY
COMPLEX
CURVES
WITH
SUPERPOSITION
COMPUTING
WITH
SOUND
WAVES
IN
SECTION
WE
SAW
HOW
TO
REPRESENT
SOUND
WAVES
BY
ARRAYS
OF
NUMBERS
THAT
REPRESENT
THEIR
VALUES
AT
THE
SAME
SAMPLE
POINTS
NOW
WE
WILL
USE
SUCH
ARRAYS
AS
RETURN
VALUES
AND
ARGUMENTS
TO
FUNCTIONS
TO
PRO
CESS
SUCH
DATA
FOR
EXAMPLE
THE
FOLLOWING
FUNCTION
TAKES
A
FREQUENCY
IN
HERTZ
AND
A
DURATION
IN
SECONDS
AS
ARGUMENTS
AND
RETURNS
A
REPRESENTATION
OF
A
SOUND
WAVE
MORE
PRECISELY
AN
ARRAY
THAT
CONTAINS
VALUES
SAMPLED
FROM
THE
SPECIFIED
WAVE
AT
THE
STANDARD
SAMPLES
PER
SECOND
DEF
TONE
HZ
DURATION
SPS
N
INT
SPS
DURATION
A
STDARRAY
N
FOR
I
IN
RANGE
N
A
I
MATH
SIN
MATH
PI
I
HZ
SPS
RETURN
A
THE
SIZE
OF
THE
ARRAY
RETURNED
DEPENDS
ON
THE
DURATION
IT
CONTAINS
ABOUT
SPS
DURATION
FLOATS
NEARLY
HALF
A
MILLION
FLOATS
FOR
SECONDS
BUT
WE
CAN
NOW
TREAT
THAT
ARRAY
THE
VALUE
RETURNED
FROM
TONE
AS
A
SINGLE
ENTITY
AND
COMPOSE
CODE
THAT
PROCESSES
SOUND
WAVES
AS
WE
WILL
SOON
SEE
IN
PROGRAM
WEIGHTED
SUPERPOSITION
SINCE
WE
REPRESENT
SOUND
WAVES
BY
ARRAYS
OF
NUMBERS
THAT
REPRESENT
THEIR
VALUES
AT
THE
SAME
SAMPLE
POINTS
SUPERPOSITION
IS
SIMPLE
TO
IMPLEMENT
WE
ADD
TOGETHER
THEIR
SAMPLE
VALUES
AT
EACH
SAMPLE
POINT
TO
PRODUCE
THE
COMBINED
RESULT
FOR
GREATER
CONTROL
WE
ALSO
SPECIFY
A
RELATIVE
WEIGHT
FOR
EACH
OF
THE
TWO
WAVES
TO
BE
SUPERPOSED
WITH
THE
FOLLOWING
FUNCTION
DEF
SUPERPOSE
A
B
AWEIGHT
BWEIGHT
C
STDARRAY
LEN
A
FOR
I
IN
RANGE
LEN
A
C
I
AWEIGHT
A
I
BWEIGHT
B
I
RETURN
C
THIS
CODE
ASSUMES
THAT
A
AND
B
ARE
OF
THE
SAME
LENGTH
FOR
EXAMPLE
IF
WE
HAVE
A
SOUND
REPRESENTED
BY
AN
ARRAY
A
THAT
WE
WANT
TO
HAVE
THREE
TIMES
THE
EFFECT
OF
THE
SOUND
REPRESENTED
BY
AN
ARRAY
B
WE
WOULD
CALL
SUPERPOSE
A
B
THE
FIGURE
AT
THE
TOP
OF
THE
NEXT
PAGE
SHOWS
THE
USE
OF
TWO
CALLS
ON
THIS
FUNCTION
TO
ADD
HARMONICS
TO
A
TONE
WE
SUPERPOSE
THE
HARMONICS
THEN
SUPERPOSE
THE
RE
SULT
WITH
THE
ORIGINAL
TONE
WHICH
HAS
THE
EFFECT
OF
GIVING
THE
ORIGINAL
TONE
TWICE
LO
TONE
LO
HI
TONE
HI
HARMONICS
SUPERPOSE
LO
HI
HARMONICS
LO
HI
982
693
CONCERTA
TONE
CONCERTA
SUPERPOSE
HARMONICS
CONCERTA
HARMONICS
CONCERTA
ADDING
HARMONICS
TO
CONCERT
A
SECOND
AT
SAMPLES
SECOND
THE
WEIGHT
OF
EACH
HARMONIC
AS
LONG
AS
THE
WEIGHTS
ARE
POSITIVE
AND
SUM
TO
SUPERPOSE
PRESERVES
OUR
CONVENTION
OF
KEEPING
THE
VALUES
OF
ALL
WAVES
BETWEEN
AND
PROGRAM
PLAYTHATTUNEDELUXE
PY
IS
AN
IMPLEMENTATION
THAT
APPLIES
THESE
CONCEPTS
TO
PRODUCE
A
MORE
REALISTIC
SOUND
THAN
THAT
PRODUCED
BY
PROGRAM
TO
DO
SO
IT
MAKES
USE
OF
FUNCTIONS
TO
DIVIDE
THE
COMPUTATION
INTO
FOUR
PARTS
GIVEN
A
FREQUENCY
AND
DURATION
CREATE
A
PURE
TONE
GIVEN
TWO
SOUND
WAVES
AND
RELATIVE
WEIGHTS
SUPERPOSE
THEM
GIVEN
A
PITCH
AND
DURATION
CREATE
A
NOTE
WITH
HARMONICS
READ
AND
PLAY
A
SEQUENCE
OF
PITCH
DURATION
PAIRS
FROM
STANDARD
INPUT
PROGRAM
PLAY
THAT
TUNE
REVISITED
PLAYTHATTUNEDELUXE
PY
IMPORT
MATH
IMPORT
STDARRAY
IMPORT
STDAUDIO
IMPORT
STDIO
DEF
SUPERPOSE
A
B
AWEIGHT
BWEIGHT
C
STDARRAY
LEN
A
FOR
I
IN
RANGE
LEN
A
C
I
AWEIGHT
A
I
BWEIGHT
B
I
RETURN
C
DEF
TONE
HZ
DURATION
SPS
N
INT
SPS
DURATION
A
STDARRAY
N
FOR
I
IN
RANGE
N
A
I
MATH
SIN
MATH
PI
I
HZ
SPS
RETURN
A
DEF
NOTE
PITCH
DURATION
HZ
PITCH
LO
TONE
HZ
DURATION
HI
TONE
HZ
DURATION
HARMONICS
SUPERPOSE
LO
HI
A
TONE
HZ
DURATION
RETURN
SUPERPOSE
HARMONICS
A
WHILE
NOT
STDIO
ISEMPTY
PITCH
STDIO
READINT
DURATION
STDIO
READFLOAT
A
NOTE
PITCH
DURATION
STDAUDIO
PLAYSAMPLES
A
STDAUDIO
WAIT
HZ
FREQUENCY
LO
LOWER
HARMONIC
HI
UPPER
HARMONIC
H
COMBINED
HARMONICS
A
PURE
TONE
THIS
PROGRAM
READS
SOUND
SAMPLES
EMBELLISHES
THE
SOUNDS
BY
ADDING
HARMONICS
TO
CREATE
A
MORE
REALISTIC
TONE
THAN
PROGRAM
AND
PLAYS
THE
RESULTING
SOUND
TO
STANDARD
AUDIO
PYTHON
PLAYTHATTUNEDELUXE
PY
ELISE
TXT
MORE
ELISE
TXT
125
125
THESE
TASKS
ARE
ALL
AMENABLE
TO
IMPLEMEN
TATION
AS
FUNCTIONS
WHICH
DEPEND
ON
ONE
ANOTHER
EACH
FUNCTION
IS
WELL
DEFINED
AND
STRAIGHTFORWARD
TO
IMPLEMENT
ALL
OF
THEM
AND
STDAUDIO
REPRESENT
SOUND
AS
A
SERIES
OF
DISCRETE
VALUES
KEPT
IN
AN
ARRAY
CORRESPONDING
TO
SAMPLING
A
SOUND
WAVE
AT
SAMPLES
PER
SECOND
UP
TO
THIS
POINT
OUR
USE
OF
FUNC
TIONS
HAS
BEEN
SOMEWHAT
OF
A
NOTATIONAL
CONVENIENCE
FOR
EXAMPLE
THE
CONTROL
FLOW
IN
PROGRAM
PROGRAM
AND
PROGRAM
IS
SIMPLE
EACH
FUNCTION
IS
CALLED
IN
JUST
ONE
PLACE
IN
THE
CODE
BY
CONTRAST
PROGRAM
IS
A
CONVINCING
EX
AMPLE
OF
THE
EFFECTIVENESS
OF
DEFINING
FUNC
TIONS
TO
ORGANIZE
A
COMPUTATION
BECAUSE
EACH
FUNCTION
IS
CALLED
MULTIPLE
TIMES
FOR
EXAMPLE
AS
ILLUSTRATED
IN
THE
FIGURE
BELOW
THE
FUNCTION
NOTE
CALLS
THE
FUNCTION
TONE
THREE
TIMES
AND
THE
FUNCTION
SU
PERPOSE
TWICE
WITHOUT
FUNCTIONS
WE
WOULD
NEED
MULTIPLE
COPIES
OF
THE
CODE
IN
TONE
AND
SUPERPOSE
WITH
FUNCTIONS
WE
CAN
DEAL
DIRECTLY
WITH
CONCEPTS
CLOSE
TO
THE
APPLICATION
LIKE
LOOPS
FUNCTIONS
HAVE
A
SIMPLE
BUT
PROFOUND
EFFECT
ONE
SEQUENCE
OF
STATEMENTS
THOSE
IN
THE
FUNCTION
DEFINI
TION
IS
EXECUTED
MULTIPLE
TIMES
DURING
THE
EXECUTION
OF
OUR
PROGRAM
ONCE
FOR
EACH
TIME
THE
FUNCTION
IS
CALLED
IN
THE
CONTROL
FLOW
IN
THE
GLOBAL
CODE
FLOW
OF
CONTROL
AMONG
SEVERAL
FUNCTIONS
FUNCTIONS
ARE
IMPORTANT
BECAUSE
THEY
GIVE
US
THE
ABILITY
TO
EXTEND
THE
PYTHON
LANGUAGE
WITHIN
A
PROGRAM
HAVING
IMPLEMENTED
AND
DEBUGGED
FUNCTIONS
SUCH
AS
HARMONIC
PDF
CDF
MEAN
EXCHANGE
SHUFFLE
ISPRIME
SUPERPOSE
TONE
AND
NOTE
WE
CAN
USE
THEM
ALMOST
AS
IF
THEY
WERE
BUILT
INTO
PYTHON
THE
FLEXIBILITY
TO
DO
SO
OPENS
UP
A
WHOLE
NEW
WORLD
OF
PROGRAMMING
BEFORE
YOU
WERE
SAFE
IN
THINKING
ABOUT
A
PYTHON
PROGRAM
AS
A
SEQUENCE
OF
STATE
MENTS
NOW
YOU
NEED
TO
THINK
OF
A
PYTHON
PROGRAM
AS
A
SET
OF
FUNCTIONS
THAT
CAN
CALL
ONE
ANOTHER
THE
STATEMENT
TO
STATEMENT
CONTROL
FLOW
TO
WHICH
YOU
HAVE
BEEN
ACCUSTOMED
IS
STILL
PRESENT
WITHIN
FUNCTIONS
BUT
PROGRAMS
HAVE
A
HIGHER
LEVEL
CON
TROL
FLOW
DEFINED
BY
FUNCTION
CALLS
AND
RETURNS
THIS
ABILITY
ENABLES
YOU
TO
THINK
IN
TERMS
OF
OPERATIONS
CALLED
FOR
BY
THE
APPLICATION
NOT
JUST
THE
OPERATIONS
THAT
ARE
BUILT
INTO
PYTHON
WHENEVER
YOU
CAN
CLEARLY
SEPARATE
TASKS
WITHIN
A
COMPUTATION
YOU
SHOULD
DO
SO
THE
EXAMPLES
IN
THIS
SECTION
AND
THE
PROGRAMS
THROUGHOUT
THE
REST
OF
THE
BOOK
CLEARLY
ILLUSTRATE
THE
BENEFITS
OF
ADHERING
TO
THIS
MAXIM
WITH
FUNCTIONS
WE
CAN
DIVIDE
A
LONG
SEQUENCE
OF
STATEMENTS
INTO
INDEPENDENT
PARTS
REUSE
CODE
WITHOUT
HAVING
TO
COPY
IT
WORK
WITH
HIGHER
LEVEL
CONCEPTS
SUCH
AS
SOUND
WAVES
THIS
POINT
OF
VIEW
LEADS
TO
CODE
THAT
IS
EASIER
TO
UNDERSTAND
MAINTAIN
AND
DEBUG
COMPARED
TO
A
LONG
PROGRAM
COMPOSED
SOLELY
OF
PYTHON
ASSIGNMENT
CONDITIONAL
AND
LOOP
STATEMENTS
IN
THE
NEXT
SECTION
WE
DISCUSS
THE
IDEA
OF
USING
FUNCTIONS
DEFINED
IN
OTHER
FILES
WHICH
AGAIN
TAKES
US
TO
ANOTHER
LEVEL
OF
PROGRAMMING
Q
A
Q
CAN
I
USE
THE
STATEMENT
RETURN
IN
A
FUNCTION
WITHOUT
SPECIFYING
A
VALUE
A
YES
TECHNICALLY
IT
RETURNS
THE
NONE
OBJECT
WHICH
IS
THE
SOLE
VALUE
OF
THE
TYPE
NONETYPE
Q
WHAT
HAPPENS
IF
A
FUNCTION
HAS
ONE
CONTROL
FLOW
THAT
LEADS
TO
A
RETURN
STATE
MENT
THAT
RETURNS
A
VALUE
BUT
ANOTHER
CONTROL
FLOW
THAT
REACHES
THE
END
OF
THE
FUNC
TION
BODY
A
IT
WOULD
BE
POOR
STYLE
TO
DEFINE
SUCH
A
FUNCTION
BECAUSE
DOING
SO
WOULD
PLACE
A
SEVERE
BURDEN
ON
THE
FUNCTION
CALLERS
THE
CALLERS
WOULD
NEED
TO
KNOW
UNDER
WHICH
CIRCUMSTANCES
THE
FUNCTION
RETURNS
A
VALUE
AND
UNDER
WHICH
CIRCUMSTANCES
IT
RETURNS
NONE
Q
WHAT
HAPPENS
IF
I
COMPOSE
CODE
IN
THE
BODY
OF
A
FUNCTION
THAT
APPEARS
AFTER
THE
RETURN
STATEMENT
A
ONCE
A
RETURN
STATEMENT
IS
REACHED
CONTROL
RETURNS
TO
THE
CALLER
SO
ANY
CODE
IN
THE
BODY
OF
A
FUNCTION
THAT
APPEARS
AFTER
A
RETURN
STATEMENT
IS
USELESS
IT
IS
NEVER
EXECUTED
IN
PYTHON
IT
IS
POOR
STYLE
BUT
NOT
ILLEGAL
TO
DEFINE
SUCH
A
FUNCTION
Q
WHAT
HAPPENS
IF
I
DEFINE
TWO
FUNCTIONS
WITH
THE
SAME
NAME
BUT
POSSIBLY
A
DIF
FERENT
NUMBER
OF
ARGUMENTS
IN
THE
SAME
PY
FILE
A
THIS
IS
KNOWN
AS
FUNCTION
OVERLOADING
WHICH
IS
EMBRACED
BY
MANY
PROGRAM
MING
LANGUAGES
PYTHON
HOWEVER
IS
NOT
ONE
OF
THOSE
LANGUAGES
THE
SECOND
FUNC
TION
DEFINITION
WILL
OVERWRITE
THE
FIRST
ONE
YOU
CAN
OFTEN
ACHIEVE
THE
SAME
EFFECT
BY
USING
DEFAULT
ARGUMENTS
Q
WHAT
HAPPENS
IF
I
DEFINE
TWO
FUNCTIONS
WITH
THE
SAME
NAME
IN
DIFFERENT
FILES
A
THAT
IS
FINE
FOR
EXAMPLE
IT
WOULD
BE
GOOD
DESIGN
TO
HAVE
A
FUNCTION
NAMED
PDF
IN
GAUSS
PY
THAT
COMPUTES
THE
GAUSSIAN
PROBABILITY
DENSITY
FUNCTION
AND
ANOTHER
FUNCTION
NAMED
PDF
IN
CAUCHY
PY
THAT
COMPUTES
THE
CAUCHY
PROBABIL
ITY
DENSITY
FUNCTION
IN
SECTION
YOU
WILL
LEARN
HOW
TO
CALL
FUNCTIONS
DEFINED
IN
DIFFERENT
PY
FILES
Q
CAN
A
FUNCTION
CHANGE
THE
OBJECT
TO
WHICH
A
PARAMETER
VARIABLE
IS
BOUND
A
YES
YOU
CAN
USE
A
PARAMETER
VARIABLE
ON
THE
LEFT
SIDE
OF
AN
ASSIGNMENT
STATE
MENT
HOWEVER
MANY
PYTHON
PROGRAMMERS
CONSIDER
IT
POOR
STYLE
TO
DO
SO
NOTE
THAT
SUCH
AN
ASSIGNMENT
STATEMENT
HAS
NO
EFFECT
IN
THE
CLIENT
Q
THE
ISSUE
WITH
SIDE
EFFECTS
AND
MUTABLE
OBJECTS
IS
COMPLICATED
IS
IT
REALLY
ALL
THAT
IMPORTANT
A
YES
PROPERLY
CONTROLLING
SIDE
EFFECTS
IS
ONE
OF
A
PROGRAMMER
MOST
IMPORTANT
TASKS
IN
LARGE
SYSTEMS
TAKING
THE
TIME
TO
BE
SURE
THAT
YOU
UNDERSTAND
THE
DIFFERENCE
BETWEEN
PASSING
ARRAYS
WHICH
ARE
MUTABLE
AND
PASSING
INTEGERS
FLOATS
BOOLEANS
AND
STRINGS
WHICH
ARE
IMMUTABLE
WILL
CERTAINLY
BE
WORTHWHILE
THE
VERY
SAME
MECHANISMS
ARE
USED
FOR
ALL
OTHER
TYPES
OF
DATA
AS
YOU
WILL
LEARN
IN
CHAPTER
Q
HOW
CAN
I
ARRANGE
TO
PASS
AN
ARRAY
TO
A
FUNCTION
IN
SUCH
A
WAY
THAT
THE
FUNCTION
CANNOT
CHANGE
THE
ELEMENTS
IN
THE
ARRAY
A
THERE
IS
NO
DIRECT
WAY
TO
DO
SO
IN
SECTION
YOU
WILL
SEE
HOW
TO
ACHIEVE
THE
SAME
EFFECT
BY
BUILDING
A
WRAPPER
DATA
TYPE
AND
PASSING
AN
OBJECT
OF
THAT
TYPE
INSTEAD
YOU
WILL
ALSO
SEE
HOW
TO
USE
PYTHON
BUILT
IN
TUPLE
DATA
TYPE
WHICH
REP
RESENTS
AN
IMMUTABLE
SEQUENCE
OF
OBJECTS
Q
CAN
I
USE
A
MUTABLE
OBJECT
AS
A
DEFAULT
VALUE
FOR
AN
OPTIONAL
ARGUMENT
A
YES
BUT
IT
MAY
LEAD
TO
UNEXPECTED
BEHAVIOR
PYTHON
EVALUATES
A
DEFAULT
VALUE
ONLY
ONCE
WHEN
THE
FUNCTION
IS
DEFINED
NOT
EACH
TIME
THE
FUNCTION
IS
CALLED
SO
IF
THE
BODY
OF
A
FUNCTION
MODIFIES
A
DEFAULT
VALUE
SUBSEQUENT
FUNCTION
CALLS
WILL
USE
THE
MODIFIED
VALUE
SIMILAR
DIFFICULTIES
ARISE
IF
YOU
INITIALIZE
THE
DEFAULT
VALUE
BY
CALLING
AN
IMPURE
FUNCTION
FOR
EXAMPLE
AFTER
PYTHON
EXECUTES
THE
CODE
FRAGMENT
DEF
APPEND
A
X
RANDOM
RANDOM
A
X
RETURN
A
B
APPEND
C
APPEND
B
AND
C
ARE
ALIASES
FOR
THE
SAME
ARRAY
OF
LENGTH
NOT
WHICH
CONTAINS
ONE
FLOAT
REPEATED
TWICE
INSTEAD
OF
TWO
DIFFERENT
FLOATS
ABSTRACT
THIS
PAPER
PRESENTS
A
METHOD
TO
ANALYZE
THE
POWERS
OF
A
GIVEN
TRILINEAR
FORM
A
SPECIAL
KIND
OF
ALGEBRAIC
CONSTRUCTION
ALSO
CALLED
A
TENSOR
AND
OBTAIN
UPPER
BOUNDS
ON
THE
ASYMPTOTIC
COMPLEXITY
OF
MATRIX
MULTIPLICATION
COMPARED
WITH
EXISTING
APPROACHES
THIS
METHOD
IS
BASED
ON
CONVEX
OPTIMIZATION
AND
THUS
HAS
POLYNOMIAL
TIME
COMPLEXITY
AS
AN
APPLICATION
WE
USE
THIS
METHOD
TO
STUDY
POWERS
OF
THE
CONSTRUCTION
GIVEN
BY
COPPERSMITH
AND
WINOGRAD
JOURNAL
OF
SYMBOLIC
COMPUTATION
AND
OBTAIN
THE
UPPER
BOUND
Ω
ON
THE
EXPONENT
OF
SQUARE
MATRIX
MULTIPLICATION
WHICH
SLIGHTLY
IMPROVES
THE
BEST
KNOWN
UPPER
BOUND
CATEGORIES
AND
SUBJECT
DESCRIPTORS
F
ANALYSIS
OF
ALGORITHMS
AND
PROBLEM
COMPLEXITY
NUMERICAL
ALGORITHMS
AND
PROBLEMS
COMPUTATIONS
ON
MATRICES
I
SYMBOLIC
AND
ALGEBRAIC
MANIPULATION
ALGORITHMS
ALGEBRAIC
ALGORITHMS
ANALYSIS
OF
ALGORITHMS
GENERAL
TERMS
ALGORITHMS
THEORY
KEYWORDS
ALGEBRAIC
COMPLEXITY
THEORY
MATRIX
MULTIPLICATION
INTRODUCTION
MATRIX
MULTIPLICATION
IS
ONE
OF
THE
MOST
FUNDAMENTAL
TASKS
IN
MATHEMATICS
AND
COMPUTER
SCIENCE
WHILE
THE
PRODUCT
OF
TWO
N
N
MATRICES
OVER
A
FIELD
CAN
NATURALLY
BE
COMPUTED
IN
O
ARITHMETIC
OPERATIONS
STRASSEN
SHOWED
IN
THAT
O
ARITHMETIC
OPERATIONS
ARE
ENOUGH
THE
DISCOVERY
OF
THIS
ALGORITHM
FOR
MATRIX
MULTIPLICATION
WITH
SUBCUBIC
COMPLEXITY
GAVE
RISE
TO
A
NEW
AREA
OF
RESEARCH
WHERE
THE
CENTRAL
QUESTION
IS
TO
DETERMINE
THE
VALUE
OF
THE
EXPONENT
OF
SQUARE
MATRIX
MULTIPLICATION
DENOTED
Ω
AND
DEFINED
AS
THE
PERMISSION
TO
MAKE
DIGITAL
OR
HARD
COPIES
OF
ALL
OR
PART
OF
THIS
WORK
FOR
PERSONAL
OR
CLASSROOM
USE
IS
GRANTED
WITHOUT
FEE
PROVIDED
THAT
COPIES
ARE
NOT
MADE
OR
DISTRIBUTED
FOR
PROFIT
OR
COMMERCIAL
ADVANTAGE
AND
THAT
COPIES
BEAR
THIS
NOTICE
AND
THE
FULL
CITATION
ON
THE
FIRST
PAGE
COPYRIGHTS
FOR
COMPONENTS
OF
THIS
WORK
OWNED
BY
OTHERS
THAN
THE
AUTHOR
MUST
BE
HONORED
ABSTRACTING
WITH
CREDIT
IS
PERMITTED
TO
COPY
OTHERWISE
OR
REPUBLISH
TO
POST
ON
SERVERS
OR
TO
REDISTRIBUTE
TO
LISTS
REQUIRES
PRIOR
SPECIFIC
PERMISSION
AND
OR
A
FEE
REQUEST
PERMISSIONS
FROM
PERMISSIONS
ACM
ORG
ISSAC
JULY
KOBE
JAPAN
COPYRIGHT
IS
HELD
BY
THE
OWNER
AUTHOR
PUBLICATION
RIGHTS
LICENSED
TO
ACM
ACM
HTTP
DX
DOI
ORG
㻞㻥㻢
MINIMAL
VALUE
SUCH
THAT
TWO
N
N
MATRICES
OVER
A
FIELD
CAN
BE
MULTIPLIED
USING
O
NΩ
Ε
ARITHMETIC
OPERATIONS
FOR
ANY
Ε
IT
HAS
BEEN
WIDELY
CONJECTURED
THAT
Ω
AND
SEVERAL
CONJECTURES
IN
COMBINATORICS
AND
GROUP
THEORY
IF
TRUE
WOULD
LEAD
TO
THIS
RESULT
HOWEVER
THE
BEST
UPPER
BOUND
OBTAINED
SO
FAR
IS
Ω
AS
WE
EXPLAIN
BELOW
COPPERSMITH
AND
WINOGRAD
SHOWED
IN
THAT
Ω
THEIR
APPROACH
CAN
BE
DESCRIBED
AS
FOLLOWS
A
TRILINEAR
FORM
IS
INFORMALLY
SPEAKING
A
THREE
DIMENSIONAL
ARRAY
WITH
COEFFICIENTS
IN
A
FIELD
F
FOR
ANY
TRILINEAR
FORM
T
ONE
CAN
DEFINE
ITS
BORDER
RANK
DENOTED
R
T
WHICH
IS
A
POSITIVE
INTEGER
CHARACTERIZING
THE
NUMBER
OF
ARITHMETIC
OPERATIONS
NEEDED
TO
COMPUTE
THE
FORM
FOR
ANY
TRILINEAR
FORM
T
AND
ANY
REAL
NUMBER
Ρ
ONE
CAN
DEFINE
A
REAL
NUMBER
VΡ
T
CALLED
THE
VALUE
OF
THE
TRILINEAR
FORM
THE
THEORY
DEVELOPED
BY
SCHO
NHAGE
SHOWS
THAT
FOR
ANY
M
AND
ANY
Ρ
THE
FOLLOWING
STATEMENT
HOLD
M
R
T
Ω
Ρ
VΡ
T
M
HERE
THE
NOTATION
T
M
REPRESENTS
THE
TRILINEAR
FORM
OBTAINED
BY
TAKING
THE
M
TH
TENSOR
POWER
OF
T
COPPERSMITH
AND
WINOGRAD
PRESENTED
A
SPECIFIC
TRILINEAR
FORM
T
OBTAINED
BY
MODIFYING
A
CONSTRUCTION
GIVEN
EARLIER
BY
STRASSEN
COMPUTED
ITS
BORDER
RANK
R
T
AND
INTRODUCED
DEEP
TECHNIQUES
TO
ESTIMATE
THE
VALUE
VΡ
T
IN
PARTICULAR
THEY
SHOWED
HOW
A
LOWER
BOUND
V
Ρ
T
ON
VΡ
T
CAN
BE
OBTAINED
FOR
ANY
Ρ
BY
SOLVING
AN
OPTIMIZATION
PROBLEM
SOLVING
THIS
OPTIMIZATION
PROBLEM
THEY
OBTAINED
THE
UPPER
BOUND
Ω
VIA
STATEMENT
WITH
T
T
AND
M
BY
FINDING
THE
SMALLEST
Ρ
SUCH
THAT
V
Ρ
T
R
T
THEY
THEN
PROCEEDED
TO
STUDY
THE
TENSOR
POWER
T
AND
SHOWED
THAT
DESPITE
SEVERAL
NEW
TECHNICAL
DIFFICULTIES
A
SIMILAR
APPROACH
CAN
BE
USED
TO
REDUCE
THE
COMPUTATION
OF
A
LOWER
BOUND
V
Ρ
T
ON
VΡ
T
TO
SOLVING
ANOTHER
OPTIMIZATION
PROBLEM
OF
SEVERAL
VARIABLES
THEY
DISCOVERED
THAT
V
Ρ
T
V
Ρ
T
DUE
TO
THE
FACT
THAT
THE
ANALYSIS
OF
T
WAS
FINER
THUS
GIVING
A
BETTER
UPPER
BOUND
ON
Ω
VIA
STATEMENT
WITH
T
T
AND
M
SOLVING
NUMERICALLY
THE
NEW
OPTIMIZATION
PROBLEM
THEY
OBTAINED
THE
UPPER
BOUND
Ω
IN
VIEW
OF
THE
IMPROVEMENT
OBTAINED
BY
TAKING
THE
SECOND
TENSOR
POWER
A
NATURAL
QUESTION
WAS
TO
INVESTIGATE
HIGHER
POWERS
OF
THE
CONSTRUCTION
T
BY
COPPERSMITH
AND
WINOGRAPH
INVESTIGATING
THE
THIRD
POWER
WAS
EXPLICITLY
MENTIONED
AS
AN
OPEN
PROBLEM
IN
MORE
THAT
TWENTY
YEARS
LATER
STOTHERS
SHOWED
THAT
WHILE
THE
THIRD
POWER
DOES
NOT
SEEM
TO
LEAD
TO
ANY
IMPROVEMENT
THE
FOURTH
POWER
DOES
GIVE
AN
IMPROVEMENT
SEE
ALSO
THE
IMPROVEMENT
WAS
OBTAINED
AGAIN
VIA
STATEMENT
BY
SHOWING
HOW
TO
REDUCE
THE
COMPUTATION
OF
VΡ
T
TO
SOLVING
A
NON
CONVEX
OPTIMIZATION
PROBLEM
THE
UPPER
BOUND
Ω
WAS
OBTAINED
IN
BY
FINDING
NUMERICALLY
A
SOLUTION
OF
THIS
OPTIMIZATION
PROBLEM
IT
WAS
LATER
DISCOVERED
THAT
THIS
SOLUTION
WAS
NOT
OPTIMAL
AND
THE
IMPROVED
UPPER
BOUND
Ω
WAS
GIVEN
IN
BY
EXHIBITING
A
BETTER
SOLUTION
OF
THE
SAME
OPTIMIZATION
PROBLEM
INDEPENDENTLY
VASSILEVSKA
WILLIAMS
CONSTRUCTED
A
POWERFUL
AND
GENERAL
FRAMEWORK
TO
ANALYZE
RECURSIVELY
POWERS
OF
A
CLASS
OF
TRILINEAR
FORMS
INCLUDING
THE
TRILINEAR
FORM
T
BY
COPPERSMITH
AND
WINOGRAD
AND
SHOWED
HOW
TO
AUTOMATICALLY
REDUCE
FOR
ANY
FORM
T
IN
THIS
CLASS
AND
ANY
INTEGER
M
THE
PROBLEM
OF
OBTAINING
LOWER
BOUNDS
ON
VΡ
T
M
TO
SOLVING
IN
GENERAL
NON
CONVEX
OPTIMIZATION
PROBLEMS
THE
UPPER
BOUND
Ω
WAS
OBTAINED
BY
APPLYING
THIS
FRAMEWORK
WITH
T
T
AND
M
AND
NUMERICALLY
SOLVING
THIS
OPTIMIZATION
PROBLEM
A
NATURAL
QUESTION
IS
TO
DETERMINE
WHAT
BOUNDS
ON
Ω
CAN
BE
OBTAINED
BY
STUDYING
T
M
FOR
M
ONE
MAY
EVEN
HOPE
THAT
WHEN
M
GOES
TO
INFINITY
THE
UPPER
BOUND
ON
Ω
GOES
TO
TWO
UNFORTUNATELY
THIS
QUESTION
CAN
HARDLY
BE
ANSWERED
BY
THIS
APPROACH
SINCE
THE
OPTIMIZATION
PROBLEMS
ARE
HIGHLY
NON
CONVEX
AND
BECOME
INTRACTABLE
EVEN
FOR
MODEST
VALUES
OF
M
IN
THIS
PAPER
WE
SHOW
HOW
TO
MODIFY
THE
FRAMEWORK
DEVELOPED
IN
IN
SUCH
A
WAY
THAT
THE
COMPUTATION
OF
VΡ
T
M
REDUCES
TO
SOLVING
POLY
M
INSTANCES
OF
CONVEX
OPTIMIZATION
PROBLEMS
EACH
HAVING
POLY
M
VARIABLES
FROM
A
THEORETICAL
POINT
A
VIEW
SINCE
A
SOLUTION
OF
SUCH
CONVEX
PROBLEMS
CAN
BE
FOUND
IN
POLYNOMIAL
TIME
VIA
STATEMENT
WE
OBTAIN
AN
ALGORITHM
TO
DERIVE
AN
UPPER
BOUND
ON
Ω
FROM
T
M
IN
TIME
POLYNOMIAL
IN
M
FROM
A
PRACTICAL
POINT
OF
VIEW
THE
CONVEX
PROBLEMS
WE
OBTAIN
CAN
ALSO
BE
SOLVED
EFFICIENTLY
AND
HAVE
SEVERAL
DESIRABLE
PROPERTIES
IN
PARTICULAR
THE
OPTIMALITY
OF
A
SOLUTION
CAN
BE
GUARANTEED
BY
USING
THE
DUAL
PROBLEM
WE
USE
THIS
METHOD
TO
ANALYZE
T
AND
T
AND
OBTAIN
THE
NEW
UPPER
BOUNDS
ON
Ω
DESCRIBED
IN
TABLE
BESIDES
LEADING
TO
AN
IMPROVEMENT
FOR
Ω
THESE
RESULTS
STRONGLY
SUGGEST
THAT
STUDYING
POWERS
HIGHER
THAN
WILL
GIVE
ONLY
NEGLIGIBLE
IMPROVEMENTS
OUR
METHOD
IS
ACTUALLY
MORE
GENERAL
AND
CAN
BE
USED
TO
EFFICIENTLY
OBTAIN
LOWER
BOUNDS
ON
VΡ
T
T
FOR
ANY
TRILINEAR
FORMS
T
AND
T
THAT
HAVE
A
STRUCTURE
SIMILAR
TO
T
THIS
APPLIES
IN
PARTICULAR
TO
THE
CASE
WHERE
T
IS
TRIVIAL
GIVING
AN
EFFICIENT
I
E
BASED
ON
CONVEX
OPTIMIZATION
WAY
TO
COMPUTE
LOWER
BOUNDS
ON
VΡ
T
INDEED
CONSIDERING
POSSIBLE
FUTURE
APPLICATIONS
OF
OUR
APPROACH
WE
HAVE
BEEN
ATTENTIVE
OF
STATING
OUR
TECHNIQUES
AS
GENERALLY
AS
POSSIBLE
ALGEBRAIC
COMPLEXITY
THEORY
THIS
SECTION
PRESENTS
THE
NOTIONS
OF
ALGEBRAIC
COMPLEXITY
NEEDED
FOR
THIS
WORK
WE
REFER
TO
E
G
FOR
MORE
DETAILED
TREATMENTS
IN
THIS
PAPER
F
DENOTES
AN
ARBITRARY
FIELD
TRILINEAR
FORMS
LET
U
V
AND
W
BE
THREE
POSITIVE
INTEGERS
AND
U
V
AND
W
BE
THREE
VECTOR
SPACES
OVER
F
OF
DIMENSION
U
V
AND
W
NOTE
THAT
WHILE
THE
UPPER
BOUND
ON
Ω
OBTAINED
FOR
THE
EIGHTH
POWER
IS
STATED
AS
Ω
IN
THE
CONFERENCE
VERSION
THE
STATEMENT
HAS
BEEN
CORRECTED
TO
Ω
IN
THE
MOST
RECENT
VERSION
AVAILABLE
AT
THE
AUTHOR
HOMEPAGE
SINCE
THE
PREVIOUS
BOUND
OMITTED
SOME
NECESSARY
CONSTRAINTS
IN
THE
OPTIMIZATION
PROBLEM
OUR
RESULTS
CONFIRM
THE
VALUE
OF
THE
LATTER
BOUND
AND
INCREASE
ITS
PRECISION
㻞㻥㻣
TABLE
UPPER
BOUNDS
ON
Ω
OBTAINED
BY
ANALYZING
THE
M
TH
POWER
OF
THE
CONSTRUCTION
T
BY
COPPERSMITH
AND
WINOGRAD
M
UPPER
BOUND
Ω
Ω
Ω
Ω
Ω
Ω
REFERENCE
REF
REF
REF
THIS
PAPER
SECTION
Ω
GIVEN
IN
REF
THIS
PAPER
SECTION
THIS
PAPER
SECTION
RESPECTIVELY
A
TRILINEAR
FORM
ALSO
CALLED
A
TENSOR
T
ON
U
V
W
IS
AN
ELEMENT
IN
U
V
W
FU
V
W
WHERE
DENOTES
THE
TENSOR
PRODUCT
IF
WE
FIX
BASES
XI
YJ
AND
ZK
OF
U
V
AND
W
RESPECTIVELY
THEN
T
CAN
BE
WRITTEN
AS
X
TIJK
XI
YJ
ZK
T
I
J
K
FOR
COEFFICIENTS
TIJK
IN
F
WE
WILL
USUALLY
WRITE
XI
YJ
ZJ
SIMPLY
AS
XI
YJ
ZK
MATRIX
MULTIPLICATION
OF
AN
M
N
MATRIX
WITH
ENTRIES
IN
F
BY
AN
N
P
MATRIX
WITH
ENTRIES
IN
F
CORRESPONDS
TO
THE
TRILINEAR
FORM
ON
FM
N
FN
P
FM
P
WITH
COEFFICIENTS
TIJK
IF
I
R
J
T
AND
K
R
T
FOR
SOME
INTEGERS
R
T
M
N
P
AND
TIJK
OTHERWISE
INDEED
THIS
FORM
CAN
BE
REWRITTEN
AS
P
M
X
N
X
X
X
R
Y
T
Z
R
T
R
T
THEN
REPLACING
THE
X
VARIABLES
BY
THE
ENTRIES
OF
THE
FIRST
MATRIX
AND
THE
Y
VARIABLES
BY
THE
ENTRIES
OF
THE
SECOND
MATRIX
THE
COEFFICIENT
OF
Z
R
T
IN
THE
ABOVE
EXPRESSION
REPRESENTS
THE
ENTRY
IN
THE
R
TH
ROW
AND
THE
T
TH
COLUMN
OF
THE
MATRIX
PRODUCT
OF
THESE
TWO
MATRICES
THIS
TRILINEAR
FORM
WILL
BE
DENOTED
BY
M
N
P
P
ANOTHER
IMPORTANT
EXAMPLE
IS
THE
FORM
N
X
Y
Z
THIS
TRILINEAR
FORM
ON
FN
FN
FN
IS
DENOTED
N
AND
CORRESPONDS
TO
N
INDEPENDENT
SCALAR
PRODUCTS
GIVEN
A
TENSOR
T
U
V
W
IT
WILL
BE
CONVENIENT
TO
DENOTE
BY
TC
AND
THE
TENSORS
IN
V
W
U
AND
W
U
V
RESPECTIVELY
P
OBTAINED
BY
PERMUTING
CYCLICLY
P
THE
COORDINATES
OF
T
TC
IJK
TIJK
YJ
ZK
XI
AND
IJK
TIJK
ZK
XI
YJ
GIVEN
TWO
TENSORS
T
U
V
W
AND
T
U
V
W
WE
CAN
NATURALLY
DEFINE
THEIR
DIRECT
SUM
T
T
WHICH
IS
A
TENSOR
IN
U
U
V
V
W
W
AND
THEIR
TENSOR
PRODUCT
T
T
WHICH
IS
A
TENSOR
IN
U
U
V
V
W
W
FOR
ANY
INTEGER
C
THE
TENSOR
T
T
WITH
C
OCCURRENCES
OF
T
WILL
BE
DENOTED
BY
C
T
AND
THE
TENSOR
T
T
WITH
C
OCCURRENCES
OF
T
WILL
BE
DENOTED
BY
T
C
LET
Λ
BE
AN
INDETERMINATE
AND
CONSIDER
THE
EXTENSION
F
Λ
OF
F
I
E
THE
SET
OF
ALL
POLYNOMIALS
OVER
F
IN
Λ
LET
T
FU
V
W
AND
T
FU
V
W
BE
TWO
TENSORS
WE
SAY
THAT
T
IS
A
DEGENERATION
OF
T
DENOTED
T
T
IF
THERE
EXIST
THREE
MATRICES
Α
F
Λ
U
U
Β
F
Λ
V
V
Γ
F
Λ
W
W
SUCH
THAT
X
TIJK
Α
XI
Β
YJ
Γ
ZJ
ΛS
T
ΛS
T
IJK
FOR
SOME
TENSOR
T
F
Λ
U
V
W
AND
SOME
NONNEGATIVE
INTEGER
INTUITIVELY
THE
FACT
THAT
A
TENSOR
T
IS
A
DEGENERATION
OF
A
TENSOR
T
MEANS
THAT
AN
ALGORITHM
COMPUTING
T
CAN
BE
CONVERTED
INTO
ANOTHER
ALGORITHM
COMPUTING
T
WITH
ESSENTIALLY
THE
SAME
COMPLEXITY
THE
NOTION
OF
DEGENERATION
CAN
BE
USED
TO
DEFINE
THE
NOTION
OF
BORDER
RANK
OF
A
TENSOR
T
DENOTED
R
T
AS
FOLLOWS
R
T
MIN
R
N
T
R
WHERE
I
J
AND
K
ARE
THREE
FINITE
SUBSETS
OF
Z
LET
US
CALL
THIS
DECOMPOSITION
D
WE
SAY
THAT
D
IS
A
DECOMPOSITION
OF
T
IF
THE
TENSOR
T
CAN
BE
WRITTEN
AS
X
T
I
J
K
T
I
J
K
I
J
K
WHERE
EACH
T
I
J
K
IS
A
TENSOR
IN
UI
VJ
WK
THE
SUM
DOES
NOT
NEED
TO
BE
DIRECT
THE
SUPPORT
OF
T
WITH
RESPECT
TO
D
IS
DEFINED
AS
THE
BORDER
RANK
IS
SUBMULTIPLICATIVE
R
T
T
R
T
R
T
FOR
ANY
TWO
TENSORS
T
AND
T
AND
THE
NONZERO
T
I
J
K
ARE
CALLED
THE
COMPONENTS
OF
T
THE
EXPONENT
OF
MATRIX
MULTIPLICATION
THE
FOLLOWING
THEOREM
WHICH
WAS
OBTAINED
BY
SCHO
NHAGE
SHOWS
THAT
GOOD
UPPER
BOUNDS
ON
Ω
CAN
BE
OBTAINED
BY
FINDING
A
TRILINEAR
FORM
OF
SMALL
BORDER
RANK
THAT
CAN
BE
DEGENERATED
INTO
A
DIRECT
SUM
OF
SEVERAL
LARGE
MATRIX
MULTIPLICATIONS
THEOREM
LET
E
AND
M
BE
TWO
POSITIVE
INTEGERS
LET
T
BE
A
TENSOR
SUCH
THAT
E
M
M
M
T
THEN
EMΩ
R
T
OUR
RESULTS
WILL
REQUIRE
A
GENERALIZATION
OF
THEOREM
BASED
ON
THE
CONCEPT
OF
VALUE
OF
A
TENSOR
OUR
PRESENTATION
OF
THIS
CONCEPT
FOLLOWS
GIVEN
A
TENSOR
T
FU
V
W
AND
A
POSITIVE
INTEGER
N
DEFINE
THE
SET
O
N
E
M
N
N
E
M
M
M
T
TC
N
CORRESPONDING
TO
ALL
PAIRS
E
M
SUCH
THAT
THE
TENSOR
T
TC
N
CAN
BE
DEGENERATED
INTO
A
DIRECT
SUM
OF
E
TENSORS
EACH
ISOMORPHIC
TO
M
M
M
NOTE
THAT
THIS
SET
IS
FINITE
FOR
ANY
REAL
NUMBER
Ρ
DEFINE
VΡ
N
T
MAX
EMΡ
WHERE
THE
MAXIMUM
IS
OVER
ALL
E
M
IN
THE
SET
OF
EQ
WE
NOW
GIVE
THE
FORMAL
DEFINITION
OF
THE
VALUE
OF
A
TENSOR
VΡ
T
LIM
VΡ
N
T
N
THE
LIMIT
IN
THIS
DEFINITION
IS
WELL
DEFINED
SEE
OBVIOUSLY
VΡ
T
VΡ
T
FOR
ANY
TENSORS
T
T
SUCH
THAT
T
T
BY
DEFINITION
FOR
ANY
POSITIVE
INTEGERS
M
N
AND
P
WE
HAVE
VΡ
M
N
P
MNP
Ρ
MOREOVER
THE
VALUE
IS
SUPERADDITIVE
AND
SUPERMULTIPLICATIVE
FOR
ANY
TWO
TENSORS
T
AND
T
AND
ANY
Ρ
THE
INEQUALITIES
VΡ
T
T
VΡ
T
VΡ
T
AND
VΡ
T
T
VΡ
T
VΡ
T
HOLD
WITH
THIS
CONCEPT
OF
VALUE
WE
CAN
STATE
THE
FOLLOWING
SLIGHT
GENERALIZATION
OF
THEOREM
WHICH
WAS
USED
IMPLICITLY
IN
AND
STATED
EXPLICITLY
IN
THEOREM
LET
T
BE
A
TENSOR
AND
Ρ
BE
A
REAL
NUMBER
SUCH
THAT
Ρ
IF
VΡ
T
R
T
THEN
Ω
Ρ
FINALLY
WE
WILL
NEED
THE
CONCEPT
OF
DECOMPOSITION
OF
A
TENSOR
OUR
PRESENTATION
OF
THIS
CONCEPT
FOLLOWS
LET
T
U
V
W
BE
A
TENSOR
SUPPOSE
THAT
THE
VECTOR
SPACES
U
V
AND
W
DECOMPOSE
AS
M
M
M
UI
V
VJ
W
VK
U
J
J
PRELIMINARIES
AND
NOTATIONS
IN
THIS
SECTION
DENOTES
A
FINITE
SUBSET
OF
Z
Z
Z
LET
Z
BE
THE
THREE
COORDINATE
FUNCTIONS
OF
WHICH
MEANS
THAT
Α
FOR
EACH
AND
ALL
WE
FIRST
DEFINE
THE
CONCEPT
OF
TIGHTNESS
THE
SAME
NOTION
WAS
USED
IN
DEFINITION
THE
SET
IS
TIGHT
IF
THERE
EXISTS
AN
INTEGER
D
SUCH
THAT
D
FOR
ALL
THE
SET
IS
B
TIGHT
WHERE
B
IS
A
POSITIVE
INTEGER
IF
ADDITIONALLY
Α
B
FOR
ALL
NOTE
THAT
IF
IS
B
TIGHT
THEN
WE
DENOTE
BY
F
THE
SET
OF
ALL
REAL
VALUED
FUNCTIONS
ON
AND
BY
D
THE
SET
OF
ALL
PROBABILITY
DISTRIBUTIONS
ON
I
E
THE
SET
OF
ALL
FUNCTIONS
F
F
SUCH
THAT
F
P
F
NOTE
THAT
WITH
FOR
EACH
AND
POINTWISE
ADDITION
AND
SCALAR
MULTIPLICATION
F
FORMS
A
REAL
VECTOR
SPACE
OF
DIMENSION
GIVEN
ANY
FUNCTION
F
F
WE
DENOTE
BY
R
R
AND
R
THE
THREE
MARGINAL
FUNCTIONS
OF
F
FOR
EACH
AND
EACH
A
Α
X
F
A
F
Α
A
LET
SS
DENOTE
THE
GROUP
OF
ALL
PERMUTATIONS
ON
GIVEN
ANY
FUNCTION
F
F
AND
ANY
Σ
SS
WE
WILL
DENOTE
BY
F
Σ
THE
FUNCTION
IN
F
SUCH
THAT
F
Σ
F
Σ
FOR
ALL
WE
NOW
DEFINE
THE
CONCEPT
OF
INVARIANCE
OF
A
FUNCTION
DEFINITION
FOR
ANY
TENSOR
T
AND
ANY
Ρ
I
I
SUPP
T
I
J
K
I
J
K
T
I
J
K
K
K
㻞㻥㻤
DEFINITION
LET
G
BE
A
SUBGROUP
OF
SS
A
FUNCTION
F
F
IS
G
INVARIANT
IF
F
Σ
F
FOR
ALL
Σ
G
WE
WILL
DENOTE
BY
F
G
THE
SET
OF
ALL
G
INVARIANT
REALVALUED
FUNCTIONS
ON
AND
BY
D
G
D
F
G
THE
SET
OF
ALL
G
INVARIANT
PROBABILITY
DISTRIBUTIONS
ON
WE
DENOTE
BY
G
THE
VECTOR
SPACE
OF
ALL
FUNCTIONS
F
F
G
SUCH
THAT
F
A
FOR
ALL
AND
ALL
A
Α
AND
WRITE
Χ
G
DIM
G
WE
CALL
THIS
NUMBER
Χ
G
THE
COMPATIBILITY
DEGREE
OF
WITH
RESPECT
TO
G
IN
OUR
APPLICATIONS
IT
WILL
BE
SOMETIMES
MORE
CONVENIENT
TO
CHARACTERIZE
THE
INVARIANCE
IN
TERMS
OF
A
SUBGROUP
OF
PERMUTATIONS
OF
THE
THREE
COORDINATES
OF
RATHER
THAN
IN
TERMS
OF
A
SUBGROUP
OF
PERMUTATIONS
ON
AS
FOLLOWS
LET
L
BE
A
SUBGROUP
OF
THE
GROUP
OF
PERMUTATIONS
OVER
WE
SAY
THAT
IS
L
SYMMETRIC
IF
SΣ
SΣ
SΣ
FOR
ALL
AND
ALL
Σ
L
IF
IS
L
SYMMETRIC
THE
SUBGROUP
L
INDUCES
THE
SUBGROUP
LS
ΠΣ
Σ
L
OF
SS
WHERE
ΠΣ
DENOTES
THE
PERMUTATION
IN
SS
SUCH
THAT
ΠΣ
SΣ
SΣ
SΣ
FOR
ALL
WE
WILL
SLIGHTLY
ABUSE
NOTATION
AND
WHEN
IS
L
SYMMETRIC
SIMPLY
WRITE
F
L
D
L
L
Χ
L
TO
REPRESENT
F
LS
D
LS
LS
AND
Χ
LS
RESPECTIVELY
THE
ENTROPY
OF
A
PROBABILITY
DISTRIBUTION
P
D
IS
X
H
P
P
LOG
P
OF
THE
LOWER
BOUNDS
OBTAINED
REF
ALSO
GIVES
ANOTHER
EXPOSITION
OF
THIS
APPROACH
SOLVING
THE
OPTIMIZATION
PROBLEM
LET
T
BE
A
TRILINEAR
FORM
WITH
A
DECOMPOSITION
THAT
HAS
A
TIGHT
SUPPORT
AS
IN
THE
STATEMENT
OF
THEOREM
IT
WILL
BE
CONVENIENT
TO
DEFINE
FOR
ANY
Ρ
THE
FUNCTION
ΨT
Ρ
D
R
AS
WITH
THE
USUAL
CONVENTION
LOG
USING
THE
ABOVE
NOTATIONS
AND
REPRESENT
THE
THREE
MARGINAL
PROBABILITY
DISTRIBUTIONS
OF
P
FOR
EACH
THE
ENTROPY
OF
P
IS
X
P
A
LOG
P
A
H
P
A
Α
IT
WILL
SOMETIMES
BE
MORE
CONVENIENT
TO
REPRESENT
FOR
EACH
THE
DISTRIBUTION
P
AS
A
VECTOR
P
R
Α
BY
FIXING
AN
ARBITRARY
ORDERING
OF
THE
ELEMENTS
IN
Α
WE
NOW
DEFINE
THE
CONCEPT
OF
COMPATIBILITY
OF
TWO
PROBABILITY
DISTRIBUTIONS
DEFINITION
TWO
PROBABILITY
DISTRIBUTIONS
P
AND
Q
IN
D
ARE
COMPATIBLE
IF
P
Q
FOR
EACH
FINALLY
FOR
ANY
P
D
WE
DEFINE
THE
QUANTITY
ΓS
P
MAX
H
Q
H
P
Q
WHERE
THE
MAXIMUM
IS
OVER
ALL
Q
D
COMPATIBLE
WITH
P
NOTE
THAT
ΓS
P
IS
ALWAYS
NON
NEGATIVE
GENERAL
THEORY
IN
THIS
SECTION
WE
DESCRIBE
HOW
TO
ANALYZE
THE
VALUE
OF
A
TRILINEAR
FORM
THAT
HAS
A
DECOMPOSITION
WITH
TIGHT
SUPPORT
DERIVATION
OF
LOWER
BOUNDS
ON
THE
VALUE
OUR
MAIN
TOOL
TO
ANALYZE
A
TRILINEAR
FORM
THAT
HAS
A
DECOMPOSITION
WITH
TIGHT
SUPPORT
IS
THE
FOLLOWING
THEOREM
WHICH
SHOWS
HOW
TO
REDUCE
THE
COMPUTATION
OF
A
LOWER
BOUND
ON
ITS
VALUE
TO
SOLVING
AN
OPTIMIZATION
PROBLEM
DUE
TO
SPACE
CONSTRAINTS
ITS
PROOF
IS
OMITTED
FROM
THIS
VERSION
THEOREM
LET
T
BE
A
TRILINEAR
FORM
AND
D
BE
A
DECOMPOSITION
OF
T
WITH
TIGHT
SUPPORT
Z
Z
Z
AND
COMPONENT
SET
T
THEN
FOR
ANY
P
D
AND
ANY
Ρ
LOG
VΡ
T
X
H
P
X
P
LOG
VΡ
T
ΓS
P
THIS
THEOREM
CAN
BE
SEEN
AS
A
GENERALIZED
STATEMENT
OF
THE
APPROACH
DEVELOPED
BY
COPPERSMITH
AND
WINOGRAD
SEVERAL
SIMILAR
STATEMENTS
ALREADY
APPEARED
IN
THE
LITERATURE
A
WEAKER
STATEMENT
CORRESPONDING
TO
THE
SIMPLER
CASE
WHERE
EACH
COMPONENT
IS
ISOMORPHIC
TO
A
MATRIX
PRODUCT
WHICH
REMOVES
THE
NEED
FOR
THE
TERM
ΓS
P
IN
THE
LOWER
BOUND
CAN
BE
FOUND
IN
THE
GENERALIZATION
TO
THE
CASE
OF
ARBITRARY
COMPONENTS
STATED
IN
THEOREM
WAS
CONSIDERED
IN
AND
PROVED
IMPLICITLY
BY
CONSIDERING
SEVERAL
CASES
SYMMETRIC
AND
ASYMMETRIC
SUPPORTS
AND
WITHOUT
REFERENCE
TO
THE
ENTROPY
IN
THEOREM
AIMS
AT
PROVIDING
A
CONCISE
STATEMENT
UNIFYING
ALL
THESE
RESULTS
DESCRIBED
IN
TERMS
OF
ENTROPY
IN
ORDER
TO
DISCUSS
THE
CONVEXITY
㻞㻥㻥
ΨT
Ρ
P
X
H
P
X
P
LOG
VΡ
T
FOR
ANY
P
D
NOTE
THAT
THIS
IS
A
CONCAVE
FUNCTION
ON
THE
CONVEX
SET
D
IN
ORDER
TO
OPTIMIZE
THE
LOWER
BOUND
ON
LOG
VΡ
T
THAT
IS
OBTAINED
FROM
THEOREM
WE
WOULD
LIKE
TO
FIND
FOR
A
GIVEN
VALUE
OF
Ρ
A
PROBABILITY
DISTRIBUTION
P
D
THAT
MINIMIZES
THE
EXPRESSION
ΓS
P
ΨT
Ρ
P
THIS
OPTIMIZATION
PROBLEM
IS
IN
GENERAL
NOT
CONVEX
DUE
TO
THE
PRESENCE
OF
THE
TERM
ΓS
P
IN
THIS
SUBSECTION
WE
DEVELOP
A
METHOD
TO
OVERCOME
THIS
DIFFICULTY
AND
FIND
USING
THEOREM
A
LOWER
BOUND
ON
VΡ
T
IN
POLYNOMIAL
TIME
REMEMBER
THAT
ΓS
P
MAXQ
H
Q
H
P
WHERE
THE
MAXIMUM
IS
OVER
ALL
Q
D
THAT
ARE
COMPATIBLE
WITH
P
WHEN
P
IS
FIXED
THESE
CONDITIONS
ON
Q
CAN
BE
WRITTEN
AS
LINEAR
CONSTRAINTS
SINCE
THE
ENTROPY
IS
A
STRICTLY
CONCAVE
FUNCTION
COMPUTING
ΓS
P
IS
THEN
A
STRICTLY
CONVEX
OPTIMIZATION
PROBLEM
ON
A
CONVEX
SET
AND
IN
PARTICULAR
HAS
A
UNIQUE
SOLUTION
Q
NOTE
THAT
ΓS
Q
H
Q
H
Q
AND
THUS
ΨT
Ρ
Q
IS
A
LOWER
BOUND
ON
LOG
VΡ
T
THE
TIGHTNESS
OF
THIS
LOWER
BOUND
OF
COURSE
DEPENDS
ON
THE
INITIAL
CHOICE
OF
P
A
NATURAL
CHOICE
IS
TO
TAKE
A
PROBABILITY
DISTRIBUTION
P
THAT
MAXIMIZES
ΨT
Ρ
P
SINCE
FINDING
SUCH
A
PROBABILITY
DISTRIBUTION
CORRESPONDS
TO
SOLVING
A
CONVEX
OPTIMIZATION
PROBLEM
THIS
MOTIVATES
THE
ALGORITHM
DESCRIBED
IN
FIGURE
WHICH
WE
CALL
ALGORITHM
A
ALGORITHM
A
INPUT
THE
SUPPORT
Z
Z
Z
OF
THE
TENSOR
T
A
VALUE
Ρ
THE
VALUES
VΡ
T
FOR
EACH
SOLVE
THE
FOLLOWING
CONVEX
OPTIMIZATION
PROBLEM
MINIMIZE
ΨT
Ρ
P
SUBJECT
TO
P
D
SOLVE
THE
FOLLOWING
CONVEX
OPTIMIZATION
PROBLEM
WHERE
P
DENOTES
THE
SOLUTION
FOUND
AT
STEP
MINIMIZE
H
Q
SUBJECT
TO
Q
D
Q
COMPATIBLE
WITH
P
OUTPUT
ΨT
Ρ
Q
WHERE
Q
DENOTES
THE
SOLUTION
FOUND
AT
STEP
FIGURE
ALGORITHM
A
COMPUTING
GIVEN
Ρ
AND
A
TENSOR
T
WITH
A
DECOMPOSITION
THAT
HAS
A
TIGHT
SUPPORT
A
LOWER
BOUND
ON
LOG
VΡ
T
AS
ALREADY
MENTIONED
THE
OPTIMIZATION
PROBLEM
OPT
HAS
A
UNIQUE
SOLUTION
WHILE
THE
SOLUTION
OF
THE
OPTIMIZATION
PROBLEM
MAY
NOT
BE
UNIQUE
IT
CAN
ACTUALLY
BE
SHOWN
USING
THE
STRICT
CONCAVITY
OF
THE
ENTROPY
FUNCTION
THAT
TWO
SOLUTIONS
OF
MUST
HAVE
THE
SAME
MARGINAL
PROBABILITY
DISTRIBUTIONS
SINCE
THE
DOMAIN
OF
THE
OPTIMIZATION
PROBLEM
DEPENDS
ONLY
ON
THE
MARGINAL
DISTRIBUTIONS
OF
P
THE
OUTPUT
OF
ALGORITHM
A
DOES
NOT
DEPEND
ON
WHICH
SOLUTION
P
WAS
FOUND
AT
STEP
THIS
OUTPUT
IS
THUS
UNIQUE
AND
FROM
THEOREM
AND
THE
DISCUSSION
ABOVE
IT
GIVES
A
LOWER
BOUND
ON
LOG
VΡ
T
WE
STATE
THIS
CONCLUSION
IN
THE
FOLLOWING
THEOREM
THEOREM
IF
THE
SUPPORT
OF
T
IS
TIGHT
THEN
ALGORITHM
A
OUTPUTS
A
LOWER
BOUND
ON
LOG
VΡ
T
NOTE
THAT
THE
OUTPUT
OF
A
IS
NOT
ALWAYS
THE
BEST
LOWER
BOUND
ON
LOG
VΡ
T
THAT
CAN
BE
OBTAINED
FROM
THEOREM
THIS
POINT
WILL
BE
DISCUSSED
IN
THE
NEXT
SUBSECTION
LET
US
NOW
DISCUSS
THE
TIME
COMPLEXITY
OF
IMPLEMENTING
THE
ALGORITHM
OF
FIGURE
THE
WORST
CASE
RUNNING
TIME
DEPENDS
ON
THE
TIME
NEEDED
TO
SOLVE
THE
TWO
OPTIMIZATION
PROBLEMS
AND
AT
STEPS
AND
LET
V
ΨT
Ρ
Q
DENOTE
THE
OUTPUT
OF
AN
EXACT
IMPLEMENTATION
OF
ALGORITHM
A
THEOREM
SHOWS
THAT
V
LOG
VΡ
T
SINCE
BOTH
AND
ARE
CONVEX
AND
SINCE
THE
NUMBER
OF
VARIABLES
IS
UPPER
BOUNDED
BY
FOR
ANY
Ε
BOTH
PROBLEMS
CAN
BE
SOLVED
WITH
ACCURACY
Ε
IN
TIME
POLY
LOG
Ε
USING
STANDARD
METHODS
THUS
FOR
ANY
Ε
WE
CAN
COMPUTE
IN
TIME
POLY
LOG
Ε
A
VALUE
V
SUCH
THAT
V
V
V
Ε
V
IN
PARTICULAR
WE
CAN
USE
Ε
AS
A
LOWER
BOUND
ON
LOG
VΡ
T
WE
FINALLY
EXPLAIN
HOW
TO
EXPLOIT
SYMMETRIES
OF
THE
DECOMPOSITION
OF
T
TO
REDUCE
THE
NUMBER
OF
VARIABLES
IN
ALGORITHM
A
THESE
OBSERVATIONS
WILL
ENABLE
US
TO
SLIGHTLY
SIMPLIFY
THE
EXPOSITION
OF
OUR
RESULTS
IN
THE
NEXT
SECTIONS
WE
FIRST
DEFINE
INVARIANCE
OF
A
DECOMPOSITION
OF
A
TENSOR
TIALLY
HOW
THE
POWERS
OF
THE
CONSTRUCTION
BY
COPPERSMITH
AND
WINOGRAD
WERE
STUDIED
IN
PREVIOUS
WORKS
GIVEN
ANY
SUBGROUP
G
OF
SS
LET
US
CONSIDER
THE
VECTOR
SPACE
G
OF
DIMENSION
Χ
G
DEFINED
IN
SECTION
IT
WILL
BE
CONVENIENT
TO
REPRESENT
FUNCTIONS
IN
THIS
VECTOR
SPACE
BY
VECTORS
IN
R
BY
FIXING
AN
ARBITRARY
ORDERING
OF
THE
ELEMENTS
IN
LET
R
BE
A
GENERATING
MATRIX
OF
SIZE
Χ
G
FOR
G
I
E
THE
COLUMNS
OF
R
FORM
A
BASIS
OF
G
SINCE
EACH
COORDINATE
OF
R
CORRESPONDS
TO
AN
ELEMENT
OF
WE
WRITE
RSJ
FOR
AND
J
Χ
G
TO
REPRESENT
THE
ELEMENT
IN
THE
TH
ROW
AND
THE
J
TH
COLUMN
OF
R
THE
APPROACH
IS
BASED
ON
THE
FOLLOWING
PROPOSITION
WHICH
IS
SIMILAR
TO
A
CHARACTERIZATION
GIVEN
IN
ITS
PROOF
IS
OMITTED
FROM
THIS
VERSION
PROPOSITION
FOR
ANY
P
P
D
G
THAT
ARE
COMPATIBLE
THE
EQUALITY
ΓS
P
H
P
H
P
HOLDS
IF
P
SATISFIES
THE
FOLLOWING
TWO
CONDITIONS
I
P
FOR
ANY
SUCH
THAT
R
CONTAINS
AT
LEAST
ONE
NON
ZERO
ENTRY
IN
ITS
ROW
LABELED
BY
P
II
RSJ
LOG
P
FOR
ALL
J
Χ
G
IN
PARTICULAR
APPLYING
PROPOSITION
WITH
P
P
SHOWS
THAT
IF
CONDITIONS
I
AND
II
ARE
SATISFIED
THEN
ΓS
P
WHICH
IMPLIES
LOG
VΡ
T
ΨT
Ρ
P
FROM
THEOREM
THIS
MOTIVATES
THE
ALGORITHM
DESCRIBED
IN
FIGURE
THAT
OUTPUTS
A
LOWER
BOUND
ON
LOG
VΡ
T
WE
WILL
CALL
IT
ALGORITHM
B
ALGORITHM
B
INPUT
SOLVE
THE
FOLLOWING
OPTIMIZATION
PROBLEM
DEFINITION
LET
T
BE
A
TENSOR
THAT
HAS
A
DECOMPOSITION
D
WITH
SUPPORT
AND
COMPONENTS
T
THE
DECOMPOSITION
D
IS
G
INVARIANT
IF
ΨT
Ρ
P
Σ
ΨT
Ρ
P
FOR
ANY
P
D
AND
ANY
Σ
G
WITH
A
SLIGHT
ABUSE
OF
LANGUAGE
WE
WILL
SAY
GIVEN
A
SUBGROUP
L
OF
THAT
D
IS
L
INVARIANT
IF
IS
L
SYMMETRIC
AND
D
IS
LS
INVARIANT
SEE
SECTION
FOR
THE
DEFINITION
OF
LS
ASSUME
THAT
THE
DECOMPOSITION
D
OF
THE
TENSOR
T
ON
WHICH
WE
WANT
TO
APPLY
ALGORITHM
A
IS
G
INVARIANT
WHERE
G
IS
A
SUBGROUP
OF
SS
CONSIDER
THE
OPTIMIZATION
PROBLEM
SINCE
THE
VALUE
OF
ITS
OBJECTIVE
FUNCTION
IS
THEN
UNCHANGED
UNDER
THE
ACTION
OF
ANY
PERMUTATION
Σ
G
ON
P
HAS
A
SOLUTION
THAT
IS
G
INVARIANT
SEE
E
G
FOR
A
DISCUSSION
OF
SYMMETRIES
IN
CONVEX
OPTIMIZATION
NOW
IF
P
IS
G
INVARIANT
THEN
THE
UNIQUE
SOLUTION
OF
THE
OPTIMIZATION
PROBLEM
IS
G
INVARIANT
AS
WELL
SINCE
THE
VALUE
OF
THE
FUNCTION
H
Q
IS
UNCHANGED
UNDER
THE
ACTION
OF
ANY
PERMUTATION
ON
Q
THIS
MEANS
THAT
IF
THE
DECOMPOSITION
D
IS
G
INVARIANT
THEN
D
CAN
BE
REPLACED
BY
D
G
AT
BOTH
STEPS
AND
OF
ALGORITHM
A
NOTE
THAT
THIS
SET
OF
PROBABILITY
DISTRIBUTIONS
CAN
BE
PARAMETRIZED
BY
DIM
F
G
PARAMETERS
INSTEAD
OF
PARAMETERS
THE
SUPPORT
Z
Z
Z
FOR
THE
TENSOR
T
A
VALUE
Ρ
THE
VALUES
VΡ
T
FOR
EACH
A
SUBGROUP
G
OF
SS
SUCH
THAT
THE
DECOMPOSITION
OF
T
IS
G
INVARIANT
MINIMIZE
ΨT
Ρ
P
SUBJECT
TO
P
D
G
P
SATISFIES
COND
I
II
OF
PROP
OUTPUT
ΨT
Ρ
P
WHERE
P
DENOTES
THE
SOLUTION
FOUND
AT
STEP
FIGURE
ALGORITHM
B
COMPUTING
GIVEN
Ρ
AND
A
TENSOR
T
WITH
A
DECOMPOSITION
THAT
HAS
A
TIGHT
SUPPORT
A
LOWER
BOUND
ON
LOG
VΡ
T
NOTE
THAT
WHEN
Χ
G
ALGORITHMS
A
AND
B
SOLVE
EXACTLY
THE
SAME
OPTIMIZATION
PROBLEM
SINCE
IN
ALGORITHM
B
CONDITIONS
I
AND
II
ARE
SATISFIED
FOR
ANY
P
D
G
AND
Q
P
IN
ALGORITHM
A
AND
THUS
OUTPUT
THE
SAME
VALUE
WHEN
Χ
G
ALGORITHM
B
USUALLY
GIVES
BETTER
LOWER
BOUNDS
THAN
ALGORITHM
A
BUT
AT
THE
PRICE
OF
INTRODUCING
Χ
G
HIGHLY
NONCONVEX
CONSTRAINTS
WHICH
MAKES
THE
OPTIMIZATION
PROBLEM
MUCH
HARDER
TO
SOLVE
BOTH
IN
THEORY
AND
IN
PRACTICE
EVEN
FOR
A
MODEST
NUMBER
OF
VARIABLES
ANOTHER
APPROACH
IN
THIS
SUBSECTION
WE
DESCRIBE
ANOTHER
APPROACH
TO
OBTAIN
LOWER
BOUNDS
ON
VΡ
T
USING
THEOREM
WHICH
IS
ESSEN
LET
T
AND
T
BE
TWO
TRILINEAR
FORMS
WITH
DECOMPOSITIONS
D
AND
D
RESPECTIVELY
LET
SUPP
T
Z
Z
Z
AND
SUPP
T
㻟㻜㻜
POWERS
OF
TENSORS
Z
Z
Z
DENOTE
THEIR
SUPPORTS
AND
T
SUPP
T
AND
T
SUPP
T
DENOTE
THEIR
COMPONENT
SETS
ASSUME
THAT
BOTH
SUPPORTS
ARE
TIGHT
FIX
Ρ
AND
ASSUME
THAT
LOWER
BOUNDS
ON
THE
VALUES
VΡ
T
AND
VΡ
T
ARE
KNOWN
FOR
EACH
SUPP
T
AND
EACH
SUPP
T
IN
THIS
SECTION
WE
DESCRIBE
A
METHOD
INSPIRED
BY
AND
AND
ALSO
USED
IN
TO
ANALYZE
VΡ
T
T
AND
THEN
SHOW
HOW
TO
USE
IT
TO
ANALYZE
VΡ
T
M
WHEN
M
IS
A
POWER
OF
TWO
IN
THIS
SECTION
WE
WILL
DENOTE
Z
Z
Z
Z
THE
THREE
COORDINATE
FUNCTIONS
OF
Z
Z
Z
CONSIDER
THE
TENSOR
X
X
T
T
T
T
SUPP
T
SUPP
T
CONSIDER
THE
FOLLOWING
DECOMPOSITION
OF
T
T
THE
SUPPORT
SUPP
T
T
Z
Z
Z
IS
THE
SET
OF
ALL
TRIPLES
FOR
SUPP
T
AND
SUPP
T
AND
FOR
EACH
A
B
C
SUPP
T
T
THE
ASSOCIATED
COMPONENT
IS
X
T
T
T
T
A
B
C
WHERE
THE
SUM
IS
OVER
ALL
SUPP
T
SUPP
T
SUCH
THAT
A
B
AND
C
NOTE
THAT
THE
SUPPORT
OF
THIS
DECOMPOSITION
IS
TIGHT
IF
LOWER
BOUNDS
ON
THE
VALUE
OF
EACH
COMPONENT
ARE
KNOWN
THEN
WE
CAN
USE
THIS
DECOMPOSITION
TO
OBTAIN
A
LOWER
BOUND
ON
VΡ
T
T
BY
USING
ALGORITHM
A
ON
T
T
WHICH
REQUIRES
SOLVING
TWO
CONVEX
OPTIMIZATION
PROBLEMS
EACH
HAVING
SUPP
T
T
VARIABLES
WE
NOW
EXPLAIN
HOW
TO
EVALUATE
THE
VALUE
OF
THOSE
COMPONENTS
T
T
A
B
C
FOR
ANY
A
B
C
SUPP
T
T
CONSIDER
THE
FOLLOWING
DECOMPOSITION
OF
T
T
A
B
C
THE
SUPPORT
IS
SUPP
T
A
B
C
SUPP
T
AND
FOR
EACH
ELEMENT
IN
THIS
SET
THE
CORRESPONDING
COMPONENT
IS
T
T
A
B
C
NOTE
THAT
THE
SUPPORT
IN
THIS
DECOMPOSITION
IS
TIGHT
AND
HAS
SIZE
AT
MOST
SUPP
T
THE
VALUE
OF
EACH
COMPONENT
CAN
BE
LOWER
BOUNDED
AS
VΡ
T
T
A
B
C
VΡ
T
VΡ
T
A
B
C
FROM
THE
SUPERMULTIPLICATIVITY
OF
THE
VALUE
AS
WE
SUPPOSED
THAT
THE
LOWER
BOUNDS
ON
THE
VALUES
OF
EACH
COMPONENT
OF
T
AND
T
ARE
KNOWN
WE
CAN
USE
ALGORITHM
A
ON
EACH
T
T
A
B
C
TO
OBTAIN
A
LOWER
BOUND
ON
VΡ
T
T
A
B
C
WHICH
REQUIRES
SOLVING
TWO
CONVEX
OPTIMIZATION
PROBLEMS
EACH
HAVING
AT
MOST
SUPP
T
VARIABLES
LET
US
NOW
CONSIDER
THE
CASE
T
T
WE
HAVE
JUST
SHOWN
THE
FOLLOWING
RESULT
A
LOWER
BOUND
ON
VΡ
T
CAN
BE
COMPUTED
BY
SOLVING
TWO
CONVEX
OPTIMIZATION
PROBLEMS
WITH
SUPP
T
VARIABLES
AND
SUPP
T
CONVEX
OPTIMIZATION
PROBLEMS
WITH
AT
MOST
SUPP
T
VARIABLES
AN
IMPORTANT
POINT
IS
THAT
THIS
METHOD
ADDITIONALLY
GIVES
AS
DESCRIBED
IN
THE
PREVIOUS
PARAGRAPHS
A
DECOMPOSITION
OF
T
WITH
TIGHT
SUPPORT
AND
A
LOWER
BOUND
ON
VΡ
T
A
B
C
FOR
EACH
COMPONENT
T
A
B
C
THIS
INFORMATION
CAN
THEN
BE
USED
TO
ANALYZE
THE
TRILINEAR
FORM
T
T
T
BY
REPLACING
T
㻟㻜㻝
BY
T
IN
THE
ABOVE
ANALYSIS
GIVING
A
DECOMPOSITION
OF
T
WITH
TIGHT
SUPPORT
A
LOWER
BOUND
ON
VΡ
T
AND
A
LOWER
BOUND
ON
THE
VALUE
VΡ
T
A
B
C
OF
EACH
COMPONENT
BY
ITERATING
THIS
APPROACH
R
RTIMES
FOR
ANY
R
WE
CAN
ANAOBTAIN
A
LOWER
LYZE
THE
TRILINEARRFORM
T
AND
IN
PARTICULAR
R
BOUND
ON
VΡ
T
LET
US
DENOTE
BY
THE
DECOMPOSITION
R
R
OF
T
OBTAINED
BY
THIS
APPROACH
ITS
SUPPORT
SUPP
T
IS
THE
SET
OF
ALL
TRIPLES
R
R
FOR
SUPP
T
FOR
ANY
A
B
C
SUPP
T
THE
CORRESPONDING
COMPONENT
IS
X
R
R
T
T
T
A
B
C
R
WHERE
THE
SUM
IS
OVER
ALL
SUPP
T
SUCH
THAT
A
B
AND
OF
EACH
C
THIS
APPROACH
ALSO
GIVES
A
DECOMPOSITION
DABC
A
B
C
IN
THIS
DECOMPOSITION
THE
SUPPORT
COMPONENT
T
R
IS
THE
SET
OF
ALL
THE
ELEMENTS
IN
WHICH
WE
DENOTE
SABC
SUPP
T
SUCH
THAT
A
B
C
SUPP
T
FOR
ANY
IS
T
R
SABC
R
THE
CORRESPONDING
COMPONENT
OF
T
T
R
A
B
C
A
B
C
THE
OVERALL
NUMBER
OF
CONVEX
OPTIMIZATION
PROBLEMS
THAT
R
NEED
TO
BE
SOLVED
IN
ORDER
TO
ANALYZE
T
RBY
THE
ABOVE
APPROACH
IS
UPPER
BOUNDED
BY
R
SUPP
T
WHILE
THE
NUMBER
OF
VARIABLES
IN
EACH
OPTIMIZATION
PROBLEM
IS
UPPER
R
BOUNDED
BY
SUPP
T
IN
THE
CASE
WHERE
SUPP
T
IS
B
TIGHT
WE
CAN
GIVE
A
SIMPLE
UPPER
BOUND
ON
THIS
QUANTITY
INDEED
WHEN
SUPP
T
IS
B
TIGHT
OUR
CONSTRUCTION
GUARANTEES
THAT
R
R
SUPP
T
IS
TIGHT
WHICH
IMPLIES
THAT
SUPP
T
R
WE
THUS
OBTAIN
THE
FOLLOWING
RESULT
THEOREM
LET
T
BE
A
TRILINEAR
FORM
THAT
HAS
A
DECOMPOSITION
WITH
B
TIGHT
SUPPORT
SUPP
T
AND
COMPONENTS
T
FIX
Ρ
AND
ASSUME
THAT
A
LOWER
BOUND
ON
THE
VALUE
VΡ
T
IS
KNOWN
FOR
EACH
SUPP
T
THEN
FOR
ANY
INR
TEGER
R
A
LOWER
BOUND
ON
VΡ
T
CAN
BE
COMPUTED
R
BY
SOLVING
POLY
B
CONVEX
OPTIMIZATIONS
PROBLEMS
EACH
OPTIMIZATION
PROBLEM
HAVING
POLY
B
VARIABLES
WE
FINALLY
PRESENT
TWO
SIMPLE
LEMMAS
THAT
SHOW
HOW
TO
EXPLOIT
THE
SYMMETRIES
OF
THE
DECOMPOSITION
OF
T
TO
REDUCE
THE
NUMBER
OF
VARIABLES
THE
PROOFS
ARE
OMITTED
R
LEMMA
FOR
ANY
R
AND
ANY
A
B
C
SUPP
T
IS
ID
Π
INVARIANT
WHERE
ID
DETHE
DECOMPOSITION
DABC
NOTES
THE
IDENTITY
PERMUTATION
AND
Π
IS
THE
PERMUTATION
ON
SUCH
THAT
SABC
Π
A
B
C
R
FOR
ALL
SABC
LEMMA
LET
L
BE
A
SUBGROUP
OF
SUPP
T
IS
L
SYMMETRIC
AND
THAT
ASSUME
THAT
VΡ
T
VΡ
T
SΣ
SΣ
SΣ
FOR
ANY
Σ
L
AND
ANY
SUPP
T
THEN
D
R
IS
L
INVARIANT
AND
FOR
ANY
R
THE
DECOMPOSITION
IS
L
INVARIANT
AS
WELL
FROM
THE
DISCUSSION
OF
SECTION
LEMMA
ENABLES
US
TO
REDUCE
THE
NUMBER
OF
VARIABLES
WHEN
COMPUTING
THE
LOWER
R
BOUND
ON
VΡ
T
A
B
C
USING
ALGORITHM
A
INSTEAD
OF
R
SOLVING
AN
OPTIMIZATION
PROBLEM
OVER
D
SUPP
T
A
B
C
R
WE
ONLY
NEED
TO
CONSIDER
D
SUPP
T
A
B
C
ID
Π
SIMILARLY
IF
THE
CONDITIONS
OF
LEMMAR
ARE
SATISFIED
THEN
INSTEAD
OF
CONSIDERING
D
SUPP
T
WE
NEED
ONLY
TO
CONR
SIDER
D
SUPP
T
L
WHEN
COMPUTING
THE
LOWER
BOUND
ON
R
VΡ
T
USING
ALGORITHM
A
REMARK
THE
APPROACH
DESCRIBED
IN
THIS
SECTION
CAN
BE
GENERALIZED
TO
OBTAIN
LOWER
BOUNDS
ON
VΡ
T
M
WHEN
M
IS
NOT
A
POWER
OF
TWO
FOR
INSTANCE
THE
THIRD
POWER
CAN
BE
ANALYZED
BY
STUDYING
T
T
WITH
T
T
ANOTHER
POSSIBLE
STRAIGHTFORWARD
GENERALIZATION
IS
TO
ALLOW
OTHER
LINEAR
DEPENDENCES
IN
THE
DEFINITION
OF
THE
SUPPORT
I
E
DEFINING
THE
SUPPORT
OF
T
T
AS
THE
SET
OF
ALL
TRIPLES
FOR
SUPP
T
AND
SUPP
T
WHERE
U
Z
CAN
BE
FREELY
CHOSEN
THESE
TWO
GENERALIZATIONS
NEVERTHELESS
DO
NOT
SEEM
TO
LEAD
TO
ANY
IMPROVEMENT
FOR
Ω
WHEN
APPLIED
TO
EXISTING
CONSTRUCTIONS
WE
HAVE
VΡ
T
AND
VΡ
T
Q
Ρ
FROM
THE
DEFINITION
OF
THE
VALUE
THE
OTHER
COMPONENTS
T
AND
T
ARE
OBTAINED
BY
PERMUTING
THE
COORDINATES
OF
T
WHILE
THE
COMPONENTS
T
AND
T
ARE
OBTAINED
BY
PERMUTING
THE
COORDINATES
OF
T
WE
NOW
USE
THEOREM
TO
OBTAIN
AN
UPPER
BOUND
ON
Ω
LET
P
BE
A
PROBABILITY
DISTRIBUTION
IN
D
LET
US
WRITE
P
P
P
P
P
AND
P
THE
MARGINAL
DISTRIBUTIONS
OF
P
ARE
AND
SINCE
THE
ONLY
ELEMENT
IN
D
COMPATIBLE
WITH
P
IS
P
WE
HAVE
ΓS
P
THEOREM
THUS
IMPLIES
THAT
H
H
H
Q
Ρ
VΡ
T
EXP
FOR
ANY
Ρ
EVALUATING
THIS
EXPRESSION
WITH
Q
AND
Ρ
GIVES
VΡ
T
USING
THEOREM
AND
THE
FACT
THAT
R
T
Q
WE
CONCLUDE
THAT
Ω
THIS
IS
THE
SAME
UPPER
BOUND
AS
THE
BOUND
OBTAINED
IN
SECTION
OF
APPLICATION
IN
THIS
SECTION
WE
APPLY
THE
THEORY
DEVELOPED
IN
THE
PREVIOUS
SECTIONS
TO
THE
CONSTRUCTION
T
BY
COPPERSMITH
AND
WINOGRAD
IN
ORDER
TO
UPPER
BOUNDS
ON
Ω
CONSTRUCTION
LET
F
BE
AN
ARBITRARY
FIELD
LET
Q
BE
A
POSITIVE
INTEGER
AND
CONSIDER
THREE
VECTOR
SPACES
U
V
AND
W
OF
DIMENSION
Q
OVER
F
TAKE
A
BASIS
XQ
OF
U
A
BASIS
YQ
OF
V
AND
A
BASIS
ZQ
OF
W
THE
TRILINEAR
FORM
T
CONSIDERED
BY
COPPERSMITH
AND
WINOGRAD
IS
THE
FOLLOWING
TRILINEAR
FORM
ON
U
V
W
T
Q
X
YI
ZI
XI
ZI
XI
YI
ZQ
I
YQ
XQ
IT
WAS
SHOWN
IN
THAT
R
T
Q
CONSIDER
THE
FOLLOWING
DECOMPOSITION
OF
U
V
AND
W
U
V
W
WHERE
SPAN
SPAN
XQ
AND
SPAN
XQ
SPAN
SPAN
YQ
AND
SPAN
YQ
SPAN
SPAN
ZQ
AND
SPAN
ZQ
THIS
DECOMPOSITION
INDUCES
A
DECOMPOSITION
D
OF
T
WITH
TIGHT
SUPPORT
ANALYZING
THE
POWERS
USING
ALGORITHM
A
R
FOR
ANY
R
WE
NOW
CONSIDER
THE
TENSOR
T
AND
ANALYZE
IT
USING
THE
FRAMEWORK
AND
THE
RNOTATIONS
OF
SECTION
THE
SUPPORT
OF
ITS
DECOMPOSITION
IS
THE
SET
OF
ALL
TRIPLES
A
B
C
SUCH
THAT
A
B
C
NOTE
THAT
THE
DECOMPOSITION
D
OF
T
SATISFIES
THE
CONDITIONS
OF
LEMMA
FOR
THE
SUBGROUP
R
L
OF
WHICH
IMPLIES
THAT
IS
INVARIANT
THUS
FROM
THE
DISCUSSION
IN
SECTION
R
WHEN
APPLYING
ALGORITHM
A
ON
THE
TRILINEAR
FORM
T
IN
ORDER
TO
OBTAIN
A
LOWER
BOUND
ON
VΡ
T
WE
ONLY
NEED
TO
CONSIDER
PROBAR
BILITY
DISTRIBUTIONS
IN
D
SUPP
T
THIS
SET
CAN
BE
R
PARAMETRIZED
BY
DIM
F
SUPP
T
PARAMETERS
REMEMBER
THAT
WE
ALSO
NEED
A
LOWER
BOUND
ON
THE
VALUE
OF
R
R
EACH
COMPONENT
T
A
B
C
BEFORE
APPLYING
A
ON
T
USING
THE
METHOD
DESCRIBED
IN
SECTION
THESE
LOWER
BOUNDS
ARE
COMPUTED
RECURSIVELY
BY
APPLYING
ALGORITHM
A
ON
THE
OF
THE
COMPONENT
ACTUALLY
WE
DO
NOT
DECOMPOSITION
DABC
NEED
TO
APPLY
A
WHEN
A
B
OR
C
SINCE
A
LOWER
BOUND
ON
THE
VALUE
CAN
BE
FOUND
ANALYTICALLY
IN
THIS
CASE
AS
STATED
IN
THE
FOLLOWING
LEMMA
SEE
FOR
A
PROOF
LEMMA
FOR
ANY
R
AND
ANY
B
R
X
B
R
EC
Q
A
B
B
VΡ
T
E
B
E
B
E
E
B
E
B
MOD
TABLE
PRESENTS
FOR
R
THE
NUMBER
OF
VARIABLES
IN
THE
GLOBAL
OPTIMIZATION
PROBLEM
THE
COMPATIBILITY
DEGREE
AND
THE
BEST
UPPER
BOUND
ON
Ω
WE
OBTAINED
BY
THIS
APPROACH
COMPUTATIONS
HAVE
BEEN
DONE
USING
THE
MATLAB
SOFTWARE
CVX
FOR
CONVEX
OPTIMIZATION
THE
COMPONENTS
ASSOCIATED
WITH
AND
ARE
T
XQ
Q
X
XI
YI
Z
T
Q
I
ALL
THE
PROGRAMS
USED
TO
PERFORM
THE
NUMERICAL
CALCULATIONS
DESCRIBED
IN
THIS
SECTION
AND
OBTAIN
OUR
UPPER
BOUNDS
ON
Ω
ARE
AVAILABLE
AS
HTTP
WWW
FRANCOISLEGALL
COM
MATRIXMULTIPLICATION
PROGRAMS
ZIP
㻟㻜㻞
THE
LOWER
BOUND
OF
LEMMA
IS
OBTAINED
DIRECTLY
I
E
WITHOUT
USING
THEOREM
BY
OBSERVING
THAT
WHEN
A
B
OR
C
THE
COMPONENT
IS
ISOMORPHIC
TO
THE
TENSOR
OF
A
MATRIX
PRODUCT
AND
IS
ACTUALLY
BETTER
THAN
THE
LOWER
BOUND
OBTAINED
BY
ALGORITHM
A
OR
ALGORITHM
B
R
TABLE
ANALYSIS
OF
T
USING
ALGORITHM
A
WITH
Q
FOR
R
AND
Q
FOR
R
R
DIMENSION
OF
F
SUPP
T
UPPER
BOUND
R
Χ
SUPP
T
Ω
Ω
Ω
Ω
Ω
OBTAINED
USING
BOTH
ALGORITHMS
A
AND
B
AS
MENTIONED
IN
THE
INTRODUCTION
THE
BEST
KNOWN
UPPER
BOUND
ON
Ω
OBTAINED
FROM
THE
FOURTH
POWER
OF
T
IS
Ω
WHICH
IS
SLIGHTLY
BETTER
THAN
WHAT
WE
OBTAINED
IN
THE
PREVIOUS
SUBSECTION
USING
ALGORITHM
A
THIS
BETTER
BOUND
CAN
ACTUALLY
BE
OBTAINED
BY
USING
ALGORITHM
B
INSTEAD
OF
ALGORITHM
A
WHEN
COMPUTING
THE
LOWER
BOUND
ON
VΡ
T
MORE
PRECISELY
IN
THIS
CASE
THE
OPTIMIZATION
PROBLEM
IN
ALGORITHM
B
ASKS
TO
MINIMIZE
ΨT
Ρ
P
SUCH
THAT
P
D
SUPP
T
AND
P
SATISFIES
TWO
ADDITIONAL
CONSTRAINTS
SINCE
Χ
SUPP
T
THESE
CONSTRAINTS
ARE
HIGHLY
NON
CONVEX
BUT
SINCE
THEIR
NUMBER
IS
ONLY
TWO
THE
RESULTING
OPTIMIZATION
PROBLEM
CAN
BE
SOLVED
FAIRLY
EASILY
GIVING
THE
SAME
UPPER
BOUND
Ω
WE
CAN
ALSO
USE
ALGORITHM
B
INSTEAD
OF
ALGORITHM
A
TO
ANALYZE
T
BUT
SOLVING
THE
CORRESPONDING
OPTIMIZATION
PROBLEMS
IN
THIS
CASE
WAS
DELICATE
AND
REQUIRED
A
COMBINATION
OF
SEVERAL
TOOLS
WE
OBTAINED
LOWER
BOUNDS
ON
THE
VALUES
OF
EACH
COMPONENT
BY
SOLVING
THE
NON
CONVEX
OPTIMIZATION
PROBLEMS
USING
THE
NLPSOLVE
FUNCTION
IN
MAPLE
WHILE
THE
LOWER
BOUND
ON
VΡ
T
HAS
BEEN
OBTAINED
BY
SOLVING
THE
CORRESPONDING
OPTIMIZATION
PROBLEM
WITH
VARIABLES
AND
NON
CONVEX
CONSTRAINTS
USING
THE
FMINCON
FUNCTION
IN
MATLAB
THE
NUMERICAL
CALCULATIONS
GIVE
VΡ
T
Q
WHICH
SHOWS
THAT
Ω
WHILE
THE
NON
CONVEX
OPTIMIZATION
PROBLEMS
OF
ALGORITHM
B
SEEM
INTRACTABLE
WHEN
STUDYING
HIGHER
POWERS
OF
T
THESE
POWERS
CAN
BE
ANALYZED
BY
APPLYING
ALGORITHM
A
AS
IN
THE
PREVIOUS
SUBSECTION
BUT
USING
THIS
TIME
THE
LOWER
BOUNDS
ON
THE
VALUES
OF
THE
COMPONENTS
VΡ
T
A
B
C
OBTAINED
BY
ALGORITHM
B
AS
A
STARTING
POINT
THIS
STRATEGY
CAN
BE
EQUIVALENTLY
DESCRIBED
AS
USING
ALGORITHM
A
TO
ANALYZE
POWERS
OF
T
WHERE
T
T
WITH
LOWER
BOUNDS
ON
THE
VALUES
OF
EACH
COMPONENT
OF
T
COMPUTED
BY
ALGORITHM
B
FOR
Q
AND
Ρ
WE
OBTAIN
VΡ
T
Q
WHICH
SHOWS
THAT
Ω
WE
OBTAIN
THIS
PAPER
AND
TO
HARUMICHI
NISHIMURA
SUGURU
TAMAKI
AND
YUICHI
YOSHIDA
FOR
STIMULATING
DISCUSSIONS
THIS
WORK
IS
SUPPORTED
BY
THE
GRANT
IN
AID
FOR
YOUNG
SCIENTISTS
B
NO
OF
THE
JSPS
AND
THE
GRANT
IN
AID
FOR
SCIENTIFIC
RESEARCH
ON
INNOVATIVE
AREAS
NO
OF
THE
MEXT
FOR
Q
AND
Ρ
VΡ
T
Q
WHICH
SHOWS
THAT
Ω
WE
PROPOSE
A
NEW
NOTION
OF
SECURE
MULTIPARTY
COMPUTATION
AIDED
BY
A
COMPUTATIONALLY
POWERFUL
BUT
UNTRUSTED
CLOUD
SERVER
IN
THIS
NOTION
THAT
WE
CALL
ON
THE
FLY
MULTIPARTY
COMPUTATION
MPC
THE
CLOUD
CAN
NON
INTERACTIVELY
PERFORM
ARBITRARY
DYNAMICALLY
CHOSEN
COMPUTATIONS
ON
DATA
BELONGING
TO
ARBITRARY
SETS
OF
USERS
CHOSEN
ON
THE
FLY
ALL
USER
INPUT
DATA
AND
INTERMEDIATE
RESULTS
ARE
PROTECTED
FROM
SNOOPING
BY
THE
CLOUD
AS
WELL
AS
OTHER
USERS
THIS
EXTENDS
THE
STANDARD
NOTION
OF
FULLY
HOMOMORPHIC
ENCRYPTION
FHE
WHERE
USERS
CAN
ONLY
ENLIST
THE
CLOUD
HELP
IN
EVALUATING
FUNCTIONS
ON
THEIR
OWN
ENCRYPTED
DATA
IN
ON
THE
FLY
MPC
EACH
USER
IS
INVOLVED
ONLY
WHEN
INITIALLY
UPLOADING
HIS
ENCRYPTED
DATA
TO
THE
CLOUD
AND
IN
A
FINAL
OUTPUT
DECRYPTION
PHASE
WHEN
OUTPUTS
ARE
REVEALED
THE
COMPLEXITY
OF
BOTH
IS
INDEPENDENT
OF
THE
FUNCTION
BEING
COMPUTED
AND
THE
TOTAL
NUMBER
OF
USERS
IN
THE
SYSTEM
WHEN
USERS
UPLOAD
THEIR
DATA
THEY
NEED
NOT
DECIDE
IN
ADVANCE
WHICH
FUNCTION
WILL
BE
COMPUTED
NOR
WHO
THEY
WILL
COMPUTE
WITH
THEY
NEED
ONLY
RETROACTIVELY
APPROVE
THE
EVENTUALLY
CHOSEN
FUNCTIONS
AND
ON
WHOSE
DATA
THE
FUNCTIONS
WERE
EVALUATED
THIS
NOTION
IS
QUALITATIVELY
THE
BEST
POSSIBLE
IN
MINIMIZING
INTERACTION
SINCE
THE
USERS
INTERACTION
IN
THE
DECRYPTION
STAGE
IS
INEVITABLE
WE
SHOW
THAT
REMOVING
IT
WOULD
IMPLY
GENERIC
PROGRAM
OBFUSCATION
AND
IS
THUS
IMPOSSIBLE
OUR
CONTRIBUTIONS
ARE
TWO
FOLD
WE
SHOW
HOW
ON
THE
FLY
MPC
CAN
BE
ACHIEVED
USING
A
NEW
TYPE
OF
ENCRYPTION
SCHEME
THAT
WE
CALL
MULTIKEY
FHE
WHICH
IS
CAPABLE
OF
OPERATING
ON
INPUTS
ENCRYPTED
UNDER
MULTIPLE
UNRELATED
KEYS
A
CIPHERTEXT
RESULTING
FROM
A
MULTIKEY
EVALUATION
CAN
BE
JOINTLY
DECRYPTED
USING
THE
SECRET
KEYS
OF
ALL
THE
USERS
INVOLVED
IN
THE
COMPUTATION
WE
CONSTRUCT
A
MULTIKEY
FHE
SCHEME
BASED
ON
NTRU
A
VERY
EFFICIENT
PUBLIC
KEY
ENCRYPTION
SCHEME
PROPOSED
PERMISSION
TO
MAKE
DIGITAL
OR
HARD
COPIES
OF
ALL
OR
PART
OF
THIS
WORK
FOR
PERSONAL
OR
CLASSROOM
USE
IS
GRANTED
WITHOUT
FEE
PROVIDED
THAT
COPIES
ARE
NOT
MADE
OR
DISTRIBUTED
FOR
PROFIT
OR
COMMERCIAL
ADVANTAGE
AND
THAT
COPIES
BEAR
THIS
NOTICE
AND
THE
FULL
CITATION
ON
THE
FIRST
PAGE
TO
COPY
OTHERWISE
TO
REPUBLISH
TO
POST
ON
SERVERS
OR
TO
REDISTRIBUTE
TO
LISTS
REQUIRES
PRIOR
SPECIFIC
PERMISSION
AND
OR
A
FEE
STOC
MAY
NEW
YORK
NEW
YORK
USA
COPYRIGHT
ACM
VINOD
VAIKUNTANATHAN
IN
THE
IT
WAS
PREVIOUSLY
NOT
KNOWN
HOW
TO
MAKE
NTRU
FULLY
HOMOMORPHIC
EVEN
FOR
A
SINGLE
PARTY
WE
VIEW
THE
CONSTRUCTION
OF
MULTIKEY
FHE
FROM
NTRU
ENCRYPTION
AS
A
MAIN
CONTRIBUTION
OF
INDEPENDENT
INTEREST
ALTHOUGH
THE
TRANSFORMATION
TO
A
FULLY
HOMOMORPHIC
SYSTEM
DETERIORATES
THE
EFFICIENCY
OF
NTRU
SOMEWHAT
WE
BELIEVE
THAT
THIS
SYSTEM
IS
A
LEADING
CANDIDATE
FOR
A
PRACTICAL
FHE
SCHEME
CATEGORIES
AND
SUBJECT
DESCRIPTORS
E
DATA
DATA
ENCRYPTION
GENERAL
TERMS
THEORY
SECURITY
ALGORITHMS
KEYWORDS
FULLY
HOMOMORPHIC
ENCRYPTION
MULTIPARTY
COMPUTATION
CLOUD
COMPUTING
NTRU
ENCRYPTION
INTRODUCTION
WE
ARE
FAST
APPROACHING
A
NEW
DIGITAL
ERA
IN
WHICH
WE
STORE
OUR
DATA
AND
PERFORM
OUR
EXPENSIVE
COMPUTATIONS
REMOTELY
ON
POWERFUL
SERVERS
THE
CLOUD
IN
POPULAR
PARLANCE
WHILE
THE
CLOUD
OFFERS
NUMEROUS
ADVANTAGES
IN
COSTS
AND
FUNCTIONALITY
IT
RAISES
GRAVE
QUESTIONS
OF
CONFIDENTIALITY
SINCE
DATA
STORED
IN
THE
CLOUD
COULD
BE
VULNERABLE
TO
SNOOPING
BY
THE
CLOUD
PROVIDER
OR
EVEN
BY
OTHER
CLOUD
CLIENTS
SINCE
THIS
DATA
OFTEN
CONTAINS
SENSITIVE
INFORMATION
E
G
PERSONAL
CONVERSATIONS
MEDICAL
INFORMATION
AND
ORGANIZATIONAL
SECRETS
IT
IS
PRUDENT
FOR
THE
USERS
TO
ENCRYPT
THEIR
DATA
BEFORE
STORING
IT
IN
THE
CLOUD
RECENT
ADVANCES
IN
FULLY
HOMOMORPHIC
ENCRYPTION
FHE
MAKE
IT
POSSIBLE
TO
PERFORM
ARBITRARY
COMPUTATIONS
ON
ENCRYPTED
DATA
THUS
ENABLING
THE
PROSPECT
OF
PERSONAL
COMPUTERS
AND
MOBILE
DEVICES
AS
TRUSTED
BUT
WEAK
INTERFACES
TO
A
POWERFUL
BUT
UNTRUSTED
CLOUD
ON
WHICH
THE
BULK
OF
COMPUTING
IS
PERFORMED
FHE
IS
ONLY
SUITABLE
IN
SETTINGS
WHERE
THE
COMPUTATIONS
INVOLVE
A
SINGLE
USER
SINCE
IT
REQUIRES
INPUTS
TO
BE
ENCRYPTED
UNDER
THE
SAME
KEY
HOWEVER
THERE
ARE
MANY
SCENARIOS
WHERE
USERS
WHO
HAVE
UPLOADED
THEIR
LARGE
DATA
STORES
TO
THE
CLOUD
IN
ENCRYPTED
FORM
THEN
DECIDE
TO
COMPUTE
SOME
JOINT
FUNCTION
OF
THEIR
DATA
FOR
EXAMPLE
THEY
MAY
WISH
THE
CLOUD
TO
COMPUTE
JOINT
STATISTICAL
INFORMATION
ON
THEIR
DATABASES
LOCATE
COMMON
FILES
IN
THEIR
COLLECTIONS
RUN
A
COMPUTATIONAL
AGENT
TO
REACH
A
DECISION
BASED
ON
THEIR
POOLED
DATA
WITHOUT
LEAKING
ANYTHING
BUT
THE
FINAL
DECISION
OR
GENERALLY
IN
CONTEXTS
WHERE
MULTIPLE
MUTUALLY
DISTRUSTING
USERS
NEED
TO
POOL
TOGETHER
THEIR
DATA
TO
ACHIEVE
A
COMMON
GOAL
THE
MULTIPARTY
SCENARIO
IS
SIGNIFICANTLY
MORE
COMPLEX
AND
COMES
WITH
A
SET
OF
NATURAL
BUT
STRINGENT
REQUIREMENTS
FIRST
THE
PARTICIPANTS
INVOLVED
IN
THE
COMPUTATION
AND
THE
FUNCTION
TO
BE
COMPUTED
MAY
BE
DYNAMICALLY
CHOSEN
ON
THEFLY
WELL
AFTER
THE
DATA
HAS
BEEN
ENCRYPTED
AND
UPLOADED
TO
THE
CLOUD
SECONDLY
ONCE
THE
FUNCTION
IS
CHOSEN
WE
SHOULD
NOT
EXPECT
THE
USERS
TO
BE
ONLINE
ALL
THE
TIME
AND
CONSEQUENTLY
IT
IS
IMPERATIVE
THAT
THE
CLOUD
BE
ABLE
TO
PERFORM
THE
BULK
OF
THIS
COMPUTATION
ON
THE
ENCRYPTED
DATA
BELONGING
TO
THE
PARTICIPANTS
NON
INTERACTIVELY
WITHOUT
CONSULTING
THE
PARTICIPANTS
AT
ALL
FINALLY
ALL
THE
BURDEN
OF
COMPUTATION
SHOULD
INDEED
BE
CARRIED
BY
THE
CLOUD
THE
COMPUTATIONAL
AND
COMMUNICATION
COMPLEXITY
OF
THE
USERS
SHOULD
DEPEND
ONLY
ON
THE
SIZE
OF
THE
INDIVIDUAL
INPUTS
AND
THE
OUTPUT
AND
SHOULD
BE
INDEPENDENT
OF
BOTH
THE
COMPLEXITY
OF
THE
FUNCTION
COMPUTED
AND
THE
TOTAL
NUMBER
OF
USERS
IN
THE
SYSTEM
BOTH
OF
WHICH
COULD
BE
VERY
LARGE
ON
THE
FLY
MULTIPARTY
COMPUTATION
CONSIDER
A
SETTING
WITH
A
LARGE
UNIVERSE
OF
COMPUTATIONALLYWEAK
USERS
AND
A
POWERFUL
CLOUD
AN
ON
THE
FLY
MULTIPARTY
COMPUTATION
PROTOCOL
PROCEEDS
THUS
THE
NUMEROUS
USERS
EACH
ENCRYPT
THEIR
DATA
AND
UPLOAD
THEM
TO
THE
CLOUD
UNAWARE
OF
THE
IDENTITY
OR
EVEN
THE
NUMBER
OF
OTHER
USERS
IN
THE
SYSTEM
ADDITIONAL
DATA
MAY
ARRIVE
DIRECTLY
TO
THE
CLOUD
ENCRYPTED
UNDER
USERS
PUBLIC
KEYS
E
G
AS
ENCRYPTED
EMAILS
ARRIVING
TO
A
CLOUD
BASED
MAILBOX
THE
CLOUD
DECIDES
TO
EVALUATE
AN
ARBITRARY
DYNAMICALLY
CHOSEN
FUNCTION
ON
THE
DATA
OF
ARBITRARY
SUBSET
OF
USERS
CHOSEN
ON
THE
FLY
THE
CHOICE
MAY
BE
BY
SOME
USERS
REQUEST
OR
AS
A
SERVICE
TO
COMPUTE
THE
FUNCTION
ON
THE
DATA
OF
PARTIES
FULFILLING
SOME
CRITERION
OR
BY
A
NEED
AUTONOMOUSLY
ANTICIPATED
BY
THE
CLOUD
PROVIDER
ETC
THE
CLOUD
CAN
PERFORM
THIS
COMPUTATION
NONINTERACTIVELY
WITHOUT
ANY
FURTHER
HELP
FROM
THE
USERS
THE
RESULT
IS
STILL
ENCRYPTED
THE
CLOUD
AND
THE
SUBSET
OF
USERS
WHOSE
DATA
WAS
USED
IN
THE
COMPUTATION
INTERACT
IN
A
DECRYPTION
PHASE
AT
THIS
POINT
THE
USERS
RETROACTIVELY
APPROVE
THE
CHOICE
OF
FUNCTION
AND
THE
CHOICE
OF
PEER
USERS
ON
WHOSE
DATA
THE
FUNCTION
WAS
EVALUATED
AND
COOPERATE
TO
RETRIEVE
THE
OUTPUT
CRUCIALLY
THE
COMPUTATION
AND
COMMUNICATION
OF
ALL
THE
USERS
INCLUDING
THE
CLOUD
IN
THE
DECRYPTION
PHASE
SHOULD
BE
INDEPENDENT
OF
BOTH
THE
COMPLEXITY
OF
THE
FUNCTION
COMPUTED
AND
THE
SIZE
OF
THE
UNIVERSE
OF
PARTIES
BOTH
OF
WHICH
CAN
BE
ENORMOUS
INSTEAD
THE
EFFORT
EXPENDED
BY
THE
CLOUD
AND
THE
USERS
IN
THIS
PHASE
SHOULD
DEPEND
ONLY
ON
THE
SIZE
OF
THE
OUTPUT
AND
THE
NUMBER
OF
USERS
WHO
PARTICIPATED
IN
THE
COMPUTATION
ALSO
CRUCIALLY
THE
USERS
NEED
NOT
BE
ONLINE
AT
ALL
DURING
THE
BULK
OF
THE
COMPUTATION
THEY
NEED
TO
WAKE
UP
ONLY
WHEN
IT
IS
TIME
TO
DECRYPT
THE
OUTPUT
WE
CALL
THIS
AN
ON
THE
FLY
MULTIPARTY
COMPUTATION
OR
ONTHE
FLY
MPC
IN
SHORT
TO
SIGNIFY
THE
FACT
THAT
THE
FUNCTIONS
TO
BE
COMPUTED
ON
THE
ENCRYPTED
DATA
AND
THE
PARTICIPANTS
IN
THE
COMPUTATION
ARE
BOTH
CHOSEN
ON
THE
FLY
AND
DYNAMICALLY
WITHOUT
POSSIBLY
EVEN
THE
KNOWLEDGE
OF
THE
PARTICIPANTS
PROTOCOLS
FOLLOWING
THIS
FRAMEWORK
HAVE
ADDITIONAL
DESIRABLE
FEATURES
SUCH
AS
THE
ABILITY
FOR
USERS
TO
JOIN
A
COMPUTATION
ASYNCHRONOUSLY
POSSIBLE
APPROACHES
AND
WHY
THEY
DO
NOT
WORK
THE
LONG
LINE
OF
WORK
ON
SECURE
MULTIPARTY
COMPUTATION
MPC
DOES
NOT
SEEM
TO
HELP
US
CONSTRUCT
ON
THE
FLY
MPC
PROTOCOLS
SINCE
THE
COMPUTATIONAL
AND
COMMUNICATION
COMPLEXITIES
OF
ALL
THE
PARTIES
IN
THESE
PROTOCOLS
DEPENDS
POLYNOMIALLY
ON
THE
COMPLEXITY
OF
THE
FUNCTION
BEING
COMPUTED
IN
CONTRAST
WE
ARE
DEALING
WITH
AN
ASYMMETRIC
SETTING
WHERE
THE
CLOUD
COMPUTES
A
LOT
BUT
THE
USERS
COMPUTE
VERY
LITTLE
NEVERTHELESS
WE
WILL
USE
THE
TRADITIONAL
MPC
PROTOCOLS
TO
INTERACTIVELY
COMPUTE
THE
DECRYPTION
FUNCTION
AT
THE
END
FULLY
HOMOMORPHIC
ENCRYPTION
FHE
IS
APPROPRIATE
IN
SUCH
AN
ASYMMETRIC
SETTING
OF
COMPUTING
WITH
THE
CLOUD
YET
TRADITIONAL
FHE
SCHEMES
ARE
SINGLE
KEY
IN
THE
SENSE
THAT
THEY
CAN
PERFORM
ARBITRARILY
COMPLEX
COMPUTATIONS
ON
INPUTS
ENCRYPTED
UNDER
THE
SAME
KEY
IN
OUR
SETTING
SINCE
THE
PARTIES
DO
NOT
TRUST
EACH
OTHER
THEY
WILL
MOST
CERTAINLY
NOT
WANT
TO
ENCRYPT
THEIR
INPUTS
USING
EACH
OTHER
KEYS
NEVERTHELESS
GENTRY
PROPOSED
THE
FOLLOWING
WAY
OF
USING
SINGLE
KEY
FHE
SCHEMES
IN
ORDER
TO
DO
MULTIPARTY
COMPUTATION
FIRST
THE
PARTIES
RUN
A
SHORT
MPC
PROTOCOL
TO
COMPUTE
A
JOINT
PUBLIC
KEY
WHERE
THE
MATCHING
SECRET
KEY
IS
SECRET
SHARED
AMONG
ALL
THE
PARTIES
THE
PARTIES
THEN
ENCRYPT
THEIR
INPUTS
UNDER
THE
JOINT
PUBLIC
KEY
AND
SEND
THE
CIPHERTEXTS
TO
THE
CLOUD
WHO
THEN
USES
THE
FHE
SCHEME
TO
COMPUTE
AN
ENCRYPTION
OF
THE
RESULT
FINALLY
THE
PARTIES
RUN
YET
ANOTHER
SHORT
MPC
PROTOCOL
TO
RECOVER
THE
RESULT
A
RECENT
WORK
BY
ASHAROV
ET
AL
EXTENDS
THIS
SCHEMA
AND
MAKES
IT
EFFICIENT
IN
TERMS
OF
THE
CONCRETE
ROUND
COMMUNICATION
AND
COMPUTATIONAL
COMPLEXITY
THIS
LINE
OF
WORK
DOES
NOT
ADDRESS
THE
DYNAMIC
AND
NONINTERACTIVE
NATURE
OF
ON
THE
FLY
MPC
IN
PARTICULAR
ONCE
A
SUBSET
OF
PARTIES
AND
A
FUNCTION
ARE
CHOSEN
THE
PROTOCOLS
OF
REQUIRE
THE
PARTIES
TO
BE
ONLINE
AND
RUN
AN
INTERACTIVE
MPC
PROTOCOL
TO
GENERATE
A
JOINT
PUBLIC
KEY
IN
CONTRAST
WE
REQUIRE
THAT
ONCE
THE
FUNCTION
AND
A
SUBSET
OF
PARTIES
IS
CHOSEN
THE
CLOUD
PERFORMS
THE
EXPENSIVE
COMPUTATIONS
NONINTERACTIVELY
WITHOUT
HELP
FROM
ANY
OF
THE
USERS
IT
WOULD
ALSO
BE
UNSATISFACTORY
TO
POSTPONE
THE
LENGTHY
COMPUTATION
OF
THE
FUNCTION
UNTIL
THE
INTERACTIVE
DECRYPTION
PHASE
INDEED
WE
REQUIRE
THAT
ONCE
THE
USERS
WAKE
UP
FOR
THE
DECRYPTION
PHASE
THE
RUNNING
TIME
OF
ALL
PARTIES
IS
INDEPENDENT
OF
THE
COMPLEXITY
OF
THE
FUNCTION
BEING
COMPUTED
THUS
EVEN
THE
FEASIBILITY
OF
ON
THE
FLY
MPC
IS
NOT
ADDRESSED
BY
EXISTING
TECHNIQUES
OUR
SOLUTION
WE
PRESENT
A
NEW
NOTION
OF
FULLY
HOMOMORPHIC
ENCRYPTION
FHE
THAT
WE
CALL
A
MULTIKEY
FHE
THAT
PERMITS
COMPUTATION
ON
DATA
ENCRYPTED
UNDER
MULTIPLE
UNRELATED
KEYS
A
NEW
CONSTRUCTION
OF
MULTIKEY
FHE
BASED
ON
THE
NTRU
THE
WORKS
OF
DAMGA
RD
ET
AL
ARE
AN
EXCEPTION
TO
THIS
CLAIM
HOWEVER
IT
IS
NOT
CLEAR
HOW
TO
BUILD
UPON
THESE
RESULTS
TO
ADDRESS
THE
DYNAMIC
AND
NON
INTERACTIVE
NATURE
OF
ON
THE
FLY
MPC
TION
SCHEME
ORIGINALLY
PROPOSED
BY
HOFFSTEIN
PIPHER
AND
SILVERMAN
AND
A
NEW
METHOD
OF
ACHIEVING
ON
THE
FLY
MULTIPARTY
COMPUTATION
FOR
ANY
A
PRIORI
BOUNDED
NUMBER
OF
USERS
USING
A
MULTIKEY
FHE
SCHEME
ALTHOUGH
THE
NUMBER
OF
USERS
INVOLVED
IN
ANY
COMPUTATION
HAS
TO
BE
BOUNDED
IN
OUR
SOLUTION
THE
TOTAL
NUMBER
OF
USERS
IN
THE
SYSTEM
IS
ARBITRARY
OUR
RESULTS
AND
TECHNIQUES
NEW
NOTION
MULTIKEY
HOMOMORPHIC
ENCRYPTION
AN
N
KEY
FULLY
HOMOMORPHIC
ENCRYPTION
SCHEME
IS
THE
SAME
AS
A
REGULAR
FHE
SCHEME
WITH
TWO
CHANGES
FIRST
THE
HOMOMORPHIC
EVALUATION
ALGORITHM
TAKES
IN
POLYNOMIALLY
MANY
CIPHERTEXTS
ENCRYPTED
UNDER
AT
MOST
N
KEYS
TOGETHER
WITH
THE
CORRESPONDING
EVALUATION
KEYS
AND
PRODUCES
A
CIPHERTEXT
SECOND
IN
ORDER
TO
DECRYPT
THE
RESULTING
CIPHERTEXT
ONE
USES
ALL
THE
INVOLVED
SECRET
KEYS
A
MULTIKEY
FHE
SCHEME
IS
INDEED
THE
RIGHT
TOOL
TO
PERFORM
ON
THE
FLY
MPC
AS
SHOWN
BY
THE
FOLLOWING
SIMPLE
PROTOCOL
THE
USERS
ENCRYPT
THEIR
INPUTS
USING
THEIR
OWN
PUBLIC
KEYS
AND
SEND
THE
CIPHERTEXTS
TO
THE
CLOUD
THE
CLOUD
THEN
COMPUTES
A
DYNAMICALLY
CHOSEN
FUNCTION
ON
AN
ARBITRARY
SUBSET
OF
PARTIES
USING
THE
MULTIKEY
PROPERTY
OF
THE
FHE
SCHEME
AND
FINALLY
THE
USERS
TOGETHER
RUN
AN
INTERACTIVE
MPC
PROTOCOL
IN
ORDER
TO
DECRYPT
NOTE
THAT
THE
USERS
CAN
BE
OFFLINE
DURING
THE
BULK
OF
THE
COMPUTATION
AND
THEY
NEED
TO
PARTICIPATE
ONLY
IN
THE
FINAL
CHEAP
INTERACTIVE
DECRYPTION
PROCESS
NOTE
ALSO
THAT
PARTICIPANTS
IN
THE
PROTOCOL
NEED
NOT
BE
AWARE
OF
THE
ENTIRE
UNIVERSE
OF
USERS
BUT
ONLY
THOSE
USERS
THAT
PARTICIPATE
IN
A
JOINT
COMPUTATION
THIS
SIMPLE
PROTOCOL
PROVIDES
US
SECURITY
AGAINST
A
SEMI
HONEST
COLLUSION
OF
THE
CLOUD
WITH
AN
ARBITRARY
SUBSET
OF
PARTIES
WE
THEN
SHOW
HOW
TO
ACHIEVE
SECURITY
AGAINST
A
MALICIOUS
ADVERSARY
USING
TOOLS
SUCH
AS
VERIFIABLE
COMPUTATION
PROTOCOLS
OR
SUCCINCT
ARGUMENT
SYSTEMS
THE
COMPUTATION
OF
THE
DECRYPTION
FUNCTION
CAN
ITSELF
BE
OUTSOURCED
TO
THE
CLOUD
IN
PARTICULAR
USING
THE
CLOUDASSISTED
MPC
PROTOCOL
OF
ASHAROV
ET
AL
YIELDS
A
ROUND
ON
THE
FLY
MPC
PROTOCOL
ONE
OFFLINE
ROUND
AND
FOUR
ONLINE
ROUNDS
TO
PERFORM
DECRYPTION
AS
AN
ADDITIONAL
BENEFIT
IN
THE
RESULTING
ON
THE
FLY
PROTOCOL
THE
PARTIES
MAY
COMMUNICATE
WITH
THE
SERVER
CONCURRENTLY
AT
EACH
STAGE
THE
ONLY
DISADVANTAGE
OF
THIS
APPROACH
IS
THAT
IT
REQUIRES
A
CRS
SETUP
THIS
DOES
NOT
HOWEVER
AFFECT
THE
ON
THE
FLY
NATURE
OF
THE
PROCOTOL
SINCE
ONLY
AN
APRIORI
BOUND
N
ON
THE
NUMBER
OF
COMPUTING
PARTIES
NEEDS
TO
BE
KNOWN
WHEN
CREATING
THE
CRS
MULTIKEY
FULLY
HOMOMORPHIC
ENCRYPTION
FROM
NTRU
THE
STARTING
POINT
OF
OUR
MAIN
CONSTRUCTION
OF
MULTIKEY
FHE
IS
THE
NTRU
ENCRYPTION
SCHEME
OF
HOFFSTEIN
PIPHER
AND
SILVERMAN
MORE
PRECISELY
THE
SLIGHTLY
MODIFIED
VERSION
DUE
TO
STEHLE
AND
STEINFELD
NTRU
IS
ONE
OF
THE
EARLIEST
LATTICE
BASED
PUBLIC
KEY
ENCRYPTION
SCHEMES
TOGETHER
WITH
THE
AJTAI
DWORK
CRYPTOSYSTEM
AND
THE
GOLDREICHGOLDWASSER
HALEVI
CRYPTOSYSTEM
WE
FIRST
OBSERVE
THAT
NTRU
CAN
BE
MADE
SINGLE
KEY
FULLY
HOMOMORPHIC
USING
THE
RECENT
TECHNIQUES
OF
USING
SOME
ADDITIONAL
TRICKS
WE
THEN
SHOW
THAT
THE
SCHEME
IS
MULTIKEY
FULLY
HOMOMORPHIC
FOR
A
BOUNDED
NUMBER
OF
USERS
AT
ESSENTIALLY
THE
SAME
COST
PREVIOUSLY
IT
WAS
NOT
EVEN
KNOWN
WHETHER
NTRU
COULD
BE
TURNED
INTO
A
REGULAR
SINGLE
KEY
FULLY
HOMOMORPHIC
ENCRYPTION
SCHEME
THIS
CONSTRUCTION
IS
ONE
OF
OUR
MAIN
CONTRIBUTIONS
AND
WE
BELIEVE
IT
TO
BE
OF
INDEPENDENT
INTEREST
OUR
CONSTRUCTION
IS
PARTICULARLY
INTERESTING
SINCE
THE
NTRU
SCHEME
WAS
ORIGINALLY
PROPOSED
AS
AN
EFFICIENT
PUBLIC
KEY
ENCRYPTION
SCHEME
MEANT
TO
REPLACE
RSA
AND
ELLIPTIC
CURVE
CRYPTOSYSTEMS
IN
APPLICATIONS
WHERE
COMPUTATIONAL
EFFICIENCY
IS
AT
A
PREMIUM
FOR
EXAMPLE
APPLICATIONS
THAT
RUN
ON
SMART
CARDS
AND
EMBEDDED
SYSTEMS
ALTHOUGH
THE
TRANSFORMATION
TO
A
FULLY
HOMOMORPHIC
SYSTEM
DETERIORATES
THE
EFFICIENCY
OF
NTRU
SOMEWHAT
WE
BELIEVE
THAT
THIS
SYSTEM
IS
A
LEADING
CANDIDATE
FOR
A
PRACTICAL
FHE
SCHEME
WHAT
MORE
AS
WE
SHOW
THE
SCHEME
SUPPORTS
HOMOMORPHIC
OPERATIONS
ON
ENCRYPTIONS
UNDER
MULTIPLE
KEYS
THEOREM
INFORMAL
FOR
EVERY
N
N
THERE
IS
AN
N
USER
MULTIKEY
FULLY
HOMOMORPHIC
ENCRYPTION
SCHEME
UNDER
THE
ASSUMPTION
THAT
THE
NTRU
ENCRYPTION
SCHEME
DESCRIBED
BELOW
IS
SEMANTICALLY
SECURE
AND
CIRCULAR
SECURE
THE
SIZE
OF
THE
KEYS
AND
CIPHERTEXTS
IN
THE
SCHEME
GROW
POLYNOMIALLY
WITH
N
WE
BRIEFLY
SKETCH
HERE
OUR
VARIANT
OF
THE
NTRU
ENCRYPTION
SCHEME
AND
THE
IDEAS
IN
TURNING
IT
INTO
A
MULTIKEY
FULLY
HOMOMORPHIC
ENCRYPTION
SCHEME
THE
READER
IS
REFERRED
TO
SECTION
AND
SECTION
FOR
A
DETAILED
EXPOSITION
THE
MAIN
DIFFERENCES
BETWEEN
THE
ORIGINAL
NTRU
SCHEME
AND
OUR
VARIANT
ARE
THREEFOLD
WHEREAS
THE
ORIGINAL
NTRU
SCHEME
ADDS
A
DETERMINISTIC
NOISE
TO
THE
CIPHERTEXT
THE
VARIANT
CONSIDERED
HERE
ADDS
NOISE
CHOSEN
FROM
A
DISTRIBUTION
WITH
BOUNDED
SUPPORT
SPECIFICALLY
A
DISCRETE
GAUSSIAN
DISTRIBUTION
A
MODIFICATION
RECENTLY
INTRODUCED
BY
STEHLE
AND
STEINFELD
IT
SEEMS
THAT
THIS
COULD
ONLY
IMPROVE
SECURITY
INDEED
THE
PURPOSE
OF
THE
STEHLE
STEINFELD
WORK
WAS
TO
PROVE
THE
SECURITY
OF
NTRU
BASED
ON
WORSTCASE
HARDNESS
ASSUMPTIONS
ON
IDEAL
LATTICES
WE
DO
ALL
OUR
OPERATIONS
MODULO
XN
WHERE
N
IS
A
POWER
OF
AS
IN
AS
OPPOSED
TO
XN
IN
THE
ORIGINAL
NTRU
OUR
PARAMETERS
ARE
MORE
AGGRESSIVE
THAN
IN
TO
SUPPORT
HOMOMORPHISMS
AS
A
RESULT
THE
WORST
CASE
TO
AVERAGE
CASE
CONNECTION
SHOWN
BY
DOES
NOT
CARRY
OVER
TO
OUR
SETTING
OF
PARAMETERS
FOR
SECURITY
PARAMETER
Κ
THE
SCHEME
IS
PARAMETRIZED
BY
A
PRIME
NUMBER
Q
Q
Κ
AND
A
B
BOUNDED
ERROR
DISTRIBUTION
Χ
OVER
THE
RING
R
Z
X
HXN
I
E
Χ
IS
A
DISTRIBUTION
OVER
POLYNOMIALS
WHOSE
COEFFICIENTS
ARE
ALL
AT
MOST
B
Κ
IN
ABSOLUTE
VALUE
THE
PARAMETERS
N
Q
AND
Χ
ARE
PUBLIC
WE
SHOW
HOW
TO
ENCRYPT
BITS
USING
THE
SCHEME
ALL
OPERATIONS
IN
THE
SCHEME
TAKE
PLACE
IN
THE
RING
RQ
R
QR
KEYGEN
SAMPLE
BOUNDED
POLYNOMIALS
F
G
Χ
AND
SET
F
SO
THAT
F
MOD
SET
THE
PUBLIC
KEY
PK
H
RQ
AND
THE
SECRET
KEY
SK
F
R
IF
F
IS
NOT
INVERTIBLE
OVER
RQ
RESAMPLE
F
ENC
PK
M
SAMPLE
BOUNDED
POLYNOMIALS
E
Χ
OUTPUT
THE
CIPHERTEXT
C
HS
M
RQ
THE
OBSERVATION
THAT
NTRU
CAN
BE
MADE
SINGLE
KEY
FULLY
HOMOMORPHIC
WAS
MADE
CONCURRENTLY
BY
GENTRY
ET
AL
DEC
SK
C
LET
Μ
F
C
RQ
OUTPUT
Μ
MOD
AS
THE
MESSAGE
DECRYPTION
WORKS
SINCE
FC
MOD
Q
F
HS
M
MOD
Q
GS
EF
F
M
GS
EF
F
M
MOD
Q
WHERE
THE
LAST
EQUALITY
IS
TRUE
SINCE
GS
EF
F
M
Q
TAKING
THIS
QUANTITY
MOD
THEN
GIVES
US
THE
MESSAGE
M
SINCE
F
MOD
THE
MULTIKEY
HOMOMORPHIC
PROPERTIES
OF
THE
SCHEME
ARE
BEST
SEEN
THROUGH
THE
LENS
OF
THE
DECRYPTION
EQUATION
AS
IN
IN
PARTICULAR
CONSIDER
CIPHERTEXTS
RQ
AND
RQ
THAT
ENCRYPT
MESSAGES
AND
UNDER
PUBLIC
KEYS
AND
RESPECTIVELY
WITH
NOISE
TERMS
AND
A
LITTLE
ALGEBRAIC
MANIPULATION
SHOWS
THAT
CADD
AND
CMULT
ARE
CIPHERTEXTS
THAT
ENCRYPT
THE
SUM
AND
PRODUCT
OF
AND
RESPECTIVELY
ALBEIT
WITH
LARGER
ERROR
TERMS
NAMELY
DECRYPTING
AND
WITH
THE
JOINT
SECRET
KEY
WHICH
IS
SIMPLY
A
PRODUCT
OF
THE
TWO
SECRET
KEYS
AND
GIVES
US
CAPABLE
OF
EVALUATING
CIRCUITS
OF
DEPTH
LOG
N
FOR
SOME
SMALL
CONSTANT
FOR
MORE
DETAILS
SEE
SECTION
TO
TURN
THIS
INTO
A
FULLY
HOMOMORPHIC
ENCRYPTION
SCHEME
WE
USE
THE
TECHNIQUE
OF
MODULUS
REDUCTION
FROM
THE
WORK
OF
BRAKERSKI
AND
VAIKUNTANATHAN
LATER
REFINED
IN
MODULUS
REDUCTION
SHOWS
HOW
TO
REDUCE
THE
MAGNITUDE
OF
THE
ERROR
WHILE
SIMULTANEOUSLY
REDUCING
THE
SIZE
OF
THE
MODULUS
THIS
TECHNIQUE
WORKS
TRANSPARENTLY
IN
THE
MULTIKEY
SETTING
THE
BOTTOM
LINE
IS
THAT
WE
CAN
EVALUATE
FUNCTIONS
ON
N
USERS
AS
LONG
AS
N
LOG
Q
POLYLOG
N
PUT
ANOTHER
WAY
FOR
ANY
NUMBER
N
OF
USERS
WE
GET
A
N
USER
MULTIKEY
FHE
BY
SETTING
Q
TO
BE
A
LARGE
ENOUGH
FUNCTION
OF
N
THIS
GIVES
US
A
LEVELED
MULTIKEY
FHE
SCHEME
FINALLY
TO
TURN
THIS
INTO
A
FULL
FLEDGED
MULTIKEY
FHE
SCHEME
WHOSE
COMPLEXITY
IS
INDEPENDENT
OF
THE
COMPLEXITY
OF
THE
FUNCTION
BEING
COMPUTED
WE
USE
A
MULTIKEY
ANALOG
OF
GENTRY
BOOTSTRAPPING
TECHNIQUE
OUR
CONSTRUCTION
BASED
ON
THE
NTRU
ENCRYPTION
SCHEME
RAISES
A
NATURAL
QUESTION
CAN
ANY
OF
THE
OTHER
FHE
SCHEMES
BE
MADE
MULTI
KEY
IT
TURNS
OUT
THAT
THE
SCHEMES
OF
CAN
BE
MADE
N
KEY
FULLY
HOMOMORPHIC
FOR
A
CONSTANT
N
OR
SOMETIMES
EVEN
N
O
LOG
N
WE
REFER
THE
READER
TO
THE
FULL
VERSION
FOR
A
DETAILED
DISCUSSION
OF
THESE
SCHEMES
COMPLETELY
NON
INTERACTIVE
ON
THE
FLY
MPC
OUR
RESULTS
RAISE
THE
NATURAL
QUESTION
OF
WHETHER
THE
PROTOCOLS
CAN
BE
MADE
COMPLETELY
NON
INTERACTIVE
NAMELY
THE
USERS
DO
NOT
EVER
HAVE
TO
TALK
TO
EACH
OTHER
EVEN
IN
THE
DECRYPTION
PHASE
IN
THE
NON
INTERACTIVE
SETTING
THE
SERVER
CAN
ALWAYS
EVALUATE
THE
CIRCUIT
MULTIPLE
TIMES
KEEPING
SOME
PARTIES
INPUTS
BUT
PLUGGING
IN
FAKE
INPUTS
OF
ITS
CHOOSING
FOR
THE
OTHER
PARTIES
SIMILARLY
TO
HOWEVER
BY
DRAWING
ON
THE
IMPOSSIBILITY
OF
PROGRAM
OBFUSCATION
WE
SHOW
THAT
A
NON
INTERACTIVE
PROTOCOL
CANNOT
BE
ACHIEVED
EVEN
IF
WE
ACCEPT
THIS
AS
THE
IDEAL
FUNCTIONALITY
THUS
OUR
NOTION
IS
QUALITATIVELY
THE
BEST
POSSIBLE
IN
TERMS
OF
INTERACTION
SEE
THE
FULL
VERSION
OF
THIS
PAPER
FOR
A
FORMAL
THEOREM
STATEMENT
OTHER
RELATED
WORK
THIS
SHOWS
THAT
DECRYPTING
USING
THE
JOINT
SECRET
KEY
RESULTS
IN
THE
SUM
OF
THE
TWO
MESSAGES
ASSUMING
THAT
THE
ERROR
DOES
NOT
GROW
TO
BE
TOO
LARGE
LIKEWISE
WE
HAVE
THIS
SHOWS
THAT
DECRYPTING
USING
THE
JOINT
SECRET
KEY
RESULTS
IN
THE
PRODUCT
OF
THE
TWO
MESSAGES
ASSUMING
THAT
THE
ERROR
DOES
NOT
GROW
TO
BE
TOO
LARGE
EXTENDING
THIS
TO
CIRCUITS
WE
OBSERVE
THAT
THE
EFFECTIVE
SECRET
KEY
REQUIRED
TO
DECRYPT
A
CIPHERTEXT
C
RESULTING
FROM
EVALUATING
A
MULTIVARIATE
POLYNOMIAL
FUNCTION
ON
THE
INPUTS
Q
DI
TH
OF
N
USERS
IS
N
VARII
FI
WHERE
DI
IS
THE
DEGREE
OF
THE
I
ABLE
IN
THE
POLYNOMIAL
FUNCTION
THIS
MAKES
THE
SECRET
KEY
REQUIRED
TO
DECRYPT
C
DEPENDENT
ON
THE
CIRCUIT
EVALUATED
WHICH
IS
UNACCEPTABLE
EVEN
FOR
SOMEWHAT
HOMOMORPHIC
ENCRYPTION
WE
USE
THE
RELINEARIZATION
TECHNIQUE
FROM
TO
TRANSFORM
THE
CIPHERTEXT
INTO
ONE
THAT
CAN
BE
DECRYPTED
USQ
ING
THE
SECRET
KEY
N
I
FI
NAMELY
REDUCE
ALL
THE
EXPONENTS
FROM
DI
TO
AFTER
EVERY
OPERATION
IN
EFFECT
THIS
ENSURES
THAT
THE
SECRET
KEY
IS
RELATED
TO
THE
NUMBER
OF
USERS
N
INVOLVED
IN
THE
COMPUTATION
AND
NOT
TO
THE
FUNCTION
BEING
COMPUTED
WITH
THE
USE
OF
RELINEARIZATION
ONE
CAN
SHOW
THAT
THE
SCHEME
IS
MULTIKEY
SOMEWHAT
HOMOMORPHIC
I
E
WE
ASSOCIATE
ZQ
WITH
THE
SET
BQ
BQ
THROUGHOUT
THIS
WORK
THE
BASIC
IDEA
OF
USING
HOMOMORPHIC
ENCRYPTION
SCHEMES
IN
CONJUNCTION
WITH
THRESHOLD
DECRYPTION
TO
BOOST
THE
EFFICIENCY
OF
MPC
PROTOCOLS
WAS
FIRST
NOTICED
BY
CRAMER
DA
MGARD
AND
NIELSEN
THE
IDEA
OF
USING
A
CLOUD
TO
ALLEVIATE
THE
COMPUTATIONAL
EFFORTS
OF
PARTIES
WAS
RECENTLY
EXPLORED
IN
THE
WORK
ON
SERVER
AIDED
MPC
BY
KAMARA
MOHASSEL
AND
RAYKOVA
THEIR
PROTOCOLS
HOWEVER
REQUIRE
SOME
OF
THE
PARTIES
TO
DO
A
LARGE
AMOUNT
OF
COMPUTATION
ESSENTIALLY
PROPORTIONAL
TO
THE
SIZE
OF
THE
FUNCTION
F
BEING
COMPUTED
HALEVI
LINDELL
AND
PINKAS
RECENTLY
CONSIDERED
THE
MODEL
OF
SECURE
COMPUTATION
ON
THE
WEB
WHEREIN
THE
GOAL
IS
TO
MINIMIZE
INTERACTION
BETWEEN
THE
PARTIES
WHILE
THEIR
DEFINITION
REQUIRES
ABSOLUTELY
NO
INTERACTION
AMONG
THE
PARTICIPANTS
IN
THE
PROTOCOLS
THE
PARTICIPANTS
INTERACT
WITH
THE
SERVER
ONLY
THEY
SHOW
THAT
THIS
NOTION
CAN
ONLY
BE
ACHIEVED
FOR
A
SMALL
CLASS
OF
FUNCTIONS
OUR
GOAL
ON
THE
OTHER
HAND
IS
TO
COMPUTE
ARBITARY
FUNCTIONS
WITH
THE
ASSISTANCE
OF
A
CLOUD
ORGANIZATION
IN
SECTION
WE
FORMALLY
DEFINE
MULTIKEY
FHE
AND
ON
THEFLY
MPC
AND
SHOW
OUR
CONSTRUCTION
OF
ON
THE
FLY
MPC
FROM
MULTIKEY
FHE
IN
SECTION
WE
SHOW
HOW
TO
INSTANTIATE
MULTIKEY
SOMEWHAT
HOMOMORPHIC
ENCRYPTION
FROM
THE
NTRU
ENCRYPTION
SCHEME
AND
THEN
SHOW
HOW
TO
ACHIEVE
FULL
HOMOMORPHISM
IN
SECTION
NOTATION
IN
THE
REMAINDER
OF
THE
PAPER
WE
USE
THE
FOLLOWING
NOTATION
WE
USE
Κ
TO
DENOTE
THE
SECURITY
PARAMETER
FOR
AN
INTEGER
N
WE
USE
THE
NOTATION
N
TO
DENOTE
THE
SET
N
N
FOR
A
RANDOMIZED
FUNCTION
F
WE
WRITE
F
X
R
TO
DENOTE
THE
UNIQUE
OUTPUT
OF
F
ON
INPUT
X
WITH
RANDOM
COINS
R
WE
WRITE
F
X
TO
DENOTE
A
RANDOM
VARIABLE
FOR
THE
OUTPUT
OF
F
X
R
OVER
UNIFORMLY
RANDOM
COINS
R
FOR
A
DISTRIBUTION
OR
RANDOM
VARIABLE
X
WE
WRITE
X
X
TO
DENOTE
THE
OPERATION
OF
SAMPLING
A
RANDOM
X
ACCORDING
TO
X
FOR
A
SET
WE
OVERLOAD
NOTATION
AND
USE
TO
DENOTE
SAMPLING
FROM
THE
UNIFORM
DISTRIBUTION
OVER
WE
USE
Y
F
X
TO
DENOTE
THE
DETERMINISTIC
EVALUATION
OF
F
ON
INPUT
X
WITH
C
OUTPUT
Y
FOR
TWO
DISTRIBUTIONS
D
AND
D
DENOTES
COMPUTATIONAL
INDISTINGUISHABILITY
ON
THE
FLY
MPC
FROM
MULTIKEY
FHE
WE
CONSIDER
THE
PROBLEM
OF
A
SERVER
OR
CLOUD
DENOTED
BY
STORING
THE
DATA
OF
U
DIFFERENT
PARTIES
PU
WE
WISH
TO
ENSURE
THAT
THE
DATA
OF
EACH
PARTY
IS
KEPT
PRIVATE
BUT
ALSO
ALLOW
THE
SERVER
TO
COMPUTE
ANY
JOINT
FUNCTION
OF
THE
DATA
OF
ANY
SUBSET
V
U
OF
THE
PARTIES
WE
ALSO
WISH
TO
ENSURE
THAT
THE
SERVER
IS
ABLE
TO
DO
THIS
WITH
MINIMAL
PARTICIPATION
FROM
THE
PARTIES
IN
V
AND
NO
INTERACTION
AT
ALL
FROM
THE
REST
OF
THE
PARTIES
U
V
FURTHERMORE
THE
COMMUNICATION
COMPLEXITY
AND
THE
COMPUTATION
TIME
OF
EACH
PARTY
PI
SHOULD
BE
INDEPENDENT
OF
THE
COMPLEXITY
OF
THE
FUNCTION
SINCE
WE
RELY
ON
THE
COMPUTATION
POWER
OF
THE
SERVER
WHO
WILL
CARRY
OUT
THE
ENTIRE
COMPUTATION
OF
THE
JOINT
FUNCTION
F
THE
COMPUTATION
SHOULD
REMAIN
SECURE
EVEN
IF
THE
SERVER
OR
ANY
SET
OF
PARTIES
ARE
CORRUPTED
WE
FORMALIZE
THIS
BELOW
FOR
A
CLASS
C
OF
FUNCTIONS
WITH
AT
MOST
U
INPUTS
AN
ONTHE
FLY
MULTIPARTY
PROTOCOL
Π
FOR
C
IS
A
PROTOCOL
BETWEEN
U
INTERACTIVE
TURING
MACHINES
PU
SUCH
THAT
FOR
ALL
INPUTS
X
XU
ALL
FUNCTIONS
F
C
IF
F
IS
AN
N
INPUT
FUNCTION
THEN
FOR
ALL
ORDERED
SUBSETS
V
U
SUCH
THAT
V
N
THE
OUTPUT
OF
Π
IN
AN
EXECUTION
WHERE
PI
IS
GIVEN
XI
AS
INPUT
DOES
NOT
RECEIVE
AN
INPUT
AND
F
V
ARE
CHOSEN
FOR
THE
COMPUTATION
IS
Y
F
XI
I
V
AN
ONTHE
FLY
MULTIPARTY
PROTOCOL
CONSISTS
OF
TWO
PHASES
AN
OFFLINE
PHASE
THAT
IS
PERFORMED
BEFORE
THE
FUNCTION
F
C
IS
CHOSEN
AND
AN
ONLINE
PHASE
THAT
BEGINS
ONCE
F
IS
CHOSEN
TOGETHER
WITH
A
SUBSET
V
OF
INPUTS
ON
WHICH
F
WILL
BE
EVALUATED
ALL
PARTIES
PU
PARTICIPATE
IN
THE
OFFLINE
PHASE
BUT
ONLY
THE
SERVER
AND
PARTIES
IN
V
PARTICIPATE
IN
THE
ONLINE
PHASE
AFTER
THE
FUNCTION
IS
SELECTED
THE
SERVER
IGNORES
ALL
OFFLINE
MESSAGES
FROM
NON
COMPUTING
PARTIES
I
E
THOSE
IN
U
V
UNLIKE
IN
STANDARD
MPC
WE
REQUIRE
THE
COMMUNICATION
COMPLEXITY
OF
THE
PROTOCOL
AS
WELL
AS
THE
COMPUTATION
TIME
OF
PARTIES
PU
TO
BE
INDEPENDENT
OF
THE
COMPLEXITY
OF
THE
FUNCTION
F
FURTHERMORE
WE
LET
THE
COMPUTATION
TIME
OF
PARTIES
PI
FOR
I
V
DEPEND
ON
THE
PARTY
INPUT
AND
THE
OUTPUT
SIZE
OF
THE
F
BUT
REQUIRE
THE
COMPUTATION
TIME
OF
PARTIES
PI
FOR
I
U
V
TO
DEPEND
ONLY
ON
THE
SIZE
OF
THE
PARTY
INPUT
AND
BE
INDEPENDENT
OF
THE
OUTPUT
SIZE
OF
F
ON
THE
OTHER
HAND
THE
COMPUTATION
TIME
OF
THE
SERVER
MUST
BE
LINEAR
IN
THE
CIRCUIT
SIZE
OF
F
SECURITY
WE
PROVE
SECURITY
OF
AN
ON
THE
FLY
MPC
PROTOCOL
IN
THE
IDEAL
REAL
PARADIGM
LET
F
XI
I
V
FOR
V
U
BE
THE
FUNCTION
TO
BE
COMPUTED
AND
LET
N
V
FOR
EASE
OF
NOTATION
WE
ASSUME
W
L
O
G
THAT
V
N
IN
THE
IDEAL
WORLD
THE
COMPUTATION
OF
F
IS
PERFORMED
THROUGH
A
TRUSTED
FUNCTIONALITY
F
THAT
RECEIVES
INPUT
XI
FROM
EACH
PARTY
PI
FOR
I
U
COMPUTES
Y
F
XN
IGNORING
ALL
INPUTS
XI
FOR
I
V
AND
GIVES
Y
TO
PARTIES
PN
WHILE
PARTIES
PI
FOR
I
U
V
DO
NOT
GET
AN
OUTPUT
THUS
IN
THE
IDEAL
WORLD
PARTIES
LEARN
NOTHING
MORE
THAN
Y
IN
THE
REAL
WORLD
HOWEVER
THIS
TRUSTED
FUNCTIONALITY
DOES
NOT
EXIST
AND
SO
IN
ORDER
TO
COMPUTE
Y
F
XN
PARTIES
PU
RUN
A
PROTOCOL
Π
AN
ADVERSARY
CORRUPTING
A
PARTY
RESP
THE
SERVER
RECEIVES
ALL
MESSAGES
DIRECTED
TO
THE
CORRUPTED
PARTY
RESP
THE
SERVER
AND
CONTROLS
THE
MESSAGES
THAT
IT
SENDS
SINCE
THE
SERVER
IGNORES
MESSAGES
FROM
PARTIES
OUTSIDE
V
WE
ASSUME
W
L
O
G
THAT
AN
ADVERSARY
ONLY
CORRUPTS
COMPUTING
PARTIES
I
E
PARTIES
IN
V
AND
POSSIBLY
THE
SERVER
WE
USE
IDEALF
X
TO
DENOTE
THE
JOINT
OUTPUT
OF
THE
IDEAL
WORLD
ADVERSARY
AND
THE
OUTPUTS
OF
THE
SERVER
AND
THE
PARTIES
PN
IN
AN
IDEAL
EXECUTION
WITH
FUNCTIONALITY
F
AND
INPUTS
X
XU
SIMILARLY
WE
USE
REALΠ
A
X
TO
DENOTE
THE
JOINT
OUTPUT
OF
THE
REAL
WORLD
ADVERSARY
A
AND
THE
OUTPUTS
OF
PARTIES
PN
AND
SERVER
IN
AN
EXECUTION
OF
PROTOCOL
Π
WITH
INPUTS
X
XU
WE
SAY
THAT
A
PROTOCOL
Π
SECURELY
REALIZES
F
IF
FOR
EVERY
REAL
WORLD
ADVERSARY
A
CORRUPTING
ANY
T
N
PARTIES
AND
POSSIBLY
THE
SERVER
THERE
EXISTS
AN
IDEAL
WORLD
ADVERSARY
WITH
BLACK
BOX
ACCESS
TO
A
SUCH
THAT
FOR
ALL
INPUT
VECTORS
X
C
IDEALF
X
REALΠ
A
X
MULTIKEY
FULLY
HOMOMORPHIC
ENCRYPTION
IN
THIS
SECTION
WE
DEFINE
MULTIKEY
FULLY
HOMOMORPHIC
ENCRYPTION
INTUITIVELY
MULTIKEY
FHE
ALLOWS
US
TO
EVALUATE
ANY
CIRCUIT
ON
CIPHERTEXTS
THAT
MIGHT
BE
ENCRYPTED
UNDER
DIFFERENT
PUBLIC
KEYS
TO
GUARANTEE
SEMANTIC
SECURITY
DECRYPTION
REQUIRES
ALL
OF
THE
CORRESPONDING
SECRET
KEYS
WE
INTRODUCE
A
PARAMETER
N
WHICH
IS
THE
NUMBER
OF
DISTINCT
KEYS
THAT
A
SCHEME
CAN
TOLERATE
WE
LET
ALL
ALGORITHMS
DEPEND
POLYNOMIALLY
ON
N
THIS
IS
SIMILAR
TO
THE
DEFINITION
OF
LEVELED
FHE
FROM
HOWEVER
WE
NOTE
THAT
IN
OUR
DEFINITION
THE
ALGORITHMS
DEPEND
ON
N
BUT
ARE
INDEPENDENT
OF
THE
DEPTH
OF
CIRCUITS
THAT
THE
SCHEME
CAN
EVALUATE
THUS
WE
CONSIDER
SCHEMES
THAT
ARE
LEVELED
WITH
RESPECT
TO
THE
NUMBER
OF
KEYS
N
BUT
FULLY
HOMOMORPHIC
NON
LEVELED
WITH
RESPECT
TO
THE
CIRCUITS
THAT
ARE
EVALUATED
THE
CONSTRUCTION
OF
MULTIKEY
FHE
SCHEMES
THAT
ARE
NOT
LEVELED
WITH
RESPECT
TO
THE
NUMBER
OF
KEYS
I
E
WHERE
ALL
ALGORITHMS
ARE
INDEPENDENT
OF
N
REMAINS
AN
OPEN
PROBLEM
WE
NOW
DEFINE
MULTIKEY
FHE
AS
FOLLOWS
FOR
RESTRICTED
CIRCUIT
CLASSES
AND
FOR
ARBITRARY
CIRCUITS
DEFINITION
MULTIKEY
C
HOMOMORPHIC
ENCRYPTION
LET
C
BE
A
CLASS
OF
CIRCUITS
A
FAMILY
E
N
KEYGEN
ENC
DEC
EVAL
N
OF
ALGORITHMS
IS
A
MULTIKEY
C
HOMOMOR
PHIC
ENCRYPTION
SCHEME
FAMILY
IF
FOR
ALL
INTEGERS
N
E
N
HAS
THE
FOLLOWING
PROPERTIES
STEP
FOR
I
U
PARTY
PI
SAMPLES
A
KEY
TUPLE
PKI
SKI
EKI
KEYGEN
Κ
PK
SK
EK
KEYGEN
FOR
A
SECURITY
PARAMETER
Κ
OUTPUTS
A
PUBLIC
KEY
PK
A
SECRET
KEY
SK
AND
A
PUBLIC
EVALUATION
KEY
EK
C
ENC
PK
M
GIVEN
A
PUBLIC
KEY
SK
AND
MESSAGE
M
OUTPUTS
A
CIPHERTEXT
C
DEC
SKN
C
GIVEN
N
SECRET
KEYS
SKI
AND
A
CIPHERTEXT
C
OUTPUTS
A
MESSAGE
C
EVAL
C
CT
PKT
EKT
GIVEN
A
DESCRIPTION
OF
A
BOOLEAN
CIRCUIT
C
ALONG
WITH
T
TUPLES
CI
PKI
EKI
EACH
COMPRISING
OF
A
CIPHERTEXT
CI
A
PUBLIC
KEY
PKI
AND
AN
EVALUATION
KEY
EKI
OUTPUTS
A
CIPHERTEXT
C
WE
REQUIRE
ABSENCE
OF
DECRYPTION
FAILURES
AND
COMPACTNESS
OF
CIPHERTEXTS
FORMALLY
FOR
EVERY
CIRCUIT
C
C
ALL
SEQUENCES
OF
N
KEY
TUPLES
J
N
EACH
OF
WHICH
IS
IN
THE
SUPPORT
OF
KEYGEN
ALL
SEQUENCES
OF
T
KEY
TUPLES
PKI
SKI
EKI
I
T
EACH
OF
WHICH
IS
IN
J
N
AND
ALL
PLAINTEXTS
MT
AND
CIPHERTEXTS
CT
SUCH
THAT
CI
IS
IN
THE
SUPPORT
OF
ENC
PKI
MI
EVAL
SATISFIES
THE
FOLLOWING
PROPERTIES
CORRECTNESS
LET
C
EVAL
C
CT
PKT
EKT
THEN
DEC
C
C
MT
AND
ENCRYPTS
ITS
INPUT
XI
UNDER
PKI
CI
ENC
PKI
XI
IT
SENDS
PKI
EKI
CI
TO
THE
SERVER
AT
THIS
POINT
A
FUNCTION
F
REPRESENTED
AS
A
CIRCUIT
C
HAS
BEEN
SELECTED
ON
INPUTS
XI
I
V
FOR
SOME
V
U
LET
N
V
FOR
EASE
OF
NOTATION
ASSUME
W
L
O
G
THAT
V
N
THE
PARTIES
PROCEED
AS
FOLLOWS
STEP
THE
SERVER
COMPUTES
C
EVAL
C
CN
PKN
EKN
AND
BROADCASTS
C
TO
PARTIES
PN
STEP
THE
PARTIES
PN
RUN
A
SECURE
MPC
PROTOCOL
ΠDEC
SH
TO
COMPUTE
DEC
SKN
C
THEOREM
LET
E
N
KEYGEN
ENC
DEC
EVAL
N
BE
A
MULTIKEY
FULLY
HOMOMORPHIC
ENCRYPTION
SCHEME
AND
LET
ΠDEC
SH
BE
AN
N
PARTY
MPC
PROTOCOL
FOR
COMPUTING
THE
DECRYPTION
FUNCTION
DEC
SKN
C
IF
E
IS
SEMANTICALLY
SECURE
AND
ΠDEC
SH
IS
SECURE
AGAINST
SEMI
HONEST
ADVERSARIES
CORRUPTING
T
N
PARTIES
THEN
THE
ABOVE
CONSTRUCTION
IS
AN
ON
THE
FLY
MPC
PROTOCOL
SECURE
AGAINST
SEMI
HONEST
ADVERSARIES
CORRUPTING
T
PARTIES
AND
POSSIBLY
THE
SERVER
COMPACTNESS
LET
C
EVAL
C
CT
PKT
EKT
THERE
EXISTS
A
POLYNOMIAL
P
SUCH
THAT
C
P
Κ
N
IN
OTHER
WORDS
THE
SIZE
OF
C
IS
INDEPENDENT
OF
T
AND
C
NOTE
HOWEVER
THAT
WE
ALLOW
THE
EVALUATED
CIPHERTEXT
TO
DEPEND
ON
THE
NUMBER
OF
KEYS
N
DEFINITION
MULTIKEY
FHE
A
FAMILY
OF
ENCRYPTION
SCHEMES
E
N
KEYGEN
ENC
DEC
EVAL
N
IS
MULTIKEY
FULLY
HOMOMORPHIC
IF
IT
IS
MULTIKEY
C
HOMOMORPHIC
FOR
THE
CLASS
C
OF
ALL
CIRCUITS
THE
PROTOCOL
DESCRIBED
IN
SECTION
IS
NOT
SECURE
AGAINST
MALICIOUS
ADVERSARIES
OUR
FIRST
STEP
IN
HANDLING
THIS
TYPE
OF
ATTACK
IS
TO
REPLACE
OUR
DECRYPTION
PROTOCOL
WITH
ONE
THAT
IS
SECURE
AGAINST
MALICIOUS
ADVERSARIES
WHICH
WE
WILL
DENOTE
ΠDEC
MAL
NEXT
WE
WILL
APPLY
GENERAL
MPC
TECHNIQUES
TO
THE
REST
OF
OUR
PROTOCOL
STEPS
AND
TO
ENSURE
PARTIES
DO
NOT
DEVIATE
FROM
THE
PROTOCOL
THIS
REQUIRES
COIN
FLIPPING
AND
ZERO
KNOWLEDGE
PROOFS
HOWEVER
THERE
ARE
TWO
SUBTLETIES
TO
CONSIDER
FIRST
RECALL
THAT
IN
OUR
MODEL
PARTIES
DO
NOT
COMMUNICATE
WITH
EACH
OTHER
UNTIL
THE
DECRYPTION
PHASE
IN
PARTICULAR
PARTIES
DO
NOT
COMMUNICATE
WITH
EACH
OTHER
OR
EVEN
KNOW
ABOUT
THE
EXISTANCE
OF
OTHER
PARTIES
DURING
STEP
THEREFORE
COIN
FLIPPING
IN
STEP
IS
OUT
OF
THE
QUESTION
FORTUNATELY
THE
CORRECTNESS
PROPERTY
FROM
DEFINITION
GUARANTEES
THAT
THE
SCHEME
IS
SECURE
AGAINST
CORRUPT
PARTIES
THAT
FOLLOW
THE
PROTOCOL
IN
STEP
BUT
ADAPTIVELY
CHOOSE
THEIR
RANDOM
COINS
THIS
MEANS
THAT
PARTIES
DO
NOT
NEED
TO
COINFLIP
FOR
EACH
OTHER
RANDOM
COINS
FURTHERMORE
SINCE
THE
SERVER
COMPUTATION
THROUGHOUT
THE
PROTOCOL
IS
DETERMINISTIC
THE
PARTIES
DO
NOT
NEED
TO
COIN
FLIP
FOR
THE
SERVER
RANDOM
COINS
SEMANTIC
SECURITY
OF
A
MULTIKEY
FHE
FOLLOWS
DIRECTLY
FROM
THE
SEMANTIC
SECURITY
OF
THE
UNDERLYING
ENCRYPTION
SCHEME
IN
THE
PRESENCE
OF
THE
EVALUATION
KEY
EK
THIS
IS
BECAUSE
GIVEN
EK
THE
ADVERSARY
CAN
COMPUTE
EVAL
HIMSELF
NOTE
THAT
TAKING
N
IN
DEFINITION
AND
DEFINITION
YIELD
THE
STANDARD
DEFINITIONS
OF
C
HOMOMORPHIC
AND
FULLY
HOMOMORPHIC
ENCRYPTION
SCHEMES
THE
BASIC
PROTOCOL
LET
E
N
KEYGEN
ENC
DEC
EVAL
N
BE
A
MULTIKEY
FULLY
HOMOMORPHIC
FAMILY
OF
ENCRYPTION
SCHEMES
WE
CONSTRUCT
THE
FOLLOWING
ON
THE
FLY
MPC
PROTOCOL
ΠSH
SECURE
AGAINST
SEMI
HONEST
ADVERSARIES
WE
THEREFORE
ONLY
NEED
TO
ADD
ZERO
KNOWLEDGE
PROOFS
OF
TO
ENSURE
THAT
THE
PARTIES
INDEED
FOLLOW
NOTE
THAT
CORRECTNESS
STILL
HOLDS
EVEN
IF
THE
CIRCUIT
C
COMPLETELY
IGNORES
ALL
CIPHERTEXTS
ENCRYPTED
UNDER
A
PUBLIC
KEY
PKI
OR
IF
NONE
OF
THE
ORIGINAL
CIPHERTEXTS
WERE
ENCRYPTED
UNDER
THIS
KEY
IN
OTHER
WORDS
USING
SUPERFLUOUS
KEYS
IN
THE
DECRYPTION
PROCESS
DOES
NOT
AFFECT
ITS
CORRECTNESS
AS
LONG
AS
DECRYPTION
USES
AT
MOST
N
KEYS
SECURITY
AGAINST
MALICIOUS
ADVERSARIES
THERE
IS
A
SUBTELY
HERE
WE
ASSUME
A
RUSHING
ADVERSARY
THAT
IS
WE
ASSUME
THAT
THE
ADVERSARY
CAN
CHOOSE
HIS
MESSAGES
ADAPTIVELY
DEPENDING
ON
THE
MESSAGES
FROM
THE
HONEST
PLAYERS
BECAUSE
OF
THIS
IN
THE
PROOF
THE
SIMULATOR
WILL
HAVE
TO
PROVIDE
SIMULATED
PROOFS
FOR
THE
HONEST
PARTIES
AND
THE
PROTOCOL
THE
INTUITION
BEHIND
THIS
IS
THAT
CORRECTNESS
WILL
GUARANTEE
THAT
THE
SIMULATOR
CAN
EXTRACT
THE
INPUT
X
I
FOR
A
CORRUPTED
PARTY
AND
THEREFORE
OBTAIN
THE
CORRECT
VALUE
Y
FROM
THE
IDEAL
FUNCTIONALITY
REGARDLESS
OF
THE
COINS
USED
BY
THE
ADVERSARY
SECOND
WE
WISH
TO
ENSURE
THAT
THE
COMPUTATION
TIME
AND
COMMUNICATION
COMPLEXITY
OF
THE
PARTIES
IS
SMALL
THIS
MEANS
THAT
THE
SERVER
MUST
BE
ABLE
TO
PROVE
THAT
HE
CARRIED
OUT
THE
COMPUTATION
OF
EVAL
CORRECTLY
IN
SUCH
A
WAY
THAT
THE
PARTIES
CAN
VERIFY
THE
VALIDITY
OF
THE
PROOF
IN
TIME
THAT
IS
MUCH
LESS
THAN
LINEAR
IN
THE
CIRCUIT
SIZE
TO
SOLVE
THIS
PROBLEM
WE
USE
TECHNIQUES
FROM
VERIFIABLE
COMPUTATION
WE
OFFER
SEVERAL
SOLUTIONS
EACH
WITH
ITS
OWN
BENEFITS
AND
DRAWBACKS
VERIFICATION
FOR
SMALL
INPUTS
WE
FIRST
CONSIDER
THE
CASE
WHERE
THE
CIPHERTEXTS
CN
ARE
SMALL
ENOUGH
TO
BE
BROADCAST
TO
THE
N
PARTIES
IN
V
I
E
ALLOWING
COMMUNICATION
COMPLEXITY
LINEAR
IN
THE
TOTAL
INPUT
SIZE
OF
THE
PARTICIPATING
PARTIES
IN
THIS
CASE
THE
SERVER
NEEDS
TO
CONVINCE
THE
PARTICIPATING
PARTIES
THAT
C
EVAL
C
CN
PKN
EKN
I
E
THAT
A
DETERMINISTIC
CIRCUIT
OF
SIZE
POLY
C
Κ
ACCEPTS
FOR
ANY
UNIFORM
CIRCUIT
C
I
E
COMPUTABLE
BY
A
POLY
Κ
TIME
TURING
MACHINE
THE
FOLLOWING
OFFER
POLY
Κ
LOG
C
COMMUNCATION
AND
VERIFICATION
EFFICIENCY
USE
THE
ARGUMENT
SYSTEM
OF
KILIAN
YIELDING
INTERACTIVE
ROUND
VERIFICATION
IT
RELIES
ON
EXPENSIVE
PCPS
USE
MICALI
CS
PROOFS
THIS
REDUCES
INTERACTION
TO
ONE
ROUND
BUT
ASSUMES
A
RANDOM
ORACLE
IT
ALSO
RELIES
ON
EXPENSIVE
PCPS
USE
THE
SUCCINT
NON
INTERACTIVE
ARGUMENTS
SNARGS
AND
SNARKS
OF
BITANSKY
ET
AL
OR
GOLDWASSER
AT
AL
THESE
ARE
ROUND
AND
HOLD
IN
THE
STANDARD
MODEL
BUT
REQUIRE
A
NON
FALSIFIABLE
ASSUMPTION
SOME
VARIANTS
RELY
ON
PCPS
PIR
OR
FHE
COLLISION
RESISTANT
HASH
DIGEST
D
IS
COMPUTED
BY
A
TRUSTED
PARTY
OR
VIA
AN
MPC
PROTOCOL
THEN
IN
STEP
THE
SERVER
PROVES
THE
NP
STATEMENT
E
WHOSE
DIGEST
IS
D
AND
THERE
EXISTS
A
CIRCUIT
C
E
PK
CN
PK
EKN
C
EVAL
C
N
THIS
REQUIRES
A
SUCCINT
ARGUMENT
SYSTEM
THAT
IS
PROOF
OF
KNOWLEDGE
AND
SUPPORTS
NONDETERMINISTIC
UNIFORM
CIRCUITS
THIS
IS
SATISFIED
BY
MICALI
CONSTRUCTION
OF
CS
PROOFS
UNDER
VALIANT
ANALYSIS
AND
BY
SNARKS
VERIFICATION
FOR
LARGE
INPUTS
WE
CAN
MAKE
COMMUNICATION
AND
VERIFICATION
COMPLEXITIES
DEPEND
MERELY
POLYLOGARITHMICALLY
ON
THE
SIZE
OF
THE
RELEVANT
INPUTS
XN
IN
THE
AFOREMENTIONED
PROOFS
OF
KNOWLEDGE
FOR
NONDETERMINISTIC
STATEMENTS
THE
COMPLEXITY
DEPENDS
POLYNOMIALLY
ON
THE
SIZE
OF
STATEMENT
BEING
PROVEN
EXPRESSED
AS
A
NONDETERMINISTIC
TURING
MACHINE
AND
ITS
INPUT
BUT
MERELY
POLYLOGARITHMICALLY
ON
THE
SIZE
OF
THE
WITNESS
FOR
THE
STATEMENT
AND
IN
PARTICULAR
THE
NONDETERMINISTIC
CHOICES
MADE
BY
THE
TURING
MACHINE
WE
THUS
MOVE
CI
FROM
THE
INSTANCE
INTO
THE
WITNESS
TO
RECOGNIZE
THE
CORRECT
CI
EACH
PARTY
PI
REMEMBERS
THE
DIGEST
OF
CI
UNDER
A
COLLISION
RESISTANT
HASH
FUNCTION
FAMILY
H
HHK
Κ
IN
THE
OFFLINE
STAGE
EVERY
PARTY
PI
DRAWS
HASH
KEY
HKI
COMPUTES
THE
DIGEST
DI
HHKI
CI
AND
SENDS
CI
HKI
DI
TO
THE
CLOUD
EACH
PARTY
PI
REMEMBERS
ITS
OWN
HKI
DI
BUT
CAN
FORGET
THE
POTENTIALLY
LONG
XI
AND
CI
IN
THE
ONLINE
STAGE
THE
SERVER
BROADCASTS
HKN
DN
AND
PROVES
THE
FOLLOWING
NP
STATEMENT
THERE
EXIST
C
C
N
SUCH
THAT
DI
HHKI
C
I
AND
C
EVAL
C
C
C
N
PKN
EKN
THIS
IS
SECURE
SINCE
WHENEVER
THE
SERVER
CONVINCES
THE
CLIENTS
IT
ACTUALLY
KNOWS
SUCH
C
C
N
WHICH
CAN
BE
EFFICIENTLY
EXTRACTED
FROM
THE
SERVER
BY
THE
ARGUMENTS
PROOF
OF
KNOWLEDGE
PROPERTY
AND
THESE
EXTRACTED
C
I
MUST
BE
THE
ONES
ORIGINALLY
SENT
BY
THE
PARTIES
BY
THE
COLLISION
RESISTANCE
OF
H
PROTOCOL
FOR
MALICIOUS
ADVERSARIES
IN
CASE
THAT
THE
EVALUATION
CIRCUIT
IS
IN
LOGSPACE
UNIFORM
NC
WE
HAVE
ANOTHER
ALTERNATIVE
USE
THE
ARGUMENT
SYSTEM
OF
GOLDWASSER
ET
AL
FOR
A
ROUND
SOLUTION
IT
RELIES
ON
PIR
IN
THE
CASE
OF
ARBITRARY
NONUNIFORM
POLY
Κ
SIZE
CIRCUITS
ONE
CAN
USE
THE
TECHNIQUE
OF
SECTION
FIRST
IN
A
PREPARATORY
PHASE
THE
CIRCUIT
C
IS
WRITTEN
DOWN
AND
ITS
STILL
BE
ABLE
TO
EXTRACT
FROM
THE
PROOFS
CREATED
BY
THE
ADVERARY
ON
BEHALF
OF
CORRUPT
PLAYERS
WE
THEREFORE
NEED
TO
USE
SIMULATION
EXTRACTABLE
ZK
PROOFS
SE
ZK
INSTEAD
OF
ORDINARY
ZK
PROOFS
OF
KNOWLEDGE
ZK
POKS
HOWEVER
IN
THE
INTEREST
OF
CLARITY
WE
CHOOSE
TO
PRESENT
THE
CONSTRUCTION
ABOVE
WITH
ZK
POKS
INSTEAD
OF
SE
ZK
FOR
ANY
GIVEN
FAMILY
OF
C
C
POLY
Κ
AND
THUS
POLY
Κ
LOG
C
POLY
Κ
BUT
THE
DEGREE
OF
THIS
POLYNOMIAL
DEPENDS
ON
THE
CIRCUIT
FAMILY
A
NON
FALSIFIABLE
ASSUMPTION
IS
NECESSARY
FOR
THE
ARGUMENT
SYSTEM
TO
BE
NON
INTERACTIVE
AND
SECURE
IN
THE
STANDARD
MODEL
NOTE
THAT
WE
INDEED
REQUIRE
ADAPTIVE
SECURITY
SINCE
THE
PROVER
IE
THE
SERVER
IS
FREE
TO
CHOOSE
THE
STATEMENT
TO
BE
PROVEN
IE
THE
FUNCTION
TO
BE
COMPUTED
THE
PROTOCOL
FOR
FULLY
MALICIOUS
ADVERSARIES
IS
GIVEN
BELOW
LET
E
N
KEYGEN
ENC
DEC
EVAL
N
BE
A
MULTIKEY
FULLY
HOMOMORPHIC
FAMILY
OF
ENCRYPTION
SCHEMES
AND
LET
H
HHK
Κ
BE
A
FAMILY
OF
COLLISIONRESISTANT
HASH
FUNCTIONS
THE
FOLLOWING
CONSTRUCTION
IS
AN
ON
THE
FLY
MPC
PROTOCOL
ΠMAL
SECURE
AGAINST
MALICIOUS
ADVERSARIES
STEP
FOR
I
U
PARTY
PI
SAMPLES
A
KEY
TUPLE
PKI
SKI
EKI
KEYGEN
RI
AND
ENCRYPTS
ITS
INPUT
XI
UNDER
PKI
CI
ENC
PKI
XI
SI
IT
ALSO
SAMPLES
A
HASH
KEY
HKI
AND
COMPUTES
THE
DIGEST
OF
THE
CIPHERTEXT
DI
HHKI
CI
IT
COMPUTES
ZERO
KNOWLEDGE
PROOFS
OF
KNOWLEDGE
ΠIGEN
ΠIENC
SHOWING
IT
COMPUTED
THESE
STEPS
CORRECTLY
THE
PROOFS
ΠIGEN
ΠIENC
ATTEST
TO
THESE
RELATIONS
PRELIMINARIES
FOR
THE
NTRU
INSTANTIATION
RGEN
PKI
EKI
SKI
RI
PKI
SKI
EKI
KEYGEN
RI
RENC
PKI
HKI
DI
XI
SI
CI
CI
ENC
PKI
XI
SI
AND
DI
HHKI
CI
PARTY
PI
SENDS
THE
TUPLE
PKI
EKI
CI
HKI
DI
ΠIGEN
ΠIENC
TO
THE
SERVER
THE
SERVER
VERIFIES
ALL
PROOFS
ΠIGEN
ΠIENC
I
U
FROM
THIS
POINT
FORWARD
PARTY
PI
CAN
FORGET
ITS
INPUT
XI
AND
THE
CIPHERTEXT
CI
IT
NEED
ONLY
REMEMBER
THE
HASH
KEY
HKI
AND
DIGEST
DI
A
FUNCTION
F
REPRESENTED
AS
A
CIRCUIT
C
IS
NOW
SELECTED
ON
INPUTS
XI
I
V
FOR
SOME
V
U
LET
N
V
FOR
EASE
OF
NOTATION
WE
ASSUME
W
L
O
G
THAT
V
N
STEP
THE
SERVER
COMPUTES
C
EVAL
C
CN
PKN
EKN
WE
WORK
OVER
RINGS
R
Z
X
HΦ
X
I
AND
RQ
R
QR
FOR
SOME
DEGREE
N
INTEGER
POLYNOMIAL
Φ
X
Z
X
AND
A
PRIME
INTEGER
Q
Z
NOTE
THAT
RQ
ZQ
X
HΦ
X
I
I
E
THE
RING
OF
DEGREE
N
POLYNOMIALS
MODULO
Φ
X
WITH
COEFFICIENTS
IN
ZQ
ADDITION
IN
THESE
RINGS
IS
DONE
COMPONENT
WISE
IN
THEIR
COEFFICIENTS
THUS
THEIR
ADDITIVE
GROUP
IS
ISOMORPHIC
TO
ZN
AND
ZN
Q
RESPECTIVELY
MULTIPLICATION
IS
SIMPLY
POLYNOMIAL
MULTIPLICATION
MODULO
Φ
X
AND
ALSO
Q
IN
THE
CASE
OF
THE
RING
RQ
THUS
AN
ELEMENT
IN
R
OR
RQ
CAN
BE
VIEWED
AS
A
DEGREE
N
POLYNOMIAL
OVER
Z
OR
ZQ
WE
REPRESENT
SUCH
AN
ELEMENT
THE
VECTOR
OF
ITS
N
COEFFICIENTS
EACH
IN
THE
USING
RANGE
FOR
AN
ELEMENT
A
X
X
AN
XN
R
WE
LET
KAK
MAX
AI
DENOTE
ITS
NORM
IN
THIS
WORK
WE
SET
Φ
X
XN
TO
BE
THE
NTH
CYCLOTOMIC
POLYNOMIAL
WHERE
N
IS
A
POWER
OF
TWO
WE
USE
DISTRIBUTIONS
OVER
THE
RING
Z
X
HXN
TO
SHOW
THE
HOMOMORPHIC
PROPERTIES
OF
THE
SCHEME
THE
ONLY
PROPERTY
OF
THESE
DISTRIBUTIONS
WE
USE
IS
THE
MAGNITUDE
OF
THE
POLYNOMIALS
COEFFICIENTS
HENCE
WE
DEFINE
A
B
BOUNDED
DISTRIBUTION
TO
BE
A
DISTRIBUTION
OVER
R
WHERE
THE
NORM
OF
A
SAMPLE
IS
BOUNDED
AND
A
SHORT
ARGUMENT
Φ
PROVING
THAT
DEFINITION
B
BOUNDED
POLYNOMIAL
A
POLYNOMIAL
E
R
IS
CALLED
B
BOUNDED
IF
KEK
B
C
C
N
T
DI
HHKI
C
I
AND
C
EVAL
C
C
C
N
PKN
EKN
IT
BROADCASTS
C
Φ
TO
PARTIES
PN
TOGETHER
WITH
PKI
EKI
HKI
DI
ΠIGEN
ΠIENC
I
N
STEP
THE
PARTIES
PN
VERIFY
THE
ARGUMENT
Φ
AND
ALL
PROOFS
ΠIGEN
ΠIENC
I
N
THE
PARTIES
RUN
AN
MPC
PROTOCOL
ΠDEC
MAL
TO
COMPUTE
DEC
SKN
C
THEOREM
LET
E
N
KEYGEN
ENC
DEC
EVAL
N
BE
A
MULTIKEY
FULLY
HOMOMORPHIC
ENCRYPTION
SCHEME
AND
LET
ΠDEC
MAL
BE
AN
N
PARTY
MPC
PROTOCOL
FOR
COMPUTING
THE
DECRYPTION
FUNCTION
DEC
SKN
C
LET
H
HHK
Κ
BE
A
FAMILY
OF
COLLISION
RESISTANT
HASH
FUNCTIONS
IF
E
IS
SEMANTICALLY
SECURE
AND
ΠDEC
MAL
IS
SECURE
AGAINST
MALICIOUS
ADVERSARIES
CORRUPTING
T
N
PARTIES
THEN
THE
ABOVE
CONSTRUCTION
IS
AN
ON
THE
FLY
MPC
PROTOCOL
SECURE
AGAINST
MALICIOUS
ADVERSARIES
CORRUPTING
T
PARTIES
AND
POSSIBLY
THE
SERVER
DEFINITION
B
BOUNDED
DISTRIBUTION
A
DISTRIBUTION
ENSEMBLE
ΧN
N
N
SUPPORTED
OVER
R
IS
CALLED
BBOUNDED
FOR
B
B
N
IF
FOR
ALL
E
IN
THE
SUPORT
OF
ΧN
WE
HAVE
KEK
B
IN
OTHER
WORDS
A
B
BOUNDED
DISTRIBUTION
OVER
R
OUTPUTS
A
B
BOUNDED
POLYNOMIAL
WE
PRESENT
SOME
ELEMENTARY
FACTS
ABOUT
THE
GAUSSIAN
DISTRIBUTION
AND
MULTIPLICATION
OVER
THE
RING
Z
X
HXN
THE
FIRST
FACT
SHOWS
THAT
THE
DISCRETE
GAUSSIAN
DISTRIBUTION
OVER
ZN
WITH
STANDARD
DEVIATION
R
DENOTED
BY
DZN
R
OUTPUTS
A
R
N
BOUNDED
POLYNOMIAL
WITH
HIGH
PROBABILITY
THIS
ALLOWS
US
TO
DEFINE
A
TRUNCATED
GAUSSIAN
DISTRIBUTION
THAT
IS
R
N
BOUNDED
AND
STATISTICALLY
CLOSE
TO
THE
DISCRETE
GAUSSIAN
THE
SECOND
SAYS
THAT
MULTIPLICATION
IN
THE
RING
Z
X
HXN
INCREASES
THE
NORM
OF
THE
CONSTITUENT
ELEMENTS
ONLY
BY
A
SMALL
AMOUNT
LEMMA
SEE
THEOREM
LET
N
N
FOR
ANY
REAL
NUMBER
R
Ω
LOG
N
WE
HAVE
PR
X
R
N
N
X
DZN
R
MULTIKEY
SOMEWHAT
HOMOMORPHIC
ENCRYPTION
BASED
ON
NTRU
WE
SHOW
HOW
TO
CONSTRUCT
A
MULTIKEY
SOMEWHAT
HOMOMORPHIC
ENCRYPTION
SCHEME
BASED
ON
THE
NTRU
ENCRYPTION
SYSTEM
FIRST
PROPOSED
BY
HOFFSTEIN
PIPHER
AND
SILVERMAN
MORE
PRECISELY
WE
RELY
ON
A
VARIANT
OF
THE
NTRU
SCHEME
PROPOSED
BY
STEHLE
AND
STEINFELD
IN
SECTION
WE
FIRST
REVIEW
DEFINITIONS
AND
FACTS
FROM
THE
LITERATURE
THAT
WE
USE
EXTENSIVELY
IN
SECTION
WE
DESCRIBE
THE
ENCRYPTION
SCHEME
IN
SECTION
WE
DISCUSS
ITS
SECURITY
AND
IN
SECTION
SHOW
THAT
IT
IS
MULTIKEY
SOMEWHAT
HOMOMORPHIC
DEFINE
THE
TRUNCATED
DISCRETE
GAUSSIAN
DISTRIBUTION
TO
BE
ONE
THAT
SAMPLES
A
POLYNOMIAL
ACCORDING
TO
THE
DISCRETE
GAUSSIAN
DZN
R
AND
REPEAT
THE
SAMPLING
IF
THE
POLYNOMIAL
IS
NOT
R
N
BOUNDED
BY
LEMMA
THIS
DISTRIBUTION
IS
STATISTICALLY
CLOSE
TO
THE
DISCRETE
GAUSSIAN
LEMMA
SEE
LET
N
N
LET
Φ
X
XN
AND
LET
R
Z
X
HΦ
X
I
FOR
ANY
T
R
T
MOD
Φ
X
N
T
T
MOD
Φ
X
N
T
LEMMA
YIELDS
THE
FOLLOWING
COROLLARY
COROLLARY
LET
N
N
LET
Φ
X
XN
AND
R
Z
X
HΦ
X
I
LET
Χ
BE
A
B
BOUNDED
DISTRIBUTION
OVER
THE
Q
RING
R
AND
LET
SK
Χ
THEN
KI
SI
IS
NK
B
K
BOUNDED
THE
RING
LWE
ASSUMPTION
WE
DESCRIBE
A
SPECIAL
CASE
OF
THE
RING
LEARNING
WITH
ERRORS
ASSUMPTION
OF
LYUBASKEVSKY
PEIKERT
AND
REGEV
WHICH
WE
WILL
CALL
RLWE
THE
RLWE
ASSUMPTION
IS
ANALOGOUS
TO
THE
STANDARD
LEARNING
WITH
ERRORS
LWE
ASSUMPTION
FIRST
DEFINED
BY
REGEV
GENERALIZING
THE
LEARNING
PARITY
WITH
NOISE
ASSUMPTION
OF
BLUM
ET
AL
THE
RLWEΦ
Q
Χ
ASSUMPTION
IS
THAT
FOR
A
RANDOM
RING
ELEMENT
RQ
GIVEN
ANY
POLYNOMIAL
NUMBER
OF
SAMPLES
OF
THE
FORM
AI
BI
AI
EI
RQ
WHERE
AI
IS
UNIFORMLY
RANDOM
IN
RQ
AND
EI
IS
DRAWN
FROM
THE
ERROR
DISTRIBUTION
Χ
THE
BI
ARE
COMPUTATIONALLY
INDISTINGUISHABLE
FROM
UNIFORM
IN
RQ
WE
USE
THE
HERMITE
NORMAL
FORM
OF
THE
ASSUMPTION
AS
IN
WHERE
THE
SECRET
IS
SAMPLED
FROM
THE
NOISE
DISTRIBUTION
Χ
RATHER
THAN
BEING
UNIFORM
IN
RQ
THIS
PRESENTATION
IS
MORE
USEFUL
FOR
THE
PURPOSES
OF
THIS
PAPER
AND
IT
TURNS
OUT
TO
BE
EQUIVALENT
TO
THE
ORIGINAL
ONE
UP
TO
OBTAINING
ONE
ADDITIONAL
SAMPLE
DEFINITION
THE
RLWE
ASSUMPTION
HERMITE
NORMAL
FORM
FOR
ALL
Κ
N
LET
Φ
X
ΦΚ
X
Z
X
BE
A
POLYNOMIAL
OF
DEGREE
N
N
Κ
LET
Q
Q
Κ
Z
BE
A
PRIME
INTEGER
LET
THE
RING
R
Z
X
HΦ
X
I
AND
RQ
R
QR
AND
LET
Χ
DENOTE
A
DISTRIBUTION
OVER
THE
RING
R
THE
DECISIONAL
RING
LWE
ASSUMPTION
RLWEΦ
Q
Χ
STATES
THAT
FOR
ANY
POLY
Κ
IT
HOLDS
THAT
C
AI
AI
EI
I
AI
UI
I
THE
WORST
CASE
TO
AVERAGE
CASE
CONNECTION
WE
STATE
A
WORST
CASE
TO
AVERAGE
CASE
REDUCTION
FROM
THE
SHORTEST
VECTOR
PROBLEM
ON
IDEAL
LATTICES
TO
THE
RLWE
PROBLEM
FOR
OUR
SETTING
OF
PARAMETERS
THE
REDUCTION
STATED
BELOW
IS
A
SPECIAL
CASE
OF
THE
RESULTS
OF
THEOREM
A
SPECIAL
CASE
OF
LET
ΦN
X
XN
BE
THE
NTH
CYCLOTOMIC
POLYNOMIAL
WHERE
N
IS
A
POWER
OF
TWO
LET
R
Ω
LOG
N
BE
A
REAL
NUMBER
AND
LET
Q
MOD
BE
A
PRIME
INTEGER
LET
R
Z
X
HXN
THEN
THERE
IS
A
RANDOMIZED
REDUCTION
FROM
LOG
N
Q
R
APPROXIMATE
R
SVP
TO
RLWEΦ
Q
Χ
WHERE
Χ
DZN
R
IS
THE
DISCRETE
GAUSSIAN
DISTRIBUTION
THE
REDUCTION
RUNS
IN
TIME
POLY
N
Q
WE
DESCRIBE
THE
NTRU
ENCRYPTION
SCHEME
WITH
THE
MODIFICATIONS
PROPOSED
BY
STEHLE
AND
STEINFELD
FOR
A
SECURITY
PARAMETER
Κ
THE
SCHEME
IS
PARAMETRIZED
BY
THE
FOLLOWING
QUANTITIES
AN
INTEGER
N
N
Κ
A
PRIME
NUMBER
Q
Q
Κ
A
DEGREE
N
POLYNOMIAL
Φ
X
ΦΚ
X
A
B
Κ
BOUNDED
ERROR
DISTRIBUTION
Χ
Χ
Κ
OVER
THE
RING
R
Z
X
HΦ
X
I
THE
PARAMETERS
N
Q
Φ
X
AND
Χ
ARE
PUBLIC
AND
WE
ASSUME
THAT
GIVEN
Κ
THERE
ARE
POLYNOMIAL
TIME
ALGORITHMS
THAT
OUTPUT
N
Q
AND
Φ
X
AND
SAMPLE
FROM
THE
ERROR
DISTRIBUTION
Χ
THE
MESSAGE
SPACE
IS
M
AND
ALL
OPERATIONS
ON
CIPHERTEXTS
ARE
CARRIED
OUT
IN
THE
RING
RQ
I
E
MODULO
Q
AND
Φ
X
KEYGEN
SAMPLE
POLYNOMIALS
F
G
Χ
AND
SET
F
SO
THAT
F
MOD
IF
F
IS
NOT
INVERTIBLE
IN
RQ
RESAMPLE
F
SET
WHERE
IS
SAMPLED
FROM
THE
NOISE
DISTRIBUTION
Χ
AI
ARE
UNIFORM
IN
RQ
THE
ERROR
POLYNOMIALS
EI
ARE
SAMPLED
FROM
THE
ERROR
DISTRIBUTION
Χ
AND
FINALLY
THE
RING
ELEMENTS
UI
ARE
UNIFORMLY
RANDOM
OVER
RQ
PK
H
RQ
RLWEΦ
Q
Χ
WE
USE
TO
DENOTE
THE
ASSUMPTION
WHEN
THE
NUMBER
OF
SAMPLES
IS
FIXED
WHERE
ALL
OPERATIONS
ARE
DONE
MODULO
Q
AND
Φ
X
C
DEC
SK
C
LET
Μ
F
C
RQ
OUTPUT
Μ
MOD
WHERE
AI
EI
AND
UI
ARE
AS
IN
DEFINITION
WE
SET
Φ
X
TO
BE
THE
NTH
CYCLOTOMIC
POLYNOMIAL
THIS
IMPLIES
THAT
Φ
X
XN
THE
ERROR
DISTRIBUTION
Χ
IS
THE
TRUNCATED
DISCRETE
GAUSSIAN
DISTRIBUTION
DZN
R
FOR
STANDARD
DEVIATION
R
A
SAMPLE
FROM
THIS
DISTRIBUTION
IS
A
R
N
BOUNDED
POLYNOMIAL
E
R
SK
F
R
C
HS
M
RQ
AI
AI
EI
I
AI
UI
I
AS
ALREADY
STATED
ABOVE
WE
WILL
RELY
OF
THE
FOLLOWING
SPECIFIC
CHOICES
OF
THE
POLYNOMIAL
Φ
X
AND
THE
ERROR
DISTRIBUTION
Χ
FOR
SECURITY
PARAMETER
Κ
AND
A
DIMENSION
PARAMETER
N
N
Κ
WHICH
IS
A
POWER
OF
TWO
ENC
PK
M
SAMPLE
POLYNOMIALS
E
Χ
OUTPUT
THE
CIPHERTEXT
FACT
THE
RLWE
Φ
Q
Χ
ASSUMPTION
IMPLIES
THAT
CHOICE
OF
PARAMETERS
THE
SCHEME
IT
IS
EASILY
SEEN
THAT
THIS
SCHEME
IS
CORRECT
AS
LONG
AS
THERE
IS
NO
WRAP
AROUND
MODULO
Q
TO
DECRYPT
A
CIPHERTEXT
C
WE
COMPUTE
IN
RQ
F
C
F
HS
E
F
M
E
F
M
IF
THERE
IS
NO
WRAP
AROUND
MODULO
Q
THEN
F
C
MOD
E
F
M
MOD
F
M
MOD
M
ONE
POSSIBLE
SETTING
WHICH
ENSURES
THAT
THERE
IS
NO
WRAPAROUND
MODULO
Q
IS
TO
SET
Φ
X
XN
TO
SEE
WHY
THIS
HELPS
NOTICE
THAT
SINCE
THE
COEFFICIENTS
OF
G
F
E
ARE
ALL
BOUNDED
BY
BY
COROLLARY
WE
KNOW
THAT
THE
IN
FACT
THE
COEFFICIENTS
OF
G
AND
E
ARE
BOUNDED
BY
B
AND
THAT
OF
F
IS
BOUNDED
BY
COEFFICIENTS
OF
GS
MOD
XN
AND
F
E
MOD
XN
ARE
BOTH
BOUNDED
BY
N
THUS
THE
COEFFICIENTS
OF
F
C
ARE
BOUNDED
BY
B
Q
IN
OTHER
WORDS
AS
LONG
AS
WE
SET
Q
A
FRESH
CIPHERTEXT
GENERATED
BY
ENC
IS
GUARANTEED
TO
DECRYPT
CORRECTLY
FROM
HERE
ON
WE
REFER
TO
Μ
F
C
RQ
AS
THE
ERROR
IN
A
CIPHERTEXT
C
USING
THE
SAME
SECURITY
PROOF
AS
IN
WE
CAN
BASE
THE
SECURITY
OF
THE
SCHEME
IN
SECTION
ON
THE
DSPR
ASSUMPTION
AND
THE
RLWE
ASSUMPTION
WITH
THE
CHOICE
OF
PARAMETERS
STATED
BELOW
THIS
YIELDS
SECURITY
UNDER
THE
DSPR
ASSUMPTION
AND
THE
HARDNESS
OF
APPROXIMATING
SHORTEST
VEC
TORS
ON
IDEAL
LATTICES
TO
WITHIN
A
FACTOR
OF
WHICH
IS
BELIEVED
TO
BE
HARD
FOR
THE
REST
OF
OUR
EXPOSITION
WE
WILL
USE
Φ
X
XN
AS
OUR
MODULUS
POLYNOMIAL
LEMMA
LET
N
BE
A
POWER
OF
TWO
LET
Φ
X
XN
LET
Q
FOR
AND
Χ
DZN
R
WITH
R
POLY
N
THEN
THE
MODIFIED
NTRU
ENCRYPTION
SCHEME
DESCRIBED
IN
SECTION
IS
SECURE
UNDER
THE
DSPRΦ
Q
Χ
ASSUMPTION
AND
THE
WORST
CASE
HARDNESS
OF
APPROXIMATING
SHORTEST
VECTORS
ON
IDEAL
LATTICES
OVER
THE
RING
R
Z
X
HΦ
X
I
TO
WITHIN
A
Ω
N
FACTOR
OF
SECURITY
WE
BASE
THE
SECURITY
OF
THE
ENCRYPTION
SCHEME
IN
SECTION
ON
TWO
ASSUMPTIONS
THE
RLWE
ASSUMPTION
DESCRIBED
IN
SECTION
AS
WELL
AS
A
NEW
ASSUMPTION
THAT
WE
CALL
THE
DECISIONAL
SMALL
POLYNOMIAL
RATIO
DSPR
ASSUMPTION
TOWARDS
THIS
END
WE
DEFINE
THE
FOLLOWING
PROBLEM
MULTIKEY
HOMOMORPHISM
A
POLYNOMIAL
H
G
F
WHERE
F
AND
G
ARE
SAMPLED
FROM
THE
DISTRIBUTION
Χ
CONDITIONED
ON
F
BEING
INVERTIBLE
OVER
RQ
R
QR
AND
LET
AND
BE
TWO
DIFFERENT
PUBLIC
SECRET
KEY
PAIRS
AND
LET
AND
BE
TWO
CIPHERTEXTS
ENCRYPTED
UNDER
PUBLIC
KEYS
AND
RESPECTIVELY
WE
SHOW
HOW
TO
COMPUTE
CIPHERTEXTS
THAT
DECRYPT
TO
THE
SUM
AND
THE
PRODUCT
OF
AND
IN
PARTICULAR
WE
SHOW
THAT
THE
CIPHERTEXTS
CMULT
AND
CADD
CAN
BE
DECRYPTED
TO
THE
PRODUCT
AND
THE
SUM
OF
AND
RESPECTIVELY
USING
THE
SECRET
KEY
TO
SEE
THIS
NOTE
THAT
AS
LONG
AS
THERE
IS
NO
WRAP
AROUND
MODULO
Q
A
POLYNOMIAL
H
SAMPLED
UNIFORMLY
AT
RANDOM
OVER
RQ
MOD
DEFINITION
DECISIONAL
SMALL
POLYNOMIAL
RATIO
DSPRΦ
Q
Χ
PROBLEM
LET
Φ
X
Z
X
BE
A
POLYNOMIAL
OF
DEGREE
N
LET
Q
Z
BE
A
PRIME
INTEGER
AND
LET
Χ
DENOTE
A
DISTRIBUTION
OVER
THE
RING
R
Z
X
HΦ
X
I
THE
DECISIONAL
SMALL
POLYNOMIAL
RATIO
PROBLEM
DSPRΦ
Q
Χ
IS
TO
DISTINGUISH
BETWEEN
THE
FOLLOWING
TWO
DISTRIBUTIONS
STEHLE
AND
STEINFELD
HAVE
SHOWN
THAT
THE
DSPRΦ
Q
Χ
PROBLEM
IS
HARD
EVEN
FOR
UNBOUNDED
ADVERSARIES
NAMELY
THE
TWO
DISTRIBUTIONS
ABOVE
ARE
STATISTICALLY
CLOSE
IF
N
IS
A
POWER
OF
TWO
Φ
X
XN
IS
THE
NTH
CYCLOTOMIC
POLY
NOMIAL
AND
Χ
IS
THE
DISCRETE
GAUSSIAN
DZN
R
FOR
R
Q
POLY
N
THIS
ALLOWED
THEM
TO
PROVE
SEMANTIC
SECURITY
FOR
THE
MODIFIED
NTRU
SCHEME
DESCRIBED
IN
SECTION
UNDER
THE
RLWEΦ
Q
Χ
ASSUMPTION
ALONE
THE
SECURITY
PROOF
FOLLOWS
BY
A
HYBRID
ARGUMENT
IN
TWO
STEPS
THE
HARDNESS
OF
DSPRΦ
Q
Χ
ALLOWS
US
TO
CHANGE
THE
PUBLIC
KEY
H
F
TO
H
FOR
A
UNIFORMLY
SAMPLED
ONCE
THIS
IS
DONE
WE
CAN
USE
RLWEΦ
Q
Χ
TO
CHANGE
THE
CHALLENGE
CIPHERTEXT
C
HS
M
TO
C
U
M
WHERE
U
IS
UNIFORMLY
SAMPLED
FROM
RQ
IN
THIS
FINAL
HYBRID
THE
ADVANTAGE
OF
THE
ADVERSARY
IS
EXACTLY
SINCE
C
IS
UNIFORM
OVER
RQ
INDEPENDENT
OF
THE
MESSAGE
M
UNFORTUNATELY
THEIR
RESULT
HOLDS
ONLY
IF
R
Q
POLY
N
WHICH
IS
TOO
LARGE
TO
PERMIT
EVEN
A
SINGLE
HOMOMORPHIC
MULTIPLICATION
TO
SUPPORT
HOMOMORPHIC
OPERATIONS
WE
NEED
TO
USE
A
MUCH
SMALLER
VALUE
OF
R
FOR
WHICH
IT
IS
EASY
TO
SEE
THAT
THE
DSPRΦ
Q
Χ
ASSUMPTION
DOES
NOT
HOLD
IN
A
STATISTICAL
SENSE
ANY
MORE
THIS
MAKES
IT
NECESSARY
FOR
US
TO
ASSUME
THAT
THE
DECISIONAL
SMALL
POLYNOMIAL
RATIOS
PROBLEM
IS
HARD
FOR
OUR
CHOICE
OF
PARAMETERS
WHICH
WE
REFER
TO
AS
THE
DSPRΦ
Q
Χ
ASSUMPTION
MOD
MOD
AND
MOD
MOD
MOD
SINCE
MOD
AND
MOD
IN
OTHER
WORDS
THE
JOINT
SECRET
KEY
CAN
BE
USED
TO
DECRYPT
CADD
AND
CMULT
WE
CAN
EXTEND
THIS
ARGUMENT
TO
ANY
COMBINATION
OF
OPERATIONS
WITH
CIPHERTEXTS
ENCRYPTED
UNDER
MULTIPLE
PUBLIC
KEYS
OF
COURSE
THE
ERROR
IN
THE
CIPHERTEXTS
WILL
GROW
WITH
THE
NUMBER
OF
OPERATIONS
PERFORMED
AS
WITH
ALL
KNOWN
FULLY
HOMOMORPHIC
ENCRYPTION
SCHEMES
THUS
CORRECTNESS
OF
DECRYPTION
WILL
ONLY
HOLD
FOR
A
LIMITED
NUMBER
OF
OPERATIONS
WE
CAN
SHOW
THAT
THE
SCHEME
CAN
CORRECTLY
EVALUATE
CIRCUITS
OF
DEPTH
ROUGHLY
LOG
N
WHEN
Q
AND
B
POLY
N
HOWEVER
AN
ASTUTE
READER
WOULD
HAVE
OBSERVED
BY
NOW
THAT
IN
ORDER
TO
SUCCESSFULLY
DECRYPT
A
CIPHERTEXT
THAT
WAS
THE
RESULT
OF
A
HOMOMORPHIC
EVALUATION
WE
MUST
KNOW
THE
CIRCUIT
THAT
WAS
EVALUATED
FOR
EXAMPLE
TO
DECRYPT
WE
NEED
TO
MULTIPLY
IT
BY
WHEREAS
TO
DECRYPT
WE
NEED
TO
MULTIPLY
BY
THIS
IS
OBVIOUSLY
UNSATISFACTORY
FURTHERMORE
CONSIDER
WHAT
HAPPENS
WHEN
WE
ADD
OR
MULTIPLY
TWO
CIPHERTEXTS
C
THAT
ARE
THEMSELVES
A
RESULT
OF
HOMOMORPHIC
EVALUATION
SUPPOSE
FOR
EXAMPLE
THAT
C
AND
WHERE
CI
IS
ENCRYPTED
UNDER
HI
FOR
I
WE
KNOW
C
CAN
BE
DECRYPTED
USING
AND
CAN
BE
DECRYPTED
USING
THUS
WE
KNOW
THAT
EVAL
C
CT
PKT
EKT
WE
SHOW
HOW
TO
EVALUATE
A
T
INPUT
CIRCUIT
C
TO
THIS
END
WE
SHOW
HOW
TO
HOMOMORPHICALLY
ADD
AND
MULTIPLY
TWO
ELEMENTS
IN
GIVEN
TWO
CIPHERTEXTS
WE
ASSUME
THAT
WE
ALSO
HAVE
A
SET
OF
DISTINCT
PUBLIC
KEYS
ASSOCIATED
WITH
EACH
CIPHERTEXT
WE
WILL
DENOTE
THESE
LISTS
BY
RESPECTIVELY
THE
PUBLIC
KEY
SET
OF
A
FRESH
ENCRYPTION
IS
SIMPLY
THE
SET
PK
CONTAINING
THE
PUBLIC
KEY
UNDER
WHICH
IT
WAS
ENCRYPTED
C
M
FOR
SOME
MESSAGES
M
AND
AND
ERROR
TERMS
E
AND
FOLLOWING
THE
DISCUSSION
ABOVE
WE
CAN
SEE
THAT
C
CAN
BE
DECRYPTED
USING
THE
KEY
IN
GENERAL
GIVEN
A
CIPHERTEXT
C
ENCRYPTED
UNDER
A
SET
OF
KEYS
K
AND
ENCRYPTED
UNDER
A
SET
OF
KEYS
K
THEIR
SUM
CAN
BE
DECRYPTED
USING
THE
PRODUCT
OF
THE
KEYS
IN
K
K
THE
ABSOLUTE
MAGNITUDE
OF
THE
ENTRIES
IN
THIS
PRODUCT
GROWS
EXPONENTIALLY
WITH
THE
NUMBER
OF
KEYS
IN
K
K
ANALOGOUSLY
IN
THE
CONTEXT
OF
HOMOMORPHIC
MULTIPLICATION
WE
NEED
TO
DECRYPT
C
THIS
HINTS
AT
THE
FACT
THAT
THE
SIZE
OF
THE
JOINT
SECRET
KEY
NEEDED
TO
DECRYPT
AN
EVALUATED
CIPHERTEXT
GROWS
EXPONENTIALLY
WITH
THE
DEGREE
OF
THE
EVALUATED
CIRCUIT
AND
NOT
JUST
WITH
THE
NUMBER
OF
PARTIES
INVOLVED
AS
IN
THE
CASE
OF
ADDITION
INDEED
AFTER
D
MULTIPLICATIONS
THE
JOINT
SECRET
KEY
NEEDED
TO
DECRYPT
WILL
BE
THE
PRODUCT
OF
D
POLYNOMIALS
AND
THE
MAGNITUDE
OF
THE
COEFFICIENTS
IN
THIS
PRODUCT
WILL
BE
EXPONENTIAL
IN
D
IT
IS
BENEFICIAL
ESPECIALLY
FOR
OUR
CONSTRUCTIONS
IN
SECTION
THAT
WE
ELIMINATE
THE
EXPONENTIAL
DEPENDENCE
OF
THE
MAGNITUDE
OF
THE
COEFFICIENTS
OF
THE
JOINT
SECRET
KEY
ON
THE
DEGREE
D
WE
REMARK
THAT
WE
WILL
NOT
SUCCEED
IN
ELIMINATING
THE
EXPONENTIAL
DEPENDENCE
ON
N
THE
NUMBER
OF
USERS
INDEED
THIS
IS
THE
REASON
WHY
OUR
SOLUTION
WILL
EVENTUALLY
ASSUME
AN
A
PRIORI
UPPER
BOUND
ON
N
THIS
MOTIVATES
OUR
USE
OF
RELINEARIZATION
A
TECHNIQUE
FIRST
INTRODUCED
BY
BRAKERSKI
AND
VAIKUNTANATHAN
INFORMALLY
WE
WILL
INTRODUCE
A
PUBLIC
EVALUATION
KEY
EK
THAT
WILL
BE
OUTPUT
BY
THE
KEYGEN
ALGORITHM
EVERY
TIME
WE
MULTIPLY
CIPHERTEXTS
THAT
SHARE
A
KEY
FI
WE
WILL
USE
THE
EVALUATION
KEY
TO
ENSURE
THAT
WE
ONLY
NEED
FI
AND
NOT
TO
DECRYPT
THE
NEW
CIPHERTEXT
THIS
ENSURES
TWO
THINGS
GIVEN
TWO
CIPHERTEXTS
AND
WITH
CORRESPONDING
PUBLIC
KEY
SETS
AND
OUTPUT
THE
CIPHERTEXT
CADD
RQ
AS
AN
ENCRYPTION
OF
THE
SUM
OF
THE
UNDERLYING
MESSAGES
OUTPUT
THE
SET
KADD
AS
ITS
CORRESPONDING
PUBLIC
KEY
SET
GIVEN
TWO
CIPHERTEXTS
AND
WITH
CORRESPONDING
PUBLIC
KEY
SETS
AND
COMPUTE
CIPHERTEXT
E
RQ
AND
LET
PKIR
IF
LET
CMULT
E
OTHERWISE
FOR
J
R
AND
Τ
BLOG
QC
DEFINE
E
CJ
Τ
SO
THAT
BLOG
QC
E
CJ
WE
PRESENT
BELOW
OUR
MODIFIED
SCHEME
AS
WELL
AS
THE
EVAL
ALGORITHM
KEYGEN
SAMPLE
F
G
Χ
AND
SET
F
SO
THAT
F
MOD
IF
F
IS
NOT
INVERTIBLE
IN
RQ
RESAMPLE
F
SET
PK
H
RQ
SK
F
R
E
CJ
Τ
Τ
IS
THE
BINARY
REPRESENTATION
OF
E
CJ
PARSE
EKIJ
ΓIJ
ΓIJ
BLOG
QC
AND
LET
BLOG
QC
E
CJ
X
E
CJ
Τ
ΓIJ
Τ
Τ
AT
THE
END
OF
THE
ITERATION
LET
CMULT
E
CR
FIRST
IT
ENSURES
THAT
TO
DECRYPT
A
CIPHERTEXT
C
WE
ONLY
NEED
TO
MULTIPLY
IT
BY
ONE
COPY
OF
EACH
SECRET
KEY
MAKING
DECRYPTION
INDEPENDENT
OF
THE
CIRCUIT
USED
TO
PRODUCE
C
SECOND
IT
ENSURES
THAT
THE
SIZE
OF
THE
JOINT
SECRET
KEY
NEEDED
TO
DECRYPT
DEPENDS
ONLY
ON
THE
NUMBER
OF
KEYS
N
AND
NOT
ON
THE
CIRCUIT
C
THAT
WAS
EVALUATED
X
IN
EITHER
CASE
OUTPUT
CMULT
AS
AN
ENCRYPTION
OF
THE
PRODUCT
OF
THE
UNDERLYING
MESSAGES
AND
OUTPUT
THE
SET
KMULT
AS
ITS
CORRESPONDING
PUBLIC
KEY
SET
WE
FIRST
SHOW
THAT
THE
SCHEME
WORKS
CORRECTLY
AS
ADVERTISED
LEMMA
IF
Q
FOR
AND
Χ
IS
A
BBOUNDED
DISTRIBUTION
FOR
B
POLY
N
THEN
THE
MODIFIED
NTRU
ENCRYPTION
SCHEME
DESCRIBED
ABOVE
IS
MULTIKEY
HOMOMORPHIC
FOR
N
O
NΔ
KEYS
AND
CIRCUITS
OF
DEPTH
D
Δ
LOG
N
LOG
LOG
N
O
ENC
PK
M
SAMPLE
E
Χ
OUTPUT
THE
CIPHERTEXT
C
HS
M
RQ
PROOF
THE
MAIN
STEP
IN
THE
PROOF
OF
CORRECTNESS
IS
TO
SHOW
THAT
A
HOMOMORPHIC
OPERATION
INCREASES
THE
ERROR
FROM
Η
TO
AT
MOST
Η
B
POLY
N
O
N
PUTTING
THIS
TOGETHER
WITH
THE
FACT
THAT
SUCCESSFUL
DECRYPTION
REQUIRES
THE
ERROR
TO
BE
SMALLER
THAN
Q
GIVES
US
THE
STATEMENT
OF
THE
LEMMA
WE
FIRST
COMPUTE
HOW
MUCH
THE
ERROR
IN
A
CIPHERTEXT
GROWS
WITH
A
HOMOMORPHIC
MULTIPLICATION
LET
C
AND
BE
CIPHERTEXTS
THAT
DECRYPT
TO
M
AND
UNDER
TWO
SETS
OF
SECRET
DEC
SKN
C
PARSE
SKI
FI
FOR
I
N
LET
Μ
FN
C
RQ
OUTPUT
Μ
MOD
THAT
IS
WE
ASSUME
EACH
SET
CONTAINS
DISTINCT
PUBLIC
KEYS
BUT
THE
INTERSECTION
OF
ANY
TWO
SETS
MIGHT
NOT
BE
EMPTY
FOR
ALL
Τ
BLOG
QC
SAMPLE
SΤ
EΤ
Χ
AND
COMPUTE
ΓΤ
HSΤ
F
RQ
SET
EK
ΓBLOG
QC
RQDLOG
QE
KEYS
K
AND
Q
K
RESPECTIVELY
Q
LET
FK
RESP
FK
DENOTE
THE
PRODUCT
I
K
FI
RESP
I
K
FI
THEN
WE
HAVE
HAS
NORM
AT
MOST
NB
BY
COROLLARY
THUS
THE
ERROR
IS
AT
MOST
ERRORJ
N
NB
BLOG
QC
B
ERRORJ
FK
C
M
LOG
Q
NB
ΗΗ
J
LOG
Q
NB
FK
ΗΗ
J
LOG
Q
NB
WHERE
M
Η
AND
Η
LETTING
CMULT
WE
HAVE
FK
FK
CMULT
M
THUS
THE
ERROR
IN
THE
CIPHERTEXT
CMULT
IS
AT
MOST
ΗΗ
AND
IT
DECRYPTS
TO
THE
PRODUCT
OF
THE
TWO
MESSAGES
AS
LONG
AS
THE
ERROR
IS
NOT
TOO
LARGE
WE
NOW
MOVE
TO
ANALYZING
THE
ADDITIONAL
ERROR
INTRODUCED
BY
RELINEARIZATION
LET
K
K
IR
THEN
THE
JOINT
DECRYPTION
KEY
FK
FK
CONTAINS
THE
TERM
THE
GOAL
OF
RELINEARIZATION
IS
TO
CONVERT
CMULT
INTO
A
CIPHERTEXT
THAT
DECRYPTS
TO
THE
SAME
MESSAGE
UNDER
THE
SECRET
KEY
Y
FK
FK
FJ
J
K
K
WHICH
REPLACES
THE
TERM
WITH
THE
TERM
FIR
LET
FK
FK
AND
LET
FJ
FJ
FIJ
FOR
J
R
THUS
FR
IS
A
SIMPLE
PRODUCT
OF
THE
SECRET
KEYS
FI
WITHOUT
ANY
QUADRATIC
TERMS
WE
SHOW
THAT
THE
CIPHERTEXT
E
CJ
DECRYPTS
TO
THE
MESSAGE
AND
HAS
ERROR
AT
MOST
ΗΗ
J
LOG
Q
NB
THE
BASE
CASE
I
E
J
FOLLOWS
FROM
EQUATION
SINCE
E
CMULT
IN
GENERAL
WE
HAVE
FJ
E
CJ
FIJ
FJ
FIJ
FIJ
E
CJ
FJ
FIJ
FIJ
E
CJ
BLOG
XQC
FJ
FIJ
E
CJ
Τ
FIJ
ΓIJ
Τ
Τ
NOW
FIJ
ΓIJ
Τ
GIJ
SIJ
Τ
FIJ
EIJ
Τ
WHERE
EΤ
SUBSTITUTING
BACK
INTO
EQUATION
WE
GET
FJ
E
CJ
FJ
FIJ
BLOG
XQC
THUS
THE
FINAL
ERROR
AFTER
A
MULTIPLICATION
AND
RELINEARIZATION
IS
AT
MOST
ΗΗ
LOG
Q
NB
ΗΗ
B
N
O
N
AS
CLAIMED
FOR
THE
SETTING
OF
Q
FOR
A
CIRCUIT
OF
DEPTH
D
AND
AN
INITIAL
ERROR
THE
ERROR
GROWS
TO
AT
MOST
D
B
N
AFTER
HOMOMORPHIC
EVALUATION
THIS
RESULTS
IN
CORRECT
DECRYPTION
AS
LONG
AS
D
LOG
LOG
Q
LOG
LOG
N
LOG
N
O
IN
PARTICULAR
FOR
N
O
NΔ
KEYS
AND
Q
WE
GET
D
Δ
LOG
N
LOG
LOG
N
O
THE
MAIN
DIFFERENCE
BETWEEN
THE
SCHEME
IN
SECTION
AND
THE
ONE
IN
THIS
SECTION
IN
TERMS
OF
SECURITY
IS
IN
THE
EVALUATION
KEY
EK
THE
EVALUATION
KEY
CONTAINS
THE
ELEMENTS
ΓΤ
HSΤ
F
WHICH
CAN
BE
THOUGHT
OF
AS
PSEUDO
ENCRYPTIONS
OF
MULTIPLES
OF
THE
SECRET
KEY
F
UNDER
THE
CORRESPONDING
PUBLIC
KEY
H
WE
POINT
OUT
THAT
THESE
ARE
NOT
TRUE
ENCRYPTIONS
OF
THE
MESSAGE
F
SINCE
F
IS
NOT
A
BINARY
POLYNOMIAL
WHEREAS
OUR
SCHEME
IS
ONLY
EQUIPPED
TO
CORRECTLY
ENCRYPT
POLYNOMIALS
M
X
HΦ
X
I
THE
SECURITY
OF
THE
SCHEME
THEN
RELIES
ON
A
CIRCULAR
SECURITY
ASSUMPTION
WHICH
STATES
THAT
SEMANTIC
SECURITY
OF
THE
SCHEME
IS
MAINTAINED
GIVEN
THE
EVALUATION
KEY
AS
CONSTRUCTED
ABOVE
WE
REMARK
THAT
THIS
ASSUMPTION
CAN
BE
AVOIDED
AT
THE
COST
OF
OBTAINING
A
LEVELED
HOMOMORPHIC
ENCRYPTION
SCHEME
WHERE
THE
SIZE
OF
THE
EVALUATION
KEY
GROWS
WITH
THE
DEPTH
OF
THE
CIRCUITS
THAT
THE
SCHEME
SUPPORTS
IN
SECTION
WE
SHOW
HOW
TO
CONVERT
THIS
SOMEWHAT
HOMOMORPHIC
SCHEME
INTO
A
MULTI
KEY
FULLY
HOMOMORPHIC
ONE
IN
THE
SAME
SECTION
WE
ALSO
DISCUSS
ANY
ADDITIONAL
ASSUMPTIONS
WE
NEED
TO
MAKE
TO
MAINTAIN
SECURITY
O
N
E
CJ
Τ
FIJ
ΓIJ
Τ
FROM
SOMEWHAT
TO
FULLY
HOMOMORPHIC
ENCRYPTION
Τ
BLOG
QC
FJ
FI
J
X
WE
USE
GENTRY
BOOTSTRAPPING
THEOREM
TO
CONVERT
A
MULTIKEY
SOMEWHAT
HOMOMORPHIC
SCHEME
INTO
A
MULTIKEY
FULLY
HOMOMORPHIC
ONE
UNFORTUNATELY
AS
WE
WILL
SEE
WE
CANNOT
APPLY
THE
BOOTSTRAPPING
THEOREM
DIRECTLY
TO
THE
SOMEWHAT
HOMOMORPHIC
ENCRYPTION
SCHEME
FROM
SECTION
WE
THEREFORE
TURN
TO
MODULUS
REDUCTION
A
TECHNIQUE
INTRODUCED
BY
TO
CONVERT
OUR
SOMEWHAT
HOMOMORPHIC
SCHEME
INTO
A
BOOTSTRAPPABLE
SCHEME
WE
FIRST
DESCRIBE
THE
BOOTSTRAPPING
THEOREM
AND
THEN
PRESENT
THE
MODULUS
REDUCTION
TECHNIQUE
AND
HOW
WE
CAN
APPLY
IT
IN
OUR
CASE
E
CJ
Τ
EΤ
Τ
BLOG
QC
FJ
X
E
CJ
Τ
Τ
BLOG
QC
X
FJ
FI
E
C
E
J
Τ
Τ
J
Τ
FJ
E
CJ
SINCE
FJ
E
CJ
IS
EXACTLY
PLUS
AN
EVEN
ERROR
BY
THE
INDUCTIVE
ASSUMPTION
THIS
SHOWS
THAT
E
CJ
DECRYPTS
TO
AS
WELL
UNDER
THE
SECRET
KEY
FJ
IT
REMAINS
TO
COMPUTE
THE
ERROR
IN
THE
CIPHERTEXT
E
CJ
SINCE
FJ
FI
IS
A
PRODUCT
OF
AT
MOST
SMALL
POLYNOMIALS
IT
J
BOOTSTRAPPING
WE
REMIND
THE
READER
OF
THE
DEFINITION
OF
A
BOOTSTRAPPABLE
ENCRYPTION
SCHEME
AND
PRESENT
GENTRY
BOOTSTRAPPING
THEOREM
THAT
STATES
THAT
A
BOOTSTRAPPABLE
SCHEME
CAN
BE
CONVERTED
INTO
A
FULLY
HOMOMORPHIC
ONE
WE
MODIFY
THE
THEOREM
AND
THE
CORRESPONDING
DEFINITIONS
FROM
THEIR
ORIGINAL
PRESENTATION
TO
GENERALIZE
IT
TO
THE
MULTIKEY
SETTING
TAKING
N
YIELDS
THE
THEOREM
AND
THE
DEFINITIONS
FROM
DEFINITION
BOOTSTRAPPABLE
SCHEME
LET
E
E
N
KEYGEN
ENC
DEC
EVAL
N
BE
A
FAMILY
OF
MULTIKEY
C
HOMOMORPHIC
ENCRYPTION
SCHEMES
AND
LET
FADD
AND
FMULT
BE
THE
THE
AUGMENTED
DECRYPTION
FUNCTIONS
OF
THE
SCHEME
DEFINED
AS
FADD
SKN
DEC
SKN
XOR
DEC
SKN
FMULT
SKN
DEC
SKN
AND
DEC
SKN
THEN
E
IS
BOOTSTRAPPABLE
IF
FADD
FMULT
C
NAMELY
THE
SCHEME
CAN
HOMOMORPHICALLY
EVALUATE
FADD
AND
FMULT
MODULUS
REDUCTION
IS
A
NOISE
MANAGEMENT
TECHNIQUE
THAT
PROVIDES
AN
EXPONENTIAL
GAIN
ON
THE
DEPTH
OF
THE
CIRCUITS
THAT
CAN
BE
EVALUATED
WHILE
KEEPING
THE
DEPTH
OF
THE
DECRYPTION
CIRCUIT
UNCHANGED
INFORMALLY
IF
DDEC
IS
THE
DEPTH
OF
THE
DECRYPTION
CIRCUIT
OF
THE
MULTIKEY
SCHEME
DESCRIBED
IN
SECTION
THEN
WE
MODIFY
THE
SCHEME
SO
THAT
ITS
DECRYPTION
CIRCUIT
IS
UNCHANGED
BUT
THE
SCHEME
CAN
NOW
EVALUATE
CIRCUITS
OF
DEPTH
DDEC
HENCE
THE
NEW
SCHEME
CAN
EVALUATE
ITS
OWN
DECRYPTION
CIRCUIT
MAKING
IT
BOOTSTRAPPABLE
DETAILS
FOLLOW
WE
LET
Q
DENOTE
THE
CORRESPONDING
ELEMENT
IN
RQ
IE
REDUCING
MODULO
Φ
X
AND
Q
AS
IN
THEN
IF
H
F
IS
A
KEY
PAIR
AND
C
IS
A
CIPHERTEXT
UNDER
PUBLIC
KEY
H
F
C
Q
CORRESPONDS
TO
THE
NOISE
IN
C
RECALL
THAT
FOR
DECRYPTION
TO
BE
SUCCESSFUL
WE
NEED
F
C
Q
TO
BE
EQUAL
TO
F
C
OVER
THE
INTEGERS
HOWEVER
EACH
HOMOMORPHIC
OPERATION
INCREASES
THIS
NOISE
MODULUS
REDUCTION
ALLOWS
US
TO
KEEP
THE
NOISE
MAGNITUDE
SMALL
BY
SIMPLY
SCALING
THE
CIPHERTEXT
AFTER
EACH
OPERATION
THE
KEY
IDEA
IS
TO
EXPLOIT
THE
DIFFERENCE
IN
HOW
THE
NOISE
AFFECTS
SECURITY
AND
HOMOMORPHISMS
WE
FIRST
DEFINE
THE
NOTION
OF
WEAK
CIRCULAR
SECURITY
AND
THEN
DESCRIBE
OUR
GENERALIZATION
OF
GENTRY
BOOTSTRAPPING
THEOREM
DEFINITION
WEAK
CIRCULAR
SECURITY
A
PUBLIC
KEY
ENCRYPTION
SCHEME
GEN
ENC
DEC
IS
WEAKLY
CIRCULAR
SECURE
IF
IT
IS
IND
CPA
SECURE
EVEN
FOR
AN
ADVERSARY
WITH
AUXILIARY
INFORMATION
CONTAINING
ENCRYPTIONS
OF
ALL
SECRET
KEY
BITS
ENC
PK
SK
I
I
NAMELY
NO
POLYNOMIAL
TIME
ADVERSARY
CAN
DISTINGUISH
AN
ENCRYPTION
OF
FROM
AN
ENCRYPTION
OF
EVEN
GIVEN
THE
ADDITIONAL
INFORMATION
WE
NOW
STATE
A
GENERALIZATION
OF
GENTRY
BOOTSTRAPPING
THEOREM
TO
THE
MULTI
KEY
SETTING
THEOREM
MULTIKEY
BOOTSTRAPPING
THEOREM
LET
E
BE
A
BOOTSTRAPPABLE
FAMILY
OF
MULTIKEY
HOMOMORPHIC
SCHEMES
THAT
IS
ALSO
WEAKLY
CIRCULAR
SECURE
THEN
THERE
IS
A
MULTIKEY
FULLY
HOMOMORPHIC
FAMILY
E
OF
ENCRYPTION
SCHEMES
THE
IDEA
BEHIND
MULTI
KEY
BOOTSTRAPPING
IS
THAT
GIVEN
A
PUBLIC
EVALUATION
KEY
THAT
CONSISTS
OF
ENCRYPTIONS
OF
ALL
BITS
OF
ALL
SECRET
KEYS
ΑJ
I
ENC
PKJ
SKJ
I
WE
CAN
EVALUATE
CIRCUITS
OF
ANY
DEPTH
BY
PERIODICALLY
REFRESHING
THE
EVALUATED
CIPHERTEXT
C
SIMPLY
EVALUATE
THE
DECRYPTION
CIRCUIT
DEC
SKN
C
HOMOMORPHICALLY
USING
THE
EVALUATION
KEY
ΑJ
I
ENC
PKJ
SKJ
I
THE
RESULT
IS
A
CIPHERTEXT
C
THAT
ENCRYPTS
THE
SAME
PLAINTEXT
AS
C
AND
CAN
AGAIN
BE
DECRYPTED
USING
SKN
BUT
HAS
MUCH
SMALLER
NOISE
THUS
AFTER
THIS
REFRESHING
STEP
WE
CAN
CONTINUE
EVALUATING
HOMOMORPHICALLY
FOR
A
FEW
MORE
LEVELS
BEFORE
THE
NOISE
GROWS
AGAIN
AND
WE
NEED
TO
APPLY
THE
REFRESHING
PROCEDURE
ONCE
MORE
UNFORTUNATELY
THE
SOMEWHAT
HOMOMORPHIC
SCHEME
THAT
WE
DESCRIBED
IN
SECTION
IS
NOT
BOOTSTRAPPABLE
RECALL
THAT
WE
CAN
ONLY
EVALUATE
CIRCUITS
OF
DEPTH
LESS
THAN
LOG
N
WHERE
HOWEVER
THE
SHALLOWEST
IMPLEMENTATION
OF
THE
DECRYPTION
CIRCUIT
WE
ARE
AWARE
OF
HAS
DEPTH
C
LOG
N
LOG
N
FOR
SOME
CONSTANT
C
WE
THEREFORE
TURN
TO
MODULUS
REDUCTION
WHICH
WILL
ALLOW
US
TO
CONVERT
OUR
SOMEWHAT
HOMOMORPHIC
ENCRYPTION
SCHEME
INTO
A
BOOTSTRAPPABLE
SCHEME
MODULUS
REDUCTION
THE
GROWTH
OF
NOISE
UPON
HOMOMORPHIC
MULTIPLICATION
IS
GOVERNED
BY
THE
MAGNITUDE
OF
THE
NOISE
SECURITY
IS
GOVERNED
BY
THE
RATIO
BETWEEN
THE
MAGNITUDE
OF
THE
NOISE
AND
THE
MODULUS
Q
THIS
SUGGESTS
A
METHOD
OF
REDUCING
THE
MAGNITUDE
OF
THE
NOISE
AND
THE
MODULUS
BY
ROUGHLY
THE
SAME
FACTOR
THUS
PRESERVING
SECURITY
WHILE
AT
THE
SAME
TIME
MAKING
HOMOMORPHIC
MULTIPLICATIONS
EASIER
IN
PARTICULAR
MODULUS
REDUCTION
GIVES
US
A
WAY
TO
TRANSFORM
A
CIPHERTEXT
C
RQ
INTO
A
DIFFERENT
CIPHERTEXT
RP
WHERE
P
IS
SMALLER
THAN
Q
WHILE
PRESERVING
CORRECTNESS
FOR
Q
JOINT
SECRET
KEY
F
N
I
FI
F
C
P
F
Q
MOD
THE
TRANSFORMATION
FROM
C
TO
INVOLVES
SIMPLY
SCALING
BY
P
Q
AND
ROUNDING
APPROPRIATELY
LEMMA
LET
P
AND
Q
BE
TWO
ODD
MODULI
AND
LET
C
RQ
DEFINE
TO
BE
THE
POLYNOMIAL
IN
RP
CLOSEST
TO
P
Q
C
SUCH
THAT
C
MOD
THEN
FOR
ANY
F
WITH
K
F
C
Q
K
Q
Q
P
KF
WE
HAVE
F
P
F
C
Q
MOD
AND
F
P
P
Q
K
F
C
Q
K
KF
K
WHERE
KF
K
AND
KF
ARE
THE
AND
NORMS
OF
F
RESPECTIVELY
THE
BEAUTY
OF
LEMMA
IS
THAT
IF
WE
KNOW
THE
DEPTH
D
OF
THE
CIRCUIT
WE
WANT
TO
EVALUATE
IN
OUR
CASE
D
DDEC
THE
DEPTH
OF
THE
AUGMENTED
DECRYPTION
CIRCUIT
THEN
WE
CAN
CONSTRUCT
A
LADDER
OF
DECREASING
MODULI
QD
AND
PERFORM
MODULUS
REDUCTION
AFTER
EACH
OPERATION
SO
THAT
AT
LEVEL
I
ALL
CIPHERTEXTS
RESIDE
IN
RQI
AND
THE
MAGNITUDE
OF
THE
NOISE
AT
EACH
LEVEL
IS
SMALL
IN
PARTICULAR
THIS
IS
TRUE
AT
LEVEL
D
SO
THAT
ONCE
THE
EVALUATION
IS
COMPLETE
IT
IS
POSSIBLE
TO
DECRYPT
THE
RESULTING
CIPHERTEXT
WITHOUT
DECRYPTION
ERRORS
BOOTSTRAPPABLE
SCHEME
WE
CHANGE
THE
SCHEME
SO
THAT
IT
USES
MODULUS
REDUCTION
DURING
THE
EVALUATION
KEYGEN
WILL
NOW
SAMPLE
A
LADDER
OF
DECREASING
MODULI
QDDEC
WE
WILL
CHOOSE
THE
DISTRIBUTION
Χ
IN
ORDER
TO
GUARANTEE
THAT
ANY
SAMPLE
IS
B
BOUNDED
WHERE
B
QDDEC
THE
MODIFIED
SCHEME
IS
AS
BELOW
KEYGEN
FOR
EVERY
I
DDEC
SAMPLE
G
I
U
I
Χ
AND
SET
F
I
I
SO
THAT
F
I
MOD
IF
F
I
IS
NOT
INVERTIBLE
IN
RQI
RESAMPLE
U
I
LET
H
I
I
F
I
RQI
AND
SET
PK
GIVEN
TWO
CIPHERTEXTS
RQI
WITH
CORRESPONDING
PUBLIC
KEY
SETS
COMPUTE
CIPHERTEXT
E
RQI
AND
LET
PKJR
FOR
R
AND
Τ
BLOG
QI
C
DEFINE
E
C
Τ
SO
THAT
BLOG
QI
C
SK
F
DDEC
RQDDEC
FINALLY
REDUCE
THE
MODULUS
LET
CADD
BE
THE
INTEGER
VECTOR
CLOSEST
TO
QI
QI
E
CR
SUCH
THAT
CADD
E
CR
MOD
OUTPUT
CADD
RQI
AS
AN
ENCRYPTION
OF
THE
SUM
OF
THE
UNDERLYING
MESSAGES
OUTPUT
THE
SET
KADD
AS
ITS
CORRESPONDING
PUBLIC
KEY
SET
E
C
FOR
ALL
I
DDEC
AND
Τ
BLOG
QI
C
SAMPLE
I
I
SΤ
EΤ
Χ
AND
COMPUTE
X
E
C
Τ
Τ
IS
THE
BINARY
REPRESENTATION
OF
E
C
PARSE
I
I
EKJ
ΓJ
Τ
ΖJ
Τ
I
DDEC
Τ
BLOG
QI
C
I
Τ
I
ΓΤ
I
H
I
I
RQI
Τ
F
IF
PKJ
LET
I
Τ
I
RQI
ΖΤ
I
H
I
I
Τ
F
BLOG
QI
C
SET
EK
X
E
C
ΓΤ
I
ΖΤ
I
I
DDEC
Τ
BLOG
QI
C
I
E
C
ΖJ
Τ
RQ
I
Τ
OTHERWISE
LET
ENC
PK
M
SAMPLE
E
Χ
OUTPUT
THE
CIPHERTEXT
C
HS
M
DEC
SKN
C
ASSUME
W
L
O
G
THAT
C
RQDDEC
PARSE
SKI
FI
FOR
I
N
LET
Μ
FN
C
RQDDEC
OUTPUT
Μ
MOD
EVAL
C
CT
PKT
EKT
WE
SHOW
HOW
TO
EVALUATE
A
T
INPUT
CIRCUIT
C
WE
ASSUME
W
L
O
G
THAT
THE
CIRCUIT
C
IS
LEVELED
IN
THAT
IT
IS
COMPOSED
OF
ALTERNATING
XOR
AND
AND
LEVELS
WE
SHOW
HOW
TO
HOMOMORPHICALLY
ADD
AND
MULTIPLY
TWO
ELEMENTS
IN
GIVEN
TWO
CIPHERTEXTS
WE
ASSUME
THAT
WE
ALSO
HAVE
A
SET
OF
DISTINCT
PUBLIC
KEYS
ASSOCIATED
WITH
EACH
CIPHERTEXT
WE
WILL
DENOTE
THESE
LISTS
BY
RESPECTIVELY
THE
PUBLIC
KEY
SET
OF
A
FRESH
ENCRYPTION
IS
SIMPLY
THE
SET
PK
CONTAINING
THE
PUBLIC
KEY
UNDER
WHICH
IT
WAS
ENCRYPTED
GIVEN
TWO
CIPHERTEXTS
RQI
WITH
CORRESPONDING
PUBLIC
KEY
SETS
COMPUTE
C
RQI
AND
LET
PKJR
FOR
R
AND
Τ
BLOG
QI
C
DEFINE
E
C
Τ
SO
THAT
BLOG
QI
C
X
E
C
I
E
C
ΓJ
Τ
RQI
Τ
FINALLY
REDUCE
THE
MODULUS
LET
CMULT
BE
THE
INTEGER
VECTOR
CLOSEST
TO
QI
QI
E
CR
SUCH
THAT
CMULT
E
CR
MOD
OUTPUT
CMULT
RQI
AS
AN
ENCRYPTION
OF
THE
PRODUCT
OF
THE
UNDERLYING
MESSAGES
AND
OUTPUT
THE
SET
KMULT
AS
ITS
CORRESPONDING
PUBLIC
KEY
SET
WE
CAN
NOW
SHOW
THE
FOLLOWING
LEMMA
WHOSE
PROOF
IS
DEFERRED
TO
THE
FULL
VERSION
LEMMA
IF
Q
FOR
AND
Χ
IS
A
BBOUNDED
DISTRIBUTION
FOR
B
POLY
N
THEN
THE
MODIFIED
NTRU
ENCRYPTION
SCHEME
DESCRIBED
ABOVE
IS
MULTIKEY
HOMOMORPHIC
FOR
N
KEYS
AND
CIRCUITS
OF
DEPTH
D
AS
LONG
AS
N
D
O
N
LOG
N
MULTIKEY
FULLY
HOMOMORPHIC
ENCRYPTION
TO
TURN
THIS
INTO
A
FULLY
HOMOMORPHIC
ENCRYPTION
SCHEME
WE
USE
THE
MULTI
KEY
BOOTSTRAPPING
THEOREM
THEOREM
BUT
FIRST
WE
SHOW
AN
UPPER
BOUND
ON
THE
DEPTH
OF
THE
DECRYPTION
CIRCUIT
BLOG
QI
C
E
C
X
E
C
Τ
LEMMA
THE
DECRYPTION
CIRCUIT
FOR
THE
SCHEME
ABOVE
FOR
N
KEYS
CAN
BE
IMPLEMENTED
AS
A
POLYNOMIAL
SIZE
ARITHMETIC
CIRCUIT
OVER
GF
OF
DEPTH
O
LOG
N
LOG
LOG
Q
LOG
N
Τ
IS
THE
BINARY
REPRESENTATION
OF
E
C
PARSE
I
PROOF
THE
DECRYPTION
CIRCUIT
FOR
A
CIPHERTEXT
ENCRYPTED
UNDER
N
KEYS
CAN
BE
WRITTEN
AS
I
EKJ
ΓJ
Τ
ΖJ
Τ
I
DDEC
Τ
BLOG
QI
C
LET
FN
C
C
BLOG
QI
C
E
C
X
I
E
C
ΓJ
Τ
RQI
N
Y
FI
I
Τ
THAT
IS
WE
ASSUME
EACH
SET
CONTAINS
DISTINCT
PUBLIC
KEYS
BUT
THE
INTERSECTION
OF
ANY
TWO
SETS
MIGHT
NOT
BE
EMPTY
MULTIPLYING
TWO
POLYNOMIALS
OVER
RQ
CAN
BE
DONE
USING
A
POLYNOMIAL
SIZE
BOOLEAN
CIRCUIT
OF
DEPTH
O
LOG
LOG
Q
LOG
N
SEE
E
G
LEMMA
FOR
A
PROOF
USING
A
BINARY
TREE
OF
POLYNOMIAL
MULTIPLICATIONS
THE
DECRYPTION
OPERATION
ABOVE
CAN
THEN
BE
DONE
IN
DEPTH
O
LOG
N
LOG
LOG
Q
LOG
N
AS
CLAIMED
THIS
MEANS
THAT
THE
MODIFIED
SCHEME
IS
BOOTSTRAPPABLE
AND
THEREFORE
APPLYING
THE
BOOTSTRAPPING
THEOREM
GIVES
US
THEOREM
FOR
EVERY
N
N
LET
B
POLY
N
Χ
TO
BE
A
B
BOUNDED
DISTRIBUTION
AND
Q
N
LOG
N
LOG
N
THEN
THERE
EXISTS
A
MULTIKEY
FULLY
HOMOMORPHIC
ENCRYPTION
SCHEME
FOR
N
KEYS
SECURE
UNDER
THE
DSPRΦ
Q
Χ
AND
RLWEΦ
Q
Χ
ASSUMPTIONS
PROOF
TO
APPLY
THEOREM
WE
REQUIRE
THAT
THE
DEPTH
OF
THE
DECRYPTION
CIRCUIT
IS
SMALLER
THAN
THE
DEPTH
OF
THE
CIRCUITS
THAT
THE
SCHEME
CAN
EVALUATE
THAT
IS
LOG
N
LOG
LOG
Q
LOG
N
C
LOG
Q
N
LOG
N
FOR
SOME
UNIVERSAL
CONSTANT
C
WHICH
HOLDS
FOR
THE
PARAMETER
SETTINGS
IN
THE
STATEMENT
OF
THE
THEOREM
IN
PARTICULAR
THIS
SCHEME
MAINTAINS
SECURITY
AS
LONG
AS
Q
Δ
FOR
SOME
Δ
THUS
SUPPORTING
AS
MANY
AS
N
Δ
N
LOGO
N
USERS
FINALLY
WE
REMARK
THAT
BOOTSTRAPPING
AND
THEREFORE
ASSUMING
WEAK
CIRCULAR
SECURITY
CAN
BE
AVOIDED
AT
THE
COST
OF
OBTAINING
A
LEVELED
HOMOMORPHIC
ENCRYPTION
SCHEME
WHERE
THE
SIZE
OF
THE
EVALUATION
KEY
GROWS
WITH
THE
DEPTH
OF
THE
CIRCUITS
THAT
THE
SCHEME
SUPPORTS
ABSTRACT
WE
DEVELOP
AN
AUTOMATED
APPROACH
FOR
DESIGNING
MATRIX
MULTIPLICATION
ALGORITHMS
BASED
ON
CONSTRUCTIONS
SIMILAR
TO
THE
COPPERSMITH
WINOGRAD
CONSTRUCTION
USING
THIS
APPROACH
WE
OBTAIN
A
NEW
IMPROVED
BOUND
ON
THE
MATRIX
MULTIPLICATION
EXPONENT
Ω
CATEGORIES
AND
SUBJECT
DESCRIPTORS
F
ANALYSIS
OF
ALGORITHMS
AND
PROBLEM
COMPLEXITY
NONNUMERICAL
ALGORITHMS
AND
PROBLEMS
GENERAL
TERMS
ALGORITHMS
THEORY
KEYWORDS
MATRIX
MULTIPLICATION
INTRODUCTION
THE
PRODUCT
OF
TWO
MATRICES
IS
ONE
OF
THE
MOST
BASIC
OPERATIONS
IN
MATHEMATICS
AND
COMPUTER
SCIENCE
MANY
OTHER
ESSENTIAL
MATRIX
OPERATIONS
CAN
BE
EFFICIENTLY
REDUCED
TO
IT
SUCH
AS
GAUSSIAN
ELIMINATION
LUP
DECOMPOSITION
THE
DETERMINANT
OR
THE
INVERSE
OF
A
MATRIX
MATRIX
MULTIPLICATION
IS
ALSO
USED
AS
A
SUBROUTINE
IN
MANY
COMPUTATIONAL
PROBLEMS
THAT
ON
THE
FACE
OF
IT
HAVE
NOTHING
TO
DO
WITH
MATRICES
AS
A
SMALL
SAMPLE
ILLUSTRATING
THE
VARIETY
OF
APPLICATIONS
THERE
ARE
FASTER
ALGORITHMS
RELYING
ON
MATRIX
MULTIPLICATION
FOR
GRAPH
TRANSITIVE
CLOSURE
SEE
E
G
CONTEXT
FREE
GRAMMAR
PARSING
AND
EVEN
LEARNING
JUNTAS
UNTIL
THE
LATE
IT
WAS
BELIEVED
THAT
COMPUTING
THE
PRODUCT
C
OF
TWO
N
N
MATRICES
REQUIRES
ESSENTIALLY
A
CUBIC
NUMBER
OF
OPERATIONS
AS
THE
FASTEST
ALGORITHM
KNOWN
WAS
THE
NAIVE
ALGORITHM
WHICH
INDEED
RUNS
IN
O
TIME
IN
STRASSEN
EXCITED
THE
RESEARCH
COMMUNITY
BY
GIVING
THE
FIRST
SUBCUBIC
TIME
ALGORITHM
FOR
MATRIX
MULTIPLICATION
RUNNING
IN
O
TIME
THIS
AMAZING
DISCOVERY
SPAWNED
A
LONG
LINE
OF
RESEARCH
WHICH
GRADUALLY
REDUCED
THE
MATRIX
MULTIPLICATION
EXPONENT
Ω
OVER
TIME
IN
PAN
SHOWED
Ω
THE
FOLLOWING
YEAR
BINI
ET
AL
INTRODUCED
THE
NOTION
OF
BORDER
RANK
AND
OBTAINED
Ω
SCHO
NHAGE
GENERALIZED
THIS
NOTION
IN
PROVED
HIS
Τ
THEOREM
ALSO
CALLED
THE
ASYMPTOTIC
SUM
INEQUALITY
AND
SHOWED
THAT
Ω
IN
THE
SAME
PAPER
COMBINING
HIS
WORK
WITH
IDEAS
BY
PAN
HE
ALSO
SHOWED
Ω
THE
FOLLOWING
YEAR
ROMANI
FOUND
THAT
Ω
THE
FIRST
RESULT
TO
BREAK
WAS
BY
COPPERSMITH
AND
WINOGRAD
WHO
OBTAINED
Ω
IN
STRASSEN
INTRODUCED
HIS
LASER
METHOD
WHICH
ALLOWED
FOR
AN
ENTIRELY
NEW
ATTACK
ON
THE
MATRIX
MULTIPLICATION
PROBLEM
HE
ALSO
DECREASED
THE
BOUND
TO
Ω
THREE
YEARS
LATER
COPPERSMITH
AND
WINOGRAD
COMBINED
STRASSEN
TECHNIQUE
WITH
A
NOVEL
FORM
OF
ANALYSIS
BASED
ON
LARGE
SETS
AVOIDING
ARITHMETIC
PROGRESSIONS
AND
OBTAINED
THE
FAMOUS
BOUND
OF
Ω
WHICH
HAS
REMAINED
UNCHANGED
FOR
MORE
THAN
TWENTY
YEARS
IN
COHN
AND
UMANS
INTRODUCED
A
NEW
GROUPTHEORETIC
FRAMEWORK
FOR
DESIGNING
AND
ANALYZING
MATRIX
MULTIPLICATION
ALGORITHMS
IN
TOGETHER
WITH
KLEINBERG
AND
SZEGEDY
THEY
OBTAINED
SEVERAL
NOVEL
MATRIX
MULTIPLICATION
ALGORITHMS
USING
THE
NEW
FRAMEWORK
HOWEVER
THEY
WERE
NOT
ABLE
TO
BEAT
MANY
RESEARCHERS
BELIEVE
THAT
THE
TRUE
VALUE
OF
Ω
IS
IN
FACT
BOTH
COPPERSMITH
AND
WINOGRAD
AND
COHN
ET
AL
PRESENTED
CONJECTURES
WHICH
IF
TRUE
WOULD
IMPLY
Ω
RECENTLY
ALON
SHPILKA
AND
UMANS
SHOWED
THAT
BOTH
THE
COPPERSMITH
WINOGRAD
CONJECTURE
AND
ONE
OF
THE
COHN
ET
AL
CONJECTURES
CONTRADICT
A
VARIANT
OF
THE
WIDELY
BELIEVED
SUNFLOWER
CONJECTURE
OF
ERDO
AND
RADO
NEVERTHELESS
IT
COULD
BE
THAT
AT
LEAST
THE
REMAINING
COHN
ET
AL
CONJECTURE
COULD
LEAD
TO
A
PROOF
THAT
Ω
THE
COPPERSMITH
WINOGRAD
ALGORITHM
IN
THIS
PAPER
WE
REVISIT
THE
COPPERSMITH
WINOGRAD
CW
APPROACH
WE
GIVE
A
VERY
BRIEF
SUMMARY
OF
THE
APPROACH
HERE
WE
WILL
GIVE
A
MORE
DETAILED
ACCOUNT
IN
LATER
SECTIONS
ONE
FIRST
CONSTRUCTS
AN
ALGORITHM
A
WHICH
GIVEN
Q
LENGTH
VECTORS
X
AND
Y
FOR
CONSTANT
Q
COMPUTES
Q
VALUES
OF
THE
FORM
ZK
I
J
TIJK
XI
YJ
SAY
WITH
TIJK
USING
A
SMALLER
NUMBER
OF
PRODUCTS
THAN
WOULD
NAIVELY
BE
NECESSARY
THE
VALUES
ZK
DO
NOT
NECESSARILY
HAVE
TO
CORRESPOND
TO
ENTRIES
FROM
A
MATRIX
PRODUCT
THEN
ONE
CONSIDERS
THE
ALGORITHM
AN
OBTAINED
BY
APPLYING
A
TO
VECTORS
X
Y
OF
LENGTH
QN
RECURSIVELY
N
TIMES
AS
FOLLOWS
ONE
SPLITS
X
AND
Y
INTO
PERMISSION
TO
MAKE
DIGITAL
OR
HARD
COPIES
OF
ALL
OR
PART
OF
THIS
WORK
FOR
PERSONAL
OR
CLASSROOM
USE
IS
GRANTED
WITHOUT
FEE
PROVIDED
THAT
COPIES
ARE
NOT
MADE
OR
DISTRIBUTED
FOR
PROFIT
OR
COMMERCIAL
ADVANTAGE
AND
THAT
COPIES
BEAR
THIS
NOTICE
AND
THE
FULL
CITATION
ON
THE
FIRST
PAGE
TO
COPY
OTHERWISE
TO
REPUBLISH
TO
POST
ON
SERVERS
OR
TO
REDISTRIBUTE
TO
LISTS
REQUIRES
PRIOR
SPECIFIC
PERMISSION
AND
OR
A
FEE
STOC
MAY
NEW
YORK
NEW
YORK
USA
COPYRIGHT
ACM
Q
SUBVECTORS
OF
LENGTH
QN
THEN
ONE
RUNS
A
ON
X
AND
Y
TREATING
THEM
AS
VECTORS
OF
LENGTH
Q
WITH
ENTRIES
THAT
ARE
VECTORS
OF
LENGTH
QN
WHEN
THE
PRODUCT
OF
TWO
ENTRIES
IS
NEEDED
ONE
USES
AN
TO
COMPUTE
IT
THIS
ALGORITHM
AN
IS
CALLED
THE
NTH
TENSOR
POWER
OF
A
ITS
RUNNING
TIME
IS
ESSENTIALLY
O
RN
IF
R
IS
THE
NUMBER
OF
MULTIPLICATIONS
PERFORMED
BY
A
THE
GOAL
OF
THE
APPROACH
IS
TO
SHOW
THAT
FOR
VERY
LARGE
N
ONE
CAN
SET
ENOUGH
VARIABLES
XI
YJ
ZK
TO
SO
THAT
RUNNING
AN
ON
THE
RESULTING
VECTORS
X
AND
Y
ACTUALLY
COMPUTES
A
MATRIX
PRODUCT
THAT
IS
AS
N
GROWS
SOME
SUBVECTORS
X
OF
X
AND
Y
OF
Y
CAN
BE
THOUGHT
TO
REPRESENT
SQUARE
MATRICES
AND
WHEN
AN
IS
RUN
ON
X
AND
Y
A
SUBVECTOR
OF
Z
IS
ACTUALLY
THE
MATRIX
PRODUCT
OF
X
AND
Y
IF
AN
CAN
BE
USED
TO
MULTIPLY
M
M
MATRICES
IN
O
RN
TIME
THEN
THIS
IMPLIES
THAT
Ω
LOGM
RN
SO
THAT
THE
LARGER
M
IS
THE
BETTER
THE
BOUND
ON
Ω
COPPERSMITH
AND
WINOGRAD
INTRODUCED
TECHNIQUES
WHICH
WHEN
COMBINED
WITH
PREVIOUS
TECHNIQUES
BY
SCHO
NHAGE
AND
STRASSEN
ALLOWED
THEM
TO
EFFECTIVELY
CHOOSE
WHICH
VARIABLES
TO
SET
TO
SO
THAT
ONE
CAN
COMPUTE
VERY
LARGE
MATRIX
PRODUCTS
USING
AN
PART
OF
THEIR
TECHNIQUES
RELY
ON
PARTITIONING
THE
INDEX
TRIPLES
I
J
K
Q
N
INTO
GROUPS
AND
ANALYZING
HOW
SIMILAR
EACH
GROUP
G
COMPUTATION
ZKG
I
J
I
J
K
G
TIJK
XI
YJ
K
IS
TO
A
MATRIX
PRODUCT
THE
SIMILARITY
MEASURE
USED
IS
CALLED
THE
VALUE
OF
THE
GROUP
DEPENDING
ON
THE
UNDERLYING
ALGORITHM
A
THE
PARTITIONING
INTO
GROUPS
VARIES
AND
CAN
AFFECT
THE
FINAL
BOUND
ON
Ω
COPPERSMITH
AND
WINOGRAD
ANALYZED
A
PARTICULAR
ALGORITHM
A
WHICH
RESULTED
IN
Ω
THEN
THEY
NOTICED
THAT
IF
ONE
USES
AS
THE
BASIC
ALGORITHM
THE
BASE
CASE
INSTEAD
ONE
CAN
OBTAIN
THE
BETTER
BOUND
Ω
THEY
LEFT
AS
AN
OPEN
PROBLEM
WHAT
HAPPENS
IF
ONE
USES
AS
THE
BASIC
ALGORITHM
INSTEAD
RITHMS
SATISFYING
THE
REQUIREMENT
WE
HOPE
THAT
SOME
OF
THE
NEW
GROUP
THEORETIC
TECHNIQUES
CAN
HELP
IN
THIS
REGARD
WHY
WASN
T
AN
IMPROVEMENT
ON
CW
FOUND
IN
THE
AFTER
ALL
THE
CW
PAPER
EXPLICITLY
POSED
THE
ANALYSIS
OF
THE
THIRD
TENSOR
POWER
AS
AN
OPEN
PROBLEM
THE
ANSWER
TO
THIS
QUESTION
IS
TWOFOLD
FIRSTLY
SEVERAL
PEOPLE
HAVE
ATTEMPTED
TO
ANALYZE
THE
THIRD
TENSOR
POWER
FROM
PERSONAL
COMMUNICATION
WITH
UMANS
KLEINBERG
AND
COPPERSMITH
AS
THE
AUTHOR
FOUND
OUT
FROM
PERSONAL
EXPERIENCE
ANALYZING
THE
THIRD
TENSOR
POWER
REVEALS
TO
BE
VERY
DISAPPOINTING
IN
FACT
NO
IMPROVEMENT
WHATSOEVER
CAN
BE
FOUND
THIS
FINDING
LED
SOME
TO
BELIEVE
THAT
MAY
BE
THE
FINAL
ANSWER
AT
LEAST
FOR
THE
CW
ALGORITHM
THE
SECOND
ISSUE
IS
THAT
WITH
EACH
NEW
TENSOR
POWER
THE
NUMBER
OF
NEW
VALUES
THAT
NEED
TO
BE
ANALYZED
GROWS
QUADRATICALLY
FOR
THE
EIGHTH
TENSOR
POWER
FOR
INSTANCE
SEPARATE
ANALYSES
ARE
REQUIRED
PRIOR
TO
OUR
WORK
EACH
OF
THESE
ANALYSES
WOULD
REQUIRE
A
SEPARATE
APPLICATION
OF
THE
CW
TECHNIQUES
IT
WOULD
HAVE
REQUIRED
AN
ENORMOUS
AMOUNT
OF
PATIENCE
TO
ANALYZE
LARGER
TENSOR
POWERS
AND
SINCE
THE
THIRD
TENSOR
POWER
DOES
NOT
GIVE
ANY
IMPROVEMENT
THE
PROSPECTS
LOOKED
BLEAK
STOTHERS
WORK
OUR
CONTRIBUTION
WE
GIVE
A
NEW
WAY
TO
MORE
TIGHTLY
ANALYZE
THE
TECHNIQUES
BEHIND
THE
COPPERSMITH
WINOGRAD
CW
APPROACH
WE
DEMONSTRATE
THE
EFFECTIVENESS
OF
OUR
NEW
ANALYSIS
BY
SHOWING
THAT
THE
TENSOR
POWER
OF
THE
CW
ALGORITHM
IN
FACT
GIVES
Ω
IT
IS
LIKELY
THAT
HIGHER
TENSOR
POWERS
CAN
GIVE
TIGHTER
ESTIMATES
AND
THIS
COULD
BE
THE
SUBJECT
OF
FUTURE
WORK
THERE
ARE
TWO
MAIN
THEOREMS
BEHIND
OUR
APPROACH
THE
FIRST
THEOREM
TAKES
ANY
TENSOR
POWER
AN
OF
A
BASIC
ALGORITHM
A
PICKS
A
PARTICULAR
GROUP
PARTITIONING
FOR
AN
AND
DERIVES
AN
EFFICIENT
PROCEDURE
COMPUTING
FORMULAS
FOR
THE
VALUES
OF
THESE
GROUPS
THE
SECOND
THEOREM
ASSUMES
THAT
ONE
KNOWS
THE
VALUES
FOR
AN
AND
DERIVES
AN
EFFICIENT
PROCEDURE
WHICH
OUTPUTS
A
NONLINEAR
CONSTRAINT
PROGRAM
ON
O
VARIABLES
THE
SOLUTION
OF
WHICH
GIVES
A
BOUND
ON
Ω
WE
THEN
APPLY
THE
PROCEDURES
GIVEN
BY
THE
THEOREMS
TO
THE
SECOND
FOURTH
AND
EIGHTH
TENSOR
POWERS
OF
THE
COPPERSMITHWINOGRAD
ALGORITHM
OBTAINING
IMPROVED
BOUNDS
WITH
EACH
NEW
TENSOR
POWER
SIMILAR
TO
OUR
PROOFS
APPLY
TO
ANY
STARTING
ALGORITHM
THAT
SATISFIES
A
SIMPLE
UNIFORMITY
REQUIREMENT
WHICH
WE
FORMALIZE
LATER
THE
UPSHOT
OF
OUR
APPROACH
IS
THAT
NOW
ANY
SUCH
ALGORITHM
AND
ITS
HIGHER
TENSOR
POWERS
CAN
BE
ANALYZED
ENTIRELY
BY
COMPUTER
IN
FACT
OUR
ANALYSIS
OF
THE
TENSOR
POWER
OF
THE
CW
ALGORITHM
IS
DONE
THIS
WAY
THE
BURDEN
IS
NOW
ENTIRELY
OFFLOADED
TO
CONSTRUCTING
BASE
ALGO
WE
WERE
RECENTLY
MADE
AWARE
OF
THE
THESIS
WORK
OF
A
STOTHERS
IN
WHICH
HE
CLAIMS
AN
IMPROVEMENT
TO
Ω
STOTHERS
ARGUES
THAT
Ω
BY
ANALYZING
THE
TENSOR
POWER
OF
THE
COPPERSMITH
WINOGRAD
CONSTRUCTION
BEFORE
LEARNING
OF
STOTHERS
RESULT
WE
WERE
ONLY
ABLE
TO
PROVE
A
BOUND
OF
THE
FORM
Ω
AS
OUR
ANALYSIS
OF
SOME
OF
THE
VALUES
WAS
NOT
TIGHT
AFTER
SEEING
A
SHORTCUT
THAT
STOTHERS
EMPLOYS
IN
HIS
ANALYSIS
OF
THE
VALUES
FOR
THE
TENSOR
POWER
WE
WILL
POINT
OUT
THIS
SHORTCUT
IN
THE
MAIN
TEXT
WE
WERE
ABLE
TO
TIGHTEN
THE
ANALYSIS
OF
THE
VALUES
FULLY
AUTOMATE
OUR
APPROACH
AND
IMPROVE
OUR
BOUND
TO
Ω
THERE
ARE
SEVERAL
DIFFERENCES
BETWEEN
OUR
APPROACH
AND
STOTHERS
THE
FIRST
IS
RELATIVELY
MINOR
THE
CW
APPROACH
REQUIRES
THE
USE
OF
SOME
HASH
FUNCTIONS
OURS
ARE
DIFFERENT
AND
SIMPLER
THAN
STOTHERS
THE
MAIN
DIFFERENCE
IS
THAT
BECAUSE
OF
THE
GENERALITY
OF
OUR
ANALYSIS
WE
DO
NOT
NEED
TO
FULLY
ANALYZE
ALL
GROUPS
OF
EACH
TENSOR
POWER
CONSTRUCTION
INSTEAD
WE
CAN
JUST
APPLY
OUR
FORMULAS
IN
A
MECHANICAL
WAY
STOTHERS
ON
THE
OTHER
HAND
DID
A
COMPLETELY
SEPARATE
ANALYSIS
OF
EACH
GROUP
FINALLY
STOTHERS
APPROACH
ONLY
WORKS
FOR
TENSOR
POWERS
UP
TO
STARTING
WITH
THE
TH
TENSOR
POWER
THE
VALUES
OF
SOME
OF
THE
GROUPS
BEGIN
TO
DEPEND
ON
MORE
VARIABLES
AND
A
MORE
CAREFUL
ANALYSIS
IS
NEEDED
INCIDENTALLY
WE
ALSO
OBTAIN
A
BETTER
BOUND
FROM
THE
TENSOR
POWER
Ω
HOWEVER
THIS
IS
AN
ARTIFACT
OF
OUR
OPTIMIZATION
SOFTWARE
AS
WE
END
UP
SOLVING
ESSENTIALLY
THE
SAME
CONSTRAINT
PROGRAM
PRELIMINARIES
USE
NOTATION
N
N
AND
WE
THE
FOLLOWING
N
N
A
AI
I
K
K
WE
DEFINE
Ω
TO
BE
THE
INFIMUM
OVER
THE
SET
OF
ALL
REALS
R
SUCH
THAT
N
N
MATRIX
MULTIPLICATION
OVER
Q
CAN
BE
COMPUTED
IN
NR
ADDITIONS
AND
MULTIPLICATIONS
FOR
SOME
NATURAL
NUMBER
N
HOWEVER
THE
CW
APPROACH
AND
OUR
EXTENSIONS
WORK
OVER
ANY
RING
A
THREE
TERM
ARITHMETIC
PROGRESSION
IS
A
SEQUENCE
OF
THREE
INTEGERS
A
B
C
SO
THAT
B
A
C
B
OR
EQUIVALENTLY
A
C
AN
ARITHMETIC
PROGRESSION
IS
NONTRIVIAL
IF
A
B
C
THE
FOLLOWING
IS
A
THEOREM
BY
BEHREND
IMPROVING
ON
SALEM
AND
SPENCER
THE
SUBSET
A
COMPUTED
BY
THE
THEOREM
IS
CALLED
A
SALEM
SPENCER
SET
NOW
LET
CONSIDER
THE
CASE
K
FIRST
ASSUME
THAT
THE
BI
ARE
SORTED
SO
THAT
BI
BI
SINCE
I
AI
WE
OBTAIN
K
N
K
N
N
BI
BI
BI
AI
I
K
I
A
I
I
K
I
I
K
WHERE
BI
BI
J
BJ
WE
WILL
PROVE
THE
CLAIM
FOR
AI
N
I
BI
I
K
AND
THE
LEMMA
WILL
FOLLOW
FOR
THE
B
AS
WELL
HENCE
WE
CAN
I
ASSUME
THAT
I
BI
SUPPOSE
THAT
WE
HAVE
PROVEN
THE
CLAIM
FOR
K
THIS
MEANS
THAT
IN
PARTICULAR
K
N
N
K
N
N
K
BJ
BJ
N
K
AJ
N
J
J
J
THEOREM
THERE
EXISTS
AN
ABSOLUTE
CONSTANT
C
SUCH
THAT
FOR
EVERY
N
EXP
ONE
CAN
CONSTRUCT
IN
POLY
N
TIME
A
SUBSET
A
N
WITH
NO
THREE
TERM
ARITHMETIC
PROGRESSIONS
AND
A
N
EXP
C
LOG
N
THE
FOLLOWING
LEMMA
IS
NEEDED
IN
OUR
ANALYSIS
INCIDENTALLY
A
SIMILAR
LEMMA
APPEARS
IN
IN
A
SLIGHTLY
DIFFERENT
CONTEXT
AND
THE
QUANTITY
IS
MAXIMIZED
FOR
AJ
N
N
N
BJ
J
BJ
FOR
ALL
J
N
N
N
K
NOW
CONSIDER
AN
B
B
BY
OUR
BASE
J
J
N
CASE
WE
GET
THAT
THIS
IS
MAXIMIZED
AND
IS
AT
LEAST
KJ
BJ
N
N
FOR
THE
SETTING
HENCE
WE
WILL
GET
K
N
K
K
N
BJ
BJ
N
K
AJ
N
J
K
J
J
LEMMA
LET
K
BE
A
CONSTANT
AND
N
BE
SUFFICIENTLY
LARGE
LET
BI
BE
FIXED
FOR
I
K
LET
AI
FOR
I
K
BE
VARIABLES
SUCH
THAT
AI
AND
I
AI
THEN
THE
QUANTITY
K
AN
N
B
I
AI
N
I
K
I
I
IS
MAXIMIZED
FOR
THE
CHOICES
AI
BI
KJ
BJ
FOR
ALL
I
K
AND
FOR
THESE
CHOICES
IT
IS
AT
LEAST
K
N
BJ
N
K
FOR
THE
SETTING
AND
FOR
J
AJ
N
N
N
BJ
J
BJ
IMPLIES
AJ
BJ
AND
HENCE
AJ
BJ
WE
HAVE
PROVEN
THE
LEMMA
J
PROOF
WE
WILL
PROVE
THE
LEMMA
BY
INDUCTION
ON
K
SUPPOSE
THAT
K
AND
CONSIDER
N
N
AN
N
A
N
X
Y
X
Y
AN
Y
AN
AN
A
BRIEF
SUMMARY
OF
THE
TECHNIQUES
USED
IN
BILINEAR
MATRIX
MULTIPLICATION
ALGORITHMS
A
FULL
EXPOSITION
OF
THE
TECHNIQUES
CAN
BE
FOUND
IN
THE
BOOK
BY
BU
RGISSER
CLAUSEN
AND
SHOKROLLAHI
THE
LECTURE
NOTES
BY
BLA
SER
ARE
ALSO
A
NICE
READ
BILINEAR
ALGORITHMS
AND
TRILINEAR
FORMS
WHERE
X
Y
N
WHEN
X
Y
THE
FUNCTION
F
A
AN
X
Y
AN
OF
A
IS
CONCAVE
FOR
A
HENCE
ITS
MAXIMUM
IS
ACHIEVED
WHEN
F
A
A
CONSIDER
F
A
IT
IS
N
AN
N
A
X
Y
AN
WE
CAN
TAKE
THE
LOGARITHM
TO
OBTAIN
LN
F
A
LN
N
N
A
LN
X
Y
LN
AN
LN
N
A
F
A
GROWS
EXACTLY
WHEN
A
LN
X
Y
LN
AN
N
LN
N
A
N
DOES
TAKING
STIRLING
APPROXIMATION
WE
OBTAIN
MATRIX
MULTIPLICATION
IS
AN
EXAMPLE
OF
A
TRILINEAR
FORM
N
N
MATRIX
MULTIPLICATION
FOR
INSTANCE
CAN
BE
WRITTEN
AS
XIK
YKJ
ZIJ
I
J
N
K
N
WHICH
CORRESPONDS
TO
THE
EQUALITIES
ZIJ
K
N
XIK
YKJ
FOR
ALL
I
J
N
IN
GENERAL
A
TRILINEAR
FORM
HAS
THE
FORM
I
J
K
TIJK
XI
YJ
ZK
WHERE
I
J
K
ARE
INDICES
IN
SOME
RANGE
AND
TIJK
ARE
THE
COEFFICIENTS
WHICH
DEFINE
THE
TRILINEAR
FORM
TIJK
IS
ALSO
CALLED
A
TENSOR
THE
TRILINEAR
FORM
FOR
THE
PRODUCT
OF
A
K
M
BY
AN
M
N
MATRIX
IS
DENOTED
BY
K
M
N
STRASSEN
ALGORITHM
FOR
MATRIX
MULTIPLICATION
IS
AN
EXAMPLE
OF
A
BILINEAR
ALGORITHM
WHICH
COMPUTES
A
TRILINEAR
FORM
A
BILINEAR
ALGORITHM
IS
EQUIVALENT
TO
A
REPRESENTATION
OF
A
TRILINEAR
FORM
OF
THE
FOLLOWING
FORM
R
TIJK
XI
YJ
ZK
ΑΛ
I
XI
ΒΛ
J
YJ
ΓΛ
K
ZK
A
LN
X
Y
LN
AN
N
LN
N
A
N
A
LN
X
Y
A
LN
A
A
LN
A
LN
N
O
LOG
N
N
SINCE
N
IS
LARGE
THE
O
LOG
N
N
TERM
IS
NEGLIGIBLE
THUS
WE
ARE
INTERESTED
IN
WHEN
G
A
A
LN
X
Y
A
LN
A
A
LN
A
IS
MAXIMIZED
BECAUSE
OF
CONCAVITY
FOR
A
AND
X
Y
THE
FUNCTION
IS
MAXIMIZED
WHEN
G
A
A
I
E
WHEN
LN
X
Y
LN
A
LN
A
LN
X
Y
LN
A
A
HENCE
A
A
X
Y
AND
SO
A
X
X
Y
FURTHERMORE
SINCE
THE
MAXIMUM
IS
ATTAINED
FOR
THIS
VALUE
OF
GET
THAT
FOR
EACH
T
N
WE
HAVE
THAT
N
A
T
WE
N
N
T
N
T
N
N
T
AN
N
A
X
X
Y
Y
AND
SINCE
T
T
X
Y
T
AN
X
Y
N
WE
OBTAIN
THAT
FOR
A
X
X
Y
N
XAN
Y
N
A
X
Y
N
N
AN
I
J
K
Λ
I
J
K
GIVEN
THE
ABOVE
REPRESENTATION
THE
ALGORITHM
IS
THEN
TO
FIRST
COMPUTE
THE
R
PRODUCTS
PΛ
I
ΑΛ
I
XI
J
ΒΛ
J
YJ
AND
THEN
FOR
EACH
K
TO
COMPUTE
ZK
Λ
ΓΛ
K
PΛ
THE
MINIMUM
NUMBER
OF
PRODUCTS
R
IN
A
BILINEAR
CONSTRUCTION
IS
CALLED
THE
RANK
OF
THE
TRILINEAR
FORM
OR
ITS
TENSOR
IT
IS
KNOWN
THAT
THE
RANK
OF
MATRIX
MULTIPLICATION
IS
AND
HENCE
STRASSEN
BILINEAR
ALGORITHM
IS
OPTIMAL
FOR
THE
PRODUCT
OF
MATRICES
A
BASIC
PROPERTY
OF
THE
RANK
R
OF
MATRIX
MULTIPLICATION
IS
THAT
R
K
M
N
R
K
N
M
R
M
K
N
R
M
N
K
R
N
M
K
R
N
K
M
THIS
PROPERTY
HOLDS
IN
FACT
FOR
ANY
TENSOR
AND
THE
TENSORS
OBTAINED
BY
PERMUTING
THE
ROLES
OF
THE
X
Y
AND
Z
VARIABLES
ANY
ALGORITHM
FOR
N
N
MATRIX
MULTIPLICATION
CAN
BE
APPLIED
RECURSIVELY
K
TIMES
TO
OBTAIN
A
BILINEAR
ALGORITHM
FOR
NK
NK
MATRICES
FOR
ANY
INTEGER
K
FURTHERMORE
ONE
CAN
OBTAIN
A
BILINEAR
ALGORITHM
FOR
BY
SPLITTING
THE
MATRIX
INTO
BLOCKS
OF
SIZE
AND
THE
MATRIX
INTO
BLOCKS
OF
SIZE
THE
ONE
CAN
APPLY
A
BILINEAR
ALGORITHM
FOR
ON
THE
MATRIX
WITH
BLOCK
ENTRIES
AND
AN
ALGORITHM
FOR
TO
MULTIPLY
THE
BLOCKS
THIS
COMPOSITION
MULTIPLIES
THE
RANKS
AND
HENCE
R
R
R
BECAUSE
OF
THIS
R
R
K
AND
IF
N
R
N
N
N
N
N
HENCE
Ω
LOGN
R
N
N
N
IN
GENERAL
IF
ONE
HAS
A
BOUND
R
K
M
N
R
THEN
ONE
CAN
SYMMETRIZE
AND
OBTAIN
A
BOUND
ON
R
KMN
KMN
KMN
AND
HENCE
Ω
LOGKMN
R
THE
ABOVE
COMPOSITION
OF
TWO
MATRIX
PRODUCT
TRILINEAR
FORMS
TO
FORM
A
NEW
TRILINEAR
FORM
IS
CALLED
THE
TENSOR
PRODUCT
FOR
TWO
GENERIC
TRILINEAR
OF
THE
TWO
FORMS
FORMS
I
J
K
TIJK
XI
YJ
ZK
AND
I
J
K
T
IJK
XI
YJ
ZK
THEIR
TENSOR
PRODUCT
IS
THE
TRILINEAR
FORM
TIJK
T
I
J
K
X
I
I
Y
J
J
Z
K
K
I
I
J
J
K
K
THEOREM
SCHO
NHAGE
Τ
THEOREM
IF
FOR
SOME
R
Q
R
QI
KI
MI
NI
R
THEN
LET
Τ
BE
DEFINED
AS
Q
Τ
I
KI
MI
NI
R
THEN
Ω
COPPERSMITH
AND
WINOGRAD
ALGORITHM
Λ
Q
XI
I
Q
YI
I
Q
ZI
I
Λ
QΛ
XQ
YQ
ZQ
A
LOT
OF
INTERESTING
WORK
ENSUED
AFTER
STRASSEN
DISCOVERY
BINI
ET
AL
SHOWED
THAT
ONE
CAN
EXTEND
THE
FORM
OF
A
BILINEAR
CONSTRUCTION
TO
ALLOW
THE
COEFFICIENTS
ΑΛ
I
ΒΛ
J
AND
ΓΛ
K
TO
BE
LINEAR
FUNCTIONS
OF
THE
INTEGER
POWERS
OF
AN
INDETERMINATE
SPECIFICALLY
ONE
CONSIDERS
APPROXIMATE
BILINEAR
ALGORITHMS
OF
THE
FORM
R
ΑΛ
I
XI
ΒΛ
J
YJ
ΓΛ
K
ZK
J
THE
MINIMUM
NUMBER
OF
PRODUCTS
OF
SUCH
A
BILINEAR
ALGORITHM
IS
CALLED
THE
BORDER
RANK
R
OF
A
TRILINEAR
FORM
OR
ITS
TENSOR
BORDER
RANK
IS
A
STRONGER
NOTION
OF
RANK
AND
IT
ALLOWS
FOR
BETTER
BOUNDS
ON
Ω
MOST
OF
THE
PROPERTIES
OF
RANK
ALSO
EXTEND
TO
BORDER
RANK
SO
THAT
IF
R
K
M
N
R
THEN
Ω
LOGKMN
R
FOR
INSTANCE
BINI
ET
AL
USED
THEIR
CONSTRUCTION
ABOVE
TO
OBTAIN
A
BORDER
RANK
OF
FOR
THE
PRODUCT
OF
A
BY
A
MATRIX
AND
BY
SYMMETRY
AN
UPPER
BOUND
OF
THE
BORDER
RANK
OF
FOR
THE
PRODUCT
OF
TWO
MATRICES
THIS
GAVE
THE
NEW
BOUND
OF
Ω
SCHO
NHAGE
GENERALIZED
BINI
ET
AL
APPROACH
AND
PROVED
HIS
Τ
THEOREM
ALSO
KNOWN
AS
THE
ASYMPTOTIC
SUM
INEQUALITY
UP
UNTIL
HIS
PAPER
ALL
CONSTRUCTIONS
USED
IN
DESIGNING
MATRIX
MULTIPLICATION
ALRGORITHMS
EXPLICITLY
COMPUTED
A
SINGLE
MATRIX
PRODUCT
TRILINEAR
FORM
SCHO
NHAGE
THEOREM
ALLOWED
A
WHOLE
NEW
FAMILY
OF
CONTRUCTIONS
IN
PARTICULAR
HE
SHOWED
THAT
CONSTRUCTIONS
THAT
ARE
DIRECT
SUMS
OF
RECTANGULAR
MATRIX
PRODUCTS
SUFFICE
TO
GIVE
A
BOUND
ON
Ω
I
I
J
K
I
WE
RECALL
COPPERSMITH
AND
WINOGRAD
CW
CONSTRUCTION
Q
Λ
ΛXI
ΛYI
ΛZI
I
E
THE
NEW
FORM
HAS
VARIABLES
THAT
ARE
INDEXED
BY
PAIRS
IF
INDICES
AND
THE
COORDINATE
TENSORS
ARE
MULTIPLIED
THE
DIRECT
SUM
OF
TWO
TRILINEAR
FORMS
IS
JUST
THEIR
SUM
BUT
WHERE
THE
VARIABLE
SETS
THAT
THEY
USE
ARE
DISJOINT
THAT
IS
THE
DIRECT
SUM
OF
I
J
K
TIJK
XI
YJ
ZK
AND
T
X
Y
Z
IS
A
NEW
TRILINEAR
FORM
WITH
THE
SET
OF
VARII
J
K
I
J
K
IJK
ABLES
I
J
K
TIJK
T
IJK
Λ
Q
XI
YI
XI
ZI
YI
ZI
ZQ
YQ
XQ
O
Λ
I
THE
CONSTRUCTION
COMPUTES
A
PARTICULAR
SYMMETRIC
TRILINEAR
FORM
THE
INDICES
OF
THE
VARIABLES
ARE
EITHER
Q
OR
SOME
INTEGER
IN
Q
WE
DEFINE
P
I
K
TIJK
XI
YJ
ZK
O
IF
I
IF
I
Q
IF
I
Q
THE
IMPORTANT
PROPERTY
OF
THE
CW
CONSTRUCTION
IS
THAT
FOR
ANY
TRIPLE
XI
YJ
ZK
IN
THE
TRILINEAR
FORM
P
I
P
J
P
K
IN
GENERAL
THE
CW
APPROACH
APPLIES
TO
ANY
CONSTRUCTION
FOR
WHICH
WE
CAN
DEFINE
AN
INTEGER
FUNCTION
P
ON
THE
INDICES
SO
THAT
THERE
EXISTS
A
NUMBER
P
SO
THAT
FOR
EVERY
XI
YJ
ZK
IN
THE
TRILINEAR
FORM
COMPUTED
BY
THE
CONSTRUCTION
P
I
P
J
P
K
P
WE
CALL
SUCH
CONSTRUCTIONS
P
P
UNIFORM
I
J
K
WHERE
THE
O
TERM
HIDES
TRIPLES
WHICH
HAVE
COEFFICIENTS
THAT
DEPEND
ON
POSITIVE
POWERS
OF
AS
AN
EXAMPLE
BINI
ET
AL
GAVE
THE
FOLLOWING
CONSTRUCTION
FOR
THREE
ENTRIES
OF
THE
PRODUCT
OF
MATRICES
IN
TERMS
OF
BILINEAR
PRODUCTS
DEFINITION
LET
P
BE
A
FUNCTION
FROM
N
TO
N
LET
P
N
A
TRILINEAR
FORM
I
J
K
N
TIJK
XI
YJ
ZK
IS
P
P
UNIFORM
IF
WHENEVER
TIJK
P
I
P
J
P
K
P
A
CONSTRUCTION
COMPUTING
A
P
P
UNIFORM
TRILINEAR
FORM
IS
ALSO
CALLED
P
P
UNIFORM
O
Z11
Z11
ANY
TENSOR
POWER
OF
A
P
P
UNIFORM
CONSTRUCTION
IS
P
P
UNIFORM
FOR
SOME
P
AND
P
THERE
ARE
MANY
WAYS
TO
DEFINE
P
AND
P
IN
TERMS
OF
P
AND
P
FOR
THE
K
TH
TENSOR
POWER
THE
VARIABLE
INDICES
XINDEX
YINDEX
ZINDEX
ARE
LENGTH
K
SEQUENCES
OF
THE
ORIGINAL
INDICES
XINDEX
XINDEX
K
YINDEX
YINDEX
K
AND
ZINDEX
ZINDEX
K
THEN
FOR
INSTANCE
ONE
CAN
PICK
P
TO
BE
AN
ARBITRARY
LINEAR
COMBINATION
SO
THAT
P
XINDEX
K
I
AI
XINDEX
I
AND
SIMILARLY
K
K
P
YINDEX
AND
P
ZINDEX
I
AI
YINDEX
I
I
AI
ZINDEX
I
CLEARLY
THEN
P
P
I
AI
AND
THE
K
TH
TENSOR
POWER
CONSTRUCTION
IS
P
P
UNIFORM
IN
THIS
PAPER
WE
WILL
FOCUS
ON
THE
CASE
WHERE
AI
FOR
ALL
I
K
SO
THAT
P
INDEX
K
I
INDEX
I
AND
P
P
K
SIMILAR
RESULTS
CAN
BE
OBTAINED
FOR
OTHER
CHOICES
OF
P
THE
CW
APPROACH
PROCEEDS
ROUGHLY
AS
FOLLOWS
SUPPOSE
WE
ARE
GIVEN
A
P
P
UNIFORM
CONSTRUCTION
AND
WE
WISH
TO
DERIVE
A
BOUND
ON
Ω
FROM
IT
THE
APPROACH
ONLY
WORKS
WHEN
THE
RANGE
OF
P
IS
AT
LEAST
LET
C
BE
THE
TRILINEAR
FORM
COMPUTED
BY
THE
CONSTRUCTION
AND
LET
R
BE
THE
NUMBER
OF
BILINEAR
PRODUCTS
PERFORMED
IF
THE
TRILINEAR
FORM
HAPPENS
TO
BE
A
DIRECT
SUM
OF
DIFFERENT
MATRIX
PRODUCTS
THEN
ONE
CAN
JUST
APPLY
THE
SCHO
NHAGE
Τ
THEOREM
TO
OBTAIN
A
BOUND
ON
Ω
IN
TERMS
OF
R
AND
THE
DIMENSIONS
OF
THE
SMALL
MATRIX
PRODUCTS
HOWEVER
TYPICALLY
THE
TRIPLES
IN
THE
TRILINEAR
FORM
C
CANNOT
BE
PARTITIONED
INTO
MATRIX
PRODUCTS
ON
DISJOINT
SETS
OF
VARIABLES
THE
FIRST
CW
IDEA
IS
TO
PARTITION
THE
TRIPLES
OF
C
INTO
GROUPS
WHICH
LOOK
LIKE
MATRIX
PRODUCTS
BUT
MAY
SHARE
VARIABLES
THEN
THE
IDEA
IS
TO
APPLY
PROCEDURES
TO
REMOVE
THE
SHARED
VARIABLES
BY
CAREFULLY
SETTING
VARIABLES
TO
IN
THE
END
ONE
OBTAINS
A
SMALLER
BUT
NOT
MUCH
SMALLER
NUMBER
OF
INDEPENDENT
MATRIX
PRODUCTS
AND
CAN
USE
SCHO
NHAGE
Τ
THEOREM
TWO
PROCEDURES
ARE
USED
TO
REMOVE
THE
SHARED
VARIABLES
THE
FIRST
ONE
DEFINES
A
RANDOM
HASH
FUNCTION
H
MAPPING
VARIABLES
TO
INTEGERS
SO
THAT
THERE
IS
A
LARGE
SET
SUCH
THAT
FOR
ANY
TRIPLE
XI
YJ
ZK
WITH
H
XI
H
YJ
H
ZK
ONE
ACTUALLY
HAS
H
XI
H
YJ
H
ZK
THEN
ONE
CAN
SET
ALL
VARIABLES
MAPPED
OUTSIDE
OF
TO
AND
BE
GUARANTEED
THAT
THE
TRIPLES
ARE
PARTITIONED
INTO
GROUPS
ACCORDING
TO
WHAT
ELEMENT
OF
THEY
WERE
MAPPED
TO
AND
MOREOVER
THE
GROUPS
DO
NOT
SHARE
ANY
VARIABLES
SINCE
IS
LARGE
AND
H
MAPS
VARIABLES
INDEPENDENTLY
THERE
IS
A
SETTING
OF
THE
RANDOM
BITS
OF
H
SO
THAT
A
LOT
OF
TRIPLES
AT
LEAST
THE
EXPECTATION
ARE
MAPPED
INTO
AND
ARE
HENCE
PRESERVED
BY
THIS
PARTITIONING
STEP
THE
CONSTRUCTION
OF
USES
THE
SALEM
SPENCER
THEOREM
AND
H
IS
A
CLEVERLY
CONSTRUCTED
LINEAR
FUNCTION
AFTER
THIS
FIRST
STEP
THE
REMAINING
NONZERO
TRIPLES
HAVE
BEEN
PARTITIONED
INTO
GROUPS
ACCORDING
TO
WHAT
ELEMENT
OF
THEY
WERE
MAPPED
TO
AND
THE
GROUPS
DO
NOT
SHARE
ANY
VARIABLES
THE
SECOND
STEP
REMOVES
SHARED
VARIABLES
WITHIN
EACH
GROUP
THIS
IS
ACCOMPLISHED
BY
A
GREEDY
PROCEDURE
THAT
GUARANTEES
THAT
A
CONSTANT
FRACTION
OF
THE
TRIPLES
REMAIN
MORE
DETAILS
CAN
BE
FOUND
IN
THE
NEXT
SECTION
WHEN
APPLIED
TO
THE
CW
CONSTRUCTION
ABOVE
THE
ABOVE
PROCEDURES
GAVE
THE
BOUND
Ω
THE
NEXT
IDEA
THAT
COPPERSMITH
AND
WINOGRAD
HAD
WAS
TO
EXTEND
THE
Τ
THEOREM
TO
THEOREM
BELOW
USING
THE
NOTION
OF
VALUE
VΤ
THE
INTUITION
IS
THAT
VΤ
ASSIGNS
A
WEIGHT
TO
A
TRILINEAR
FORM
T
ACCORDING
TO
HOW
CLOSE
AN
ALGORITHM
COMPUTING
T
IS
TO
AN
O
MATRIX
PRODUCT
ALGORITHM
SUPPOSE
THAT
FOR
SOME
N
THE
N
TH
TENSOR
POWER
OF
T
CAN
BE
REDUCED
TO
QI
KI
MI
NI
BY
SUBSTITUTION
OF
VARIABLES
THEN
AS
IN
WE
INTRODUCE
THE
CONSTRAINT
N
Q
Τ
VΤ
T
KI
MI
NI
I
FURTHERMORE
IF
Π
IS
THE
CYCLIC
PERMUTATION
OF
THE
X
Y
AND
Z
VARIABLES
IN
T
THEN
WE
ALSO
HAVE
VΤ
T
VΤ
T
ΠA
Π
T
VΤ
T
VΤ
ΠT
VΤ
Π
T
WE
CAN
GIVE
A
FORMAL
DEFINITION
OF
VΤ
T
AS
FOLLOWS
CONSIDER
ALL
POSITIVE
INTEGERS
N
AND
ALL
POSSIBLE
WAYS
Σ
TO
ZEROOUT
VARIABLES
IN
THE
N
TH
TENSOR
POWER
OF
T
SO
THAT
ONE
OB
Q
Σ
Σ
Σ
Σ
TAINS
A
DIRECT
SUM
OF
MATRIX
PRODUCTS
I
KI
MI
NI
THEN
WE
CAN
DEFINE
N
Q
Σ
Σ
Σ
Σ
Τ
VΤ
T
LIM
SUPN
Σ
KI
MI
NI
I
WE
CAN
ARGUE
THAT
FOR
ANY
PERMUTATION
OF
THE
X
Y
Z
VARIABLES
Π
AND
ANY
N
THERE
IS
A
CORRESPONDING
PERMUTATION
OF
THE
ZEROED
OUT
VARIABLES
Σ
THAT
GIVES
THE
SAME
UNDER
THE
PERMUTATION
Π
DIRECT
SUM
OF
MATRIX
PRODUCTS
HENCE
VΤ
T
VΤ
ΠT
AND
SINCE
T
CAN
BE
REPLACED
WITH
ΠT
AND
Π
WITH
Π
WE
MUST
HAVE
VΤ
T
VΤ
ΠT
THUS
ALSO
SATISFYING
THE
INEQUALITY
VΤ
T
VΤ
T
VΤ
ΠT
VΤ
Π
T
IT
IS
CLEAR
THAT
VALUES
ARE
SUPERADDITIVE
AND
SUPERMULTIPLICATIVE
SO
THAT
VΤ
VΤ
VΤ
AND
VΤ
VΤ
VΤ
WITH
THIS
NOTION
OF
VALUE
AS
A
FUNCTION
OF
Τ
WE
CAN
STATE
AN
EXTENDED
Τ
THEOREM
IMPLICIT
IN
THEOREM
LET
T
BE
A
TRILINEAR
FORM
SUCH
THAT
T
QI
TI
AND
THE
TI
ARE
INDEPENDENT
COPIES
OF
THE
SAME
TRILINEAR
FORM
T
IF
THERE
IS
AN
ALGORITHM
THAT
COMPUTES
T
BY
PERFORMING
AT
MOST
R
MULTIPLICATIONS
FOR
R
Q
THEN
Ω
FOR
Τ
GIVEN
BY
QVΤ
T
R
THEOREM
HAS
THE
FOLLOWING
EFFECT
ON
THE
CW
APPROACH
INSTEAD
OF
PARTITIONING
THE
TRILINEAR
FORM
INTO
MATRIX
PRODUCT
PIECES
ONE
COULD
PARTITION
IT
INTO
DIFFERENT
TYPES
OF
PIECES
PROVIDED
THAT
THEIR
VALUE
IS
EASY
TO
ANALYZE
A
NATURAL
WAY
TO
PARTITION
THE
TRILINEAR
FORM
C
IS
TO
GROUP
ALL
TRIPLES
XI
YJ
ZK
FOR
WHICH
I
J
K
ARE
MAPPED
BY
P
TO
THE
SAME
INTEGER
P
I
P
J
P
K
THIS
PARTITIONING
IS
PARTICULARLY
GOOD
FOR
THE
CW
CONSTRUCTION
AND
ITS
TENSOR
POWERS
IN
THE
FULL
VERSION
WE
SHOW
FOR
INSTANCE
THAT
THE
TRILINEAR
FORM
WHICH
CONSISTS
OF
THE
TRIPLES
MAPPED
TO
J
K
FOR
ANY
J
K
IS
ALWAYS
A
MATRIX
PRODUCT
OF
THE
FORM
Q
FOR
SOME
Q
USING
THIS
EXTRA
INGREDIENT
COPPERSMITH
AND
WINOGRAD
WERE
ABLE
TO
ANALYZE
THE
SECOND
TENSOR
POWER
OF
THEIR
CONSTRUCTION
AND
TO
IMPROVE
THE
ESTIMATE
TO
THE
CURRENT
BEST
BOUND
Ω
IN
THE
FOLLOWING
SECTION
WE
SHOW
HOW
WITH
A
FEW
EXTRA
INGREDIENTS
ONE
CAN
ALGORITHMICALLY
ANALYZE
AN
ARBITRARY
TENSOR
POWER
OF
ANY
P
P
UNIFORM
CONSTRUCTION
AMUSINGLY
THE
ALGORITHMS
INVOLVE
THE
SOLUTION
OF
LINEAR
SYSTEMS
INDICATING
THAT
FASTER
MATRIX
MULTIPLICATION
ALGORITHMS
CAN
HELP
IMPROVE
THE
SEARCH
FOR
FASTER
MATRIX
MULTIPLICATION
ALGORITHMS
TENSOR
POWERS
OF
TRILINEAR
FORMS
CAN
BE
DEFINED
ANALOGOUSLY
TO
HOW
WE
DEFINED
TENSOR
POWERS
OF
AN
ALGORITHM
COMPUTING
THEM
K
I
P
INDEX
I
AND
THAT
THE
K
TENSOR
POWER
IS
P
P
K
UNIFORM
NOW
WE
CAN
REPRESENT
C
AS
A
SUM
OF
TRILINEAR
FORMS
X
I
Y
J
Z
K
WHERE
X
I
Y
J
Z
K
ONLY
CONTAINS
THOSE
TRIPLES
IN
C
XXINDEX
YYINDEX
ZZINDEX
FOR
WHICH
P
MAPS
XINDEX
TO
I
YINDEX
TO
J
AND
ZINDEX
TO
K
THAT
IS
IF
C
IJK
TIJK
XI
YJ
ZK
THEN
X
I
Y
J
Z
K
I
J
K
P
I
I
P
J
J
TIJK
XI
YJ
ZK
WE
REFER
TO
I
J
K
AS
BLOCKS
FOLLOWING
THE
CW
ANALYSIS
WE
WILL
LATER
COMPUTE
THE
VALUE
VIJK
AS
A
FUNCTION
OF
Τ
FOR
EACH
TRILINEAR
FORM
X
I
Y
J
Z
K
SEPARATELY
THE
TRILINEAR
FORMS
X
I
Y
J
Z
K
CAN
SHARE
VARI
ABLES
FOR
INSTANCE
X
I
Y
J
Z
K
AND
X
I
Y
J
Z
K
SHARE
THE
X
VARIABLES
MAPPED
TO
BLOCK
I
WE
USE
THE
CW
TOOLS
TO
ZERO
OUT
SOME
VARIABLES
UNTIL
THE
REMAINING
TRILINEAR
FORMS
NO
LONGER
SHARE
VARIABLES
AND
MOREOVER
A
NONTRIVIAL
NUMBER
OF
THE
SAME
TRILINEAR
FORM
REMAIN
SO
THAT
ONE
CAN
OBTAIN
A
GOOD
ESTIMATE
ON
Τ
AND
HENCE
Ω
WE
OUTLINE
THE
APPROACH
IN
WHAT
FOLLOWS
TAKE
THE
N
TH
TENSOR
POWER
C
N
OF
C
FOR
LARGE
N
WE
WILL
EVENTUALLY
LET
N
GO
TO
NOW
THE
INDICES
OF
THE
VARIABLES
OF
C
ARE
N
LENGTH
SEQUENCES
OF
K
LENGTH
SEQUENCES
THE
BLOCKS
OF
C
N
ARE
N
LENGTH
SEQUENCES
OF
BLOCKS
OF
C
WE
WILL
PICK
RATIONAL
VALUES
AI
FOR
EVERY
BLOCK
I
OF
C
SO
THAT
I
AI
THEN
WE
WILL
SET
TO
ZERO
ALL
X
Y
Z
VARIABLES
OF
C
N
THE
INDICES
OF
WHICH
MAP
TO
BLOCKS
WHICH
DO
NOT
HAVE
EXACTLY
N
AI
POSITIONS
OF
BLOCK
I
FOR
EVERY
I
FOR
LARGE
ENOUGH
N
N
AI
IS
AN
INTEGER
J
K
WE
WILL
CONSIDER
FOR
EACH
TRIPLE
OF
BLOCKS
OF
C
N
I
THE
TRILINEAR
SUBFORM
OF
C
N
X
I
Y
J
Z
K
WHERE
AS
BEFORE
C
N
IS
THE
SUM
OF
THESE
TRILINEAR
FORMS
CONSIDER
VALUES
AIJK
FOR
ALL
VALID
BLOCK
TRIPLES
I
J
K
OF
C
WHICH
SATISFY
AI
AIJ
P
K
I
J
AJI
P
K
I
J
A
P
K
I
J
JI
FOR
EACH
I
J
K
P
K
I
J
DETERMINE
THE
VALUE
VIJK
OF
THE
TRILINEAR
FORM
I
J
P
I
I
P
J
J
TIJK
XI
YJ
ZK
AS
A
NONDECREASING
FUNCTION
OF
Τ
DEFINE
VARIABLES
AIJK
AND
A
IJK
FOR
I
J
K
P
K
I
J
FORM
THE
LINEAR
SYSTEM
FOR
ALL
I
AI
J
A
IJK
WHERE
A
IJK
A
SORT
IJK
DETERMINE
THE
RANK
OF
THE
LINEAR
SYSTEM
AND
IF
NECESSARY
PICK
ENOUGH
VARIABLES
A
IJK
TO
PLACE
IN
AND
TREAT
AS
CONSTANTS
SO
THE
SYSTEM
HAS
FULL
RANK
SOLVE
FOR
THE
VARIABLES
OUTSIDE
OF
IN
TERMS
OF
THE
AI
AND
THE
VARIABLES
IN
COMPUTE
THE
DERIVATIVES
PI
J
K
IJK
FORM
AND
SOLVE
THE
PROGRAM
BELOW
TO
OBTAIN
Ω
MINIMIZE
Τ
SUBJECT
TO
A
PERM
IJK
A
IJK
RK
I
J
K
AIJK
AIJK
IJK
PERM
IJK
AIJK
VIJK
I
A
AI
I
A
IJK
AIJK
FOR
ALL
I
J
K
I
J
K
PERM
IJK
A
IJK
FOR
ALL
A
IJK
A
IJK
A
P
A
PI
J
K
IJK
I
J
K
I
J
K
IJK
I
J
K
P
A
P
A
I
J
K
I
J
K
IJK
I
J
K
I
J
K
IJK
AND
IS
SETTING
AIJK
A
IJK
UNLESS
ONE
J
AIJK
J
A
IJK
FOR
ALL
I
FIGURE
THE
PROCEDURE
TO
ANALYZE
THE
K
TENSOR
POWER
J
ANALYZING
ARBITRARY
TENSOR
POWERS
OF
UNIFORM
CONSTRUCTIONS
LET
K
BE
AN
INTEGER
LET
P
BE
AN
INTEGER
FUNCTION
WITH
RANGE
SIZE
AT
LEAST
WE
WILL
SHOW
HOW
TO
ANALYZE
THE
KTENSOR
POWER
OF
ANY
P
P
UNIFORM
CONSTRUCTION
BY
PROVING
THE
FOLLOWING
THEOREM
J
J
THE
VALUES
AIJK
WILL
CORRESPOND
TO
THE
NUMBER
OF
INDEX
POSITIONS
POS
SUCH
THAT
ANY
TRILINEAR
FORM
X
I
Y
J
Z
K
OF
C
N
WE
HAVE
THAT
I
POS
I
J
POS
J
K
POS
K
THE
AIJK
NEED
TO
SATISFY
THE
FOLLOWING
ADDITIONAL
TWO
CONSTRAINTS
AI
I
THEOREM
GIVEN
A
P
P
UNIFORM
CONSTRUCTION
AND
LOWER
BOUNDS
FOR
THE
VALUES
FOR
ITS
K
TENSOR
POWER
THE
PROCEDURE
IN
FIGURE
OUTPUTS
A
CONSTRAINT
PROGRAM
THE
SOLUTION
Τ
OF
WHICH
IMPLIES
Ω
WE
BEGIN
THE
PROOF
CONSIDER
THE
THE
K
TENSOR
POWER
OF
A
PARTICULAR
P
P
UNIFORM
CONSTRUCTION
CALL
THE
TRILINEAR
FORM
COMPUTED
BY
THE
CONSTRUCTION
C
LET
R
BE
THE
BOUND
ON
THE
BORDER
RANK
OF
THE
ORIGINAL
CONSTRUCTION
THEN
RK
IS
A
BOUND
ON
THE
BORDER
RANK
OF
C
THE
VARIABLES
IN
C
HAVE
INDICES
WHICH
ARE
K
LENGTH
SEQUENCES
OF
THE
ORIGINAL
INDICES
LET
THE
INDEX
OF
AN
X
VARIABLE
BE
DENOTED
BY
XINDEX
THE
INDEX
OF
A
Y
VARIABLE
BY
YINDEX
AND
THE
INDEX
OF
A
Z
VARIABLE
BY
ZINDEX
THEN
FOR
EVERY
TRIPLE
XXINDEX
YYINDEX
ZZINDEX
IN
THE
TRILINEAR
FORM
AND
ANY
PARTICULAR
POSITION
POS
IN
THE
INDEX
SEQUENCES
P
XINDEX
POS
P
YINDEX
POS
P
ZINDEX
POS
P
RECALL
THAT
WE
DEFINED
THE
EXTENSION
P
OF
P
FOR
THE
K
TENSOR
POWER
AS
P
INDEX
AND
PK
AIJK
I
J
K
I
AI
I
WE
NOTE
THAT
ALTHOUGH
THE
SECOND
CONSTRAINT
IS
EXPLICITLY
STATED
IN
IT
ACTUALLY
AUTOMATICALLY
HOLDS
AS
A
CONSEQUENCE
OF
CONSTRAINT
AND
THE
DEFINITION
OF
AIJK
SINCE
IAI
IAI
JAJ
KAK
I
I
I
AIJ
P
K
I
J
I
J
J
I
J
K
J
AIJ
P
K
I
J
I
J
P
K
I
J
AIJ
P
K
I
J
I
J
PK
I
J
K
A
P
K
J
K
J
K
K
J
AIJ
P
K
I
J
P
K
THUS
THE
ONLY
CONSTRAINT
THAT
NEEDS
TO
BE
SATISFIED
BY
THE
AIJK
IS
I
J
K
AIJK
RECALL
THAT
RIN
I
DENOTES
RI
RI
N
RI
WHERE
THE
N
N
AI
AIJK
I
N
AI
N
AIJK
J
LET
US
SHOW
HOW
TO
PROCESS
THE
TRIPLES
SO
THAT
THEY
NO
LONGER
SHARE
VARIABLES
PICK
M
TO
BE
A
PRIME
WHICH
IS
Θ
ℵ
LET
BE
A
SALEMSPENCER
SET
OF
SIZE
ROUGHLY
M
O
AS
IN
THE
SALEM
SPENCER
THEOREM
THE
O
TERM
WILL
GO
TO
WHEN
WE
LET
N
GO
TO
INFINITY
IN
THE
FOLLOWING
WE
LL
LET
M
Ε
AND
IN
THE
END
WE
LL
LET
Ε
GO
TO
SIMILAR
TO
THIS
IS
POSSIBLE
SINCE
OUR
FINAL
INEQUALITY
WILL
DEPEND
ON
M
Ε
N
WHICH
GOES
TO
AS
N
GOES
TO
AND
Ε
GOES
TO
CHOOSE
RANDOM
NUMBERS
WN
IN
M
DEFINE
THE
HASH
FUNCTIONS
WHICH
FOR
AN
INDEX
SEQUENCE
I
MAP
THE
VARIABLE
INDICES
TO
INTEGERS
JUST
AS
IN
N
WPOS
I
POS
N
THUS
THE
SALEM
SPENCER
SET
HAS
ALLOWED
US
TO
DO
SOME
PARTITIONING
OF
THE
TRIPLES
LET
US
ANALYZE
HOW
MANY
TRIPLES
REMAIN
SINCE
M
IS
PRIME
AND
DUE
TO
OUR
CHOICE
OF
FUNCTIONS
THE
X
Y
AND
Z
BLOCKS
ARE
INDEPENDENT
AND
ARE
HASHED
UNIFORMLY
TO
M
IF
THE
I
AND
J
BLOCKS
OF
A
TRIPLE
X
I
Y
J
Z
K
ARE
MAPPED
TO
THE
SAME
VALUE
SO
IS
THE
K
BLOCK
THE
EXPECTED
FRACTION
OF
TRIPLES
WHICH
REMAIN
IS
HENCE
M
Ε
M
M
WHICH
IS
M
Ε
THIS
HOLDS
FOR
THE
TRIPLES
THAT
SATISFY
OUR
CHOICE
OF
PARTITION
AIJK
THE
TRILINEAR
FORMS
CORRESPONDING
TO
BLOCK
TRIPLES
MAPPED
TO
THE
SAME
VALUE
IN
CAN
STILL
SHARE
VARIABLES
WE
DO
SOME
PRUNING
IN
ORDER
TO
REMOVE
SHARED
BLOCKS
SIMILAR
TO
WITH
A
MINOR
CHANGE
FOR
EACH
PROCESS
THE
TRIPLES
HASHING
TO
SEPARATELY
WE
FIRST
PROCESS
THE
TRIPLES
THAT
OBEY
OUR
CHOICE
OF
AIJK
UNTIL
THEY
DO
NOT
SHARE
ANY
VARIABLES
AFTER
THAT
WE
ALSO
PROCESS
THE
REMAINING
TRIPLES
ZEROING
THEM
OUT
IF
NECESSARY
THIS
IS
SLIGHTLY
DIFFERENT
FROM
GREEDILY
BUILD
A
LIST
L
OF
INDEPENDENT
TRIPLES
AS
FOLLOWS
J
K
IF
I
IS
AMONG
SUPPOSE
WE
PROCESS
A
TRIPLE
WITH
BLOCKS
I
THE
X
BLOCKS
IN
ANOTHER
TRIPLE
IN
L
THEN
SET
TO
ALL
Y
VARI
SIMILARLY
IF
I
IS
NOT
SHARED
BUT
J
OR
K
ABLES
WITH
BLOCK
J
IS
THEN
SET
ALL
X
VARIABLES
WITH
BLOCK
I
TO
IF
NO
BLOCKS
ARE
SHARED
ADD
THE
TRIPLE
TO
L
J
K
WE
FIND
SUPPOSE
THAT
WHEN
WE
PROCESS
A
TRIPLE
I
WITH
A
TRIPLE
I
J
K
IN
L
THAT
IT
SHARES
A
BLOCK
SAY
I
SUPPOSE
THAT
WE
THEN
ELIMINATE
ALL
VARIABLES
SHARING
BLOCK
AND
THUS
ELIMINATE
U
NEW
TRIPLES
FOR
SOME
U
THEN
WE
J
ELIMINATE
AT
LEAST
PAIRS
OF
TRIPLES
WHICH
SHARE
A
BLOCK
U
THE
PAIRS
OF
THE
ELIMINATED
TRIPLES
THAT
SHARE
BLOCK
J
AND
THE
PAIR
I
J
K
AND
I
J
K
WHICH
SHARE
I
SINCE
U
WE
ELIMINATE
AT
LEAST
AS
MANY
PAIRS
AS
TRIPLES
THE
EXPECTED
NUMBER
OF
UNORDERED
PAIRS
OF
TRIPLES
SHARING
AN
X
OR
Y
OR
Z
BLOCK
AND
FOR
WHICH
AT
LEAST
ONE
TRIPLE
OBEYS
OUR
CHOICE
OF
AIJK
IS
N
N
ℵ
ℵ
ℵ
ℵ
ℵ
N
AI
N
AI
M
Ε
M
Ε
WPOS
I
POS
N
ℵ
ℵ
ℵ
N
AI
THUS
AT
MOST
THIS
MANY
TRIPLES
OBEYING
OUR
CHOICE
OF
AIJK
HAVE
BEEN
ELIMINATED
HENCE
THE
EXPECTED
NUMBER
OF
SUCH
TRIPLES
REMAINING
AFTER
THE
PRUNING
IS
MOD
M
POS
BY
I
MOD
M
SET
TO
ALL
VARIABLES
WITH
BLOCKS
MAPPING
TO
OUTSIDE
J
K
IN
THE
REMAINING
TRILINFOR
ANY
TRIPLE
WITH
BLOCKS
I
BY
J
K
HENCE
EAR
FORM
WE
HAVE
THAT
BX
I
THE
HASHES
OF
THE
BLOCKS
FORM
AN
ARITHMETIC
PROGRESSION
OF
LENGTH
SINCE
CONTAINS
NO
NONTRIVIAL
ARITHMETIC
PROGRESSIONS
WE
GET
THAT
FOR
ANY
NONZERO
TRIPLE
BY
J
BZ
K
BX
I
WHERE
THE
SUM
RANGES
OVER
THE
VALUES
AIJK
WHICH
SATISFY
THE
ABOVE
CONSTRAINT
THIS
IS
SINCE
THE
NUMBER
OF
NONZERO
BLOCKS
IS
NN
AND
THE
NUMBER
OF
BLOCK
TRIPLES
WHICH
CON
AI
N
AI
FOR
EVERY
TAIN
A
PARTICULAR
X
BLOCK
IS
EXACTLY
I
N
A
IJK
J
PARTITION
OF
AI
INTO
AIJK
P
K
I
J
J
FOR
K
N
AI
LET
ℵ
AIJK
I
N
AIJK
THE
CURRENT
NUMBER
OF
N
J
NONZERO
BLOCK
TRIPLES
IS
ℵ
N
AI
OUR
GOAL
WILL
BE
TO
PROCESS
THE
REMAINING
NONZERO
TRIPLES
BY
ZEROING
OUT
VARIABLES
SHARING
THE
SAME
BLOCK
UNTIL
THE
REMAINING
TRILINEAR
FORMS
CORRESPONDING
TO
DIFFERENT
BLOCK
TRIPLES
DO
NOT
SHARE
VARIABLES
FURTHERMORE
WE
WOULD
LIKE
FOR
THE
REMAINING
NONZERO
TRILINEAR
FORMS
TO
BE
ESSENTIALLY
THE
SAME
SO
THAT
WE
CAN
USE
THEOREM
THIS
WOULD
BE
THE
CASE
IF
WE
FIX
FOR
EACH
I
A
PARTITION
AIJK
N
J
OF
AI
N
SUPPOSE
THAT
EACH
REMAINING
TRIPLE
X
I
Y
J
Z
K
HAS
EXACTLY
AIJK
N
POSITIONS
POS
SUCH
THAT
I
POS
I
J
POS
J
K
POS
K
THEN
ALL
REMAINING
TRIPLES
WOULD
BE
ISOMOR
AIJK
N
PHIC
AND
EACH
WOULD
HAVE
VALUE
AT
LEAST
I
J
VIJK
BY
SUPERMULTIPLICATIVITY
SUPPOSE
THAT
WE
HAVE
FIXED
A
PARTICULAR
CHOICE
OF
THE
AIJK
WE
WILL
LATER
SHOW
HOW
TO
PICK
A
CHOICE
WHICH
MAXIMIZES
OUR
BOUND
ON
Ω
THE
NUMBER
OF
SMALL
TRILINEAR
FORMS
CORRESPONDING
TO
DIF
FERENT
BLOCK
TRIPLES
OF
C
N
IS
ℵ
NN
WHERE
AI
N
AI
ℵ
N
AIJK
J
I
BX
I
P
K
WPOS
I
POS
POS
INDICES
I
ARE
THE
ELEMENTS
OF
WHEN
IS
IMPLICIT
WE
ONLY
WRITE
RNI
BY
OUR
CHOICE
OF
WHICH
VARIABLES
TO
SET
TO
WE
GET
THAT
THE
NUMBER
OF
C
N
BLOCK
TRIPLES
WHICH
STILL
HAVE
NONZERO
TRILINEAR
FORMS
IS
N
BZ
I
MOD
M
M
POS
Ε
N
ℵ
ℵ
M
ℵ
N
AI
N
ℵ
CM
Ε
N
AI
THE
VALUES
VIJK
ARE
NONDECREASING
FUNCTIONS
OF
Τ
WHERE
Τ
Ω
THE
INEQUALITY
ABOVE
GIVES
AN
UPPER
BOUND
ON
Τ
AND
HENCE
ON
Ω
FOR
SOME
CONSTANT
C
DEPENDING
ON
HOW
LARGE
WE
PICK
M
TO
BE
IN
TERMS
OF
ℵ
WE
CAN
PICK
VALUES
FOR
THE
VARIABLES
WI
IN
THE
HASH
FUNCTIONS
WHICH
WE
DEFINED
SO
THAT
AT
LEAST
THIS
MANY
TRIPLES
REMAIN
PICKING
THESE
VALUES
DETERMINES
OUR
ALGORITHM
WE
HAVE
THAT
N
AI
MAX
ℵ
AIJK
N
AIJK
J
I
POLY
N
MAX
AIJK
I
COMPUTING
A
IJK
AND
AIJK
HERE
WE
SHOW
HOW
TO
COMPUTE
THE
VALUES
A
IJK
FORMING
ℵMAX
AND
AIJK
WHICH
MAXIMIZE
OUR
BOUND
ON
Ω
J
AIJK
THE
ONLY
RESTRICTION
ON
AIJK
IS
THAT
AI
PICK
A
IJK
WE
J
A
IJK
AND
SO
IF
WE
KNOW
HOW
TO
CAN
LET
AIJK
VARY
SUBJECT
TO
THE
CONSTRAINTS
J
AIJK
J
A
IJK
HENCE
WE
WILL
FOCUS
ON
COMPUTING
A
IJK
RECALL
THAT
THE
SETTING
OF
THE
VARIABLES
AIJK
WHICH
A
IJKNIS
AI
MAXIMIZES
I
N
A
FOR
FIXED
AI
IJK
J
BECAUSE
OF
OUR
SYMMETRIC
CHOICE
OF
THE
AI
THE
ABOVE
IS
MAXIMIZED
FOR
A
IJK
A
SORT
IJK
WHERE
SORT
IJK
IS
THE
PERMUTATION
OF
I
J
K
WHICH
SORTS
THEM
IN
LEXICOGRAPHIC
ORDER
LET
PERM
I
J
K
BE
THE
NUMBER
OF
DISTINCT
PERMUTATIONS
OF
I
J
K
THE
CONSTRAINT
SATISFIED
BY
THE
AIJK
BECOMES
AI
PERM
I
J
K
AIJK
N
AI
N
AIJK
J
N
AI
MAX
AIJK
I
N
A
IJK
J
WE
WILL
APPROXIMATE
ℵ
BY
ℵMAX
WE
HAVE
OBTAINED
ℵ
N
Ω
N
AI
ℵMAX
POLY
N
M
Ε
TRILINEAR
FORMS
THAT
SHARE
ANY
VARIABLES
AND
EACH
OF
DO
NOT
AIJK
N
WHICH
HAS
VALUE
I
J
VIJK
N
N
AI
IF
WE
WERE
TO
SET
ℵ
ℵMAX
WE
WOULD
GET
Ω
POLY
N
M
Ε
I
TRILINEAR
FORMS
INSTEAD
WE
USE
THIS
SETTING
IN
OUR
ANALYSES
THOUGH
A
BETTER
ANALYSIS
MAY
BE
POSSIBLE
IF
YOU
ALLOW
ℵ
TO
VARY
WE
WILL
SEE
LATER
THAT
THE
BEST
CHOICE
OF
AIJK
SETS
AIJK
ASORT
IJK
FOR
EACH
I
J
K
WHERE
SORT
IJK
IS
THE
PERMUTATION
OF
IJK
SORTING
THEM
IN
LEXICOGRAPHIC
ORDER
SO
THAT
I
J
K
SINCE
TENSOR
RANK
IS
INVARIANT
UNDER
PERMUTATIONS
OF
THE
ROLES
OF
THE
X
Y
AND
Z
VARIABLES
WE
ALSO
HAVE
THAT
VIJK
VSORT
IJK
FOR
ALL
I
J
K
LET
PERM
I
J
K
BE
THE
NUMBER
OF
DISTINCT
PERMUTATIONS
OF
I
J
K
THAT
IS
IF
I
J
K
PERM
I
J
K
IF
I
J
K
PERM
I
J
K
AND
FINALLY
IF
I
J
K
I
PERM
I
J
K
RECALL
THAT
R
WAS
THE
BOUND
ON
THE
BORDER
RANK
OF
C
GIVEN
BY
THE
CONSTRUCTION
THEN
BY
THEOREM
WE
GET
THE
INEQUALITY
R
KN
N
ℵ
N
AI
ℵMAX
POLY
N
M
Ε
I
J
K
VIJK
Τ
PERM
IJK
N
AIJK
BE
THE
CHOICES
WHICH
ACHIEVE
ℵMAX
SO
THAT
ℵMAX
A
NIJK
LET
AI
I
N
A
IJK
J
THEN
BY
TAKING
STIRLING
APPROXIMATION
WE
GET
THAT
A
A
IJK
IJK
ℵ
ℵMAX
N
AIJK
A
IJK
IJK
THE
CONSTRAINT
ABOVE
TOGETHER
WITH
A
IJK
A
SORT
IJK
ARE
THE
ONLY
CONSTRAINTS
IN
THE
ORIGINAL
CW
PAPER
HOWEVER
IT
TURNS
OUT
THAT
MORE
CONSTRAINTS
ARE
NECESSARY
FOR
K
THE
EQUALITIES
AI
A
FORM
A
SYSTEM
OF
LINEAR
IJK
J
EQUATIONS
INVOLVING
THE
VARIABLES
A
IJK
AND
THE
FIXED
VALUES
AI
IF
THIS
SYSTEM
HAD
FULL
RANK
THEN
THE
A
IJK
VALUES
FOR
A
IJK
A
SORT
IJK
WOULD
BE
DETERMINED
FROM
THE
AI
N
AI
AND
A
FURTHER
AND
HENCE
ℵ
WOULD
BE
EXACTLY
I
N
A
IJK
J
MAXIMIZATION
STEP
WOULD
NOT
BE
NECESSARY
THIS
IS
EXACTLY
THE
CASE
FOR
K
IN
THIS
IS
ALSO
WHY
IN
SETTING
AIJK
A
IJK
WAS
NECESSARY
HOWEVER
THE
SYSTEM
OF
EQUATIONS
MAY
NOT
HAVE
FULL
RANK
BECAUSE
OF
THIS
LET
US
PICK
A
MINIMUM
SET
OF
VARIABLES
A
I
J
K
SO
THAT
VIEWING
THESE
VARIABLES
AS
CONSTAINTS
WOULD
MAKE
THE
SYSTEM
HAVE
FULL
RANK
THEN
ALL
VARIABLES
A
IJK
WOULD
BE
DETERMINED
AS
LINEAR
FUNCTIONS
DEPENDING
ON
THE
AI
AND
THE
VARIABLES
IN
CONSIDER
THE
FUNCTION
G
OF
AI
AND
THE
VARIABLES
IN
DEFINED
AS
N
AI
G
N
A
IJK
A
IJK
N
A
IJK
A
IJK
I
G
IS
ONLY
A
FUNCTION
OF
A
IJK
FOR
FIXED
AI
I
WE
WANT
TO
KNOW
FOR
WHAT
VALUES
OF
THE
VARIABLES
OF
G
IS
MAXIMIZED
G
IS
MAXIMIZED
WHEN
IJ
A
IJK
N
IS
MINIMIZED
WHICH
IN
TURN
IS
MINIMIZED
EXACTLY
WHEN
F
IJ
LN
N
A
IJK
IS
MINIMIZED
WHERE
K
P
K
I
J
USING
STIRLING
APPROXIMATION
LN
N
N
LN
N
N
O
LN
N
WE
GET
THAT
F
IS
ROUGHLY
EQUAL
TO
TAKING
THE
N
TH
ROOT
TAKING
N
TO
GO
TO
AND
Ε
TO
GO
TO
AND
USING
STIRLING
APPROXIMATION
WE
OBTAIN
THE
FOLLOWING
INEQUALITY
A
A
IJK
PERM
IJK
V
PERM
IJK
AIJK
IJK
RK
IJK
A
IJK
I
AAIJK
I
AI
I
J
K
N
A
IJK
LN
A
IJK
A
IJK
A
IJK
LN
N
O
LOG
N
A
IJK
N
IJ
IF
WE
SET
AIJK
A
IJK
WE
GET
THE
SIMPLER
INEQUALITY
A
RK
VIJK
PERM
IJK
AIJK
AI
I
I
J
K
I
J
K
N
LN
N
N
I
IJ
A
IJK
LN
AIJK
A
IJK
O
LOG
N
A
IJK
N
SINCE
IJ
A
IJK
I
AI
AS
N
GOES
TO
FOR
ANY
FIXED
SETTING
OF
THE
A
IJK
VARIABLES
THE
O
LOG
N
N
TERM
VANISHES
AND
F
IS
ROUGHLY
N
LN
N
N
IJ
A
IJK
LN
A
IJK
WHICH
IS
WHAT
WE
USE
IN
OUR
APPLICATION
OF
THE
THEOREM
AS
IT
REDUCES
THE
NUMBER
OF
VARIABLES
AND
DOES
NOT
SEEM
TO
CHANGE
THE
FINAL
BOUND
ON
Ω
BY
MUCH
A
IJK
HENCE
TO
MINIMIZE
F
WE
NEED
TO
MINIMIZE
F
IJ
A
IJK
LN
A
IJK
A
IJK
WE
WANT
TO
KNOW
FOR
WHAT
VALUES
OF
A
IJK
F
IS
MINIMIZED
SINCE
F
IS
CONVEX
FOR
POSITIVE
AIJK
IT
IS
ACTUALLY
MINIMIZED
WHEN
A
F
FOR
EVERY
A
IJK
RECALL
THAT
THE
VARIIJK
ABLES
NOT
IN
ARE
LINEAR
COMBINATIONS
OF
THOSE
IN
TAKING
THE
DERIVATIVES
WE
OBTAIN
FOR
EACH
A
IJK
IN
A
F
LN
A
I
J
K
I
J
K
A
IJK
A
IJK
DEFINE
VARIABLES
ΑIJK
AND
XI
YJ
ZK
FOR
ALL
GOOD
TRIPLES
I
J
K
FORM
THE
LINEAR
SYSTEM
CONSISTING
OF
XI
J
ΑIJK
YJ
I
ΑIJK
AND
ZK
I
ΑIJK
DETERMINE
THE
RANK
OF
THE
SYSTEM
IT
I
IS
EXACTLY
J
K
BECAUSE
OF
THE
FACT
THAT
I
XI
J
YJ
K
ZK
IF
THE
SYSTEM
DOES
NOT
HAVE
FULL
RANK
THEN
PICK
ENOUGH
VARIABLES
ΑIJK
TO
TREAT
AS
CONSTANTS
PLACE
THEM
IN
A
SET
Δ
I
J
K
WE
CAN
WRITE
THIS
OUT
AS
A
I
J
K
A
I
J
K
A
IJK
SOLVE
THE
SYSTEM
FOR
THE
VARIABLES
OUTSIDE
OF
Δ
IN
TERMS
OF
THE
ONES
IN
Δ
AND
XI
YJ
ZK
NOW
WE
HAVE
ΑIJK
ΑIJK
XI
YJ
XK
Y
Δ
I
J
K
LET
WI
J
K
VI
J
K
VI
I
J
J
K
K
COMPUTE
FOR
EVERY
SINCE
EACH
VARIABLE
A
I
J
K
IN
THE
ABOVE
EQUALITY
FOR
A
IJK
IS
A
LINEAR
COMBINATION
OF
VARIABLES
IN
WE
HAVE
THAT
THE
A
J
K
IS
ACTUALLY
A
CONSTANT
AND
EXPONENT
PI
J
K
IJK
A
I
IJK
SO
WE
GET
A
SYSTEM
OF
POLYNOMIAL
EQUALITY
CONSTRAINTS
WHICH
DEFINE
THE
VARIABLES
IN
IN
TERMS
OF
THE
VARIABLES
OUTSIDE
OF
FOR
ANY
A
IJK
WE
GET
A
IJK
Α
IJK
X
WIJK
I
J
K
NY
Α
IJK
Y
WIJK
AND
I
J
K
A
I
J
K
PI
J
K
IJK
NZ
A
I
J
K
P
I
J
K
IJK
NX
Α
IJK
Z
WIJK
I
J
K
A
I
J
K
PI
J
K
IJK
COMPUTE
FOR
EVERY
VARIABLE
Y
Δ
A
I
J
K
P
I
J
K
IJK
NY
GIVEN
VALUES
FOR
THE
VARIABLES
NOT
IN
WE
CAN
USE
TO
GET
VALID
VALUES
FOR
THE
VARIABLES
IN
AND
HENCE
ALSO
FOR
THE
AI
FOR
THAT
CHOICE
OF
THE
AI
G
IS
MAXIMIZED
FOR
EXACTLY
THE
VARIABLE
SETTINGS
WE
HAVE
PICKED
NOW
ALL
WE
HAVE
TO
DO
IS
FIND
THE
CORRECT
VALUES
FOR
THE
VARIABLES
OUTSIDE
OF
AND
FOR
A
IJK
GIVEN
THE
CONSTRAINTS
AI
J
A
IJK
WE
CANNOT
PICK
ARBITRARY
VALUES
FOR
THE
VARIABLES
OUTSIDE
OF
THEY
NEED
TO
SATISFY
THE
FOLLOWING
CONSTRAINTS
THE
OBTAINED
AI
SATISFY
I
AI
AND
ΑIJK
Y
WI
J
K
I
J
K
COMPUTE
FOR
EACH
ΑIJK
ITS
SETTING
ΑIJK
Δ
AS
A
FUNCTION
OF
THE
Y
Δ
WHEN
X
NX
I
NXI
Y
NY
J
NYJ
AND
Z
NZ
K
NZK
THEN
SET
VIJK
NX
NY
NZ
NY
Y
Y
Δ
SUBJECT
TO
THE
CONSTRAINTS
ON
Y
Δ
GIVEN
BY
THE
VARIABLES
IN
OBTAINED
FROM
EQUATION
ARE
NONNEGATIVE
Y
FOR
ALL
Y
Δ
ΑIJK
Δ
FOR
EVERY
ΑIJK
IN
SUMMARY
WE
OBTAIN
THE
PROCEDURE
TO
ANALYZE
THE
K
TENSOR
POWER
SHOWN
IN
FIGURE
FIND
THE
SETTING
OF
THE
Y
Δ
THAT
MAXIMIZES
THE
BOUND
FIXED
GUESS
FOR
Τ
THIS
IS
A
LINEAR
ON
VIJK
FOR
ANY
PROGRAM
MAXIMIZE
Y
Δ
Y
LOG
NY
SUBJECT
TO
THE
ABOVE
LINEAR
CONSTRAINTS
OR
ALTERNATIVELY
LET
VIJK
BE
A
FUNCTION
OF
Y
Δ
AND
ADD
THE
ABOVE
TWO
CONSTRAINTS
TO
THE
FINAL
PROGRAM
IN
FIGURE
COMPUTING
Ω
ANALYZING
THE
SMALLER
TENSORS
CONSIDER
THE
TRILINEAR
FORM
CONSISTING
ONLY
OF
THE
VARIABLES
FROM
THE
K
TENSOR
POWER
OF
C
WITH
BLOCKS
I
J
K
WHERE
I
J
K
P
K
IN
THIS
SECTION
WE
WILL
PROVE
THE
FOLLOWING
THEOREM
FIGURE
THE
PROCEDURE
FOR
COMPUTING
VIJK
FOR
ARBITRARY
TENSOR
POWERS
THEOREM
GIVEN
A
P
P
UNIFORM
CONSTRUCTION
C
USING
THE
PROCEDURE
IN
FIGURE
ONE
CAN
COMPUTE
LOWER
BOUNDS
ON
THE
VALUES
VIJK
FOR
ANY
TENSOR
POWER
OF
C
THE
K
TENSOR
POWER
REQUIRES
O
APPLICATIONS
OF
THE
PROCEDURE
SUPPOSE
THAT
WE
HAVE
ANALYZED
THE
VALUES
FOR
SOME
POWERS
K
AND
K
K
OF
THE
TRILINEAR
FORM
FROM
THE
CONSTRUCTION
WITH
K
K
WE
WILL
SHOW
HOW
TO
INDUCTIVELY
ANALYZE
THE
VALUES
FOR
THE
K
POWER
USING
THE
VALUES
FOR
THESE
SMALLER
POWERS
THE
THEOREM
WILL
FOLLOW
BY
NOTING
THAT
THE
NUMBER
OF
VALUES
FOR
THE
K
POWER
IS
O
AND
THAT
ONE
CAN
USE
RECURSION
TO
FIRST
COMPUTE
THE
VALUES
FOR
THE
K
AND
K
POWERS
AND
THEN
COMBINING
THEM
TO
OBTAIN
THE
VALUES
FOR
THE
K
POWER
CONSIDER
THE
K
TENSOR
POWER
OF
THE
TRILINEAR
FORM
C
IT
WE
COULD
HAVE
INSTEAD
WRITTEN
F
IJ
A
IJK
LN
A
IJK
AND
MINIMIZED
F
AND
THE
EQUALITIES
WE
WOULD
HAVE
OBTAINED
WOULD
HAVE
BEEN
EXACTLY
THE
SAME
SINCE
THE
SYSTEM
OF
EQUATIONS
INCLUDES
THE
EQUATION
IJ
A
IJK
AND
ALTHOUGH
LN
AIJK
IJK
F
A
IS
IJ
A
IJK
A
IJ
A
A
LN
A
AIJK
THE
IN
THE
BRACKETS
WOULD
BE
CANCELED
OUT
IF
A
P
K
A
P
K
LN
A
P
K
THEN
IJ
I
J
A
IJK
A
A
P
K
A
I
J
K
LN
A
P
K
A
I
J
I
J
A
CAN
ACTUALLY
BE
VIEWED
AS
THE
TENSOR
PRODUCT
OF
THE
K
AND
K
K
TENSOR
POWERS
OF
C
RECALL
THAT
THE
INDICES
OF
THE
VARIABLES
OF
THE
K
TENSOR
POWER
OF
C
ARE
K
LENGTH
SEQUENCES
OF
INDICES
OF
THE
VARIABLES
OF
C
ALSO
RECALL
THAT
IF
P
WAS
THE
FUNCTION
WHICH
MAPS
THE
INDICES
OF
C
TO
BLOCKS
THEN
WE
DEFINE
PK
TO
BE
A
FUNCTION
WHICH
MAPS
THE
K
POWER
INDICES
TO
BLOCKS
AS
PK
INDEX
POS
P
INDEX
POS
AN
INDEX
OF
A
VARIABLE
IN
THE
K
TENSOR
POWER
OF
C
CAN
ALSO
BE
VIEWED
AS
A
PAIR
L
M
SUCH
THAT
L
IS
AN
INDEX
OF
A
VARIABLE
IN
THE
K
TENSOR
POWER
OF
C
AND
M
IS
AN
INDEX
OF
A
VARIABLE
IN
THE
K
K
TENSOR
POWER
OF
C
HENCE
WE
GET
THAT
PK
L
M
PK
L
PK
K
M
FOR
ANY
I
J
K
WHICH
FORM
A
VALID
BLOCK
TRIPLE
OF
THE
K
TENSOR
POWER
WE
CONSIDER
THE
TRILINEAR
FORM
TI
J
K
CONSISTING
OF
ALL
TRIPLES
XI
YJ
ZK
OF
THE
K
TENSOR
POWER
OF
THE
CONSTRUCTION
FOR
WHICH
PK
I
I
PK
J
J
PK
K
K
TI
J
K
CONSISTS
OF
THE
TRILINEAR
FORMS
TI
J
K
TI
I
J
J
K
K
FOR
ALL
I
J
K
THAT
FORM
A
VALID
BLOCK
TRIPLE
FOR
THE
K
POWER
AND
SUCH
THAT
I
I
J
J
K
K
FORM
A
VALID
BLOCK
TRIPLE
FOR
THE
K
K
POWER
CALL
SUCH
BLOCKS
I
J
K
GOOD
THEN
TIJK
OF
X
Y
OR
Z
BLOCKS
IS
N
N
N
Γ
N
YJ
N
ZK
N
XI
THE
NUMBER
OF
BLOCK
TRIPLES
WHICH
CONTAIN
A
PARTICULAR
X
Y
OR
Z
BLOCK
IS
ℵ
I
N
XI
N
ΑIJK
J
J
N
YJ
N
ΑIJK
I
K
N
ZK
N
ΑIJK
I
HENCE
THE
NUMBER
OF
TRIPLES
IS
Γ
ℵ
SET
M
Θ
ℵ
TO
BE
A
LARGE
ENOUGH
PRIME
GREATER
THAN
ℵ
CREATE
A
SALEM
SPENCER
SET
OF
SIZE
ROUGHLY
M
Ε
PICK
RANDOM
VALUES
IN
M
THE
BLOCKS
FOR
X
Y
OR
Z
VARIABLES
OF
THE
NEW
BIG
TRILINEAR
FORM
ARE
SEQUENCES
OF
LENGTH
THE
FIRST
N
POSITIONS
OF
A
SEQUENCE
CONTAIN
PAIRS
I
I
I
THE
SECOND
N
CONTAIN
PAIRS
J
J
J
AND
THE
LAST
N
CONTAIN
PAIRS
K
K
K
WE
CAN
THUS
REPRESENT
THE
BLOCK
SEQUENCES
I
OF
THE
K
TENSOR
POWER
AS
WHERE
IS
A
SEQUENCE
OF
LENGTH
OF
BLOCKS
OF
THE
K
POWER
OF
C
AND
IS
A
SEQUENCE
OF
LENGTH
OF
BLOCKS
OF
THE
K
K
POWER
OF
C
THE
FIRST
N
ARE
X
BLOCKS
THE
SECOND
N
ARE
Y
BLOCKS
AND
THE
THIRD
N
ARE
Z
BLOCKS
FOR
A
PARTICULAR
BLOCK
SEQUENCE
I
WE
DEFINE
THE
HASH
FUNCTIONS
THAT
DEPEND
ONLY
ON
TI
J
K
TI
I
J
J
K
K
GOOD
IJK
THE
SUM
ABOVE
IS
A
REGULAR
SUM
NOT
A
DISJOINT
SUM
SO
THE
TRILINEAR
FORMS
IN
IT
MAY
SHARE
INDICES
THE
ABOVE
DECOMPOSITION
OF
TIJK
WAS
FIRST
OBSERVED
BY
STOTHERS
WHEN
CONSIDERING
THE
SPECIAL
CASES
OF
THE
AND
TENSOR
POWERS
THIS
IS
THE
SHORTCUT
THAT
ALLOWED
US
TO
SIMPLIFY
OUR
ANALYSIS
LET
QIJK
TIJK
TI
I
J
J
K
K
BY
SUPERMULTIPLICATIVITY
THE
VALUE
WIJK
OF
QIJK
SATISFIES
WIJK
VIJK
VI
I
J
J
K
K
IF
THE
TRILINEAR
FORMS
QIJK
DIDN
T
SHARE
VARIABLES
THEN
WE
WOULD
IMMEDIATELY
OBTAIN
A
LOWER
BOUND
ON
THE
VALUE
VIJK
AS
IJK
VIJK
VI
I
J
J
K
K
HOWEVER
THE
TRILINEAR
FORMS
QIJK
MAY
SHARE
VARIABLES
AND
WE
LL
APPLY
THE
TECHNIQUES
FROM
THE
PREVIOUS
SECTION
TO
REMOVE
THE
DEPENDENCIES
TO
ANALYZE
THE
VALUE
VIJK
OF
TI
J
K
WE
FIRST
TAKE
THE
N
TH
TENSOR
POWER
OF
TI
J
K
THE
N
TH
TENSOR
POWER
OF
TK
I
J
AND
THE
N
TH
TENSOR
POWER
OF
TJ
K
I
AND
THEN
TENSOR
MULTIPLY
THESE
ALTOGETHER
BY
THE
DEFINITION
OF
VALUE
VI
J
K
IS
AT
LEAST
THE
TH
ROOT
OF
THE
VALUE
OF
THE
NEW
TRILINEAR
FORM
HERE
IS
HOW
WE
PROCESS
THE
N
TH
TENSOR
POWER
OF
TI
J
K
THE
POWERS
OF
TK
I
J
AND
TJ
K
I
ARE
PROCESSED
SIMILARLY
WE
PICK
VALUES
X
I
FOR
EACH
BLOCK
I
OF
THE
K
TENSOR
POWER
OF
C
SO
THAT
I
XI
SET
TO
ALL
X
VARIABLES
EXCEPT
THOSE
THAT
HAVE
EXACTLY
XI
N
POSITIONS
OF
THEIR
INDEX
WHICH
ARE
MAPPED
TO
I
I
I
BY
PK
PK
K
FOR
ALL
I
N
THE
NUMBER
OF
NONZERO
X
BLOCKS
IS
N
X
I
I
SIMILARLY
PICK
VALUES
YJ
FOR
THE
Y
VARIABLES
WITH
J
YJ
AND
RETAIN
ONLY
THOSE
WITH
YJ
INDEX
POSITIONS
MAPPED
TO
J
J
J
SIMILARLY
PICK
VALUES
ZK
FOR
THE
Z
VARIABLES
WITH
K
ZK
AND
RETAIN
ONLY
THOSE
WITH
ZK
INDEX
POSITIONS
MAPPED
TO
K
K
K
N
THE
NUMBER
OF
NONZERO
Y
BLOCKS
IS
N
Y
THE
NUMBER
J
J
N
OF
NONZERO
Z
BLOCKS
IS
N
ZK
K
FOR
I
J
K
P
K
I
J
WHICH
ARE
VALID
BLOCKS
OF
THE
K
TENSOR
POWER
OF
C
WITH
GOOD
I
J
K
LET
ΑIJK
BE
VARIABLES
SUCH
THAT
XI
J
ΑIJK
YJ
I
ΑIJK
AND
ZK
I
ΑIJK
AFTER
TAKING
THE
TENSOR
PRODUCT
OF
WHAT
IS
REMAINING
OF
THE
N
TH
TENSOR
POWERS
OF
TI
J
K
TK
I
J
AND
TJ
K
I
THE
NUMBER
BX
I
WPOS
POS
MOD
M
POS
BY
I
WPOS
POS
MOD
M
POS
BZ
I
P
K
WPOS
POS
MOD
M
POS
WE
THEN
SET
TO
ALL
VARIABLES
THAT
DO
NOT
HAVE
BLOCKS
HASHING
TO
ELEMENTS
OF
AGAIN
ANY
SURVIVING
TRIPLE
HAS
ALL
VARIABLES
BLOCKS
MAPPED
TO
THE
SAME
ELEMENT
OF
THE
EXPECTED
FRACTION
OF
TRIPLES
REMAINING
IS
M
Ε
M
M
Ε
AS
BEFORE
WE
DO
THE
PRUNING
OF
THE
TRIPLES
MAPPED
TO
EACH
ELEMENT
OF
SEPARATELY
THE
EXPECTED
NUMBER
OF
UNORDERED
PAIRS
OF
TRIPLES
SHARING
AN
X
Y
OR
Z
BLOCK
IS
Γℵ
ℵ
M
Γℵ
C
M
FOR
LARGE
CONSTANT
C
AND
THE
NUMBER
OF
REMAINING
BLOCK
TRIPLES
OVER
ALL
ELEMENTS
OF
IS
Ω
Γℵ
M
Ε
Ω
Γ
M
Ε
RECALL
THAT
Γ
IS
THE
NUMBER
OF
BLOCKS
AND
Γℵ
WAS
THE
ORIGINAL
NUMBER
OF
TRIPLES
ANALOGOUSLY
TO
WE
WILL
LET
Ε
GO
TO
AND
SO
THE
EXPECTED
NUMBER
OF
REMAINING
TRIPLES
IS
ROUGHLY
Γ
HENCE
WE
CAN
PICK
A
SETTING
OF
THE
WI
VARIABLES
SO
THAT
ROUGHLY
Γ
TRIPLES
REMAIN
WE
HAVE
OBTAINED
ABOUT
Γ
INDEPENDENT
TRILINEAR
FORMS
EACH
OF
WHICH
HAS
VALUE
AT
LEAST
VI
J
K
VI
I
J
J
K
K
ΑIJK
I
J
K
THIS
FOLLOWS
SINCE
VALUES
ARE
SUPERMULTIPLICATIVE
THE
FINAL
INEQUALITY
BECOMES
VI
J
K
N
N
N
VI
J
K
VI
I
J
J
K
K
ΑIJK
N
YJ
N
ZK
N
XI
I
J
K
RECALL
THAT
WE
HAVE
EQUALITIES
XI
J
ΑIJK
YJ
I
ΑIJK
AND
ZK
I
ΑIJK
IF
WE
FIX
XI
YJ
ZK
OVER
ALL
I
J
K
THIS
FORMS
A
LINEAR
SYSTEM
THE
LINEAR
SYSTEM
DOES
NOT
NECESSARILY
HAVE
FULL
RANK
AND
SO
WE
PICK
A
MINIMUM
SET
Δ
OF
VARIABLES
ΑIJK
SO
THAT
IF
THEY
ARE
TREATED
AS
CONSTANTS
THE
LINEAR
SYSTEM
HAS
FULL
RANK
AND
THE
VARIABLES
OUTSIDE
OF
Δ
CAN
BE
WRITTEN
AS
LINEAR
COMBINATIONS
OF
VARIABLES
IN
Δ
AND
OF
XI
YJ
ZK
NOW
WE
HAVE
THAT
FOR
EVERY
ΑIJK
ΑIJK
Y
ΑIJK
Y
EXPLOITING
THE
SYMMETRY
IN
THE
FULL
VERSION
WE
SHOW
HOW
TO
MODIFY
THE
PROCEDURE
IN
FIGURE
CONCLUSION
Y
Δ
XI
YJ
ZK
I
J
K
Δ
WE
USE
THE
LINEAR
FUNCTION
OBTAINED
WHERE
FOR
ALL
ΑIJK
FROM
THE
LINEAR
SYSTEM
ΑIJK
LET
ΔIJK
Y
Δ
Y
Y
LET
WI
J
K
VI
J
K
VI
I
J
J
K
K
THEN
I
ΑIJK
WI
J
K
WIJK
DEFINE
NX
Α
IJK
XI
X
I
I
WIJK
Α
IJK
YJ
Y
J
Α
K
WIJK
IJK
ZK
Z
K
Δ
IJK
WI
J
K
Α
IJK
X
I
J
K
WIJK
FOR
ANY
SET
NX
ΑIJK
Y
NX
NX
ΑIJK
Z
DEFINE
SIMILARLY
NY
I
J
K
WIJK
NZ
I
J
K
WIJK
NY
NZ
AND
NZ
NZ
SETTING
NY
NY
CONSIDER
THE
RIGHT
HAND
SIDE
OF
OUR
INEQUALITY
FOR
VIJK
ΑIJK
N
N
N
WI
J
K
N
YJ
N
ZK
N
XI
ACKNOWLEDGMENTS
I
J
K
NX
NY
N
N
NX
NY
N
YJ
N
XI
THE
AUTHOR
IS
GRATEFUL
TO
SATISH
RAO
FOR
ENCOURAGING
HER
TO
EXPLORE
THE
MATRIX
MULTIPLICATION
PROBLEM
MORE
THOROUGHLY
AND
TO
RYAN
WILLIAMS
FOR
HIS
UNCONDITIONAL
SUPPORT
THE
AUTHOR
WOULD
ALSO
LIKE
TO
THANK
FRANC
OIS
LE
GALL
WHO
ALERTED
HER
TO
STOTHERS
WORK
SUGGESTED
THE
USE
OF
NLOPT
AND
POINTED
OUT
THAT
THE
FEASIBLE
SOLUTION
OBTAINED
BY
STOTHERS
FOR
HIS
TENSOR
POWER
CONSTRAINT
PROGRAM
IS
NOT
OPTIMAL
AND
THAT
ONE
CAN
OBTAIN
Ω
WITH
A
DIFFERENT
SETTING
OF
THE
PARAMETERS
THE
AUTHOR
WAS
SUPPORTED
BY
NSF
GRANTS
CCF
AND
CCF
AT
UC
BERKELEY
AND
BY
NSF
GRANTS
AND
IIS
AND
AN
AFOSR
MURI
GRANT
AT
STANFORD
UNIVERSITY
IJK
N
Z
Y
Δ
Y
Α
Y
N
NZ
WI
J
K
N
ZK
I
J
K
Y
BY
LEMMA
THE
ABOVE
IS
MAXIMIZED
FOR
X
NX
NY
AND
NZ
FOR
ALL
AND
FOR
THESE
SETTINGS
FOR
IN
Z
N
X
STANCE
NN
IS
ESSENTIALLY
NX
N
POLY
N
NX
XI
AND
HENCE
AFTER
TAKING
THE
TH
ROOT
AND
LETTING
N
GO
TO
WE
OBTAIN
VI
J
K
NX
WE
APPLIED
OUR
PROCEDURES
TO
THE
SECOND
THIRD
FOURTH
AND
EIGHTH
TENSOR
POWERS
BY
APPLYING
OUR
PROCEDURES
TO
THE
SECOND
TENSOR
POWER
OF
THE
CW
CONSTRUCTION
WE
OBTAINED
THE
SAME
CONSTRAINT
PROGRAM
THAT
COPPERSMITH
AND
WINOGRAD
OBTAINED
THUS
OBTAINING
Ω
APPLYING
THEM
TO
THE
FOURTH
TENSOR
POWER
WE
OBTAINED
THE
SAME
CONSTRAINT
PROGRAM
AS
IN
STOTHERS
THESIS
HOWEVER
WE
WERE
ABLE
TO
OBTAIN
AN
IMPROVED
SOLUTION
Ω
BY
USING
BETTER
OPTIMIZATION
PROCEDURES
APPLYING
THE
PROCEDURES
TO
THE
EIGHTH
TENSOR
POWER
WAS
DONE
ENTIRELY
BY
COMPUTER
USING
A
COMBINATION
OF
MAPLE
AND
C
AND
THE
NONLINEAR
OPTIMIZATION
SOFTWARE
NLOPT
WE
ARE
NOT
CERTAIN
WHETHER
THE
OPTIMIZATION
SOFTWARE
WE
USED
TO
SOLVE
THE
RESULTING
CONSTRAINT
PROGRAM
FOUND
THE
OPTIMUM
SOLUTION
HOWEVER
WE
FOUND
A
FEASIBLE
SOLUTION
WHICH
SHOWS
THAT
Ω
IT
IS
POSSIBLE
THAT
A
BETTER
BOUND
CAN
BE
FOUND
FOR
THE
EIGHTH
TENSOR
POWER
AND
WE
BELIEVE
THAT
HIGHER
TENSOR
POWERS
OF
THE
CW
CONSTRUCTION
SHOULD
IMPROVE
THE
BOUND
ON
Ω
FURTHER
NEVERTHELESS
IT
SEEMS
THAT
IN
ORDER
TO
APPROACH
Ω
WE
NEED
A
NEW
BASIC
CONSTRUCTION
IT
IS
VERY
POSSIBLE
THAT
A
COMBINATION
OF
THE
GROUP
THEORETIC
APPROACH
OF
AND
OUR
TECHNIQUES
CAN
LEAD
TO
FURTHER
IMPROVEMENTS
A
MULTI
OBJECTIVE
ANT
COLONY
SYSTEM
ALGORITHM
FOR
VIRTUAL
MACHINE
PLACEMENT
IN
CLOUD
COMPUTING
YONGQIANG
GAO
A
HAIBING
GUAN
A
ZHENGWEI
QI
A
YANG
HOU
B
LIANG
LIU
C
A
SHANGHAI
KEY
LABORATORY
OF
SCALABLE
COMPUTING
AND
SYSTEMS
DEPARTMENT
OF
COMPUTER
SCIENCE
AND
ENGINEERING
SHANGHAI
JIAO
TONG
UNIVERSITY
SHANGHAI
CHINA
UM
SJTU
JOINT
INSTITUTE
SHANGHAI
JIAO
TONG
UNIVERSITY
SHANGHAI
CHINA
C
IBM
RESEARCH
CHINA
BEIJING
CHINA
B
A
R
T
I
C
L
E
I
N
F
O
ARTICLE
HISTORY
RECEIVED
DECEMBER
RECEIVED
IN
REVISED
FORM
APRIL
ACCEPTED
FEBRUARY
AVAILABLE
ONLINE
MARCH
KEYWORDS
MULTI
OBJECTIVE
OPTIMIZATION
ANT
COLONY
OPTIMIZATION
VIRTUAL
MACHINE
PLACEMENT
CLOUD
COMPUTING
A
B
T
R
A
C
T
VIRTUAL
MACHINE
PLACEMENT
IS
A
PROCESS
OF
MAPPING
VIRTUAL
MACHINES
TO
PHYSICAL
MACHINES
THE
OPTIMAL
PLACEMENT
IS
IMPORTANT
FOR
IMPROVING
POWER
EFFICIENCY
AND
RESOURCE
UTILIZATION
IN
A
CLOUD
COMPUTING
ENVIRONMENT
IN
THIS
PAPER
WE
PROPOSE
A
MULTI
OBJECTIVE
ANT
COLONY
SYSTEM
ALGORITHM
FOR
THE
VIRTUAL
MACHINE
PLACEMENT
PROBLEM
THE
GOAL
IS
TO
EFFICIENTLY
OBTAIN
A
SET
OF
NON
DOMINATED
SOLUTIONS
THE
PARETO
SET
THAT
SIMULTANEOUSLY
MINIMIZE
TOTAL
RESOURCE
WASTAGE
AND
POWER
CONSUMPTION
THE
PROPOSED
ALGORITHM
IS
TESTED
WITH
SOME
INSTANCES
FROM
THE
LITERATURE
ITS
SOLUTION
PERFORMANCE
IS
COMPARED
TO
THAT
OF
AN
EXISTING
MULTI
OBJECTIVE
GENETIC
ALGORITHM
AND
TWO
SINGLE
OBJECTIVE
ALGORITHMS
A
WELL
KNOWN
BINPACKING
ALGORITHM
AND
A
MAX
MIN
ANT
SYSTEM
MMAS
ALGORITHM
THE
RESULTS
SHOW
THAT
THE
PROPOSED
ALGORITHM
IS
MORE
EFFICIENT
AND
EFFECTIVE
THAN
THE
METHODS
WE
COMPARED
IT
TO
ELSEVIER
INC
ALL
RIGHTS
RESERVED
INTRODUCTION
IN
RECENT
YEAR
CLOUD
COMPUTING
HAS
BECOME
A
POPULAR
COMPUTING
PARADIGM
FOR
HOSTING
AND
DELIVERING
SERVICES
OVER
THE
INTERNET
THERE
ARE
THREE
MAJOR
TYPES
OF
CLOUD
COMPUTING
INFRASTRUCTURE
AS
A
SERVICE
IAAS
PLATFORM
AS
A
SERVICE
PAAS
AND
SOFTWARE
AS
A
SERVICE
SAAS
THE
ADOPTION
AND
DEPLOYMENT
OF
CLOUD
COMPUTING
PLATFORMS
HAVE
MANY
ATTRACTIVE
BENEFITS
SUCH
AS
RELIABILITY
QUALITY
OF
SERVICE
AND
ROBUSTNESS
TO
THE
CONSUMER
THE
CLOUD
APPEARS
TO
BE
INFINITE
AND
THE
CONSUMER
CAN
PURCHASE
AS
MUCH
OR
AS
LITTLE
COMPUTING
POWER
AS
THEY
NEED
FROM
A
PROVIDER
PERSPECTIVE
THE
KEY
ISSUE
IS
TO
MAXIMIZE
PROFITS
BY
MINIMIZING
THE
OPERATIONAL
COSTS
IN
THIS
REGARD
POWER
MANAGEMENT
IN
CLOUD
DATA
CENTERS
IS
BECOMING
A
CRUCIAL
ISSUE
SINCE
IT
DOMINATES
THE
OPERATIONAL
COSTS
MOREOVER
POWER
CONSUMPTION
IN
LARGE
SCALE
COMPUTER
SYSTEMS
LIKE
CLOUDS
ALSO
RAISES
MANY
OTHER
SERIOUS
ISSUES
INCLUDING
CARBON
DIOXIDE
AND
SYSTEM
RELIABILITY
THE
EMERGENCE
OF
CLOUD
COMPUTING
HAS
MADE
A
TREMENDOUS
IMPACT
ON
THE
INFORMATION
TECHNOLOGY
IT
INDUSTRY
OVER
THE
PAST
FEW
YEARS
WHERE
LARGE
COMPANIES
SUCH
AS
AMAZON
GOOGLE
SALESFORCE
IBM
MICROSOFT
AND
ORACLE
HAVE
BEGUN
TO
ESTABLISH
NEW
DATA
CENTERS
FOR
HOSTING
CLOUD
COMPUTING
APPLICATIONS
IN
VARIOUS
LOCATIONS
AROUND
THE
WORLD
TO
PROVIDE
REDUNDANCY
AND
ENSURE
RELIABILITY
IN
CASE
OF
SITE
FAILURES
THERE
ARE
A
NUMBER
OF
KEY
TECHNOLOGIES
THAT
MAKE
CLOUD
COMPUTING
POSSIBLE
ONE
OF
THE
MOST
IMPORTANT
IS
VIRTUALIZATION
VIRTUALIZATION
PROVIDES
A
PROMISING
APPROACH
THROUGH
WHICH
HARDWARE
RESOURCES
ON
ONE
OR
MORE
MACHINES
CAN
BE
DIVIDED
THROUGH
PARTIAL
OR
COMPLETE
MACHINE
SIMULATION
TIME
SHARING
HARDWARE
AND
SOFTWARE
PARTITIONING
INTO
MULTIPLE
EXECUTION
ENVIRONMENTS
EACH
OF
WHICH
CAN
ACT
AS
A
COMPLETE
SYSTEM
VIRTUALIZATION
ENABLES
DYNAMIC
SHARING
OF
PHYSICAL
RESOURCES
CORRESPONDING
AUTHOR
FAX
E
MAIL
ADDRESSES
GAOYONGQIANG
SJTU
EDU
CN
Y
GAO
HBGUAN
SJTU
EDU
CN
H
GUAN
QIZHWEI
SJTU
EDU
CN
Z
QI
SJTU
EDU
CN
Y
HOU
LIULIANG
CN
IBM
COM
L
LIU
SEE
FRONT
MATTER
ELSEVIER
INC
ALL
RIGHTS
RESERVED
HTTP
DX
DOI
ORG
J
JCSS
Y
GAO
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
IN
CLOUD
COMPUTING
ENVIRONMENTS
ALLOWING
MULTIPLE
APPLICATIONS
TO
RUN
IN
DIFFERENT
PERFORMANCE
ISOLATED
PLATFORMS
CALLED
VIRTUAL
MACHINES
VMS
IN
A
SINGLE
PHYSICAL
SERVER
THIS
TECHNOLOGY
ALSO
ENABLES
ON
DEMAND
OR
UTILITY
COMPUTING
A
JUST
INTIME
RESOURCE
PROVISIONING
MODEL
IN
WHICH
COMPUTING
RESOURCES
SUCH
AS
CPU
MEMORY
AND
DISK
SPACE
ARE
MADE
AVAILABLE
TO
APPLICATIONS
ONLY
AS
NEEDED
AND
NOT
ALLOCATED
STATICALLY
BASED
ON
THE
PEAK
WORKLOAD
DEMAND
THROUGH
VIRTUALIZATION
A
CLOUD
PROVIDER
CAN
ENSURE
THE
QUALITY
OF
SERVICE
QOS
DELIVERED
TO
THE
USERS
WHILE
ACHIEVING
A
HIGH
SERVER
UTILIZATION
AND
ENERGY
EFFICIENCY
VIRTUAL
MACHINE
PLACEMENT
IS
A
PROCESS
OF
MAPPING
VIRTUAL
MACHINES
TO
PHYSICAL
MACHINES
AS
VIRTUALIZATION
IS
A
CORE
TECHNOLOGY
OF
CLOUD
COMPUTING
THE
PROBLEM
OF
VIRTUAL
MACHINE
VM
PLACEMENT
HAS
BECOME
A
HOT
TOPIC
RECENTLY
THIS
VM
PLACEMENT
IS
AN
IMPORTANT
APPROACH
FOR
IMPROVING
POWER
EFFICIENCY
AND
RESOURCE
UTILIZATION
IN
CLOUD
INFRASTRUCTURES
SEVERAL
RESEARCH
WORKS
ADDRESSED
THE
IMPORTANCE
OF
PLACING
VMS
APPROPRIATELY
VOGELS
QUOTED
THE
BENEFIT
OF
PACKING
VMS
EFFICIENTLY
IN
SERVER
CONSOLIDATION
THE
PROXY
PLACEMENT
AND
OBJECT
PLACEMENT
REPLACEMENT
FOR
TRANSPARENT
DATA
REPLICATION
BEAR
SOME
RESEMBLANCE
TO
THE
ISSUES
WE
FACE
SINCE
THEY
ALL
ATTEMPT
TO
EXPLOIT
THE
FLEXIBILITY
AVAILABLE
IN
DETERMINING
PROPER
PLACEMENT
THE
FOLLOWING
ARE
SOME
OF
THE
APPROACHES
THAT
HAVE
BEEN
USED
TO
SOLVE
THE
VIRTUAL
MACHINE
PLACEMENT
PROBLEM
LINEAR
PROGRAMMING
A
TRADITIONAL
ANALYTICAL
APPROACH
IS
LINEAR
PROGRAMMING
FOR
EXAMPLE
CHAISIRI
ET
AL
PRESENTED
A
NICE
ALGORITHM
FOR
OPTIMAL
PLACEMENT
OF
VIRTUAL
MACHINES
ON
PHYSICAL
MACHINES
THE
GOAL
IS
THAT
THE
NUMBER
OF
USED
NODES
IS
MINIMUM
THEY
PROVIDED
APPROACHES
BASED
ON
LINEAR
AND
QUADRATIC
PROGRAMMING
IN
AND
THE
AUTHORS
DESCRIBED
LINEAR
PROGRAMMING
FORMULATIONS
OF
SERVER
CONSOLIDATION
PROBLEMS
THEY
ALSO
DESIGNED
EXTENSION
CONSTRAINTS
FOR
ALLOCATING
VIRTUAL
MACHINES
TO
A
SPECIFIC
SET
OF
PHYSICAL
SERVERS
THAT
CONTAIN
SOME
UNIQUE
ATTRIBUTE
RESTRICTING
THE
NUMBER
OF
VIRTUAL
MACHINES
IN
A
SINGLE
PHYSICAL
SERVER
ENSURING
THAT
SOME
VIRTUAL
MACHINES
ARE
ASSIGNED
TO
DIFFERENT
PHYSICAL
SERVERS
AND
LIMITING
THE
TOTAL
NUMBER
OF
MIGRATIONS
IN
ADDITION
THEY
DEVELOPED
AN
LP
RELAXATION
BASED
HEURISTIC
FOR
MINIMIZING
THE
COST
OF
SOLVING
THE
LINEAR
PROGRAMMING
PROBLEM
GENETIC
ALGORITHM
ANOTHER
APPROACH
TO
THIS
PROBLEM
IS
TO
USE
A
GENETIC
ALGORITHM
IN
THE
AUTHORS
PROPOSED
A
GENETIC
ALGORITHM
BASED
APPROACH
NAMELY
GABA
TO
ADAPTIVELY
SELF
RECONFIGURE
THE
VMS
IN
CLOUD
DATA
CENTERS
CONSISTING
OF
HETEROGENEOUS
NODES
GABA
CAN
EFFICIENTLY
DECIDE
THE
OPTIMAL
PHYSICAL
LOCATIONS
OF
VMS
ACCORDING
TO
TIME
VARYING
REQUIREMENTS
AND
THE
DYNAMIC
ENVIRONMENTAL
CONDITIONS
IN
THE
VM
PLACEMENT
PROBLEM
IS
FORMULATED
AS
A
MULTI
OBJECTIVE
OPTIMIZATION
PROBLEM
OF
SIMULTANEOUSLY
MINIMIZING
TOTAL
RESOURCE
WASTAGE
POWER
CONSUMPTION
AND
THERMAL
DISSIPATION
COSTS
A
MODIFIED
GENETIC
ALGORITHM
WITH
FUZZY
MULTI
OBJECTIVE
EVALUATION
WAS
PROPOSED
FOR
EFFICIENTLY
SEARCHING
THE
LARGE
SOLUTION
SPACE
AND
CONVENIENTLY
COMBINING
POSSIBLY
CONFLICTING
OBJECTIVES
CONSTRAINT
PROGRAMMING
CONSTRAINT
PROGRAMMING
METHODS
HAVE
ALSO
BEEN
APPLIED
FOR
VM
PLACEMENT
IN
VARIOUS
ENVIRONMENTS
VAN
ET
AL
PROPOSED
A
RESOURCE
MANAGEMENT
FRAMEWORK
COMBINING
A
UTILITY
BASED
DYNAMIC
VIRTUAL
MACHINE
PROVISIONING
MANAGER
AND
A
DYNAMIC
VM
PLACEMENT
MANAGER
THE
VM
PROVISIONING
AND
PLACEMENT
PROBLEMS
WERE
EXPRESSED
AS
TWO
CONSTRAINT
SATISFACTION
PROBLEMS
IN
THE
AUTHORS
PROPOSED
THE
ENTROPY
RESOURCE
MANAGER
FOR
HOMOGENEOUS
CLUSTERS
WHICH
PERFORMS
DYNAMIC
CONSOLIDATION
BASED
ON
CONSTRAINT
PROGRAMMING
AND
TAKES
INTO
ACCOUNT
BOTH
THE
PROBLEM
OF
ALLOCATING
THE
VMS
TO
THE
AVAILABLE
NODES
AND
THE
PROBLEM
OF
HOW
TO
MIGRATE
THE
VMS
TO
THESE
NODES
BIN
PACKING
THE
PROBLEM
OF
VM
PLACEMENT
IN
A
DATA
CENTER
IS
OFTEN
FORMULATED
AS
A
VARIANT
OF
THE
VECTOR
BIN
PACKING
PROBLEM
WHICH
IS
AN
NP
HARD
OPTIMIZATION
PROBLEM
VARIOUS
HEURISTICS
HAVE
BEEN
PROPOSED
FOR
THIS
PROBLEM
FOR
EXAMPLE
THE
PMAPPER
SYSTEM
TACKLED
POWER
COST
TRADEOFFS
UNDER
A
FIXED
PERFORMANCE
CONSTRAINT
BY
MINIMIZING
MIGRATION
COSTS
WHILE
PACKING
VMS
IN
A
SMALL
NUMBER
OF
MACHINES
THE
PACKING
ALGORITHM
IS
AN
EXTENSION
OF
THE
FIRST
FIT
DECREASING
FFD
HEURISTIC
MOREOVER
FELLER
ET
AL
PROPOSED
A
SINGLE
OBJECTIVE
ALGORITHM
BASED
ON
THE
MMAS
METAHEURISTIC
TO
MINIMIZE
THE
NUMBER
OF
PHYSICAL
MACHINES
REQUIRED
TO
SUPPORT
THE
CURRENT
LOAD
THE
MAJORITY
OF
THE
STUDIES
ON
VIRTUAL
MACHINE
PLACEMENT
FOCUS
ON
A
SINGLE
CRITERION
HOWEVER
MANY
REAL
WORLD
PROBLEMS
REQUIRE
TAKING
MULTIPLE
CRITERIA
INTO
ACCOUNT
FOR
THIS
REASON
RECENT
RESEARCH
TENDS
TO
LOOK
AT
THE
MULTIPLE
OBJECTIVE
SITUATION
THEREFORE
IN
THIS
PAPER
THE
PROBLEM
OF
VM
PLACEMENT
IS
FORMULATED
AS
A
MULTI
OBJECTIVE
COMBINATORIAL
OPTIMIZATION
PROBLEM
AIMING
TO
SIMULTANEOUSLY
OPTIMIZE
TOTAL
RESOURCE
WASTAGE
AND
POWER
CONSUMPTION
A
MODIFIED
VERSION
OF
THE
ANT
COLONY
SYSTEM
ACS
ALGORITHM
IS
PROPOSED
AND
DESIGNED
TO
DEAL
EFFECTIVELY
WITH
THE
POTENTIAL
LARGE
SOLUTION
SPACE
FOR
LARGE
SCALE
DATA
CENTERS
TO
THE
BEST
OF
OUR
KNOWLEDGE
THIS
STUDY
IS
THE
FIRST
APPLICATION
OF
THE
ACS
METAHEURISTIC
TO
A
MULTI
OBJECTIVE
VIRTUAL
MACHINE
PLACEMENT
PROBLEM
WHERE
BOTH
POWER
CONSUMPTION
AND
RESOURCE
WASTAGE
SHOULD
BE
MINIMIZED
THE
PERFORMANCE
OF
THE
PROPOSED
ALGORITHM
IS
COMPARED
TO
THAT
OF
A
MULTI
OBJECTIVE
GENETIC
ALGORITHM
AND
TWO
SINGLE
OBJECTIVE
ALGORITHMS
A
WELL
KNOWN
BIN
PACKING
ALGORITHM
AND
AN
MMAS
ALGORITHM
COMPUTATIONAL
EXPERIMENTS
ON
BENCHMARK
PROBLEMS
ARE
CARRIED
OUT
THE
RESULTS
SHOW
THAT
THE
PROPOSED
ALGORITHM
CAN
COMPETE
EFFICIENTLY
WITH
OTHER
PROMISING
APPROACHES
TO
THE
PROBLEM
THE
REMAINDER
OF
THIS
PAPER
IS
ORGANIZED
AS
FOLLOWS
IN
SECTION
WE
PROVIDE
AN
OVERVIEW
OF
BOTH
ANT
COLONY
OPTIMIZATION
AND
EVOLUTIONARY
MULTI
OBJECTIVE
OPTIMIZATION
AND
PRESENT
A
SIMPLE
PROCEDURE
TO
PERFORM
VM
PLACEMENT
IN
A
VIRTUALIZED
CLOUD
ENVIRONMENT
SECTION
FORMULATES
THE
VIRTUAL
MACHINE
PLACEMENT
PROBLEM
IN
SECTION
THE
PROPOSED
ALGORITHM
IS
PRESENTED
THE
COMPUTATIONAL
RESULTS
ON
BENCHMARK
PROBLEMS
ARE
GIVEN
IN
SECTION
WE
CONCLUDE
IN
SECTION
Y
GAO
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
FIG
AN
EXAMPLE
OF
VM
PLACEMENT
IN
A
VIRTUALIZED
ENVIRONMENT
BACKGROUND
AN
EXAMPLE
OF
VM
PLACEMENT
IN
A
VIRTUALIZED
CLOUD
ENVIRONMENT
FOR
EXAMPLE
LET
US
CONSIDER
THE
SITUATION
DEPICTED
IN
FIG
WE
HAVE
SEVEN
SERVERS
EACH
OF
WHICH
HAS
A
QUAD
CORE
PROCESSOR
WHICH
IS
CAPABLE
OF
EXECUTING
FOUR
VMS
THE
SYSTEM
IS
CURRENTLY
HOSTING
SEVEN
VIRTUALIZED
APPLICATION
LABELED
APPLICATION
TO
APPLICATION
A
SIMPLE
PROCESS
FOR
VM
PLACEMENT
IS
AS
FOLLOWS
FOR
EACH
SERVER
COMPUTE
APPLICATION
RESOURCE
REQUIREMENT
USING
SERVER
RESOURCE
USAGE
STATISTICS
OVER
A
PERIOD
OF
TIME
E
G
SEVERAL
WEEKS
CHOOSE
A
TARGET
SERVER
WITH
COMPATIBLE
VIRTUALIZATION
SOFTWARE
COMPARABLE
CPU
TYPES
SIMILAR
NETWORK
CONNECTIVITY
AND
USAGE
OF
SHARED
STORAGE
PLACE
THE
FIRST
VIRTUAL
MACHINE
ON
THE
FIRST
SERVER
IN
STEP
PLACE
THE
SECOND
VIRTUAL
MACHINE
ON
THE
SAME
SERVER
IF
IT
CAN
SATISFY
THE
RESOURCE
REQUIREMENTS
IF
NOT
ADD
A
NEW
PHYSICAL
MACHINE
AND
PLACE
THE
VM
ON
THIS
NEW
MACHINE
CONTINUE
THIS
STEP
UNTIL
EACH
OF
THE
VMS
HAS
BEEN
PLACED
ON
A
PHYSICAL
MACHINE
ADDING
A
NEW
PHYSICAL
MACHINE
WHEN
REQUIRED
THE
SET
OF
RESULTING
HOSTS
AT
THE
END
OF
STEP
COMPRISES
THE
CONSOLIDATED
SERVER
FARM
FINALLY
THE
NUMBER
OF
SERVERS
REQUIRED
IN
THE
CLUSTER
IS
REDUCED
FROM
DOWN
TO
ANT
COLONY
OPTIMIZATION
ANT
COLONY
OPTIMIZATION
ACO
IS
A
METAHEURISTIC
INSPIRED
BY
THE
OBSERVATION
OF
REAL
ANT
COLONIES
AND
BASED
UPON
THEIR
COLLECTIVE
FORAGING
BEHAVIOR
ANTS
ARE
SOCIAL
INSECTS
AND
LIVE
IN
COLONIES
THEIR
BEHAVIOR
IS
GOVERNED
BY
THE
GOAL
OF
COLONY
SURVIVAL
WHEN
SEARCHING
FOR
FOOD
ANTS
FREQUENTLY
TRAVEL
BETWEEN
THEIR
NEST
AND
FOOD
SOURCES
AT
THE
BEGINNING
ANTS
EXPLORE
THE
AREA
SURROUNDING
THEIR
NEST
IN
A
RANDOM
MANNER
WHILE
MOVING
ANTS
DEPOSIT
SPECIAL
SUBSTANCES
CALLED
PHEROMONES
ALONG
THEIR
PATHS
ANTS
CAN
SMELL
PHEROMONES
WHEN
CHOOSING
THEIR
WAY
THEY
TEND
TO
CHOOSE
IN
PROBABILITY
PATHS
MARKED
BY
STRONG
PHEROMONE
CONCENTRATIONS
AS
SOON
AS
AN
ANT
FINDS
A
FOOD
SOURCE
IT
EVALUATES
THE
QUANTITY
AND
THE
QUALITY
OF
THE
FOOD
AND
CARRIES
SOME
OF
IT
BACK
TO
THE
NEST
DURING
THE
RETURN
TRIP
THE
QUANTITY
OF
PHEROMONES
THAT
AN
ANT
LEAVES
ON
THE
GROUND
MAY
DEPEND
ON
THE
QUANTITY
AND
QUALITY
OF
THE
FOOD
THE
PHEROMONE
TRAILS
WILL
GUIDE
OTHER
ANTS
TO
THE
FOOD
SOURCE
THE
INDIRECT
COMMUNICATION
BETWEEN
THE
ANTS
VIA
PHEROMONE
TRAILS
ENABLES
THEM
TO
FIND
THE
SHORTEST
PATHS
BETWEEN
THEIR
NEST
AND
FOOD
SOURCES
ANT
COLONY
OPTIMIZATION
HAS
BEEN
SUCCESSFULLY
APPLIED
TO
SOLVE
NUMEROUS
OPTIMIZATION
PROBLEMS
SUCH
AS
THE
TRAVELING
SALESMAN
PROBLEM
THE
FLOW
SHOP
SCHEDULING
PROBLEM
AND
THE
QUADRATIC
ASSIGNMENT
PROBLEM
BESIDES
ITS
ORIGINAL
DOMAIN
OF
COMBINATORIAL
OPTIMIZATION
ACO
IS
ALSO
NOW
USED
TO
SOLVE
CONTINUOUS
OPTIMIZATION
PROBLEMS
SOME
EXTENSIONS
OF
ACO
ALGORITHMS
HAVE
BEEN
PROPOSED
IN
THE
LITERATURE
SUCH
AS
ACS
ANT
SYSTEM
AS
AND
MMAS
RECENTLY
THERE
HAVE
ALSO
BEEN
A
NUMBER
OF
STUDIES
EXTENDING
ACO
TO
THE
FIELD
OF
MULTI
OBJECTIVE
OPTIMIZATION
THESE
ALGORITHMS
MAINLY
DIFFER
WITH
RESPECT
TO
THE
THREE
FOLLOWING
POINTS
Y
GAO
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
PHEROMONE
UPDATE
WHEN
UPDATING
PHEROMONE
TRAILS
ONE
HAS
TO
DECIDE
ON
WHICH
OF
THE
CONSTRUCTED
SOLUTIONS
TO
LAY
PHEROMONES
THERE
ARE
USUALLY
TWO
STRATEGIES
TO
UPDATE
THE
PHEROMONE
TRAILS
A
FIRST
STRATEGY
IS
TO
SELECT
THE
ITERATION
BEST
OR
BEST
SO
FAR
SOLUTIONS
TO
UPDATE
THE
PHEROMONE
MATRICES
WITH
RESPECT
TO
EACH
OBJECTIVE
A
SECOND
STRATEGY
IS
TO
COLLECT
AND
STORE
THE
NON
DOMINATED
SOLUTIONS
IN
AN
EXTERNAL
SET
ONLY
THE
SOLUTIONS
IN
THE
NON
DOMINATED
SET
ARE
ALLOWED
TO
UPDATE
THE
PHEROMONES
DEFINITION
OF
PHEROMONE
AND
HEURISTIC
INFORMATION
AT
EACH
STEP
OF
THE
CONSTRUCTION
OF
A
SOLUTION
A
CANDIDATE
IS
CHOSEN
RELATIVE
TO
A
TRANSITION
PROBABILITY
WHICH
DEPENDS
ON
TWO
FACTORS
A
PHEROMONE
FACTOR
AND
A
HEURISTIC
FACTOR
THERE
ARE
TWO
APPROACHES
TO
DEFINE
THE
PHEROMONE
HEURISTIC
INFORMATION
USING
ONE
OR
MULTIPLE
MATRICES
WHEN
ONLY
ONE
MATRIX
IS
UTILIZED
THE
PHEROMONE
INFORMATION
ASSOCIATED
WITH
EACH
OBJECTIVE
IS
COMBINED
TO
REDUCE
THE
MULTIPLE
OBJECTIVES
INTO
A
SINGLE
ONE
IF
MULTIPLE
MATRICES
ARE
USED
USUALLY
EACH
MATRIX
CORRESPONDS
TO
ONE
OBJECTIVE
WITH
RESPECT
TO
THE
PHEROMONE
INFORMATION
EACH
MATRIX
MAY
CONTAIN
DIFFERENT
VALUES
DEPENDING
ON
THE
IMPLEMENTATION
STRATEGY
APPLIED
THE
SAME
APPLIES
TO
THE
HEURISTIC
INFORMATION
PHEROMONE
AND
HEURISTIC
AGGREGATION
WHENEVER
MULTIPLE
MATRICES
ARE
USED
ONE
MUST
USE
SOME
FORM
OF
AGGREGATION
PROCEDURE
TO
AGGREGATE
THE
PHEROMONE
HEURISTIC
MATRICES
THERE
ARE
THREE
COMMON
STRATEGIES
FOR
THIS
THE
WEIGHTED
SUM
WHERE
MATRICES
ARE
AGGREGATED
BY
A
WEIGHTED
SUM
THE
WEIGHTED
PRODUCT
WHERE
MATRICES
ARE
AGGREGATED
BY
A
WEIGHTED
PRODUCT
AND
RANDOM
WHERE
AT
EACH
STEP
A
RANDOM
OBJECTIVE
IS
SELECTED
TO
BE
OPTIMIZED
WHENEVER
WEIGHTS
ARE
USED
FOR
AGGREGATING
MULTIPLE
MATRICES
TWO
STRATEGIES
CAN
BE
APPLIED
FOR
SETTING
THE
WEIGHTS
USED
AT
EACH
ITERATION
OF
THE
ALGORITHM
A
DYNAMICALLY
WHERE
EACH
ANT
MAY
BE
ASSIGNED
A
DIFFERENT
WEIGHT
FROM
THE
OTHER
ANTS
AT
EACH
ITERATION
B
FIXED
WHERE
WE
CAN
ASSIGN
TO
ALL
ANTS
THE
SAME
WEIGHT
AND
EACH
OBJECTIVE
HAS
THE
SAME
IMPORTANCE
DURING
THE
ENTIRE
ALGORITHM
RUN
EVOLUTIONARY
MULTI
OBJECTIVE
OPTIMIZATION
MULTI
OBJECTIVE
EVOLUTIONARY
ALGORITHMS
MOEAS
ARE
STOCHASTIC
OPTIMIZATION
METHODS
WHICH
USUALLY
USE
A
POPULATIONBASED
APPROACH
TO
FIND
PARETO
OPTIMAL
SOLUTIONS
THE
MAJORITY
OF
EXISTING
MOEAS
USE
THE
CONCEPT
OF
DOMINANCE
DURING
SELECTION
THEREFORE
WE
FOCUS
HERE
ON
THE
CLASS
OF
DOMINANCE
BASED
MOEAS
ONLY
THE
FORMAL
DEFINITION
OF
THE
DOMINANCE
CONCEPT
IS
AS
FOLLOWS
LET
US
CONSIDER
WITHOUT
LOSS
OF
GENERALITY
A
MULTI
OBJECTIVE
MINIMIZATION
PROBLEM
WITH
M
PARAMETERS
DECISION
VARIABLES
AND
N
OBJECTIVES
MINIMIZE
F
X
F
XM
F
N
XM
WHERE
X
XM
X
F
F
FN
Y
WHERE
X
IS
CALLED
THE
DECISION
PARAMETER
VECTOR
X
PARAMETER
SPACE
F
OBJECTIVE
VECTOR
AND
Y
OBJECTIVE
SPACE
HERE
WE
CONSIDER
THE
TERM
SOLUTION
AS
A
DECISION
VECTOR
AND
THE
TERM
POINT
AS
THE
CORRESPONDING
OBJECTIVE
VECTOR
A
SOLUTION
X
IS
SAID
TO
DOMINATE
THE
OTHER
SOLUTION
X
IF
THE
BOTH
FOLLOWING
CONDITIONS
ARE
TRUE
SEE
THE
SOLUTION
X
IS
NOT
WORSE
THAN
X
IN
ANY
OBJECTIVE
THE
SOLUTION
X
IS
STRICTLY
BETTER
THAN
X
IN
AT
LEAST
ONE
OBJECTIVE
ALL
POINTS
WHICH
ARE
NOT
DOMINATED
BY
ANY
OTHER
POINT
ARE
CALLED
THE
NON
DOMINATED
POINTS
USUALLY
THE
NON
DOMINATED
POINTS
TOGETHER
CONSTITUTE
A
FRONT
IN
THE
OBJECTIVE
SPACE
AND
ARE
OFTEN
VISUALIZED
TO
REPRESENT
A
NON
DOMINATION
FRONT
THE
POINTS
LYING
ON
THE
NON
DOMINATION
FRONT
BY
DEFINITION
DO
NOT
GET
DOMINATED
BY
ANY
OTHER
POINT
IN
THE
OBJECTIVE
SPACE
HENCE
THEY
ARE
PARETO
OPTIMAL
POINTS
TOGETHER
THEY
MAKE
UP
THE
PARETO
OPTIMAL
FRONT
AND
THE
CORRESPONDING
VARIABLE
VECTORS
ARE
CALLED
PARETO
OPTIMAL
SOLUTIONS
THE
ABOVE
CONCEPT
CAN
ALSO
BE
EXTENDED
TO
FIND
A
NON
DOMINATED
SOLUTION
SET
LET
US
CONSIDER
A
SET
OF
N
SOLUTIONS
EACH
HAVING
M
M
OBJECTIVE
FUNCTION
VALUES
IN
OUR
WORK
THE
FOLLOWING
PROCEDURE
IS
USED
TO
FIND
THE
NON
DOMINATED
SOLUTION
SET
BEGIN
WITH
I
FOR
ALL
J
I
COMPARE
SOLUTIONS
X
I
AND
X
J
FOR
DOMINATION
USING
THE
ABOVE
TWO
CONDITIONS
FOR
ALL
M
OBJECTIVES
IF
FOR
ANY
J
X
I
IS
DOMINATED
BY
X
J
MARK
X
I
AS
DOMINATED
INCREMENT
I
BY
ONE
AND
GO
TO
STEP
IF
ALL
SOLUTIONS
THAT
IS
WHEN
I
N
IS
REACHED
IN
THE
SET
ARE
CONSIDERED
GO
TO
STEP
ELSE
INCREMENT
I
BY
ONE
AND
GO
TO
STEP
STEP
ALL
SOLUTIONS
THAT
ARE
NOT
MARKED
DOMINATED
ARE
NON
DOMINATED
SOLUTIONS
STEP
STEP
STEP
STEP
PROBLEM
STATEMENT
AND
FORMULATION
IN
A
CLOUD
ENVIRONMENT
WE
HAVE
A
POOL
OF
SERVER
NODES
WITH
APPLICATIONS
RUNNING
ON
THEM
SUPPOSE
THAT
THE
CLUSTER
IS
FULLY
VIRTUALIZED
AND
ALL
THE
APPLICATIONS
ARE
RUNNING
ON
VMS
THE
PROBLEM
OF
VM
PLACEMENT
ACROSS
A
POOL
OF
SERVER
NODES
Y
GAO
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
IS
RELATED
TO
THE
MULTIDIMENSIONAL
VECTOR
PACKING
PROBLEMS
DIMENSIONS
IN
THE
PACKING
PROBLEM
ARE
RESOURCE
UTILIZATIONS
IN
OUR
WORK
WE
USE
TWO
DIMENSIONS
TO
CHARACTERIZE
A
VM
AND
A
SERVER
NODE
CPU
AND
MEMORY
WE
DO
NOT
CONSIDER
THE
DISK
SIZE
DIMENSION
BECAUSE
WE
ASSUME
THAT
NETWORK
ATTACHED
STORAGE
NAS
IS
USED
AS
MAIN
STORAGE
ACROSS
THE
CLUSTER
IF
TWO
VMS
ARE
RUNNING
ON
THE
SAME
SERVER
THE
CPU
UTILIZATION
OF
THE
SERVER
IS
ESTIMATED
AS
THE
SUM
OF
THE
CPU
UTILIZATIONS
OF
THE
TWO
VMS
THIS
IS
THE
CASE
WITH
MEMORY
RESOURCES
FOR
EXAMPLE
LET
BE
A
PAIR
OF
THE
CPU
AND
MEMORY
REQUESTS
OF
A
VM
AND
BE
THAT
OF
ANOTHER
VM
THEN
THE
UTILIZATIONS
OF
A
SERVER
ACCOMMODATING
THE
TWO
VMS
ARE
ESTIMATED
AT
I
E
THE
SUM
OF
THE
VECTORS
TO
PREVENT
CPU
AND
MEMORY
USAGE
OF
A
SERVER
FROM
REACHING
WE
HAVE
TO
IMPOSE
AN
UPPER
BOUND
ON
RESOURCE
UTILIZATION
OF
A
SINGLE
SERVER
WITH
SOME
THRESHOLD
VALUE
THE
MAIN
IDEA
BEHIND
THIS
IS
THAT
UTILIZATION
CAN
CAUSE
SEVERE
PERFORMANCE
DEGRADATION
AND
VM
LIVE
MIGRATION
TECHNOLOGY
CONSUMES
SOME
AMOUNT
OF
CPU
PROCESSING
CAPABILITY
ON
THE
MIGRATING
NODE
RESOURCE
WASTAGE
MODELING
THE
REMAINING
RESOURCES
AVAILABLE
ON
EACH
SERVER
MAY
VARY
GREATLY
WITH
DIFFERENT
VM
PLACEMENT
SOLUTIONS
TO
FULLY
UTILIZE
MULTIDIMENSIONAL
RESOURCES
THE
FOLLOWING
EQUATION
IS
USED
TO
CALCULATE
THE
POTENTIAL
COST
OF
WASTED
RESOURCES
P
WJ
L
J
LMJ
Ε
P
U
J
UM
J
P
WHERE
W
J
DENOTES
THE
RESOURCE
WASTAGE
OF
THE
J
TH
SERVER
U
J
AND
U
M
REPRESENT
THE
NORMALIZED
CPU
AND
MEMORY
RESOURCE
J
P
LJ
AND
L
M
REPRESENT
THE
NORMALIZED
REMAINING
CPU
AND
MEMORY
USAGE
I
E
THE
RATIO
OF
USED
RESOURCE
TO
TOTAL
RESOURCE
J
RESOURCE
Ε
IS
A
VERY
SMALL
POSITIVE
REAL
NUMBER
AND
ITS
VALUE
IS
SET
TO
BE
THE
KEY
IDEA
BEHIND
THE
ABOVE
EQUATION
IS
TO
MAKE
EFFECTIVE
USE
OF
THE
RESOURCES
IN
ALL
DIMENSIONS
AND
BALANCE
THE
RESOURCES
LEFT
ON
EACH
SERVER
ALONG
DIFFERENT
DIMENSIONS
POWER
CONSUMPTION
MODELING
RECENT
STUDIES
SHOW
THAT
THE
POWER
CONSUMPTION
OF
SERVERS
CAN
BE
ACCURATELY
DESCRIBED
BY
A
LINEAR
RELATIONSHIP
BETWEEN
THE
POWER
CONSUMPTION
AND
CPU
UTILIZATION
THIS
LINEAR
RELATIONSHIP
IS
ALSO
CONFIRMED
BY
OUR
PROFILING
CONDUCTED
ON
A
DELL
SERVER
IN
ORDER
TO
SAVE
ENERGY
SERVERS
ARE
TURNED
OFF
WHEN
THEY
ARE
IDLE
HENCE
THEIR
IDLE
POWER
IS
NOT
PART
OF
THE
TOTAL
ENERGY
CONSUMPTION
FINALLY
WE
DEFINED
THE
POWER
CONSUMPTION
OF
THE
J
TH
SERVER
AS
A
FUNCTION
OF
THE
CPU
UTILIZATION
AS
SHOWN
IN
EQ
PJ
BUSY
P
J
P
P
IDLE
U
J
P
IDLE
U
CJ
J
J
OTHERWISE
BUSY
WHERE
P
IDLE
AND
P
J
ARE
THE
AVERAGE
POWER
VALUES
WHEN
THE
J
TH
SERVER
IS
IDLE
AND
FULLY
UTILIZED
RESPECTIVELY
IN
OUR
J
SIMULATION
EXPERIMENTS
THE
VALUES
HAVE
BEEN
FIXED
TO
AND
WATT
ACCORDING
TO
THE
MEASUREMENTS
PERFORMED
ON
A
DELL
SERVER
OPTIMIZATION
FORMULATION
NEXT
WE
FORMALIZE
THE
VM
PLACEMENT
OPTIMIZATION
PROBLEM
SUPPOSE
THAT
WE
ARE
GIVEN
N
VMS
APPLICATIONS
I
I
THAT
ARE
TO
BE
PLACED
ON
M
SERVERS
J
J
FOR
SIMPLICITY
WE
ASSUME
THAT
NONE
OF
THE
VMS
REQUIRES
MORE
RESOURCE
THAN
CAN
BE
PROVIDED
BY
A
SINGLE
SERVER
LET
R
P
I
BE
CPU
DEMAND
OF
EACH
VM
T
P
J
BE
THE
THRESHOLD
OF
CPU
UTILIZATION
ASSOCIATED
WITH
EACH
SERVER
R
M
I
BE
THE
MEMORY
DEMAND
OF
EACH
VM
AND
T
M
J
BE
THE
THRESHOLD
OF
MEMORY
UTILIZATION
ASSOCIATED
WITH
EACH
SERVER
WE
USE
TWO
BINARY
VARIABLES
XI
J
AND
Y
J
THE
BINARY
VARIABLE
XI
J
INDICATES
IF
VM
I
IS
ASSIGNED
TO
SERVER
J
AND
THE
BINARY
VARIABLE
Y
J
INDICATES
WHETHER
SERVER
J
IS
IN
USE
OR
NOT
OUR
OBJECTIVE
IS
TO
SIMULTANEOUSLY
MINIMIZE
THE
POWER
CONSUMPTION
AND
THE
RESOURCE
WASTAGE
THE
PLACEMENT
PROBLEM
CAN
THEREFORE
BE
FORMULATED
AS
MINIMIZE
M
PJ
M
J
MINIMIZE
M
J
J
WJ
YJ
M
J
BUSY
PJ
P
IDLE
J
N
XI
J
R
P
I
P
IDLE
J
I
T
P
J
NI
XI
J
R
P
I
T
M
J
NI
XI
J
R
MI
Ε
N
N
YJ
I
X
I
J
R
P
I
I
X
I
J
R
M
I
SUBJECT
TO
M
J
XI
J
I
I
Y
GAO
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
N
R
P
I
XI
J
T
P
J
Y
J
J
J
R
MI
XI
J
T
M
J
Y
J
J
J
J
J
AND
I
I
I
N
I
Y
J
X
I
J
CONSTRAINT
ASSIGNS
A
VM
I
TO
ONLY
ONE
OF
THE
SERVERS
CONSTRAINTS
AND
MODEL
THE
CAPACITY
CONSTRAINT
OF
THE
SERVER
CONSTRAINT
DEFINES
THE
DOMAIN
OF
THE
VARIABLES
OF
THE
PROBLEM
GIVEN
A
SET
OF
N
VIRTUAL
MACHINES
AND
A
SET
OF
M
PHYSICAL
MACHINES
THERE
ARE
A
TOTAL
OF
MN
POSSIBLE
VM
PLACEMENT
SOLUTIONS
IT
IS
THEREFORE
TYPICALLY
IMPRACTICAL
TO
MAKE
A
COMPLETE
ENUMERATION
OF
ALL
POSSIBLE
SOLUTIONS
TO
FIND
THE
BEST
SOLUTIONS
THE
FOLLOWING
SHOWS
HOW
TO
APPLY
AN
ACO
ALGORITHM
TO
EFFICIENTLY
SEARCH
FOR
GOOD
SOLUTIONS
IN
LARGE
SOLUTION
SPACES
THE
DESCRIPTION
OF
THE
PROPOSED
MULTI
OBJECTIVE
ANT
COLONY
SYSTEM
ALGORITHM
THE
ALGORITHM
PROPOSED
TO
SOLVE
THE
PROBLEMS
FORMULATED
IN
SECTION
IS
MAINLY
BASED
ON
AN
ACS
A
FEASIBLE
AND
COMPLETE
SOLUTION
OF
THE
FORMULATED
MULTI
OBJECTIVE
VM
PLACEMENT
PROBLEM
IS
CONSIDERED
AS
A
PERMUTATION
OF
VM
ASSIGNMENT
THE
TERMS
HOST
AND
SERVER
WILL
BE
USED
INTERCHANGEABLY
IN
THIS
PAPER
AN
ASSIGNMENT
OF
A
VM
TO
A
HOST
IS
CALLED
A
MOVEMENT
AND
REPRESENTED
BY
VM
HOST
THE
PSEUDOCODE
OF
THE
PROPOSED
MULTI
OBJECTIVE
ANT
COLONY
SYSTEM
ALGORITHM
VMPACS
IS
DEPICTED
IN
FIG
THIS
ALGORITHM
WORKS
AS
FOLLOWS
IN
AN
INITIALIZATION
PHASE
THE
PARAMETERS
ARE
INITIALIZED
AND
ALL
THE
PHEROMONE
TRAILS
ARE
SET
TO
IN
THE
ITERATIVE
PART
EACH
ANT
RECEIVES
ALL
VM
REQUESTS
INTRODUCES
A
PHYSICAL
SERVER
AND
STARTS
ASSIGNING
VMS
TO
HOSTS
THIS
IS
ACHIEVED
BY
THE
USE
OF
A
PSEUDO
RANDOM
PROPORTIONAL
RULE
WHICH
DESCRIBES
THE
DESIRABILITY
FOR
AN
ANT
TO
CHOOSE
A
PARTICULAR
VM
AS
THE
NEXT
ONE
TO
PACK
INTO
ITS
CURRENT
HOST
THIS
RULE
IS
BASED
ON
THE
INFORMATION
ABOUT
THE
CURRENT
PHEROMONE
CONCENTRATION
ON
THE
MOVEMENT
AND
A
HEURISTIC
WHICH
GUIDES
THE
ANTS
TOWARDS
CHOOSING
THE
MOST
PROMISING
VMS
A
LOCAL
PHEROMONE
UPDATE
IS
PERFORMED
ONCE
AN
ARTIFICIAL
ANT
HAS
BUILT
A
MOVEMENT
AFTER
ALL
ANTS
HAVE
CONSTRUCTED
THEIR
SOLUTIONS
A
GLOBAL
UPDATE
IS
PERFORMED
WITH
EACH
SOLUTION
OF
THE
CURRENT
PARETO
SET
DEFINITION
OF
THE
PHEROMONE
TRAIL
AND
THE
HEURISTIC
INFORMATION
SIMILARLY
TO
THE
GENERAL
IMPLEMENTATION
OF
ACO
ALGORITHMS
VMPACS
STARTS
WITH
A
PHEROMONE
TRAILS
MATRIX
AND
A
HEURISTIC
INFORMATION
MATRIX
THE
QUALITY
OF
AN
ACO
IMPLEMENTATION
DEPENDS
GREATLY
ON
THE
DEFINITION
OF
THE
MEANING
OF
THE
PHEROMONE
TRAIL
IT
IS
CRUCIAL
TO
CHOOSE
A
DEFINITION
WHICH
CONFORMS
TO
THE
FEATURE
OF
THE
PROBLEM
ONE
MAY
CONSIDER
TWO
DIFFERENT
PHEROMONE
STRUCTURES
ONE
THAT
ASSOCIATES
A
PHEROMONE
TRAIL
WITH
EVERY
MOVEMENT
VM
HOST
OR
ONE
THAT
ASSOCIATES
A
PHEROMONE
TRAIL
WITH
EVERY
PAIR
OF
VMS
IN
THIS
PAPER
THE
FIRST
WAY
OF
LAYING
PHEROMONE
TRAILS
IS
USED
I
E
THE
PHEROMONE
TRAIL
ΤI
J
WILL
BE
DEFINED
AS
THE
FAVORABILITY
OF
PACKING
VM
I
INTO
HOST
J
IN
THE
INITIALIZATION
PHASE
INITIAL
PHEROMONE
LEVEL
IS
CALCULATED
BY
N
P
W
WHERE
N
IS
THE
NUMBER
OF
VMS
IS
THE
SOLUTION
GENERATED
BY
THE
FFD
HEURISTIC
AND
W
IS
THE
RESOURCE
WASTAGE
OF
THE
SOLUTION
P
IS
THE
NORMALIZED
POWER
CONSUMPTION
OF
THE
SOLUTION
AND
ITS
VALUE
IS
CALCULATED
ACCORDING
TO
THE
FOLLOWING
EQUATION
P
M
P
J
P
MAX
J
J
WHERE
P
MAX
IS
THE
PEAK
POWER
CONSUMPTION
OF
SERVER
J
J
APART
FROM
PHEROMONE
TRAILS
ANOTHER
IMPORTANT
FACTOR
IN
AN
ACO
APPLICATION
IS
THE
CHOICE
OF
A
GOOD
HEURISTIC
WHICH
WILL
BE
USED
IN
COMBINATION
WITH
THE
PHEROMONE
INFORMATION
TO
BUILD
SOLUTIONS
IT
GUIDES
THE
PROBABILISTIC
SOLUTION
CONSTRUCTION
OF
ANTS
WITH
PROBLEM
SPECIFIC
KNOWLEDGE
THE
HEURISTIC
INFORMATION
IS
DENOTED
BY
ΗI
J
THIS
INFORMATION
INDICATES
THE
DESIRABILITY
OF
ASSIGNING
VM
I
TO
HOST
J
IN
ORDER
TO
ACCURATELY
ASSESS
THE
DESIRABILITY
OF
EACH
MOVE
THE
HEURISTIC
INFORMATION
IS
DYNAMICALLY
COMPUTED
ACCORDING
TO
THE
CURRENT
STATE
OF
THE
ANT
SINCE
THE
HEURISTIC
INFORMATION
IS
CALCULATED
FOR
ALL
MOVEMENTS
IN
ALL
ANTS
IT
MAY
SIGNIFICANTLY
AFFECT
THE
EFFICIENCY
OF
THE
ALGORITHM
TO
OVERCOME
SUCH
DIFFICULTIES
IT
THEREFORE
SHOULD
BE
COMPUTED
IN
AN
EFFICIENT
MANNER
THE
PROPOSED
METHOD
TO
CALCULATE
THE
HEURISTIC
INFORMATION
CONSIDERS
THE
PARTIAL
CONTRIBUTION
OF
EACH
MOVE
TO
THE
OBJECTIVE
FUNCTION
VALUE
LET
PL
BE
A
LIST
COMPOSED
OF
ALL
THE
SERVERS
WHEN
CONSTRUCTING
A
SOLUTION
EVERY
ANT
STARTS
WITH
THE
SET
OF
ALL
VMS
TO
BE
PLACED
AND
THE
LIST
PL
ARRANGED
IN
RANDOMLY
ORDER
IT
INITIALLY
ASSIGNS
VMS
ONE
BY
ONE
TO
THE
FIRST
HOST
IN
THE
LIST
PL
THEN
ASSIGNS
TO
THE
SECOND
HOST
AND
SO
ON
TILL
ALL
VMS
ARE
ASSIGNED
THEREFORE
WHILE
CALCULATING
THE
VALUE
OF
ΗI
J
THE
PERMUTATION
OF
VM
ASSIGNMENTS
FROM
THE
HOST
TO
HOST
J
IS
KNOWN
THE
PARTIAL
CONTRIBUTION
OF
ASSIGNING
VM
I
TO
HOST
J
FOR
THE
FIRST
OBJECTIVE
FUNCTION
CAN
THEREFORE
BE
CALCULATED
AS
FOLLOWS
ΗI
J
Ε
J
MAX
V
P
V
P
V
Y
GAO
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
FIG
THE
VMPACS
ALGORITHM
SIMILARLY
TO
THE
FIRST
OBJECTIVE
FUNCTION
THE
PARTIAL
CONTRIBUTION
OF
ASSIGNING
VM
I
TO
HOST
J
FOR
THE
SECOND
ONE
CAN
BE
CALCULATED
AS
FOLLOWS
ΗI
J
Ε
J
V
WV
THERE
ARE
SEVERAL
WAYS
TO
COMBINE
DESIRABILITY
IN
MULTI
OBJECTIVE
PROBLEM
TO
FIND
THE
TOTAL
DESIRABILITY
OF
EACH
MOVEMENT
IN
THIS
PAPER
WE
PROPOSE
THE
FOLLOWING
FORMULA
TO
CALCULATE
THE
TOTAL
DESIRABILITY
OF
ASSIGNING
VM
I
TO
HOST
J
ΗI
J
ΗI
J
ΗI
J
Y
GAO
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
CONSTRUCTING
A
SOLUTION
IN
THE
PROCESS
OF
MAKING
ASSIGNMENTS
THE
ANT
K
SELECTS
A
VM
I
AS
THE
NEXT
ONE
TO
PACK
INTO
ITS
CURRENT
HOST
J
ACCORDING
TO
THE
FOLLOWING
PSEUDO
RANDOM
PROPORTIONAL
RULE
I
ARG
MAXU
ΩK
J
Α
ΤU
J
Α
ΗU
J
Q
OTHERWISE
WHERE
Α
IS
A
PARAMETER
THAT
ALLOW
A
USER
TO
CONTROL
THE
RELATIVE
IMPORTANCE
OF
PHEROMONE
TRAIL
AND
Q
IS
A
RANDOM
NUMBER
UNIFORMLY
DISTRIBUTED
IN
IF
Q
IS
GREATER
THAN
THIS
PROCESS
IS
CALLED
EXPLORATION
OTHERWISE
IT
IS
CALLED
EXPLOITATION
IS
A
FIXED
PARAMETER
DETERMINED
BY
THE
RELATIVE
IMPORTANCE
OF
EXPLOITATION
OF
ACCUMULATED
KNOWLEDGE
ABOUT
THE
PROBLEM
VERSUS
EXPLORATION
OF
NEW
MOVEMENTS
N
ΩK
J
IS
THE
SET
OF
VMS
THAT
QUALIFY
N
FOR
INCLUSION
IN
THE
CURRENT
HOST
J
M
THAT
IS
ΩK
J
I
N
U
XIU
U
XU
J
R
P
U
R
P
I
T
P
J
U
XU
J
R
M
U
R
M
I
T
M
J
ΗI
J
IS
DEFINED
IN
EQ
ABOVE
THE
PHEROMONE
VALUE
ΤI
J
IS
GIVEN
IN
EQ
BELOW
IS
A
RANDOM
VARIABLE
SELECTED
ACCORDING
TO
THE
FOLLOWING
RANDOM
PROPORTIONAL
RULE
PROBABILITY
DISTRIBUTION
WHICH
IS
THE
PROBABILITY
THAT
ANT
K
CHOOSES
TO
ASSIGN
VM
I
TO
HOST
J
PKI
J
Α
ΤI
J
Α
ΗI
J
U
ΩK
J
Α
ΤU
J
Α
ΗU
J
I
ΩK
J
OTHERWISE
THERE
ARE
TWO
REASONS
FOR
ADOPTING
THE
ABOVE
METHOD
TO
CALCULATE
THE
SELECTION
PROBABILITY
THE
FIRST
IS
THE
SIMPLICITY
OF
THE
APPROACH
PROPOSED
IN
AS
ONLY
ONE
CONTROL
PARAMETER
I
E
Α
IS
USED
TO
MAP
THE
RELATIVE
IMPORTANCE
OF
QUANTITY
OF
PHEROMONE
AND
THE
DESIRABILITY
OF
EACH
MOVEMENT
THE
SECOND
REASON
IS
THE
COMPUTATIONAL
EFFICIENCY
OF
THIS
METHOD
AS
MULTIPLICATION
OPERATIONS
ARE
USED
INSTEAD
OF
EXPONENTIATIONS
PHEROMONE
TRAIL
UPDATE
ANOTHER
VITAL
COMPONENT
OF
VMPACS
IS
THE
UPDATE
OF
PHEROMONE
TRAILS
THE
PHEROMONE
TRAIL
VALUE
CAN
EITHER
INCREASE
AS
ANTS
DEPOSIT
PHEROMONE
OR
DECREASE
DUE
TO
PHEROMONE
EVAPORATION
THE
DEPOSIT
OF
NEW
PHEROMONE
IS
BASED
ON
THE
FACT
THAT
THE
INFORMATION
CONTAINED
IN
SOME
GOOD
SOLUTIONS
SHOULD
BE
INDICATED
BY
PHEROMONE
TRAILS
AND
THE
MOVEMENT
INCLUDED
IN
THESE
GOOD
SOLUTIONS
WILL
BE
BIASED
BY
OTHER
ANTS
CONSTRUCTING
SUBSEQUENT
SOLUTIONS
HOWEVER
PHEROMONE
EVAPORATION
ALSO
IMPLEMENTS
A
USEFUL
FORM
OF
FORGETTING
IT
AVOIDS
A
TOO
RAPID
CONVERGENCE
OF
THE
ALGORITHM
TOWARD
A
SUBOPTIMAL
REGION
THEREFORE
FAVORING
THE
EXPLORATION
OF
NEW
AREAS
OF
THE
SEARCH
SPACE
IT
IS
A
KIND
OF
DIVERSIFICATION
STRATEGY
IN
OUR
PROPOSED
ALGORITHM
THE
PHEROMONE
UPDATING
PROCESS
INCLUDES
TWO
STEPS
A
LOCAL
PHEROMONE
UPDATE
AND
A
GLOBAL
PHEROMONE
UPDATE
WHILE
CONSTRUCTING
AN
ASSIGNMENT
OF
VM
I
TO
HOST
J
AN
ANT
DECREASES
THE
PHEROMONE
TRAIL
LEVEL
BETWEEN
VM
I
AND
HOST
J
BY
APPLYING
THE
FOLLOWING
LOCAL
UPDATING
RULE
ΤI
J
T
ΡL
ΤI
J
T
ΡL
WHERE
IS
THE
INITIAL
PHEROMONE
LEVEL
AND
ΡL
ΡL
IS
THE
LOCAL
PHEROMONE
EVAPORATING
PARAMETER
THE
GLOBAL
UPDATING
RULE
IS
APPLIED
AFTER
ALL
ANTS
HAVE
FINISHED
BUILDING
A
SOLUTION
SINCE
ALL
NON
DOMINATED
OR
PARETO
SOLUTIONS
ARE
CONSIDERED
AS
OPTIMAL
OR
BEST
SOLUTIONS
FOR
A
MULTI
OBJECTIVE
OPTIMIZATION
PROBLEM
WE
SUPPOSE
THAT
ALL
NONDOMINATED
SOLUTIONS
HAVE
THE
SAME
AND
HIGHEST
QUALITY
AND
ALL
DOMINATED
SOLUTIONS
MUST
BE
OMITTED
THEREFORE
THE
GLOBAL
UPDATE
IS
PERFORMED
FOR
EACH
SOLUTION
OF
THE
CURRENT
PARETO
SET
BY
APPLYING
THE
FOLLOWING
RULE
ΤI
J
T
Ρ
G
ΤI
J
T
ΡG
Λ
P
W
WHERE
Λ
NA
T
NI
IN
EQ
Ρ
G
Ρ
G
IS
THE
PHEROMONE
EVAPORATION
PARAMETER
OF
GLOBAL
UPDATING
THE
GLOBAL
NON
DOMINATED
SOLUTIONS
THAT
FORM
THE
PARETO
SET
ARE
STORED
IN
AN
EXTERNAL
SET
IF
A
SOLUTION
IN
THE
CURRENT
ITERATION
IS
NOT
DOMINATED
BY
ANY
OTHER
SOLUTIONS
IN
THE
CURRENT
ITERATION
OR
THE
EXTERNAL
SET
OF
NON
DOMINATED
SOLUTIONS
THIS
SOLUTION
IS
ADDED
TO
THE
EXTERNAL
SET
AND
THE
QUANTITY
OF
PHEROMONE
IN
ALL
MOVEMENTS
WHICH
CONSTRUCTED
IT
WILL
BE
INCREASED
THEN
ALL
SOLUTIONS
DOMINATED
BY
THE
ADDED
ONE
ARE
ELIMINATED
FROM
THE
EXTERNAL
SET
IN
EQ
NA
IS
THE
NUMBER
OF
ANTS
AND
NI
REPRESENTS
THE
NUMBER
OF
ITERATIONS
THAT
SOLUTION
HAS
RESIDED
IN
THE
EXTERNAL
SET
Λ
IS
AN
ADAPTIVE
COEFFICIENT
USED
TO
CONTROL
HOW
A
SOLUTION
IN
THE
EXTERNAL
SET
CONTRIBUTES
TO
PHEROMONE
INFORMATION
OVER
TIME
THIS
GLOBAL
UPDATING
RULE
TRIES
TO
INCREASING
THE
LEARNING
OF
ANTS
Y
GAO
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
COMPUTATIONAL
RESULTS
IN
THIS
SECTION
WE
USE
SOME
SIMULATION
EXPERIMENTS
TO
EVALUATE
THE
PROPOSED
ALGORITHM
WITH
RESPECT
TO
PERFORMANCE
AND
SCALABILITY
THE
PERFORMANCE
OF
THE
PROPOSED
ANT
ALGORITHM
IS
COMPARED
TO
THAT
OF
A
MULTI
OBJECTIVE
GROUPING
GENETIC
ALGORITHM
MGGA
PROPOSED
IN
A
SINGLE
OBJECTIVE
ACO
SACO
ALGORITHM
PROPOSED
IN
AND
A
SINGLE
OBJECTIVE
FFD
ALGORITHM
PROPOSED
IN
THE
PROGRAMS
FOR
THE
PROPOSED
ALGORITHM
MGGA
ALGORITHM
AND
FFD
HEURISTIC
WERE
CODED
IN
THE
JAVA
LANGUAGE
AND
RAN
ON
AN
INTEL
PENTIUM
DUAL
CORE
PROCESSOR
WITH
GHZ
CPU
AND
GB
RAM
THE
SETTINGS
FOR
VARIOUS
PARAMETERS
IN
VMPACS
HAVE
A
DIRECT
EFFECT
ON
THE
ALGORITHM
PERFORMANCE
APPROPRIATE
PARAMETER
VALUES
WERE
DETERMINED
ON
THE
BASIS
OF
PRELIMINARY
EXPERIMENTS
THE
FINAL
PARAMETER
SETTINGS
WERE
DETERMINED
TO
BE
NA
M
Α
ΡL
Ρ
G
AND
IN
THE
CASE
OF
THE
MGGA
ALGORITHM
THE
POPULATION
SIZE
IS
THE
INITIAL
POPULATION
WAS
GENERATED
RANDOMLY
THE
CROSSOVER
RATE
IS
AND
THE
MUTATION
RATE
IS
THE
MAXIMUM
NUMBER
OF
GENERATIONS
FOR
EACH
SEARCH
PROCESS
IS
WITH
THE
ABOVE
CONFIGURATION
WE
RANDOMLY
GENERATED
PROBLEM
INSTANCES
THE
INSTANCES
WERE
A
DEMAND
SET
OF
CPU
AND
MEMORY
UTILIZATIONS
FOR
VMS
THE
NUMBER
OF
SERVERS
WAS
SET
TO
THE
NUMBER
OF
VMS
IN
ORDER
TO
SUPPORT
THE
WORST
VM
PLACEMENT
SCENARIO
IN
WHICH
ONLY
ONE
VM
IS
ASSIGNED
PER
SERVER
FOR
SIMPLICITY
WE
SIMULATED
HOMOGENEOUS
SERVER
ENVIRONMENTS
BUT
THE
PROPOSED
APPROACH
CAN
BE
USED
FOR
THE
CASE
OF
HETEROGENEOUS
SERVERS
AFTER
THE
VM
PLACEMENT
ALGORITHM
WAS
FINISHED
IF
THERE
WERE
SEVERAL
NON
DOMINATED
SOLUTIONS
A
SOLUTION
BELONGING
TO
THE
SET
OF
NON
DOMINATED
SOLUTIONS
WAS
RANDOMLY
CHOSEN
EVERY
TEST
WAS
REPEATED
WITH
RUNS
FOR
EACH
INSTANCE
AND
THE
AVERAGE
RESULTS
OVER
INDEPENDENT
RUNS
ARE
REPORTED
WE
INTRODUCED
THE
LINEAR
CORRELATIONS
OF
CPU
AND
MEMORY
UTILIZATIONS
INTO
THE
INSTANCES
AND
USED
THE
METHOD
PROPOSED
IN
TO
GENERATE
RANDOM
SEQUENCES
OF
CPU
AND
MEMORY
UTILIZATIONS
IN
THE
EXPERIMENTS
THAT
HAD
SEVERAL
CORRELATIONS
THE
DETAILED
ALGORITHM
IS
AS
FOLLOWS
FOR
I
TO
N
DO
R
P
I
RAND
P
R
M
I
RAND
R
M
R
RAND
IF
R
P
R
P
I
R
P
R
P
R
P
I
R
P
THEN
RM
I
RM
I
RM
END
IF
END
FOR
WHERE
RAND
A
IS
A
FUNCTION
THAT
RETURNS
A
RANDOM
UNIFORMLY
DISTRIBUTED
NUMBER
OF
DOUBLE
TYPE
IN
THE
RANGE
A
R
P
REPRESENTS
THE
REFERENCE
CPU
UTILIZATION
AND
R
M
REPRESENTS
THE
REFERENCE
MEMORY
UTILIZATION
AND
THE
PROBABILITY
P
IS
A
REFERENCE
VALUE
WE
CAN
CONTROL
THE
CORRELATIONS
OF
CPU
AND
MEMORY
UTILIZATIONS
TO
SOME
EXTENT
BY
VARYING
PROBABILITY
P
TWO
KINDS
OF
THE
REFERENCE
VALUES
AND
FIVE
PROBABILITIES
WERE
USED
IN
THE
EXPERIMENTS
WE
SET
BOTH
R
P
AND
R
M
TO
AND
THEN
THE
DISTRIBUTIONS
OF
CPU
AND
MEMORY
UTILIZATIONS
ARE
IN
THE
RANGE
WHEN
R
P
R
M
AND
WHEN
R
P
R
M
FOR
R
P
R
M
WE
SET
P
TO
AND
AND
THEN
THE
AVERAGE
CORRELATION
COEFFICIENTS
BECAME
AND
FOR
EACH
SET
OF
INSTANCES
THESE
CORRELATION
COEFFICIENTS
CORRESPOND
TO
STRONG
NEGATIVE
WEAK
NEGATIVE
NO
WEAK
POSITIVE
AND
STRONG
POSITIVE
CORRELATIONS
WE
SIMILARLY
SET
P
FOR
R
P
R
M
THE
CORRELATION
COEFFICIENTS
WERE
THEN
AND
WE
SET
THE
THRESHOLDS
OF
BOTH
UTILIZATIONS
TO
T
P
I
T
M
I
THROUGHOUT
THE
EXPERIMENTS
COMPARISON
OF
VMPACS
WITH
MGGA
TO
EVALUATE
THE
EFFECTIVENESS
OF
THE
PROPOSAL
VM
PLACEMENT
ALGORITHM
ITS
PERFORMANCE
IS
COMPARED
TO
THAT
OF
THE
MGGA
ALGORITHM
WHICH
IS
USED
AS
THE
BENCHMARK
BECAUSE
IT
IS
AN
EFFECTIVE
AND
EFFICIENT
METHOD
USED
BY
TO
SOLVE
MULTIOBJECTIVE
VM
PLACEMENT
PROBLEMS
WE
COMPUTED
TWO
MEASURES
OVERALL
NON
DOMINATED
VECTOR
GENERATION
ONVG
AND
SPACING
SP
FOR
EACH
ALGORITHM
ONVG
AND
SP
CAN
BE
CALCULATED
AS
ONVG
Y
KNOWN
C
SP
Y
KNOWN
C
Y
KNOWN
C
D
DI
I
M
WHERE
Y
KNOWN
DENOTES
THE
CALCULATED
PARETO
FRONT
C
DENOTES
CARDINALITY
DI
MIN
J
I
K
F
M
J
F
M
I
J
Y
KNOWN
C
F
IS
THE
OBJECTION
FUNCTION
M
IS
THE
NUMBER
OF
OBJECTIVES
AND
D
IS
THE
MEAN
OF
ALL
DI
THE
HIGHER
THE
VALUE
OF
THE
ONVG
THE
BETTER
FOR
UNDERSTANDING
PARETO
FRONT
DETAILS
A
GOOD
SOLUTION
SET
SHOULD
HAVE
A
VALUE
CLOSE
TO
FOR
THE
SP
METRIC
TABLE
SHOWS
ONVG
AND
SP
UNDER
VMPACS
AND
MGGA
THE
COLUMN
CORR
INDICATES
THE
CORRELATION
COEFFICIENTS
FOR
THE
CPU
Y
GAO
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
TABLE
ONVG
AND
SP
PERFORMANCE
COMPARISON
OF
VMPACS
AND
MGGA
REFERENCE
VALUE
CORR
ALGORITHM
ONVG
SP
R
P
R
M
MGGA
VMPACS
MGGA
VMPACS
MGGA
VMPACS
MGGA
VMPACS
MGGA
VMPACS
MGGA
VMPACS
374
MGGA
VMPACS
MGGA
VMPACS
MGGA
VMPACS
MGGA
VMPACS
R
P
R
M
FIG
POWER
CONSUMPTION
AND
RESOURCE
WASTAGE
OF
VMPACS
AND
MGGA
IN
THE
CASE
OF
R
P
R
M
A
AND
R
P
R
M
B
FOR
INTERPRETATION
OF
THE
REFERENCES
TO
COLOR
IN
THIS
FIGURE
LEGEND
THE
READER
IS
REFERRED
TO
THE
WEB
VERSION
OF
THIS
ARTICLE
AND
MEMORY
UTILIZATIONS
FIG
COMPARES
THE
TOTAL
RESOURCE
WASTAGE
AND
POWER
CONSUMPTION
FOR
EACH
OF
THE
ALGORITHMS
UNDER
CONSIDERATION
FROM
THE
RESULTS
WE
CAN
CLEARLY
SEE
THAT
THE
VMPACS
ALGORITHM
OUTPERFORMS
MGGA
THE
REASON
IS
THAT
VM
PLACEMENT
UNDER
VMPACS
COMBINES
THE
PARTIAL
SOLUTION
INFORMATION
UNDER
CONSTRUCTION
AND
THE
FEED
INFORMATION
OF
Y
GAO
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
TABLE
POWER
CONSUMPTION
AND
RESOURCE
WASTAGE
OF
VMPACS
AND
TWO
SINGLE
OBJECTIVE
ALGORITHMS
REFERENCE
VALUE
CORR
ALGORITHM
POWER
W
WASTAGE
R
P
R
M
FFD
SACO
VMPACS
FFD
SACO
VMPACS
FFD
SACO
VMPACS
FFD
SACO
VMPACS
FFD
SACO
VMPACS
FFD
SACO
VMPACS
374
FFD
SACO
VMPACS
FFD
SACO
VMPACS
57
398
FFD
SACO
VMPACS
FFD
SACO
VMPACS
R
P
R
M
THE
RESERVED
TIME
OF
A
NON
DOMINATED
SOLUTION
IN
THE
EXTERNAL
SET
AND
SIMULTANEOUSLY
INCORPORATES
CONTINUOUS
UPDATING
OF
PHEROMONE
THEREFORE
IT
CAN
FIND
MORE
APPROPRIATE
VM
PLACEMENT
AND
ACHIEVE
BETTER
PERFORMANCE
COMPARISON
OF
VMPACS
WITH
TWO
SINGLE
OBJECTIVE
APPROACHES
IN
THIS
SET
OF
EXPERIMENTS
WE
COMPARED
THE
PROPOSED
APPROACH
WITH
TWO
SINGLE
OBJECTIVE
ALGORITHMS
AN
FFD
ALGORITHM
AND
A
SACO
APPROACH
SACO
IS
A
MODIFIED
MMAS
ALGORITHM
FOR
VM
PLACEMENT
FFD
CONSIDERS
VMS
IN
A
DECREASING
ORDER
OF
UTILIZATION
OF
A
CERTAIN
RESOURCE
AND
PLACES
EACH
VM
INTO
THE
FIRST
HOST
THAT
HAS
ENOUGH
RESOURCE
REMAINING
TABLE
COMPARES
THE
TOTAL
RESOURCE
WASTAGE
AND
POWER
CONSUMPTION
FOR
EACH
OF
THE
ALGORITHMS
UNDER
CONSIDERATION
FROM
THE
TABLE
WE
CAN
SEE
THAT
FFD
YIELDS
THE
HIGHEST
POWER
CONSUMPTION
AND
RESOURCE
WASTAGE
BECAUSE
IT
TENDS
TO
USE
A
LARGER
NUMBER
OF
SERVERS
COMPARED
WITH
OTHER
ALGORITHMS
VMPACS
PRODUCES
THE
LOWEST
POWER
CONSUMPTION
AND
RESOURCE
WASTAGE
BECAUSE
IT
IS
ABLE
TO
SEARCH
THE
SOLUTION
SPACE
MORE
EFFICIENTLY
AND
GLOBALLY
SO
THAT
IT
CAN
FIND
THE
SOLUTIONS
WITH
A
SMALLER
NUMBER
OF
USED
SERVERS
AND
HIGH
RESOURCE
UTILIZATION
COMPARED
WITH
FFD
AND
SACO
THE
POWER
CONSUMPTION
AND
RESOURCE
WASTAGE
OF
SACO
ARE
BETWEEN
THOSE
OF
THE
OTHER
TWO
THE
REASON
IS
THAT
SACO
CAN
FIND
SOLUTIONS
WITH
A
SMALLER
NUMBER
OF
USED
SERVERS
COMPARED
WITH
FFD
AND
A
LARGER
NUMBER
OF
USED
SERVERS
COMPARED
WITH
VMPACS
SCALABILITY
OF
VMPACS
IN
THIS
SUBSECTION
WE
PROVIDE
EXPERIMENTAL
RESULTS
ABOUT
WHETHER
THE
PROPOSED
ALGORITHM
IS
SCALABLE
TO
LARGER
DATA
CENTERS
AND
MORE
VM
REQUESTS
IN
THE
EXPERIMENT
WE
FIX
P
AND
CHANGE
THE
NUMBER
OF
VM
REQUESTS
FROM
TO
AND
SET
BOTH
R
P
AND
R
M
TO
AND
THEN
FIG
SHOWS
THE
RESULT
OF
THE
EXPERIMENT
CONDUCTED
FOR
INSTANCES
WITH
R
P
R
M
AND
R
P
R
M
WE
CAN
SEE
FROM
THE
GRAPH
THAT
IN
THE
CASE
OF
R
P
R
M
IT
TAKES
SECONDS
TO
CALCULATE
A
NEW
PLACEMENT
OF
VMS
BUT
THE
RUNNING
TIME
INCREASES
TO
SECONDS
WHEN
WE
INCREASE
THE
NUMBER
OF
VMS
TO
HOWEVER
IN
THE
CASE
OF
R
P
R
M
WE
CAN
SEE
THAT
IT
INCREASES
FASTER
THAN
FOR
R
P
R
M
IT
TAKES
AND
SECONDS
TO
CALCULATE
A
NEW
PLACEMENT
FOR
AND
VMS
WITH
R
P
R
M
THE
REASON
FOR
TWO
DIFFERENT
RESULTS
WITH
THE
SAME
NUMBER
OF
VMS
IS
THAT
THE
NUMBER
OF
SERVERS
USED
TO
CONTAIN
VMS
DIFFERS
IN
EACH
CASE
ON
AVERAGE
VMS
PER
SERVER
IN
THE
CASE
OF
R
P
R
M
AND
TWO
VMS
IN
THE
CASE
OF
R
P
R
M
THIS
EXPERIMENT
Y
GAO
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
FIG
VMPACS
ALGORITHM
RUNNING
TIME
RELATIVE
TO
NUMBER
OF
VM
REQUESTS
SHOWS
THAT
OUR
ALGORITHM
TAKES
LESS
THAN
MINUTES
TO
SOLVE
A
DIFFICULT
PLACEMENT
PROBLEM
WITH
UP
TO
VMS
THEREFORE
WE
CAN
SAY
THAT
OUR
ALGORITHM
IS
SUITABLE
FOR
LARGE
DATA
CENTERS
CONCLUSION
WITH
THE
INCREASING
PREVALENCE
OF
LARGE
SCALE
CLOUD
COMPUTING
ENVIRONMENTS
HOW
TO
EFFICIENTLY
PLACE
VMS
INTO
AVAILABLE
COMPUTING
SERVERS
HAS
BECOME
AN
ESSENTIAL
RESEARCH
PROBLEM
IN
THIS
PAPER
WE
PROPOSE
A
MULTI
OBJECTIVE
ANT
COLONY
SYSTEM
ALGORITHM
FOR
THE
VIRTUAL
MACHINE
PLACEMENT
PROBLEM
THE
GOAL
IS
TO
EFFICIENTLY
OBTAIN
A
SET
OF
NON
DOMINATED
SOLUTIONS
THAT
SIMULTANEOUSLY
MINIMIZES
TOTAL
RESOURCE
WASTAGE
AND
POWER
CONSUMPTION
THE
PROPOSED
ALGORITHM
IS
TESTED
WITH
SOME
INSTANCES
FROM
THE
LITERATURE
ITS
SOLUTION
PERFORMANCE
IS
COMPARED
TO
THAT
OF
AN
EXISTING
MULTI
OBJECTIVE
GROUPING
GENETIC
ALGORITHM
THE
RESULTS
DEMONSTRATE
THAT
OUR
ALGORITHM
IS
COMPETITIVE
WE
ALSO
COMPARE
OUR
ALGORITHM
WITH
TWO
SINGLEOBJECTIVE
APPROACHES
THE
COMPARISON
SHOWS
THAT
VMPACS
IS
SUPERIOR
TO
THOSE
ALGORITHMS
FINALLY
THE
SCALABILITY
OF
THE
PROPOSED
ALGORITHM
IS
VERIFIED
BY
MEANS
OF
SEVERAL
EXPERIMENTS
HIDDEN
MARKOV
MODELS
HMMS
ARE
ONE
OF
THE
MOST
FUNDAMENTAL
AND
WIDELY
USED
STATISTICAL
TOOLS
FOR
MODELING
DISCRETE
TIME
SERIES
IN
GENERAL
LEARNING
HMMS
FROM
DATA
IS
COMPUTATIONALLY
HARD
UNDER
CRYPTOGRAPHIC
ASSUMPTIONS
AND
PRACTITIONERS
TYPICALLY
RESORT
TO
SEARCH
HEURISTICS
WHICH
SUFFER
FROM
THE
USUAL
LOCAL
OPTIMA
ISSUES
WE
PROVE
THAT
UNDER
A
NATURAL
SEPARATION
CONDITION
BOUNDS
ON
THE
SMALLEST
SINGULAR
VALUE
OF
THE
HMM
PARAMETERS
THERE
IS
AN
EFFICIENT
AND
PROVABLY
CORRECT
ALGORITHM
FOR
LEARNING
HMMS
THE
SAMPLE
COMPLEXITY
OF
THE
ALGORITHM
DOES
NOT
EXPLICITLY
DEPEND
ON
THE
NUMBER
OF
DISTINCT
DISCRETE
OBSERVATIONS
IT
IMPLICITLY
DEPENDS
ON
THIS
QUANTITY
THROUGH
SPECTRAL
PROPERTIES
OF
THE
UNDERLYING
HMM
THIS
MAKES
THE
ALGORITHM
PARTICULARLY
APPLICABLE
TO
SETTINGS
WITH
A
LARGE
NUMBER
OF
OBSERVATIONS
SUCH
AS
THOSE
IN
NATURAL
LANGUAGE
PROCESSING
WHERE
THE
SPACE
OF
OBSERVATION
IS
SOMETIMES
THE
WORDS
IN
A
LANGUAGE
THE
ALGORITHM
IS
ALSO
SIMPLE
EMPLOYING
ONLY
A
SINGULAR
VALUE
DECOMPOSITION
AND
MATRIX
MULTIPLICATIONS
ELSEVIER
INC
ALL
RIGHTS
RESERVED
INTRODUCTION
HIDDEN
MARKOV
MODELS
HMMS
ARE
THE
WORKHORSE
STATISTICAL
MODEL
FOR
DISCRETE
TIME
SERIES
WITH
WIDELY
DIVERSE
APPLICATIONS
INCLUDING
AUTOMATIC
SPEECH
RECOGNITION
NATURAL
LANGUAGE
PROCESSING
NLP
AND
GENOMIC
SEQUENCE
MODELING
IN
THIS
MODEL
A
DISCRETE
HIDDEN
STATE
EVOLVES
ACCORDING
TO
SOME
MARKOVIAN
DYNAMICS
AND
OBSERVATIONS
AT
A
PARTICULAR
TIME
DEPEND
ONLY
ON
THE
HIDDEN
STATE
AT
THAT
TIME
THE
LEARNING
PROBLEM
IS
TO
ESTIMATE
THE
MODEL
ONLY
WITH
OBSERVATION
SAMPLES
FROM
THE
UNDERLYING
DISTRIBUTION
THUS
FAR
THE
PREDOMINANT
LEARNING
ALGORITHMS
HAVE
BEEN
LOCAL
SEARCH
HEURISTICS
SUCH
AS
THE
BAUM
WELCH
EM
ALGORITHM
IT
IS
NOT
SURPRISING
THAT
PRACTICAL
ALGORITHMS
HAVE
RESORTED
TO
HEURISTICS
AS
THE
GENERAL
LEARNING
PROBLEM
HAS
BEEN
SHOWN
TO
BE
HARD
UNDER
CRYPTOGRAPHIC
ASSUMPTIONS
FORTUNATELY
THE
HARDNESS
RESULTS
ARE
FOR
HMMS
THAT
SEEM
DIVORCED
FROM
THOSE
THAT
WE
ARE
LIKELY
TO
ENCOUNTER
IN
PRACTICAL
APPLICATIONS
THE
SITUATION
IS
IN
MANY
WAYS
ANALOGOUS
TO
LEARNING
MIXTURE
DISTRIBUTIONS
WITH
SAMPLES
FROM
THE
UNDERLYING
DISTRIBUTION
THERE
THE
GENERAL
PROBLEM
IS
ALSO
BELIEVED
TO
BE
HARD
HOWEVER
MUCH
RECENT
PROGRESS
HAS
BEEN
MADE
WHEN
CERTAIN
SEPARATION
ASSUMPTIONS
ARE
MADE
WITH
RESPECT
TO
THE
COMPONENT
MIXTURE
DISTRIBUTIONS
E
G
ROUGHLY
SPEAKING
THESE
SEPARATION
ASSUMPTIONS
IMPLY
THAT
WITH
HIGH
PROBABILITY
GIVEN
A
POINT
SAMPLED
FROM
THE
DISTRIBUTION
ONE
CAN
DETERMINE
THE
MIXTURE
COMPONENT
THAT
GENERATED
THE
POINT
IN
FACT
THERE
IS
A
PREVALENT
SENTIMENT
THAT
WE
ARE
OFTEN
ONLY
INTERESTED
IN
CLUSTERING
WHEN
SUCH
A
SEPARATION
CONDITION
HOLDS
MUCH
OF
THE
THEORETICAL
WORK
HERE
HAS
FOCUSED
ON
HOW
SMALL
THIS
SEPARATION
CAN
BE
AND
STILL
PERMIT
AN
EFFICIENT
ALGORITHM
TO
RECOVER
THE
MODEL
WE
PRESENT
A
SIMPLE
AND
EFFICIENT
ALGORITHM
FOR
LEARNING
HMMS
UNDER
A
CERTAIN
NATURAL
SEPARATION
CONDITION
WE
PROVIDE
TWO
RESULTS
FOR
LEARNING
THE
FIRST
IS
THAT
WE
CAN
APPROXIMATE
THE
JOINT
DISTRIBUTION
OVER
OBSERVATION
SEQUENCES
OF
CORRESPONDING
AUTHOR
E
MAIL
ADDRESSES
DJHSU
RCI
RUTGERS
EDU
D
HSU
SKAKADE
WHARTON
UPENN
EDU
M
KAKADE
TONGZ
RCI
RUTGERS
EDU
T
ZHANG
SEE
FRONT
MATTER
DOI
J
JCSS
ELSEVIER
INC
ALL
RIGHTS
RESERVED
D
HSU
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
LENGTH
T
HERE
THE
QUALITY
OF
APPROXIMATION
IS
MEASURED
BY
TOTAL
VARIATION
DISTANCE
AS
T
INCREASES
THE
APPROXIMATION
QUALITY
DEGRADES
POLYNOMIALLY
OUR
SECOND
RESULT
IS
ON
APPROXIMATING
THE
CONDITIONAL
DISTRIBUTION
OVER
A
FUTURE
OBSERVATION
CONDITIONED
ON
SOME
HISTORY
OF
OBSERVATIONS
WE
SHOW
THAT
THIS
ERROR
IS
ASYMPTOTICALLY
BOUNDED
I
E
FOR
ANY
T
CONDITIONED
ON
THE
OBSERVATIONS
PRIOR
TO
TIME
T
THE
ERROR
IN
PREDICTING
THE
T
TH
OUTCOME
IS
CONTROLLED
OUR
ALGORITHM
CAN
BE
THOUGHT
OF
AS
IMPROPERLY
LEARNING
AN
HMM
IN
THAT
WE
DO
NOT
EXPLICITLY
RECOVER
THE
TRANSITION
AND
OBSERVATION
MODELS
HOWEVER
OUR
MODEL
DOES
MAINTAIN
A
HIDDEN
STATE
REPRESENTATION
WHICH
IS
CLOSELY
IN
FACT
LINEARLY
RELATED
TO
THE
HMM
AND
CAN
BE
USED
FOR
INTERPRETING
THE
HIDDEN
STATE
THE
SEPARATION
CONDITION
WE
REQUIRE
IS
A
SPECTRAL
CONDITION
ON
BOTH
THE
OBSERVATION
MATRIX
AND
THE
TRANSITION
MATRIX
ROUGHLY
SPEAKING
WE
REQUIRE
THAT
THE
OBSERVATION
DISTRIBUTIONS
ARISING
FROM
DISTINCT
HIDDEN
STATES
BE
DISTINCT
WHICH
WE
FORMALIZE
BY
SINGULAR
VALUE
CONDITIONS
ON
THE
OBSERVATION
MATRIX
THIS
REQUIREMENT
CAN
BE
THOUGHT
OF
AS
BEING
WEAKER
THAN
THE
SEPARATION
CONDITION
FOR
CLUSTERING
IN
THAT
THE
OBSERVATION
DISTRIBUTIONS
CAN
OVERLAP
QUITE
A
BIT
GIVEN
ONE
OBSERVATION
WE
DO
NOT
NECESSARILY
HAVE
THE
INFORMATION
TO
DETERMINE
WHICH
HIDDEN
STATE
IT
WAS
GENERATED
FROM
UNLIKE
IN
THE
CLUSTERING
LITERATURE
WE
ALSO
HAVE
A
SPECTRAL
CONDITION
ON
THE
CORRELATION
BETWEEN
ADJACENT
OBSERVATIONS
WE
BELIEVE
BOTH
OF
THESE
CONDITIONS
TO
BE
QUITE
REASONABLE
IN
MANY
PRACTICAL
APPLICATIONS
FURTHERMORE
GIVEN
OUR
ANALYSIS
EXTENSIONS
TO
OUR
ALGORITHM
WHICH
RELAX
THESE
ASSUMPTIONS
SHOULD
BE
POSSIBLE
THE
ALGORITHM
WE
PRESENT
HAS
BOTH
POLYNOMIAL
SAMPLE
AND
COMPUTATIONAL
COMPLEXITY
COMPUTATIONALLY
THE
ALGORITHM
IS
QUITE
SIMPLE
AT
ITS
CORE
IS
A
SINGULAR
VALUE
DECOMPOSITION
SVD
OF
A
CORRELATION
MATRIX
BETWEEN
PAST
AND
FUTURE
OBSERVATIONS
THIS
SVD
CAN
BE
VIEWED
AS
A
CANONICAL
CORRELATION
ANALYSIS
CCA
BETWEEN
PAST
AND
FUTURE
OBSERVATIONS
THE
SAMPLE
COMPLEXITY
RESULTS
WE
PRESENT
DO
NOT
EXPLICITLY
DEPEND
ON
THE
NUMBER
OF
DISTINCT
OBSERVATIONS
RATHER
THEY
IMPLICITLY
DEPEND
ON
THIS
NUMBER
THROUGH
SPECTRAL
PROPERTIES
OF
THE
HMM
THIS
MAKES
THE
ALGORITHM
PARTICULARLY
APPLICABLE
TO
SETTINGS
WITH
A
LARGE
NUMBER
OF
OBSERVATIONS
SUCH
AS
THOSE
IN
NLP
WHERE
THE
SPACE
OF
OBSERVATIONS
IS
SOMETIMES
THE
WORDS
IN
A
LANGUAGE
RELATED
WORK
THERE
ARE
TWO
IDEAS
CLOSELY
RELATED
TO
THIS
WORK
THE
FIRST
COMES
FROM
THE
SUBSPACE
IDENTIFICATION
LITERATURE
IN
CONTROL
THEORY
THE
SECOND
IDEA
IS
THAT
RATHER
THAN
EXPLICITLY
MODELING
THE
HIDDEN
STATES
WE
CAN
REPRESENT
THE
PROBABILITIES
OF
SEQUENCES
OF
OBSERVATIONS
AS
PRODUCTS
OF
MATRIX
OBSERVATION
OPERATORS
AN
IDEA
WHICH
DATES
BACK
TO
THE
LITERATURE
ON
MULTIPLICITY
AUTOMATA
THE
SUBSPACE
IDENTIFICATION
METHODS
USED
IN
CONTROL
THEORY
USE
SPECTRAL
APPROACHES
TO
DISCOVER
THE
RELATIONSHIP
BETWEEN
HIDDEN
STATES
AND
THE
OBSERVATIONS
IN
THIS
LITERATURE
THE
RELATIONSHIP
IS
DISCOVERED
FOR
LINEAR
DYNAMICAL
SYSTEMS
SUCH
AS
KALMAN
FILTERS
THE
BASIC
IDEA
IS
THAT
THE
RELATIONSHIP
BETWEEN
OBSERVATIONS
AND
HIDDEN
STATES
CAN
OFTEN
BE
DISCOVERED
BY
SPECTRAL
SVD
METHODS
CORRELATING
THE
PAST
AND
FUTURE
OBSERVATIONS
IN
PARTICULAR
SUCH
METHODS
OFTEN
DO
A
CCA
BETWEEN
THE
PAST
AND
FUTURE
OBSERVATIONS
HOWEVER
ALGORITHMS
PRESENTED
IN
THE
LITERATURE
CANNOT
BE
DIRECTLY
USED
TO
LEARN
HMMS
BECAUSE
THEY
ASSUME
ADDITIVE
NOISE
MODELS
WITH
NOISE
DISTRIBUTIONS
INDEPENDENT
OF
THE
UNDERLYING
STATES
AND
SUCH
MODELS
ARE
NOT
SUITABLE
FOR
HMMS
AN
EXCEPTION
IS
IN
OUR
SETTING
WE
USE
THIS
IDEA
OF
PERFORMING
A
CCA
BETWEEN
PAST
AND
FUTURE
OBSERVATIONS
TO
UNCOVER
INFORMATION
ABOUT
THE
OBSERVATION
PROCESS
THIS
IS
DONE
THROUGH
AN
SVD
ON
A
CORRELATION
MATRIX
BETWEEN
PAST
AND
FUTURE
OBSERVATIONS
THE
STATE
INDEPENDENT
ADDITIVE
NOISE
CONDITION
IS
AVOIDED
THROUGH
THE
SECOND
IDEA
THE
SECOND
IDEA
IS
THAT
WE
CAN
REPRESENT
THE
PROBABILITY
OF
SEQUENCES
AS
PRODUCTS
OF
MATRIX
OPERATORS
AS
IN
THE
LITERATURE
ON
MULTIPLICITY
AUTOMATA
SEE
FOR
DISCUSSION
OF
THIS
RELATIONSHIP
THIS
IDEA
WAS
RE
USED
IN
BOTH
THE
OBSERVABLE
OPERATOR
MODEL
OF
JAEGER
AND
THE
PREDICTIVE
STATE
REPRESENTATIONS
OF
LITTMAN
ET
AL
BOTH
OF
WHICH
ARE
CLOSELY
RELATED
AND
BOTH
OF
WHICH
CAN
MODEL
HMMS
IN
FACT
THE
FORMER
WORK
BY
JAEGER
PROVIDES
A
NON
ITERATIVE
ALGORITHM
FOR
LEARNING
HMMS
WITH
AN
ASYMPTOTIC
ANALYSIS
HOWEVER
THIS
ALGORITHM
ASSUMED
KNOWING
A
SET
OF
CHARACTERISTIC
EVENTS
WHICH
IS
A
RATHER
STRONG
ASSUMPTION
THAT
EFFECTIVELY
REVEALS
SOME
RELATIONSHIP
BETWEEN
THE
HIDDEN
STATES
AND
OBSERVATIONS
IN
OUR
ALGORITHM
THIS
PROBLEM
IS
AVOIDED
THROUGH
THE
FIRST
IDEA
SOME
OF
THE
TECHNIQUES
IN
THE
WORK
IN
FOR
TRACKING
BELIEF
STATES
IN
AN
HMM
ARE
USED
HERE
AS
DISCUSSED
EARLIER
WE
PROVIDE
A
RESULT
SHOWING
HOW
THE
MODEL
CONDITIONAL
DISTRIBUTIONS
OVER
OBSERVATIONS
CONDITIONED
ON
A
HISTORY
DO
NOT
ASYMPTOTICALLY
DIVERGE
THIS
RESULT
WAS
PROVEN
IN
WHEN
AN
APPROXIMATE
MODEL
IS
ALREADY
KNOWN
ROUGHLY
SPEAKING
THE
REASON
THIS
ERROR
DOES
NOT
DIVERGE
IS
THAT
THE
PREVIOUS
OBSERVATIONS
ARE
ALWAYS
REVEALING
INFORMATION
ABOUT
THE
NEXT
OBSERVATION
SO
WITH
SOME
APPROPRIATE
CONTRACTION
PROPERTY
WE
WOULD
NOT
EXPECT
OUR
ERRORS
TO
DIVERGE
OUR
WORK
BORROWS
FROM
THIS
CONTRACTION
ANALYSIS
AMONG
RECENT
EFFORTS
IN
VARIOUS
COMMUNITIES
THE
ONLY
PREVIOUS
EFFICIENT
ALGORITHM
SHOWN
TO
PAC
LEARN
HMMS
IN
A
SETTING
SIMILAR
TO
OURS
IS
DUE
TO
THEIR
ALGORITHM
FOR
HMMS
IS
A
SPECIALIZATION
OF
A
MORE
GENERAL
METHOD
FOR
LEARNING
PHYLOGENETIC
TREES
FROM
LEAF
OBSERVATIONS
WHILE
BOTH
THIS
ALGORITHM
AND
OURS
RELY
ON
THE
SAME
RANK
CONDITION
AND
COMPUTE
SIMILAR
STATISTICS
THEY
DIFFER
IN
TWO
SIGNIFICANT
REGARDS
FIRST
MOSSEL
AND
ROCH
WERE
NOT
CONCERNED
WITH
LARGE
OBSERVATION
SPACES
AND
THUS
THEIR
ALGORITHM
ASSUMES
THE
STATE
AND
OBSERVATION
SPACES
TO
HAVE
THE
SAME
DIMENSION
IN
ADDITION
MOSSEL
AND
ROCH
TAKE
THE
MORE
AMBITIOUS
APPROACH
OF
LEARNING
THE
OBSERVATION
AND
TRANSITION
MATRICES
EXPLICITLY
WHICH
UNFORTUNATELY
RESULTS
IN
A
LESS
SAMPLE
EFFICIENT
ALGORITHM
THAT
INJECTS
NOISE
TO
ARTIFICIALLY
SPREAD
APART
THE
D
HSU
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
EIGENSPECTRUM
OF
A
PROBABILITY
MATRIX
OUR
ALGORITHM
AVOIDS
RECOVERING
THE
OBSERVATION
AND
TRANSITION
MATRIX
EXPLICITLY
AND
INSTEAD
USES
SUBSPACE
IDENTIFICATION
TO
LEARN
AN
ALTERNATIVE
REPRESENTATION
PRELIMINARIES
HIDDEN
MARKOV
MODELS
THE
HMM
DEFINES
A
PROBABILITY
DISTRIBUTION
OVER
SEQUENCES
OF
HIDDEN
STATES
HT
AND
OBSERVATIONS
XT
WE
WRITE
THE
SET
OF
HIDDEN
STATES
AS
M
M
AND
SET
OF
OBSERVATIONS
AS
N
N
WHERE
M
N
LET
T
RM
M
BE
THE
STATE
TRANSITION
PROBABILITY
MATRIX
WITH
T
I
J
PR
HT
I
HT
J
O
RN
M
BE
THE
OBSERVATION
PROB
RM
BE
THE
INITIAL
STATE
DISTRIBUTION
WITH
Π
I
PR
I
THE
CONDITIONAL
ABILITY
MATRIX
WITH
O
I
J
PR
XT
I
HT
J
AND
Π
INDEPENDENCE
PROPERTIES
THAT
AN
HMM
SATISFIES
ARE
CONDITIONED
ON
THE
PREVIOUS
HIDDEN
STATE
THE
CURRENT
HIDDEN
STATE
IS
SAMPLED
INDEPENDENTLY
OF
ALL
OTHER
EVENTS
IN
THE
HISTORY
AND
CONDITIONED
ON
THE
CURRENT
HIDDEN
STATE
THE
CURRENT
OBSERVATION
IS
SAMPLED
INDEPENDENTLY
FROM
ALL
OTHER
EVENTS
IN
THE
HISTORY
THESE
CONDITIONAL
INDEPENDENCE
PROPERTIES
OF
THE
HMM
IMPLY
THAT
T
AND
O
FULLY
CHARACTERIZE
THE
PROBABILITY
DISTRIBUTION
OF
ANY
SEQUENCE
OF
STATES
AND
OBSERVATIONS
A
USEFUL
WAY
OF
COMPUTING
THE
PROBABILITY
OF
SEQUENCES
IS
IN
TERMS
OF
OBSERVATION
OPERATORS
AN
IDEA
WHICH
DATES
BACK
TO
THE
LITERATURE
ON
MULTIPLICITY
AUTOMATA
SEE
THE
FOLLOWING
LEMMA
IS
STRAIGHTFORWARD
TO
VERIFY
SEE
LEMMA
FOR
X
N
DEFINE
A
X
T
DIAG
O
X
O
X
M
FOR
ANY
T
M
PR
XT
A
XT
A
Π
OUR
ALGORITHM
LEARNS
A
REPRESENTATION
THAT
IS
BASED
ON
THIS
OBSERVABLE
OPERATOR
VIEW
OF
HMMS
NOTATION
M
IS
THE
ALL
ONES
VECTOR
IN
RM
WE
DENOTE
BY
T
THE
SEQUENCE
XT
AS
ALREADY
USED
IN
LEMMA
THE
VECTOR
AND
BY
XT
ITS
REVERSE
XT
WHEN
WE
USE
A
SEQUENCE
AS
A
SUBSCRIPT
WE
MEAN
THE
PRODUCT
OF
QUANTITIES
INDEXED
BY
A
M
WE
WILL
USE
H
T
THE
SEQUENCE
ELEMENTS
SO
FOR
EXAMPLE
THE
PROBABILITY
CALCULATION
IN
LEMMA
CAN
BE
WRITTEN
XT
Π
TO
DENOTE
A
PROBABILITY
VECTOR
A
DISTRIBUTION
OVER
HIDDEN
STATES
WITH
THE
ARROW
DISTINGUISHING
IT
FROM
THE
RANDOM
HIDDEN
STATE
VARIABLE
HT
ADDITIONAL
NOTATION
USED
IN
THE
THEOREM
STATEMENTS
AND
PROOFS
IS
LISTED
IN
TABLE
ASSUMPTIONS
WE
ASSUME
THE
HMM
OBEYS
THE
FOLLOWING
CONDITION
ELEMENT
WISE
AND
O
AND
T
ARE
RANK
M
CONDITION
HMM
RANK
CONDITION
Π
THE
RANK
CONDITION
RULES
OUT
THE
PROBLEMATIC
CASE
IN
WHICH
SOME
STATE
I
HAS
AN
OUTPUT
DISTRIBUTION
EQUAL
TO
A
CONVEX
COMBINATION
MIXTURE
OF
SOME
OTHER
STATES
OUTPUT
DISTRIBUTIONS
SUCH
A
CASE
COULD
CAUSE
A
LEARNER
TO
CONFUSE
STATE
I
WITH
A
MIXTURE
OF
THESE
OTHER
STATES
AS
MENTIONED
BEFORE
THE
GENERAL
TASK
OF
LEARNING
HMMS
EVEN
THE
SPECIFIC
GOAL
OF
SIMPLY
ACCURATELY
MODELING
THE
DISTRIBUTION
PROBABILITIES
IS
HARD
UNDER
CRYPTOGRAPHIC
ASSUMPTIONS
THE
RANK
CONDITION
IS
A
NATURAL
WAY
TO
EXCLUDE
THE
MALICIOUS
INSTANCES
CREATED
BY
THE
HARDNESS
REDUCTION
THE
RANK
CONDITION
ON
O
CAN
BE
RELAXED
THROUGH
A
SIMPLE
MODIFICATION
OF
OUR
ALGORITHM
THAT
LOOKS
AT
MULTIPLE
OBSERVATION
SYMBOLS
SIMULTANEOUSLY
TO
FORM
THE
PROBABILITY
ESTIMATION
TABLES
FOR
EXAMPLE
IF
TWO
HIDDEN
STATES
HAVE
IDENTICAL
OBSERVATION
PROBABILITY
IN
O
BUT
DIFFERENT
TRANSITION
PROBABILITIES
IN
T
THEN
THEY
MAY
BE
DIFFERENTIATED
BY
USING
TWO
CONSECUTIVE
OBSERVATIONS
ALTHOUGH
OUR
ANALYSIS
CAN
BE
APPLIED
IN
THIS
CASE
WITH
MINIMAL
MODIFICATIONS
FOR
CLARITY
WE
ONLY
STATE
OUR
RESULTS
FOR
AN
ALGORITHM
THAT
ESTIMATES
PROBABILITY
TABLES
WITH
ROWS
AND
COLUMNS
CORRESPONDING
TO
SINGLE
OBSERVATIONS
LEARNING
MODEL
OUR
LEARNING
MODEL
IS
SIMILAR
TO
THOSE
OF
FOR
PAC
LEARNING
DISCRETE
PROBABILITY
DISTRIBUTIONS
WE
ASSUME
WE
CAN
SAMPLE
OBSERVATION
SEQUENCES
FROM
AN
HMM
IN
PARTICULAR
WE
ASSUME
EACH
SEQUENCE
IS
GENERATED
STARTING
FROM
THE
IN
APPENDIX
C
WE
DISCUSS
THE
KEY
STEP
IN
AND
ALSO
SHOW
HOW
TO
USE
THEIR
TECHNIQUE
IN
CONJUNCTION
WITH
OUR
ALGORITHM
TO
RECOVER
THE
HMM
OBSERVATION
AND
TRANSITION
MATRICES
OUR
ALGORITHM
DOES
NOT
RELY
ON
THIS
EXTRA
STEP
WE
BELIEVE
IT
TO
BE
GENERALLY
UNSTABLE
BUT
IT
CAN
BE
TAKEN
IF
DESIRED
D
HSU
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
SAME
INITIAL
STATE
DISTRIBUTION
E
G
THE
STATIONARY
DISTRIBUTION
OF
THE
MARKOV
CHAIN
SPECIFIED
BY
T
THIS
SETTING
IS
VALID
FOR
PRACTICAL
APPLICATIONS
INCLUDING
SPEECH
RECOGNITION
NATURAL
LANGUAGE
PROCESSING
AND
DNA
SEQUENCE
MODELING
WHERE
MULTIPLE
INDEPENDENT
SEQUENCES
ARE
AVAILABLE
FOR
SIMPLICITY
THIS
PAPER
ONLY
ANALYZES
AN
ALGORITHM
THAT
USES
THE
INITIAL
FEW
OBSERVATIONS
OF
EACH
SEQUENCE
AND
IGNORES
THE
REST
WE
DO
THIS
TO
AVOID
USING
CONCENTRATION
BOUNDS
WITH
COMPLICATED
MIXING
CONDITIONS
FOR
MARKOV
CHAINS
IN
OUR
SAMPLE
COMPLEXITY
CALCULATION
AS
THESE
CONDITIONS
ARE
NOT
ESSENTIAL
TO
THE
MAIN
IDEAS
WE
PRESENT
IN
PRACTICE
HOWEVER
ONE
SHOULD
USE
THE
FULL
SEQUENCES
TO
FORM
THE
PROBABILITY
ESTIMATION
TABLES
REQUIRED
BY
OUR
ALGORITHM
IN
SUCH
SCENARIOS
A
SINGLE
LONG
SEQUENCE
IS
SUFFICIENT
FOR
LEARNING
AND
THE
EFFECTIVE
SAMPLE
SIZE
CAN
BE
SIMPLY
DISCOUNTED
BY
THE
MIXING
RATE
OF
THE
UNDERLYING
MARKOV
CHAIN
OUR
GOAL
IS
TO
DERIVE
ACCURATE
ESTIMATORS
FOR
THE
CUMULATIVE
JOINT
DISTRIBUTION
PR
T
AND
THE
CONDITIONAL
DISTRIBUTION
PR
XT
T
FOR
ANY
SEQUENCE
LENGTH
T
FOR
THE
CONDITIONAL
DISTRIBUTION
WE
OBTAIN
AN
APPROXIMATION
THAT
DOES
NOT
DEPEND
ON
T
WHILE
FOR
THE
JOINT
DISTRIBUTION
THE
APPROXIMATION
QUALITY
DEGRADES
GRACEFULLY
WITH
T
OBSERVABLE
REPRESENTATIONS
OF
HIDDEN
MARKOV
MODELS
A
TYPICAL
STRATEGY
FOR
LEARNING
HMMS
IS
TO
ESTIMATE
THE
OBSERVATION
AND
TRANSITION
PROBABILITIES
FOR
EACH
HIDDEN
STATE
SAY
BY
MAXIMIZING
THE
LIKELIHOOD
OF
A
SAMPLE
HOWEVER
SINCE
THE
HIDDEN
STATES
ARE
NOT
DIRECTLY
OBSERVED
BY
THE
LEARNER
ONE
OFTEN
RESORTS
TO
HEURISTICS
E
G
EM
THAT
ALTERNATE
BETWEEN
IMPUTING
THE
HIDDEN
STATES
AND
SELECTING
PARAMETERS
O
AND
T
THAT
MAXIMIZE
THE
LIKELIHOOD
OF
THE
SAMPLE
AND
CURRENT
STATE
ESTIMATES
SUCH
HEURISTICS
CAN
SUFFER
FROM
LOCAL
OPTIMA
ISSUES
AND
REQUIRE
CAREFUL
INITIALIZATION
E
G
AN
ACCURATE
GUESS
OF
THE
HIDDEN
STATES
TO
AVOID
FAILURE
HOWEVER
UNDER
CONDITION
HMMS
ADMIT
AN
EFFICIENTLY
LEARNABLE
PARAMETERIZATION
THAT
DEPENDS
ONLY
ON
OBSERVABLE
QUANTITIES
BECAUSE
SUCH
QUANTITIES
CAN
BE
ESTIMATED
FROM
DATA
LEARNING
THIS
REPRESENTATION
AVOIDS
ANY
GUESSWORK
ABOUT
THE
HIDDEN
STATES
AND
THUS
ALLOWS
FOR
ALGORITHMS
WITH
STRONG
GUARANTEES
OF
SUCCESS
THIS
PARAMETERIZATION
IS
NATURAL
IN
THE
CONTEXT
OF
OBSERVABLE
OPERATOR
MODELS
BUT
HERE
WE
EMPHASIZE
ITS
CONNECTION
TO
SUBSPACE
IDENTIFICATION
DEFINITION
OUR
HMM
REPRESENTATION
IS
DEFINED
IN
TERMS
OF
THE
FOLLOWING
VECTOR
AND
MATRIX
QUANTITIES
P
I
PR
I
P
I
J
PR
I
J
P
X
I
J
PR
I
X
J
X
N
WHERE
P
RN
IS
A
VECTOR
AND
P
RN
N
AND
THE
P
X
RN
N
ARE
MATRICES
THESE
ARE
THE
MARGINAL
PROBABILITIES
OF
OBSERVATION
SINGLETONS
PAIRS
AND
TRIPLES
THE
REPRESENTATION
FURTHER
DEPENDS
ON
A
MATRIX
U
RN
M
THAT
OBEYS
THE
FOLLOWING
CONDITION
CONDITION
INVERTIBILITY
CONDITION
U
O
IS
INVERTIBLE
IN
OTHER
WORDS
U
DEFINES
AN
M
DIMENSIONAL
SUBSPACE
THAT
PRESERVES
THE
STATE
DYNAMICS
THIS
WILL
BECOME
EVIDENT
IN
THE
NEXT
FEW
LEMMAS
A
NATURAL
CHOICE
FOR
U
IS
GIVEN
BY
THE
THIN
SVD
OF
P
AS
THE
NEXT
LEMMA
EXHIBITS
AND
THAT
O
AND
T
HAVE
COLUMN
RANK
M
THEN
RANK
P
M
MOREOVER
IF
U
IS
THE
MATRIX
OF
LEFT
SINGULAR
LEMMA
ASSUME
Π
VECTORS
OF
P
CORRESPONDING
TO
NON
ZERO
SINGULAR
VALUES
THEN
RANGE
U
RANGE
O
SO
U
RN
M
OBEYS
CONDITION
PROOF
USING
THE
CONDITIONAL
INDEPENDENCE
PROPERTIES
OF
THE
HMM
ENTRIES
OF
THE
MATRIX
P
CAN
BE
FACTORED
AS
P
I
J
M
M
PR
I
J
K
K
M
M
O
J
O
IK
T
K
Π
K
O
AND
THUS
RANGE
P
OT
DIAG
Π
IMPLY
THAT
T
DIAG
Π
O
HAS
SO
P
RANGE
O
THE
ASSUMPTIONS
ON
O
T
AND
Π
LINEARLY
INDEPENDENT
ROWS
AND
THAT
P
HAS
M
NON
ZERO
SINGULAR
VALUES
THEREFORE
O
O
P
T
DIAG
Π
WHERE
X
DENOTES
THE
MOORE
PENROSE
PSEUDO
INVERSE
OF
A
MATRIX
X
WHICH
IN
TURN
IMPLIES
RANGE
O
RANGE
P
THUS
RANK
P
RANK
O
M
AND
ALSO
RANGE
U
RANGE
P
RANGE
O
D
HSU
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
OUR
ALGORITHM
IS
MOTIVATED
BY
LEMMA
IN
THAT
WE
COMPUTE
THE
SVD
OF
AN
EMPIRICAL
ESTIMATE
OF
P
TO
DISCOVER
A
U
THAT
SATISFIES
CONDITION
WE
ALSO
NOTE
THAT
THIS
CHOICE
FOR
U
CAN
BE
THOUGHT
OF
AS
A
SURROGATE
FOR
THE
OBSERVATION
MATRIX
O
SEE
REMARK
NOW
GIVEN
SUCH
A
MATRIX
U
WE
CAN
FINALLY
DEFINE
THE
OBSERVABLE
REPRESENTATION
U
P
B
P
U
B
P
B
X
U
P
X
U
P
X
N
BASIC
PROPERTIES
B
B
B
N
IS
SUFFICIENT
TO
THE
FOLLOWING
LEMMA
SHOWS
THAT
THE
OBSERVABLE
REPRESENTATION
PARAMETERIZED
BY
B
COMPUTE
THE
PROBABILITIES
OF
ANY
SEQUENCE
OF
OBSERVATIONS
LEMMA
OBSERVABLE
HMM
REPRESENTATION
ASSUME
THE
HMM
OBEYS
CONDITION
AND
THAT
U
RN
M
OBEYS
CONDITION
THEN
U
O
Π
B
U
O
B
M
B
X
U
O
A
X
U
O
X
N
B
X
B
T
N
XT
N
PR
T
B
T
IN
ADDITION
TO
JOINT
PROBABILITIES
WE
CAN
COMPUTE
CONDITIONAL
PROBABILITIES
USING
THE
OBSERVABLE
REPRESENTATION
WE
DO
SO
THROUGH
NORMALIZED
CONDITIONAL
INTERNAL
STATES
THAT
DEPEND
ON
A
HISTORY
OF
OBSERVATIONS
WE
SHOULD
EMPHASIZE
THAT
THESE
STATES
ARE
NOT
IN
FACT
PROBABILITY
DISTRIBUTIONS
OVER
HIDDEN
STATES
THOUGH
THE
FOLLOWING
LEMMA
SHOWS
THAT
THEY
ARE
LINEARLY
RELATED
AS
PER
LEMMA
THE
INITIAL
STATE
IS
U
O
Π
B
GENERALLY
FOR
ANY
T
GIVEN
OBSERVATIONS
T
WITH
PR
T
WE
DEFINE
THE
INTERNAL
STATE
AS
T
B
T
T
B
B
XT
B
B
X
B
T
B
T
BECAUSE
THE
DENOMINATOR
IS
B
B
U
O
U
O
Π
THE
CASE
T
IS
CONSISTENT
WITH
THE
GENERAL
DEFINITION
OF
B
M
THE
FOLLOWING
RESULT
SHOWS
HOW
THESE
INTERNAL
STATES
CAN
BE
USED
TO
COMPUTE
CONDITIONAL
PROBABILITIES
Π
PR
XT
I
T
LEMMA
CONDITIONAL
INTERNAL
STATES
ASSUME
THE
CONDITIONS
IN
LEMMA
THEN
FOR
ANY
TIME
T
RECURSIVE
UPDATE
OF
STATES
IF
PR
T
THEN
T
B
T
B
XT
B
B
X
B
T
B
T
RELATION
TO
HIDDEN
STATES
T
U
O
H
T
T
B
T
T
I
PR
HT
I
T
IS
THE
CONDITIONAL
PROBABILITY
OF
THE
HIDDEN
STATE
AT
TIME
T
GIVEN
THE
OBSERVATIONS
T
WHERE
H
CONDITIONAL
OBSERVATION
PROBABILITIES
B
X
B
T
PR
XT
T
B
T
REMARK
IF
U
IS
THE
MATRIX
OF
LEFT
SINGULAR
VECTORS
OF
P
CORRESPONDING
TO
NON
ZERO
SINGULAR
VALUES
THEN
U
ACTS
MUCH
LIKE
THE
OBSERVATION
PROBABILITY
MATRIX
O
IN
THE
FOLLOWING
SENSE
T
GIVEN
A
CONDITIONAL
STATE
B
T
GIVEN
A
CONDITIONAL
HIDDEN
STATE
H
T
I
PR
XT
I
T
U
B
T
I
PR
XT
I
T
O
H
TO
SEE
THIS
NOTE
THAT
U
U
IS
THE
PROJECTION
OPERATOR
TO
RANGE
U
SINCE
RANGE
U
RANGE
O
LEMMA
WE
HAVE
T
U
U
O
H
T
O
H
T
U
U
O
O
SO
U
B
D
HSU
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
PROOFS
FOR
THE
SECOND
CLAIM
WE
WRITE
P
IN
THE
FOLLOWING
PROOF
OF
LEMMA
THE
FIRST
CLAIM
IS
IMMEDIATE
FROM
THE
FACT
P
O
Π
UNUSUAL
BUT
EASILY
VERIFIED
FORM
M
O
M
P
T
DIAG
Π
U
O
O
M
U
O
T
DIAG
Π
U
O
U
P
O
T
AND
THE
CONDITION
ON
U
SO
THE
MATRIX
U
P
HAS
LINEARLY
INDEPENDENT
ROWS
BY
THE
ASSUMPTIONS
ON
Π
P
U
P
U
O
U
P
U
P
U
O
B
M
M
TO
PROVE
THE
THIRD
CLAIM
WE
FIRST
EXPRESS
P
X
IN
TERMS
OF
A
X
O
O
AX
U
O
P
X
O
A
X
T
DIAG
Π
O
O
AX
U
O
U
O
T
DIAG
Π
U
P
AGAIN
USING
THE
FACT
THAT
U
P
HAS
FULL
ROW
RANK
B
X
U
P
X
U
P
U
O
AX
U
O
U
P
U
P
U
O
A
X
U
O
THE
PROBABILITY
CALCULATION
IN
THE
FOURTH
CLAIM
IS
NOW
READILY
SEEN
AS
A
TELESCOPING
PRODUCT
THAT
REDUCES
TO
THE
PRODUCT
IN
LEMMA
PROOF
OF
LEMMA
THE
FIRST
CLAIM
IS
A
SIMPLE
INDUCTION
THE
SECOND
AND
THIRD
CLAIMS
ARE
ALSO
PROVED
BY
INDUCTION
AS
Π
PR
FOR
AND
B
U
O
Π
AND
ALSO
B
FOLLOWS
THE
BASE
CASE
IS
CLEAR
FROM
LEMMA
SINCE
H
B
B
A
Π
THE
INDUCTIVE
STEP
T
B
T
B
XT
B
B
X
B
T
B
T
T
B
XT
U
O
H
INDUCTIVE
HYPOTHESIS
PR
XT
T
U
O
A
XT
H
T
LEMMA
PR
XT
T
PR
HT
XT
T
U
O
PR
XT
T
PR
HT
T
PR
XT
T
U
O
PR
XT
T
U
O
HT
T
AND
B
X
B
T
A
X
H
T
PR
XT
T
B
T
M
T
AGAIN
USING
LEMMA
SPECTRAL
LEARNING
OF
HIDDEN
MARKOV
MODELS
ALGORITHM
THE
REPRESENTATION
IN
THE
PREVIOUS
SECTION
SUGGESTS
THE
ALGORITHM
DETAILED
IN
FIG
WHICH
SIMPLY
USES
RANDOM
SAMPLES
TO
ESTIMATE
THE
MODEL
PARAMETERS
NOTE
THAT
IN
PRACTICE
KNOWING
M
IS
NOT
ESSENTIAL
BECAUSE
THE
METHOD
PRESENTED
HERE
TOLERATES
MODELS
THAT
ARE
NOT
EXACTLY
HMMS
AND
THE
PARAMETER
M
MAY
BE
TUNED
USING
CROSS
VALIDATION
AS
WE
DISCUSSED
EARLIER
THE
REQUIREMENT
FOR
INDEPENDENT
SAMPLES
IS
ONLY
FOR
THE
CONVENIENCE
OF
OUR
SAMPLE
COMPLEXITY
ANALYSIS
THE
MODEL
RETURNED
BY
LEARNHMM
M
N
CAN
BE
USED
AS
FOLLOWS
TO
PREDICT
THE
PROBABILITY
OF
A
SEQUENCE
XT
B
PR
B
XT
B
B
GIVEN
AN
OBSERVATION
XT
THE
INTERNAL
STATE
UPDATE
IS
B
T
B
XT
B
T
B
B
XT
B
T
D
HSU
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
ALGORITHM
LEARNHMM
M
N
INPUTS
M
NUMBER
OF
STATES
N
SAMPLE
SIZE
RETURNS
HMM
MODEL
PARAMETERIZED
BY
B
B
B
X
X
N
INDEPENDENTLY
SAMPLE
N
OBSERVATION
TRIPLES
FROM
THE
HMM
TO
FORM
EMPIRICAL
ESTIMATES
P
P
P
X
X
N
OF
P
P
P
X
X
N
COMPUTE
THE
SVD
OF
P
AND
LET
U
BE
THE
MATRIX
OF
LEFT
SINGULAR
VECTORS
CORRESPONDING
TO
THE
M
LARGEST
SINGULAR
VALUES
COMPUTE
MODEL
PARAMETERS
A
B
U
P
B
B
P
U
P
C
B
X
U
P
X
U
P
X
N
FIG
HMM
LEARNING
ALGORITHM
TO
PREDICT
THE
CONDITIONAL
PROBABILITY
OF
XT
GIVEN
T
XT
T
B
B
XT
B
T
PR
X
B
B
X
B
T
ASIDE
FROM
THE
RANDOM
SAMPLING
THE
RUNNING
TIME
OF
THE
LEARNING
ALGORITHM
IS
DOMINATED
BY
THE
SVD
COMPUTATION
OF
AN
N
N
MATRIX
THE
TIME
REQUIRED
FOR
COMPUTING
JOINT
PROBABILITY
CALCULATIONS
IS
O
FOR
LENGTH
T
SEQUENCES
SAME
AS
IF
ONE
USED
THE
ORDINARY
HMM
PARAMETERS
O
AND
T
FOR
CONDITIONAL
PROBABILITIES
WE
REQUIRE
SOME
EXTRA
WORK
PROPORTIONAL
TO
N
TO
COMPUTE
THE
NORMALIZATION
FACTOR
HOWEVER
OUR
ANALYSIS
SHOWS
THAT
THIS
NORMALIZATION
FACTOR
IS
ALWAYS
CLOSE
TO
SEE
LEMMA
SO
IT
CAN
BE
SAFELY
OMITTED
IN
MANY
APPLICATIONS
NOTE
THAT
THE
ALGORITHM
DOES
NOT
EXPLICITLY
ENSURE
THAT
THE
PREDICTED
PROBABILITIES
LIE
IN
THE
RANGE
THIS
IS
A
DREADED
PROBLEM
THAT
HAS
BEEN
FACED
BY
OTHER
METHODS
FOR
LEARNING
AND
USING
GENERAL
OPERATOR
MODELS
AND
A
NUMBER
OF
HEURISTIC
FOR
COPING
WITH
THE
PROBLEM
HAVE
BEEN
PROPOSED
AND
MAY
BE
APPLICABLE
HERE
SEE
FOR
SOME
RECENT
DEVELOPMENTS
WE
BRIEFLY
MENTION
THAT
IN
THE
CASE
OF
JOINT
PROBABILITY
PREDICTION
CLIPPING
THE
PREDICTIONS
TO
THE
INTERVAL
CAN
ONLY
INCREASE
THE
L
ACCURACY
AND
THAT
THE
KL
ACCURACY
GUARANTEE
EXPLICITLY
REQUIRES
THE
PREDICTED
PROBABILITIES
TO
BE
NON
ZERO
MAIN
RESULTS
WE
NOW
PRESENT
OUR
MAIN
RESULTS
THE
FIRST
RESULT
IS
A
GUARANTEE
ON
THE
ACCURACY
OF
OUR
JOINT
PROBABILITY
ESTIMATES
FOR
OBSERVATION
SEQUENCES
THE
SECOND
RESULT
CONCERNS
THE
ACCURACY
OF
CONDITIONAL
PROBABILITY
ESTIMATES
A
MUCH
MORE
DELICATE
QUANTITY
TO
BOUND
DUE
TO
CONDITIONING
ON
UNLIKELY
EVENTS
WE
ALSO
REMARK
THAT
IF
THE
PROBABILITY
DISTRIBUTION
IS
ONLY
APPROXIMATELY
MODELED
AS
AN
HMM
THEN
OUR
RESULTS
DEGRADE
GRACEFULLY
BASED
ON
THIS
APPROXIMATION
QUALITY
JOINT
PROBABILITY
ACCURACY
LET
ΣM
M
DENOTE
THE
M
TH
LARGEST
SINGULAR
VALUE
OF
A
MATRIX
M
OUR
SAMPLE
COMPLEXITY
BOUND
WILL
DEPEND
POLYNOMIALLY
ON
ΣM
P
AND
ΣM
O
ALSO
DEFINE
K
MIN
PR
J
N
N
K
J
AND
LET
Ε
MIN
K
K
Ε
IN
OTHER
WORDS
Ε
IS
THE
MINIMUM
NUMBER
OF
OBSERVATIONS
THAT
ACCOUNT
FOR
ABOUT
OF
THE
TOTAL
PROBABILITY
MASS
CLEARLY
Ε
N
BUT
IT
CAN
OFTEN
BE
MUCH
SMALLER
IN
REAL
APPLICATIONS
FOR
EXAMPLE
IN
MANY
PRACTICAL
APPLICATIONS
THE
FREQUENCIES
OF
OBSERVATION
SYMBOLS
OBSERVE
A
POWER
LAW
CALLED
ZIPF
LAW
OF
THE
FORM
F
K
K
WHERE
F
K
IS
THE
FREQUENCY
OF
THE
K
TH
MOST
FREQUENTLY
OBSERVED
SYMBOL
IF
THEN
K
O
AND
Ε
O
Ε
BECOMES
INDEPENDENT
OF
THE
NUMBER
OF
OBSERVATIONS
N
THIS
MEANS
THAT
FOR
SUCH
PROBLEMS
OUR
ANALYSIS
BELOW
LEADS
TO
A
SAMPLE
COMPLEXITY
BOUND
FOR
THE
CUMULATIVE
DISTRIBUTION
PR
T
THAT
CAN
BE
INDEPENDENT
OF
N
THIS
IS
USEFUL
IN
DOMAINS
WITH
LARGE
N
SUCH
AS
NATURAL
LANGUAGE
PROCESSING
THEOREM
THERE
EXISTS
A
CONSTANT
C
SUCH
THAT
THE
FOLLOWING
HOLDS
PICK
ANY
ΣM
O
ΣM
P
M
ASSUME
THE
HMM
OBEYS
CONDITION
AND
N
C
M
ΣM
O
ΣM
P
M
ΣM
O
ΣM
P
LOG
Η
Η
AND
T
AND
LET
D
HSU
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
WITH
PROBABILITY
AT
LEAST
Η
THE
MODEL
RETURNED
BY
THE
ALGORITHM
LEARNHMM
M
N
SATISFIES
PR
XT
PR
XT
XT
THE
MAIN
CHALLENGE
IN
PROVING
THEOREM
IS
UNDERSTANDING
HOW
THE
ESTIMATION
ERRORS
ACCUMULATE
IN
THE
ALGORITHM
PROBABILITY
CALCULATION
THIS
WOULD
HAVE
BEEN
LESS
PROBLEMATIC
IF
WE
HAD
ESTIMATES
OF
THE
USUAL
HMM
PARAMETERS
T
AND
O
THE
FULLY
OBSERVABLE
REPRESENTATION
FORCES
US
TO
DEAL
WITH
MORE
CUMBERSOME
MATRIX
AND
VECTOR
PRODUCTS
CONDITIONAL
PROBABILITY
ACCURACY
XT
XT
INTUITIVELY
WE
IN
THIS
SECTION
WE
ANALYZE
THE
ACCURACY
OF
OUR
CONDITIONAL
PROBABILITY
PREDICTIONS
PR
MIGHT
HOPE
THAT
THESE
PREDICTIVE
DISTRIBUTIONS
DO
NOT
BECOME
ARBITRARILY
BAD
OVER
TIME
AS
T
THE
REASON
IS
THAT
WHILE
ESTIMATION
ERRORS
PROPAGATE
INTO
LONG
TERM
PROBABILITY
PREDICTIONS
AS
EVIDENT
IN
THEOREM
THE
HISTORY
OF
OBSERVATIONS
CONSTANTLY
PROVIDES
FEEDBACK
ABOUT
THE
UNDERLYING
HIDDEN
STATE
AND
THIS
INFORMATION
IS
INCORPORATED
USING
BAYES
RULE
IMPLICITLY
VIA
OUR
INTERNAL
STATE
UPDATES
THIS
INTUITION
WAS
CONFIRMED
BY
EYAL
ET
AL
WHO
SHOWED
THAT
IF
ONE
HAS
AN
APPROXIMATE
MODEL
OF
T
AND
O
FOR
THE
HMM
THEN
UNDER
CERTAIN
CONDITIONS
THE
CONDITIONAL
PREDICTION
DOES
NOT
DIVERGE
THIS
CONDITION
IS
THE
POSITIVITY
OF
THE
VALUE
OF
OBSERVATION
Γ
DEFINED
AS
Γ
INF
V
V
O
V
NOTE
THAT
Γ
ΣM
O
N
SO
IT
IS
GUARANTEED
TO
BE
POSITIVE
BY
CONDITION
HOWEVER
Γ
CAN
BE
MUCH
LARGER
THAN
WHAT
THIS
CRUDE
LOWER
BOUND
SUGGESTS
H
RM
THEN
O
H
H
Γ
H
H
TO
INTERPRET
THIS
QUANTITY
Γ
CONSIDER
ANY
TWO
DISTRIBUTIONS
OVER
HIDDEN
STATES
H
AS
THE
TRUE
HIDDEN
STATE
DISTRIBUTION
AND
H
AS
THE
ESTIMATED
HIDDEN
STATE
DISTRIBUTION
THIS
INEQUALITY
GIVES
A
REGARDING
H
LOWER
BOUND
ON
THE
ERROR
OF
THE
ESTIMATED
OBSERVATION
DISTRIBUTIONS
UNDER
O
IN
OTHER
WORDS
THE
OBSERVATION
PROCESS
ON
AVERAGE
REVEAL
ERRORS
IN
OUR
HIDDEN
STATE
ESTIMATION
THE
WORK
OF
EYAL
ET
AL
USES
THIS
AS
A
CONTRACTION
PROPERTY
TO
SHOW
HOW
PREDICTION
ERRORS
DUE
TO
USING
AN
APPROXIMATE
MODEL
DO
NOT
DIVERGE
IN
OUR
SETTING
THIS
IS
MORE
DIFFICULT
AS
WE
DO
NOT
EXPLICITLY
ESTIMATE
O
NOR
DO
WE
EXPLICITLY
MAINTAIN
DISTRIBUTIONS
OVER
HIDDEN
STATES
WE
ALSO
NEED
THE
FOLLOWING
ASSUMPTION
WHICH
WE
DISCUSS
FURTHER
FOLLOWING
THE
THEOREM
STATEMENT
CONDITION
STOCHASTICITY
CONDITION
FOR
ALL
OBSERVATIONS
X
AND
ALL
STATES
I
AND
J
A
X
I
J
Α
THEOREM
THERE
EXISTS
A
CONSTANT
C
SUCH
THAT
THE
FOLLOWING
HOLDS
PICK
ANY
Η
AND
LET
ΣM
O
ΣM
P
M
ASSUME
THE
HMM
OBEYS
CONDITIONS
AND
AND
N
C
M
Α
LOG
Α
Α
Γ
M
ΣM
O
ΣM
P
M
ΣM
O
ΣM
P
LOG
Η
WITH
PROBABILITY
AT
LEAST
Η
THEN
THE
MODEL
RETURNED
BY
LEARNHMM
M
N
SATISFIES
FOR
ANY
TIME
T
KL
PR
XT
XT
PR
XT
XT
T
LN
PR
XT
T
XT
T
PR
TO
JUSTIFY
OUR
CHOICE
OF
ERROR
MEASURE
NOTE
THAT
THE
PROBLEM
OF
BOUNDING
THE
ERRORS
OF
CONDITIONAL
PROBABILITIES
IS
COMPLICATED
BY
THE
ISSUE
OF
THAT
OVER
THE
LONG
RUN
WE
MAY
HAVE
TO
CONDITION
ON
A
VERY
LOW
PROBABILITY
EVENT
THUS
WE
NEED
TO
CONTROL
THE
RELATIVE
ACCURACY
OF
OUR
PREDICTIONS
THIS
MAKES
THE
KL
DIVERGENCE
A
NATURAL
CHOICE
FOR
THE
ERROR
MEASURE
UNFORTUNATELY
BECAUSE
OUR
HMM
CONDITIONS
ARE
MORE
NATURALLY
INTERPRETED
IN
TERMS
OF
SPECTRAL
AND
NORMED
QUANTITIES
WE
END
UP
SWITCHING
BACK
AND
FORTH
BETWEEN
KL
AND
L
ERRORS
VIA
PINSKER
STYLE
INEQUALITIES
AS
IN
IT
IS
NOT
CLEAR
TO
US
IF
A
SIGNIFICANTLY
BETTER
GUARANTEE
COULD
BE
OBTAINED
WITH
A
PURE
L
ERROR
ANALYSIS
NOR
IS
IT
CLEAR
HOW
TO
DO
SUCH
AN
ANALYSIS
THE
ANALYSIS
IN
WHICH
ASSUMED
THAT
APPROXIMATIONS
TO
T
AND
O
WERE
PROVIDED
DEALT
WITH
THIS
PROBLEM
OF
DIVIDING
BY
ZERO
DURING
A
BAYES
RULE
UPDATE
BY
EXPLICITLY
MODIFYING
THE
APPROXIMATE
MODEL
SO
THAT
IT
NEVER
ASSIGNS
THE
PROBABILITY
OF
ANY
EVENT
TO
BE
ZERO
SINCE
IF
THIS
EVENT
OCCURRED
THEN
THE
CONDITIONAL
PROBABILITY
IS
NO
LONGER
DEFINED
IN
OUR
SETTING
CONDITION
ENSURES
THAT
TRUE
MODEL
NEVER
ASSIGNS
THE
PROBABILITY
OF
ANY
EVENT
TO
BE
ZERO
WE
CAN
RELAX
THIS
CONDITION
SOMEWHAT
SO
THAT
WE
NEED
NOT
QUANTIFY
OVER
ALL
OBSERVATIONS
THOUGH
WE
DO
NOT
DISCUSS
THIS
HERE
WE
SHOULD
ALSO
REMARK
THAT
WHILE
OUR
SAMPLE
COMPLEXITY
BOUND
IS
SIGNIFICANTLY
LARGER
THAN
IN
THEOREM
WE
ARE
ALSO
BOUNDING
THE
MORE
STRINGENT
KL
ERROR
MEASURE
ON
CONDITIONAL
DISTRIBUTIONS
D
HSU
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
TABLE
SUMMARY
OF
NOTATION
M
N
Ε
O
T
AX
P
P
P
X
P
P
P
X
X
U
B
B
X
B
NUMBER
OF
STATES
AND
OBSERVATIONS
NUMBER
OF
SIGNIFICANT
OBSERVATIONS
HMM
PARAMETERS
MARGINAL
PROBABILITIES
EMPIRICAL
MARGINAL
PROBABILITIES
SAMPLING
ERRORS
SECTION
MATRIX
OF
M
LEFT
SINGULAR
VECTORS
OF
P
TRUE
OBSERVABLE
PARAMETERS
USING
U
SECTION
B
B
X
B
Δ
X
ESTIMATED
OBSERVABLE
PARAMETERS
USING
U
PARAMETER
ERRORS
SECTION
X
X
SECTION
M
TH
LARGEST
SINGULAR
VALUE
OF
MATRIX
M
ΣM
M
T
B
T
B
TRUE
AND
ESTIMATED
STATES
SECTION
T
H
T
G
T
H
A
X
Γ
Α
H
SECTION
U
O
B
T
U
O
B
T
H
T
M
T
U
O
B
X
U
O
SECTION
INF
O
V
V
MIN
A
X
I
J
LEARNING
DISTRIBUTIONS
CLOSE
TO
HMMS
OUR
L
ERROR
GUARANTEE
FOR
PREDICTING
JOINT
PROBABILITIES
STILL
HOLDS
IF
THE
SAMPLE
USED
TO
ESTIMATE
P
P
P
X
COME
FROM
A
PROBABILITY
DISTRIBUTION
PR
THAT
IS
MERELY
CLOSE
TO
AN
HMM
SPECIFICALLY
ALL
WE
NEED
IS
THAT
THERE
EXISTS
SOME
T
MAX
AND
SOME
M
STATE
HMM
WITH
DISTRIBUTION
PRHMM
SUCH
THAT
PRHMM
SATISFIES
CONDITION
HMM
RANK
CONDITION
HMM
PR
X
T
HMM
T
FOR
ALL
T
T
MAX
T
PR
T
HMM
ΣM
P
IS
THE
RESULTING
ERROR
OF
OUR
LEARNED
MODEL
PR
PR
T
PR
PRHMM
T
PR
T
HMM
T
T
T
T
FOR
ALL
T
T
MAX
THE
SECOND
TERM
IS
NOW
BOUNDED
AS
IN
THEOREM
WITH
SPECTRAL
PARAMETERS
CORRESPONDING
TO
PRHMM
SUBSEQUENT
WORK
FOLLOWING
THE
INITIAL
PUBLICATION
OF
THIS
WORK
SIDDIQI
BOOTS
AND
GORDON
HAVE
PROPOSED
VARIOUS
EXTENSIONS
TO
THE
LEARNHMM
ALGORITHM
AND
ITS
ANALYSIS
FIRST
THEY
SHOW
THAT
THE
MODEL
PARAMETERIZATION
USED
BY
OUR
ALGORITHM
IN
FACT
CAPTURES
THE
CLASS
OF
HMMS
WITH
RANK
M
TRANSITION
MATRICES
WHICH
IS
MORE
GENERAL
THAN
THE
CLASS
OF
HMMS
WITH
M
HIDDEN
STATES
SECOND
THEY
PROPOSE
EXTENSIONS
FOR
USING
LONGER
SEQUENCES
IN
THE
PARAMETER
ESTIMATION
AND
ALSO
FOR
HANDLING
REAL
VALUED
OBSERVATIONS
THESE
EXTENSIONS
PROVE
TO
BE
USEFUL
IN
BOTH
SYNTHETIC
EXPERIMENTS
AND
AN
APPLICATION
TO
TRACKING
WITH
VIDEO
DATA
A
RECENT
WORK
OF
SONG
BOOTS
SIDDIQI
GORDON
AND
SMOLA
PROVIDES
A
KERNELIZATION
OF
OUR
MODEL
PARAMETERIZATION
IN
THE
CONTEXT
OF
HILBERT
SPACE
EMBEDDINGS
OF
CONDITIONAL
PROBABILITY
DISTRIBUTIONS
AND
EXTENDS
VARIOUS
ASPECTS
OF
THE
LEARNHMM
ALGORITHM
AND
ANALYSIS
TO
THIS
SETTING
THIS
EXTENSION
IS
ALSO
SHOWN
TO
BE
ADVANTAGEOUS
IN
A
NUMBER
OF
APPLICATIONS
PROOFS
THROUGHOUT
THIS
SECTION
WE
ASSUME
THE
HMM
OBEYS
CONDITION
TABLE
SUMMARIZES
THE
NOTATION
THAT
WILL
BE
USED
THROUGHOUT
THE
ANALYSIS
IN
THIS
SECTION
ESTIMATION
ERRORS
DEFINE
THE
FOLLOWING
SAMPLING
ERROR
QUANTITIES
P
P
P
P
X
P
X
P
X
D
HSU
ET
AL
JOURNAL
OF
COMPUTER
AND
SYSTEM
SCIENCES
THE
FOLLOWING
LEMMA
BOUNDS
THESE
ERRORS
WITH
HIGH
PROBABILITY
AS
A
FUNCTION
OF
THE
NUMBER
OF
OBSERVATION
SAMPLES
USED
TO
FORM
THE
ESTIMATES
LEMMA
IF
THE
ALGORITHM
INDEPENDENTLY
SAMPLES
N
OBSERVATION
TRIPLES
FROM
THE
HMM
THEN
WITH
PROBABILITY
AT
LEAST
Η
N
LN
N
Η
LN
Η
N
X
LN
X
MIN
Η
K
N
K
X
N
N
MAX
X
LN
N
Η
K
N
K
LN
N
Η
N
WHERE
K
IS
DEFINED
IN
PROOF
SEE
APPENDIX
A
THE
REST
OF
THE
ANALYSIS
ESTIMATES
HOW
THE
SAMPLING
ERRORS
AFFECT
THE
ACCURACIES
OF
THE
MODEL
PARAMETERS
WHICH
IN
TURN
AFFECT
THE
PREDICTION
QUALITY
WE
NEED
SOME
RESULTS
FROM
MATRIX
PERTURBATION
THEORY
WHICH
ARE
GIVEN
IN
APPENDIX
B
LET
U
RN
M
BE
MATRIX
OF
LEFT
SINGULAR
VECTORS
OF
P
THE
FIRST
LEMMA
IMPLIES
THAT
IF
P
IS
SUFFICIENTLY
CLOSE
TO
P
I
E
IS
SMALL
ENOUGH
THEN
THE
DIFFERENCE
BETWEEN
PROJECTING
TO
RANGE
U
AND
TO
RANGE
U
IS
SMALL
IN
PARTICULAR
U
O
WILL
BE
INVERTIBLE
AND
BE
NEARLY
AS
WELL
CONDITIONED
AS
U
O
LEMMA
SUPPOSE
Ε
ΣM
P
FOR
SOME
Ε
LET
Ε
ΣM
P
THEN
WITH
THE
GAINING
POPULARITY
OF
REMOTE
STORAGE
E
G
IN
THE
CLOUD
WE
CONSIDER
THE
SETTING
WHERE
A
SMALL
PROTECTED
LOCAL
MACHINE
WISHES
TO
ACCESS
DATA
ON
A
LARGE
UNTRUSTED
REMOTE
MACHINE
THIS
SETTING
WAS
INTRODUCED
IN
THE
RAM
MODEL
IN
THE
CONTEXT
OF
SOFTWARE
PROTECTION
BY
GOLDREICH
AND
OSTROVSKY
A
SECURE
OBLIVIOUS
RAM
SIMULATION
ALLOWS
FOR
A
CLIENT
WITH
SMALL
E
G
CONSTANT
SIZE
PROTECTED
MEMORY
TO
HIDE
NOT
ONLY
THE
DATA
BUT
ALSO
THE
SEQUENCE
OF
LOCATIONS
IT
ACCESSES
BOTH
READS
AND
WRITES
IN
THE
UNPROTECTED
MEMORY
OF
SIZE
N
OUR
MAIN
RESULTS
ARE
AS
FOLLOWS
WE
ANALYZE
SEVERAL
SCHEMES
FROM
THE
LITERATURE
OBSERVING
A
REPEATED
DESIGN
FLAW
THAT
LEAKS
INFORMATION
ON
THE
MEMORY
ACCESS
PATTERN
FOR
SOME
OF
THESE
SCHEMES
THE
LEAKAGE
IS
ACTUALLY
NON
NEGLIGIBLE
WHILE
FOR
OTHERS
IT
IS
NEGLIGIBLE
ON
THE
POSITIVE
SIDE
WE
PRESENT
A
NEW
SECURE
OBLIVIOUS
RAM
SCHEME
EXTENDING
A
RECENT
SCHEME
BY
GOODRICH
AND
MITZENMACHER
OUR
SCHEME
USES
ONLY
O
LOCAL
MEMORY
AND
ITS
AMORTIZED
OVERHEAD
IS
O
N
LOG
LOG
N
OUTPERFORMING
THE
PREVIOUSLY
BEST
O
N
OVERHEAD
AMONG
SCHEMES
WHERE
THE
CLIENT
ONLY
USES
O
ADDITIONAL
LOCAL
MEMORY
COMPUTER
SCIENCE
DEPARTMENT
TECHNION
SUPPORTED
BY
ISF
GRANT
AND
BSF
GRANT
E
MAIL
EYALK
CS
TECHNION
AC
IL
STEALTH
SOFTWARE
TECHNOLOGIES
INC
E
MAIL
STEVE
STEALTHSOFTWAREINC
COM
DEPARTMENT
OF
COMPUTER
SCIENCE
AND
DEPARTMENT
OF
MATHEMATICS
UCLA
THIS
MATERIAL
IS
BASED
UPON
WORK
SUPPORTED
IN
PART
BY
NSF
GRANTS
AND
US
ISRAEL
BSF
GRANT
GRANTS
FROM
OKAWA
FOUNDATION
IBM
LOCKHEED
MARTIN
CORPORATION
AND
THE
DEFENSE
ADVANCED
RESEARCH
PROJECTS
AGENCY
THROUGH
THE
U
OFFICE
OF
NAVAL
RESEARCH
UNDER
CONTRACT
THE
VIEWS
EXPRESSED
ARE
THOSE
OF
THE
AUTHOR
AND
DO
NOT
REFLECT
THE
OFFICIAL
POLICY
OR
POSITION
OF
THE
DEPARTMENT
OF
DEFENSE
OR
THE
U
GOVERNMENT
E
MAIL
RAFAIL
CS
UCLA
EDU
RAFAIL
OSTROVSKY
WE
ALSO
PRESENT
A
TRANSFORMATION
OF
OUR
SCHEME
ABOVE
WHOSE
AMORTIZED
OVERHEAD
IS
O
N
LOG
LOG
N
INTO
A
SCHEME
WITH
WORST
CASE
OVERHEAD
OF
O
N
LOG
LOG
N
KEYWORDS
OBLIVIOUS
RAM
CUCKOO
HASHING
SECURE
COMPUTATION
INTRODUCTION
CONSIDER
THE
FOLLOWING
PROBLEM
A
SMALL
PROTECTED
CPU
WANTS
TO
RUN
A
PROGRAM
THAT
REQUIRES
ACCESS
TO
UNPROTECTED
RAM
WITHOUT
REVEALING
ANYTHING
BUT
THE
RUNNING
TIME
AND
THE
SIZE
OF
MEMORY
USED
BY
THE
PROGRAM
ENCRYPTION
CAN
BE
EMPLOYED
TO
HIDE
THE
CONTENTS
OF
THE
MEMORY
CELLS
ACCESSED
BY
THE
PROGRAM
BUT
THE
SEQUENCE
OF
READ
AND
WRITE
LOCATIONS
MADE
TO
THE
RAM
MAY
LEAK
INFORMATION
AS
WELL
THE
NOTION
OF
OBLIVIOUS
RAM
WAS
INTRODUCED
BY
GOLDREICH
AS
A
MEANS
TO
HIDE
BOTH
THE
CONTENTS
AND
THE
SO
CALLED
ACCESS
PATTERN
OF
MEMORY
PROBES
THIS
CAN
BE
VIEWED
AS
CASTING
INTO
THE
RAM
MODEL
THE
WORK
ON
OBLIVIOUS
SIMULATION
OF
TURING
MACHINES
THE
OBLIVIOUS
RAM
MODEL
ALSO
FITS
THE
SETTING
OF
A
CLIENT
THAT
STORES
ITS
DATA
IN
A
REMOTE
STORAGE
SERVER
AND
HAS
VARIOUS
OTHER
APPLICATIONS
SEE
E
G
IN
PREVIOUS
WORK
THE
INITIAL
RESULTS
ON
OBLIVIOUS
RAM
WERE
PRESENTED
BY
GOLDREICH
AND
FEATURED
TWO
SOLUTIONS
A
SQUARE
ROOT
SOLUTION
WITH
LOW
ROUND
COMPLEXITY
AND
A
RECURSIVE
SQUARE
ROOT
SOLUTION
IN
THE
SQUARE
ROOT
SOLUTION
THE
TIME
OVERHEAD
FOR
EXECUTING
THE
PROGRAM
INCREASES
BY
A
FACTOR
OF
O
N
WHILE
IN
THE
RECURSIVE
SOLUTION
THE
TIME
OVERHEAD
IN
CREASES
BY
O
LOG
N
LOG
LOG
N
FACTOR
WHERE
N
IS
THE
NUMBER
OF
MEMORY
LOCATIONS
USED
BY
THE
ORIGINAL
PROGRAM
OSTROVSKY
PROPOSED
A
DIFFERENT
OBLIVIOUS
SIMULATION
FOR
WHICH
THE
TIME
REQUIREMENT
IS
INCREASED
ONLY
BY
A
FACTOR
OF
O
MIN
N
T
WHERE
T
IS
THE
PROGRAM
RUNNING
TIME
OSTROVSKY
SIMULATION
ALGORITHM
IS
REFERRED
TO
AS
THE
HIERARCHICAL
ALGORITHM
BECAUSE
OF
THE
NATURE
OF
THE
DATA
STRUCTURE
USED
BY
THE
RAM
THE
HIGH
LEVEL
DESCRIPTION
OF
OSTROVSKY
HIERARCHICAL
SOLUTION
CAN
BE
STATED
AS
FOLLOWS
THERE
IS
A
SEQUENCE
OF
BUFFERS
WHOSE
SIZE
GROW
AT
A
GEOMETRIC
RATE
AND
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
SMALLER
BUFFERS
ARE
RESHUFFLED
INTO
LARGER
ONES
AS
THEY
FILL
UP
IN
THE
ORIGINAL
WORK
OF
THE
BUFFERS
WERE
STANDARD
HASH
TABLES
WITH
SUFFICIENTLY
LARGE
BUCKETS
AND
IT
EMPLOYED
A
TECHNIQUE
KNOWN
AS
OBLIVIOUS
SHUFFLING
FOR
THE
RESHUFFLES
A
SLIGHTLY
DIFFERENT
SOMEWHAT
SIMPLER
RESHUFFLING
METHODS
WAS
PROPOSED
BY
GOLDREICH
AND
OSTROVSKY
THOUGH
THE
ASYMPTOTIC
BEHAVIOR
OF
RESHUFFLES
IN
AND
IN
IS
THE
SAME
IN
ALL
OF
THE
ABOVE
SOLUTIONS
TO
PROTECT
THE
DATA
CONTENTS
A
PRIVATE
KEY
ENCRYPTION
AND
AUTHENTICATION
SCHEME
WAS
USED
AND
EACH
TIME
ELEMENTS
WERE
READ
AND
WRITTEN
BACK
TO
THE
INSECURE
RAM
THEY
WOULD
BE
RE
ENCRYPTED
AND
AUTHENTICATED
THE
EFFICIENCY
OF
OBLIVIOUS
RAM
IS
MEASURED
BY
THREE
MAIN
PARAMETERS
THE
AMOUNT
OF
LOCAL
CLIENT
STORAGE
THE
AMOUNT
OF
REMOTE
SERVER
STORAGE
AND
THE
AMORTIZED
OVERHEAD
OF
READING
OR
WRITING
AN
ELEMENT
GOLDREICH
USED
SUB
LINEAR
LOCAL
STORAGE
WHILE
ALL
USED
A
CONSTANT
AMOUNT
OF
LOCAL
STORAGE
OSTROVSKY
HIERARCHICAL
SOLUTION
USED
O
N
LOG
N
REMOTE
STORAGE
AND
OFFERED
TWO
DIFFERENT
WAYS
TO
PERFORM
OBLIVIOUS
SHUFFLING
THAT
LED
TO
EITHER
O
N
ACCESS
OVERHEAD
WITH
A
SMALL
HIDDEN
CONSTANT
OR
O
N
ACCESS
OVERHEAD
WITH
A
LARGE
HIDDEN
CONSTANT
SUBSEQUENT
WORKS
IMPROVED
UPON
OSTROVSKY
HIERARCHICAL
SOLUTION
WILLIAMS
AND
SION
INTRODUCED
A
METHOD
TO
PERFORM
OBLIVIOUS
SORTING
BY
USING
O
N
LOCAL
MEMORY
TO
REDUCE
THE
ACCESS
OVERHEAD
DOWN
TO
O
N
BUT
WITH
SUPER
LINEAR
REMOTE
STORAGE
SUBSEQUENTLY
WILLIAMS
ET
AL
MADE
USE
OF
BLOOM
FILTERS
TO
FURTHER
REDUCE
THE
OVERHEAD
TO
O
LOG
N
LOG
LOG
N
AND
THE
REMOTE
STORAGE
TO
O
N
BUT
AS
WE
SHALL
SEE
THIS
EFFICIENCY
IMPROVEMENT
ALLOWS
AN
ADVERSARY
TO
OBTAIN
INFORMATION
ABOUT
THE
ACCESS
PATTERN
RECENT
WORKS
OF
PINKAS
AND
REINMAN
GOODRICH
AND
MITZENMACHER
AND
GOODRICH
ET
AL
INVESTIGATED
THE
USAGE
OF
CUCKOO
HASHING
TO
FURTHER
IMPROVE
PARAMETERS
WE
WILL
SHOW
THAT
CUCKOO
HASHING
MAY
POTENTIALLY
LEAD
TO
A
SEVERE
REDUCTION
IN
SECURITY
IN
PARTICULAR
WE
EXPLICITLY
CONSTRUCT
AN
ADVERSARY
THAT
BREAKS
THE
SECURITY
OF
THE
SCHEME
OF
HOWEVER
WHEN
USED
CORRECTLY
CUCKOO
HASHING
CAN
RESULT
IN
SECURE
SCHEMES
AS
SEEN
IN
IN
A
SCHEME
WAS
CONSTRUCTED
WITH
CONSTANT
LOCAL
STORAGE
O
N
REMOTE
STORAGE
AND
O
N
ACCESS
OVERHEAD
IN
A
SCHEME
USING
CUCKOO
HASHING
WAS
GIVEN
WITH
SIMILAR
PARAMETERS
AS
WELL
AS
AN
ALTERNATIVE
SCHEME
THAT
USED
O
NΕ
LOCAL
STORAGE
WITH
O
LOG
N
OVERHEAD
WHICH
HAS
COMPARABLE
PARAMETERS
TO
RECENTLY
BONEH
MAZIERES
AND
POPA
EXTENDED
THE
NOTION
OF
OBLIVIOUS
RAM
AND
DESCRIBED
A
NEW
SCHEME
IS
A
JOURNAL
VERSION
THAT
MERGED
RESULTS
OF
WITH
LOW
ROUND
COMPLEXITY
ANALOGOUS
TO
GOLDREICH
SQUARE
ROOT
SOLUTION
OF
LOW
ROUND
COMPLEXITY
THIS
NEW
SCHEME
INTRODUCES
A
BLOCK
SIZE
B
SO
THAT
THE
REMOTE
STORAGE
HAS
SIZE
ROUGHLY
BN
STORING
N
ELEMENTS
THE
LOCAL
MEMORY
SIZE
IS
AN
ADJUSTABLE
P
PARAMETER
FOR
WHICH
TWO
POSSIBLE
VALUES
B
N
AND
BN
LOG
BN
WERE
SUGGESTED
AND
THE
ACCESS
OVERHEAD
WITH
THESE
MEMORY
Q
SIZES
IS
O
BN
LOG
BN
AND
O
N
LOG
BN
RESPECTIVELY
N
THE
KEY
FEATURE
IS
THAT
THE
AMORTIZED
ROUND
COMPLEXITY
IS
LOGARITHMIC
OR
CONSTANT
WE
GIVE
A
MORE
DETAILED
REVIEW
OF
THE
MOST
RELEVANT
SCHEMES
IN
SECTION
ANOTHER
INTERESTING
QUESTION
IS
THAT
OF
OBTAINING
SCHEMES
WITH
WORST
CASE
RATHER
THAN
AMORTIZED
OVERHEAD
THIS
QUESTION
WAS
RECENTLY
STUDIED
BY
GOODRICH
ET
AL
AND
SHI
ET
AL
GOODRICH
ET
AL
CONSTRUCTED
TWO
SCHEMES
ONE
OF
WHICH
USED
O
N
CLIENT
MEMORY
TO
ACHIEVE
O
LOG
N
WORST
CASE
OVERHEAD
THE
OTHER
USED
CONSTANT
CLIENT
MEMORY
AND
SHOWED
HOW
TO
EXTEND
THE
SQUARE
ROOT
SOLUTION
OF
TO
ACHIEVE
O
N
N
WORST
CASE
OVERHEAD
SHI
ET
AL
CONSTRUCTED
A
SCHEME
WITH
O
N
WORST
CASE
OVERHEAD
WITH
CONSTANT
CLIENT
MEMORY
WE
CONSIDER
THE
WORSTCASE
OVERHEAD
MEASURE
FOR
OUR
CONSTRUCTION
IN
SECTION
THE
WORKS
OF
AJTAI
AND
DAMGA
RD
MELDGAARD
AND
NIELSEN
PROVIDE
A
SOLUTION
TO
OBLIVIOUS
RAM
WITH
INFORMATION
THEORETIC
SECURITY
IN
A
RESTRICTED
MODEL
WHERE
ADVERSARY
IS
NOT
ALLOWED
TO
READ
MEMORY
CONTENTS
THESE
SOLUTIONS
RESULT
IN
POLY
LOGARITHMIC
ACCESS
OVERHEAD
AND
OPERATE
IN
A
SLIGHTLY
DIFFERENT
MODEL
WHICH
ONLY
CONSIDERS
HIDING
THE
ACCESS
PATTERN
AND
NOT
THE
DATA
ITSELF
TO
COMPARE
THESE
TO
EXISTING
SCHEMES
IN
THE
STANDARD
MODEL
OF
WE
CAN
ENCRYPT
THE
DATA
WITH
NO
ADDITIONAL
ASYMPTOTIC
OVERHEAD
TO
HIDE
THE
DATA
AS
WELL
ALTHOUGH
IT
IS
THE
CASE
THAT
THESE
CONVERTED
SCHEMES
HAVE
WORSE
PERFORMANCE
THAN
EXISTING
SCHEMES
IN
THE
STANDARD
MODEL
THE
COMPARISON
IS
UNFAIR
AS
THESE
SCHEMES
WERE
CREATED
AS
A
TRADE
OFF
BETWEEN
HIDING
THE
DATA
AND
ACHIEVING
INFORMATION
THEORETIC
HIDING
OF
THE
ACCESS
PATTERN
WE
ALSO
MENTION
THE
RELATED
WORK
OF
BONEH
KUSHILEVITZ
OSTROVSKY
AND
SKEITH
WITH
AMORTIZED
IMPROVEMENTS
IN
THAT
DESCRIBES
A
PIR
WRITING
SCHEME
IN
A
PUBLIC
KEY
SETTING
THE
SCHEME
ALLOWS
FOR
PRIVATE
STORAGE
AND
RETRIEVAL
OF
PUBLIC
KEY
ENCRYPTED
DATA
BUT
THE
KEY
DIFFERENCE
IS
THAT
WHILE
THE
COMMUNICATION
COMPLEXITY
OF
THE
SCHEME
IS
SUB
LINEAR
SPECIF
ICALLY
O
N
LOG
N
AND
THE
ROUND
COMPLEXITY
IS
SMALL
THE
SERVER
MUST
PERFORM
A
LINEAR
AMOUNT
OF
WORK
ON
THE
DATABASE
PIR
WRITING
ALLOWS
USERS
WITHOUT
THE
PRIVATE
KEY
TO
WRITE
INTO
THE
DATABASE
WITH
HIDING
THE
READ
WRITE
PATTERN
BUT
THE
MODEL
IS
MORE
TAXING
THAN
OBLIVIOUS
RAM
SCHEMES
THAT
ONLY
REQUIRE
A
SUB
LINEAR
AMOUNT
OF
COMPUTATION
FOR
THE
DATABASE
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
OUR
CONTRIBUTION
IN
THIS
PAPER
WE
POINT
OUT
A
FLAW
REGARDING
THE
WAY
HASH
OVERFLOWS
ARE
DEALT
WITH
IN
PREVIOUS
SCHEMES
THE
IDEA
IS
AS
FOLLOWS
AFTER
THE
END
OF
A
RESHUFFLE
THE
SERVER
KNOWS
THAT
THE
DATA
STORED
AT
A
LEVEL
CAN
BE
INSERTED
INTO
THE
HASH
TABLE
AT
THAT
LEVEL
WITHOUT
AN
OVERFLOW
WHILE
THIS
SIMPLE
OBSERVATION
MIGHT
NOT
SEEM
VERY
USEFUL
IT
COULD
ACTUALLY
REVEAL
A
SIGNIFICANT
AMOUNT
OF
INFORMATION
FOR
A
CONCRETE
EXAMPLE
WHEN
USING
CUCKOO
HASHING
IT
IS
KNOWN
THAT
NO
THREE
ELEMENTS
A
B
C
HAVE
THE
PROPERTY
THAT
A
B
C
AND
A
B
C
OTHERWISE
THEY
COULD
NOT
HAVE
BEEN
INSERTED
INTO
THE
TABLE
HOWEVER
DURING
SUBSEQUENT
PROBES
X
Y
Z
TO
THAT
HASH
TABLE
FOR
ELEMENTS
X
Y
Z
WHICH
ARE
ACTUALLY
NOT
IN
THE
TABLE
WITH
SOME
NOTICEABLE
PROBABILITY
WE
MAY
HAVE
X
Y
Z
AND
X
Y
Z
IN
SUCH
A
CASE
THE
SERVER
IMMEDIATELY
KNOWS
THAT
X
Y
Z
CANNOT
ALL
LIVE
INSIDE
THAT
TABLE
THIS
CAN
BE
USED
TO
DISTINGUISH
TWO
SEQUENCES
OF
MEMORY
ACCESSES
ONE
IN
WHICH
ONLY
ELEMENTS
LIVING
AT
THIS
HASH
TABLE
ARE
READ
AND
ONE
WHICH
READS
ELEMENTS
THAT
DO
NOT
LIVE
AT
THIS
LEVEL
IF
THE
TABLE
IS
OF
CONSTANT
SIZE
THIS
LEAD
TO
A
DISTINGUISHER
WITH
CONSTANT
SUCCESS
PROBABILITY
WE
AND
INDEPENDENTLY
DISCOVERED
A
FLAW
IN
THAT
IS
DUE
TO
THIS
ISSUE
IN
SECTION
WE
DEMONSTRATE
THIS
FLAW
BY
CONSTRUCTING
AN
ACTUAL
ADVERSARY
THAT
CAN
DISTINGUISH
BETWEEN
TWO
READ
WRITE
SEQUENCES
WITH
CONSTANT
PROBABILITY
BELIEVING
THAT
THERE
WAS
A
DEEPER
CAUSE
TO
THIS
ISSUE
WE
FURTHER
INVESTIGATED
HOW
HASH
OVERFLOWS
AFFECTED
OTHER
OBLIVIOUS
RAM
SCHEMES
WE
UNCOVER
PREVIOUSLY
UNDISCOVERED
FLAWS
THAT
WE
BELIEVE
TO
BE
THE
ROOT
OF
THE
PROBLEM
AND
PRESENT
THESE
IN
SECTION
WE
SUMMARIZE
THE
IMPACT
OF
THE
HASH
OVERFLOW
ISSUE
ON
OTHER
EXISTING
SCHEMES
THERE
IS
A
FLAW
IN
THE
PROOF
OF
LEMMA
IN
HOWEVER
IN
THIS
CASE
THE
FLAW
HAS
ONLY
A
NEGLIGIBLE
IMPACT
ON
THE
RELEVANT
PROBABILITIES
AND
SO
THE
OVERALL
SECURITY
OF
THE
SCHEME
REMAINS
INTACT
SAME
HOLDS
FOR
CLAIM
A
SIMILAR
FLAW
APPEARS
ALSO
IN
THE
PROOF
OF
THEOREM
OF
IN
THIS
CASE
HOWEVER
THE
IMPACT
IS
SIGNIFICANT
AND
THE
SCHEME
TURNS
OUT
TO
BE
INSECURE
THE
SCHEMES
IN
ALSO
REHASH
THEIR
TABLES
IF
A
BUCKET
OVERFLOWS
THE
SECURITY
PROOFS
IN
THESE
PAPERS
NOTE
THAT
THIS
ONLY
HAPPENS
WITH
NEGLIGIBLE
PROBABILITY
THE
SCHEME
IN
DOES
NOT
EXPLICITLY
SPECIFY
A
HASH
FUNCTION
BECAUSE
IT
USES
A
BLOOM
FILTER
TO
DETERMINE
IF
AN
ELEMENT
IS
IN
A
TABLE
BEFORE
QUERYING
IT
HOWEVER
IF
THE
BLOOM
FILTER
RETURNS
A
FALSE
POSITIVE
WITH
AN
INVERSE
POLYNOMIAL
PROBABILITY
AND
A
STANDARD
HASH
ALGORITHM
SUCH
AS
BUCKET
HASHING
IS
USED
THEN
THERE
EXISTS
AN
ADVERSARY
WITH
A
NONNEGLIGIBLE
CHANCE
OF
BREAKING
THE
SCHEME
FOR
A
CAREFUL
ANALYSIS
OF
THIS
SCHEME
SEE
ONE
OF
THE
SCHEMES
IN
USES
CONSTANT
LOCAL
MEMORY
AND
O
LOG
N
SIZED
STASHES
FOR
CUCKOO
HASHING
THE
PROBABILITY
OF
OVERFLOW
IN
THIS
CASE
WAS
SHOWN
TO
BE
NEGLIGIBLE
SO
THE
SECURITY
IS
NOT
IMPACTED
TWO
OTHER
VARIANTS
ONE
WITH
CONSTANT
LOCAL
MEMORY
AND
ONE
WITH
O
N
LOCAL
MEMORY
USE
A
CONSTANT
SIZE
STASH
FOR
CUCKOO
HASHING
THE
PROBABILITY
OF
OVERFLOW
FOR
THESE
HASH
TABLES
ARE
AN
INVERSE
POLYNOMIAL
WHERE
THE
DEGREE
IS
PROPORTIONAL
TO
THE
SIZE
OF
THE
STASH
AND
RESULTS
IN
A
NON
NEGLIGIBLE
ADVANTAGE
FOR
A
DISTINGUISHER
WE
EMPHASIZE
THAT
WE
REFER
TO
JUST
TO
GIVE
ANOTHER
ILLUSTRATION
OF
THE
HASHING
ISSUE
INDEED
IN
A
NEWER
VERSION
OF
THAT
WORK
CONSTANT
SIZED
STASHES
ARE
NO
LONGER
USED
AND
SO
THERE
ARE
NO
SECURITY
PROBLEMS
WE
THEN
ASK
THE
QUESTION
IS
THERE
A
SECURE
OBLIVIOUS
RAM
THAT
HAS
AMORTIZED
ACCESS
OVERHEAD
O
N
WITH
CONSTANT
LOCAL
MEMORY
THE
WORK
OF
OFFERS
A
SOLUTION
WITH
ACCESS
OVERHEAD
O
LOG
N
LOG
LOG
N
USING
O
N
LOCAL
STORAGE
BUT
BASED
ON
THE
ACCURATE
ANALYSIS
OF
AND
OUR
NEWLY
DISCOVERED
FLAWS
REGARDING
HASH
OVERFLOWS
THE
DISTINGUISHING
ADVANTAGE
OF
AN
ADVERSARY
MAY
BE
NON
NEGLIGIBLE
THE
RECENT
RESULTS
OF
SHOW
THAT
IT
IS
POSSIBLE
TO
ACHIEVE
A
SECURE
OBLIVIOUS
RAM
WITH
O
LOG
N
ACCESS
OVERHEAD
USING
O
NΕ
LOCAL
STORAGE
WE
ANSWER
THE
ABOVE
QUESTION
IN
THE
AFFIRMATIVE
BY
PRESENTING
A
SCHEME
WITH
O
N
LOG
LOG
N
ACCESS
OVERHEAD
WHILE
MAINTAINING
OPTIMAL
O
LOCAL
STORAGE
AND
OPTIMAL
O
N
REMOTE
STORAGE
TO
ACCOMPLISH
THIS
WE
OBSERVE
THAT
THE
ACCESS
OVERHEAD
CONSISTS
OF
TWO
TYPES
SCAN
OVERHEAD
AND
RESHUFFLE
OVERHEAD
IN
SEVERAL
KNOWN
SCHEMES
THERE
IS
AN
IMBALANCE
BETWEEN
THESE
TWO
QUANTITIES
AND
BY
CAREFULLY
BALANCING
THE
SIZE
OF
EACH
LEVEL
WE
CAN
ASYMPTOTICALLY
REDUCE
THE
OVERALL
ACCESS
OVERHEAD
THE
STARTING
POINT
FOR
OUR
SCHEME
IS
THE
SECURE
SCHEME
OF
THAT
USES
O
LOCAL
MEMORY
A
STASH
OF
SIZE
O
LOG
N
AND
HAS
O
N
ACCESS
OVERHEAD
WE
APPLY
TWO
MODIFICATIONS
TO
IT
WE
REDUCE
THE
SCAN
OVERHEAD
AND
WE
BALANCE
THE
COST
OF
A
SCAN
AND
A
RESHUFFLE
BY
INCREASING
THE
SIZES
OF
THE
LEVELS
BUT
REDUCING
THE
OVERALL
NUMBER
OF
LEVELS
OUR
CONSTRUCTION
ALSO
USES
A
MECHANISM
THAT
MAY
BE
SEEN
AS
A
VERSION
OF
THE
SHARED
STASH
IDEA
FROM
NAMELY
ONE
STASH
THAT
IS
COMMON
TO
ALL
BUFFERS
AND
ACCUMULATES
A
LIMITED
NUMBER
OF
ELEMENTS
THAT
CANNOT
BE
STORED
IN
THE
BUFFERS
DUE
TO
UNLUCKY
CHOICE
OF
HASH
FUNCTIONS
EXCEPT
THAT
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
IN
OUR
CASE
THIS
STASH
IS
VIRTUAL
AND
ITS
ELEMENTS
ARE
ACTUALLY
RE
INSERTED
INTO
THE
DATA
STRUCTURE
OUR
SCHEME
IS
DESCRIBED
IN
SECTION
SOME
OF
THE
PREVIOUS
WORK
ON
WHICH
WE
RELY
IS
DESCRIBED
IN
SECTION
FINALLY
BECAUSE
THE
OVERHEAD
IS
AMORTIZED
PROCESSING
SOME
QUERIES
MAY
TAKE
MUCH
LONGER
THAN
OTHERS
ALTHOUGH
THESE
TIMES
ARE
KNOWN
IN
ADVANCE
AND
DO
NOT
REVEAL
ANY
INFORMATION
IT
COULD
HAVE
A
NEGATIVE
IMPACT
ON
PRACTICAL
APPLICATIONS
THAT
REQUIRE
EACH
QUERY
TO
BE
PERFORMED
QUICKLY
THE
QUESTION
OF
ACHIEVING
WORSTCASE
OVERHEAD
FOR
OBLIVIOUS
RAM
WAS
RECENTLY
CONSIDERED
BY
GOODRICH
ET
AL
AND
SHI
ET
AL
WE
FOCUS
ON
THE
CASE
WHERE
THE
CLIENT
HAS
CONSTANT
MEMORY
IN
IT
IS
SHOWN
HOW
TO
EXTEND
THE
SQUAREROOT
SOLUTION
OF
SO
THAT
IT
ACHIEVES
O
N
N
WORST
CASE
OVERHEAD
IN
SECTION
WE
DESCRIBE
A
TECHNIQUE
WHERE
WE
INCREASE
THE
MEMORY
SIZE
AT
EACH
LEVEL
BY
A
CONSTANT
FACTOR
AND
WE
SCHEDULE
THE
OPERATIONS
IN
A
WAY
THAT
SPREADS
OUT
THE
AMORTIZATION
AS
A
WARMUP
WE
FIRST
SHOW
HOW
THIS
TECHNIQUE
CAN
BE
APPLIED
TO
THE
ORIGINAL
HIERARCHICAL
SOLUTION
TO
OBTAIN
A
SCHEME
WITH
O
N
WORST
CASE
OVERHEAD
THEN
WE
DESCRIBE
THE
NECESSARY
ADDITIONAL
MODIFICATIONS
FOR
OUR
NEW
SCHEME
TO
ACHIEVE
AN
OBLIVIOUS
RAM
SCHEME
WITH
O
N
LOG
LOG
N
WORST
CASE
OVERHEAD
USING
CONSTANT
CLIENT
MEMORY
WITHOUT
INCREASING
THE
ASYMPTOTIC
SERVER
MEMORY
PRELIMINARIES
RAM
MODEL
THE
RANDOM
ACCESS
MACHINE
RAM
MODEL
CONSISTS
OF
A
CPU
AND
A
MEMORY
STORAGE
OF
SIZE
N
THE
CPU
EXECUTES
A
PROGRAM
THAT
CAN
ACCESS
THE
MEMORY
BY
USING
READ
R
AND
WRITE
R
VAL
OPERATIONS
WHERE
R
N
IS
AN
INDEX
TO
A
MEMORY
LOCATION
THE
ACCESS
PATTERN
OF
THE
PROGRAM
IS
THE
SEQUENCE
OF
READS
AND
WRITES
IT
MAKES
TO
THE
MEMORY
INCLUDING
BOTH
THE
DATA
AND
THE
MEMORY
LOCATIONS
IN
AN
ACTUAL
IMPLEMENTATION
OF
A
RAM
THE
CPU
IS
A
PROTECTED
LOCAL
DEVICE
POSSIBLY
PROBABILISTIC
THAT
INTERNALLY
HAS
A
SMALL
NUMBER
OF
REGISTERS
PERFORMS
BASIC
ARITHMETIC
OPERATIONS
AND
HAS
ACCESS
TO
AN
EXTERNAL
DEVICE
THAT
SIMULATES
THE
MEMORY
E
G
A
PHYSICAL
MEMORY
DEVICE
WE
SAY
THAT
A
SIMULATION
IS
A
SECURE
OBLIVIOUS
RAM
IF
FOR
ANY
TWO
ACCESS
PATTERNS
IN
IDEAL
RAM
THE
CORRESPONDING
ACCESS
PATTERNS
IN
THE
SIMULATION
ARE
COMPUTATIONALLY
INDISTINGUISHABLE
HASH
FUNCTIONS
THROUGHOUT
THIS
PAPER
AS
WELL
AS
IN
PRIOR
WORKS
A
HASH
FUNCTION
IS
CONSIDERED
TO
BE
A
RANDOM
ORACLE
OR
A
PSEUDO
RANDOM
FUNCTION
FAMILY
FK
THE
DOMAIN
OF
THIS
HASH
FUNCTION
IS
TYPICALLY
TAKEN
TO
BE
N
ALONG
WITH
SOME
DUMMY
VALUES
AND
THE
RANGE
OF
THESE
HASH
FUNCTIONS
ARE
INDICES
OF
HASHTABLES
OF
SIZE
AT
MOST
O
N
THE
KEY
PROPERTY
THAT
WE
NEED
FROM
THESE
HASH
FUNCTIONS
ARE
THAT
THEY
BEHAVE
LIKE
INDEPENDENT
RANDOM
FUNCTIONS
RATHER
THAN
ANY
PARTICULAR
CRYPTOGRAPHIC
FEATURE
SUCH
AS
RESISTANCE
TO
FINDING
PRE
IMAGES
THESE
HASH
FUNCTIONS
ARE
USED
FOR
THE
HASH
TABLES
STANDARD
HASHING
WITH
BUCKETS
OR
CUCKOO
HASHING
AS
DESCRIBED
NEXT
IN
THE
HIERARCHICAL
SOLUTION
CUCKOO
HASHING
CUCKOO
HASHING
IS
A
HASH
TABLE
DATA
STRUCTURE
INTRODUCED
BY
PAGH
AND
RODLER
THE
SALIENT
PROPERTY
OF
CUCKOO
HASHING
IS
THAT
AN
ELEMENT
X
CAN
ONLY
LIVE
IN
ONE
OF
TWO
LOCATIONS
THE
SCHEME
USES
TWO
HASH
FUNCTIONS
AND
AND
X
CAN
ONLY
RESIDE
IN
X
OR
X
WHEN
AN
ELEMENT
IS
INSERTED
IT
IS
ALWAYS
INSERTED
IN
THE
FIRST
LOCATION
KICKING
OUT
ANY
PREVIOUS
OCCUPANT
THE
KICKED
OUT
ELEMENT
IS
THEN
MOVED
TO
ITS
OTHER
LOCATION
POSSIBLY
KICKING
OUT
ANOTHER
ELEMENT
THIS
PROCESS
CONTINUES
UNTIL
NO
ELEMENT
IS
KICKED
OUT
OR
IT
RUNS
TOO
LONG
IN
WHICH
CASE
NEW
HASH
FUNCTIONS
ARE
CHOSEN
AND
THE
ENTIRE
TABLE
IS
REHASHED
IT
WAS
SHOWN
THAT
IF
THE
NUMBER
OF
ELEMENTS
IS
AT
MOST
A
CONSTANT
FRACTION
SAY
OF
THE
TABLE
SIZE
THEN
THE
PROBABILITY
OF
REQUIRING
A
REHASH
IS
SMALL
ENOUGH
SO
THAT
AN
INSERT
TAKES
O
AMORTIZED
TIME
SUBSEQUENT
WORKS
SUCH
AS
HAVE
SHOWN
HOW
TO
DE
AMORTIZE
CUCKOO
HASHING
AN
IMPORTANT
VARIANT
OF
CUCKOO
HASHING
IS
CUCKOO
HASHING
WITH
A
STASH
INTRODUCED
BY
KIRSCH
ET
AL
A
STASH
OF
SIZE
IS
ADDED
TO
THE
CUCKOO
HASH
TABLE
TO
DEAL
WITH
OVERFLOWS
THE
WORK
SHOWS
THAT
IF
A
CONSTANT
SIZE
STASH
IS
USED
THEN
INSERTING
N
ELEMENTS
INTO
A
CUCKOO
HASH
TABLE
OF
Θ
N
SIZE
WILL
SUCCEED
WITH
ALL
BUT
O
N
PROBABILITY
GOODRICH
AND
MITZENMACHER
SHOWED
THAT
IF
THE
SIZE
OF
THE
TABLE
IS
M
Ω
N
AND
THE
STASH
SIZE
IS
O
LOG
N
THEN
THE
PROBABILITY
OF
SUCCESS
IN
INSERTING
M
ELEMENTS
INTO
THE
TABLE
IS
ALL
BUT
NEGLIGIBLE
IN
N
WE
NOTE
THAT
ALTHOUGH
IN
GENERAL
CUCKOO
HASHTABLES
ARE
DYNAMIC
FOR
OBLIVIOUS
RAM
WE
ONLY
USE
THEM
IN
A
STATIC
MANNER
I
E
ALL
THE
ELEMENTS
TO
BE
INSERTED
INTO
THE
TABLE
ARE
ALWAYS
KNOWN
AHEAD
OF
TIME
BLOOM
FILTERS
A
BLOOM
FILTER
IS
A
DATASTRUCTURE
TO
DETERMINE
SET
MEMBERSHIP
IT
CONSISTS
OF
AN
ARRAY
OF
BIT
FLAGS
ALL
INITIALLY
SET
TO
ZEROS
ALONG
WITH
A
SET
OF
HASH
FUNCTIONS
HN
WHEN
ELEMENT
X
IS
BEING
INSERTED
COMPUTE
X
HN
X
AND
SET
THE
BIT
FLAGS
CORRESPONDING
TO
THOSE
LOCATIONS
TO
WHEN
WE
WANT
TO
TEST
WHETHER
OR
NOT
SOME
ELEMENT
IS
PRESENT
WE
COMPUTE
HN
AND
CHECK
IF
ALL
BIT
FLAGS
ARE
SET
TO
THIS
METHOD
OF
TESTING
CAN
POSSIBLY
LEAD
TO
FALSE
POSITIVES
AS
WE
SHALL
SEE
IN
SECTION
THIS
CAN
LEAD
TO
INSECURITY
IN
OBLIVIOUS
RAM
SCHEMES
THAT
EMPLOY
BLOOM
FILTERS
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
OVERVIEW
OF
PREVIOUS
SCHEMES
IN
THIS
SECTION
WE
GIVE
AN
OVERVIEW
OF
SOME
OF
THE
PREVIOUS
SCHEMES
SPECIFICALLY
THIS
SERVES
AS
A
STARTING
POINT
FOR
OUR
SCHEME
IN
SECTION
FOR
FULL
DETAILS
WE
REFER
THE
READER
TO
THE
ORIGINAL
PAPERS
STARTING
FROM
MOST
SCHEMES
USE
OSTROVSKY
HIERARCHICAL
DATA
STRUCTURE
THAT
CONSISTS
OF
A
SEQUENCE
OF
BUFFERS
BK
BK
BL
OF
GEOMETRICALLY
INCREASING
SIZES
I
E
BI
IS
OF
SIZE
TYPICALLY
K
O
I
E
THE
FIRST
BUFFER
IS
OF
CONSTANT
SIZE
AND
L
LOG
N
I
E
THE
LAST
BUFFER
MAY
CONTAIN
ALL
N
ELEMENTS
WHERE
N
IS
THE
TOTAL
NUMBER
OF
MEMORY
LOCATIONS
EACH
BUFFER
IS
MAINTAINED
AS
A
HASH
TABLE
OF
ONE
OF
TWO
TYPES
THE
FIRST
TYPE
IS
WHERE
BI
IS
A
STANDARD
HASH
TABLE
ASSOCIATED
WITH
A
SECRET
HASH
FUNCTION
HI
IN
THIS
CASE
ORIGINATED
FROM
EACH
ENTRY
J
IS
ACTUALLY
A
BUCKET
OF
SIZE
B
CONTAINING
ALL
THE
ELEMENTS
MAPPED
BY
HI
TO
J
THE
SECOND
TYPE
IS
WHERE
BI
IS
A
TABLE
OF
CUCKOOHASHING
ASSOCIATED
WITH
A
SECRET
PAIR
OF
HASH
FUNCTIONS
HI
HI
IN
THIS
CASE
ORIGINATED
FROM
NO
BUCKET
IS
NEEDED
IT
SHOULD
BE
NOTED
THAT
WITH
A
CERTAIN
SMALL
PROBABILITY
THE
CHOSEN
HASH
FUNCTIONS
DO
NOT
ALLOW
FOR
LEGAL
STORAGE
OF
THE
ELEMENTS
INTO
THE
DATA
STRUCTURE
IN
SUCH
A
CASE
THE
SCHEMES
EITHER
FAIL
IF
THIS
EVENT
IS
SUFFICIENTLY
RARE
OR
SIMPLY
RE
CHOOSE
THE
PROBLEMATIC
HASHFUNCTIONS
AS
WE
SHALL
SEE
BELOW
THOSE
BUFFERS
ARE
STATIC
DATA
STRUCTURES
AND
SO
ALL
THE
ELEMENTS
TO
BE
STORED
IN
THEM
ARE
KNOWN
IN
ADVANCE
IN
SECTION
BELOW
WE
SHOW
THAT
THIS
FAILURE
EVENT
ACTUALLY
LEAKS
INFORMATION
THAT
CAN
BE
UTILIZED
BY
AN
ATTACKER
A
CUCKOO
HASHTABLE
WITH
STASH
OF
CAREFULLY
CHOSEN
PARAMETERS
TAKES
CARE
OF
THESE
BAD
EVENTS
FINALLY
IT
IS
ALSO
POSSIBLE
TO
USE
AN
HYBRID
SCHEME
WHERE
FOR
BUFFERS
BK
BK
WE
USE
STANDARD
HASHING
WHILE
FOR
BK
BL
WE
USE
CUCKOO
HASHING
WITH
STASH
READING
AN
ELEMENT
WHEN
READING
AN
ELEMENT
FROM
THE
HIERARCHICAL
DATA
STRUCTURE
VIA
A
READ
R
OPERATION
WE
WISH
TO
HIDE
THE
IDENTITY
OF
THE
BUFFER
FROM
WHICH
WE
READ
WHICH
YIELDS
INFORMATION
ON
THE
SEQUENCE
OF
OPERATIONS
HENCE
WE
ACTUALLY
READ
FROM
EACH
OF
THE
AT
MOST
L
BUFFERS
SPECIFICALLY
WE
START
BY
READING
THE
TOP
SMALLEST
BUFFER
BK
IN
ITS
ENTIRETY
THEN
FOR
EACH
I
IF
BUFFER
BI
USES
STANDARD
HASHING
WE
COMPUTE
J
HI
R
AND
READ
THE
ENTIRE
J
TH
BUCKET
B
ELEMENTS
OF
THAT
BUFFER
THIS
IS
HOW
IT
WAS
DONE
IN
THE
ORIGINAL
HIERARCHICAL
SOLUTION
OF
IF
BUFFER
BI
USES
CUCKOO
EACH
ENTRY
OF
THESE
BUFFERS
IS
OF
THE
FORM
ID
X
WHERE
ID
N
DUMMY
N
INDICATING
WHICH
OF
THE
ORIGINAL
N
MEMORY
LOCATIONS
IS
STORED
HERE
OR
THAT
THIS
IS
A
DUMMY
ELEMENT
WHOSE
SOLE
PURPOSE
IS
TO
HELP
IN
HIDING
THE
ACCESS
PATTERN
AND
X
IS
A
VALUE
TAKEN
FROM
AN
APPROPRIATE
DOMAIN
F
AND
ENCRYPTED
UNDER
A
SECRET
KEY
HASHING
THEN
WE
READ
THE
PAIR
OF
ELEMENTS
HI
R
AND
HI
R
MOREOVER
IF
A
STASH
IS
EMPLOYED
WE
READ
THE
ENTIRE
STASH
CORRESPONDING
TO
BI
IF
ELEMENT
R
EXISTS
IN
MORE
THAN
ONE
BUFFER
BI
THEN
THE
INSERTION
METHOD
SEE
BELOW
GUARANTEES
THAT
THE
SMALLEST
SUCH
I
FOR
WHICH
BI
CONTAINS
THE
ELEMENT
R
HAS
THE
MOST
UPDATED
VALUE
SO
ONCE
ELEMENT
R
IS
FOUND
WE
SEARCH
UPON
DUMMY
LOCATIONS
BY
USING
DUMMY
T
INSTEAD
OF
R
WHERE
T
IS
A
LOCAL
COUNTER
INDICATING
THE
NUMBER
OF
QUERIES
PERFORMED
ALREADY
FROM
SUBSEQUENT
BUFFERS
IN
ADDITION
AT
THE
END
OF
THIS
PROCESS
WE
RE
INSERT
ELEMENT
R
INTO
THE
TOP
BUFFER
OF
THE
DATA
STRUCTURE
SEE
BELOW
THIS
TOGETHER
WITH
THE
RE
SHUFFLING
PROCEDURE
DESCRIBED
BELOW
GUARANTEES
THAT
WHEN
EXECUTING
FUTURE
READ
R
OPERATIONS
WITH
THE
SAME
R
INDEPENDENT
LOCATIONS
WILL
BE
READ
FROM
EACH
BUFFER
FINALLY
WE
REMARK
THAT
EVEN
IF
ELEMENT
R
WAS
NOT
IN
ANY
BUFFER
BEFORE
THE
READ
R
OPERATION
IT
WILL
BE
INSERTED
INTO
THE
TOP
BUFFER
INSERTION
ELEMENTS
ARE
ALWAYS
INSERTED
INTO
THE
TOP
BUFFER
BK
THIS
IS
DONE
BOTH
AS
A
RESULT
OF
A
READ
OPERATION
AS
DESCRIBED
ABOVE
AND
IN
RESPONSE
TO
AN
UPDATE
OF
ENTRY
R
IN
MEMORY
WHEN
PERFORMING
A
WRITE
R
VAL
OPERATION
NOW
EVERY
INSERTIONS
BUFFER
BI
IS
CONSIDERED
FULL
AND
ITS
CONTENT
IS
MOVED
INTO
THE
LARGER
BUFFER
BI
MORE
PRECISELY
WE
DO
THE
FOLLOWING
AFTER
Α
INSERTIONS
ONE
INSERTION
PER
EACH
READ
AND
WRITE
OPERATION
WHERE
Α
IS
DIVISIBLE
BY
BUT
NOT
BY
WE
MOVE
ALL
THE
ELEMENTS
FROM
BUFFERS
BK
BI
THERE
ARE
LESS
THAN
SUCH
ELEMENTS
INTO
BUFFER
BI
AT
SUCH
TIME
STEP
BI
ITSELF
IS
EMPTY
FOR
THIS
WE
PICK
FRESH
RANDOM
HASHFUNCTIONS
FOR
BI
A
FUNCTION
HI
IN
THE
CASE
OF
STANDARD
HASHING
AND
FUNCTIONS
HI
AND
HI
IN
THE
CASE
OF
CUCKOO
HASHING
FINALLY
TO
DESTROY
THE
CORRELATION
BETWEEN
THE
NEW
LOCATIONS
OF
THE
ELEMENTS
IN
BI
AND
THEIR
OLD
LOCATIONS
WE
USE
OBLIVIOUS
HASHING
THE
RE
SHUFFLING
METHOD
GUARANTEES
THE
FOLLOWING
PROPERTY
WHICH
IS
CRUCIAL
IN
THE
SECURITY
ANALYSIS
OF
ALL
THOSE
SCHEMES
IF
MEMORY
LOCATION
R
IS
ACCESSED
MORE
THAN
ONCE
BY
EITHER
A
READ
OR
A
WRITE
OPERATION
WE
NEVER
LOOK
FOR
IT
IN
THE
SAME
BUFFER
BI
WITH
THE
SAME
HASH
FUNCTION
IN
OTHER
WORDS
IN
THE
TIME
UNTIL
PICKING
A
FRESH
HASH
FUNCTION
FOR
BI
AN
ITEM
R
SHOULD
NOT
BE
ALLOWED
TO
COME
BACK
TO
BI
AND
OF
COURSE
IF
R
IS
FOUND
IN
A
PREVIOUSLY
ACCESSED
BUFFER
THEN
IN
BI
WE
SEARCH
FOR
A
RANDOM
ELEMENT
INSTEAD
A
NO
DUPLICATES
VARIANT
NEXT
WE
DESCRIBE
A
VARIANT
OF
THE
ABOVE
SCHEMES
IN
WHICH
THE
DATASTRUCTURE
NEVER
CONTAINS
MORE
THAN
ONE
COPY
OF
ANY
B
MAY
NOT
NECESSARILY
BE
FULL
BUT
TO
PREVENT
THE
POSSIBILITY
I
OF
DISTINGUISHING
FOR
EXAMPLE
THE
EXTREME
CASES
ONE
WHERE
ALL
THE
INSERTIONS
ARE
DISTINCT
AND
THE
OTHER
CASE
WHERE
ALL
THE
INSERTIONS
ARE
IDENTICAL
WE
NEED
TO
ACT
THE
SAME
IN
ALL
CASES
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
ELEMENT
I
E
FOR
EVERY
R
N
THERE
IS
A
UNIQUE
ELEMENT
OF
THE
FORM
R
VALUE
IN
THE
DATA
STRUCTURE
THIS
IDEA
COMES
FROM
AND
IS
USED
THERE
AS
AN
OPTIONAL
MODIFICATION
FOR
EFFICIENCY
IN
OUR
SCHEME
IN
SECTION
WE
RELY
ON
THIS
VARIANT
TO
OBTAIN
SOME
SIMPLIFICATIONS
IN
THIS
VARIANT
WHEN
PERFORMING
A
READ
R
OPERATION
FOR
READING
AN
ELEMENT
R
WE
PROCEED
AS
ABOVE
EXCEPT
THAT
WHEN
FINDING
R
VALUE
IN
SOME
BUFFER
BI
WE
REMOVE
IT
FROM
BI
AND
KEEP
JUST
THE
NEW
VERSION
OF
R
VALUE
THAT
IS
INSERTED
INTO
THE
TOP
THIS
IS
DONE
BY
WRITING
INTO
EACH
LOCATION
THAT
WE
READ
IN
EACH
BUFFER
IN
MOST
PLACES
WE
JUST
WRITE
THE
SAME
PAIR
ID
VALUE
THAT
WE
JUST
READ
RE
ENCRYPTED
TO
HIDE
THIS
FACT
AND
ONLY
IN
THE
UNIQUE
PLACE
THAT
WE
FOUND
THE
ELEMENT
R
WE
WRITE
A
DUMMY
VALUE
INSTEAD
WHEN
PERFORMING
A
WRITE
R
VALUE
OPERATION
WE
START
BY
PERFORMING
A
READ
OPERATION
WITH
IDENTIFIER
R
WHERE
AS
ABOVE
IF
WE
FIND
A
PAIR
R
IT
IS
REMOVED
EXCEPT
THAT
RATHER
THAN
RE
INSERTING
THE
READ
VALUE
R
INTO
THE
TOP
BUFFER
WE
INSERT
THE
NEW
VALUE
R
VALUE
THE
RESHUFFLING
MECHANISM
WORKS
AS
BEFORE
IN
FACT
RE
SHUFFLING
IS
SOMEWHAT
SIMPLER
WHEN
THERE
ARE
NO
DUPLICATES
AS
WE
DO
NOT
NEED
TO
WORRY
ABOUT
POSSIBLE
CONFLICTS
A
COMPLETELY
RANDOM
PATTERN
WHICH
IS
ONE
THAT
MAY
NOT
BE
CONSISTENT
WITH
A
NON
OVERFLOWING
HASH
TABLE
IF
THIS
EVENT
OCCURS
WITH
INVERSE
POLYNOMIAL
PROBABILITY
AN
ADVERSARY
CAN
DISTINGUISH
BETWEEN
THESE
TWO
ACCESS
PATTERNS
WITH
A
NON
NEGLIGIBLE
ADVANTAGE
WE
NOW
TAKE
A
LOOK
AT
HOW
THIS
AFFECTS
EXISTING
SCHEMES
BUCKET
HASHING
BUCKET
HASHING
INHERENTLY
HAS
A
CHANCE
OF
FAILURE
ON
INSERT
DUE
TO
A
BUCKET
OVERFLOWING
AND
THIS
PROBABILITY
DEPENDS
ON
THE
SIZE
OF
THE
BUCKETS
IN
THE
HASH
TABLE
THE
WORKS
OF
RELY
ON
BUCKET
HASHING
AS
THE
PRIMARY
DATA
STRUCTURE
IN
THE
HIERARCHY
IN
THESE
SCHEMES
IT
IS
SUGGESTED
THAT
IN
THE
CASE
OF
FAILURE
NEW
HASH
FUNCTIONS
ARE
SELECTED
AND
ALL
THE
ELEMENTS
ARE
RE
HASHED
INTO
A
NEW
TABLE
CUCKOO
HASHING
IN
ORDINARY
CUCKOO
HASHING
THE
PROBABILITY
OF
FAILURE
IS
ALSO
INVERSE
POLYNOMIAL
THE
MOST
OBVIOUS
WAY
AN
INSERT
CAN
FAIL
IS
IF
THE
NEW
ELEMENT
HASHES
TO
THE
EXACT
SAME
TWO
LOCATIONS
AS
TWO
PREVIOUS
ELEMENTS
SINCE
ELEMENTS
CANNOT
FIT
INTO
TWO
LOCATIONS
IN
SUCH
A
CASE
NEW
HASH
FUNCTIONS
ARE
SELECTED
AND
ALL
THE
ELEMENTS
ARE
RE
HASHED
INTO
A
NEW
TABLE
SIMILAR
TO
THE
CASE
OF
BUCKET
HASHING
BASED
ON
THIS
FACT
WE
GIVE
EXPLICIT
EXAMPLES
OF
DISTINGUISHERS
FOR
THE
SCHEME
OF
AND
WE
POINT
OUT
THAT
THE
CUCKOO
HASHING
COLLISIONS
REMAIN
PROBLEMATIC
EVEN
IF
A
SMALL
CONSTANT
SIZED
STASH
IS
USED
SUCH
AS
IN
ONE
OF
THE
SCHEMES
IN
DISTINGUISHER
EXAMPLE
FOR
THE
SAKE
OF
CONSISTENCY
IT
IS
ASSUMED
THAT
WE
MAY
ONLY
READ
ELEMENTS
THAT
HAVE
PREVIOUSLY
BEEN
INSERTED
THE
EXAMPLES
PROVIDED
WILL
ABIDE
BY
THIS
RULE
WE
LET
NUMBERS
DENOTE
ELEMENTS
INSERTED
LETTERS
DENOTE
DUMMY
ELEMENTS
AS
PRESCRIBED
BY
THE
SCHEME
IN
AND
DENOTE
DON
T
CARE
ELEMENTS
AS
PRESCRIBED
BY
THEIR
SCHEME
IN
THE
FOLLOWING
EXAMPLES
IT
DOES
NOT
MATTER
HOW
LONG
THE
QUERY
SEQUENCES
ARE
AND
WE
ONLY
STATE
THE
INITIAL
SUBSEQUENCE
NECESSARY
TO
MAKE
THE
DISTINGUISHING
GO
THROUGH
WE
WRITE
WRITE
RN
AS
SHORTHAND
FOR
WRITING
TO
LOCATIONS
THROUGH
RN
WITH
ARBITRARY
VALUES
WRITTEN
THE
CONSTRUCTION
IN
ALLOWS
THE
SERVER
TO
KNOW
WHERE
THE
EMPTY
SLOTS
OF
THE
CUCKOO
HASH
TABLE
ARE
AS
A
WARM
UP
EXAMPLE
DEMONSTRATING
HOW
THIS
CAN
LEAK
INFORMATION
WE
SHOW
THAT
THIS
ACTUALLY
ALLOWS
THE
SERVER
TO
DISTINGUISH
BETWEEN
THE
TWO
SEQUENCES
WRITE
READ
AND
WRITE
READ
WITH
PROBABILITY
AFTER
THE
SEQUENCE
OF
INITIAL
WRITES
THE
BUFFERS
WILL
LOOK
LIKE
THIS
FLAWS
IN
PREVIOUS
SCHEMES
IN
THIS
SECTION
WE
POINT
OUT
A
FLAW
THAT
OCCURS
IN
MANY
PREVIOUS
SCHEMES
AND
COMES
FROM
THE
RE
CHOOSING
OF
HASH
FUNCTIONS
IN
THE
CASE
OF
INSERTION
FAILURE
WE
NOTE
THAT
THE
DETAILS
OF
THIS
SECTION
ARE
NOT
NEEDED
FOR
FOLLOWING
OUR
OWN
CONSTRUCTION
IN
SECTION
IF
THE
EVENT
OF
OVERFLOW
OCCURS
WITH
NON
NEGLIGIBLE
PROBABILITY
THE
ACT
OF
RE
CHOOSING
NEW
HASH
FUNCTIONS
CAN
REVEAL
SIGNIFICANT
INFORMATION
ABOUT
THE
DATA
THAT
IS
STORED
INSIDE
A
PARTICULAR
LEVEL
THE
ACT
OF
CHOOSING
NEW
HASH
FUNCTIONS
APPEARS
IN
SEVERAL
PREVIOUS
WORKS
SUCH
AS
WE
TAKE
A
DEEPER
LOOK
INTO
THE
WAYS
INFORMATION
CAN
BE
LEAKED
DUE
TO
THESE
HASH
FUNCTIONS
TO
SUCCINCTLY
SUMMARIZE
THE
PROBLEM
WE
DESCRIBE
A
GENERAL
METHOD
FOR
DISTINGUISHING
ACCESS
PATTERNS
BASED
ON
HASH
OVERFLOWS
CONSIDER
TWO
ACCESS
SEQUENCES
AND
BOTH
AND
START
OFF
BY
INSERTING
ENOUGH
ELEMENTS
TO
TRIGGER
RE
SHUFFLES
SO
THAT
ONLY
LEVELS
I
AND
I
ARE
NON
EMPTY
AND
CONTAIN
DISJOINT
DISTINCT
ELEMENTS
CONTINUES
WITH
READS
OF
DISTINCT
ELEMENTS
IN
LEVEL
I
AND
CONTINUES
WITH
READS
OF
DISTINCT
ELEMENTS
IN
LEVEL
I
IN
BOTH
SEQUENCES
THE
SERVER
CAN
OBSERVE
THE
SEQUENCE
OF
PROBES
CAUSED
BY
THE
HASH
FUNCTIONS
IN
THE
LEVEL
EMPTY
FORMER
CASE
BECAUSE
ALL
ELEMENTS
LIVE
WITHIN
LEVEL
I
THE
SEQUENCE
INDUCES
A
PATTERN
THAT
IS
CONSISTENT
WITH
A
NON
LEVEL
A
B
C
D
STORED
IN
A
CUCKOO
HASHTABLE
OF
SIZE
OVERFLOWING
HASH
TABLE
IN
THE
LATTER
CASE
IF
THE
HASH
FUNCTION
IS
RANDOM
THE
SEQUENCE
OF
PROBES
WILL
INDUCE
LEVEL
E
F
G
H
I
J
K
L
STORED
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
IN
A
CUCKOO
TABLE
OF
SIZE
IN
THE
OPERATION
READ
WILL
SCAN
THE
ENTIRE
LEVEL
THEN
TWO
RANDOM
HASH
LOCATIONS
ON
LEVEL
THEN
THE
PLACES
WHERE
HASHES
TO
ON
LEVEL
IN
THE
OPERATION
READ
WILL
READ
THE
ENTIRE
LEVEL
THEN
THE
PLACES
WHERE
HASHES
TO
ON
LEVEL
THEN
THE
PLACES
WHERE
DUMMY
E
HASHES
TO
ON
LEVEL
THUS
IF
THE
TWO
LOCATIONS
THAT
HASHES
TO
ON
LEVEL
ARE
EMPTY
THEN
THE
DISTINGUISHER
OUTPUTS
SINCE
WE
ARE
USING
RANDOM
HASH
FUNCTIONS
THERE
IS
A
CHANCE
EACH
OF
HITTING
AN
EMPTY
SPOT
GIVING
US
A
DISTINGUISHING
ADVANTAGE
NEXT
WE
GIVE
AN
EXAMPLE
THAT
ADDRESSES
OUR
MAIN
CONCERN
THAT
HAS
TO
DEAL
WITH
THE
COLLISION
FREE
PROPERTY
OF
A
CUCKOO
HASH
TABLE
THE
TRICK
TO
DISTINGUISHING
IS
THAT
READING
THREE
ELEMENTS
THAT
EXIST
IN
A
LEVEL
WILL
NEVER
COLLIDE
SINCE
THEY
MUST
OCCUPY
DISTINCT
LOCATIONS
BUT
ACCESSING
THREE
RANDOM
ELEMENTS
GIVES
A
SMALL
PROBABILITY
OF
THEM
ALL
HASHING
IN
TO
THE
SAME
TWO
ADDRESSES
IN
THE
HASH
TABLE
IN
THIS
EXAMPLE
THE
SERVER
CAN
DISTINGUISH
BETWEEN
THE
TWO
SEQUENCES
WRITE
READ
AND
WRITE
READ
WITH
A
ADVANTAGE
AFTER
THE
SEQUENCE
OF
INITIAL
WRITES
THE
BUFFERS
WILL
LOOK
LIKE
THIS
LEVEL
EMPTY
LEVEL
EMPTY
LEVEL
A
B
C
D
E
F
G
H
STORED
IN
A
TABLE
OF
SIZE
LEVEL
I
J
K
L
M
N
O
P
Q
R
T
U
V
W
X
STORED
IN
A
TABLE
OF
SIZE
IN
THE
OPERATION
READ
WILL
READ
ALL
OF
LEVEL
TWO
RANDOM
LOCATIONS
IN
LEVEL
TWO
RANDOM
LOCATIONS
IN
LEVEL
AND
THE
TWO
PLACES
IT
HASHES
TO
IN
LEVEL
IT
WILL
BE
FOUND
AND
WRITTEN
BACK
TO
LEVEL
THE
OPERATION
READ
WILL
READ
ALL
OF
LEVEL
TWO
RANDOM
LOCATIONS
IN
LEVEL
TWO
RANDOM
LOCATIONS
IN
LEVEL
AND
THE
TWO
PLACES
IT
HASHES
TO
IN
LEVEL
IT
WILL
BE
FOUND
AND
WRITTEN
BACK
TO
LEVEL
A
RESHUFFLE
FROM
LEVEL
DOWN
TO
LEVEL
NOW
OCCURS
THE
HASH
FUNCTIONS
AT
LEVEL
ARE
NOW
REPICKED
TO
BE
NEW
RANDOM
FUNCTIONS
THIS
DOES
NOT
AFFECT
LEVEL
THE
OPERATION
READ
WILL
READ
ALL
OF
LEVEL
TWO
RANDOM
LOCATIONS
IN
LEVEL
TWO
RANDOM
LOCATIONS
IN
LEVEL
AND
THE
TWO
PLACES
IT
HASHES
TO
IN
LEVEL
IT
WILL
BE
FOUND
AND
WRITTEN
BACK
TO
LEVEL
IN
THE
OPERATION
READ
WILL
READ
ALL
OF
LEVEL
TWO
RANDOM
LOCATIONS
IN
LEVEL
THE
TWO
PLACES
IT
HASHES
TO
IN
LEVEL
AND
THE
TWO
PLACES
DUMMY
I
HASHES
TO
IN
LEVEL
IT
WILL
BE
FOUND
AND
WRITTEN
BACK
TO
LEVEL
THE
OPERATION
READ
WILL
READ
ALL
OF
LEVEL
TWO
RANDOM
LOCATIONS
IN
LEVEL
THE
TWO
PLACES
IT
HASHES
TO
IN
LEVEL
AND
THE
TWO
PLACES
DUMMY
J
HASHES
TO
IN
LEVEL
IT
WILL
BE
FOUND
AND
WRITTEN
BACK
TO
LEVEL
A
RESHUFFLE
FROM
LEVEL
DOWN
TO
LEVEL
NOW
OCCURS
THE
HASH
FUNCTIONS
AT
LEVEL
ARE
NOW
RE
PICKED
TO
BE
NEW
RANDOM
FUNCTIONS
THIS
DOES
NOT
AFFECT
LEVEL
THE
OPERATION
READ
WILL
READ
ALL
OF
LEVEL
TWO
RANDOM
LOCATIONS
IN
LEVEL
THE
TWO
PLACES
IT
HASHES
TO
IN
LEVEL
AND
THE
TWO
PLACES
DUMMY
K
HASHES
TO
IN
LEVEL
IT
WILL
BE
FOUND
AND
WRITTEN
BACK
TO
LEVEL
IN
THE
TWO
PLACES
THAT
THE
SEQUENCE
OF
READS
PROBE
IN
LEVEL
WILL
NEVER
BE
THE
EXACT
SAME
TWO
PLACES
EVERY
TIME
THIS
IS
BECAUSE
THE
HASH
PATTERN
MUST
INDUCE
A
VALID
CUCKOO
PATTERN
OR
HASH
GRAPH
HOWEVER
IN
BECAUSE
THE
LOCATIONS
ARE
RANDOM
THERE
IS
A
PROBABILITY
THAT
THE
TWO
LOCATIONS
PROBED
BY
THE
SECOND
READ
WILL
MATCH
THE
TWO
LOCATIONS
PROBED
BY
THE
FIRST
READ
AND
SIMILARLY
ANOTHER
PROBABILITY
FOR
THE
LAST
READ
THIS
IS
AN
EXAMPLE
OF
HOW
THE
TRIPLE
HIT
PROBLEM
STATED
IN
THE
INTRODUCTION
CAN
BE
SEEN
IN
PRACTICE
THE
SUBTLE
ISSUE
CAN
BE
FOUND
IN
THE
SIMULATION
PROOF
OF
THE
SIMULATED
PROBE
SEQUENCE
ONLY
PROBES
THINGS
THAT
ARE
EITHER
A
REAL
ELEMENT
IN
LEVEL
I
OR
A
DUMMY
ELEMENT
IN
LEVEL
I
HOWEVER
IN
A
REAL
EXECUTION
OF
THE
PROTOCOL
ONE
MIGHT
PROBE
SOMETHING
THAT
EXISTS
IN
A
LOWER
LEVEL
OR
DOES
NOT
EXIST
AT
ALL
IN
THE
DATABASE
IN
THE
WORST
CASE
AS
IN
THE
EXAMPLE
ABOVE
NONE
OF
THE
ELEMENTS
PROBED
IN
BETWEEN
RESHUFFLES
OF
LEVEL
I
EXIST
IN
LEVEL
I
THIS
IS
AS
IF
ONE
WERE
TO
BUILD
A
BRAND
NEW
CUCKOO
HASH
TABLE
WITH
THE
GIVEN
HASH
FUNCTIONS
WHICH
IS
KNOWN
TO
FAIL
WITH
PROBABILITY
O
N
THUS
THERE
EXISTS
A
LIST
OF
INSTRUCTIONS
SUCH
THAT
WITH
PROBABILITY
O
N
IN
THE
REAL
EXECUTION
THE
SEQUENCE
OF
PROBES
ON
LEVEL
I
AS
OBSERVED
BY
THE
SERVER
INDUCES
AN
INVALID
CUCKOO
HASH
GRAPH
THE
SIMULATOR
DESCRIBED
IN
WILL
NEVER
GENERATE
A
SEQUENCE
OF
PROBES
THAT
INDUCES
AN
INVALID
CUCKOO
HASH
GRAPH
BECAUSE
THEIR
SIMULATED
PROBES
ARE
ONLY
TO
ELEMENTS
IN
THE
CUCKOO
HASH
TABLE
IMPACT
ON
EXISTING
SCHEMES
WE
ALSO
EXAMINED
PRIOR
SCHEMES
AND
HAVE
FOUND
THAT
SOME
SUFFER
FROM
SIMILAR
FLAWS
AS
MENTIONED
ABOVE
NAMELY
IF
A
HASH
TABLE
OVERFLOWS
AND
NEW
HASH
FUNCTIONS
ARE
CHOSEN
THIS
COULD
POTENTIALLY
LEAK
INFORMATION
THAT
WOULD
ALLOW
AN
ADVERSARY
TO
DISTINGUISH
BETWEEN
TWO
SEQUENCES
OF
READS
AND
WRITES
IN
STANDARD
HASH
TABLES
ARE
USED
WITH
BUCKETS
OF
SIZE
O
LOG
N
IN
LEMMA
OF
THE
PROOF
STATES
THAT
THE
ONLY
VALUES
HASHED
AT
LEVEL
I
BETWEEN
RESHUFFLES
WILL
BE
ONES
CORRESPONDING
TO
EITHER
ELEMENTS
LIVING
INSIDE
LEVEL
I
OR
DUMMY
ELEMENTS
THIS
IS
NOT
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
TRUE
BECAUSE
IF
AN
ELEMENT
X
IS
SITTING
INSIDE
LEVEL
I
OR
DEEPER
THEN
WE
STILL
MUST
HASH
X
AT
LEVEL
I
AND
ACCESS
THE
CORRESPONDING
BUCKET
AFTER
SOME
NUMBER
OF
QUERIES
IF
THE
HASHES
RESULT
IN
A
BUCKET
BEING
ACCESSED
MORE
TIMES
THAN
THE
TOTAL
CAPACITY
OF
THE
BUCKET
IT
WILL
BE
IMMEDIATELY
REVEALED
THAT
AT
LEAST
ONE
OF
THESE
PREVIOUS
QUERIES
WAS
NOT
FOUND
AT
LEVEL
I
IT
IS
STILL
TRUE
THAT
ALL
THE
ELEMENTS
BEING
HASHED
AT
LEVEL
I
WILL
BE
UNIQUE
SO
UNDER
THE
CONDITION
THAT
THESE
HASHES
DO
NOT
OVERFLOW
A
BUCKET
THE
ACCESSES
MADE
ARE
OBLIVIOUS
A
SIMILAR
FLAW
CAN
BE
FOUND
IN
THEOREM
OF
AND
CLAIM
OF
IN
IN
THE
CASE
OF
OVERFLOW
THE
SIMULATION
IS
ABORTED
IN
IT
IS
SUGGESTED
THAT
IN
THE
CASE
OF
AN
OVERFLOW
WHICH
HAPPENS
WITH
NEGLIGIBLE
CHANCE
A
NEW
HASH
FUNCTION
IS
CHOSEN
IN
THESE
THREE
WORKS
ABORTING
OR
CHOOSING
NEW
HASH
FUNCTIONS
RESULTS
IN
AN
INFORMATION
LEAKAGE
BECAUSE
THE
SERVER
KNOWS
THAT
THE
DATA
STORED
IN
A
LEVEL
IS
CONSISTENT
WITH
THE
HASH
FUNCTION
HOWEVER
THE
ABORT
OR
REHASH
EVENT
OCCURS
WITH
ONLY
A
NEGLIGIBLE
CHANCE
SO
THE
SECURITY
CLAIMS
REMAIN
INTACT
THIS
IS
NOT
THE
CASE
WITH
WHERE
IN
FACT
THIS
FLAW
LEADS
TO
A
DISTINGUISHER
THE
CONCEPT
OF
CHOOSING
A
NEW
HASH
FUNCTION
IS
REPEATED
IN
THE
SUBSEQUENT
WORK
OF
THE
SECURITY
OF
THIS
SCHEME
IS
NOT
IMPACTED
AS
IN
FACT
THIS
OVERFLOW
ONLY
HAPPENS
WITH
NEGLIGIBLE
PROBABILITY
SEE
LEMMA
BELOW
IN
IT
IS
SHOWN
THAT
A
CUCKOO
HASH
TABLE
WITH
CONSTANT
SIZE
STASH
WHICH
WAS
USED
IN
HAS
A
PROBABILITY
OF
OVERFLOW
OF
O
MS
WHERE
IS
THE
SIZE
OF
THE
STASH
AND
M
IS
THE
SIZE
OF
A
LEVEL
THIS
AMOUNT
CAN
BE
MADE
TO
BE
SMALLER
THAN
ANY
FIXED
POLYNOMIAL
BY
INCREASING
THE
SIZE
OF
THOUGH
IT
IS
STILL
NOT
NEGLIGIBLE
IT
IS
SHOWN
IN
THAT
A
CUCKOO
HASHTABLE
WITH
LOGARITHMIC
SIZE
STASH
WILL
OVERFLOW
WITH
ONLY
NEGLIGIBLE
PROBABILITY
ASSUMING
THAT
THE
TABLE
IS
OF
SIZE
Ω
N
AND
HENCE
SUITABLE
FOR
USE
FOR
LARGER
LEVELS
IN
THE
UPDATED
VERSION
CONSTANT
SIZED
STASHES
ARE
NO
LONGER
USED
THUS
RESULTING
IN
SCHEMES
THAT
ONLY
HAVE
A
NEGLIGIBLE
CHANCE
OF
OVERFLOW
A
PROBLEM
RELATED
TO
HASH
OVERFLOW
OCCURS
IN
THE
WORK
OF
WHERE
A
BLOOM
FILTER
IS
USED
TO
CHECK
WHETHER
OR
NOT
AN
ELEMENT
IS
IN
THE
HASH
TABLE
BEFORE
SEARCHING
FOR
IT
THIS
APPEARS
TO
MITIGATE
THE
PROBLEMS
ABOVE
BUT
THE
ISSUE
IS
THAT
A
BLOOM
FILTER
HAS
SOME
PROBABILITY
FOR
GENERATING
FALSE
POSITIVES
IF
THE
BLOOM
FILTER
GENERATES
ENOUGH
FALSE
POSITIVES
ON
ELEMENTS
NOT
PRESENT
IN
THE
HASH
TABLE
THE
PROBLEM
APPEARS
AGAIN
IN
ORDER
TO
MAKE
THE
PROBABILITY
NEGLIGIBLE
THE
SIZE
OF
THE
BLOOM
FILTER
MUST
BE
SUPER
LOGARITHMIC
THEREBY
INCREASING
THE
OVERALL
STORAGE
AND
OVERHEAD
OUR
SCHEME
IN
THIS
SECTION
WE
PRESENT
OUR
OBLIVIOUS
RAM
SCHEME
WHERE
WE
BOTH
FIX
THE
LEAKAGE
OF
INFORMATION
AND
OBTAIN
IMPROVED
EFFICIENCY
THE
HIGH
LEVEL
IDEAS
BEHIND
OUR
SCHEME
ARE
AS
FOLLOWS
WE
ELIMINATE
THE
STASH
BY
REINSERTING
ITS
ELEMENTS
BACK
INTO
THE
DATA
STRUCTURE
AND
WE
BALANCE
BETWEEN
THE
COST
OF
READS
AND
THE
COST
OF
WRITES
TECHNICALLY
WE
USE
AS
A
STARTING
POINT
THE
CONSTANT
LOCAL
MEMORY
SCHEME
OF
WHOSE
TOP
BUFFER
BK
IS
SUFFICIENTLY
LARGE
AND
THE
FIRST
CUCKOO
HASH
LEVEL
BK
IS
ALSO
SUFFICIENTLY
LARGE
THESE
CHOICES
MAKE
THE
PROBABILITY
OF
BAD
EVENTS
NEGLIGIBLE
NEXT
WE
PROVIDE
A
DETAILED
DESCRIPTION
OF
OUR
SCHEME
OUR
STARTING
POINT
IS
THE
HYBRID
SCHEME
WITH
NO
DUPLICATES
AS
DESCRIBED
IN
SECTION
WE
CHOOSE
K
LOG
LOG
N
AND
K
LOG
LOG
N
WHICH
MEANS
THAT
STANDARD
HASHING
IS
USED
FOR
THE
TOP
O
LOG
LOG
N
BUFFERS
WHOSE
SIZES
ARE
BETWEEN
LOG
N
AND
N
THE
BUCKET
SIZE
FOR
THESE
BUFFERS
IS
SET
TO
B
LOG
N
THE
CHOICE
OF
PARAMETERS
IS
MADE
TO
DEAL
WITH
ATTACKS
OF
THE
TYPE
DESCRIBED
IN
SECTION
FOR
THE
LARGER
BUFFERS
WE
EMPLOY
CUCKOO
HASHING
WE
USE
THE
VERSION
WITH
STASH
OF
SIZE
LOG
N
AS
IN
THE
FIRST
MODIFICATION
WE
MAKE
IS
THAT
RATHER
THAN
ACTUALLY
KEEPING
THE
STASH
AT
EACH
LEVEL
AT
THE
END
OF
THE
RE
SHUFFLING
STAGE
AS
IN
THERE
WILL
BE
A
SINGLE
STASH
OF
SIZE
THE
CONCEPT
OF
A
SHARED
STASH
WAS
INTRODUCED
IN
SUBSEQUENTLY
USED
IN
IN
THE
CONSTRUCTION
OF
OBLIVIOUS
RAM
USING
O
N
LOCAL
STORAGE
IN
OUR
CASE
WE
HAVE
CONSTANT
LOCAL
STORAGE
SO
INSTEAD
OF
KEEPING
AN
EXPLICIT
SHARED
STASH
WE
VIRTUALIZE
THE
STASH
BY
REINSERTING
IT
INTO
THE
TOP
BUFFER
NOTE
THAT
AT
THE
END
OF
RE
SHUFFLING
THE
TOP
BUFFER
IS
EMPTY
AND
WE
MAKE
EXACTLY
INSERTIONS
INDEPENDENT
OF
THE
ACTUAL
CONTENT
OF
THE
STASH
THE
SECOND
INGREDIENT
OF
OUR
SOLUTION
REFERS
TO
BALANCING
THE
CUCKOO
HASHING
LEVELS
AT
LEVEL
K
I
WE
ACTUALLY
HAVE
T
LOG
N
BUFFERS
RATHER
THAN
JUST
ONE
B
B
T
AND
EACH
OF
THEM
IS
OF
SIZE
TI
I
IN
PARTICULAR
THIS
MEANS
THAT
A
BUFFER
AT
EACH
OF
THESE
LEVELS
IS
LARGER
BY
A
FACTOR
OF
THAN
THE
BUFFERS
AT
THE
PREVIOUS
LEVEL
AND
SO
IN
EACH
RE
SHUFFLING
ONE
SUCH
BUFFER
CAN
ACCOMMODATE
THE
ELEMENTS
OF
ALL
BUFFERS
IN
ALL
PREVIOUS
LEVELS
IN
ORDER
TO
KEEP
NOTATION
CONSISTENT
WE
DEFINE
B
B
TO
BE
THE
ONLY
BUFFER
FOR
LEVELS
BETWEEN
K
AND
K
WE
MAY
REFER
TO
B
J
AS
A
SUBBUFFER
TO
EMPHASIZE
THAT
IT
IS
ONE
OF
A
SET
OF
BUFFERS
AT
THE
SAME
LEVEL
THE
OPERATIONS
ON
THE
MODIFIED
DATA
STRUCTURE
ARE
NOW
IMPLEMENTED
AS
FOLLOWS
WHEN
READING
AN
ELEMENT
R
VIA
A
READ
R
OPERATION
WE
LOOK
THIS
IS
SIMILAR
TO
THE
NOTION
OF
A
SHARED
STASH
INTRODUCED
BY
SEE
BELOW
FOR
AN
EXPLANATION
OF
THE
DIFFERENCE
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
FOR
IT
AT
EACH
CUCKOO
HASHING
LEVEL
IN
ALL
T
SUB
BUFFERS
IN
REVERSE
ORDER
STARTING
FROM
B
T
DOWN
TO
B
THE
TOP
LEVELS
THAT
DO
NOT
USE
CUCKOO
HASHING
ARE
READ
EXACTLY
AS
BEFORE
WHEN
WE
PERFORM
A
RE
SHUFFLING
INTO
LEVEL
FOR
THE
FIRST
TIME
WE
DO
IT
INTO
SUB
BUFFER
B
IN
THE
NEXT
TIME
WE
WILL
USE
B
AND
SO
ON
ONLY
AFTER
USING
ALL
T
SUBBUFFERS
THE
NEXT
RE
SHUFFLING
WILL
BE
DONE
INTO
LEVEL
HAVING
T
SUB
BUFFERS
AT
EACH
LEVELS
ALLOWS
US
TO
REDUCE
THE
TOTAL
NUMBER
OF
LEVELS
L
TO
L
O
LOG
N
LOG
LOG
N
A
DETAILED
DESCRIPTION
OF
OUR
ALGORITHM
FOR
PERFORMING
READ
AND
WRITE
OPERATIONS
APPEARS
IN
APPENDIX
A
WE
REFER
THE
READER
TO
FOR
A
DETAILED
DESCRIPTION
OF
THE
UNMODIFIED
VERSION
OF
RE
SHUFFLING
COMPLEXITY
ANALYSIS
WE
FIRST
ANALYZE
THE
PHYSICAL
SIZE
AND
THE
CAPACITY
OF
EACH
LEVEL
BY
WHICH
WE
MEAN
THE
NUMBER
OF
ELEMENTS
IT
MAY
CONTAIN
BEFORE
WE
CONSIDER
IT
TO
BE
FULL
THE
TOP
LEVEL
BK
IS
TREATED
AS
AN
ARRAY
AND
HAS
SIZE
AND
CAPACITY
EQUAL
TO
LOG
N
THE
BUFFERS
USING
STANDARD
HASH
WITH
BUCKETS
OCCUPY
LEVELS
K
THROUGH
K
THE
CAPACITY
OF
EACH
ONE
IS
TWICE
THAT
OF
THE
LEVEL
BEFORE
IT
AND
THUS
FOR
BUFFER
BK
I
IT
IS
EQUAL
TO
LOG
N
THE
SIZE
HOWEVER
IS
BK
I
N
DUE
TO
THE
FACT
THAT
WE
HAVE
BUCKETS
OF
SIZE
O
LOG
N
FOR
THE
CUCKOO
HASH
TABLES
THE
CAPACJ
ITY
OF
A
SINGLE
SUB
BUFFER
BK
AT
LEVEL
K
IS
N
AND
IT
HAS
SIZE
LOG
N
THE
TOTAL
SIZE
AND
CAPACITY
AT
LEVEL
K
IS
LOG
N
TIMES
LARGER
DUE
TO
THE
FACT
THAT
WE
KEEP
LOG
N
OF
THESE
BUFFERS
FOR
SUBSEQUENT
LEVELS
WE
HAVE
SUBBUFFERS
OF
SIZE
BK
I
I
N
FOR
I
L
K
AND
CAPACITIES
OF
HALF
THAT
AMOUNT
BECAUSE
WE
WISH
TO
STORE
A
TOTAL
OF
N
ELEMENTS
IN
THE
LARGEST
LEVEL
L
WE
MUST
HAVE
L
K
N
Θ
N
SOLVING
FOR
L
WE
HAVE
L
O
LOG
N
LOG
LOG
N
HENCE
THE
TOTAL
NUMBER
OF
ELEMENTS
STORED
REMOTELY
IS
K
K
X
I
LOG
N
L
K
X
AT
EACH
LEVEL
WE
READ
FROM
EACH
OF
THE
T
BUFFERS
AND
SO
THE
TOTAL
COST
FOR
A
READ
IS
O
N
LOG
LOG
N
DOMINATED
BY
THE
CUCKOO
HASHING
BUFFERS
ON
THE
OTHER
HAND
RESHUFFLING
IS
DONE
LESS
FREQUENTLY
SINCE
FOR
EACH
LEVEL
WE
WAIT
UNTIL
ALL
T
SUB
BUFFERS
ARE
UTILIZED
BEFORE
RESHUFFLING
AND
SO
THE
AMORTIZED
COST
OF
RE
SHUFFLING
IS
ALSO
O
N
LOG
LOG
N
IN
DETAIL
WE
SEPARATE
THE
BUFFERS
INTO
THREE
CATEGORIES
THE
TOP
BUFFER
BK
THE
STANDARD
HASH
BUFFERS
BK
BK
AND
THE
CUCKOO
HASH
BUFFERS
BK
BL
DURING
A
READ
THE
ENTIRE
TOP
BUFFER
IS
SCANNED
TWICE
WHICH
REQUIRES
LOG
N
OPERATIONS
WHEN
SCANNING
THE
BUFFERS
THE
STANDARD
HASH
BUFFERS
EACH
HAVE
BUCKETS
OF
SIZE
B
WHICH
RESULTS
IN
B
K
K
O
LOG
N
LOG
LOG
N
TOTAL
ELEMENTS
READ
FINALLY
IN
THE
CUCKOO
HASH
BUFFERS
TWO
ELEMENTS
ARE
READ
AND
THEN
WRITTEN
FROM
EACH
BUFFER
GIVING
A
TOTAL
OF
L
K
LOG
N
O
LOG
N
LOG
N
LOG
LOG
N
ELEMENTS
ALTHOUGH
THE
CUCKOO
HASH
TABLES
HAVE
STASHES
THE
STASHES
HAVE
ALREADY
BEEN
MOVED
TO
THE
TOP
LEVEL
AND
POSSIBLY
RESHUFFLED
DOWN
AND
DO
NOT
NEED
TO
BE
READ
RECALL
THAT
A
RESHUFFLE
STEP
CAN
BE
DONE
WITH
O
M
LOG
M
ACCESSES
WHERE
M
IS
THE
NUMBER
OF
ELEMENTS
INVOLVED
IN
THE
SHUFFLE
THIS
INCLUDES
THE
RE
INSERTION
OF
THE
STASH
WHOSE
SIZE
IS
O
LOG
N
O
M
TO
THE
TOP
BUFFER
AFTER
EVERY
RESHUFFLE
NOTE
THAT
DUE
TO
THE
GROWTH
OF
THE
LEVELS
THE
NUMBER
OF
ELEMENTS
IN
LEVELS
K
I
IS
AT
MOST
TWICE
THE
NUMBER
OF
ELEMENTS
CONTAINED
IN
A
SUB
BUFFER
BIJ
ALSO
THE
ACT
OF
INSERTING
A
SINGLE
ELEMENT
AT
THE
TOP
BUFFER
CAN
BE
VIEWED
AS
ALSO
INSERTING
PHANTOM
ELEMENTS
AT
EVERY
LEVEL
AND
THESE
PHANTOM
ELEMENTS
ARE
IDENTIFIED
DURING
A
RESHUFFLE
BY
THIS
OBSERVATION
IT
TAKES
O
BIJ
LOG
N
O
BIJ
STEPS
FOR
BI
TO
BECOME
FULL
THUS
THE
AMORTIZED
COST
OF
RESHUFFLING
IS
I
N
O
N
O
N
L
X
O
BI
LOG
BI
I
I
K
O
BI
O
LOG
LOG
N
WHICH
IS
O
N
K
K
X
IN
ADDITION
WE
LOCALLY
STORE
ONLY
A
CONSTANT
NUMBER
O
I
LOG
LOG
N
OF
ELEMENTS
TYPICALLY
OR
DURING
READING
AND
O
I
ELEMENTS
ALSO
SUFFICE
FOR
RESHUFFLING
L
K
X
NEXT
WE
ANALYZE
THE
OVERHEAD
OF
OUR
SCHEME
THE
O
I
LOG
LOG
N
IDEA
IS
THAT
EACH
READ
NOW
COSTS
MORE
COMPARED
TO
THE
I
BASIC
HYBRID
SCHEME
BUT
WE
GAIN
BY
REDUCING
THE
COST
OF
RE
SHUFFLING
I
E
THE
SORT
NAMELY
THE
NUMBER
OF
SINCE
K
K
IS
O
LOG
LOG
N
AND
L
K
IS
LEVELS
IS
NOW
O
LOG
N
LOG
LOG
N
SINCE
BETWEEN
CUCKOO
O
LOG
N
LOG
LOG
N
THIS
GIVES
HASHING
LEVELS
THE
SIZE
GROWS
BY
AN
O
LOG
N
FACTOR
BUT
O
LOG
LOG
N
O
LOG
LOG
N
THIS
IS
IMPORTANT
FOR
OBTAINING
SECURITY
IN
PARTICULAR
IN
THE
O
LOG
N
LOG
LOG
N
LOG
LOG
N
PROOF
OF
LEMMA
THE
DISTINCTION
BETWEEN
SIZE
AND
CAPACITY
IS
IMPORTANT
WHEN
O
N
LOG
LOG
N
USING
CUCKOO
HASHING
WHOSE
PERFORMANCE
IS
GUARANTEED
ONLY
FOR
BUFFERS
WHOSE
CAPACITY
IS
NOT
MORE
THAN
SAY
OF
THEIR
SIZE
TOTAL
AMORTIZED
OVERHEAD
FOR
RESHUFFLING
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
ME
I
I
MI
E
I
I
SECURITY
TO
ARGUE
THE
SECURITY
OF
THE
SCHEME
WE
BEGIN
WITH
A
LEMMA
THAT
IS
COMMON
TO
PREVIOUS
SCHEMES
LEMMA
EXCEPT
FOR
THE
TOP
LEVEL
NO
INDEX
ID
WILL
BE
SEARCHED
UPON
TWICE
IN
ANY
SUB
BUFFER
BIJ
BEFORE
THIS
SUB
BUFFER
IS
RESHUFFLED
I
E
ELEMENTS
ARE
SHUFFLED
INTO
OR
OUT
OF
IT
IN
OTHER
WORDS
ALL
SEARCHES
TO
BIJ
BETWEEN
RESHUFFLES
ARE
FROM
UNIQUE
INDICES
WHICH
MAY
COLLIDE
WHEN
HASHED
PROOF
SUPPOSE
INDEX
ID
IS
SEARCHED
UPON
I
E
ID
IS
THE
VALUE
TO
BE
HASHED
FOR
SUB
BUFFER
BIJ
EITHER
ID
IS
AN
ACTUAL
INDEX
OR
IT
IS
A
DUMMY
INDEX
IN
THE
CASE
OF
ID
BEING
A
DUMMY
INDEX
THE
LEMMA
IMMEDIATELY
FOLLOWS
FROM
THE
FACT
THAT
DUMMY
INDICES
ARE
OF
THE
FORM
DUMMY
T
WHERE
T
IS
A
QUERY
COUNTER
AND
SUBSEQUENT
QUERIES
WILL
HAVE
EVER
INCREASING
VALUES
OF
T
EITHER
THE
HIERARCHY
IS
DESIGNED
WITH
A
QUERY
BOUND
T
T
OR
WE
CAN
ADD
POLYNOMIALLY
MANY
NEW
LEVELS
AT
THE
BOTTOM
OF
THE
HIERARCHY
ON
THE
OTHER
HAND
IF
ID
IS
AN
ACTUAL
INDEX
WHETHER
OR
NOT
IT
IS
FOUND
IN
THE
RAM
IS
OF
NO
CONSEQUENCE
IT
WILL
BE
INSERTED
INTO
THE
TOP
LEVEL
BK
ALL
SUBSEQUENT
QUERIES
UPON
ID
WILL
RESULT
IN
IT
BEING
FOUND
IN
A
YOUNGER
BUFFER
OR
SUB
BUFFER
CAUSING
DUMMY
LOCATIONS
TO
BE
SEARCHED
UPON
IN
THE
REMAINING
BUFFERS
WHICH
INCLUDES
BIJ
THE
ONLY
WAY
ID
CAN
BE
PRESENT
IN
BIJ
OR
A
DEEPER
BUFFER
AGAIN
IS
IF
ID
IS
SHUFFLED
INTO
BIJ
OR
THE
ENTIRETY
OF
BI
IS
FULL
AND
ALL
BIJ
ARE
SHUFFLED
OUT
TO
A
BIGGER
LEVEL
EITHER
WAY
BIJ
WILL
HAVE
BEEN
RESHUFFLED
AND
A
NEW
HASH
FUNCTION
OR
FUNCTIONS
WILL
BE
CHOSEN
FOR
IT
NEXT
WE
SHOW
USING
THAT
THE
PROBABILITY
THAT
OUR
HASH
TABLES
EVER
OVERFLOW
IS
NEGLIGIBLE
LEMMA
ASSUMING
THE
HASH
FUNCTIONS
ARE
PERFECTLY
RANDOM
A
RESHUFFLE
INTO
SUB
BUFFER
BIJ
SUCCEEDS
WITH
ALL
BUT
NEGLIGIBLE
PROBABILITY
PROOF
FIRST
OBSERVE
THAT
A
RESHUFFLE
INTO
SUB
BUFFER
BIJ
INVOLVES
AT
MOST
M
ELEMENTS
BEING
SHUFFLED
INTO
A
HASH
TABLE
OF
CAPACITY
M
FOR
THE
LOWER
LEVELS
BK
BK
THERE
WILL
BE
M
BUCKETS
EACH
HOLDING
UP
TO
B
LOG
N
ELEMENTS
AND
FOR
SUB
BUFFERS
OF
BK
BL
THERE
WILL
BE
CUCKOO
HASH
TABLES
OF
SIZE
EACH
AND
A
STASH
OF
SIZE
LOG
N
IN
THE
CASE
OF
STANDARD
HASHING
WE
CONSIDER
THE
PROBABILITY
THAT
MORE
THAN
B
ELEMENTS
END
UP
IN
ANY
BUCKET
WHEN
WE
THROW
M
BALLS
INTO
M
BINS
THE
PROBABILITY
THAT
THERE
ARE
EXACTLY
I
ELEMENTS
IN
ANY
BUCKET
CAN
BE
BOUNDED
AS
M
I
M
I
PR
BUCKET
HAS
I
ELEMENTS
M
I
MI
SUMMING
OVER
ALL
I
B
M
WE
GET
E
B
PR
BIN
HAS
AT
LEAST
I
BALLS
TAKING
B
E
B
THE
UNION
BOUND
OVER
ALL
M
BINS
THE
PROBABILITY
B
M
THAT
ANY
BIN
OVERFLOWS
IS
BOUNDED
BY
EB
E
B
WHICH
IS
NEGLIGIBLE
IN
OUR
CASE
WHERE
B
LOG
N
AND
LOG
N
M
N
IT
IS
SHOWN
IN
APPENDIX
C
THAT
FOR
CUCKOO
HASH
TABLES
OF
SIZE
M
WITH
A
STASH
OF
SIZE
AS
LONG
AS
M
Ω
N
AND
O
LOG
N
THE
PROBABILITY
OF
OVERFLOW
IS
M
Ω
WHICH
IS
NEGLIGIBLE
IN
N
THESE
RESTRICTIONS
ON
M
HOLD
FOR
ALL
SUB
BUFFERS
OF
LEVELS
BK
B
L
THEOREM
ASSUME
ONE
WAY
FUNCTIONS
EXIST
THEN
THERE
EXISTS
A
PPT
SIMULATOR
SUCH
THAT
FOR
ALL
T
AND
FOR
ALL
READ
WRITE
SEQUENCES
OF
LENGTH
T
THE
DISTRIBUTION
OF
T
IS
COMPUTATIONALLY
INDISTINGUISHABLE
FROM
THE
DISTRIBUTION
OF
EXECUTIONS
OF
OUR
BALANCED
ORAM
PROTOCOL
ON
ANY
REQUEST
SEQUENCE
OF
LENGTH
T
PROOF
WE
DESCRIBE
A
SIMULATOR
THAT
GENERATES
A
VIEW
OF
THE
SERVER
THAT
IS
COMPUTATIONALLY
INDISTINGUISHABLE
FROM
THAT
OF
A
REAL
EXECUTION
ON
ANY
SEQUENCE
OF
ACCESSES
FIRST
BY
THE
PSEUDORANDOMNESS
OF
THE
HASH
FUNCTIONS
WE
CAN
SIMULATE
THESE
USING
RANDOM
FUNCTIONS
WITH
DOMAIN
EQUAL
TO
N
ALONG
WITH
ALL
POSSIBLE
DUMMY
VALUES
WE
CAN
ALSO
SIMULATE
ENCRYPTED
DATA
ELEMENTS
BY
ENCRYPTIONS
OF
ZERO
BY
THE
SEMANTIC
SECURITY
OF
THE
UNDERLYING
ENCRYPTION
SCHEME
WE
OBSERVE
THAT
BOTH
A
READ
R
AND
A
WRITE
R
VAL
OPERATIONS
WILL
BEGIN
WITH
THE
SAME
READING
STEP
FOLLOWED
BY
THE
SAME
INSERTION
STEP
CAUSING
EXACTLY
ONE
NEW
ELEMENT
TO
BE
INSERTED
AT
THE
TOP
LEVEL
BUFFER
BK
ACCESSES
TO
BK
WILL
ALWAYS
BE
OBLIVIOUS
AS
BK
IS
ALWAYS
FULLY
SCANNED
WE
SHOW
HOW
TO
SIMULATE
THE
VIEW
OF
THE
SERVER
FOR
THESE
OPERATIONS
AFTER
WE
INVESTIGATE
WHAT
RESHUFFLING
DOES
WE
NOW
TURN
OUR
ATTENTION
TO
WHAT
HAPPENS
IN
SUB
BUFFER
BIJ
FIRST
OBSERVE
THAT
WHEN
ELEMENTS
ARE
SHUFFLED
INTO
BIJ
BRAND
NEW
HASH
FUNCTIONS
ARE
CHOSEN
THEREBY
BREAKING
ANY
POSSIBLE
PREVIOUS
DEPENDENCIES
IN
ADDITION
BY
THE
OBLIVIOUS
HASHING
OF
THE
SERVER
DOES
NOT
KNOW
THE
LOCATIONS
OF
THE
ELEMENTS
IN
BIJ
BE
IT
IN
A
STANDARD
HASH
TABLE
CUCKOO
HASH
TABLE
OR
THE
STASH
THEREFORE
TO
SIMULATE
THE
SERVER
VIEW
OF
BIJ
WE
ONLY
NEED
TO
CONSIDER
WHAT
HAPPENS
BETWEEN
TWO
RESHUFFLES
LET
R
INDICATE
THE
SET
OF
ELEMENTS
THAT
WAS
INSERTED
INTO
BIJ
AND
POSSIBLY
ITS
STASH
LET
BE
ANOTHER
ARBITRARY
SET
OF
R
ELEMENTS
AND
LET
H
OR
DENOTE
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
THE
HASH
FUNCTION
USED
FOR
BIJ
DURING
THIS
RESHUFFLE
RECALL
THAT
BECAUSE
WE
ARE
TREATING
HASH
FUNCTIONS
AS
TRULY
RANDOM
FUNCTIONS
WE
KNOW
THAT
H
IS
SAMPLED
UNIFORMLY
FROM
THE
SET
OF
RANDOM
FUNCTIONS
CONSISTENT
WITH
R
I
E
INSERTING
THE
ELEMENTS
OF
R
INTO
THE
HASHTABLE
DOES
NOT
CAUSE
AN
OVERFLOW
LET
H
DENOTE
THIS
DISTRIBUTION
AND
LET
DENOTE
THE
UNIFORM
DISTRIBUTION
OF
RANDOM
FUNCTIONS
THAT
ARE
CONSISTENT
WITH
BY
LEMMA
THE
STATISTICAL
DISTANCE
BETWEEN
H
AND
U
THE
UNIFORM
DISTRIBUTION
OF
RANDOM
FUNCTIONS
IS
NEGLIGIBLE
AS
IS
THE
STATISTICAL
DISTANCE
BETWEEN
AND
U
DURING
A
SEQUENCE
OF
QUERIES
TO
BIJ
ALL
ELEMENTS
ACCESSED
WILL
BE
UNIQUE
BY
LEMMA
THE
SERVER
ONLY
SEES
A
SEQUENCE
OF
PROBES
OF
DISTINCT
ELEMENTS
FROM
SOME
SEQUENCE
OF
ELEMENTS
LET
BE
AN
ARBITRARY
SET
OF
DISTINCT
ELEMENTS
AND
CONSIDER
THE
FOLLOWING
DISTRIBUTIONS
H
H
H
H
H
U
H
H
U
H
H
THE
STATISTICAL
DISTANCE
BETWEEN
EACH
NEIGHBORING
PAIR
OF
DISTRIBUTIONS
IS
NEGLIGIBLE
AND
THEREFORE
THE
DISTANCE
BETWEEN
THE
FIRST
AND
LAST
IS
NEGLIGIBLE
AS
THE
LAST
DISTRIBUTION
IS
FOR
ARBITRARY
AND
WE
CAN
SIMULATE
THE
SERVER
VIEW
BY
CHOOSING
AN
ARBITRARY
SEQUENCE
OF
OPERATIONS
HAS
O
N
LOG
LOG
N
WORST
CASE
OVERHEAD
PER
QUERY
WHILE
INCREASING
THE
WORK
AND
THE
SIZE
OF
THE
STORAGE
REQUIRED
BY
THE
SERVER
BY
A
CONSTANT
FACTOR
WARM
UP
WORST
CASE
CONSTRUCTION
AS
A
WARM
UP
WE
FIRST
DESCRIBE
A
METHOD
TO
CONVERT
THE
GOLDREICH
OSTROVSKY
OBLIVIOUS
RAM
SCHEME
SO
THAT
IT
WILL
HAVE
O
N
OVERHEAD
IN
THE
WORST
CASE
RATHER
THAN
O
N
AMORTIZED
OVERHEAD
CONVERTING
OUR
OWN
SCHEME
WILL
PROCEED
IN
A
SIMILAR
MANNER
THOUGH
WITH
ADDITIONAL
INGREDIENTS
SEE
SECTION
BELOW
RECALL
THAT
THE
SCHEME
OF
CAN
SIMPLY
BE
VIEWED
AS
THE
LOWER
LEVELS
OF
OUR
CONSTRUCTION
WHERE
NO
CUCKOO
HASHING
IS
OCCURRING
AND
NO
SUB
BUFFERS
ARE
BEING
USED
THAT
IS
EACH
LEVEL
I
O
LOG
N
IS
A
STANDARD
BUCKETED
HASH
TABLE
BI
WITH
BUCKETS
OF
O
LOG
N
ELEMENTS
EACH
ALSO
RECALL
THAT
IN
THE
SCHEME
OF
THEY
DO
NOT
WIPE
OUT
AN
ELEMENT
WHEN
IT
IS
FOUND
BUT
MERELY
COPY
IT
TO
THE
TOP
BUFFER
WHEN
TWO
IDENTICAL
MEMORY
ADDRESSES
ARE
BEING
SHUFFLED
INTO
THE
SAME
LEVEL
THE
OLDER
DUPLICATE
IS
REMOVED
WE
MAKE
THE
FOLLOWING
MODIFICATIONS
TO
THE
SCHEME
OF
TRIPLE
EACH
LEVEL
EACH
LEVEL
I
WILL
NOW
HAVE
THREE
BUFFERS
HASH
TABLES
BI
AND
THESE
THREE
BUFFERS
ARE
IDENTICAL
IN
SIZE
AND
STRUCTURE
TO
THE
ORIGINAL
BUFFERS
THEY
WILL
BE
MARKED
IN
A
ROTATING
FASHION
AS
ACTIVE
INACTIVE
AND
OUTPUT
SEARCHING
FOR
AN
ELEMENT
ON
LEVEL
I
WILL
INVOLVE
SEARCHING
FIRST
THE
ACTIVE
AND
THEN
THE
INACTIVE
BUFFER
FROM
AMORTIZED
OVERHEAD
TO
WORST
CASE
OVERHEAD
IN
OUR
CONSTRUCTION
ABOVE
THE
CLIENT
MAY
NEED
TO
PERFORM
A
LARGE
AMOUNT
OF
WORK
DURING
SOME
RESHUFFLE
OPERATIONS
UP
TO
Ω
N
WORK
WHEN
HANDLING
THE
VERY
LOWEST
LEVEL
ALTHOUGH
THE
OVERALL
AMORTIZED
OVERHEAD
ADD
WORKING
MEMORY
EACH
LEVEL
I
WILL
NOW
HAVE
PER
QUERY
IS
ONLY
O
N
LOG
LOG
N
FOR
CERTAIN
PERMANENTLY
ALLOCATED
WORKING
MEMORY
NECESSARY
APPLICATIONS
WE
MAY
WANT
TO
GUARANTEE
THAT
EVERY
TO
PERFORM
A
SHUFFLE
INTO
LEVEL
I
ALTHOUGH
THE
QUERY
EVEN
THOSE
THAT
INDUCE
A
RESHUFFLE
HAS
A
RESULT
OF
THE
SHUFFLE
WILL
EVENTUALLY
BE
WRITTEN
FROM
SMALL
BOUNDED
AMOUNT
OF
OVERHEAD
SUCH
A
GUARANTEE
THE
WORKING
MEMORY
TO
THE
OUTPUT
BUFFER
WE
DEFINE
WAS
RECENTLY
CONSIDERED
BY
GOODRICH
ET
AL
AND
IT
AS
A
SEPARATE
ENTITY
FROM
THE
BUFFERS
BECAUSE
SHI
ET
AL
SHI
ET
AL
GIVE
A
CONSTRUCTION
OF
THE
WORKING
MEMORY
MAY
IN
FACT
BE
LARGER
THAN
AN
OBLIVIOUS
RAM
WITH
O
LOG
N
WORST
CASE
OVERHEAD
A
BUFFER
RECALL
THAT
IN
THIS
WORKING
MEMORY
WITH
CONSTANT
CLIENT
MEMORY
GOODRICH
ET
AL
IS
OF
SIZE
LOG
N
FOR
LEVEL
I
WHICH
IS
ONLY
A
CONSTRUCTED
TWO
SCHEMES
ONE
OF
WHICH
USED
O
N
CLIENT
CONSTANT
TIMES
LARGER
THAN
BI
THUS
THE
OVERALL
MEMORY
TO
ACHIEVE
O
LOG
N
WORST
CASE
OVERHEAD
THE
ASYMPTOTIC
STORAGE
COMPLEXITY
IS
NOT
AFFECTED
BY
OTHER
USED
CONSTANT
CLIENT
MEMORY
AND
SHOWED
HOW
TO
PERMANENT
WORKING
MEMORY
BEING
ALLOCATED
EXTEND
SQUARE
ROOT
SOLUTION
OF
TO
ACHIEVE
THE
O
N
LOG
N
WORST
CASE
OVERHEAD
THIS
EXTENSION
MADE
SMEARING
THE
RESHUFFLE
WHEN
THE
ACTIVE
BUFFER
IN
USE
OF
DOUBLING
UP
THE
BUFFER
AND
LABELING
EACH
AS
A
LEVEL
I
IS
FULL
I
E
WHEN
IT
IS
THE
TIME
FOR
IT
TO
BE
CURRENT
OR
PREVIOUS
AND
SWITCHING
BETWEEN
THE
TWO
SHUFFLED
INTO
THE
NEXT
LEVEL
IT
IS
NOT
IMMEDIATELY
IN
THIS
SECTION
WE
DESCRIBE
A
METHOD
OF
TRIPLING
EACH
SHUFFLED
AS
THIS
MAY
TAKE
MORE
TIME
THAN
WE
CAN
BUFFER
AND
SWITCHING
BETWEEN
THEM
IN
ORDER
TO
SPREAD
AFFORD
FOR
SATISFYING
THE
DESIRED
WORST
CASE
GUARANOUT
THE
AMOUNT
OF
WORK
REQUIRED
FOR
THE
RESHUFFLING
TEE
BUT
INSTEAD
IT
IS
MARKED
INACTIVE
THE
INWE
SHOW
HOW
TO
CONVERT
THE
SCHEME
OF
TO
HAVE
ACTIVE
BUFFER
ON
LEVEL
I
SHOULD
BY
NOW
BE
WIPED
WORST
CASE
O
N
QUERY
OVERHEAD
AND
THEN
GO
ON
TO
CLEAN
AND
WILL
BE
LABELED
ACTIVE
INSTEAD
OF
IMSHOW
HOW
TO
EXTEND
OUR
CONSTRUCTION
INTO
A
SCHEME
THAT
MEDIATELY
PERFORMING
THE
ENTIRE
SHUFFLING
FOR
EVERY
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
SUBSEQUENT
QUERY
THE
CLIENT
PERFORMS
A
FIXED
NUMBER
OF
STEPS
Κ
O
N
OF
THE
OBLIVIOUS
SORTING
ALGORITHM
BY
THIS
THE
NEWLY
LABELED
INACTIVE
BUFFER
ON
LEVEL
I
CALL
IT
NI
AND
THE
ACTIVE
BUFFER
IN
LEVEL
I
CALL
IT
AI
ARE
SLOWLY
OVER
Κ
QUERIES
COPIED
INTO
THE
WORKING
MEMORY
OF
LEVEL
I
CALL
IT
WI
WHERE
THEY
ARE
SHUFFLED
TOGETHER
TO
CLARIFY
OVER
THE
COURSE
OF
THESE
Κ
QUERIES
THE
FOLLOWING
STEPS
ARE
PERFORMED
THE
ELEMENTS
FROM
NI
AND
AI
ARE
COPIED
INTO
WI
THE
OBLIVIOUS
SORT
IS
PERFORMED
ON
WI
WHILE
THE
BUFFERS
NI
AND
AI
REMAIN
AVAILABLE
TO
BE
SEARCHED
UPON
THE
OBLIVIOUS
SORT
FINISHES
BY
COPING
THE
RESULT
FROM
WI
TO
THE
OUTPUT
BUFFER
AT
LEVEL
I
UPON
COMPLETION
OF
THE
SHUFFLE
AFTER
Κ
QUERIES
FOR
LEVEL
I
THE
OUTPUT
BUFFER
IS
NOW
MARKED
AS
THE
ACTIVE
BUFFER
FOR
LEVEL
I
THE
INACTIVE
BUFFER
FROM
LEVEL
I
IS
WIPED
CLEAN
AND
LABELED
ACTIVE
AND
THE
ACTIVE
BUFFER
FROM
LEVEL
I
IS
WIPED
CLEAN
AND
LABELED
OUTPUT
IT
IS
IMPORTANT
TO
NOTE
THAT
Κ
THE
NUMBER
OF
STEPS
OF
THE
OBLIVIOUS
SORT
WE
PERFORM
PER
CLIENT
QUERY
IS
FIXED
AND
INDEPENDENT
OF
THE
DATA
ALSO
NOTE
THAT
THE
OBLIVIOUS
SORTING
ALGORITHM
OCCURS
ENTIRELY
WITHIN
THE
WORKING
MEMORY
THE
NEWLY
INACTIVE
BUFFER
AT
LEVEL
I
AND
THE
ACTIVE
BUFFER
AT
LEVEL
I
REMAIN
INTACT
AND
ARE
AVAILABLE
TO
BE
SEARCHED
UPON
INDEED
THE
ONLY
ACTIVITY
IN
THESE
TWO
BUFFERS
ARE
FROM
CLIENT
QUERY
LOOKUPS
AND
DATA
BEING
COPIED
INTO
WORKING
MEMORY
ONLY
UNTIL
THE
OBLIVIOUS
SORTING
IS
FINISHED
DO
WE
CLEAR
THE
CONTENTS
OF
NI
AND
AI
TO
SEE
WHY
THE
MODIFICATION
WORKS
WE
NEED
TO
SHOW
THAT
SHUFFLES
DO
NOT
OVERLAP
EACH
OTHER
THE
ONLY
DANGER
IS
WIPING
OUT
AN
INACTIVE
BUFFER
THAT
IS
NOT
YET
FINISHED
SHUFFLING
HOWEVER
WE
OBSERVE
THAT
THIS
DOES
NOT
CAUSE
A
PROBLEM
BECAUSE
THE
SHUFFLE
AT
LEVEL
I
INVOLVES
SHUFFLING
O
LOG
N
ELEMENTS
WHICH
REQUIRES
O
LOG
N
LOG
LOG
N
STEPS
WHICH
IS
O
N
SINCE
I
LOG
N
SINCE
WE
PERFORM
Κ
O
N
STEPS
PER
QUERY
THE
SHUFFLE
WILL
BE
OVER
ONCE
QUERIES
ARE
PROCESSED
AT
LEVEL
I
I
E
EXACTLY
THE
RATE
AT
WHICH
LEVEL
I
FILLS
UP
HOW
MUCH
OVERHEAD
DO
THESE
MODIFICATIONS
INCUR
ON
TOP
OF
THE
REGULAR
QUERY
OVERHEAD
WHICH
TAKES
O
N
TIME
WE
PERFORM
O
N
ADDITIONAL
STEPS
PER
LEVEL
ON
THE
SHUFFLE
AND
THERE
ARE
AT
MOST
LOG
N
LEVELS
THAT
NEED
TO
BE
SHUFFLED
THUS
GIVING
A
TOTAL
OF
O
N
OVERHEAD
PER
QUERY
WE
HAVE
THUS
TRANSFORMED
THE
O
N
AMORTIZED
OVERHEAD
OF
THE
ORIGINAL
SCHEME
INTO
O
N
WORST
CASE
OVERHEAD
WORST
CASE
CONSTRUCTION
FOR
MAIN
SCHEME
WE
NOW
SKETCH
THE
MODIFICATIONS
NEEDED
TO
MAKE
OUR
SCHEME
HAVE
O
N
LOG
LOG
N
WORST
CASE
OVERHEAD
WE
BEGIN
BY
MODIFYING
OUR
SCHEME
SO
THAT
IT
DOES
NOT
CASCADE
WHEN
SHUFFLING
I
E
WHEN
NEED
TO
SHUFFLE
LEVEL
I
ONLY
LEVEL
I
IS
SHUFFLED
INTO
THE
NEXT
LEVEL
I
RATHER
THAN
SHUFFLING
ALL
LEVELS
ABOVE
I
INTO
LEVEL
I
IN
ADDITION
THE
SCHEME
IS
MODIFIED
SUCH
THAT
IT
DOES
NOT
WIPE
OUT
AN
ELEMENT
UPON
FINDING
IT
INSTEAD
DUPLICATES
ARE
ONLY
REMOVED
WHEN
THEY
ARE
BEING
SHUFFLED
INTO
THE
SAME
SUB
BUFFER
NOTE
THAT
THE
LATTER
MODIFICATION
CAUSES
AN
UNEXPECTED
ISSUE
THAT
DID
NOT
OCCUR
IN
THE
SCHEME
OF
NAMELY
CONSIDER
THE
FOLLOWING
SCENARIO
AN
ELEMENT
IS
NOT
WIPED
OUT
AND
ENDS
UP
IN
THE
STASH
OF
A
VERY
BIG
LEVEL
I
L
A
NEWER
COPY
OF
THE
SAME
ELEMENT
IS
PRESENT
IN
A
MIDDLE
LEVEL
SOMEWHERE
BECAUSE
WE
RE
INSERT
THE
STASH
INTO
THE
HIERARCHY
THE
OLD
VERSION
OF
THE
ELEMENT
WILL
APPEAR
AT
A
HIGHER
LEVEL
THAN
THE
NEWER
VERSION
THUS
CAUSING
A
CONFLICT
TO
HANDLE
THIS
ISSUE
WE
ADD
A
TAG
TO
EACH
ELEMENT
THAT
INDICATES
THE
LOWEST
LEVEL
AND
SUB
BUFFER
IT
HAS
APPEARED
AT
AS
AN
ELEMENT
IS
SHUFFLED
INTO
LEVEL
I
SUB
BUFFER
J
THE
TAG
IS
UPDATED
VIA
THE
RULE
TAG
MAX
TAG
I
J
BASED
ON
THE
ORDER
IN
WHICH
WE
SEARCH
LEVELS
AND
SUB
BUFFERS
I
E
I
J
J
IF
I
OR
I
AND
J
J
WHICH
IS
NOT
THE
USUAL
LEXICOGRAPHICAL
ORDERING
WHEN
AN
ELEMENT
IS
STASHED
THE
TAG
IS
NOT
UPDATED
SO
AS
TO
KEEP
TRACK
OF
THE
TRUE
AGE
OF
THIS
ELEMENT
WHEN
SEARCHING
FOR
AN
ELEMENT
V
IF
IT
IS
FOUND
WE
KEEP
TRACK
OF
THE
TAG
BUT
CONTINUE
SEARCHING
FOR
V
UP
TO
A
POINT
LET
TAG
BE
THE
MINIMUM
ONE
OF
ALL
TAGS
OF
V
FOUND
SO
FAR
BEFORE
WE
SEARCH
A
LEVEL
AND
SUB
BUFFER
WE
FIRST
CHECK
THAT
IT
IS
LESS
THAN
TAG
IF
SO
THEN
WE
SEARCH
FOR
V
OTHERWISE
WE
STOP
AND
SEARCH
THE
REMAINING
LEVELS
AND
SUB
BUFFERS
FOR
RANDOM
ELEMENTS
THE
VALUE
THAT
IS
OUTPUT
IS
THE
V
CORRESPONDING
TO
THE
MINIMAL
TAG
TO
ENSURE
THAT
OUR
MAIN
CONSTRUCTION
WILL
HAVE
A
WORST
CASE
GUARANTEE
WE
BEGIN
BY
MAKING
THE
MODIFICATIONS
AS
DESCRIBED
ABOVE
TO
OUR
SUB
BUFFERS
EXCEPT
THAT
NOW
THE
CLIENT
PERFORMS
FEWER
STEPS
O
LOG
N
FOR
THE
LOWER
LEVELS
I
K
L
OF
THE
SHUFFLING
ALGORITHM
HOWEVER
WE
NOW
NEED
TO
DEAL
WITH
ANOTHER
INGREDIENT
WHERE
OUR
SCHEME
DIFFERS
FROM
THE
GOLDREICHOSTROVSKY
SCHEME
THERE
MAY
BE
UP
TO
L
K
O
LOG
N
LOG
LOG
N
ACTIVE
STASHES
SITTING
AT
THE
LOWER
LEVELS
THAT
NEED
TO
BE
RE
INSERTED
TO
THE
TOP
DEALING
WITH
ALL
THESE
INSERTIONS
IMMEDIATELY
WILL
VIOLATE
THE
DESIRED
WORST
CASE
BOUND
TO
HANDLE
THIS
WE
ADD
A
STASH
BACKLOG
AT
THE
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
VERY
TOP
LEVEL
THAT
CAN
HOLD
UP
TO
O
N
LOG
LOG
N
ELEMENTS
I
E
ALL
THE
ELEMENTS
IN
ALL
THE
ACTIVE
STASHES
FOR
EACH
LEVEL
I
K
L
NOW
WHEN
THE
CLIENT
WANTS
TO
EXECUTE
A
QUERY
THE
CLIENT
SCANS
THE
ENTIRE
STASH
BACKLOG
IN
ADDITION
TO
THE
TOPMOST
LEVEL
AFTER
EACH
QUERY
IS
HANDLED
THE
CLIENT
REMOVES
ONE
ELEMENT
FROM
THE
STASH
BACKLOG
AND
INSERTS
IT
INTO
THE
MAIN
HIERARCHY
IT
IS
IMPORTANT
TO
NOTE
THAT
THE
BACKLOG
WILL
NEVER
OVERFLOW
BECAUSE
IT
WILL
BE
EMPTIED
WITHIN
O
N
LOG
LOG
N
QUERIES
WHEREAS
IT
WILL
ONLY
BE
FILLED
WHEN
AN
ACTIVE
STASH
IS
BEING
SHUFFLED
INTO
WHICH
HAPPENS
AT
INTERVALS
OF
AT
LEAST
O
N
STEPS
TO
SEE
WHY
THIS
SCHEME
REMAINS
SECURE
WE
NEED
TO
JUSTIFY
WHY
LEMMA
APPLIES
HERE
AS
WELL
CONSIDER
ANY
CONFIGURATION
WHERE
SOME
VALUE
V
MAY
APPEAR
SEVERAL
TIMES
IN
THE
HIERARCHY
WITH
DIFFERENT
TAGS
AS
A
THOUGHT
EXPERIMENT
WE
CALL
EACH
SUB
BUFFER
V
SEARCHED
IF
V
WAS
SEARCHED
FOR
IN
THIS
SUB
BUFFER
BETWEEN
SHUFFLES
OF
THAT
SUB
BUFFER
WE
MUST
MAKE
SURE
THAT
WE
NEVER
SEARCH
FOR
V
IN
A
V
SEARCHED
SUB
BUFFER
WE
ALSO
CALL
A
SUB
BUFFER
V
SAFE
IF
THE
MINIMAL
V
TAG
IS
SMALLER
THAN
OR
EQUAL
TO
THE
INDEX
OF
THAT
SUB
BUFFER
AGAIN
THE
ORDERING
IS
THE
SEARCH
ORDER
NOT
LEXICOGRAPHICAL
THE
POINT
IS
THAT
V
WILL
NOT
BE
SEARCHED
UPON
IN
ANY
V
SAFE
SUB
BUFFER
DUE
TO
OUR
NEW
SEARCH
RULES
AS
LONG
AS
ALL
V
SEARCHED
BUFFERS
ARE
V
SAFE
THEN
WE
WILL
NEVER
SEARCH
FOR
V
TWICE
IN
A
SUB
BUFFER
WE
ARGUE
THAT
THIS
HOLDS
BY
INDUCTION
INITIALLY
ALL
SUB
BUFFERS
ARE
LABELED
WITH
NEITHER
WE
SHOW
THAT
WHEN
V
IS
READ
OR
WRITTEN
A
COPY
OF
V
IS
BEING
SHUFFLED
INTO
A
NEW
LEVEL
OR
V
IS
STASHED
WITH
AN
OLD
TAG
BACK
TO
THE
TOP
THE
INVARIANT
THAT
ALL
V
SEARCHED
SUB
BUFFERS
ARE
ALSO
V
SAFE
REMAINS
TRUE
IN
CASE
WHEN
V
IS
READ
OR
WRITTEN
IT
WILL
BE
RE
INSERTED
AT
THE
TOP
WITH
A
FRESH
TAG
WHICH
WILL
BE
THE
MINIMAL
TAG
THUS
ALL
LEVELS
AND
SUB
BUFFERS
IN
THE
HIERARCHY
WILL
NOW
BE
V
SAFE
AND
MANY
OF
THEM
WILL
ALSO
NOW
BE
VSEARCHED
IN
CASE
IF
THE
COPY
OF
V
BEING
SHUFFLED
IS
NOT
THE
ONE
WITH
THE
SMALLEST
TAG
THE
MINIMAL
TAG
REMAINS
THE
SAME
AND
THUS
THE
SET
OF
V
SAFE
SUB
BUFFERS
DOES
NOT
CHANGE
IF
THE
V
BEING
SHUFFLED
IS
THE
ONE
WITH
THE
MINIMAL
TAG
THE
TAG
WILL
BE
UPDATED
TO
THE
NEW
LEVEL
AND
SUB
BUFFER
THUS
POSSIBLY
REDUCING
THE
NUMBER
OF
V
SAFE
SUB
BUFFERS
HOWEVER
THE
ONLY
SUB
BUFFERS
THAT
WILL
BE
AFFECTED
ARE
THE
ONES
THAT
WERE
ON
THE
SAME
LEVEL
AS
THE
V
THAT
WAS
SHUFFLED
SINCE
THE
UPDATED
TAG
IS
ONLY
ONE
LEVEL
DEEPER
THEREFORE
THESE
SUB
BUFFERS
MUST
HAVE
ALSO
BEEN
SHUFFLED
OUT
OF
AND
EMPTIED
IN
THE
SAME
SHUFFLE
THAT
MOVED
V
WHICH
MEANS
THAT
THEY
ARE
NO
LONGER
VSEARCHED
IF
THEY
PREVIOUSLY
WERE
FINALLY
IF
AFTER
A
SHUFFLE
A
COPY
OF
V
ENDS
UP
IN
THE
STASH
AS
IN
CASE
THEN
BECAUSE
THE
TAG
IS
NOT
UPDATED
THE
MINIMAL
TAG
FOR
V
MUST
REMAIN
THE
SAME
AND
THEREFORE
THE
SET
OF
V
SAFE
SUB
BUFFERS
REMAINS
UNCHANGED
IN
ALL
THREE
CASES
THE
VSEARCHED
SUB
BUFFERS
REMAIN
V
SAFE
SUB
BUFFERS
FINISHING
THE
INDUCTION
WE
NOW
OBSERVE
THE
TOTAL
WORST
CASE
OVERHEAD
IN
THE
OBLIVIOUS
RAM
SCHEME
INCURRED
BY
THESE
MODIFICATIONS
FROM
OUR
ANALYSIS
IN
SECTION
THE
CLIENT
TAKES
O
N
LOG
LOG
N
TIME
TO
PERFORM
A
READ
OR
WRITE
QUERY
THE
CLIENT
NOW
ALSO
PERFORM
UP
TO
O
LOG
N
SHUFFLE
STEPS
FOR
EACH
OF
THE
O
LOG
N
LOG
LOG
N
LEVELS
AND
READ
IN
THE
STASH
BACKLOG
BOTH
OF
WHICH
TAKE
O
N
LOG
LOG
N
TIME
THUS
OVERALL
THE
WORST
CASE
OVERHEAD
FOR
OUR
MODIFIED
SCHEME
IS
O
N
LOG
LOG
N
FINALLY
WE
CONSIDER
THE
AMOUNT
OF
SERVER
STORAGE
WE
TRIPLE
EACH
SUB
BUFFER
IN
OUR
CONSTRUCTION
AS
WELL
AS
ADD
A
NEW
STASH
BACKLOG
OF
SIZE
O
N
LOG
LOG
N
FURTHERMORE
AS
IN
THE
AMOUNT
OF
PERMANENTLY
ALLOCATED
WORKING
MEMORY
PER
LEVEL
IS
ON
THE
ORDER
OF
THE
SIZE
OF
A
SUB
BUFFER
FOR
THAT
LEVEL
THEREFORE
THE
OVERALL
STORAGE
COMPLEXITY
IN
OUR
WORST
CASE
OBLIVIOUS
RAM
IS
ONLY
A
CONSTANT
FACTOR
WORSE
THAN
OUR
AMORTIZED
OBLIVIOUS
RAM
WE
CONSIDER
THE
SPARSE
FOURIER
TRANSFORM
PROBLEM
GIVEN
A
COMPLEX
VECTOR
X
OF
LENGTH
N
AND
A
PARAMETER
K
ESTIMATE
THE
K
LARGEST
IN
MAGNITUDE
COEFFICIENTS
OF
THE
FOURIER
TRANSFORM
OF
X
THE
PROBLEM
IS
OF
KEY
INTEREST
IN
SEVERAL
AREAS
INCLUDING
SIGNAL
PROCESSING
AUDIO
IMAGE
VIDEO
COMPRESSION
AND
LEARNING
THEORY
WE
PROPOSE
A
NEW
ALGORITHM
FOR
THIS
PROBLEM
THE
ALGORITHM
LEVERAGES
TECHNIQUES
FROM
DIGITAL
SIGNAL
PROCESSING
NOTABLY
GAUSSIAN
AND
DOLPH
CHEBYSHEV
FILTERS
UNLIKE
THE
TYPICAL
APPROACH
TO
THIS
PROBLEM
OUR
ALGORITHM
IS
NOT
ITERATIVE
THAT
IS
INSTEAD
OF
ESTIMATING
LARGE
COEFFICIENTS
SUBTRACTING
THEM
AND
RECURSING
ON
THE
REMINDER
IT
IDENTIFIES
AND
ESTIMATES
THE
K
LARGEST
COEFFICIENTS
IN
ONE
SHOT
IN
A
MANNER
AKIN
TO
SKETCHING
STREAMING
ALGORITHMS
THE
RESULTING
ALGORITHM
IS
STRUCTURALLY
SIMPLER
THAN
ITS
PREDECESSORS
AS
A
CONSEQUENCE
WE
ARE
ABLE
TO
EXTEND
CONSIDERABLY
THE
RANGE
OF
SPARSITY
K
FOR
WHICH
THE
ALGORITHM
IS
FASTER
THAN
FFT
BOTH
IN
THEORY
AND
PRACTICE
INTRODUCTION
THE
FAST
FOURIER
TRANSFORM
FFT
IS
ONE
OF
THE
MOST
FUNDAMENTAL
NUMERICAL
ALGORITHMS
IT
COMPUTES
THE
DISCRETE
FOURIER
TRANSFORM
DFT
OF
AN
N
DIMENSIONAL
SIGNAL
IN
O
N
LOG
N
TIME
THE
ALGORITHM
PLAYS
A
CENTRAL
ROLE
IN
SEVERAL
APPLICATION
AREAS
INCLUDING
SIGNAL
PROCESSING
AND
AUDIO
IMAGE
VIDEO
COMPRESSION
IT
IS
ALSO
A
FUNDAMENTAL
SUBROUTINE
IN
INTEGER
MULTIPLICATION
AND
ENCODING
DECODING
OF
ERROR
CORRECTING
CODES
ANY
ALGORITHM
FOR
COMPUTING
THE
EXACT
DFT
MUST
TAKE
TIME
AT
LEAST
PROPORTIONAL
TO
ITS
OUTPUT
SIZE
WHICH
IS
Θ
N
IN
MANY
APPLICATIONS
HOWEVER
MOST
OF
THE
FOURIER
COEFFICIENTS
OF
A
SIGNAL
ARE
SMALL
OR
EQUAL
TO
ZERO
I
E
THE
OUTPUT
OF
THE
DFT
IS
APPROXIMATELY
SPARSE
FOR
EXAMPLE
A
TYPICAL
BLOCK
IN
A
VIDEO
FRAME
HAS
ON
AVERAGE
NON
NEGLIGIBLE
COEFFICIENTS
I
E
OF
THE
COEFFICIENTS
ARE
NEGLIGIBLE
IMAGES
AND
AUDIO
DATA
ARE
EQUALLY
SPARSE
THIS
SPARSITY
PROVIDES
THE
RATIONALE
UNDERLYING
COMPRESSION
SCHEMES
SUCH
AS
MPEG
AND
JPEG
OTHER
APPLICATIONS
OF
SPARSE
FOURIER
ANALYSIS
INCLUDE
COMPUTATIONAL
LEARNING
THEORY
ANALYSIS
OF
BOOLEAN
FUNCTIONS
O
MULTISCALE
ANALYSIS
COMPRESSED
SENSING
SIMILARITY
SEARCH
IN
DATABASES
SPECTRUM
SENSING
FOR
WIDEBAND
CHANNELS
AND
DATACENTER
MONITORING
WHEN
THE
OUTPUT
OF
THE
DFT
IS
SPARSE
OR
APPROXIMATELY
SPARSE
ONE
CAN
HOPE
FOR
AN
OUTPUT
SENSITIVE
ALGORITHM
WHOSE
RUNTIME
DEPENDS
ON
K
THE
NUMBER
OF
COMPUTED
LARGE
COEFFICIENTS
FORMALLY
GIVEN
A
COMPLEX
VECTOR
X
WHOSE
FOURIER
TRANSFORM
IS
X
WE
REQUIRE
THE
ALGORITHM
TO
OUTPUT
AN
APPROXIMATION
X
TO
X
THAT
SATISFIES
THE
FOLLOWING
GUARANTEE
KX
X
C
MIN
K
SPARSE
Y
KX
WHERE
C
IS
SOME
APPROXIMATION
FACTOR
AND
THE
MINIMIZATION
IS
OVER
K
SPARSE
SIGNALS
NOTE
THAT
THE
BEST
K
SPARSE
APPROXIMATION
CAN
BE
OBTAINED
BY
SETTING
ALL
THE
ALGORITHM
IN
THIS
PAPER
HAS
A
SOMEWHAT
STRONGER
GUARANTEE
SEE
RESULTS
FOR
MORE
DETAILS
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
BUT
THE
LARGEST
K
COEFFICIENTS
OF
X
TO
SUCH
A
VECTOR
CAN
BE
REPRESENTED
USING
ONLY
O
K
NUMBERS
THUS
IF
K
IS
SMALL
THE
OUTPUT
OF
THE
ALGORITHM
CAN
BE
EXPRESSED
SUCCINCTLY
AND
ONE
CAN
HOPE
FOR
AN
ALGORITHM
WHOSE
RUNTIME
IS
SUBLINEAR
IN
THE
SIGNAL
SIZE
N
THE
FIRST
SUCH
SUBLINEAR
ALGORITHM
FOR
THE
HADAMARD
TRANSFORM
WAS
PRESENTED
IN
SHORTLY
AFTER
SEVERAL
SUBLINEAR
ALGORITHMS
FOR
THE
FOURIER
TRANSFORM
OVER
THE
COMPLEX
FIELD
WERE
DISCOVERED
GGI
THESE
ALGORITHMS
HAVE
A
RUNTIME
THAT
IS
POLYNOMIAL
IN
K
AND
LOG
N
THE
EXPONENTS
OF
THE
POLYNOMIALS
HOWEVER
ARE
TYPICALLY
LARGE
THE
FASTEST
AMONG
THESE
ALGORITHMS
HAVE
A
RUNTIME
OF
THE
FORM
O
K
LOGC
N
AS
IN
GGI
OR
THE
FORM
O
K
LOGC
N
AS
IN
FOR
SOME
CONSTANT
C
IN
PRACTICE
THE
EXPONENTS
IN
THE
RUNTIME
OF
THESE
ALGORITHMS
AND
THEIR
COMPLEX
STRUCTURES
LIMIT
THEIR
APPLICABILITY
TO
ONLY
VERY
SPARSE
SIGNALS
IN
PARTICULAR
THE
MORE
RECENT
ALGORITHMS
WERE
IMPLEMENTED
AND
EVALUATED
EMPIRICALLY
AGAINST
FFTW
AN
EFFICIENT
IMPLEMENTATION
OF
THE
FFT
WITH
A
RUNTIME
O
N
LOG
N
THE
RESULTS
SHOW
THAT
THE
ALGORITHM
IN
IS
COMPETITIVE
WITH
FFTW
FOR
N
AND
K
THE
ALGORITHMS
IN
GGI
REQUIRE
AN
EVEN
SPARSER
SIGNAL
I
E
LARGER
N
AND
SMALLER
K
TO
BE
COMPETITIVE
WITH
FFTW
RESULTS
IN
THIS
PAPER
WE
PROPOSE
A
NEW
SUBLINEAR
ALGORITHM
FOR
SPARSE
FOURIER
TRANSFORM
OVER
THE
COMPLEX
FIELD
THE
KEY
FEATURE
OF
OUR
ALGORITHM
IS
ITS
SIMPLICITY
THE
ALGORITHM
HAS
A
SIMPLE
STRUCTURE
WHICH
LEADS
TO
EFFICIENT
RUNTIME
WITH
LOW
BIG
OH
CONSTANT
SPECIFICALLY
FOR
THE
TYPICAL
CASE
OF
N
A
POWER
OF
OUR
ALGORITHM
HAS
THE
RUNTIME
OF
P
O
LOG
N
NK
LOG
N
THUS
THE
ALGORITHM
IS
FASTER
THAN
FFTW
FOR
K
UP
TO
O
N
LOG
N
IN
CONTRAST
EARLIER
ALGORITHMS
REQUIRED
ASYMPTOTICALLY
SMALLER
BOUNDS
ON
K
THIS
ASYMPTOTIC
IMPROVEMENT
IS
ALSO
REFLECTED
IN
EMPIRICAL
RUNTIMES
FOR
EXAMPLE
FOR
N
OUR
ALGORITHM
OUTPERFORMS
FFTW
FOR
K
UP
TO
ABOUT
WHICH
IS
AN
ORDER
OF
MAGNITUDE
HIGHER
THAN
PREVIOUSLY
ACHIEVED
THE
ESTIMATIONS
PROVIDED
BY
OUR
ALGORITHM
SATISFY
THE
SO
CALLED
GUARANTEE
SPECIFICALLY
LET
Y
BE
THE
MINIMIZER
OF
KX
FOR
A
PRECISION
PARAMETER
Δ
NO
AND
A
CONSTANT
OUR
RANDOMIZED
SEE
FOR
A
STREAMLINED
EXPOSITION
OF
SOME
OF
THE
ALGORITHMS
ASSUMING
ALL
INPUTS
ARE
REPRESENTED
USING
O
LOG
N
BITS
ALGORITHM
OUTPUTS
X
SUCH
THAT
KX
X
KX
K
WITH
PROBABILITY
N
THE
ADDITIVE
TERM
THAT
DEPENDS
ON
Δ
APPEARS
IN
ALL
PAST
ALGORITHMS
GGI
ALTHOUGH
TYPICALLY
WITH
THE
EXCEPTION
OF
IT
IS
ELIMINATED
BY
ASSUMING
THAT
ALL
COORDINATES
ARE
INTEGERS
IN
THE
RANGE
NO
NO
IN
THIS
PAPER
WE
KEEP
THE
DEPENDENCE
ON
Δ
EXPLICIT
THE
GUARANTEE
OF
EQUATION
IS
STRONGER
THAN
THE
GUARANTEE
OF
EQUATION
IN
PARTICULAR
THE
GUARANTEE
WITH
A
CONSTANT
APPROXIMATION
FACTOR
C
IMPLIES
THE
GUARANTEE
WITH
A
CONSTANT
APPROXIMATION
FACTOR
C
IF
ONE
SETS
ALL
BUT
THE
K
LARGEST
ENTRIES
IN
X
TO
FURTHERMORE
INSTEAD
OF
BOUNDING
ONLY
THE
COLLECTIVE
ERROR
THE
GUARANTEE
ENSURES
THAT
EVERY
FOURIER
COEFFICIENT
IS
WELL
APPROXIMATED
TECHNIQUES
WE
START
WITH
AN
OVERVIEW
OF
THE
TECHNIQUES
USED
IN
PRIOR
WORKS
THEN
DESCRIBE
OUR
CONTRIBUTION
IN
THAT
CONTEXT
AT
A
HIGH
LEVEL
SPARSE
FOURIER
ALGORITHMS
WORK
BY
BINNING
THE
FOURIER
COEFFICIENTS
INTO
A
SMALL
NUMBER
OF
BUCKETS
SINCE
THE
SIGNAL
IS
SPARSE
IN
THE
FREQUENCY
DOMAIN
EACH
BUCKET
IS
TO
HAVE
ONLY
ONE
LARGE
COEFFICIENT
WHICH
CAN
THEN
BE
LOCATED
TO
FIND
ITS
POSITION
AND
ESTIMATED
TO
FIND
ITS
VALUE
FOR
THE
ALGORITHM
TO
BE
SUBLINEAR
THE
BINNING
HAS
TO
BE
DONE
IN
SUBLINEAR
TIME
TO
ACHIEVE
THIS
GOAL
THESE
ALGORITHMS
BIN
THE
FOURIER
COEFFICIENT
USING
AN
N
DIMENSIONAL
FILTER
VECTOR
G
THAT
IS
CONCENTRATED
BOTH
IN
TIME
AND
FREQUENCY
I
E
G
IS
ZERO
EXCEPT
AT
A
SMALL
NUMBER
OF
TIME
COORDINATES
AND
ITS
FOURIER
TRANSFORM
G
IS
NEGLIGIBLE
EXCEPT
AT
A
SMALL
FRACTION
ABOUT
K
OF
THE
FREQUENCY
COORDINATES
THE
PASS
REGION
DEPENDING
ON
THE
CHOICE
OF
THE
FILTER
G
PAST
ALGORITHMS
CAN
BE
CLASSIFIED
AS
ITERATION
BASED
OR
INTERPOLATION
BASED
ITERATION
BASED
ALGORITHMS
USE
A
FILTER
THAT
HAS
A
SIGNIFICANT
MASS
OUTSIDE
ITS
PASS
REGION
GGI
FOR
EXAMPLE
THE
PAPERS
GGI
SET
G
TO
THE
BOX
CAR
FUNCTION
IN
WHICH
CASE
G
IS
THE
DIRICHLET
KERNEL
WHOSE
TAIL
DECAYS
IN
AN
INVERSE
LINEAR
FASHION
SINCE
THE
TAIL
DECAYS
SLOWLY
THE
FOURIER
COEFFICIENTS
BINNED
TO
A
PARTICULAR
BUCKET
LEAK
INTO
OTHER
BUCKETS
ON
THE
OTHER
HAND
THE
PAPER
ESTIMATES
THE
CONVOLUTION
IN
TIME
DOMAIN
VIA
RANDOM
SAMPLING
WHICH
ALSO
LEADS
TO
A
LARGE
ESTIMATION
ERROR
TO
REDUCE
THESE
ERRORS
AND
OBTAIN
THE
GUARANTEE
THESE
ALGORITHMS
HAVE
TO
PERFORM
MULTIPLE
ITERATIONS
WHERE
THIS
FACT
WAS
IMPLICIT
IN
FOR
AN
EXPLICIT
STATEMENT
AND
PROOF
SEE
REMARKS
AFTER
THEOREM
ONE
CAN
RANDOMIZE
THE
POSITIONS
OF
THE
FREQUENCIES
BY
SAMPLING
THE
SIGNAL
IN
TIME
DOMAIN
APPROPRIATELY
GGI
SEE
SECTION
PART
B
FOR
THE
DESCRIPTION
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
EACH
ITERATION
ESTIMATES
THE
LARGEST
FOURIER
COEFFICIENT
THE
ONE
LEAST
IMPACTED
BY
LEAKAGE
AND
SUBTRACTS
ITS
CONTRIBUTION
TO
THE
TIME
SIGNAL
THE
ITERATIVE
UPDATE
OF
THE
TIME
SIGNAL
CAUSES
A
LARGE
INCREASE
IN
RUNTIME
THE
ALGORITHMS
IN
GGI
PERFORM
THIS
UPDATE
BY
GOING
THROUGH
O
K
ITERATIONS
EACH
OF
WHICH
UPDATES
AT
LEAST
O
K
TIME
SAMPLES
RESULTING
IN
AN
O
K
TERM
IN
THE
RUNTIME
THE
ALGORITHM
INTRODUCED
A
BULK
SAMPLING
ALGORITHM
THAT
AMORTIZES
THIS
PROCESS
BUT
IT
REQUIRES
SOLVING
INSTANCES
OF
A
NON
UNIFORM
FOURIER
TRANSFORM
WHICH
IS
EXPENSIVE
IN
PRACTICE
INTERPOLATION
BASED
ALGORITHMS
ARE
LESS
COMMON
AND
LIMITED
TO
THE
DESIGN
IN
THIS
APPROACH
USES
A
LEAKAGE
FREE
FILTER
G
TO
AVOID
THE
NEED
FOR
ITERATION
SPECIFICALLY
THE
ALGORITHM
IN
USES
FOR
G
A
FILTER
IN
WHICH
GI
IFF
I
MOD
N
P
AND
GI
OTHERWISE
THE
FOURIER
TRANSFORM
OF
THIS
FILTER
IS
A
SPIKE
TRAIN
WITH
PERIOD
P
THIS
FILTER
DOES
NOT
LEAK
IT
IS
EQUAL
TO
ON
P
FRACTION
OF
COORDINATES
AND
IS
ZERO
ELSEWHERE
UNFORTUNATELY
HOWEVER
SUCH
A
FILTER
REQUIRES
THAT
P
DIVIDES
N
MOREOVER
THE
ALGORITHM
NEEDS
SEVERAL
DIFFERENT
VALUES
OF
P
SINCE
IN
GENERAL
ONE
CANNOT
ASSUME
THAT
N
IS
DIVISIBLE
BY
ALL
NUMBERS
P
THE
ALGORITHM
TREATS
THE
SIGNAL
AS
A
CONTINUOUS
FUNCTION
AND
INTERPOLATES
IT
AT
THE
REQUIRED
POINTS
INTERPOLATION
INTRODUCES
ADDITIONAL
COMPLEXITY
AND
INCREASES
THE
EXPONENTS
IN
THE
RUNTIME
OUR
APPROACH
THE
KEY
FEATURE
OF
OUR
ALGORITHM
IS
THE
USE
OF
A
DIFFERENT
TYPE
OF
FILTER
IN
THE
SIMPLEST
CASE
WE
USE
A
FILTER
OBTAINED
BY
CONVOLVING
A
GAUSSIAN
FUNCTION
WITH
A
BOX
CAR
FUNCTION
A
MORE
EFFICIENT
FILTER
CAN
BE
OBTAINED
BY
REPLACING
THE
GAUSSIAN
FUNCTION
WITH
A
DOLPH
CHEBYSHEV
FUNCTION
SEE
FIG
FOR
AN
ILLUSTRATION
BECAUSE
OF
THIS
NEW
FILTER
OUR
ALGORITHM
DOES
NOT
NEED
TO
EITHER
ITERATE
OR
INTERPOLATE
SPECIFICALLY
THE
FREQUENCY
RESPONSE
OF
OUR
FILTER
G
IS
NEARLY
FLAT
INSIDE
THE
PASS
REGION
AND
HAS
AN
EXPONENTIAL
TAIL
OUTSIDE
IT
THIS
MEANS
THAT
LEAKAGE
FROM
FREQUENCIES
IN
OTHER
BUCKETS
IS
NEGLIGIBLE
AND
HENCE
OUR
ALGORITHM
NEED
NOT
ITERATE
ALSO
FILTERING
CAN
BE
PERFORMED
USING
THE
EXISTING
INPUT
SAMPLES
XI
AND
HENCE
OUR
ALGORITHM
NEED
NOT
INTERPOLATE
THE
SIGNAL
AT
NEW
POINTS
AVOIDING
BOTH
ITERATION
AND
INTERPOLATION
IS
THE
KEY
FEATURE
THAT
MAKES
OUR
ALGORITHM
EFFICIENT
FURTHER
ONCE
A
LARGE
COEFFICIENT
IS
ISOLATED
IN
A
BUCKET
ONE
NEEDS
TO
IDENTIFY
ITS
FREQUENCY
IN
CONTRAST
TO
PAST
WORK
WHICH
TYPICALLY
USES
BINARY
SEARCH
FOR
THIS
TASK
WE
ADOPT
AN
IDEA
FROM
AND
TAILOR
IT
TO
OUR
PROBLEM
SPECIFICALLY
WE
SIMPLY
SELECT
THE
SET
OF
LARGE
BINS
WHICH
ARE
LIKELY
TO
CONTAIN
LARGE
COEFFICIENTS
AND
DIRECTLY
ESTIMATE
ALL
FREQUENCIES
IN
THOSE
BINS
TO
BALANCE
THE
COST
OF
THE
BIN
SELECTION
AND
ESTIMATION
STEPS
WE
MAKE
THE
NUMBER
OF
BINS
SOMEWHAT
LARGER
THAN
THE
TYPICAL
VALUE
OF
O
K
SPECIFICALLY
WE
USE
B
WHICH
LEADS
TO
THE
STATED
RUNTIME
NK
NOTATION
TRANSFORM
RELATED
NOTATIONS
FOR
AN
INPUT
SIGNAL
X
CN
ITS
FOURIER
SPECTRUM
IS
DENOTED
BY
X
WE
WILL
USE
X
Y
TO
DENOTE
THE
CONVOLUTION
OF
X
AND
Y
AND
X
Y
TO
DENOTE
THE
COORDINATE
WISE
PRODUCT
OF
X
AND
N
Y
RECALL
THAT
XD
Y
X
Y
WE
DEFINE
Ω
TO
BE
E
A
PRIMITIVE
NTH
ROOT
OF
UNITY
HERE
I
BUT
IN
THE
REST
OF
THE
PAPER
I
IS
AN
INDEX
INDICES
RELATED
NOTATIONS
ALL
OPERATIONS
ON
INDICES
IN
THIS
PAPER
ARE
TAKEN
MODULO
N
THEREFORE
WE
MIGHT
REFER
TO
AN
N
DIMENSIONAL
VECTOR
AS
HAVING
COORDINATES
N
OR
N
N
INTERCHANGEABLY
FINALLY
REFERS
TO
THE
SET
OF
INDICES
WHEREAS
SUPP
X
REFERS
TO
THE
SUPPORT
OF
VECTOR
X
I
E
THE
SET
OF
NON
ZERO
COORDINATES
IN
THIS
PAPER
WE
ASSUME
THAT
N
IS
AN
INTEGER
POWER
OF
BASICS
A
WINDOW
FUNCTIONS
IN
DIGITAL
SIGNAL
PROCESSING
ONE
DEFINES
WINDOW
FUNCTIONS
IN
THE
FOLLOWING
MANNER
DEFINITION
WE
DEFINE
A
Δ
W
STANDARD
WINDOW
FUNCTION
TO
BE
A
SYMMETRIC
VECTOR
F
RN
WITH
SUPP
F
W
W
SUCH
THAT
F
F
I
FOR
ALL
I
N
N
AND
F
I
Δ
FOR
ALL
I
N
N
CLAIM
FOR
ANY
AND
Δ
THERE
EXISTS
AN
Δ
O
LOG
Δ
STANDARD
WINDOW
FUNCTION
PROOF
THIS
IS
A
WELL
KNOWN
FACT
FOR
EXAMPLE
FOR
ANY
AND
Δ
ONE
CAN
OBTAIN
A
STANDARD
WINDOW
P
BY
TAKING
A
GAUSSIAN
WITH
STANDARD
DEVIATION
Θ
LOG
Δ
AND
TRUNCATING
IT
AT
W
O
LOG
Δ
THE
DOLPH
CHEBYSHEV
WINDOW
FUNCTION
ALSO
HAS
THE
CLAIMED
PROPERTY
BUT
WITH
MINIMAL
BIG
OH
CONSTANT
IN
PARTICULAR
HALF
THE
CONSTANT
OF
THE
TRUNCATED
GAUSSIAN
THE
ABOVE
DEFINITION
SHOWS
THAT
A
STANDARD
WINDOW
FUNCTION
ACTS
LIKE
A
FILTER
ALLOWING
US
TO
FOCUS
ON
A
SUBSET
OF
THE
FOURIER
COEFFICIENTS
IDEALLY
HOWEVER
WE
WOULD
LIKE
THE
PASS
REGION
OF
OUR
FILTER
TO
BE
AS
FLAT
AS
POSSIBLE
ALTHOUGH
IT
IS
PLAUSIBLE
THAT
ONE
COULD
COMBINE
OUR
FILTERS
WITH
THE
BINARY
SEARCH
TECHNIQUE
OF
AND
ACHIEVE
AN
ALGORITHM
WITH
A
O
K
LOGC
N
RUNTIME
OUR
PRELIMINARY
ANALYSIS
INDICATES
THAT
THE
RESULTING
ALGORITHM
WOULD
BE
SLOWER
INTUITIVELY
OBSERVE
THAT
FOR
N
AND
K
THE
VALUES
OF
NK
AND
K
N
ARE
QUITE
CLOSE
TO
EACH
OTHER
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DEFINITION
WE
DEFINE
A
Δ
W
FLAT
WINDOW
LEMMA
IF
J
N
IS
A
POWER
OF
TWO
AND
Σ
IS
FUNCTION
TO
BE
A
SYMMETRIC
VECTOR
F
RN
WITH
A
UNIFORMLY
RANDOM
ODD
NUMBER
IN
N
THEN
PR
ΣJ
SUPP
F
W
W
SUCH
THAT
F
I
Δ
Δ
C
C
N
FOR
ALL
I
N
N
AND
F
I
Δ
FOR
ALL
I
N
N
PROOF
IF
J
FOR
SOME
ODD
A
THEN
THE
ORBIT
OF
ΣJ
IS
A
FLAT
WINDOW
FUNCTION
LIKE
THE
ONE
IN
FIG
CAN
BE
OB
FOR
ALL
ODD
THERE
ARE
THUS
ROUND
C
TAINED
FROM
A
STANDARD
WINDOW
FUNCTION
BY
CONVOLVING
POSSIBLE
VALUES
IN
C
C
OUT
OF
N
SUCH
IT
WITH
A
BOX
CAR
WINDOW
FUNCTION
I
E
AN
INTERVAL
ELEMENTS
IN
THE
ORBIT
FOR
A
CHANCE
OF
AT
MOST
N
SPECIFICALLY
WE
HAVE
THE
FOLLOWING
NOTE
THAT
FOR
SIMPLICITY
WE
WILL
ONLY
ANALYZE
OUR
CLAIM
FOR
ANY
AND
Δ
WITH
THERE
EXISTS
ALGORITHM
WHEN
N
IS
A
POWER
OF
TWO
FOR
GENERAL
N
N
AN
Δ
O
LOG
Δ
FLAT
WINDOW
FUNCTION
THE
ANALOG
OF
LEMMA
WOULD
LOSE
AN
N
Φ
N
O
O
LOG
LOG
N
FACTOR
WHERE
Φ
IS
EULER
TOTIENT
FUNCTION
NOTE
THAT
IN
OUR
APPLICATIONS
WE
HAVE
Δ
N
THIS
WILL
CORRESPONDINGLY
INCREASE
THE
RUNNING
TIME
OF
AND
THUS
THE
WINDOW
LENGTHS
W
OF
THE
FLAT
THE
ALGORITHM
ON
GENERAL
N
WINDOW
FUNCTION
AND
THE
STANDARD
WINDOW
FUNCTION
ARE
CLAIM
ALLOWS
US
TO
CHANGE
THE
SET
OF
COEFFITHE
SAME
UP
TO
A
CONSTANT
FACTOR
CIENTS
BINNED
TO
A
BUCKET
BY
CHANGING
THE
PERMUTATION
PROOF
LET
F
AND
LET
F
BE
AN
LEMMA
BOUNDS
THE
PROBABILITY
OF
NON
ZERO
COEFFIΔ
W
STANDARD
WINDOW
FUNCTION
WITH
MINIMAL
CIENTS
FALLING
INTO
THE
SAME
BUCKET
F
N
C
SUBSAMPLED
FFT
SUPPOSE
WE
HAVE
A
VECTOR
N
W
O
WE
CAN
ASSUME
LOG
Δ
X
CN
AND
A
PARAMETER
B
DIVIDING
N
AND
WOULD
LIKE
BECAUSE
N
N
OTHERWISE
SO
LOG
Δ
N
TO
COMPUTE
Y
I
X
I
N
B
FOR
I
B
O
LOG
NΔ
LET
BE
THE
SUM
OF
F
N
ADJACENT
CLAIM
Y
IS
THE
B
DIMENSIONAL
FOURIER
TRANSFORM
PN
B
COPIES
OF
F
NORMALIZED
TO
THAT
IS
WE
DEFINE
OF
YI
J
XI
BJ
P
F
N
THEREFORE
Y
CAN
BE
COMPUTED
IN
O
SUPP
X
J
F
N
F
I
J
ˆ
B
LOG
B
TIME
F
I
PF
N
F
J
J
F
N
PROOF
SO
BY
THE
SHIFT
THEOREM
IN
THE
TIME
DOMAIN
B
N
X
N
B
X
X
F
N
IJ
N
B
X
XBJ
A
Ω
I
BJ
A
N
B
X
Ω
X
J
I
N
B
J
FA
FA
Ω
A
J
J
J
F
N
SINCE
F
I
FOR
I
F
N
THE
NORMALIZATION
FACTOR
PF
N
J
F
N
F
J
IS
AT
LEAST
FOR
EACH
I
N
N
THE
SUM
ON
TOP
CONTAINS
ALL
THE
TERMS
FROM
THE
SUM
ON
BOTTOM
THE
OTHER
N
TERMS
IN
THE
TOP
SUM
HAVE
MAGNITUDE
AT
MOST
Δ
N
Δ
F
N
SO
I
N
Δ
F
N
Δ
FOR
I
N
HOWEVER
I
F
NΔ
F
N
Δ
THUS
F
IS
AN
Δ
W
FLAT
WINDOW
FUNCTION
WITH
THE
CORRECT
W
B
X
N
B
X
A
AS
DESIRED
J
XBJ
A
Ω
IAN
B
B
X
YA
Ω
IAN
B
Y
I
A
ALGORITHM
A
KEY
ELEMENT
OF
OUR
ALGORITHM
IS
THE
INNER
LOOP
WHICH
FINDS
AND
ESTIMATES
EACH
LARGE
COEFFICIENT
WITH
CONSTANT
PROBABILITY
IN
WE
DESCRIBE
THE
INNER
LOOP
AND
IN
WE
SHOW
HOW
TO
USE
IT
TO
CONSTRUCT
THE
FULL
B
PERMUTATION
OF
SPECTRA
FOLLOWING
ALGORITHM
WE
CAN
PERMUTE
THE
FOURIER
SPECTRUM
AS
INNER
LOOP
LET
B
BE
A
PARAMETER
THAT
DILOWS
BY
PERMUTING
THE
TIME
DOMAIN
VIDES
N
TO
BE
DETERMINED
LATER
LET
G
BE
A
CLAIM
DEFINE
THE
TRANSFORM
PΣ
Τ
SUCH
THAT
GIVEN
B
Δ
W
FLAT
WINDOW
FUNCTION
FOR
SOME
Δ
AND
AN
N
DIMENSIONAL
VECTOR
X
AN
INTEGER
Σ
THAT
IS
INVERTIBLE
W
O
B
LOG
N
WE
WILL
HAVE
Δ
NC
SO
ONE
CAN
Δ
MOD
N
AND
AN
INTEGER
Τ
N
PΣ
Τ
X
I
XΣI
Τ
THEN
THINK
OF
IT
AS
NEGLIGIBLY
SMALL
Τ
I
P
THERE
ARE
TWO
VERSIONS
OF
THE
INNER
LOOP
LOCATION
Σ
Τ
X
ΣI
X
I
Ω
LOOPS
AND
ESTIMATION
LOOPS
LOCATION
LOOPS
ARE
GIVEN
PN
AJ
PROOF
FOR
ALL
A
P
A
PARAMETER
D
AND
OUTPUT
A
SET
I
N
OF
DKN
B
Σ
Τ
X
A
J
XΣJ
Τ
Ω
PN
A
J
Τ
Σ
X
AΣ
Ω
Τ
AΣ
COORDINATES
THAT
CONTAINS
EACH
LARGE
COEFFICIENT
WITH
J
XJ
Ω
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
G
LINEAR
SCALE
B
LINEAR
SCALE
G
A
B
G
LOG
SCALE
B
LOG
SCALE
G
05
0001
1E
C
D
FIGURE
AN
EXAMPLE
FLAT
WINDOW
FUNCTION
FOR
N
THIS
IS
THE
SUM
OF
ADJACENT
DOLPH
CHEBYSHEV
WINDOW
FUNCTIONS
GIVING
A
06
133
FLAT
WINDOW
FUNCTION
ALTHOUGH
OUR
PROOF
B
IN
A
LINEAR
ONLY
GUARANTEES
A
TOLERANCE
Δ
THE
ACTUAL
TOLERANCE
IS
BETTER
THE
TOP
ROW
SHOWS
G
AND
G
SCALE
AND
THE
BOTTOM
ROW
SHOWS
THE
SAME
WITH
A
LOG
SCALE
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
GOOD
PROBABILITY
ESTIMATION
LOOPS
ARE
GIVEN
A
SET
WE
HAVE
THAT
I
N
AND
ESTIMATE
XI
SUCH
THAT
EACH
COORDINATE
IS
N
X
ESTIMATED
WELL
WITH
GOOD
PROBABILITY
Y
ΣI
OΣ
I
P
X
G
Σ
Τ
T
ΣI
T
OΣ
I
T
CHOOSE
A
RANDOM
Σ
Τ
N
WITH
Σ
ODD
N
X
DEFINE
Y
G
PΣ
Τ
X
SO
YI
GI
XΣI
Τ
THEN
PΣ
Τ
X
ΣJ
G
Σ
I
J
OΣ
I
SUPP
Y
SUPP
G
W
J
COMPUTE
Z
I
Y
I
N
B
FOR
I
B
BY
CLAIM
PDW
BE
THIS
IS
THE
DFT
OF
ZI
J
YI
JB
X
P
X
G
Σ
Τ
ΣJ
Σ
I
J
OΣ
I
DEFINE
THE
HASH
FUNCTION
HΣ
N
B
J
T
BY
HΣ
I
ROUND
ΣIB
N
AND
THE
OFFSET
OΣ
N
N
N
BY
OΣ
I
ΣI
X
HΣ
I
N
B
PΣ
Τ
X
ΣJ
G
Σ
I
J
OΣ
I
LOCATION
LOOPS
LET
J
CONTAIN
THE
DK
COORDINATES
J
T
OF
MAXIMUM
MAGNITUDE
IN
Z
OUTPUT
I
I
X
X
N
HΣ
I
J
WHICH
HAS
SIZE
DKN
B
P
X
P
X
Δ
Σ
Τ
ΣJ
Σ
Τ
ΣJ
ESTIMATION
LOOPS
FOR
I
I
ESTIMATE
X
I
AS
J
T
J
T
ΤI
X
I
Z
HΣ
I
Ω
G
OΣ
I
BY
CLAIM
WE
CAN
COMPUTE
Z
IN
O
W
B
LOG
B
O
B
LOG
NΔ
TIME
LOCATION
LOOPS
THUS
TAKE
O
B
LOG
NΔ
DKN
B
TIME
AND
ESTIMATION
LOOPS
TAKE
O
B
LOG
NΔ
I
TIME
FIG
ILLUSTRATES
THE
INNER
LOOP
FOR
ESTIMATION
LOOPS
WE
GET
THE
FOLLOWING
GUARANTEE
LEMMA
LET
BE
THE
SUPPORT
OF
THE
LARGEST
K
COEFFICIENTS
OF
X
AND
X
CONTAIN
THE
REST
THEN
FOR
ANY
PR
X
X
I
Σ
Τ
K
KX
KX
O
K
B
IN
THE
LAST
STEP
THE
LEFT
TERM
FOLLOWS
FROM
G
A
Δ
FOR
ALL
A
THE
RIGHT
TERM
IS
BECAUSE
FOR
J
T
Σ
I
J
OΣ
I
Σ
I
J
OΣ
I
B
N
N
B
AND
G
A
Δ
FOR
A
N
B
BY
CLAIM
THIS
BECOMES
X
Τ
J
Y
ΣI
OΣ
I
Δ
X
J
Ω
KX
J
T
P
DEFINE
V
J
T
X
J
Ω
Τ
J
AS
A
CHOICE
OVER
Τ
V
IS
THE
ENERGY
OF
A
RANDOM
FOURIER
COEFFICIENT
OF
THE
VECTOR
X
T
SO
WE
CAN
BOUND
THE
EXPECTATION
OVER
Τ
E
V
KX
T
PROOF
BY
THE
DEFINITIONS
Τ
NOW
FOR
EACH
COORDINATE
J
I
PRΣ
J
T
B
BY
LEMMA
THUS
PRΣ
T
B
SO
WITH
PROBABILITY
B
OVER
Σ
WE
HAVE
X
Z
HΣ
I
Ω
Τ
I
G
OΣ
I
Y
ΣI
OΣ
I
Ω
Τ
I
G
OΣ
I
CONSIDER
THE
CASE
THAT
X
IS
ZERO
EVERYWHERE
BUT
AT
I
SO
SUPP
P
Σ
Τ
X
ΣI
THEN
Y
IS
THE
CONVOLUTION
OF
G
AND
PΣ
Τ
X
AND
G
IS
SYMMETRIC
SO
Y
ΣI
OΣ
I
G
P
Σ
Τ
X
ΣI
OΣ
I
G
OΣ
I
PΣ
Τ
XΣI
G
OΣ
I
X
I
Ω
Τ
I
KX
T
X
T
LET
E
BE
THE
EVENT
THAT
THIS
OCCURS
SO
E
IS
WITH
PROBABILITY
B
AND
OTHERWISE
WE
HAVE
E
EV
E
E
KX
T
E
E
X
T
E
X
T
Σ
Τ
Σ
Σ
Σ
WHICH
SHOWS
THAT
X
X
I
IN
THIS
CASE
BUT
X
X
I
IS
FURTHERMORE
WE
KNOW
LINEAR
IN
X
SO
IN
GENERAL
WE
CAN
ASSUME
X
I
AND
X
BOUND
X
E
EV
E
X
T
X
J
PR
Σ
I
J
B
B
Σ
Τ
Σ
Σ
SINCE
X
I
Z
HΣ
I
G
OΣ
I
Z
HΣ
I
Δ
J
Y
ΣI
OΣ
I
Δ
IT
IS
SUFFICIENT
TO
BOUND
Y
ΣI
OΣ
I
KX
DEFINE
T
J
N
Σ
I
J
B
B
B
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
CONVOLVED
SIGNAL
MAGNITUDE
MAGNITUDE
PERMUTED
SIGNAL
Π
Π
Π
A
MAGNITUDE
MAGNITUDE
REGIONS
ESTIMATED
LARGE
Π
B
SAMPLES
ACTUALLY
COMPUTED
Π
P
Σ
Τ
X
Y
G
PΣ
Τ
X
P
Σ
Τ
X
Π
Π
Π
Y
G
PΣ
Τ
X
CHOSEN
REGION
P
Σ
Τ
X
Z
SAMPLE
CUTOFF
Z
C
D
FIGURE
EXAMPLE
INNER
LOOP
OF
THE
ALGORITHM
ON
SPARSE
INPUT
THIS
RUN
HAS
PARAMETERS
N
K
G
BEING
THE
06
133
FLAT
WINDOW
FUNCTION
IN
FIG
AND
SELECTING
THE
TOP
OF
B
SAMPLES
IN
PART
A
THE
ALGORITHM
BEGINS
WITH
TIME
DOMAIN
ACCESS
TO
PΣ
Τ
X
GIVEN
BY
PΣ
Τ
X
I
XΣI
Τ
WHICH
PERMUTES
THE
SPECTRUM
OF
X
BY
PERMUTING
THE
SAMPLES
IN
THE
TIME
DOMAIN
IN
PART
B
THE
ALGORITHM
COMPUTES
THE
TIME
DOMAIN
SIGNAL
Y
G
PΣ
Τ
X
THE
SPECTRUM
OF
Y
PICTURED
IS
LARGE
AROUND
THE
LARGE
COORDINATES
OF
PΣ
Τ
X
THE
ALGORITHM
THEN
COMPUTES
Z
WHICH
IS
THE
RATE
B
SUBSAMPLING
OF
Y
AS
PICTURED
IN
PART
C
DURING
ESTIMATION
LOOPS
THE
ALGORITHM
ESTIMATES
X
I
BASED
ON
THE
VALUE
OF
THE
NEAREST
COORDINATE
IN
Z
NAMELY
Z
HΣ
I
DURING
LOCATION
LOOPS
PART
D
THE
ALGORITHM
CHOOSES
J
THE
TOP
DK
HERE
COORDINATES
OF
Z
AND
SELECTS
THE
ELEMENTS
OF
N
THAT
ARE
CLOSEST
TO
THOSE
COORDINATES
THE
SHADED
REGION
OF
THE
PICTURE
IT
OUTPUTS
THE
SET
I
OF
PREIMAGES
OF
THOSE
ELEMENTS
IN
THIS
EXAMPLE
THE
TWO
COORDINATES
ON
THE
LEFT
LANDED
TOO
CLOSE
IN
THE
PERMUTATION
AND
FORM
A
HASH
COLLISION
AS
A
RESULT
THE
ALGORITHM
MISSES
THE
SECOND
FROM
THE
LEFT
COORDINATE
IN
ITS
OUTPUT
OUR
GUARANTEE
IS
THAT
EACH
LARGE
COORDINATE
HAS
A
LOW
PROBABILITY
OF
BEING
MISSED
IF
WE
SELECT
THE
TOP
O
K
SAMPLES
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
BY
LEMMA
THEREFORE
BY
MARKOV
INEQUALITY
AND
AND
BY
LEMMA
A
UNION
BOUND
WE
HAVE
FOR
ANY
C
THAT
KN
E
V
O
C
B
PR
V
KX
PR
E
EV
C
E
EV
Σ
Τ
Σ
Τ
Σ
Τ
B
N
O
D
THUS
BY
MARKOV
INEQUALITY
PR
V
DK
B
K
OR
C
B
N
PR
U
V
DK
K
O
HENCE
B
D
SINCE
THE
RHS
IS
ONLY
MEANINGFUL
FOR
D
WE
HAVE
N
K
THEREFORE
DK
B
C
Δ
KX
KX
B
K
C
B
PR
Y
ΣI
OΣ
I
Σ
Τ
PR
U
V
DK
N
O
B
D
REPLACING
C
WITH
B
AND
USING
X
X
I
AND
THUS
Y
ΣI
OΣ
I
Δ
GIVES
PR
J
B
Z
J
Δ
E
KD
O
D
Δ
KX
Δ
KX
PR
X
X
I
Σ
Τ
Δ
Δ
HENCE
A
UNION
BOUND
OVER
THIS
AND
THE
PROBABILITY
THAT
K
X
X
I
E
GIVES
B
K
PR
I
I
O
WHICH
IMPLIES
THE
RESULT
B
D
FURTHERMORE
SINCE
G
OΣ
I
Δ
Δ
Z
HΣ
I
IS
A
GOOD
ESTIMATE
FOR
X
I
THE
DIVISION
IS
MAINLY
USEFUL
FOR
FIXING
THE
PHASE
THEREFORE
IN
LOCATION
LOOPS
WE
GET
THE
FOLLOWING
GUARANTEE
Q
LEMMA
DEFINE
E
K
KX
KX
TO
BE
THE
ERROR
TOLERATED
IN
LEMMA
THEN
FOR
ANY
I
N
WITH
X
I
PR
I
I
O
AS
DESIRED
OUTER
LOOP
OUR
ALGORITHM
IS
PARAMETERIZED
BY
AND
Δ
IT
RUNS
L
O
LOG
N
QITERATIONS
OF
THE
INNER
LOOP
WITH
PARAMETERS
B
O
NK
LOG
N
Δ
AND
D
O
AS
WELL
AS
Δ
FOR
R
L
RUN
A
LOCATION
INNER
LOOP
TO
GET
IR
FOR
EACH
I
I
IL
LET
SI
R
I
IR
LET
I
I
I
SI
L
FOR
R
L
RUN
AN
ESTIMATION
INNER
LOOP
ON
I
TO
GET
X
RI
FOR
I
I
ESTIMATE
X
MEDIAN
X
RI
I
I
WHERE
WE
TAKE
THE
MEDIAN
IN
REAL
AND
IMAGINARY
COORDINATES
SEPARATELY
K
B
D
K
PROOF
WITH
PROBABILITY
AT
LEAST
O
B
X
X
I
E
IN
THIS
CASE
Z
HΣ
I
Δ
E
THUS
IT
IS
SUFFICIENT
TO
SHOW
THAT
WITH
PROBABILITY
AT
LEAST
O
D
THERE
ARE
AT
MOST
DK
LOCATIONS
J
B
WITH
Z
J
Δ
E
SINCE
EACH
Z
J
CORRESPONDS
TO
N
B
LOCATIONS
IN
N
WE
WILL
SHOW
THAT
WITH
PROBABILITY
AT
LEAST
O
D
THERE
ARE
AT
MOST
DKN
B
LOCATIONS
LEMMA
THE
ALGORITHM
RUNS
IN
Q
J
N
WITH
X
Δ
E
NK
LOG
N
Δ
LOG
N
O
LET
U
J
N
X
J
E
AND
V
J
N
X
X
J
E
THEREFORE
J
N
X
U
V
PROOF
TO
ANALYZE
THIS
ALGORITHM
NOTE
THAT
SINCE
Δ
WE
HAVE
X
L
X
I
SI
IR
LDKN
B
J
X
Δ
E
U
V
I
TIME
R
WE
ALSO
KNOW
U
K
KX
NOTE
K
THAT
B
IS
CHOSEN
IN
ORDER
TO
MINIMIZE
THE
RUNNING
TIME
FOR
THE
PURPOSE
OF
CORRECTNESS
IT
SUFFICES
THAT
B
CK
FOR
SOME
CONSTANT
C
WE
WILL
USE
THIS
FACT
LATER
IN
THE
EXPERIMENTAL
SECTION
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
OR
I
B
THEREFORE
THE
RUNNING
TIME
OF
BOTH
THE
LOCATION
AND
ESTIMATION
INNER
LOOPS
IS
O
B
LOG
NΔ
DKN
B
COMPUTING
I
AND
COMPUTING
THE
MEDIANS
BOTH
TAKE
LINEAR
TIME
NAMELY
O
LDKN
B
THUS
THE
TOTAL
RUNNING
TIME
IS
O
LB
LOG
NΔ
LDKN
B
PLUGGING
Q
NK
IN
B
O
LOG
N
Δ
AND
D
O
THIS
RUNNING
Q
TIME
IS
O
NK
LOG
N
Δ
LOG
N
WE
REQUIRE
B
Ω
K
HOWEVER
FOR
K
N
LOG
N
Δ
THIS
WOULD
CAUSE
THE
RUN
TIME
TO
BE
LARGER
BUT
IN
THIS
CASE
THE
PREDICTED
RUN
TIME
IS
Ω
N
LOG
N
ALREADY
SO
THE
STANDARD
FFT
IS
FASTER
AND
WE
CAN
FALL
BACK
ON
IT
ALL
I
I
HAVE
X
AND
X
I
WITH
PROBABILITY
WITH
TOTAL
PROBABILITY
WE
HAVE
KX
X
K
KX
KX
K
RESCALING
AND
Δ
GIVES
OUR
THEOREM
EXPERIMENTAL
EVALUATION
IMPLEMENTATION
WE
IMPLEMENT
OUR
ALGORITHM
IN
C
USING
THE
STANDARD
TEMPLATE
LIBRARY
AND
REFER
TO
THIS
IMPLEMENTATION
AS
SFFT
WHICH
STANDS
FOR
SPARSE
FFT
WE
HAVE
TWO
VERSIONS
SFFT
WHICH
THEOREM
RUNNING
THE
ALGORITHM
WITH
PARAMETERS
IMPLEMENTS
THE
ALGORITHM
AS
IN
AND
SFFT
WHICH
ADDS
A
HEURISTIC
TO
IMPROVE
THE
RUNTIME
Δ
GIVES
X
SATISFYING
SFFT
THE
IDEA
OF
THE
HEURISTIC
IS
TO
APPLY
THE
FILTER
USED
IN
TO
RESTRICT
THE
LOCATIONS
OF
THE
KX
X
K
KX
Δ
KX
K
LARGE
COEFFICIENTS
THE
HEURISTIC
IS
PARAMETERIZED
BY
AN
M
DIVIDING
N
DURING
A
PREPROCESSING
STAGE
IT
DOES
THE
WITH
Q
PROBABILITY
N
AND
RUNNING
TIME
FOLLOWING
LOG
N
O
NK
LOG
N
Δ
CHOOSE
Τ
N
UNIFORMLY
AT
RANDOM
PROOF
DEFINE
FOR
I
M
SET
YI
XI
N
M
Τ
COMPUTE
Y
R
OUTPUT
T
M
CONTAINING
THE
LARGEST
KX
KX
E
K
ELEMENTS
OF
Y
LEMMA
SAYS
THAT
IN
EACH
LOCATION
ITERATION
R
FOR
OBSERVE
THAT
Y
PN
M
X
Τ
I
M
J
THUS
I
M
J
I
Ω
J
ANY
I
WITH
X
I
X
E
Y
I
X
J
K
R
Τ
PR
I
I
O
I
J
MOD
M
B
D
THUS
E
SI
AND
EACH
ITERATION
IS
AN
INDEPENDENT
TRIAL
SO
BY
A
CHERNOFF
BOUND
THE
CHANCE
THAT
SI
L
IS
AT
MOST
L
THEREFORE
BY
A
UNION
BOUND
WITH
PROBABILITY
AT
LEAST
I
I
FOR
ALL
I
WITH
X
I
NEXT
LEMMA
SAYS
THAT
FOR
EACH
ESTIMATION
ITERATION
R
AND
INDEX
I
PR
X
RI
X
I
E
O
K
B
THEREFORE
WITH
PROBABILITY
Ω
L
X
RI
X
I
E
IN
AT
LEAST
OF
THE
ITERATIONS
SINCE
REAL
X
IS
THE
MEDIAN
OF
THE
REAL
X
RI
THERE
MUST
EXIST
TWO
R
WITH
X
RI
X
I
E
BUT
ONE
REAL
X
RI
ABOVE
REAL
X
AND
ONE
BELOW
HENCE
ONE
OF
THESE
R
HAS
REAL
X
X
I
REAL
X
RI
X
I
E
AND
SIMILARLY
FOR
THE
IMAGINARY
AXIS
THEN
X
X
I
MAX
REAL
X
X
I
IMAG
X
X
I
BY
A
UNION
BOUND
OVER
I
WITH
PROBABILITY
AT
LEAST
WE
HAVE
X
X
I
FOR
ALL
I
I
SINCE
THIS
MEANS
THAT
THE
FILTER
IS
VERY
EFFICIENT
IN
THAT
IT
HAS
NO
LEAKAGE
AT
ALL
ALSO
IT
IS
SIMPLE
TO
COMPUTE
UNFORTUNATELY
IT
CANNOT
BE
RANDOMIZED
USING
PΣ
Τ
AFTER
PERMUTING
BY
Σ
ANY
TWO
COLLIDING
ELEMENTS
J
AND
J
I
E
SUCH
THAT
J
J
MOD
M
CONTINUE
TO
COLLIDE
NEVERTHELESS
IF
X
J
IS
LARGE
THEN
J
MOD
M
IS
LIKELY
TO
LIE
IN
T
AT
LEAST
HEURISTICALLY
ON
RANDOM
INPUT
SFFT
COMPLETES
THE
ALGORITHM
ASSUMING
THAT
ALL
LARGE
COEFFICIENTS
J
HAVE
J
MOD
M
IN
T
THAT
IS
IN
THE
MAIN
ALGORITHM
OF
WE
THEN
RESTRICT
OUR
SETS
IR
TO
CONTAIN
ONLY
COORDINATES
I
WITH
I
MOD
M
T
WE
EXPECT
THAT
IR
M
DKN
B
RATHER
THAN
THE
PREVIOUS
DKN
B
THIS
MEANS
THAT
OUR
HEURISTIC
WILL
IMPROVE
THE
RUNTIME
OF
THE
INNER
LOOPS
FROM
O
B
LOG
N
Δ
DKN
B
K
TO
O
B
LOG
N
Δ
M
DKN
B
M
DK
AT
THE
COST
OF
O
M
LOG
M
PREPROCESSING
NOTE
THAT
ON
WORST
CASE
INPUT
SFFT
MAY
GIVE
INCORRECT
OUTPUT
WITH
HIGH
PROBABILITY
FOR
EXAMPLE
IF
XI
WHEN
I
IS
A
MULTIPLE
OF
N
M
AND
OTHERWISE
THEN
Y
WITH
PROBABILITY
M
N
AND
THE
ALGORITHM
WILL
OUTPUT
OVER
SUPP
X
HOWEVER
IN
PRACTICE
THE
ALGORITHM
WORKS
FOR
SUFFICIENTLY
RANDOM
X
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
CLAIM
AS
A
HEURISTIC
APPROXIMATION
SFFT
EXPERIMENTAL
SETUP
THE
TEST
SIGNALS
ARE
GENERRUNS
IN
O
K
N
LOG
N
Δ
LOG
N
AS
LONG
AS
K
ATED
IN
A
MANNER
SIMILAR
TO
THAT
IN
FOR
THE
RUN
N
LOG
N
Δ
TIME
EXPERIMENTS
K
FREQUENCIES
ARE
SELECTED
UNIFORMLY
AT
RANDOM
FROM
N
AND
ASSIGNED
A
MAGNITUDE
OF
AND
JUSTIFICATION
FIRST
WE
WILL
SHOW
THAT
THE
HEURISTIC
A
UNIFORMLY
RANDOM
PHASE
THE
REST
ARE
SET
TO
ZERO
IMPROVES
THE
INNER
LOOP
RUNNING
TIME
TO
O
B
LOG
N
Δ
FOR
THE
TOLERANCE
TO
NOISE
EXPERIMENTS
THE
TEST
SIGNALS
K
ARE
GENERATED
AS
BEFORE
BUT
THEY
ARE
COMBINED
WITH
ADM
DKN
B
M
DK
THEN
OPTIMIZE
THE
PARAMETERS
M
AND
B
DITIVE
WHITE
GAUSSIAN
NOISE
WHOSE
VARIANCE
VARIES
DEHEURISTICALLY
ONE
WOULD
EXPECT
EACH
OF
THE
IR
TO
BE
A
PENDING
ON
THE
DESIRED
SNR
EACH
POINT
IN
THE
GRAPHS
T
M
FACTOR
SMALLER
THAN
IF
WE
DID
NOT
REQUIRE
THE
ELEMENTS
IS
THE
AVERAGE
OVER
RUNS
WITH
DIFFERENT
INSTANCES
OF
TO
LIE
IN
T
MODULO
M
HENCE
WE
EXPECT
EACH
OF
THE
IR
TEST
SIGNALS
AND
DIFFERENT
INSTANCES
OF
NOISE
IN
ALL
EX
K
PERIMENTS
THE
PARAMETERS
OF
SFFT
SFFT
AND
AND
I
TO
HAVE
SIZE
T
M
DKN
B
O
M
DKN
B
THEN
IN
EACH
LOCATION
LOOP
RATHER
THAN
SPENDING
O
DKN
B
AAFFT
ARE
CHOSEN
SO
THAT
THE
AVERAGE
ERROR
K
TIME
TO
LIST
OUR
OUTPUT
WE
SPEND
O
M
DKN
B
TIME
IN
THE
ABSENCE
OF
NOISE
IS
BETWEEN
AND
PER
PLUS
THE
TIME
REQUIRED
TO
FIGURE
OUT
WHERE
TO
START
LISTING
NON
ZERO
FREQUENCY
FINALLY
ALL
EXPERIMENTS
ARE
RUN
ON
COORDINATES
FROM
EACH
OF
THE
DK
CHOSEN
ELEMENTS
J
OF
Z
A
DUAL
CORE
INTEL
GHZ
CPU
RUNNING
UBUNTU
LINUX
WE
DO
THIS
BY
SORTING
J
AND
ΣI
I
T
MOD
M
THEN
04
WITH
A
CACHE
SIZE
OF
KB
AND
GB
OF
RAM
RUNTIME
VS
SIGNAL
SIZE
IN
THIS
EXPERIMENT
SCANNING
THROUGH
THE
ELEMENTS
IT
TAKES
O
M
DK
TIME
TO
SORT
O
DK
ELEMENTS
IN
M
SO
THE
TOTAL
RUNTIME
OF
WE
FIX
THE
SPARSITY
PARAMETER
K
AND
REPORT
THE
K
DKN
B
M
DK
RUNTIME
OF
THE
COMPARED
ALGORITHMS
FOR
DIFFERENT
EACH
LOCATION
LOOP
IS
O
B
LOG
N
Δ
M
THE
ESTIMATION
LOOPS
ARE
EVEN
FASTER
SINCE
THEY
BENEFIT
SIGNAL
SIZES
N
WE
PLOT
IN
FIG
A
THE
MEAN
MAXIMUM
AND
MINIMUM
RUNTIMES
FOR
SFFT
FROM
I
BEING
SMALLER
BUT
AVOID
THE
M
DK
PENALTY
THE
FULL
ALGORITHM
DOES
O
M
LOG
M
PREPROCESSING
SFFT
AAFFT
FFTW
AND
FFTW
OPT
AND
RUNS
THE
INNER
LOOP
L
O
LOG
N
TIMES
WITH
OVER
RUNS
THE
RELATIVE
RUNTIMES
OF
AAFFT
AND
D
O
THEREFORE
GIVEN
PARAMETERS
B
AND
FFTW
ARE
CONSISTENT
WITH
THOSE
REPORTED
IN
M
THE
ALGORITHM
TAKES
O
M
LOG
M
B
LOG
NΔ
LOG
N
FIG
K
KN
K
AS
EXPECTED
FIG
A
SHOWS
THAT
THE
RUNTIMES
M
B
LOG
N
M
LOG
N
LOG
N
TIME
OPTIMIZING
OVER
OF
SFFT
AND
FFTW
AND
THEIR
VARIANTS
ARE
APPROXIB
WE
TAKE
MATELY
LINEAR
IN
THE
LOG
SCALE
HOWEVER
THE
SLOPE
OF
THE
R
LINE
FOR
SFFT
IS
LESS
THAN
THE
SLOPE
FOR
FFTW
WHICH
IS
A
N
K
O
M
LOG
N
K
LOG
N
Δ
LOG
N
LOG
N
RESULT
OF
SFFT
SUB
LINEAR
RUNTIME
FURTHER
THE
FIGURE
M
SHOWS
THAT
FOR
SIGNAL
SIZES
N
BOTH
SFFT
TIME
THEN
OPTIMIZING
OVER
M
THIS
BECOMES
AND
SFFT
ARE
FASTER
THAN
BOTH
VARIANTS
OF
FFTW
AT
RECOVERING
THE
EXACT
NON
ZERO
COEFFICIENTS
ON
THE
K
OTHER
HAND
THE
RUNTIME
OF
AAFFT
IS
PROPORTIONAL
O
K
N
LOG
N
Δ
LOG
N
LOG
N
TO
POLYLOG
N
AND
THUS
IT
APPEARS
ALMOST
CONSTANT
AS
WE
INCREASE
THE
SIGNAL
SIZE
FOR
N
I
E
TIME
IF
K
N
LOG
N
Δ
THE
FIRST
TERM
DOMINATES
AAFFT
EVENTUALLY
BEATS
THE
RUNTIME
OF
SFFT
FACTOR
SMALLER
NOTE
THAT
THIS
IS
AN
N
LOG
N
Δ
K
AND
IS
ONLY
TIMES
SLOWER
THAN
SFFT
OVERALL
THAN
THE
RUNNING
TIME
OF
SFFT
FOR
A
LARGE
RANGE
OF
SIGNAL
SIZES
FROM
ABOUT
TO
SFFT
HAS
THE
FASTEST
RUNTIME
NUMERICAL
RESULTS
WE
EVALUATE
THE
PERFORRUNTIME
VS
NUMBER
OF
NON
ZERO
FREQUENMANCE
OF
SFFT
AND
SFFT
AND
COMPARE
THEM
CIES
IN
THIS
EXPERIMENT
WE
FIX
THE
SIGNAL
SIZE
TO
N
AGAINST
TWO
BASELINES
FFTW
FJ
WHICH
IS
I
E
AND
EVALUATE
THE
RUN
TIME
OF
SFFT
THE
FASTEST
PUBLIC
IMPLEMENTATION
FOR
COMPUTING
THE
VS
THE
NUMBER
OF
NON
ZERO
FREQUENCIES
K
FOR
EACH
VALUE
DFT
AND
HAS
A
RUNTIME
OF
O
N
LOG
N
AND
AAFFT
OF
K
THE
EXPERIMENT
IS
REPEATED
TIMES
FIG
B
WHICH
IS
THE
PRIOR
SUBLINEAR
ALGORITHM
WITH
LUSTRATES
THE
MEAN
MAXIMUM
AND
MINIMUM
RUNTIMES
THE
FASTEST
EMPIRICAL
RUNTIME
FOR
COMPLETENESS
FOR
THE
COMPARED
ALGORITHMS
WE
COMPARE
AGAINST
TWO
VARIANTS
OF
FFTW
BASIC
AND
FIG
B
SHOWS
THAT
SFFT
AND
SFFT
HAVE
A
OPTIMIZED
THE
OPTIMIZED
VERSION
REQUIRES
PREPROCESSFASTER
RUNTIME
THAN
BASIC
FFTW
FOR
K
UP
TO
AND
ING
DURING
WHICH
THE
ALGORITHM
IS
TUNED
TO
A
PARTICULAR
MACHINE
HARDWARE
IN
CONTRAST
OUR
CURRENT
FOR
THE
VALUES
OF
K
AND
N
THAT
ARE
CLOSE
TO
THE
ONES
CONSIDERED
TATIONS
OF
SFFT
VARIANTS
DO
NOT
PERFORM
HARDWARE
SPE
IN
WE
USE
THE
PARAMETERS
THEREIN
FOR
OTHER
RANGES
WE
CIFIC
OPTIMIZATIONS
FOLLOW
THE
GUIDELINES
IN
THE
AAFFT
DOCUMENTATION
COPYRIGHT
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
RUN
TIME
VS
SIGNAL
SIZE
K
RUN
TIME
VS
SPARSITY
N
SFFT
SFFT
FFTW
FFTW
OPT
RUN
TIME
SEC
RUN
TIME
SEC
AAFFT
SFFT
SFFT
FFTW
FFTW
OPT
AAFFT
NUMBER
OF
NON
ZERO
FREQUENCIES
K
SIGNAL
SIZE
N
A
B
FIGURE
A
RUNTIME
VS
SIGNAL
SIZE
THE
FIGURE
SHOWS
THAT
FOR
A
LARGE
RANGE
OF
SIGNAL
SIZES
N
SFFT
IS
FASTER
THAN
FFTW
AND
THE
STATE
OF
THE
ART
SUBLINEAR
ALGORITHM
B
RUNTIME
VS
SPARSITY
PARAMETER
THE
FIGURE
SHOWS
THAT
SFFT
SIGNIFICANTLY
EXTENDS
THE
RANGE
OF
APPLICATIONS
FOR
WHICH
SPARSE
APPROXIMATION
OF
DFT
IS
PRACTICAL
AND
BEATS
THE
RUNTIME
OF
FFTW
FOR
VALUES
OF
K
ORDER
OF
MAGNITUDE
LARGER
THAN
THOSE
ACHIEVED
BY
PAST
WORK
RESPECTIVELY
WHEN
COMPARED
TO
THE
OPTIMIZED
FFTW
THE
CROSSING
VALUES
BECOME
AND
THUS
SFFT
CROSSING
VALUES
ARE
AROUND
N
IN
COMPARISON
AAFFT
IS
FASTER
THAN
FFTW
VARIANTS
FOR
K
BETWEEN
AND
FURTHER
THE
RELATIVE
RUNTIMES
OF
AAFFT
AND
FFTW
ARE
CLOSE
TO
THOSE
REPORTED
IN
FIG
FINALLY
FFTW
HAS
A
RUNTIME
OF
O
N
LOG
N
WHICH
IS
INDEPENDENT
OF
THE
NUMBER
OF
NON
ZERO
FREQUENCIES
K
AS
CAN
BE
SEEN
IN
FIG
B
THUS
AS
THE
SPARSITY
OF
THE
SIGNAL
DECREASES
I
E
K
INCREASES
FFTW
EVENTUALLY
BECOMES
FASTER
THAN
SFFT
AND
AAFFT
NONETHELESS
THE
RESULTS
SHOW
THAT
IN
COMPARISON
WITH
THE
FASTEST
PRIOR
SUBLINEAR
ALGORITHM
SFFT
SIGNIFICANTLY
EXTENDS
THE
RANGE
OF
APPLICATIONS
FOR
WHICH
SPARSE
APPROXIMATION
OF
DFT
IS
PRACTICAL
ROBUSTNESS
TO
NOISE
LAST
WE
WOULD
LIKE
TO
CHECK
THAT
SFFT
REDUCED
RUNTIME
DOES
NOT
COME
AT
THE
EXPENSE
OF
REDUCING
ROBUSTNESS
TO
NOISE
THUS
WE
COMPARE
THE
PERFORMANCE
OF
SFFT
AND
SFFT
AGAINST
AAFFT
FOR
DIFFERENT
LEVELS
OF
WHITE
GAUSSIAN
NOISE
SPECIFICALLY
WE
FIX
THE
N
AND
K
AND
EXPERIMENT
WITH
DIFFERENT
SIGNAL
SNRS
WE
CHANGE
THE
SNR
BY
CHANGING
THE
VARIANCE
OF
THE
GAUSSIAN
NOISE
FOR
EACH
NOISE
VARIANCE
WE
RUN
MULTIPLE
EXPERIMENTS
BY
REGENERATING
NEW
INSTANCES
OF
THE
SIGNAL
AND
NOISE
VECTORS
FOR
EACH
RUN
WE
COMPUTE
THE
ERROR
METRIC
PER
AS
THE
AVERAGE
ERROR
BETWEEN
THE
OUTPUT
THE
SNR
IS
DEFINED
AS
SN
R
LOG
N
DIMENSIONAL
NOISE
VECTOR
X
Z
WHERE
Z
IS
AN
APPROXIMATION
X
RESTRICTED
TO
ITS
K
LARGEST
ENTRIES
AND
THE
BEST
K
SPARSE
APPROXIMATION
OF
X
REFERRED
TO
AS
Y
AVERAGE
ERROR
X
X
Y
I
K
I
N
FIG
PLOTS
THE
AVERAGE
ERROR
PER
NON
ZERO
FREQUENCY
FOR
SFFT
SFFT
AND
AAFFT
THE
FIGURE
SHOWS
THAT
ALL
THREE
ALGORITHMS
ARE
STABLE
UNDER
NOISE
FURTHER
SFFT
VARIANTS
APPEAR
TO
BE
MORE
ROBUST
TO
NOISE
THAN
AAFFT
SEMINAL
PAPERS
IN
THEORETICAL
CS
PAPADIMITRIOU
ET
AL
AND
MACHINE
LEARNING
HOFMANN
PROBABILISTIC
LATENT
SEMANTIC
ANALYSIS
SUGGESTED
THAT
DOCUMENTS
ARISE
AS
A
CONVEX
COMBINATION
OF
I
E
DISTRIBUTION
ON
A
SMALL
NUMBER
OF
TOPIC
VECTORS
WHERE
EACH
TOPIC
VECTOR
IS
A
DISTRIBUTION
ON
WORDS
I
E
A
VECTOR
OF
WORD
FREQUENCIES
EACH
CONVEX
COMBINATION
OF
TOPICS
THUS
IS
ITSELF
A
DISTRIBUTION
ON
WORDS
AND
THE
DOCUMENT
IS
ASSUMED
TO
BE
GENERATED
BY
DRAWING
N
INDEPENDENT
SAMPLES
FROM
IT
SUBSEQUENT
WORK
MAKES
SPECIFIC
CHOICES
FOR
THE
DISTRIBUTION
USED
TO
GENERATE
TOPIC
COMBINATIONS
THE
WELLKNOWN
LATENT
DIRICHLET
ALLOCATION
LDA
MODEL
OF
BLEI
ET
AL
HYPOTHESIZES
A
DIRICHLET
DISTRIBUTION
SEE
SECTION
IV
THUS
THE
TOPIC
MODELING
PROBLEM
CONSISTS
OF
FITTING
A
GOOD
TOPIC
MODEL
TO
THE
DOCUMENT
CORPUS
THE
PREVAILING
APPROACH
IN
MACHINE
LEARNING
IS
TO
USE
LOCAL
SEARCH
E
G
OR
OTHER
HEURISTICS
IN
AN
ATTEMPT
TO
FIND
A
MAXIMUM
LIKELIHOOD
FIT
TO
THE
ABOVE
MODEL
FOR
EXAMPLE
FITTING
TO
A
CORPUS
OF
NEWSPAPER
ARTICLES
MAY
REVEAL
FIFTY
TOPIC
VECTORS
CORRESPONDING
TO
SAY
POLITICS
SPORTS
WEATHER
ENTERTAINMENT
ETC
AND
A
PARTICULAR
ARTICLE
COULD
BE
EXPLAINED
AS
A
COMBINATION
OF
THE
TOPICS
POLITICS
SPORTS
AND
ENTERTAINMENT
UNFORTUNATELY
AND
NOT
SURPRISINGLY
THE
MAXIMUM
LIKELIHOOD
ESTIMATION
IS
N
P
HARD
SEE
SECTION
V
AND
CONSEQUENTLY
WHEN
USING
THIS
PARADIGM
IT
SEEMS
NECESSARY
TO
RELY
ON
UNPROVEN
HEURISTICS
EVEN
THOUGH
THESE
HAVE
WELL
KNOWN
LIMITATIONS
E
G
GETTING
STUCK
IN
A
LOCAL
MINIMA
THE
WORK
OF
PAPADIMITRIOU
ET
AL
WHICH
ALSO
FORMALIZED
THE
TOPIC
MODELING
PROBLEM
AND
A
LONG
LINE
OF
SUBSEQUENT
WORK
HAVE
ATTEMPTED
TO
GIVE
PROVABLE
GUARANTEES
FOR
THE
PROBLEM
OF
LEARNING
THE
MODEL
PARAMETERS
ASSUMING
THE
DATA
IS
ACTUALLY
GENERATED
FROM
IT
THIS
IS
IN
CONTRAST
TO
A
MAXIMUM
LIKELIHOOD
APPROACH
WHICH
ASKS
TO
FIND
THE
CLOSEST
FIT
MODEL
FOR
ARBITRARY
DATA
THE
PRINCIPAL
ALGORITHMIC
PROBLEM
IS
THE
FOLLOWING
SEE
SECTION
I
A
FOR
MORE
DETAILS
META
PROBLEM
IN
TOPIC
MODELING
THERE
IS
AN
UNKNOWN
TOPIC
MATRIX
A
WITH
NONNEGATIVE
ENTRIES
THAT
IS
DIMENSION
N
R
AND
A
STOCHASTICALLY
GENERATED
UNKNOWN
MATRIX
W
THAT
IS
DIMENSION
R
M
EACH
COLUMN
OF
AW
IS
VIEWED
AS
A
PROBABILITY
DISTRIBUTION
ON
ROWS
AND
FOR
EACH
COLUMN
WE
ARE
GIVEN
N
N
I
I
D
SAMPLES
FROM
THE
ASSOCIATED
DISTRIBUTION
ABSTRACT
TOPIC
MODELING
IS
AN
APPROACH
USED
FOR
AUTOMATIC
COMPREHENSION
AND
CLASSIFICATION
OF
DATA
IN
A
VARIETY
OF
SETTINGS
AND
PERHAPS
THE
CANONICAL
APPLICATION
IS
IN
UNCOVERING
THEMATIC
STRUCTURE
IN
A
CORPUS
OF
DOCUMENTS
A
NUMBER
OF
FOUNDATIONAL
WORKS
BOTH
IN
MACHINE
LEARNING
AND
IN
THEORY
HAVE
SUGGESTED
A
PROBABILISTIC
MODEL
FOR
DOCUMENTS
WHEREBY
DOCUMENTS
ARISE
AS
A
CONVEX
COMBINATION
OF
I
E
DISTRIBUTION
ON
A
SMALL
NUMBER
OF
TOPIC
VECTORS
EACH
TOPIC
VECTOR
BEING
A
DISTRIBUTION
ON
WORDS
I
E
A
VECTOR
OF
WORD
FREQUENCIES
SIMILAR
MODELS
HAVE
SINCE
BEEN
USED
IN
A
VARIETY
OF
APPLICATION
AREAS
THE
LATENT
DIRICHLET
ALLOCATION
OR
LDA
MODEL
OF
BLEI
ET
AL
IS
ESPECIALLY
POPULAR
THEORETICAL
STUDIES
OF
TOPIC
MODELING
FOCUS
ON
LEARNING
THE
MODEL
PARAMETERS
ASSUMING
THE
DATA
IS
ACTUALLY
GENERATED
FROM
IT
EXISTING
APPROACHES
FOR
THE
MOST
PART
RELY
ON
SINGULAR
VALUE
DECOMPOSITION
SVD
AND
CONSEQUENTLY
HAVE
ONE
OF
TWO
LIMITATIONS
THESE
WORKS
NEED
TO
EITHER
ASSUME
THAT
EACH
DOCUMENT
CONTAINS
ONLY
ONE
TOPIC
OR
ELSE
CAN
ONLY
RECOVER
THE
SPAN
OF
THE
TOPIC
VECTORS
INSTEAD
OF
THE
TOPIC
VECTORS
THEMSELVES
THIS
PAPER
FORMALLY
JUSTIFIES
NONNEGATIVE
MATRIX
FACTORIZATION
NMF
AS
A
MAIN
TOOL
IN
THIS
CONTEXT
WHICH
IS
AN
ANALOG
OF
SVD
WHERE
ALL
VECTORS
ARE
NONNEGATIVE
USING
THIS
TOOL
WE
GIVE
THE
FIRST
POLYNOMIAL
TIME
ALGORITHM
FOR
LEARNING
TOPIC
MODELS
WITHOUT
THE
ABOVE
TWO
LIMITATIONS
THE
ALGORITHM
USES
A
FAIRLY
MILD
ASSUMPTION
ABOUT
THE
UNDERLYING
TOPIC
MATRIX
CALLED
SEPARABILITY
WHICH
IS
USUALLY
FOUND
TO
HOLD
IN
REAL
LIFE
DATA
PERHAPS
THE
MOST
ATTRACTIVE
FEATURE
OF
OUR
ALGORITHM
IS
THAT
IT
GENERALIZES
TO
YET
MORE
REALISTIC
MODELS
THAT
INCORPORATE
TOPICTOPIC
CORRELATIONS
SUCH
AS
THE
CORRELATED
TOPIC
MODEL
CTM
AND
THE
PACHINKO
ALLOCATION
MODEL
PAM
WE
HOPE
THAT
THIS
PAPER
WILL
MOTIVATE
FURTHER
THEORETICAL
RESULTS
THAT
USE
NMF
AS
A
REPLACEMENT
FOR
SVD
JUST
AS
NMF
HAS
COME
TO
REPLACE
SVD
IN
MANY
APPLICATIONS
I
I
NTRODUCTION
DEVELOPING
TOOLS
FOR
AUTOMATIC
COMPREHENSION
AND
CLASSIFICATION
OF
DATA
WEB
PAGES
NEWSPAPER
ARTICLES
IMAGES
GENETIC
SEQUENCES
USER
RATINGS
IS
A
HOLY
GRAIL
OF
MACHINE
LEARNING
TOPIC
MODELING
IS
AN
APPROACH
THAT
HAS
PROVED
SUCCESSFUL
IN
ALL
OF
THE
AFOREMENTIONED
SETTINGS
THOUGH
FOR
CONCRETENESS
HERE
WE
WILL
FOCUS
ON
UNCOVERING
THEMATIC
STRUCTURE
OF
A
CORPUS
OF
DOCUMENTS
SEE
E
G
IN
ORDER
TO
LEARN
STRUCTURE
ONE
HAS
TO
POSIT
THE
EXISTENCE
OF
STRUCTURE
AND
IN
TOPIC
MODELS
ONE
ASSUMES
A
GENERATIVE
MODEL
FOR
A
COLLECTION
OF
DOCUMENTS
SPECIFICALLY
EACH
DOCUMENT
IS
REPRESENTED
AS
A
VECTOR
OF
WORD
FREQUENCIES
RESEARCH
SUPPORTED
BY
THE
NSF
GRANTS
CCF
AND
CCF
RESEARCH
SUPPORTED
IN
PART
BY
NSF
GRANT
NO
DMS
AND
BY
AN
NSF
COMPUTING
AND
INNOVATION
FELLOWSHIP
IEEE
DOI
FOCS
ANKUR
MOITRA
INSTITUTE
FOR
ADVANCED
STUDY
MOITRA
IAS
EDU
GOAL
RECONSTRUCT
A
AND
PARAMETERS
OF
THE
GENERATING
DISTRIBUTION
FOR
W
THE
CHALLENGING
ASPECT
OF
THIS
PROBLEM
IS
THAT
WE
WISH
TO
RECOVER
NONNEGATIVE
MATRICES
A
W
WITH
SMALL
INNERDIMENSION
R
THE
GENERAL
PROBLEM
OF
FINDING
NONNEGATIVE
FACTORS
A
W
OF
SPECIFIED
DIMENSIONS
WHEN
GIVEN
THE
MATRIX
AW
OR
A
CLOSE
APPROXIMATION
IS
CALLED
THE
NONNEGATIVE
MATRIX
FACTORIZATION
NMF
PROBLEM
SEE
AND
FOR
A
LONGER
HISTORY
AND
IT
IS
NP
HARD
LACKING
A
TOOL
TO
SOLVE
SUCH
PROBLEMS
THEORETICAL
WORK
HAS
GENERALLY
RELIED
ON
THE
SINGULAR
VALUE
DECOMPOSITION
SVD
WHICH
GIVEN
THE
MATRIX
AW
WILL
INSTEAD
FIND
FACTORS
U
V
WITH
BOTH
POSITIVE
AND
NEGATIVE
ENTRIES
SVD
HAS
THE
FEEL
OF
TOOL
CLUSTERING
AND
ITS
APPLICATION
IN
THIS
SETTING
SEEMS
TO
REQUIRE
ASSUMING
THAT
EACH
DOCUMENT
HAS
ONLY
ONE
TOPIC
IN
PAPADIMITRIOU
ET
AL
THIS
IS
CALLED
THE
PURE
DOCUMENTS
CASE
AND
IS
SOLVED
UNDER
STRONG
ADDITIONAL
ASSUMPTIONS
ABOUT
THE
TOPIC
MATRIX
A
SEE
ALSO
AND
THE
RECENT
WORK
OF
ANANDKUMAR
ET
AL
WHICH
COMPLETELY
SOLVES
THIS
CASE
USING
THE
METHOD
OF
MOMENTS
ALTERNATIVELY
OTHER
PAPERS
USE
SVD
TO
RECOVER
THE
SPAN
OF
THE
COLUMNS
OF
A
I
E
THE
TOPIC
VECTORS
WHICH
SUFFICES
FOR
SOME
APPLICATIONS
SUCH
AS
COMPUTING
THE
INNER
PRODUCT
OF
TWO
DOCUMENT
VECTORS
IN
THE
SPACE
SPANNED
BY
THE
TOPICS
AS
A
MEASURE
OF
THEIR
SIMILARITY
THESE
LIMITATIONS
OF
EXISTING
APPROACHES
EITHER
RESTRICTING
TO
ONE
TOPIC
PER
DOCUMENT
OR
ELSE
LEARNING
ONLY
THE
SPAN
OF
THE
TOPICS
INSTEAD
OF
THE
TOPICS
THEMSELVES
ARE
QUITE
SERIOUS
IN
PRACTICE
DOCUMENTS
ARE
MUCH
MORE
FAITHFULLY
DESCRIBED
AS
A
DISTRIBUTION
ON
TOPICS
AND
INDEED
FOR
A
WIDE
RANGE
OF
APPLICATIONS
ONE
NEEDS
THE
ACTUAL
TOPICS
AND
NOT
JUST
THEIR
SPAN
SUCH
AS
WHEN
BROWSING
A
COLLECTION
OF
DOCUMENTS
WITHOUT
A
PARTICULAR
QUERY
PHRASE
IN
MIND
OR
WHEN
TRACKING
HOW
TOPICS
EVOLVE
OVER
TIME
SEE
FOR
A
SURVEY
OF
VARIOUS
APPLICATIONS
HERE
WE
CONSIDER
WHAT
WE
BELIEVE
TO
BE
A
MUCH
WEAKER
ASSUMPTION
SEPARABILITY
INDEED
THIS
PROPERTY
HAS
ALREADY
BEEN
IDENTIFIED
AS
A
NATURAL
ONE
IN
THE
MACHINE
LEARNING
COMMUNITY
AND
HAS
BEEN
EMPIRICALLY
OBSERVED
TO
HOLD
IN
TOPIC
MATRICES
FITTED
TO
VARIOUS
TYPES
OF
DATA
SEPARABILITY
REQUIRES
THAT
EACH
TOPIC
HAS
SOME
NEAR
PERFECT
INDICATOR
WORD
A
WORD
THAT
WE
CALL
THE
ANCHOR
WORD
FOR
THIS
TOPIC
THAT
APPEARS
WITH
REASONABLE
PROBABILITY
IN
THAT
TOPIC
BUT
WITH
NEGLIGIBLE
PROBABILITY
IN
ALL
OTHER
TOPICS
E
G
COULD
BE
AN
ANCHOR
WORD
FOR
THE
TOPIC
PERSONAL
FINANCE
WE
GIVE
A
FORMAL
DEFINITION
IN
SECTION
I
A
THIS
PROPERTY
IS
PARTICULARLY
NATURAL
IN
THE
CONTEXT
OF
TOPIC
MODELING
WHERE
THE
NUMBER
OF
DISTINCT
WORDS
DICTIONARY
SIZE
IS
VERY
LARGE
COMPARED
TO
THE
NUMBER
OF
TOPICS
IN
A
TYPICAL
APPLICATION
IT
IS
COMMON
TO
HAVE
A
DICTIONARY
SIZE
IN
THE
THOUSANDS
OR
TENS
OF
THOUSANDS
BUT
THE
NUMBER
OF
TOPICS
IS
USUALLY
SOMEWHERE
IN
THE
RANGE
FROM
FIFTY
TO
A
HUNDRED
NOTE
THAT
SEPARABILITY
DOES
NOT
MEAN
THAT
AN
ANCHOR
WORD
ALWAYS
OCCURS
IN
FACT
A
TYPICAL
DOCUMENT
MAY
BE
VERY
LIKELY
TO
CONTAIN
NO
ANCHOR
WORDS
INSTEAD
SEPARABILITY
SAYS
THAT
WHEN
AN
ANCHOR
WORD
DOES
OCCUR
THIS
IS
A
STRONG
INDICATOR
THAT
THE
CORRESPONDING
TOPIC
IS
IN
THE
MIXTURE
USED
TO
GENERATE
THE
DOCUMENT
RECENTLY
WE
GAVE
A
POLYNOMIAL
TIME
ALGORITHM
TO
SOLVE
NMF
UNDER
THE
CONDITION
THAT
THE
TOPIC
MATRIX
A
IS
SEPARABLE
THE
INTUITION
THAT
UNDERLIES
THIS
ALGORITHM
IS
THAT
THE
SET
OF
ANCHOR
WORDS
CAN
BE
THOUGHT
OF
AS
EXTREME
POINTS
IN
A
GEOMETRIC
SENSE
OF
THE
DICTIONARY
THIS
CONDITION
CAN
BE
USED
TO
IDENTIFY
ALL
OF
THE
ANCHOR
WORDS
AND
THEN
ALSO
THE
NONNEGATIVE
FACTORS
IDEAS
FROM
THIS
ALGORITHM
ARE
A
KEY
INGREDIENT
IN
OUR
PRESENT
PAPER
BUT
OUR
FOCUS
IS
ON
THE
QUESTION
QUESTION
WHAT
IF
WE
ARE
NOT
GIVEN
THE
TRUE
MATRIX
AW
BUT
ARE
INSTEAD
GIVEN
A
FEW
SAMPLES
SAY
A
HUNDRED
SAMPLES
FROM
THE
DISTRIBUTION
REPRESENTED
BY
EACH
COLUMN
THE
MAIN
TECHNICAL
CHALLENGE
IN
ADAPTING
OUR
EARLIER
NMF
ALGORITHM
IS
THAT
EACH
DOCUMENT
VECTOR
IS
A
VERY
POOR
APPROXIMATION
TO
THE
CORRESPONDING
COLUMN
OF
AW
IT
IS
TOO
NOISY
IN
ANY
REASONABLE
MEASURE
OF
NOISE
NEVERTHELESS
THE
CORE
INSIGHTS
OF
OUR
NMF
ALGORITHM
STILL
APPLY
NOTE
THAT
IT
IS
IMPOSSIBLE
TO
LEARN
THE
MATRIX
W
TO
WITHIN
ARBITRARY
ACCURACY
INDEED
THIS
IS
INFORMATION
THEORETICALLY
IMPOSSIBLE
EVEN
IF
WE
KNEW
THE
TOPIC
MATRIX
A
AS
WELL
AS
THE
DISTRIBUTION
FROM
WHICH
THE
COLUMNS
OF
W
ARE
GENERATED
SO
WE
CANNOT
IN
GENERAL
GIVE
AN
ESTIMATOR
THAT
CONVERGES
TO
THE
TRUE
MATRIX
W
AND
YET
WE
CAN
GIVE
AN
ESTIMATOR
THAT
CONVERGES
TO
THE
TRUE
TOPIC
MATRIX
A
FOR
AN
OVERVIEW
OF
OUR
ALGORITHM
SEE
THE
FIRST
PARAGRAPH
OF
SECTION
III
WE
HOPE
THAT
THIS
APPLICATION
OF
OUR
NMF
ALGORITHM
IS
JUST
A
STARTING
POINT
AND
OTHER
THEORETICAL
RESULTS
CAN
USE
NMF
AS
A
REPLACEMENT
FOR
SVD
JUST
AS
NMF
HAS
COME
TO
REPLACE
SVD
IN
SEVERAL
APPLIED
SETTINGS
IN
ADDITION
THE
GEOMETRIC
PROBLEMS
THAT
UNDERLY
NMF
ARE
NOT
YET
FULLY
UNDERSTOOD
AND
THERE
ARE
MANY
INTERESTING
THEORETICAL
CHALLENGES
THAT
REMAIN
PRACTICAL
ISSUES
THE
ESTIMATES
OF
RUNTIMES
THROUGHOUT
THE
PAPER
ARE
POSSIBLY
TOO
PESSIMISTIC
AS
MENTIONED
IN
THE
CONCLUSIONS
SECTION
SIMPLE
VARIATIONS
OF
THE
ALGORITHMS
IN
THIS
PAPER
RUN
VERY
FAST
MUCH
MORE
SO
THAN
EXISTING
SOFTWARE
FOR
TOPIC
MODELS
A
OUR
RESULTS
HERE
WE
FORMALLY
DEFINE
THE
TOPIC
MODELING
LEARNING
PROBLEM
WHICH
WE
INFORMALLY
INTRODUCED
ABOVE
THERE
IS
AN
UNKNOWN
TOPIC
MATRIX
A
WHICH
IS
OF
DIMENSION
N
R
I
E
N
IS
THE
DICTIONARY
SIZE
AND
EACH
COLUMN
OF
A
IS
A
DISTRIBUTION
ON
N
THERE
IS
AN
UNKNOWN
R
M
MATRIX
W
EACH
OF
WHOSE
COLUMNS
IS
ITSELF
A
DISTRIBUTION
I
E
A
CONVEX
COMBINATION
ON
R
THE
COLUMNS
OF
W
ARE
I
I
D
SAMPLES
FROM
A
DISTRIBUTION
T
WHICH
BELONGS
TO
A
KNOWN
FAMILY
E
G
DIRICHLET
DISTRIBUTIONS
BUT
WHOSE
PARAMETERS
ARE
UNKNOWN
THUS
EACH
COLUMN
OF
AW
BEING
A
CONVEX
COMBINATION
OF
DISTRIBUTIONS
IS
ITSELF
A
DISTRIBUTION
ON
N
AND
THE
ALGORITHM
INPUT
CONSISTS
OF
N
I
I
D
SAMPLES
FOR
EACH
COLUMN
OF
AW
HERE
N
IS
THE
DOCUMENT
SIZE
AND
IS
ASSUMED
TO
BE
A
CONSTANT
FOR
SIMPLICITY
OUR
ALGORITHM
CAN
BE
EASILY
ADAPTED
TO
WORK
WHEN
THE
DOCUMENTS
HAVE
DIFFERENT
SIZES
THE
ALGORITHM
RUNNING
TIME
WILL
NECESSARILY
DEPEND
UPON
VARIOUS
MODEL
PARAMETERS
SINCE
DISTINGUISHING
A
VERY
SMALL
PARAMETER
FROM
ZERO
IMPOSES
A
LOWER
BOUND
ON
THE
NUMBER
OF
SAMPLES
NEEDED
THE
FIRST
SUCH
PARAMETER
IS
A
QUANTITATIVE
VERSION
OF
SEPARABILITY
WHICH
WAS
PRESENTED
ABOVE
AS
A
NATURAL
ASSUMPTION
IN
CONTEXT
OF
TOPIC
MODELING
DIRICHLET
AS
HAPPENS
IN
THE
POPULAR
LATENT
DIRICHLET
ALLOCATION
LDA
MODEL
THIS
IS
DONE
IN
SECTION
IV
A
BY
COMPUTING
A
LOWER
BOUND
ON
THE
Γ
IN
TERMS
OF
THE
PARAMETER
FOR
THE
DIRICHLET
DISTRIBUTION
WHICH
ALLOWS
US
WITH
SOME
OTHER
IDEAS
SEE
SECTION
IV
B
TO
RECOVER
THE
PARAMETERS
OF
T
FROM
THE
CO
VARIANCE
MATRIX
R
T
RECENTLY
THE
BASIC
LDA
MODEL
HAS
BEEN
REFINED
TO
ALLOW
CORRELATION
AMONG
DIFFERENT
TOPICS
WHICH
IS
MORE
REALISTIC
SEE
FOR
EXAMPLE
THE
CORRELATED
TOPIC
MODEL
CTM
AND
THE
PACHINKO
ALLOCATION
MODEL
PAM
PERHAPS
THE
MOST
ATTRACTIVE
ASPECT
OF
OUR
ALGORITHM
IS
THAT
IT
EXTENDS
TO
THESE
MODELS
AS
WELL
WE
CAN
LEARN
THE
TOPIC
MATRIX
EVEN
THOUGH
WE
CANNOT
ALWAYS
IDENTIFY
T
IN
REAL
DATA
THERE
ARE
ALWAYS
TOPICS
THAT
ARE
CLOSELY
CORRELATED
OR
VERY
ANTICORRELATED
AND
WE
BELIEVE
THAT
THIS
EXTRA
GENERALITY
IS
THE
REASON
OUR
ALGORITHM
RETURNS
HIGH
QUALITY
TOPICS
ON
REAL
DATA
COMPARISON
WITH
RELATED
WORKS
I
WE
RELY
CRUCIALLY
ON
SEPARABILITY
BUT
PRIOR
WORKS
ASSUME
A
SINGLE
TOPIC
PER
DOCUMENT
WHICH
CAN
BE
THOUGHT
OF
AS
A
STRONGER
SEPARABILITY
ASSUMPTION
ABOUT
W
INSTEAD
OF
A
II
AFTER
POSTING
A
DRAFT
OF
THIS
PAPER
A
SUBSEQUENT
PAPER
BY
ANANDKUMAR
ET
AL
GAVE
AN
ALGORITHM
TO
RECOVER
PARAMETERS
OF
AN
LDA
MODEL
WITHOUT
REQUIRING
A
TO
BE
SEPARABLE
THESE
RESULTS
ARE
INCOMPARABLE
SINCE
WE
REQUIRE
SEPARABILITY
BUT
CAN
ALLOW
TOPIC
CORRELATIONS
WE
BELIEVE
THAT
ALLOWING
TOPIC
CORRELATIONS
IS
CRUCIAL
WHEN
WORKING
WITH
REAL
DATA
AND
HAVE
FOUND
EMPIRICAL
EVIDENCE
THAT
SUPPORTS
THIS
CONCLUSION
III
WE
REMARK
THAT
SOME
PRIOR
APPROACHES
LEARN
THE
SPAN
OF
A
INSTEAD
OF
A
REQUIRE
LARGE
DOCUMENT
SIZES
ON
THE
ORDER
OF
THE
NUMBER
OF
WORDS
IN
THE
DICTIONARY
BY
CONTRAST
WE
CAN
WORK
WITH
DOCUMENTS
OF
LENGTH
DEFINITION
I
P
SEPARABLE
TOPIC
MATRIX
AN
N
R
MATRIX
A
IS
P
SEPARABLE
IF
FOR
EACH
I
THERE
IS
SOME
ROW
Π
I
OF
A
THAT
HAS
A
SINGLE
NONZERO
ENTRY
WHICH
IS
IN
THE
ITH
COLUMN
AND
IT
IS
AT
LEAST
P
THE
NEXT
PARAMETER
MEASURES
THE
LOWEST
PROBABILITY
WITH
WHICH
A
TOPIC
OCCURS
IN
THE
DISTRIBUTION
THAT
GENERATES
COLUMNS
OF
W
DEFINITION
I
TOPIC
IMBALANCE
THE
TOPIC
IMBALANCE
OF
THE
MODEL
IS
THE
RATIO
BETWEEN
THE
LARGEST
AND
SMALLEST
EXPECTED
ENTRIES
IN
A
COLUMN
OF
W
IN
OTHER
WORDS
A
E
XI
MAXI
J
R
E
X
WHERE
X
RR
IS
A
RANDOM
WEIGHTING
OF
J
TOPICS
CHOSEN
FROM
THE
DISTRIBUTION
FINALLY
WE
REQUIRE
THAT
TOPICS
STAY
IDENTIFIABLE
DESPITE
SAMPLING
INDUCED
NOISE
TO
FORMALIZE
THIS
WE
DEFINE
A
MATRIX
THAT
WILL
BE
IMPORTANT
THROUGHOUT
THIS
PAPER
DEFINITION
I
TOPIC
TOPIC
COVARIANCE
MATRIX
R
T
IF
T
IS
THE
DISTRIBUTION
THAT
GENERATES
THE
COLUMNS
OF
W
THEN
R
T
IS
DEFINED
AS
AN
R
R
MATRIX
WHOSE
I
J
TH
ENTRY
IS
E
XI
XJ
WHERE
XR
IS
A
VECTOR
CHOSEN
FROM
T
II
T
OOLS
FOR
N
OISY
N
ONNEGATIVE
M
ATRIX
FACTORIZATION
LET
Γ
BE
A
LOWER
BOUND
ON
THE
CONDITION
NUMBER
OF
THE
MATRIX
R
T
THIS
IS
DEFINED
IN
SECTION
II
BUT
FOR
A
R
R
MATRIX
IT
IS
WITHIN
A
FACTOR
OF
R
OF
THE
SMALLEST
SINGULAR
VALUE
OUR
ALGORITHM
WILL
WORK
FOR
ANY
Γ
BUT
THE
NUMBER
OF
DOCUMENTS
WE
REQUIRE
WILL
DEPEND
POLYNOMIALLY
ON
Γ
A
VARIOUS
CONDITION
NUMBERS
CENTRAL
TO
OUR
ARGUMENTS
WILL
BE
VARIOUS
NOTIONS
OF
MATRICES
BEING
FAR
FROM
BEING
LOW
RANK
THE
MOST
INTERESTING
ONE
FOR
OUR
PURPOSES
WAS
INTRODUCED
BY
KLEINBERG
AND
SANDLER
IN
THE
CONTEXT
OF
COLLABORATIVE
FILTERING
AND
CAN
BE
THOUGHT
OF
AS
AN
ANALOGUE
TO
THE
SMALLEST
SINGULAR
VALUE
OF
A
MATRIX
THEOREM
I
MAIN
THERE
IS
A
POLYNOMIAL
TIME
ALGORITHM
THAT
LEARNS
THE
PARAMETERS
OF
A
TOPIC
MODEL
IF
THE
NUMBER
OF
DOCUMENTS
IS
AT
LEAST
LOG
N
LOG
R
M
MAX
O
O
Γ
N
DEFINITION
II
CONDITION
NUMBER
IF
A
MATRIX
B
HAS
NONNEGATIVE
ENTRIES
AND
ALL
ROWS
SUM
TO
ONE
THEN
ITS
CONDITION
NUMBER
Γ
B
IS
DEFINED
AS
WHERE
THE
THREE
PARAMETERS
A
P
Γ
ARE
AS
DEFINED
ABOVE
THE
ALGORITHM
LEARNS
THE
TOPIC
TERM
MATRIX
A
UP
TO
ADDITIVE
ERROR
MOREOVER
WHEN
THE
NUMBER
OF
DOCUMENTS
IS
ALSO
LARGER
THE
ALGORITHM
CAN
LEARN
THE
TOPIC
TOPIC
THAN
O
LOG
R
R
COVARIANCE
MATRIX
R
T
UP
TO
ADDITIVE
ERROR
Γ
B
MIN
XB
X
IF
B
DOES
NOT
HAVE
ROW
SUMS
OF
ONE
THEN
Γ
B
IS
EQUAL
TO
Γ
DB
WHERE
D
IS
THE
DIAGONAL
MATRIX
SUCH
THAT
DB
HAS
ROW
SUMS
OF
ONE
AS
NOTED
EARLIER
WE
ARE
ABLE
TO
RECOVER
THE
TOPIC
MATRIX
EVEN
THOUGH
WE
DO
NOT
ALWAYS
RECOVER
THE
PARAMETERS
OF
THE
COLUMN
DISTRIBUTION
T
IN
SOME
SPECIAL
CASES
WE
CAN
ALSO
RECOVER
THE
PARAMETERS
OF
T
E
G
WHEN
THIS
DISTRIBUTION
IS
FOR
EXAMPLE
IF
THE
ROWS
OF
B
HAVE
DISJOINT
SUPPORT
THEN
Γ
B
AND
IN
GENERAL
THE
QUANTITY
Γ
B
CAN
BE
THOUGHT
OF
A
MEASURE
OF
HOW
CLOSE
TWO
DISTRIBUTIONS
ON
DISJOINT
SETS
OF
ROWS
CAN
BE
NOTE
THAT
IF
X
IS
AN
N
DIMENSIONAL
REAL
VECTOR
X
X
N
X
AND
HENCE
IF
ΣMIN
B
IS
THE
SMALLEST
SINGULAR
VALUE
OF
B
WE
HAVE
AGAIN
BY
CLAIM
II
THE
MATRIX
IS
ΓP
ROBUSTLY
SIMPLICIAL
B
NOISY
NMF
UNDER
SEPARABILITY
ΣMIN
B
Γ
B
MΣMIN
B
N
A
KEY
INGREDIENT
IS
AN
APPROXIMATE
NMF
ALGORITHM
FROM
WHICH
CAN
RECOVER
AN
APPROXIMATE
NONNEGATIVE
MATRIX
FACTORIZATION
M
AW
WHEN
THE
DISTANCE
BETWEEN
EACH
ROW
OF
M
AND
THE
CORRESPONDING
ROW
IN
AW
IS
SMALL
WE
EMPHASIZE
THAT
THIS
IS
NOT
ENOUGH
FOR
OUR
PURPOSES
SINCE
THE
TERM
BY
DOCUMENT
MATRIX
M
WILL
HAVE
A
SUBSTANTIAL
AMOUNT
OF
NOISE
WHEN
COMPARED
TO
ITS
EXPECTATION
PRECISELY
BECAUSE
THE
NUMBER
OF
WORDS
IN
A
DOCUMENT
N
IS
MUCH
SMALLER
THAN
THE
DICTIONARY
SIZE
N
RATHER
WE
WILL
APPLY
TO
THE
GRAM
MATRIX
M
M
T
THE
ALGORITHMS
GIVEN
IN
THE
FOLLOWING
THEOREM
AND
ITS
IMPROVEMENT
IN
THE
SUBSEQUENT
THEOREM
THE
ABOVE
NOTIONS
OF
CONDITION
NUMBER
WILL
BE
MOST
RELEVANT
IN
THE
CONTEXT
OF
THE
TOPIC
TOPIC
COVARIANCE
MATRIX
R
T
WE
SHALL
ALWAYS
USE
Γ
TO
DENOTE
THE
CONDITION
NUMBER
OF
R
T
THE
DEFINITION
OF
CONDITION
NUMBER
WILL
BE
PRESERVED
EVEN
WHEN
WE
ESTIMATE
THE
TOPIC
TOPIC
COVARIANCE
MATRIX
USING
RANDOM
SAMPLES
LEMMA
II
WHEN
M
LOG
R
WITH
HIGH
PROBABILITY
THE
MATRIX
R
M
W
W
T
IS
ENTRY
WISE
CLOSE
TO
R
T
WITH
ERROR
FURTHER
WHEN
Γ
WHERE
A
IS
TOPIC
IMBALANCE
THE
MATRIX
R
HAS
CONDITION
NUMBER
AT
LEAST
Γ
THEOREM
II
ROBUST
NMF
ALGORITHM
SUPPOSE
M
AW
WHERE
W
AND
M
ARE
NORMALIZED
TO
HAVE
ROWS
SUM
UP
TO
A
IS
SEPARABLE
AND
W
IS
Γ
ROBUSTLY
SIMPLICIAL
LET
TIME
ALGORITHM
THAT
GIVEN
O
Γ
THERE
IS
A
POLYNOMIAL
M
SUCH
THAT
FOR
ALL
ROWS
M
I
M
I
FINDS
A
W
I
SUCH
THAT
W
W
I
Γ
FURTHER
EVERY
ROW
PROOF
SINCE
E
WI
WIT
R
T
THE
FIRST
PART
OF
THE
LEMMA
FOLLOWS
BY
A
CHERNOFF
BOUND
AND
A
UNION
BOUND
THE
SECOND
PART
FOLLOWS
BECAUSE
R
T
HAS
CONDITION
NUMBER
Γ
AND
FOR
UNIT
VECTOR
V
THE
VECTOR
VR
CAN
CHANGE
BY
AT
MOST
AR
R
IN
NORM
THE
EXTRA
FACTOR
AR
COMES
FROM
THE
NORMALIZATION
OF
ROWS
OF
R
IN
OUR
PREVIOUS
WORK
ON
NONNEGATIVE
MATRIX
FACTORIZATION
WE
DEFINED
A
DIFFERENT
MEASURE
OF
DISTANCE
FROM
SINGULAR
WHICH
IS
ESSENTIAL
TO
THE
POLYNOMIAL
TIME
ALGORITHM
FOR
NMF
W
I
IN
W
IS
A
ROW
IN
M
THE
CORRESPONDING
ROW
IN
M
CAN
BE
REPRESENTED
AS
O
Γ
W
I
O
Γ
W
I
HERE
W
I
IS
A
VECTOR
IN
THE
CONVEX
HULL
OF
OTHER
ROWS
IN
W
WITH
UNIT
LENGTH
IN
NORM
IN
THIS
PAPER
WE
HAVE
AN
INCOMPARABLE
GOAL
THAN
IN
OUR
GOAL
IS
NOT
TO
RECOVER
ESTIMATES
TO
THE
ANCHOR
WORDS
THAT
ARE
CLOSE
IN
NORM
BUT
RATHER
TO
RECOVER
ALMOST
ANCHOR
WORDS
WORD
WHOSE
ROW
IN
A
HAS
ALMOST
ALL
ITS
WEIGHT
ON
A
SINGLE
COORDINATE
HENCE
WE
WILL
BE
ABLE
TO
ACHIEVE
BETTER
BOUNDS
BY
TREATING
THIS
PROBLEM
DIRECTLY
AND
WE
GIVE
A
SUBSTITUTE
FOR
THE
ABOVE
THEOREM
THE
PROOF
OF
THE
THEOREM
CAN
BE
FOUND
IN
THE
FULL
VERSION
DEFINITION
II
Β
ROBUSTLY
SIMPLICIAL
IF
EACH
COLUMN
OF
A
MATRIX
A
HAS
UNIT
NORM
THEN
WE
SAY
IT
IS
Β
ROBUSTLY
SIMPLICIAL
IF
NO
COLUMN
IN
A
HAS
DISTANCE
SMALLER
THAN
Β
TO
THE
CONVEX
HULL
OF
THE
REMAINING
COLUMNS
IN
A
THE
FOLLOWING
CLAIM
CLARIFIES
THE
INTERRELATIONSHIPS
OF
THESE
LATTER
CONDITION
NUMBERS
THEOREM
II
SUPPOSE
M
AW
WHERE
W
AND
M
ARE
NORMALIZED
TO
HAVE
ROWS
SUM
UP
TO
A
IS
SEPARABLE
AND
W
IS
Γ
ROBUSTLY
SIMPLICIAL
WHEN
Γ
THERE
IS
A
POLYNOMIAL
TIME
ALGORITHM
THAT
GIVEN
M
SUCH
THAT
FOR
ALL
ROWS
M
I
M
I
FINDS
R
ROW
ALMOST
ANCHOR
WORDS
IN
M
THE
I
TH
ALMOST
ANCHOR
WORD
CORRESPONDS
TO
A
ROW
IN
M
THAT
CAN
BE
REPRESENTED
AS
O
Γ
W
I
O
Γ
W
I
HERE
W
I
IS
A
VECTOR
IN
THE
CONVEX
HULL
OF
OTHER
ROWS
IN
W
WITH
UNIT
LENGTH
IN
NORM
CLAIM
II
I
IF
A
IS
P
SEPARABLE
THEN
AT
HAS
CONDITION
NUMBER
AT
LEAST
P
II
IF
AT
HAS
ALL
ROW
SUMS
EQUAL
TO
THEN
A
IS
Β
ROBUSTLY
SIMPLICIAL
FOR
Β
Γ
AT
WE
SHALL
SEE
THAT
THE
CONDITION
NUMBER
FOR
PRODUCT
OF
MATRICES
IS
AT
LEAST
THE
PRODUCT
OF
THE
CONDITION
NUMBERS
THE
MAIN
APPLICATION
OF
THIS
COMPOSITION
IS
TO
SHOW
THAT
THE
MATRIX
R
T
AT
OR
THE
EMPIRICAL
VERSION
RAT
IS
AT
LEAST
Ω
ΓP
ROBUSTLY
SIMPLICIAL
THE
FOLLOWING
LEMMA
WILL
PLAY
A
CRUCIAL
ROLE
IN
ANALYZING
OUR
MAIN
ALGORITHM
III
A
LGORITHM
FOR
L
EARNING
A
T
OPIC
M
ODEL
P
ROOF
OF
T
HEOREM
I
LEMMA
II
COMPOSITION
LEMMA
IF
B
AND
C
ARE
MATRICES
WITH
CONDITION
NUMBER
Γ
B
Γ
AND
Γ
C
Β
THEN
Γ
BC
IS
AT
LEAST
ΒΓ
SPECIFICALLY
WHEN
A
IS
P
SEPARABLE
THE
MATRIX
R
T
AT
IS
AT
LEAST
ΓP
ROBUSTLY
SIMPLICIAL
FIRST
IT
IS
IMPORTANT
TO
UNDERSTAND
WHY
SEPARABILITY
HELPS
IN
NONNEGATIVE
MATRIX
FACTORIZATION
AND
THE
EXACT
ROLE
PLAYED
BY
THE
ANCHOR
WORDS
SUPPOSE
THE
NMF
ALGORITHM
IS
GIVEN
A
MATRIX
AB
IF
A
IS
P
SEPARABLE
THEN
THIS
MEANS
THAT
A
CONTAINS
A
DIAGONAL
MATRIX
UP
TO
ROW
PERMUTATIONS
THUS
A
SCALED
COPY
OF
EACH
ROW
OF
B
IS
PRESENT
AS
A
ROW
IN
AB
IN
FACT
IF
WE
KNEW
THE
ANCHOR
WORDS
OF
A
THEN
BY
LOOKING
PROOF
FOR
ANY
VECTOR
X
WE
HAVE
XBC
Γ
C
XB
Γ
C
Γ
B
X
FOR
THE
MATRIX
R
T
AT
BY
CLAIM
II
WE
KNOW
THE
MATRIX
AT
HAS
CONDITION
NUMBER
AT
LEAST
P
HENCE
Γ
R
T
AT
IS
AT
LEAST
ΓP
AND
AT
THE
CORRESPONDING
ROWS
OF
AB
WE
COULD
READ
OFF
THE
CORRESPONDING
ROW
OF
B
UP
TO
SCALING
AND
USE
THESE
IN
TURN
TO
RECOVER
ALL
OF
A
THUS
THE
ANCHOR
WORDS
CONSTITUTE
THE
KEY
THAT
UNLOCKS
THE
FACTORIZATION
AND
INDEED
THE
MAIN
STEP
OF
OUR
EARLIER
NMF
ALGORITHM
WAS
A
GEOMETRIC
PROCEDURE
TO
IDENTIFY
THE
ANCHOR
WORDS
WHEN
ONE
IS
GIVEN
A
NOISY
VERSION
OF
AB
THE
ANALOGOUS
NOTION
IS
ALMOST
ANCHOR
WORDS
WHICH
CORRESPOND
TO
ROWS
OF
AB
THAT
ARE
VERY
CLOSE
TO
ROWS
OF
B
SEE
THEOREM
II
NEXT
WE
SKETCH
HOW
TO
APPLY
THESE
INSIGHTS
TO
LEARNING
TOPIC
MODELS
LET
M
DENOTE
THE
GIVEN
TERM
BY
DOCUMENT
MATRIX
EACH
OF
WHOSE
COLUMNS
DESCRIBES
THE
EMPIRICAL
WORD
FREQUENCIES
IN
THE
DOCUMENTS
IT
IS
OBTAINED
FROM
SAMPLING
AW
AND
THUS
IS
AN
EXTREMELY
NOISY
APPROXIMATION
TO
AW
OUR
ALGORITHM
STARTS
BY
FORMING
THE
GRAM
MATRIX
M
M
T
WHICH
CAN
BE
THOUGHT
OF
AS
AN
EMPIRICAL
WORD
WORD
COVARIANCE
MATRIX
IN
FACT
AS
THE
NUMBER
OF
DOCUMENTS
INCREASES
T
TENDS
TO
A
LIMIT
Q
M
E
AW
W
T
A
IMPLYING
MMM
T
Q
AR
T
A
SEE
LEMMA
III
IMAGINE
THAT
WE
ARE
GIVEN
THE
EXACT
MATRIX
Q
INSTEAD
OF
A
NOISY
APPROXIMATION
NOTICE
THAT
Q
IS
A
PRODUCT
OF
THREE
NONNEGATIVE
MATRICES
THE
FIRST
OF
WHICH
IS
P
SEPARABLE
AND
THE
LAST
IS
THE
TRANSPOSE
OF
THE
FIRST
NMF
AT
FIRST
FLANCE
SEEMS
TOO
WEAK
TO
HELP
FIND
SUCH
FACTORIZATIONS
HOWEVER
IF
WE
THINK
OF
Q
AS
A
PRODUCT
OF
TWO
NONNEGATIVE
MATRICES
A
AND
R
T
AT
THEN
OUR
NMF
ALGORITHM
CAN
AT
LEAST
IDENTIFY
THE
ANCHOR
WORDS
OF
A
AS
NOTED
ABOVE
THESE
SUFFICE
TO
RECOVER
R
T
AT
AND
THEN
USING
THE
ANCHOR
WORDS
OF
A
AGAIN
ALL
OF
A
AS
WELL
SEE
SECTION
III
A
FOR
DETAILS
THE
COMPLICATION
IS
THAT
WE
ARE
NOT
GIVEN
Q
BUT
MERELY
A
GOOD
APPROXIMATION
TO
IT
NOW
OUR
NMF
ALGORITHM
ALLOWS
US
TO
RECOVER
ALMOST
ANCHOR
WORDS
OF
A
AND
THE
CRUX
OF
THE
PROOF
IS
SECTION
III
B
SHOWING
THAT
THESE
SUFFICE
TO
RECOVER
PROVABLY
GOOD
ESTIMATES
TO
A
AND
W
W
T
THIS
USES
MOSTLY
BOUNDS
FROM
MATRIX
PERTURBATION
THEORY
AND
INTERRELATIONSHIPS
OF
CONDITION
NUMBERS
MENTIONED
IN
SECTION
II
FOR
SIMPLICITY
WE
ASSUME
THE
FOLLOWING
CONDITION
ON
THE
TOPIC
MODEL
WHICH
WE
WILL
SEE
IN
SECTION
III
D
CAN
BE
ASSUMED
WITHOUT
LOSS
OF
GENERALITY
THE
NUMBER
OF
WORDS
N
IS
AT
MOST
PLEASE
SEE
ALGORITHM
MAIN
ALGORITHM
FOR
DESCRIPTION
OF
THE
ALGORITHM
NOTE
THAT
R
IS
OUR
SHORTHAND
FOR
M
WWT
WHICH
AS
NOTED
CONVERGES
TO
R
T
AS
THE
NUMBER
OF
DOCUMENTS
INCREASES
PROOF
THE
LEMMA
IS
STRAIGHT
FORWARD
FROM
FIGURE
AND
THE
PROCEDURE
BY
FIGURE
WE
CAN
FIND
THE
EXACT
VALUE
OF
DRAT
AND
DRD
IN
THE
MATRIX
Q
STEP
OF
RECOVER
COMPUTES
DR
BY
COMPUTING
DRAT
THE
TWO
VECTORS
ARE
EQUAL
BECAUSE
A
IS
THE
TOPIC
TERM
MATRIX
AND
ITS
COLUMNS
SUM
UP
TO
IN
PARTICULAR
AT
IN
STEP
SINCE
R
IS
INVERTIBLE
BY
LEMMA
II
D
IS
A
DIAGONAL
MATRIX
WITH
ENTRIES
AT
LEAST
P
THE
MATRIX
DRD
IS
ALSO
INVERTIBLE
THEREFORE
THERE
IS
A
UNIQUE
SOLUTION
Z
DRD
DR
D
ALSO
D
Z
AND
HENCE
DDIAG
Z
I
FINALLY
USING
THE
FACT
THAT
DDIAG
Z
I
THE
OUTPUT
IN
STEP
IS
JUST
DR
DRAT
AT
AND
THE
OUTPUT
IN
STEP
IS
EQUAL
TO
R
A
RECOVER
R
AND
A
WITH
ANCHOR
WORDS
B
RECOVER
R
AND
A
WITH
ALMOST
ANCHOR
WORDS
WE
FIRST
DESCRIBE
HOW
THE
RECOVERY
PROCEDURE
WORKS
IN
AN
IDEALIZED
SETTING
ALGORTHM
R
ECOVER
WITH
T
RUE
A
NCHOR
W
ORDS
WHEN
WE
ARE
GIVEN
THE
EXACT
VALUE
OF
ARAT
AND
A
SET
OF
ANCHOR
WORDS
ONE
FOR
EACH
TOPIC
WE
CAN
PERMUTE
THE
ROWS
OF
A
SO
THAT
THE
ANCHOR
WORDS
ARE
EXACTLY
THE
FIRST
R
WORDS
THEREFORE
AT
D
U
T
WHERE
D
IS
A
DIAGONAL
MATRIX
NOTE
THAT
D
IS
NOT
NECESSARILY
THE
IDENTITY
MATRIX
NOR
EVEN
A
SCALED
COPY
OF
THE
IDENTITY
WHAT
IF
WE
ARE
NOT
GIVEN
THE
EXACT
ANCHOR
WORDS
BUT
ARE
GIVEN
WORDS
THAT
ARE
CLOSE
TO
ANCHOR
WORDS
IN
GENERAL
WE
CANNOT
HOPE
TO
RECOVER
THE
TRUE
ANCHOR
WORDS
BUT
NEVERTHELESS
A
GOOD
APPROXIMATION
TO
THESE
WILL
BE
ENOUGH
TO
RECOVER
R
AND
A
WHEN
WE
RESTRICT
A
TO
THE
ROWS
CORRESPONDING
TO
ALMOST
ANCHOR
WORDS
THE
SUBMATRIX
WILL
NOT
BE
DIAGONAL
HOWEVER
D
D
W
U
WT
U
DRD
DRUT
URD
URUT
R
FIGURE
THE
MATRIX
Q
MATRIX
BUT
WE
DO
KNOW
THAT
THE
DIAGONAL
ENTRIES
ARE
AT
LEAST
P
WE
APPLY
THE
SAME
PERMUTATION
TO
THE
ROWS
AND
COLUMNS
OF
Q
AS
ILLUSTRATED
IN
FIGURE
THE
SUBMATRIX
FORMED
BY
THE
FIRST
R
ROWS
AND
R
COLUMNS
IS
EXACTLY
DRD
SIMILARLY
THE
SUBMATRIX
CONSISTING
OF
THE
FIRST
R
ROWS
IS
EXACTLY
DRAT
WE
CAN
USE
THESE
TWO
MATRICES
TO
COMPUTE
R
AND
A
IN
THIS
IDEALIZED
SETTING
AND
WE
WILL
USE
THE
SAME
BASIC
STRATEGY
IN
THE
GENERAL
CASE
BUT
NEED
ONLY
BE
MORE
CAREFUL
ABOUT
HOW
THE
ERRORS
ACCUMULATE
IN
OUR
ALGORITHM
OUR
ALGORITHM
HAS
EXACT
KNOWLEDGE
OF
THE
MATRICES
DRD
AND
DRAT
AND
SO
THE
MAIN
TASK
IS
TO
RECOVER
THE
DIAGONAL
MATRIX
D
GIVEN
D
WE
CAN
THEN
COMPUTE
A
AND
R
FOR
THE
DIRICHLET
ALLOCATION
WE
CAN
ALSO
COMPUTE
ITS
PARAMETERS
I
E
THE
Α
SO
THAT
R
Α
R
THE
KEY
IDEA
TO
THIS
ALGORITHM
IS
THAT
THE
ROW
SUMS
OF
DR
AND
DRAT
ARE
THE
SAME
AND
WE
CAN
USE
THE
ROW
SUMS
OF
DR
TO
SET
UP
A
SYSTEM
OF
LINEAR
CONSTRAINTS
ON
THE
DIAGONAL
ENTRIES
OF
D
LEMMA
III
WHEN
THE
MATRIX
Q
IS
EXACTLY
EQUAL
TO
ARAT
AND
WE
KNOW
THE
SET
OF
ANCHOR
WORDS
R
ECOVER
WITH
T
RUE
A
NCHOR
W
ORDS
OUTPUTS
A
AND
R
CORRECTLY
ALGORITHM
M
AIN
A
LGORITHM
OUTPUT
R
AND
A
QUERY
THE
ORACLE
FOR
M
DOCUMENTS
WHERE
LOG
R
LOG
R
LOG
N
O
O
M
MAX
O
P
Γ
N
SPLIT
THE
WORDS
OF
EACH
DOCUMENT
INTO
TWO
HALVES
AND
LET
M
M
BE
THE
TERM
BY
DOCUMENT
MATRIX
WITH
FIRST
AND
SECOND
HALF
OF
WORDS
RESPECTIVELY
COMPUTE
WORD
BY
WORD
MATRIX
Q
N
M
M
T
APPLY
THE
ROBUST
NMF
ALGORITHM
OF
THEOREM
II
TO
Q
WHICH
RETURNS
R
WORDS
THAT
ARE
ALMOST
THE
ANCHOR
WORDS
OF
A
USE
THESE
R
WORDS
AS
INPUT
TO
R
ECOVER
WITH
A
LMOST
A
NCHOR
W
ORDS
TO
COMPUTE
R
M
W
W
T
AND
A
ALGORITHM
R
ECOVER
WITH
T
RUE
A
NCHOR
W
ORDS
INPUT
R
ANCHOR
WORDS
OUTPUT
R
AND
A
PERMUTE
THE
ROWS
AND
COLUMNS
OF
Q
SO
THAT
THE
ANCHOR
WORDS
APPEAR
IN
THE
FIRST
R
ROWS
AND
COLUMNS
COMPUTE
DRAT
WHICH
IS
EQUAL
TO
DR
SOLVE
FOR
Z
DRD
Z
DR
OUTPUT
AT
DRDDIAG
Z
DRAT
OUTPUT
R
DIAG
Z
DRDDIAG
Z
BE
THE
LARGEST
ABSOLUTE
VALUE
OF
ANY
ENTRY
OF
B
BMAX
IS
ACHIEVED
WE
MAX
BI
CONSIDER
THE
ENTRY
I
WHERE
BMAX
KNOW
BMAX
BI
ZB
I
J
ZI
J
BJ
BMAX
THUS
BMAX
NOW
ALL
THE
ENTRIES
IN
Z
B
ARE
WITHIN
IN
ABSOLUTE
VALUE
AND
WE
KNOW
THAT
B
Z
B
HENCE
ALL
THE
ENTRIES
OF
B
ARE
IN
THE
RANGE
AS
DESIRED
LEMMA
III
LET
E
I
Z
AND
I
J
ZI
J
THEN
THE
COLUMNS
OF
E
I
HAVE
NORM
AT
MOST
IT
WILL
BE
CLOSE
TO
A
DIAGONAL
IN
THE
SENSE
THAT
THE
SUBMATRIX
WILL
BE
A
DIAGONAL
MATRIX
D
MULTIPLIED
BY
E
WHERE
E
IS
ENTRY
WISE
CLOSE
TO
THE
IDENTITY
MATRIX
AND
THE
DIAGONAL
ENTRIES
OF
D
ARE
AT
LEAST
Ω
P
HERE
WE
ANALYZE
THE
SAME
PROCEDURE
AS
ABOVE
AND
SHOW
THAT
IT
STILL
RECOVERS
A
AND
R
APPROXIMATELY
EVEN
WHEN
GIVEN
ALMOST
ANCHOR
WORDS
INSTEAD
OF
TRUE
ANCHOR
WORDS
FOR
CLARITY
WE
STATE
THE
PROCEDURE
AGAIN
IN
ALGORITHM
R
ECOVER
WITH
A
LMOST
A
NCHOR
W
ORDS
THE
GUARANTEES
AT
EACH
STEP
ARE
DIFFERENT
THAN
BEFORE
BUT
THE
IMPLEMENTATION
OF
THE
PROCEDURE
IS
THE
SAME
NOTICE
THAT
HERE
WE
PERMUTE
THE
ROWS
OF
A
AND
HENCE
THE
ROWS
AND
COLUMNS
OF
Q
SO
THAT
THE
ALMOST
ANCHOR
WORDS
RETURNED
BY
THEOREM
II
APPEAR
FIRST
AND
THE
SUBMATRIX
A
ON
THESE
ROWS
IS
EQUAL
TO
DE
HERE
WE
STILL
ASSUME
THAT
THE
MATRIX
Q
IS
EXACTLY
EQUAL
TO
ARAT
AND
HENCE
THE
FIRST
R
ROWS
OF
Q
FORM
THE
SUBMATRIX
DERAT
AND
THE
FIRST
R
ROWS
AND
COLUMNS
ARE
DERE
T
D
THE
COMPLICATION
HERE
IS
THAT
DIAG
Z
IS
NOT
NECESSARILY
EQUAL
TO
D
SINCE
THE
MATRIX
E
IS
NOT
NECESSARILY
THE
IDENTITY
HOWEVER
WE
CAN
SHOW
THAT
DIAG
Z
IS
CLOSE
TO
D
IF
E
IS
SUITABLY
CLOSE
TO
THE
IDENTITY
MATRIX
I
E
GIVEN
GOOD
ENOUGH
PROXIES
FOR
THE
ANCHOR
WORDS
WE
CAN
BOUND
THE
ERROR
OF
THE
ABOVE
RECOVERY
PROCEDURE
WE
WRITE
E
I
Z
INTUITIVELY
WHEN
Z
HAS
ONLY
SMALL
ENTRIES
E
SHOULD
BEHAVE
LIKE
THE
IDENTITY
MATRIX
IN
PARTICULAR
E
SHOULD
HAVE
ONLY
SMALL
OFF
DIAGONAL
ENTRIES
WE
MAKE
THIS
PRECISE
THROUGH
THE
FOLLOWING
LEMMAS
LEMMA
III
LET
E
I
Z
AND
I
J
ZI
J
THEN
E
IS
A
VECTOR
WITH
ENTRIES
IN
THE
RANGE
PROOF
WITHOUT
LOSS
OF
GENERALITY
WE
CAN
CONSIDER
JUST
THE
FIRST
COLUMN
OF
E
I
WHICH
IS
EQUAL
TO
E
I
E
WHERE
E
IS
THE
INDICATOR
VECTOR
THAT
IS
ONE
ON
THE
FIRST
COORDINATE
AND
ZERO
ELSEWHERE
THE
APPROACH
IS
SIMILAR
TO
THAT
IN
LEMMA
III
LET
B
E
I
E
LEFT
MULTIPLY
BY
E
I
Z
AND
WE
OBTAIN
B
Z
B
Z
E
HENCE
B
Z
B
E
LET
BMAX
BE
THE
LARGEST
ABSOLUTE
VALUE
OF
ENTRIES
OF
B
BMAX
MAX
BI
LET
I
BE
THE
ENTRY
IN
WHICH
BMAX
IS
ACHIEVED
THEN
BMAX
BI
Z
B
I
Z
E
I
BMAX
THEREFORE
BMAX
FURTHER
THE
B
Z
E
Z
B
NOW
WE
ARE
READY
TO
SHOW
THAT
THE
PROCEDURE
R
ECOVER
WITH
A
LMOST
A
NCHOR
W
ORDS
SUCCEEDS
WHEN
GIVEN
ALMOST
ANCHOR
WORDS
LEMMA
III
WHEN
THE
MATRIX
Q
IS
EXACTLY
EQUAL
TO
ARAT
THE
MATRIX
A
RESTRICTED
TO
ALMOST
ANCHOR
WORDS
IS
DE
WHERE
E
I
HAS
NORM
WHEN
VIEWED
AS
A
VECTOR
PROCEDURE
R
ECOVER
WITH
A
LMOST
A
NCHOR
W
ORDS
OUTPUTS
A
SUCH
THAT
EACH
COLUMN
OF
A
HAS
ERROR
AT
MOST
THE
MATRIX
R
HAS
ADDITIVE
ERROR
ZR
WHOSE
NORM
WHEN
VIEWED
AS
A
VECTOR
IS
AT
MOST
PROOF
E
IS
CLEARLY
INVERTIBLE
BECAUSE
THE
SPECTRAL
NORM
OF
Z
IS
AT
MOST
LET
B
E
SINCE
E
I
Z
WE
MULTIPLY
E
ON
BOTH
SIDES
TO
GET
B
Z
B
LET
BMAX
ALGORITHM
R
ECOVER
WITH
A
LMOST
A
NCHOR
W
ORDS
INPUT
R
ALMOST
ANCHOR
WORDS
OUTPUT
R
AND
A
PERMUTE
THE
ROWS
AND
COLUMNS
OF
Q
SO
THAT
THE
ALMOST
ANCHOR
WORDS
APPEAR
IN
THE
FIRST
R
ROWS
AND
COLUMNS
COMPUTE
DERAT
WHICH
IS
EQUAL
TO
DER
SOLVE
FOR
Z
DERE
T
D
Z
DER
OUTPUT
AT
DERE
T
DDIAG
Z
DERAT
OUTPUT
R
DIAG
Z
DERE
T
DDIAG
Z
PROOF
SINCE
Q
IS
EXACTLY
ARAT
OUR
ALGORITHM
IS
GIVEN
DERAT
AND
DERE
T
D
WITH
NO
ERROR
IN
STEP
SINCE
D
E
AND
R
ARE
ALL
INVERTIBLE
WE
HAVE
OF
ORDER
AND
CAN
SAFELY
BE
BOUNDED
BY
FOR
SUITABLY
SMALL
FINALLY
WE
CONSIDER
THE
GENERAL
CASE
IN
WHICH
THERE
IS
ADDITIVE
NOISE
IN
STEP
WE
ARE
NOT
GIVEN
ARAT
EXACTLY
WE
ARE
GIVEN
Q
WHICH
IS
CLOSE
TO
ARAT
BY
LEMMA
III
WE
WILL
BOUND
THE
ACCUMULATION
OF
THIS
LAST
TYPE
OF
ERROR
SUPPOSE
IN
STEP
OF
RECOVER
WE
OBTAIN
DERAT
U
AND
DERE
T
D
V
AND
FURTHERMORE
THE
ENTRIES
OF
U
AND
U
HAVE
ABSOLUTE
VALUE
AT
MOST
AND
THE
MATRIX
V
HAS
NORM
WHEN
VIEWED
AS
A
VECTOR
Z
DERE
T
D
DER
D
E
T
IDEALLY
WE
WOULD
WANT
DIAG
Z
D
AND
INDEED
DDIAG
Z
DIAG
E
T
FROM
LEMMA
III
THE
VECTOR
E
T
HAS
ENTRIES
IN
THE
RANGE
THUS
EACH
ENTRY
OF
DIAG
Z
IS
WITHIN
A
MULTIPLICATIVE
FACTOR
FROM
THE
CORRESPONDING
ENTRY
IN
D
CONSIDER
THE
OUTPUT
IN
STEP
SINCE
D
E
R
ARE
INVERTIBLE
THE
FIRST
OUTPUT
IS
DERE
T
DDIAG
Z
DERAT
DDIAG
Z
E
T
A
T
OUR
GOAL
IS
TO
BOUND
THE
ERROR
OF
THE
COLUMNS
OF
THE
OUTPUT
COMPARED
TO
THE
CORRESPONDING
COLUMNS
OF
A
NOTICE
THAT
IT
IS
SUFFICIENT
TO
SHOW
THAT
THE
J
TH
ROW
OF
DDIAG
Z
E
T
IS
CLOSE
IN
DISTANCE
TO
THE
INDICATOR
VECTOR
E
J
T
THE
MAIN
IDEA
OF
THE
PROOF
IS
TO
WRITE
DERE
T
D
V
AS
DER
E
T
V
D
IN
THIS
WAY
THE
ERROR
V
CAN
BE
TRANSLATED
TO
AN
ERROR
V
ON
E
AND
LEMMA
III
CAN
BE
APPLIED
PROOF
WE
SHALL
FOLLOW
THE
PROOF
OF
LEMMA
III
FIRST
CAN
EXPRESS
THE
ERROR
TERM
V
INSTEAD
AS
V
DER
V
D
THIS
IS
ALWAYS
POSSIBLE
BECAUSE
ALL
OF
D
E
R
ARE
INVERTIBLE
MOREOVER
THE
NORM
OF
V
WHEN
VIEWED
AS
A
VECTOR
IS
AT
MOST
BECAUSE
THIS
NORM
WILL
GROW
BY
A
FACTOR
OF
AT
MOST
P
WHEN
MULTIPLIED
BY
D
A
FACTOR
OF
AT
MOST
WHEN
MULTIPLIED
BY
E
AND
AT
MOST
RA
Γ
R
WHEN
MULTIPLIED
BY
R
THE
BOUND
OF
Γ
R
COMES
FROM
LEMMA
II
WE
LOSE
AN
EXTRA
RA
BECAUSE
R
MAY
NOT
HAVE
ROWS
SUM
UP
TO
HENCE
DERE
T
D
V
DER
E
T
V
D
AND
THE
ADDITIVE
ERROR
FOR
DERE
T
D
CAN
BE
TRANSFORMED
INTO
ERROR
IN
E
AND
WE
WILL
BE
ABLE
TO
APPLY
THE
ANALYSIS
IN
LEMMA
III
SIMILARLY
WE
CAN
EXPRESS
THE
ERROR
TERM
U
AS
U
DERU
ENTRIES
OF
U
HAVE
ABSOLUTE
VALUE
AT
MOST
R
THE
RIGHT
HAND
SIDE
OF
THE
EQUATION
IN
STEP
IS
EQUAL
TO
DER
U
SO
THE
ERROR
IS
AT
MOST
PER
ENTRY
FOLLOWING
THE
PROOF
OF
LEMMA
III
WE
KNOW
DIAG
Z
D
HAS
DIAGONAL
ENTRIES
WITHIN
NOW
WE
CONSIDER
THE
OUTPUT
THE
OUTPUT
FOR
AT
IS
EQUAL
TO
DER
E
T
V
DDIAG
Z
DER
AT
U
WHICH
IS
DDIAG
Z
E
T
V
AT
U
HERE
WE
KNOW
E
T
V
I
HAS
NORM
AT
MOST
O
RA
PER
ROW
DDIAG
Z
IS
A
DIAGONAL
MATRIX
WITH
ENTRIES
IN
O
RA
ENTRIES
OF
U
HAS
ABSOLUTE
VALUE
O
R
FOLLOWING
THE
PROOF
OF
LEMMA
III
THE
FINAL
ENTRY
WISE
ERROR
CLAIM
III
FOR
EACH
J
E
J
T
DDIAG
Z
E
T
E
J
T
PROOF
AGAIN
WITHOUT
LOSS
OF
GENERALITY
WE
CAN
CONSIDER
JUST
THE
FIRST
ROW
FROM
LEMMA
III
E
T
E
T
HAS
DISTANCE
AT
MOST
TO
E
T
DDIAG
Z
HAS
ENTRIES
IN
THE
RANGE
AND
SO
E
T
DDIAG
Z
E
T
E
T
LEMMA
III
IF
ARE
SUFFICIENTLY
SMALL
RECOVER
OUTPUTS
A
SUCH
THAT
EACH
ENTRY
OF
A
HAS
ADDITIVE
ERROR
AT
MOST
O
RA
R
Γ
ALSO
THE
MATRIX
R
HAS
ADDITIVE
ERROR
ZR
WHOSE
NORM
WHEN
VIEWED
AS
A
VECTOR
IS
AT
MOST
O
RA
R
Γ
E
T
DDIAG
Z
E
T
E
T
E
T
E
T
E
T
E
T
THE
LAST
TERM
CAN
BE
BOUNDED
BY
CONSIDER
THE
FIRST
TERM
ON
THE
RIGHT
HAND
SIDE
THE
VECTOR
E
T
DDIAG
Z
E
T
HAS
ONE
NON
ZERO
ENTRY
THE
FIRST
ONE
WHOSE
ABSOLUTE
VALUE
IS
AT
MOST
HENCE
FROM
LEMMA
III
THE
FIRST
TERM
CAN
BE
BOUNDED
BY
AND
THIS
IMPLIES
THE
CLAIM
THE
FIRST
ROW
OF
DDIAG
Z
E
T
AT
IS
Z
T
A
WHERE
Z
IS
A
VECTOR
WITH
NORM
AT
MOST
SO
EVERY
COLUMN
OF
A
IS
RECOVERED
WITH
ERROR
AT
MOST
CONSIDER
THE
SECOND
OUTPUT
OF
THE
ALGORITHM
THE
OUTPUT
IS
DIAG
Z
DERE
T
DDIAG
Z
AND
WE
CAN
WRITE
DIAG
Z
D
I
AND
E
I
THE
LEADING
ERROR
ARE
R
R
AND
HENCE
THE
NORM
OF
THE
LEADING
ERROR
TERM
WHEN
TREATED
AS
A
VECTOR
IS
AT
MOST
AND
OTHER
TERMS
ARE
OF
A
IS
ROUGHLY
THE
SUM
OF
THESE
THREE
ERRORS
AND
IS
BOUNDED
BY
O
RA
R
Γ
NOTICE
THAT
LEMMA
III
GIVES
BOUND
FOR
NORM
OF
ROWS
WHICH
IS
STRONGER
HERE
WE
SWITCHED
TO
ENTRY
WISE
ERROR
BECAUSE
THE
ENTRIES
OF
U
ARE
BOUNDED
WHILE
THE
NORM
OF
U
MIGHT
BE
LARGE
SIMILARLY
THE
OUTPUT
OF
R
IS
EQUAL
TO
DIAG
Z
DERE
T
D
V
DIAG
Z
AGAIN
WE
WRITE
DIAG
Z
D
I
AND
E
I
THE
EXTRA
TERM
DIAG
Z
V
DIAG
Z
IS
SMALL
BECAUSE
THE
ENTRIES
OF
Z
ARE
AT
MOST
TO
P
OTHERWISE
DIAG
Z
D
WON
T
BE
CLOSE
TO
IDENTITY
THE
ERROR
CAN
BE
BOUNDED
BY
O
RA
R
Γ
MULTIVARIATE
PROBABILITY
DISTRIBUTIONS
THE
SUPPORT
OF
THE
DIRICHLET
DISTRIBUTION
IS
THE
UNIT
SIMPLEX
WHOSE
DIMENSION
IS
THE
SAME
AS
THE
DIMENSION
OF
Α
LET
Α
BE
A
R
DIMENSIONAL
VECTOR
THEN
FOR
A
VECTOR
Θ
RR
IN
THE
R
DIMENSIONAL
SIMPLEX
ITS
PROBABILITY
DENSITY
IS
GIVEN
BY
Γ
R
ΑI
R
ΑI
P
R
Θ
Α
R
I
WHERE
Γ
IS
THE
GAMMA
I
ΘI
I
Γ
ΑI
FUNCTION
IN
PARTICULAR
WHEN
ALL
OF
THE
ΑI
ARE
EQUAL
TO
ONE
THE
DIRICHLET
DISTRIBUTION
IS
JUST
THE
UNIFORM
DISTRIBUTION
ON
THE
PROBABILITY
SIMPLEX
THE
EXPECTATION
AND
VARIANCE
OF
ΘI
ARE
EASY
TO
COMPUTE
R
GIVEN
THE
PARAMETERS
Α
WE
DENOTE
Α
I
ΑI
THEN
THE
RATIO
ΑI
SHOULD
BE
INTERPRETED
AS
THE
SIZE
OF
THE
I
TH
VARIABLE
ΘI
AND
CONTROLS
WHETHER
THE
DISTRIBUTION
IS
CONCENTRATED
IN
THE
INTERIOR
WHEN
IS
LARGE
OR
NEAR
THE
BOUNDARY
WHEN
IS
SMALL
THE
FIRST
TWO
MOMENTS
OF
THE
ΑI
DIRICHLET
DISTRIBUTION
ΑI
ΑJ
ARE
E
ΘI
WHEN
I
J
E
ΘI
ΘJ
ΑI
ΑI
WHEN
I
J
SUPPOSE
THE
DIRICHLET
DISTRIBUTION
HAS
MAX
ΑI
MIN
ΑI
A
AND
THE
SUM
OF
PARAMETERS
IS
WE
GIVE
AN
ALGORITHM
THAT
COMPUTES
CLOSE
ESTIMATES
TO
THE
VECTOR
OF
PARAMETERS
Α
GIVEN
A
SUFFICIENTLY
CLOSE
ESTIMATE
TO
THE
CO
VARIANCE
MATRIX
R
T
THEOREM
IV
COMBINING
THIS
WITH
THEOREM
I
WE
OBTAIN
THE
FOLLOWING
COROLLARY
NOW
IN
ORDER
TO
PROVE
OUR
MAIN
THEOREM
WE
JUST
NEED
TO
SHOW
THAT
WHEN
NUMBER
OF
DOCUMENTS
IS
LARGE
ENOUGH
THE
MATRIX
Q
IS
CLOSE
TO
THE
ARAT
AND
PLUG
THE
ERROR
BOUNDS
INTO
LEMMA
III
WE
STATE
THE
CONVERGENCE
OF
Q
BELOW
AND
DEFER
THE
DETAILS
TO
THE
FULL
VERSION
C
ERROR
BOUNDS
FOR
Q
HERE
WE
STATE
THE
ERROR
BOUND
FOR
MATRIX
Q
WHOSE
PROOF
WE
DEFER
TO
THE
FULL
VERSION
LOG
N
N
T
T
LEMMA
III
WHEN
M
WITH
HIGH
PROBABILITY
ALL
AW
W
A
HAVE
ABSOLUTE
VALUE
AT
MOST
ENTRIES
OF
Q
M
Q
FURTHER
THE
NORM
OF
ROWS
OF
Q
ARE
ALSO
Q
CLOSE
TO
THE
NORM
OF
THE
CORRESPONDING
ROW
IN
M
AW
W
T
AT
THEOREM
IV
THERE
IS
AN
ALGORITHM
THAT
LEARNS
THE
TOPIC
MATRIX
A
WITH
HIGH
PROBABILITY
UP
TO
AN
ADDITIVE
ERROR
OF
FROM
AT
MOST
LOG
N
M
MAX
O
N
LOG
R
O
D
REDUCING
DICTIONARY
SIZE
SO
FAR
WE
HAVE
ASSUMED
THAT
THE
NUMBER
OF
DISTINCT
WORDS
IS
NOT
TOO
LARGE
HERE
WE
GIVE
A
SIMPLE
GADGET
TO
DEMONSTRATE
THAT
THIS
IS
TRUE
WITHOUT
LOSS
OF
GENERALITY
LEMMA
III
THE
GENERAL
CASE
CAN
BE
REDUCED
TO
AN
INSTANCE
IN
WHICH
THERE
ARE
AT
MOST
WORDS
ALL
OF
WHICH
WITH
AT
MOST
ONE
EXCEPTION
OCCUR
WITH
PROBABILITY
AT
LEAST
DOCUMENTS
SAMPLED
FROM
THE
LDA
MODEL
AND
RUNS
IN
TIME
POLYNOMIAL
IN
N
M
FURTHERMORE
WE
RECOVER
THE
PARAMETERS
OF
THE
DIRICHLET
DISTRIBUTION
TO
WITHIN
AN
ADDITIVE
THE
PROOF
IS
STRAIGHTFORWARD
AND
THE
IDEA
IS
TO
COLLECT
ALL
WORDS
THAT
OCCUR
INFREQUENTLY
AND
MERGE
ALL
OF
THESE
WORDS
INTO
A
AGGREGATE
WORD
THAT
WE
WILL
CALL
THE
RUNOFF
WORD
WE
DEFER
THE
PROOF
TO
THE
FULL
VERSION
OUR
MAIN
GOAL
IN
THIS
SECTION
IS
TO
BOUND
THE
CONDITION
NUMBER
OF
THE
DIRICHLET
DISTRIBUTION
SEE
SECTION
IV
A
AND
USING
THIS
WE
SHOW
HOW
TO
RECOVER
THE
PARAMETERS
OF
THE
DISTRIBUTION
FROM
ITS
COVARIANCE
MATRIX
SECTION
IV
B
IV
T
HE
D
IRICHLET
UBCASE
HERE
WE
DEMONSTRATE
THAT
THE
PARAMETERS
OF
A
DIRICHLET
DISTRIBUTION
CAN
BE
ROBUSTLY
RECOVERED
FROM
JUST
THE
COVARIANCE
MATRIX
R
T
HENCE
AN
IMMEDIATE
COROLLARY
IS
THAT
OUR
MAIN
LEARNING
ALGORITHM
CAN
RECOVER
BOTH
THE
TOPIC
MATRIX
A
AND
THE
DISTRIBUTION
THAT
GENERATES
COLUMNS
OF
W
IN
A
LATENT
DIRICHLET
ALLOCATION
LDA
MODEL
PROVIDED
THAT
A
IS
SEPARABLE
WE
BELIEVE
THAT
THIS
ALGORITHM
MAY
BE
OF
PRACTICAL
USE
AND
PROVIDES
THE
FIRST
ALTERNATIVE
TO
LOCAL
SEARCH
AND
UNPROVEN
APPROXIMATION
PROCEDURES
FOR
THIS
INFERENCE
PROBLEM
THE
DIRICHLET
DISTRIBUTION
IS
PARAMETRIZED
BY
A
VECTOR
Α
OF
POSITIVE
REALS
AND
IS
A
NATURAL
FAMILY
OF
CONTINUOUS
A
CONDITION
NUMBER
OF
A
DIRICHLET
DISTRIBUTION
THERE
IS
A
WELL
KNOWN
META
PRINCIPLE
THAT
IF
A
MATRIX
W
IS
CHOSEN
BY
PICKING
ITS
COLUMNS
INDEPENDENTLY
FROM
A
FAIRLY
DIFFUSE
DISTRIBUTION
THEN
IT
WILL
BE
FAR
FROM
LOW
RANK
HOWEVER
OUR
ANALYSIS
WILL
REQUIRE
US
TO
PROVE
AN
EXPLICIT
LOWER
BOUND
ON
Γ
R
T
WE
NOW
PROVE
SUCH
A
BOUND
WHEN
THE
COLUMNS
OF
W
ARE
CHOSEN
FROM
A
DIRICHLET
DISTRIBUTION
WITH
PARAMETER
VECTOR
Α
WE
NOTE
THAT
IT
IS
EASY
TO
ESTABLISH
SUCH
BOUNDS
FOR
OTHER
TYPES
OF
DISTRIBUTIONS
AS
WELL
RECALL
THAT
WE
DEFINED
R
T
IN
SECTION
I
AND
HERE
WE
WILL
ABUSE
NOTATION
AND
THROUGHOUT
THIS
SECTION
WE
WILL
DENOTE
BY
R
Α
ALGORITHM
D
IRICHLET
R
INPUT
R
OUTPUT
Α
VECTOR
OF
PARAMETERS
SET
Α
R
LET
I
BE
THE
ROW
WITH
SMALLEST
NORM
LET
U
RI
I
AND
V
ΑI
U
V
SET
U
V
V
OUTPUT
Α
Α
MATRIX
A
THAT
HAS
THE
LARGEST
PROBABILITY
OF
GENERATING
THE
OBSERVED
DOCUMENTS
WHEN
THE
COLUMNS
OF
W
ARE
GENERATED
BY
A
UNIFORM
DIRICHLET
DISTRIBUTION
THE
MATRIX
R
T
WHERE
T
IS
THE
DIRICHLET
DISTRIBUTION
WITH
PARAMETER
Α
R
LET
I
ΑI
THE
MEAN
VARIANCE
AND
CO
VARIANCE
FOR
A
DIRICHLET
DISTRIBUTION
ARE
WELL
KNOWN
FROM
WHICH
WE
Α
ΑJ
WHEN
I
J
AND
OBSERVE
THAT
R
Α
I
J
IS
EQUAL
TO
ΑI
IS
EQUAL
TO
ΑI
ΑI
SURPRISINGLY
THIS
APPEARS
TO
BE
THE
FIRST
PROOF
THAT
COMPUTING
THE
MLE
ESTIMATE
IN
A
TOPIC
MODEL
IS
INDEED
COMPUTATIONALLY
HARD
ALTHOUGH
ITS
HARDNESS
IS
CERTAINLY
TO
BE
EXPECTED
ON
A
RELATED
NOTE
SONTAG
AND
ROY
RECENTLY
PROVED
THAT
GIVEN
THE
TOPIC
MATRIX
AND
A
DOCUMENT
COMPUTING
THE
MAXIMUM
A
POSTERIORI
MAP
ESTIMATE
FOR
THE
DISTRIBUTION
ON
TOPICS
THAT
GENERATED
THIS
DOCUMENT
IS
N
P
HARD
HERE
WE
WILL
ESTABLISH
THAT
TM
MLE
IS
N
P
HARD
VIA
A
REDUCTION
FROM
THE
MIN
BISECTION
PROBLEM
IN
MINBISECTION
THE
INPUT
IS
A
GRAPH
WITH
N
VERTICES
N
IS
AN
EVEN
INTEGER
AND
THE
GOAL
IS
TO
PARTITION
THE
VERTICES
INTO
TWO
EQUAL
SIZED
SETS
OF
N
VERTICES
EACH
SO
AS
TO
MINIMIZE
THE
NUMBER
OF
EDGES
CROSSING
THE
CUT
WHEN
I
J
LEMMA
IV
THE
CONDITION
NUMBER
OF
R
Α
IS
AT
LEAST
PROOF
AS
THE
ENTRIES
R
Α
I
J
IS
ΑI
ΑJ
WHEN
I
J
I
AND
Α
WHEN
I
J
AFTER
NORMALIZATION
R
Α
IS
JUST
THE
MATRIX
D
Α
I
WHERE
IS
OUTER
PRODUCT
AND
I
IS
THE
IDENTITY
MATRIX
LET
X
BE
A
VECTOR
SUCH
THAT
X
AND
D
X
ACHIEVES
THE
MINIMUM
IN
Γ
R
Α
AND
LET
I
I
XI
AND
LET
J
I
BE
THE
COMPLEMENT
WE
CAN
ASSUME
WITHOUT
LOSS
OF
GENERALITY
THAT
I
I
XI
I
J
XI
OTHERWISE
JUST
TAKE
XI
Α
X
THE
FIRST
X
INSTEAD
THE
PRODUCT
D
X
IS
TERM
IS
A
NONNEGATIVE
VECTOR
AND
HENCE
FOR
EACH
I
I
D
X
I
THIS
IMPLIES
THAT
D
X
I
I
XI
THEOREM
V
THERE
IS
A
POLYNOMIAL
TIME
REDUCTION
FROM
MIN
BISECTION
TO
TM
MLE
R
WE
DEFER
THE
PROOF
TO
THE
FULL
VERSION
WE
REMARK
THAT
THE
CANONICAL
SOLUTIONS
IN
OUR
REDUCTION
ARE
ALL
SEPARABLE
AND
HENCE
THIS
REDUCTION
APPLIES
EVEN
WHEN
THE
TOPIC
MATRIX
A
IS
KNOWN
AND
REQUIRED
TO
BE
SEPARABLE
SO
EVEN
IN
THE
CASE
OF
A
SEPARABLE
TOPIC
MATRIX
IT
IS
N
P
HARD
TO
COMPUTE
THE
MLE
YET
HERE
WE
HAVE
GIVEN
AN
EFFICIENT
ESTIMATOR
THAT
CONVERGES
TO
THE
TRUE
SEPARABLE
TOPIC
MATRIX
A
WHEN
THE
DATA
IS
ACTUALLY
GENERATED
ACCORDING
TO
THE
LDA
MODEL
B
RECOVERING
THE
PARAMETERS
OF
A
DIRICHLET
DISTRIBUTION
WHEN
THE
COVARIANCE
MATRIX
R
Α
IS
RECOVERED
WITH
ERROR
R
IN
NORM
WHEN
VIEWED
AS
A
VECTOR
WE
CAN
USE
ALGORITHM
D
IRICHLET
TO
COMPUTE
THE
VECTOR
Α
THEOREM
IV
WHEN
THE
COVARIANCE
MATRIX
R
Α
IS
RECOVERED
WITH
ERROR
R
IN
NORM
WHEN
VIEWED
AS
A
VECTOR
THE
PROCEDURE
D
IRICHLET
R
LEARNS
THE
PARAMETER
OF
THE
DIRICHLET
DISTRIBUTION
WITH
ERROR
AT
MOST
O
AR
R
VI
C
ONCLUSIONS
THOUGH
THE
GOAL
OF
THE
PAPER
IS
DESIGN
OF
AN
ALGORITHM
WITH
THEORETICAL
GUARANTEES
THE
ACTUAL
ALGORITHM
TURNS
OUT
TO
BE
PRACTICAL
A
STRAIGHTFORWARD
IMPLEMENTATION
USING
A
MORE
EFFICIENT
LP
FREE
SUBROUTINE
TO
FIND
ANCHOR
WORDS
BUT
NO
OTHER
TUNING
RUNS
MUCH
FASTER
THAN
STATE
OF
THE
ART
SOFTWARE
FOR
TOPIC
MODELS
AND
GIVES
RESULTS
OF
COMPARABLE
QUALITY
FOR
EXAMPLE
ON
THE
UCI
BAG
OF
WORDS
DATASET
WITH
NEW
YORK
TIMES
ARTICLES
WE
FIT
TOPICS
IN
ONLY
MINUTES
ON
A
DATASET
WITH
ARTICLES
WITH
A
VOCABULARY
OF
SIZE
WHEREAS
MALLET
TAKES
SEVERAL
HOURS
A
DETAILED
STUDY
OF
ITS
PERFORMANCE
IS
UNDERWAY
AND
WILL
BE
REPORTED
SOON
THE
SEPARABILITY
ASSUMPTION
SEEMS
BENIGN
ON
SUCH
DATASETS
IN
FACT
OUR
MACHINE
LEARNING
COLLEAGUES
SUGGEST
THAT
REAL
LIFE
TOPIC
MATRICES
SATISFY
EVEN
STRONGER
SEPARABILITY
ASSUMPTIONS
E
G
THE
PRESENCE
OF
MANY
ANCHOR
WORDS
PER
TOPIC
INSTEAD
OF
A
SINGLE
ONE
LEVERAGING
THIS
PROMISING
SUGGESTION
IS
AN
OPEN
PROBLEM
PROOF
THE
ΑI
ALL
HAVE
ERROR
AT
MOST
R
THE
VALUE
U
IS
R
AND
THE
VALUE
V
IS
ΑI
R
SINCE
V
AR
WE
KNOW
THE
ERROR
FOR
U
V
IS
AT
MOST
R
FINALLY
ΑI
WE
NEED
TO
BOUND
THE
DENOMINATOR
ΑI
SINCE
R
THUS
THE
FINAL
ERROR
IS
AT
MOST
R
V
M
AXIMUM
L
IKELIHOOD
E
STIMATION
IS
H
ARD
HERE
WE
OBSERVE
THAT
COMPUTING
THE
MAXIMUM
LIKELIHOOD
ESTIMATE
MLE
OF
THE
PARAMETERS
OF
A
TOPIC
MODEL
IS
N
P
HARD
WE
CALL
THIS
PROBLEM
THE
TOPIC
MODEL
MAXIMUM
LIKELIHOOOD
ESTIMATION
TM
MLE
PROBLEM
DEFINITION
V
TM
MLE
GIVEN
M
DOCUMENTS
AND
A
TARGET
OF
R
TOPICS
THE
TM
MLE
PROBLEM
ASKS
TO
COMPUTE
THE
TOPIC
COMPUTER
SCIENCE
DIVISION
UC
BERKELEY
BERKELEY
CA
SANJAMG
BERKELEY
EDU
THIS
AUTHOR
WAS
AT
UCLA
WHEN
THIS
WORK
WAS
DONE
AND
WAS
SUPPORTED
IN
PART
FROM
NSF
GRANTS
AND
A
XEROX
FACULTY
RESEARCH
AWARD
A
GOOGLE
FACULTY
RESEARCH
AWARD
AN
EQUIPMENT
GRANT
FROM
INTEL
AND
AN
OKAWA
FOUNDATION
RESEARCH
GRANT
IBM
RESEARCH
HAWTHORNE
NY
CRAIGBGENTRY
GMAIL
COM
SHAIH
ALUM
MIT
EDU
THESE
AUTHORS
WERE
SUPPORTED
BY
THE
INTELLIGENCE
ADVANCED
RESEARCH
PROJECTS
ACTIVITY
IARPA
VIA
DEPARTMENT
OF
INTERIOR
NATIONAL
BUSINESS
CENTER
DOI
NBC
CONTRACT
NUMBER
THE
U
GOVERNMENT
IS
AUTHORIZED
TO
REPRODUCE
AND
DISTRIBUTE
REPRINTS
FOR
GOVERNMENTAL
PURPOSES
NOTWITHSTANDING
ANY
COPYRIGHT
ANNOTATION
THEREON
DEPARTMENT
OF
COMPUTER
SCIENCE
YALE
UNIVERSITY
NEW
HAVEN
CT
MARIANA
CS
COLUMBIA
EDU
THIS
AUTHOR
WAS
AT
IBM
RESEARCH
WHEN
THIS
WORK
WAS
DONE
SHE
WAS
SUPPORTED
IN
PART
FROM
NSF
GRANTS
DEPARTMENT
OF
COMPUTER
SCIENCE
UCLA
LOS
ANGELES
CA
SAHAI
CS
UCLA
EDU
THIS
AUTHOR
WAS
SUPPORTED
IN
PART
FROM
A
DARPA
ARL
SAFEWARE
AWARD
NSF
FRONTIER
AWARD
NSF
GRANTS
AND
A
XEROX
FACULTY
RESEARCH
AWARD
A
GOOGLE
FACULTY
RESEARCH
AWARD
AN
EQUIPMENT
GRANT
FROM
INTEL
AND
AN
OKAWA
FOUNDATION
RESEARCH
GRANT
THIS
MATERIAL
IS
BASED
UPON
WORK
SUPPORTED
BY
THE
DEFENSE
ADVANCED
RESEARCH
PROJECTS
AGENCY
THROUGH
THE
ARL
UNDER
CONTRACT
C
UNIVERSITY
OF
TEXAS
AT
AUSTIN
AUSTIN
TX
BWATERS
CS
UTEXAS
EDU
THIS
AUTHOR
IS
SUPPORTED
BY
NSF
CNS
AND
CNS
CNS
DARPA
GOOGLE
FACULTY
RESEARCH
AWARD
THE
ALFRED
P
SLOAN
FELLOWSHIP
MICROSOFT
FACULTY
FELLOWSHIP
AND
PACKARD
FOUNDATION
FELLOWSHIP
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
INTRODUCTION
IN
THIS
WORK
WE
STUDY
TWO
LONG
STANDING
OPEN
FEASIBILITY
QUESTIONS
IN
CRYPTOGRAPHY
SECURE
PROGRAM
OBFUSCATION
AND
FUNCTIONAL
ENCRYPTION
OBFUSCATION
ROUGHLY
SPEAKING
PROGRAM
OBFUSCATION
AIMS
TO
MAKE
A
COMPUTER
PROGRAM
UNINTELLIGIBLE
WHILE
PRESERVING
ITS
FUNCTIONALITY
THE
FORMAL
STUDY
OF
PROGRAM
OBFUSCATION
WAS
INITIATED
BY
HADA
AND
BARAK
ET
AL
BGI
BGI
HADA
OBSERVED
THAT
A
SUPER
STRONG
NOTION
OF
OBFUSCATION
REQUIRING
THAT
THE
OBFUSCATED
CODE
DOES
NOT
LEAK
ANYTHING
BEYOND
WHAT
CAN
BE
LEARNED
GIVEN
BLACK
BOX
ORACLE
ACCESS
TO
THE
UNDERLYING
FUNCTION
CANNOT
BE
MET
UNLESS
THE
OBFUSCATED
FUNCTION
IS
LEARNABLE
BARAK
ET
AL
DEFINED
A
SLIGHTLY
WEAKER
BUT
STILL
VERY
STRONG
NOTION
OF
VIRTUAL
BLACK
BOX
VBB
OBFUSCATION
ROUGHLY
REQUIRING
THAT
THE
OBFUSCATED
CIRCUIT
DOES
NOT
LEAK
ANY
PREDICATE
OF
THE
OBFUSCATED
FUNCTION
BEYOND
WHAT
CAN
BE
LEARNED
GIVEN
BLACK
BOX
ORACLE
ACCESS
TO
THAT
FUNCTION
UNFORTUNATELY
THEY
SHOWED
THAT
THIS
NOTION
TOO
IS
IMPOSSIBLE
TO
ACHIEVE
FOR
GENERAL
PROGRAMS
IN
A
VERY
STRONG
SENSE
THEY
SHOWED
THAT
THERE
EXIST
UNOBFUSCATABLE
FUNCTIONS
A
FAMILY
OF
FUNCTIONS
FS
SUCH
THAT
GIVEN
ANY
CIRCUIT
THAT
IMPLEMENTS
FS
AN
EFFICIENT
PROCEDURE
CAN
EXTRACT
THE
SECRET
HOWEVER
ANY
EFFICIENT
ADVERSARY
GIVEN
ONLY
BLACK
BOX
ACCESS
TO
FS
CANNOT
GUESS
EVEN
A
SINGLE
BIT
OF
WITH
NONNEGLIGIBLE
ADVANTAGE
INDEED
UNDER
WIDELY
BELIEVED
INTRACTABILITY
ASSUMPTIONS
SUCH
UNOBFUSCATABLE
FUNCTION
FAMILIES
EXIST
WITH
VERY
LOW
CIRCUIT
COMPLEXITY
I
E
IN
SO
ONE
CANNOT
HOPE
FOR
GENERAL
PURPOSE
OBFUSCATORS
ACHIEVING
A
NATURAL
SIMULATION
BASED
DEFINITION
OF
OBFUSCATION
EVEN
FOR
VERY
LOW
COMPLEXITY
CLASSES
FACED
WITH
THIS
IMPOSSIBILITY
RESULT
BARAK
ET
AL
BGI
BGI
SUGGESTED
ANOTHER
NOTION
OF
PROGRAM
OBFUSCATION
CALLED
INDISTINGUISHABILITY
OBFUSCATION
AN
INDISTINGUISHABILITY
OBFUSCATOR
IO
FOR
A
CLASS
OF
CIRCUITS
C
GUARANTEES
THAT
GIVEN
TWO
EQUIVALENT
CIRCUITS
AND
FROM
THE
CLASS
SUCH
THAT
THE
TWO
DISTRIBUTION
OF
OBFUSCATIONS
IO
AND
IO
SHOULD
BE
COMPUTATIONALLY
INDISTINGUISHABLE
WE
NOTE
THAT
IF
THE
CIRCUIT
CLASS
C
HAS
EFFICIENTLY
COMPUTABLE
CANONICAL
FORMS
SPECIFICALLY
A
FORM
THAT
CAN
BE
EFFICIENTLY
OBTAINED
GIVEN
ANY
IMPLEMENTATION
OF
THAT
CIRCUIT
THEN
THE
COMPUTATION
OF
THAT
CANONICAL
FORM
WOULD
ALREADY
BE
AN
INDISTINGUISHABILITY
OBFUSCATOR
BGI
SINCE
THEIR
INTRODUCTION
IN
IT
HAS
BEEN
AN
OPEN
PROBLEM
TO
CONSTRUCT
INDISTINGUISHABILITY
OBFUSCATORS
FOR
ANY
NATURAL
CIRCUIT
CLASS
THAT
IS
NOT
KNOWN
TO
ADMIT
EFFICIENTLY
COMPUTABLE
CANONICAL
FORMS
IN
PARTICULAR
THE
CENTRAL
OPEN
QUESTION
REGARDING
INDISTINGUISHABILITY
OBFUSCATION
HAS
BEEN
THE
FOLLOWING
DO
THERE
EXIST
INDISTINGUISHABILITY
OBFUSCATORS
FOR
ALL
POLYNOMIAL
SIZE
CIRCUITS
IT
IS
IMPORTANT
TO
NOTE
THAT
UNLIKE
SIMULATION
BASED
DEFINITIONS
OF
OBFUSCATION
IT
IS
NOT
IMMEDIATELY
CLEAR
HOW
USEFUL
INDISTINGUISHABILITY
OBFUSCATORS
WOULD
BE
PERHAPS
THE
STRONGEST
PHILOSOPHICAL
JUSTIFICATION
FOR
INDISTINGUISHABILITY
OBFUSCATORS
COMES
FROM
THE
WORK
OF
GOLDWASSER
AND
ROTHBLUM
WHO
SHOWED
THAT
EFFICIENTLY
COMPUTABLE
INDISTINGUISHABILITY
OBFUSCATORS
ACHIEVE
THE
NOTION
OF
BEST
POSSIBLE
OBFUSCATION
INFORMALLY
A
BEST
POSSIBLE
OBFUSCATOR
GUARANTEES
THAT
ITS
OUTPUT
HIDES
AS
MUCH
ABOUT
THE
INPUT
CIRCUIT
AS
ANY
OTHER
IMPLEMENTATION
OF
THE
SAME
CIRCUIT
OF
A
CERTAIN
SIZE
NEVERTHELESS
VERY
FEW
APPLICATIONS
OF
INDISTINGUISHABILITY
OBFUSCATORS
WERE
DESCRIBED
IN
THE
LITERATURE
IN
FACT
THE
ONLY
APPLICATION
THAT
WE
ARE
AWARE
OF
IS
TO
REMOVING
SOFTWARE
WATERMARKS
BGI
THE
MAIN
CONTRIBUTIONS
OF
THIS
WORK
ARE
TO
CONSTRUCT
INDISTINGUISHABILITY
OBFUSCATORS
FOR
ALL
CIRCUITS
AND
SHOW
HOW
TO
USE
INDISTINGUISHABILITY
OBFUSCATORS
TO
SOLVE
THE
CENTRAL
OPEN
PROBLEM
IN
THE
AREA
OF
FUNCTIONAL
ENCRYPTION
FUNCTIONAL
ENCRYPTION
IN
FUNCTIONAL
ENCRYPTION
CIPHERTEXTS
ENCRYPT
INPUTS
X
AND
KEYS
ARE
ISSUED
FOR
STRINGS
Y
THE
STRIKING
FEATURE
OF
THIS
SYSTEM
IS
THAT
USING
THE
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
KEY
SKY
TO
DECRYPT
A
CIPHERTEXT
CTX
ENC
X
YIELDS
THE
VALUE
F
X
Y
BUT
DOES
NOT
REVEAL
ANYTHING
ELSE
ABOUT
X
WHERE
F
IS
SOME
PUBLIC
UNIVERSAL
CIRCUIT
FIXED
IN
ADVANCE
FURTHERMORE
ANY
ARBITRARY
COLLUSION
OF
KEY
HOLDERS
RELATIVE
TO
MANY
STRINGS
YI
DOES
NOT
YIELD
ANY
MORE
INFORMATION
ABOUT
X
BEYOND
WHAT
IS
NATURALLY
REVEALED
BY
THE
FUNCTIONALITY
I
E
F
X
YI
FOR
ALL
I
BOTH
SIMULATION
BASED
AND
INDISTINGUISHABILITYBASED
DEFINITIONS
OF
FE
HAVE
BEEN
CONSIDERED
IN
THE
LITERATURE
HERE
WE
WILL
RESTRICT
THE
DISCUSSION
TO
INDISTINGUISHABILITY
BASED
DEFINITION
AND
ELABORATE
ON
THIS
IN
SECTION
FUNCTIONAL
ENCRYPTION
STARTED
WITH
THE
NOTION
OF
ATTRIBUTE
BASED
ENCRYPTION
ABE
AND
EVOLVED
OVER
TIME
THE
TERM
FUNCTIONAL
ENCRYPTION
FIRST
APPEARED
IN
AND
FORMAL
DEFINITIONS
AND
CONSTRUCTIONS
WERE
SUBSEQUENTLY
GIVEN
IN
O
EARLIER
INFLUENCES
INCLUDE
IDENTITY
BASED
ENCRYPTION
AND
SEARCHING
ON
ENCRYPTED
DATA
THE
GENERAL
NOTION
OF
FUNCTIONAL
ENCRYPTION
IS
STRONGER
THAN
ABE
IN
ABE
ENCRYPTED
MESSAGES
CONSIST
OF
A
SECRET
PAYLOAD
M
AND
A
PUBLIC
ATTRIBUTE
STRING
X
WHERE
THE
SECRET
KEY
SKY
PERMITS
THE
RECOVERY
OF
THE
PAYLOAD
M
IF
AND
ONLY
IF
F
X
Y
WHILE
BOTH
ABE
AND
FE
REQUIRE
FULL
COLLUSION
RESILIENCE
THE
CRITICAL
DIFFERENCE
BETWEEN
ABE
AND
GENERAL
FE
IS
THAT
ABE
DOES
NOT
ENSURE
THE
SECRECY
OF
THE
ATTRIBUTE
STRING
X
RECENT
BREAKTHROUGH
WORKS
GGH
SHOW
HOW
TO
ACHIEVE
ABE
FOR
ARBITRARY
CIRCUITS
F
BUT
THESE
CONSTRUCTIONS
DO
NOT
PROVIDE
ANY
SECRECY
FOR
THE
X
INPUT
IN
CONTRAST
TO
ABE
EXISTING
FE
SCHEMES
PRIOR
TO
THE
CURRENT
WORK
ARE
MUCH
MORE
LIMITED
IN
POWER
WITH
THE
STATE
OF
THE
ART
ROUGHLY
LIMITED
TO
THE
INNER
PRODUCT
CONSTRUCTION
OF
KATZ
SAHAI
AND
WATERS
AND
ITS
ADAPTATION
TO
LATTICE
BASED
CRYPTOGRAPHY
BY
AGRAWAL
MANDELL
FREEMAN
AND
VAIKUNTANATHAN
IN
THESE
SYSTEMS
CIPHERTEXTS
AND
KEYS
ARE
ASSOCIATED
WITH
VECTORS
X
Y
AND
ON
DECRYPTION
WE
ONLY
LEARN
IF
THE
DOT
PRODUCT
X
Y
IS
ZERO
WHILE
THERE
ARE
INTERESTING
APPLICATIONS
OF
THIS
BASIC
FUNCTIONALITY
IT
IS
A
FAR
CRY
FROM
THE
GOAL
OF
REALIZING
FUNCTIONAL
ENCRYPTION
FOR
GENERAL
FUNCTIONS
OR
EVEN
A
LARGE
GENERAL
CLASS
OF
CIRCUITS
A
SEPARATE
LINE
OF
INTERESTING
WORKS
HAS
REALIZED
CONSTRUCTIONS
THAT
ACHIEVE
ONLY
LIMITED
COLLUSION
NOTIONS
OF
SECURITY
AND
ALSO
SEVERAL
IMPOSSIBILITY
RESULTS
FOR
STRONG
SIMULATION
BASED
SECURITY
NOTIONS
WE
DISCUSS
THESE
IN
SECTION
BELOW
THE
CENTRAL
OPEN
QUESTION
REGARDING
FUNCTIONAL
ENCRYPTION
HAS
BEEN
THE
FOLLOWING
DOES
THERE
EXIST
A
FUNCTIONAL
ENCRYPTION
SCHEME
SUPPORTING
ALL
POLYNOMIAL
SIZE
CIRCUITS
OUR
RESULTS
OUR
FIRST
RESULT
IS
A
CANDIDATE
CONSTRUCTION
OF
AN
INDISTINGUISHABILITY
OBFUSCATOR
IO
FOR
ALL
POLYNOMIAL
SIZE
LOG
DEPTH
CIRCUITS
I
E
THE
SECURITY
OF
OUR
CONSTRUCTION
RELIES
ON
A
NEW
ALGEBRAIC
HARDNESS
ASSUMPTION
WE
PROVIDE
EVIDENCE
FOR
THE
PLAUSIBILITY
OF
OUR
ASSUMPTION
BY
PROVING
IT
TO
BE
TRUE
IN
A
SPECIFIC
GENERIC
MODEL
THAT
SEEMS
TO
CAPTURE
MOST
NATURAL
ATTACKS
ON
THIS
TYPE
OF
CONSTRUCTION
OUR
CONSTRUCTION
AND
ASSUMPTION
ARE
STAGED
IN
A
FRAMEWORK
THAT
WE
CALL
MULTILINEAR
JIGSAW
PUZZLES
MULTILINEAR
JIGSAW
PUZZLES
ARE
A
SIMPLIFIED
VARIANT
OF
MULTILINEAR
MAPS
IN
WHICH
ONLY
THE
PARTY
WHO
GENERATED
THE
SYSTEM
PARAMETERS
CAN
ENCODE
ELEMENTS
IN
THE
EXPONENT
OF
THE
DIFFERENT
GROUPS
THESE
MULTILINEAR
JIGSAW
PUZZLES
CAN
BE
CONSTRUCTED
BY
ELIMINATING
SOME
COMPONENTS
FROM
THE
GGH
ASYMMETRIC
APPROXIMATE
MULTILINEAR
MAPS
MOST
NOTABLY
WE
ELIMINATE
THE
ELEMENTS
OF
THE
GGH
SETUP
THAT
GIVE
RISE
TO
THE
MOST
POTENT
CRYPTANALYTIC
ATTACKS
INCLUDING
THE
WEAK
DISCRETE
LOG
ATTACK
THIS
IS
ESSENTIAL
FOR
THE
SECURITY
OF
OUR
CONSTRUCTION
WE
CAN
ALSO
INSTANTIATE
MULTILINEAR
JIGSAW
PUZZLES
BY
ELIMINATING
SOME
PARTS
FROM
THE
RECENT
WORK
OF
OVER
THE
INTEGERS
WE
NOTE
THAT
MULTILIN
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
EAR
JIGSAW
PUZZLES
ARE
JUST
A
SIMPLIFYING
FRAMEWORK
FOR
PRESENTING
OUR
CONSTRUCTION
AND
ESSENTIALLY
THE
SAME
AS
PREVIOUS
MULTILINEAR
MAPS
CONSTRUCTIONS
AFTER
CONSTRUCTING
INDISTINGUISHABILITY
OBFUSCATORS
FOR
FROM
MULTILINEAR
JIGSAW
PUZZLES
WE
USE
THESE
INDISTINGUISHABILITY
OBFUSCATORS
IN
A
BLACK
BOX
MANNER
TO
OBTAIN
THE
FOLLOWING
RESULTS
USING
INDISTINGUISHABILITY
OBFUSCATOR
FOR
TOGETHER
WITH
ANY
LEVELED
FULLY
HOMOMORPHIC
ENCRYPTION
FHE
SCHEME
WITH
DECRYPTION
IN
E
G
WE
SHOW
HOW
TO
OBTAIN
AN
INDISTINGUISHABILITY
OBFUSCATOR
FOR
ALL
POLYNOMIAL
SIZE
CIRCUITS
THE
ESSENTIAL
NEW
IDEA
HERE
IS
TO
USE
A
TWO
KEY
ENCRYPTION
TECHNIQUE
SIMILAR
IN
SPIRIT
TO
NAOR
YUNG
USING
INDISTINGUISHABILITY
OBFUSCATOR
FOR
POLYNOMIAL
SIZE
CIRCUITS
TOGETHER
WITH
INJECTIVE
ONE
WAY
FUNCTIONS
PUBLIC
KEY
ENCRYPTION
AND
A
NOVEL
VARIANT
OF
SAHAI
SIMULATION
SOUND
NONINTERACTIVE
ZERO
KNOWLEDGE
PROOFS
WE
SHOW
HOW
TO
OBTAIN
FUNCTIONAL
ENCRYPTION
SCHEMES
SUPPORTING
ALL
POLYNOMIALSIZE
CIRCUITS
OUR
CONSTRUCTION
ACHIEVES
SELECTIVE
INDISTINGUISHABILITY
SECURITY
WHICH
CAN
BE
AMPLIFIED
TO
FULL
INDISTINGUISHABILITY
SECURITY
USING
COMPLEXITY
LEVERAGING
FINALLY
USING
THE
RECENT
TRANSFORMATION
OF
DE
CARO
ET
AL
CIJ
ONE
CAN
OBTAIN
MEANINGFUL
SIMULATION
BASED
SECURITY
FOR
FUNCTIONAL
ENCRYPTION
FOR
ALL
CIRCUITS
OUR
CONSTRUCTION
FURTHERMORE
ACHIEVES
SUCCINCT
CIPHERTEXTS
THE
SIZE
OF
THE
CIPHERTEXTS
IN
OUR
SCHEME
DOES
NOT
DEPEND
ON
POTENTIAL
SECRET
KEY
CIRCUIT
SIZES
OR
EVEN
ITS
DEPTH
NOR
DO
THEY
DEPEND
ON
THE
PARAMETER
SIZES
NEEDED
FOR
MULTILINEAR
JIGSAW
PUZZLES
WE
EMPHASIZE
THAT
THESE
RESULTS
USE
OUR
INDISTINGUISHABILITY
OBFUSCATOR
FOR
AS
A
BLACK
BOX
AND
DO
NOT
NEED
TO
MAKE
FURTHER
USE
OF
MULTILINEAR
JIGSAW
PUZZLES
WE
ARE
ABLE
TO
OBTAIN
THESE
RESULTS
THROUGH
A
NOVEL
USE
OF
INDISTINGUISHABILITY
OBFUSCATORS
BY
MAKING
AN
INTUITIVE
CONNECTION
BETWEEN
THE
USE
OF
INDISTINGUISHABILITY
OBFUSCATION
AND
WITNESS
INDISTINGUISHABLE
PROOFS
THERE
IS
MORE
ON
THIS
BELOW
MULTILINEAR
JIGSAW
PUZZLES
FOR
OUR
CONSTRUCTION
WE
USE
A
VARIANT
OF
MULTILINEAR
MAPS
THAT
OFFERS
ONLY
A
STRICT
SUBSET
OF
THE
FUNCTIONALITY
AND
WE
TERM
THIS
VARIANT
MULTILINEAR
JIGSAW
PUZZLES
THESE
ARE
SIMILAR
TO
THE
ASYMMETRIC
VERSION
OF
THE
GGH
MULTILINEAR
ENCODING
SCHEMES
EXCEPT
THAT
IN
OUR
SETTING
ONLY
THE
PARTY
THAT
GENERATED
THE
SYSTEM
PARAMETERS
IS
ABLE
TO
ENCODE
ELEMENTS
BELOW
IS
AN
INTUITIVE
DESCRIPTION
OF
MULTILINEAR
JIGSAW
PUZZLES
USING
MULTIPLICATIVE
NOTATION
FOR
GROUPS
A
MORE
FORMAL
TREATMENT
CAN
BE
FOUND
IN
SECTION
ALTHOUGH
TECHNICALLY
INACCURATE
IT
IS
USEFUL
TO
THINK
OF
AN
INSTANCE
OF
A
MULTILINEAR
JIGSAW
PUZZLE
SCHEME
AS
INCLUDING
A
MULTILINEAR
MAP
SYSTEM
OVER
GROUPS
OF
PRIME
ORDER
P
E
GK
GT
THE
SYSTEM
PARAMETERS
ALLOWS
A
USER
TO
PERFORM
GROUP
AND
MULTILINEAR
OPERATIONS
BUT
THE
PARAMETERS
NEED
NOT
INCLUDE
CANONICAL
GENERATORS
FOR
THE
DIFFERENT
GROUPS
GI
GI
AND
GT
GT
A
VALID
MULTILINEAR
FORM
OVER
SUCH
SYSTEM
IS
ANYTHING
THAT
CAN
BE
COMPUTED
USING
THE
GROUP
OPERATION
IN
THE
SEPARATE
GROUPS
AND
THE
MULTILINEAR
MAP
FOR
EXAMPLE
FOR
K
WITH
VARIABLES
XI
YI
ZI
AND
WI
GT
THE
EXPRESSION
E
E
IS
A
VALID
FORM
IN
THE
MULTILINEAR
JIGSAW
PUZZLE
WE
VIEW
GROUP
ELEMENTS
AS
THE
PUZZLE
PIECES
THE
INTUITIVE
ANALOGY
TO
JIGSAW
PUZZLES
IS
THAT
THESE
GROUP
ELEMENTS
CAN
ONLY
BE
COMBINED
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
IN
VERY
STRUCTURED
WAYS
LIKE
JIGSAW
PUZZLE
PIECES
DIFFERENT
PUZZLE
PIECES
EITHER
FIT
TOGETHER
OR
IF
THEY
DO
NOT
FIT
THEN
THEY
CANNOT
BE
COMBINED
IN
ANY
MEANINGFUL
WAY
WE
VIEW
A
VALID
MULTILINEAR
FORM
IN
THESE
ELEMENTS
AS
A
SUGGESTED
SOLUTION
TO
THIS
JIGSAW
PUZZLE
A
VALID
MULTILINEAR
FORM
SUGGESTS
WAYS
TO
INTERLOCK
THE
PIECES
TOGETHER
A
SOLUTION
IS
CORRECT
IF
EVALUATING
THE
MULTILINEAR
FORM
ON
THE
GIVEN
ELEMENTS
YIELDS
THE
UNIT
IN
THE
TARGET
GROUP
GT
THUS
A
MULTILINEAR
JIGSAW
PUZZLE
SCHEME
CONSISTS
OF
JUST
TWO
ALGORITHMS
THE
JIGSAW
GENERATOR
THAT
GENERATES
THE
SYSTEM
PARAMETERS
AND
SOME
GROUP
ELEMENTS
AND
THE
JIGSAW
VERIFIER
THAT
CHECKS
WHETHER
A
GIVEN
SOLUTION
IS
CORRECT
FOR
THESE
ELEMENTS
IN
MORE
DETAIL
THE
JIGSAW
GENERATOR
OUTPUTS
SOME
SYSTEM
PARAMETERS
PRMS
AND
K
I
I
NONEMPTY
SETS
OF
ELEMENTS
SI
XNI
GI
FOR
I
K
T
THE
JIGSAW
VERIFIER
TAKES
AS
INPUT
PRMS
SK
ST
Π
WHERE
Π
IS
A
VALID
MULTILINEAR
FORM
IN
THESE
ELEMENTS
AND
IT
OUTPUTS
YES
IF
Π
EVALUATES
TO
THE
UNIT
ELEMENT
IN
GT
ON
THE
GIVEN
ELEMENTS
AND
NO
OTHERWISE
NOTE
THAT
THE
MULTILINEAR
JIGSAW
PUZZLE
SCHEME
ITSELF
DOES
NOT
SPECIFY
WHICH
PARTICULAR
MULTILINEAR
FORM
THE
JIGSAW
VERIFIER
SHOULD
APPLY
THIS
CHOICE
WILL
TYPICALLY
COME
FROM
THE
APPLICATION
THE
HARDNESS
ASSUMPTIONS
THAT
WE
MAKE
TYPICALLY
SAY
THAT
TWO
OUTPUT
DISTRIBUTIONS
OF
THE
JIGSAW
GENERATOR
ARE
COMPUTATIONALLY
INDISTINGUISHABLE
FOR
INSTANCE
AN
ASYMMETRIC
ANALOGUE
OF
THE
BDDH
ASSUMPTION
FOR
K
COULD
BE
THAT
GT
GTABC
IS
INDISTINGUISHABLE
FROM
GT
GTR
WHERE
GT
ARE
GENERATORS
OF
AND
GT
RESPECTIVELY
THAT
SATISFY
E
GT
INDISTINGUISHABILITY
OBFUSCATION
FOR
WE
NOW
SKETCH
SOME
ELEMENTS
OF
OUR
CANDIDATE
CONSTRUCTION
OF
INDISTINGUISHABILITY
OBFUSCATOR
FOR
USING
MULTILINEAR
JIGSAW
PUZZLES
A
MORE
DETAILED
HIGH
LEVEL
OVERVIEW
OF
OUR
CONSTRUCTION
CAN
BE
FOUND
IN
SECTION
AND
THE
CONSTRUCTION
ITSELF
IS
DESCRIBED
IN
SECTION
IT
IS
KNOWN
THAT
ANY
CIRCUIT
C
CAN
BE
TRANSFORMED
INTO
A
POLYNOMIALLENGTH
OBLIVIOUS
MATRIX
BRANCHING
PROGRAM
THAT
IS
IT
CAN
BE
TRANSFORMED
INTO
A
COLLECTION
OF
K
SQUARE
MATRICES
AND
ANOTHER
K
SQUARE
MATRICES
THE
COMPUTATION
OF
THE
ORIGINAL
CIRCUIT
ON
AN
INPUT
X
OF
LENGTH
CAN
THEN
BE
REDUCED
TO
A
MATRIX
PRODUCT
AS
FOLLOWS
WHERE
F
K
IS
A
PUBLIC
FUNCTION
INDEPENDENT
OF
C
THAT
IS
FIXED
IN
ADVANCE
C
X
IFF
K
X
MI
F
I
I
I
ONE
SUCH
TRANSFORMATION
WHICH
IS
SUITED
FOR
OUR
PURPOSES
IS
USING
BARRINGTON
CELEBRATED
THEOREM
OTHER
TRANSFORMATIONS
ARE
ALSO
POSSIBLE
AND
BARRINGTON
THEOREM
WAS
AVOIDED
FOR
BUILDING
OBFUSCATION
FIRST
IN
IN
THE
CONTEXT
OF
FINDING
MORE
EFFICIENT
CONSTRUCTIONS
OF
OBFUSCATION
SIMILARLY
IN
BLR
ALTERNATIVE
TRANSFORMATIONS
AVOIDING
BARRINGTON
THEOREM
WERE
USED
FOR
THE
PURPOSE
OF
ACHIEVING
GREATER
EFFICIENCY
OUR
STARTING
INTUITION
IS
THAT
THE
BRANCHING
PROGRAM
EVALUATION
IS
VERY
WELL
SUITED
FOR
THE
SETTING
OF
MULTILINEAR
MAPS
THE
ENTRIES
OF
THE
MATRICES
AND
CAN
BE
GIVEN
IN
THE
GROUP
GI
FOR
INSTANCE
IF
THE
ENTRY
OF
IS
Α
WE
CAN
ENCODE
THIS
AS
GIΑ
THEN
THE
MULTILINEAR
MAPS
WILL
ALLOW
US
TO
COMPUTE
THE
FINAL
PRODUCT
IN
GT
WE
REMARK
THAT
MULTILINEAR
MAPS
ALLOW
US
TO
MULTIPLY
K
MATRICES
TOGETHER
NOT
JUST
K
ELEMENTS
HOWEVER
SIMPLY
GIVING
THESE
MATRICES
EVEN
WHEN
ENCODED
IN
THE
EXPONENT
IS
INSECURE
FOR
EXAMPLE
AN
ATTACKER
IN
THE
DESCRIPTION
ABOVE
CAN
MULTIPLY
DIFFERENT
MA
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
TRICES
TOGETHER
DISREGARDING
FUNCTION
F
INSTEAD
WE
APPLY
A
COMBINATION
OF
KILIAN
MATRIX
PRODUCT
RANDOMIZATION
TECHNIQUE
TOGETHER
WITH
NOVEL
MULTIPLICATIVE
RANDOMIZATION
TECHNIQUES
THAT
WE
DEVELOP
THIS
YIELDS
A
CONSTRUCTION
OF
AN
INDISTINGUISHABILITY
OBFUSCATOR
FOR
AND
A
CORRESPONDING
ASSUMPTION
WE
JUSTIFY
OUR
ASSUMPTION
BY
SHOWING
THAT
IT
HOLDS
IN
A
GENERIC
MATRIX
MODEL
HOW
TO
USE
INDISTINGUISHABILITY
OBFUSCATION
NOW
THAT
WE
HAVE
CONSTRUCTED
AN
INDISTINGUISHABILITY
OBFUSCATOR
WE
ARE
FACED
WITH
THE
QUESTION
WHAT
GOOD
IS
AN
INDISTINGUISHABILITY
OBFUSCATOR
THE
DEFINITION
OF
INDISTINGUISHABILITY
OBFUSCATION
DOES
NOT
MAKE
CLEAR
WHAT
IF
ANYTHING
AN
INDISTINGUISHABILITY
OBFUSCATOR
ACTUALLY
HIDES
ABOUT
A
CIRCUIT
IN
PARTICULAR
IF
THE
CIRCUIT
BEING
OBFUSCATED
WAS
ALREADY
IN
AN
OBVIOUS
CANONICAL
FORM
THEN
WE
KNOW
THAT
THE
INDISTINGUISHABILITY
OBFUSCATOR
WOULD
NOT
NEED
TO
HIDE
ANYTHING
WE
OBSERVE
HERE
AN
ANALOGY
TO
WITNESS
INDISTINGUISHABLE
PROOFS
IF
A
STATEMENT
BEING
PROVED
ONLY
HAS
A
UNIQUE
WITNESS
THEN
A
WITNESS
INDISTINGUISHABLE
PROOF
DOES
NOT
NEED
TO
HIDE
THE
WITNESS
THE
WAY
WITNESS
INDISTINGUISHABILITY
CAN
BE
USED
IS
BY
EXPLICITLY
CONSTRUCTING
STATEMENTS
THAT
CAN
HAVE
MULTIPLE
WITNESSES
SIMILARLY
WE
WILL
USE
INDISTINGUISHABILITY
OBFUSCATION
BY
CONSTRUCTING
CIRCUITS
THAT
INHERENTLY
HAVE
MULTIPLE
EQUIVALENT
FORMS
WE
USE
THIS
ANALOGY
TO
BUILD
OUR
MAIN
APPLICATION
OF
FUNCTIONAL
ENCRYPTION
WARMUP
WITNESS
ENCRYPTION
FOR
NP
AS
A
WARMUP
TO
SEE
HOW
INDISTINGUISHABILITY
OBFUSCATION
CAN
BE
APPLIED
WE
START
BY
CONSIDERING
A
CRYPTOGRAPHIC
NOTION
WHICH
IMPLICITLY
ALREADY
CONSIDERS
CIRCUITS
THAT
INHERENTLY
HAVE
MULTIPLE
EQUIVALENT
FORMS
RECALL
THE
NOTION
OF
WITNESS
ENCRYPTION
FOR
NP
RECENTLY
INTRODUCED
IN
GIVEN
AN
NP
LANGUAGE
L
A
WITNESS
ENCRYPTION
SCHEME
FOR
L
IS
AN
ENCRYPTION
SCHEME
THAT
TAKES
AS
INPUT
AN
INSTANCE
X
AND
A
MESSAGE
BIT
B
AND
OUTPUTS
A
CIPHERTEXT
C
IF
X
L
AND
W
IS
A
VALID
WITNESS
FOR
X
THEN
A
DECRYPTOR
CAN
USE
W
TO
DECRYPT
C
AND
RECOVER
B
HOWEVER
IF
X
L
THEN
AN
ENCRYPTION
OF
SHOULD
BE
COMPUTATIONALLY
INDISTINGUISHABLE
FROM
AN
ENCRYPTION
OF
WE
NOW
OBSERVE
THAT
INDISTINGUISHABILITY
OBFUSCATION
FOR
IMPLIES
WITNESS
ENCRYPTION
FOR
AN
NP
COMPLETE
LANGUAGE
SUCH
AS
L
SATISFIABILITY
CONSIDER
THE
POINT
FILTER
FUNCTION
FUNCTION
FX
B
W
DEFINED
AS
FOLLOWS
IF
W
IS
A
VALID
WITNESS
FOR
X
THEN
FX
B
W
B
IF
W
IS
AN
INVALID
WITNESS
FOR
X
THEN
FX
B
W
NOTE
THAT
FOR
SATISFIABILITY
IT
IS
IMMEDIATE
THAT
FX
B
IS
IN
NOW
CONSIDER
AN
INDISTINGUISHABILITY
OBFUSCATION
OF
FX
B
THIS
OBFUSCATED
CIRCUIT
IS
A
VALID
WITNESS
ENCRYPTION
FOR
X
B
CORRECTNESS
OF
DECRYPTION
IS
IMMEDIATE
TO
SEE
WHY
SECRECY
HOLDS
NOTE
THAT
IF
X
L
THEN
BOTH
FX
AND
FX
ARE
CONSTANT
FUNCTIONS
THAT
ALWAYS
OUTPUT
THUS
BY
THE
DEFINITION
OF
INDISTINGUISHABILITY
OBFUSCATION
THE
OBFUSCATIONS
OF
FX
AND
FX
ARE
COMPUTATIONALLY
INDISTINGUISHABLE
INDISTINGUISHABILITY
OBFUSCATION
FOR
ALL
POLYNOMIAL
SIZE
CIRCUITS
NEXT
WE
SHOW
HOW
TO
USE
INDISTINGUISHABILITY
OBFUSCATION
FOR
AND
LEVELED
FHE
WITH
DECRYPTION
IN
TO
OBTAIN
INDISTINGUISHABILITY
OBFUSCATION
FOR
ALL
POLYNOMIALSIZE
CIRCUITS
THE
MAIN
IDEA
IS
TO
ADAPT
THE
TWO
KEY
PARADIGM
TO
WORK
USING
INDISTINGUISHABILITY
OBFUSCATORS
INSTEAD
OF
WITNESS
INDISTINGUISHABLE
PROOFS
THIS
CONSTRUCTION
IS
DESCRIBED
IN
SECTION
TO
OBFUSCATE
A
CIRCUIT
C
WE
CHOOSE
AND
PUBLISH
TWO
FHE
KEYS
AND
WE
ALSO
GIVE
OUT
ENCRYPTIONS
OF
THE
CIRCUIT
C
UNDER
BOTH
FHE
PUBLIC
KEYS
YIELDING
CIPHERTEXTS
AND
FINALLY
WE
GIVE
OUT
AN
INDISTINGUISHABILITY
OBFUSCATION
OF
A
CERTAIN
CIRCUIT
THAT
WE
WILL
DESCRIBE
BELOW
THE
EVALUATOR
WHO
HOLDS
AN
INPUT
X
IS
TOLD
TO
USE
THE
FHE
EVALUATION
ALGORITHM
WITH
X
AND
BOTH
CIPHERTEXTS
AND
TO
YIELD
ENCRYPTIONS
OF
C
X
UNDER
BOTH
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
AND
LET
US
CALL
THESE
ENCRYPTIONS
AND
RESPECTIVELY
THE
EVALUATOR
ALSO
KEEPS
TRACK
OF
ALL
THE
INTERMEDIATE
BIT
VALUES
ENCOUNTERED
DURING
EVALUATION
WHICH
CAN
BE
SEEN
AS
A
PROOF
Π
THAT
IT
USED
THE
SAME
X
TO
PERFORM
THE
EVALUATION
ON
BOTH
AND
THE
EVALUATOR
THEN
FEEDS
X
Π
INTO
THE
OBFUSCATED
CIRCUIT
IO
THIS
CIRCUIT
FIRST
CHECKS
THE
PROOF
Π
TO
MAKE
SURE
THAT
AND
WERE
CORRECTLY
COMPUTED
NOTE
THAT
THIS
CAN
BE
DONE
EASILY
IN
SINCE
THE
EVALUATOR
HAS
INCLUDED
THE
TRANSCRIPT
OF
THE
HOMOMORPHIC
EVALUATION
COMPUTATION
AS
PART
OF
THE
PROOF
SO
THE
CIRCUIT
MERELY
NEEDS
TO
CHECK
THAT
EACH
APPROPRIATE
TRIPLE
OF
INTERMEDIATE
BIT
VALUES
RESPECTS
THE
AND
OR
OR
NAND
OPERATIONS
THAT
WERE
USED
DURING
THE
EVALUATION
PROCESS
IF
THE
PROOF
CHECKS
OUT
THEN
THE
CIRCUIT
DECRYPTS
USING
AND
OUTPUTS
THIS
DECRYPTION
WHICH
SHOULD
BE
C
X
THE
KEY
INSIGHT
IS
THAT
THERE
IS
ANOTHER
CIRCUIT
THAT
IS
EQUIVALENT
TO
WHICH
SIMPLY
DECRYPTS
USING
INSTEAD
BECAUSE
OF
THE
PROOF
Π
THAT
MUST
BE
PROVIDED
BOTH
OF
THESE
CIRCUITS
ALWAYS
BEHAVE
IDENTICALLY
ON
ALL
INPUTS
FURTHERMORE
WHEN
USING
WE
NOTE
THAT
IS
NEVER
USED
ANYWHERE
AND
THEREFORE
THE
SEMANTIC
SECURITY
OF
THE
FHE
SCHEME
USING
IS
MAINTAINED
EVEN
GIVEN
THUS
BY
ALTERNATIVELY
APPLYING
THE
SEMANTIC
SECURITY
OF
THE
FHE
SCHEME
AND
SWITCHING
BACK
AND
FORTH
BETWEEN
AND
USING
THE
INDISTINGUISHABILITY
OBFUSCATION
PROPERTY
WE
CAN
PROVE
THAT
THE
OBFUSCATION
OF
ANY
TWO
EQUIVALENT
CIRCUITS
C
AND
C
ARE
COMPUTATIONALLY
INDISTINGUISHABLE
FUNCTIONAL
ENCRYPTION
FOR
ALL
CIRCUITS
WE
NEXT
SKETCH
OUR
MAIN
APPLICATION
OF
BUILDING
FUNCTIONAL
ENCRYPTION
FOR
ALL
CIRCUITS
THIS
CONSTRUCTION
IS
DESCRIBED
IN
SECTION
THE
STARTING
POINT
FOR
OUR
SOLUTION
IS
TO
PICK
A
STANDARD
PUBLIC
KEY
ENCRYPTION
KEY
PAIR
PK
SK
IN
THE
SETUP
PHASE
OF
THE
FUNCTIONAL
ENCRYPTION
AN
ENCRYPTION
OF
A
VALUE
X
WILL
SIMPLY
BE
AN
ENCRYPTION
OF
X
USING
THE
PUBLIC
KEY
PK
THE
SECRET
KEY
SKC
CORRESPONDING
TO
A
CIRCUIT
C
WILL
BE
AN
OBFUSCATION
OF
A
PROGRAM
THAT
USES
SK
TO
DECRYPT
X
AND
THEN
COMPUTES
AND
OUTPUT
C
X
WHILE
THIS
SOLUTION
WOULD
WORK
IF
OUR
OBFUSCATOR
ACHIEVED
THE
VIRTUAL
BLACK
BOX
OBFUSCATION
DEFINITION
THERE
IS
NO
REASON
TO
BELIEVE
THAT
AN
INDISTINGUISHABILITY
OBFUSCATOR
WOULD
NECESSARILY
HIDE
SK
THE
INDISTINGUISHABILITY
SECURITY
DEFINITION
FOR
FUNCTIONAL
ENCRYPTION
REQUIRES
THE
ADVERSARY
TO
DECLARE
TWO
INPUTS
AND
WITH
THE
PROMISE
THAT
ALL
SECRET
KEYS
SKC
THAT
SHE
WILL
ASK
FOR
WILL
SATISFY
C
C
THEN
THE
SECURITY
DEFINITION
REQUIRES
THAT
THE
ADVERSARY
WILL
NOT
BE
ABLE
TO
DISTINGUISH
AN
ENCRYPTION
OF
FROM
AN
ENCRYPTION
OF
A
NATURAL
FIRST
STEP
WOULD
BE
TO
HAVE
TWO
PUBLIC
KEYS
AND
AND
REQUIRE
THE
ENCRYPTION
OF
X
TO
CONSIST
OF
ENCRYPTIONS
OF
X
UNDER
BOTH
KEYS
HOWEVER
IN
THIS
CASE
UNLIKE
ABOVE
THE
RECEIVER
CANNOT
GENERATE
A
PROOF
ON
HIS
OWN
THAT
BOTH
CIPHERTEXTS
ENCRYPT
THE
SAME
MESSAGE
TO
PROVIDE
TO
THE
OBFUSCATED
DECRYPTION
CIRCUIT
THUS
WE
MUST
REQUIRE
THE
ENCRYPTOR
TO
GENERATE
SUCH
A
PROOF
WHICH
MUST
HIDE
X
A
NATURAL
SOLUTION
IS
TO
HAVE
THE
ENCRYPTOR
GENERATE
A
NONINTERACTIVE
ZERO
KNOWLEDGE
NIZK
PROOF
THAT
THE
CIPHERTEXTS
BOTH
ENCRYPT
THE
SAME
INPUT
THE
OBFUSCATED
CIRCUIT
WOULD
FIRST
CHECK
THIS
PROOF
AND
IF
IT
CHECKS
OUT
IT
WOULD
USE
ONE
OF
THE
TWO
SECRET
KEYS
OR
FOR
DECRYPTION
AND
EVALUATION
CONFIDENT
THAT
THE
OUTPUT
WOULD
BE
THE
SAME
NO
MATTER
WHICH
SECRET
KEY
IT
USES
WHEN
WE
ARE
PROVING
THAT
THE
ADVERSARY
CANNOT
DISTINGUISH
AN
ENCRYPTION
OF
FROM
AN
ENCRYPTION
OF
WE
COULD
MOVE
TO
AN
INTERMEDIATE
HYBRID
EXPERIMENT
WHERE
THE
NIZK
PROOF
IS
SIMULATED
AND
THE
TWO
CIPHERTEXTS
ARE
ACTUALLY
TO
AND
RESPECTIVELY
HERE
WE
ENCOUNTER
THE
KEY
NEW
PROBLEM
THAT
WE
MUST
TACKLE
WHEN
SIMULATING
A
NIZK
PROOF
WE
NEED
TO
CHANGE
THE
COMMON
REFERENCE
STRING
AND
IN
ALL
KNOWN
NIZK
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
SYSTEMS
WITH
RESPECT
TO
A
SIMULATED
COMMON
REFERENCE
STRING
VALID
PROOFS
OF
FALSE
STATEMENTS
EXIST
HOWEVER
THE
NOTION
OF
INDISTINGUISHABILITY
OBFUSCATION
REQUIRES
THAT
CIRCUITS
BE
EQUIVALENT
FOR
ALL
INPUTS
EVEN
INPUTS
TO
THE
CIRCUIT
THAT
CONTAIN
VALID
PROOFS
FOR
FALSE
STATEMENTS
WE
ADDRESS
THIS
PROBLEM
BY
INTRODUCING
THE
NOTION
OF
STATISTICALLY
SIMULATION
SOUND
NIZK
WHICH
REQUIRES
THAT
EXCEPT
WITH
RESPECT
TO
ONE
PARTICULAR
STATEMENT
TO
BE
SIMULATED
ALL
OTHER
VALID
PROOFS
THAT
EXIST
MUST
BE
ONLY
FOR
TRUE
STATEMENTS
STATISTICAL
SIMULATION
SOUNDNESS
CAN
BE
ACHIEVED
IN
A
STANDARD
WAY
USING
WITNESS
INDISTINGUISHABLE
PROOFS
ONCE
WE
HAVE
IT
THEN
A
SIMILAR
TWO
KEY
ALTERNATION
ARGUMENT
TO
THE
ONE
GIVEN
ABOVE
ALLOWS
US
TO
ESTABLISH
THE
SECURITY
OF
OUR
FUNCTIONAL
ENCRYPTION
SCHEME
NOTE
THAT
THE
ONE
FALSE
STATEMENT
THAT
CAN
BE
PROVED
IS
SUCH
THAT
THE
IT
DOES
NOT
EFFECT
THE
EQUIVALENCE
OF
THE
TWO
CIRCUITS
WE
NOTE
THAT
FULL
COLLUSION
RESISTANCE
FOLLOWS
FROM
A
STANDARD
HYBRID
ARGUMENT
USING
THE
INDISTINGUISHABILITY
OBFUSCATION
DEFINITION
FOR
EACH
SECRET
KEY
GIVEN
OUT
ONE
AT
A
TIME
ONCE
WE
ACHIEVE
INDISTINGUISHABILITY
SECURITY
FOR
FUNCTIONAL
ENCRYPTION
THIS
CAN
BE
UPGRADED
TO
NATURAL
SIMULATION
BASED
DEFINITIONS
OF
SECURITY
USING
THE
WORK
OF
DE
CARO
ET
AL
CIJ
FURTHERMORE
WE
NOTE
THAT
OUR
CONSTRUCTION
ENJOYS
THE
PROPERTY
THAT
CIPHERTEXTS
ARE
SUCCINCT
INDEED
THEIR
SIZE
DEPENDS
ONLY
ON
THE
PUBLICKEY
ENCRYPTION
SCHEME
AND
NIZK
BEING
USED
AND
DOES
NOT
DEPEND
ON
THE
UNDERLYING
DETAILS
OF
THE
OBFUSCATION
MECHANISM
IN
ANY
WAY
AND
THEREFORE
IT
DOES
NOT
DEPEND
ON
THE
PARAMETERS
NEEDED
FOR
OUR
MULTILINEAR
JIGSAW
PUZZLES
WE
ALSO
PLACE
NO
A
PRIORI
BOUND
ON
THE
CIRCUIT
SIZE
OF
THE
CIRCUITS
USED
FOR
SECRET
KEY
GENERATION
CIPHERTEXT
SUCCINCTNESS
AND
APPLICATIONS
ONE
THING
WE
EMPHASIZE
IS
THAT
CIPHERTEXTS
IN
OUR
SCHEME
ARE
VERY
SUCCINCT
IN
THAT
THEIR
SIZE
DEPENDS
ONLY
UPON
THE
MESSAGE
SIZE
AND
SECURITY
PARAMETER
IN
FACT
IF
THE
RIGHT
COMBINATION
OF
PUBLIC
KEY
ENCRYPTION
AND
NIZK
IS
USED
THE
CIPHERTEXT
SIZE
AND
ENCRYPTION
TIME
CAN
BE
CONSIDERED
SMALL
IN
A
PRACTICAL
SENSE
PRIOR
SOLUTIONS
FOR
THE
WEAKER
PRIMITIVES
OF
ABE
FOR
CIRCUITS
GGH
AND
SINGLE
USE
FUNCTIONAL
ENCRYPTION
GKP
ACHIEVED
CIPHERTEXTS
SIZES
AND
ENCRYPTION
TIMES
THAT
WERE
PROPORTIONAL
TO
THE
MAXIMUM
DEPTH
OF
THE
FUNCTION
TO
BE
EVALUATED
IT
SHOULD
BE
NOTED
THAT
THESE
SOLUTIONS
RELY
ON
WEAKER
ASSUMPTIONS
FOLLOWING
PARNO
RAYKOVA
AND
VAIKUNTANATHAN
WE
GET
A
DELEGATABLE
COMPUTATION
SCHEME
FOR
WHICH
THE
CLIENT
WORK
IS
INDEPENDENT
OF
THE
CIRCUIT
SIZE
FOLLOWING
GOLDWASSER
ET
AL
GKP
WE
GET
A
NEW
REUSABLE
YAO
GARBLED
CIRCUIT
CONSTRUCTION
FOR
WHICH
THE
WORK
TO
REUSE
A
GARBLED
CIRCUIT
IS
PROPORTIONAL
TO
THE
INPUT
SIZE
AND
INDEPENDENT
OF
THE
SIZE
AND
DEPTH
OF
THE
CIRCUIT
FINALLY
WE
GET
AN
EFFICIENT
PRIVATE
LINEAR
BROADCAST
ENCRYPTION
SCHEME
AS
DESCRIBED
BY
BONEH
SAHAI
AND
WATERS
WHICH
THEY
SHOW
IMPLIES
A
SECURE
TRAITOR
TRACING
SYSTEM
THIS
FINAL
APPLICATION
REQUIRES
COLLUSION
RESISTANCE
AN
APPLICATION
OF
IO
TO
RESTRICTED
USE
SOFTWARE
WE
HAVE
ALREADY
GIVEN
EVIDENCE
THAT
INDISTINGUISHABILITY
OBFUSCATION
HAS
SIGNIFICANT
APPLICATIONS
TO
CRYPTOGRAPHY
HERE
WE
DISCUSS
AN
APPLICATION
OF
INDISTINGUISHABILITY
OBFUSCATION
TO
A
QUESTION
THAT
DOES
NOT
DEAL
WITH
ENCRYPTION
OR
AUTHENTICATION
BUT
RATHER
RESTRICTED
USE
SOFTWARE
SOFTWARE
DEVELOPERS
WILL
OFTEN
WANT
TO
RELEASE
A
DEMO
OR
RESTRICTED
USE
VERSION
OF
THEIR
SOFTWARE
THAT
LIMITS
THE
FEATURES
THAT
ARE
AVAILABLE
IN
A
FULL
VERSION
IN
SOME
CASES
BECAUSE
THIS
STATEMENT
MUST
BE
FIXED
IN
ADVANCE
THE
RESULTING
SECURITY
PROOF
IS
FOR
SELECTIVE
SECURITY
SELECTIVE
SECURITY
CAN
BE
UPGRADED
TO
FULL
SECURITY
USING
A
STANDARD
COMPLEXITY
LEVERAGING
ARGUMENT
BY
ASSUMING
SUBEXPONENTIAL
SECURITY
OF
THE
UNDERLYING
CRYPTOGRAPHIC
PRIMITIVES
THAT
WE
USE
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
A
COMMERCIAL
SOFTWARE
DEVELOPER
WILL
DO
THIS
TO
DEMONSTRATE
THEIR
PRODUCT
IN
OTHER
CASES
THE
DEVELOPER
WILL
WANT
TO
MAKE
MULTIPLE
TIERS
OF
A
PRODUCT
WITH
DIFFERENT
PRICE
POINTS
IN
OTHER
DOMAINS
THE
SOFTWARE
MIGHT
BE
GIVEN
TO
A
PARTNER
THAT
IS
ONLY
PARTIALLY
TRUSTED
AND
THE
DEVELOPER
ONLY
WANTS
TO
RELEASE
THE
FEATURES
NEEDED
FOR
THE
TASK
IDEALLY
A
DEVELOPER
COULD
CREATE
A
DOWNGRADED
VERSION
OF
SOFTWARE
SIMPLY
BY
STARTING
WITH
THE
FULL
VERSION
AND
THEN
TURNING
OFF
CERTAIN
FEATURES
AT
THE
INTERFACE
LEVEL
REQUIRING
MINIMAL
ADDITIONAL
EFFORT
HOWEVER
IF
THIS
IS
ALL
THAT
IS
DONE
IT
COULD
BE
EASY
FOR
AN
ATTACKER
TO
BYPASS
THESE
CONTROLS
AND
GAIN
ACCESS
TO
THE
FULL
VERSION
OR
THE
CODE
BEHIND
IT
THE
OTHER
ALTERNATIVE
IS
FOR
A
SOFTWARE
DEVELOPMENT
TEAM
TO
CAREFULLY
EXCISE
ALL
UNUSED
FUNCTIONALITY
FROM
THE
CORE
OF
THE
SOFTWARE
REMOVING
FUNCTIONALITY
CAN
BECOME
A
VERY
TIME
CONSUMING
TASK
THAT
COULD
ITSELF
LEAD
TO
THE
INTRODUCTION
OF
SOFTWARE
BUGS
IN
ADDITION
IN
MANY
APPLICATIONS
IT
MIGHT
BE
UNCLEAR
WHAT
CODE
CAN
AND
CANNOT
REMAIN
FOR
A
RESTRICTED
USE
VERSION
ONE
IMMEDIATE
SOLUTION
IS
FOR
A
DEVELOPER
TO
RESTRICT
THE
USE
AT
THE
INTERFACE
LEVEL
AND
THEN
RELEASE
AN
OBFUSCATED
VERSION
OF
THE
PROGRAM
FOR
THIS
APPLICATION
INDISTINGUISHABILITY
OBFUSCATION
SUFFICES
SINCE
BY
DEFINITION
A
VERSION
RESTRICTED
IN
THE
INTERFACE
IS
INDISTINGUISHABLE
FROM
AN
OBFUSCATED
PROGRAM
WITH
EQUIVALENT
BEHAVIOR
THAT
HAS
ITS
SMARTS
REMOVED
AT
THE
START
STRONGER
NOTIONS
OF
OBFUSCATION
IN
THIS
WORK
WE
GIVE
NEW
CONSTRUCTIONS
FOR
SECURE
OBFUSCATION
WHILE
INDISTINGUISHABILITY
OBFUSCATION
IS
THE
TECHNICAL
FOCUS
OF
OUR
WORK
WE
NOTE
THAT
WE
KNOW
OF
NO
ACTUAL
ATTACKS
ON
OUR
OBFUSCATION
SCHEME
AS
A
VIRTUAL
BLACK
BOX
OBFUSCATOR
EXCEPT
FOR
THE
ATTACKS
THAT
ARISE
ON
SPECIFIC
CIRCUIT
CLASSES
THAT
ARE
KNOWN
TO
BE
UNOBFUSCATABLE
THIS
LEADS
TO
THE
INTRIGUING
POSSIBILITY
THAT
OUR
CONSTRUCTION
OR
FUTURE
ALTERNATIVE
CONSTRUCTIONS
COULD
ACHIEVE
VIRTUAL
BLACK
BOX
OBFUSCATION
FOR
A
LARGE
CLASS
OF
CIRCUITS
THAT
SOMEHOW
EXCLUDE
THE
PROBLEMATIC
EXAMPLES
THAT
HAVE
BEEN
IDENTIFIED
INDEED
AS
OBSERVED
BY
GOLDWASSER
AND
ROTHBLUM
INDISTINGUISHABILITY
OBFUSCATION
MUST
YIELD
VIRTUAL
BLACK
BOX
OBFUSCATION
IF
SUCH
A
VIRTUAL
BLACK
BOX
OBFUSCATION
IS
POSSIBLE
FOR
THE
FUNCTION
BEING
OBFUSCATED
IN
PARTICULAR
WHILE
MUCH
STUDY
STILL
NEEDS
TO
BE
DONE
WE
CURRENTLY
HAVE
NO
REASON
TO
BELIVE
THAT
OUR
OBFUSCATION
MECHANISM
DOES
NOT
SUFFICE
FOR
SUCH
APPLICATIONS
AS
THE
FOLLOWING
SECURE
PATCHING
OF
SOFTWARE
IF
A
NEW
MALWARE
VULNERABILITY
IS
FOUND
IN
SOFTWARE
THERE
IS
A
RISK
THAT
RELEASING
A
SOFTWARE
PATCH
WILL
ALLOW
ATTACKERS
TO
BECOME
AWARE
OF
A
VULNERABILITY
BEFORE
THE
PATCH
HAS
A
CHANCE
TO
FULLY
CIRCULATE
AMONG
USERS
OBFUSCATION
OFFERS
A
SOLUTION
CONCEPT
AN
INITIAL
PATCH
CAN
BE
RELEASED
IN
OBFUSCATED
FORM
AND
THEN
TRANSITIONED
TO
A
MORE
EFFICIENT
UNOBFUSCATED
PATCH
ONCE
LARGE
SCALE
ADOPTION
HAS
OCCURRED
FOR
THE
INITIAL
PATCH
HERE
THE
ASSUMPTION
WOULD
BE
THAT
THE
OBFUSCATED
PATCH
WOULD
HIDE
WHERE
THE
VULNERABILITY
IN
THE
SOFTWARE
WAS
AT
LEAST
AS
WELL
AS
THE
ORIGINAL
VULNERABLE
SOFTWARE
DID
INTELLECTUAL
PROPERTY
PROTECTION
IF
A
NEW
ALGORITHM
IS
DEVELOPED
FOR
SOLVING
A
PROBLEM
AND
THERE
IS
A
WORRY
THAT
AVAILABLE
LEGAL
PROTECTIONS
WILL
NOT
SUFFICE
FOR
PREVENTING
REVERSE
ENGINEERING
OF
THE
ALGORITHM
THEN
OBFUSCATION
OFFERS
A
NATURAL
SOLUTION
HERE
THE
GENERAL
REQUIRED
SECURITY
PROPERTY
SEEMS
VERY
CLOSE
TO
VIRTUAL
BLACK
BOX
OBFUSCATION
BUT
IF
ONLY
CERTAIN
PARTS
OF
THE
ALGORITHM
ARE
NOVEL
WEAKER
YET
SUFFICIENT
OBFUSCATION
SECURITY
GUARANTEES
MAY
BE
FORMALIZABLE
IN
SOME
CONTEXTS
FUTURE
DIRECTIONS
IN
OBFUSCATION
OUR
WORK
OPENS
UP
SEVERAL
NEW
POSSIBILITIES
IN
OBFUSCATION
BELOW
WE
DISCUSS
SOME
OF
THEM
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
THE
POWER
OF
INDISTINGUISHABILITY
OBFUSCATION
WHILE
A
VIRTUAL
BLACK
BOX
OBFUSCATOR
IMMEDIATELY
RESULTS
IN
SEVERAL
TURNKEY
APPLICATIONS
OUR
WORK
SHOWS
THAT
INDISTINGUISHABILITY
OBFUSCATION
COMBINED
WITH
ADROIT
USE
OF
OTHER
CRYPTOGRAPHIC
PRIMITIVES
CAN
GIVE
RISE
TO
POWERFUL
FUNCTIONALITIES
SEEING
THAT
INDISTINGUISHABILITY
OBFUSCATION
CAN
BE
MUCH
MORE
POWERFUL
THAN
IT
INITIALLY
APPEARS
AN
IMPORTANT
LINE
OF
RESEARCH
IS
TO
SEE
HOW
FAR
WE
CAN
PUSH
THE
LIMITS
OF
WHAT
IT
GIVES
US
INDISTINGUISHABILITY
OBFUSCATION
FROM
WEAKER
ASSUMPTIONS
THE
ARGUMENT
OF
SECURITY
FOR
OUR
CANDIDATE
INDISTINGUISHABILITY
OBFUSCATOR
CLEARLY
HAS
A
SIGNIFICANT
HEURISTIC
COMPONENT
IN
FUTURE
RESEARCH
WE
CAN
HOPE
TO
GAIN
BETTER
UNDERSTANDING
OF
THESE
HEURISTICS
AND
EVENTUALLY
ACHIEVE
CONSTRUCTIONS
UNDER
MORE
STANDARD
ASSUMPTIONS
A
MAJOR
OPEN
PROBLEM
IS
TO
OBTAIN
AN
UNCONDITIONAL
PROOF
FOR
OUR
SCHEME
OR
A
VARIANT
OF
IT
IN
A
LESS
IDEALIZED
GENERIC
MODEL
SUCH
AS
THE
PLAIN
GENERIC
MULTILINEAR
MAP
MODEL
AS
OPPOSED
TO
THE
GENERIC
COLORED
MATRIX
MODEL
THAT
WE
USE
THE
EVENTUAL
GOAL
OF
THIS
LINE
OF
RESEARCH
MAY
BE
TO
GET
AN
INDISTINGUISHABILITY
OBFUSCATOR
PROVABLY
SECURE
UNDER
THE
LEARNING
WITH
ERRORS
LWE
ASSUMPTION
WITH
THE
AID
OF
COMPLEXITY
LEVERAGING
PERHAPS
USING
TECHNIQUES
SIMILAR
TO
THOSE
DEVELOPED
IN
THE
CONTEXT
OF
FHE
STUDYING
THE
POSSIBILITY
OF
VIRTUAL
BLACK
BOX
OBFUSCATION
AS
MENTIONED
EARLIER
WE
KNOW
OF
NO
ACTUAL
ATTACKS
ON
OUR
OBFUSCATION
SCHEME
AS
A
VIRTUAL
BLACKBOX
OBFUSCATOR
EXCEPT
FOR
ATTACKS
THAT
ARISE
ON
SPECIFIC
CIRCUIT
CLASSES
THAT
ARE
KNOWN
TO
BE
UNOBFUSCATABLE
A
CLEAR
LINE
OF
RESEARCH
IS
TO
BETTER
UNDERSTAND
THE
POTENTIAL
FOR
OUR
CONSTRUCTION
TO
SERVE
AS
A
VIRTUAL
BLACK
BOX
OBFUSCATOR
BY
IDENTIFYING
AMENABLE
FUNCTION
CLASSES
ONE
THRUST
IS
CRYPTANALYSIS
NAMELY
FINDING
NONGENERIC
ATTACKS
WHEN
USING
OUR
SCHEME
PERHAPS
EVEN
AGAINST
NATURAL
FUNCTIONALITIES
A
SECOND
DIRECTION
IS
TO
ATTEMPT
TO
GAIN
SOME
EVIDENCE
OF
THE
VIABILITY
OF
VIRTUAL
BLACK
BOX
SECURITY
OF
OUR
CONSTRUCTION
IN
SOME
HEURISTIC
MODEL
SUCH
AS
THE
GENERIC
GROUP
MODEL
OF
COURSE
SUCH
A
STUDY
WOULD
NOT
BE
LIMITED
TO
OUR
CONSTRUCTION
AND
WE
EXPECT
THAT
OTHER
INTERESTING
CANDIDATES
OR
VARIANTS
OF
OUR
CONSTRUCTION
WOULD
EMERGE
IN
THE
NEAR
FUTURE
IMPROVING
THE
PRACTICAL
EFFICIENCY
WHILE
OUR
CURRENT
OBFUSCATION
CONSTRUCTION
RUNS
IN
POLYNOMIAL
TIME
IT
IS
LIKELY
TOO
INEFFICIENT
FOR
PRACTICAL
PROBLEMS
AN
IMPORTANT
OBJECTIVE
IS
TO
IMPROVE
THE
EFFICIENCY
FOR
USE
IN
PRACTICAL
APPLICATIONS
REASONING
ABOUT
OBFUSCATION
OF
LEARNABLE
PROGRAMS
IN
PRACTICE
A
FINAL
IMPORTANT
TASK
IS
TO
BEGIN
TO
CLOSE
THE
GAP
BETWEEN
THE
THEORETICAL
DEFINITIONS
FOR
OBFUSCATION
AND
INFORMAL
EXPECTATIONS
THAT
OFTEN
ARISE
IN
PRACTICE
LARGE
SOFTWARE
DEVELOPMENT
PROJECTS
CAN
CONSUME
MILLIONS
OF
DOLLARS
AND
HUNDREDS
OF
PERSON
YEARS
A
COMPANY
THAT
INVESTED
SUCH
AN
EFFORT
MIGHT
REASONABLY
EXPECT
THAT
A
GOOD
OBFUSCATOR
WOULD
PROVIDE
SOME
REAL
AND
TANGIBLE
PROTECTION
FOR
EXAMPLE
THE
COMPANY
MIGHT
HOPE
THAT
RELEASING
AN
OBFUSCATED
VERSION
OF
THEIR
SOFTWARE
WOULD
NOT
BE
ANY
WORSE
THAN
PROVIDING
REMOTE
ACCESS
TO
A
SERVER
RUNNING
THE
SOFTWARE
ONE
ISSUE
IS
THAT
DESPITE
THE
SUBSTANTIAL
INVESTMENT
THE
OBFUSCATED
PROGRAM
MAY
BE
LEARNABLE
IN
THAT
ITS
BEHAVIOR
CAN
BE
COMPLETELY
DETERMINED
BY
A
LARGE
POLYNOMIAL
NUMBER
OF
INPUT
QUERIES
IF
THIS
IS
THE
CASE
THEN
SIMPLY
GIVING
OUT
THE
PROGRAM
IN
THE
CLEAR
WOULD
TECHNICALLY
COUNT
AS
VALID
OBFUSCATION
FROM
THE
CRYPTOGRAPHIC
DEFINITION
EVEN
THOUGH
THIS
STRATEGY
WOULD
BE
VERY
DISAPPOINTING
IN
A
REAL
SENSE
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
WE
WOULD
LIKE
TO
BE
ABLE
TO
BRIDGE
THIS
GAP
BETWEEN
THEORY
AND
PRACTICE
AND
FIGURE
OUT
WAYS
TO
RIGOROUSLY
DEFINE
AND
ARGUE
ABOUT
MEANINGFUL
OBFUSCATION
NOTIONS
FOR
LEARNABLE
PROGRAMS
GETTING
A
BETTER
UNDERSTANDING
OF
THIS
GAP
APPEARS
CRITICAL
FOR
USING
OBFUSCATION
IN
NONCRYPTOGRAPHIC
APPLICATIONS
WE
EMPHASIZE
THAT
AN
IMPORTANT
INITIAL
STEP
IS
TO
SIMPLY
UNDERSTAND
THIS
PROBLEM
BETTER
OTHER
RELATED
WORK
SOME
RECENT
WORK
HAS
FOCUSED
ON
A
COLLUSIONBOUNDED
FORM
OF
FUNCTIONAL
ENCRYPTION
GKP
WHERE
SECURITY
IS
ONLY
ENSURED
SO
LONG
AS
AN
ATTACKER
DOES
NOT
ACQUIRE
MORE
THAN
SOME
PREDETERMINED
NUMBER
OF
KEYS
THIS
CONCEPT
IS
VERY
SIMILAR
TO
THE
MANNER
IN
WHICH
ONE
TIME
SIGNATURES
RELAX
THE
GENERAL
NOTION
OF
SIGNATURES
IN
THESE
SETTINGS
COLLUSION
BOUNDED
FE
HAS
BEEN
ACHIEVED
FOR
GENERAL
CIRCUITS
AND
IN
THE
CASE
OF
SINGLE
KEY
FE
THIS
HAS
BEEN
DONE
WITH
QUITE
SUCCINCT
CIPHERTEXTS
GKP
CERTAIN
COLLUSIONBOUNDED
FUNCTIONAL
ENCRYPTION
SCHEMES
WITH
SPECIAL
PROPERTIES
SUFFICE
FOR
SEVERAL
INTERESTING
APPLICATIONS
SUCH
AS
DELEGATED
COMPUTATION
AND
MOST
NOTABLY
REUSABLE
GARBLED
CIRCUITS
GKP
HOWEVER
IN
THE
GENERAL
USE
SCENARIO
ENVISIONED
FOR
FE
UNBOUNDED
COLLUSION
RESISTANCE
IS
ESSENTIAL
AS
A
SINGLE
USER
OR
A
COLLECTION
OF
USERS
WOULD
BE
HOLDING
MULTIPLE
SECRET
KEYS
THIS
IS
THE
FOCUS
OF
OUR
WORK
RECENT
WORK
DEMONSTRATED
THAT
CERTAIN
STRONG
SIMULATION
BASED
FORMULATIONS
OF
THE
GOAL
OF
FUNCTIONAL
ENCRYPTION
ARE
IMPOSSIBLE
TO
MEET
OUR
WORK
FOCUSES
ON
REALIZING
THE
INDISTINGUISHABILITY
BASED
DEFINITION
OF
FE
BUT
RECENT
WORK
HAS
SHOWN
THAT
INDISTINGUISHABILITY
SECURITY
FOR
GENERAL
CIRCUITS
CAN
BE
USED
TO
ACHIEVE
SOME
FORM
OF
MEANINGFUL
SIMULATION
BASED
SECURITY
AS
WELL
CIJ
IN
SOME
CASES
TECHNICALLY
CONSTRUCTING
OBFUSCATION
INVOLVES
PERFORMING
COMPUTATION
IN
A
WAY
SUCH
THAT
INTERMEDIATE
STATE
REMAIN
HIDDEN
ONE
NATURAL
IDEA
FOR
DOING
THIS
IS
TO
PERFORM
COMPUTATION
IN
THE
EXPONENT
IN
SOME
CRYPTOGRAPHIC
GROUP
THIS
WAS
PREVIOUSLY
CONSIDERED
AS
PART
OF
UNPUBLISHED
AND
UNSUCCESSFUL
ATTEMPTS
BY
SEVERAL
GROUPS
E
G
AND
HOWEVER
NONE
OF
THESE
WORKS
SUGGESTED
A
PLAUSIBLE
STRUCTURE
WHERE
SUCH
AN
ENCODING
IN
THE
EXPONENT
COULD
BE
DONE
WE
ELABORATE
ON
THESE
IDEAS
AND
WHY
THEY
ARE
INSUFFICIENT
FOR
REALIZING
OBFUSCATION
IN
SECTION
TWO
FOLLOW
UP
WORKS
HAVE
PROPOSED
OBFUSCATION
CONSTRUCTIONS
THAT
USE
DIRECTLY
CIRCUITS
RATHER
THAN
BPS
THESE
CONSTRUCTIONS
REQUIRE
COMPOSITE
ORDER
MULTILINEAR
MAPS
PRELIMINARIES
IN
THIS
SECTION
WE
WILL
START
BY
GIVING
OUR
DEFINITION
OF
INDISTINGUISHABILITY
OBFUSCATION
IO
AND
THE
NOTIONS
OF
MULTILINEAR
JIGSAW
PUZZLES
AND
BARRINGTON
BRANCHING
PROGRAM
THAT
WILL
BE
NEEDED
IN
THE
REALIZATION
OF
OUR
OBFUSCATION
CANDIDATE
INDISTINGUISHABILITY
OBFUSCATORS
DEFINITION
INDISTINGUISHABILITY
OBFUSCATOR
IO
A
UNIFORM
PPT
MACHINE
IO
IS
CALLED
AN
INDISTINGUISHABILITY
OBFUSCATOR
FOR
A
CIRCUIT
CLASS
CΛ
IF
THE
FOLLOWING
CONDITIONS
ARE
SATISFIED
FOR
ALL
SECURITY
PARAMETERS
Λ
N
FOR
ALL
C
CΛ
FOR
ALL
INPUTS
X
WE
HAVE
THAT
PR
C
X
C
X
C
IO
Λ
C
FOR
ANY
NOT
NECESSARILY
UNIFORM
PPT
DISTINGUISHER
D
THERE
EXISTS
A
NEGLIGIBLE
FUNCTION
Α
SUCH
THAT
THE
FOLLOWING
HOLDS
FOR
ALL
SECURITY
PARAMETERS
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
Λ
N
FOR
ALL
PAIRS
OF
CIRCUITS
CΛ
WE
HAVE
THAT
IF
X
X
FOR
ALL
INPUTS
X
THEN
PR
D
IO
Λ
PR
D
IO
Λ
Α
Λ
DEFINITION
INDISTINGUISHABILITY
OBFUSCATOR
FOR
N
C
A
UNIFORM
PPT
MACHINE
IO
IS
CALLED
AN
INDISTINGUISHABILITY
OBFUSCATOR
FOR
N
C
IF
FOR
ALL
CONSTANTS
C
N
THE
FOLLOWING
HOLDS
LET
CΛ
BE
THE
CLASS
OF
CIRCUITS
OF
DEPTH
AT
MOST
C
LOG
Λ
AND
SIZE
AT
MOST
Λ
THEN
IO
C
IS
AN
INDISTINGUISHABILITY
OBFUSCATOR
FOR
THE
CLASS
CΛ
DEFINITION
INDISTINGUISHABILITY
OBFUSCATOR
FOR
P
POLY
A
UNIFORM
PPT
MACHINE
IO
IS
CALLED
AN
INDISTINGUISHABILITY
OBFUSCATOR
FOR
P
POLY
IF
THE
FOLLOWING
HOLDS
LET
CΛ
BE
THE
CLASS
OF
CIRCUITS
OF
SIZE
AT
MOST
Λ
THEN
IO
IS
AN
INDISTINGUISHABILITY
OBFUSCATOR
FOR
THE
CLASS
CΛ
WE
ALSO
DEFINE
A
VARIANT
OF
THE
INDISTINGUISHABILITY
OBFUSCATOR
DEFINITION
THAT
IS
SUITABLE
FOR
USE
IN
UNIFORM
SECURITY
PROOFS
THIS
DEFINITION
EASILY
FOLLOWS
FROM
THE
BASIC
DEFINITION
ABOVE
WITH
RESPECT
TO
NONUNIFORM
ADVERSARIES
DEFINITION
FAMILY
INDISTINGUISHABILITY
OBFUSCATOR
IO
A
UNIFORM
PPT
MACHINE
IO
IS
CALLED
AN
FAMILY
INDISTINGUISHABILITY
OBFUSCATOR
FOR
A
CIRCUIT
CLASS
CΛ
IF
THE
FOLLOWING
CONDITIONS
ARE
SATISFIED
FOR
ALL
SECURITY
PARAMETERS
Λ
N
FOR
ALL
C
CΛ
FOR
ALL
INPUTS
X
WE
HAVE
THAT
PR
C
X
C
X
C
IO
Λ
C
FOR
ANY
NOT
NECESSARILY
UNIFORM
PPT
ADVERSARIES
SAMP
D
THERE
EXISTS
A
NEGLIGIBLE
FUNCTION
Α
SUCH
THAT
THE
FOLLOWING
HOLDS
IF
PR
FOR
ALL
X
X
X
Σ
SAMP
Α
Λ
THEN
WE
HAVE
PR
D
Σ
IO
Λ
Σ
SAMP
PR
D
Σ
IO
Λ
Σ
SAMP
Α
Λ
OBSERVE
THAT
AGAINST
NONUNIFORM
ADVERSARIES
EVERY
INDISTINGUISHABILITY
OBFUSCATOR
FOR
A
CIRCUIT
CLASS
C
MUST
ALSO
BE
A
FAMILY
INDISTINGUISHABILITY
OBFUSCATOR
FOR
THE
CIRCUIT
CLASS
C
THIS
IS
BECAUSE
WE
CAN
NONUNIFORMLY
FIX
THE
COINS
OF
SAMP
TO
PRODUCE
A
CONCRETE
Σ
WHERE
AND
ARE
FUNCTIONALLY
EQUIVALENT
AND
Σ
YIELDS
NONNEGLIGIBLE
ADVANTAGE
FOR
THE
DISTINGUISHER
D
Σ
MULTILINEAR
JIGSAW
PUZZLES
IN
THIS
SECTION
WE
FORMALIZE
OUR
MULTILINEAR
JIGSAW
PUZZLE
FRAMEWORK
THE
DESCRIPTION
OF
THE
FRAMEWORK
DOES
NOT
REFER
TO
ANY
SPECIFIC
IMPLEMENTATION
OF
MULTILINEAR
MAPS
AS
SUCH
WE
DO
NOT
REQUIRE
ANY
FAMILIARITY
WITH
THE
GGH
MULTILINEAR
ENCODINGS
FOR
THIS
SECTION
HOWEVER
READERS
FAMILIAR
WITH
THE
GGH
FRAMEWORK
SHOULD
THINK
OF
MULTILINEAR
JIGSAW
PUZZLES
AS
OFFERING
A
STRICT
SUBSET
OF
THE
FUNCTIONALITY
OF
ASYMMETRIC
GGH
MULTILINEAR
ENCODING
SCHEMES
THE
MAIN
DIFFERENCE
IS
THAT
ONLY
THE
PARTY
WHO
GENERATED
THE
SYSTEM
PARAMETERS
CAN
ENCODE
ELEMENTS
THIS
SIMPLIFIED
FRAMEWORK
WILL
SUFFICE
FOR
OUR
WORK
BUT
PERHAPS
NOT
FOR
OTHER
APPLICATIONS
USING
THIS
SIMPLIFIED
VARIANT
OFFERS
SEVERAL
ADVANTAGES
MOST
IMPORTANTLY
AS
OPPOSED
TO
WE
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
DO
NOT
PROVIDE
NONTRIVIAL
ENCODINGS
OF
AND
IN
THE
PUBLIC
PARAMETERS
WHICH
AVOIDS
THE
WEAK
DISCRETE
LOGARITHM
ATTACK
FROM
FOR
MORE
INFORMATION
ON
THE
GENERAL
GGH
FRAMEWORK
WE
REFER
THE
READER
TO
NOTE
ALSO
THAT
OUR
MULTILINEAR
PUZZLES
FRAMEWORK
CAN
ALTERNATIVELY
BE
IMPLEMENTED
USING
A
SUBSET
OF
THE
RECENT
WORK
ON
APPROXIMATE
MULTILINEAR
MAPS
OVER
THE
INTEGERS
IN
THE
MULTILINEAR
JIGSAW
PUZZLE
FRAMEWORK
THERE
ARE
TWO
ENTITIES
THE
JIGSAW
GENERATOR
AND
THE
JIGSAW
VERIFIER
INFORMALLY
THE
JIGSAW
GENERATOR
TAKES
AS
INPUT
A
DESCRIPTION
OF
THE
PLAINTEXT
ELEMENTS
THAT
NEED
TO
BE
ENCODED
AND
OUTPUTS
JIGSAW
PUZZLE
PIECES
WHICH
ARE
ENCODING
OF
THOSE
PLAINTEXT
ELEMENTS
WE
CALL
THEM
JIGSAW
PUZZLE
PIECES
BECAUSE
THEY
CAN
ONLY
BE
MEANINGFULLY
COMBINED
IN
VERY
RESTRICTED
WAYS
I
E
ACCORDING
TO
GROUP
OPERATIONS
AND
THE
MULTILINEAR
MAP
VERY
ROUGHLY
THE
JIGSAW
VERIFIER
TAKES
AS
INPUT
THE
JIGSAW
PUZZLE
PIECES
AND
A
SPECIFIC
MULTILINEAR
FORM
FOR
COMBINING
THESE
PIECES
THE
OUTPUT
OF
THE
JIGSAW
VERIFIER
IS
IF
IT
SUCCESSFULLY
ARRANGES
THE
JIGSAW
PUZZLE
TO
PRODUCE
A
SUITABLE
ENCODING
OF
WE
FIRST
FORMALIZE
THE
MANNER
IN
WHICH
THE
PLAINTEXT
ELEMENTS
ARE
SPECIFIED
INTUITIVELY
WE
WOULD
LIKE
THESE
ELEMENTS
TO
BE
GIVEN
TO
THE
JIGSAW
GENERATOR
AS
INPUT
BUT
IN
OUR
SETTING
IT
IS
THE
GENERATOR
ITSELF
THAT
CHOOSES
THE
PLAINTEXT
SPACE
ZP
FROM
WHICH
THESE
PLAINTEXT
ELEMENTS
ARE
TAKEN
SO
WE
CANNOT
GIVE
IT
THE
ELEMENTS
AS
INPUT
INSTEAD
THE
GENERATOR
IS
GIVEN
A
JIGSAW
SPECIFIER
WHICH
IS
ROUGHLY
AN
ALGORITHM
THAT
TAKES
P
AS
INPUT
AND
PRODUCES
AS
OUTPUT
THE
ELEMENTS
FROM
ZP
THAT
THE
GENERATOR
SHOULD
ENCODE
ONE
HELPFUL
FACT
FOR
READING
THE
DEFINITION
BELOW
IS
THAT
IN
ASYMMETRIC
K
MULTILINEAR
ENCODING
SCHEMES
THERE
ARE
ENCODING
LEVELS
THAT
CORRESPOND
TO
SUBSETS
OF
THE
INDEX
SET
K
K
HENCE
THE
JIGSAW
SPECIFIER
WOULD
OUTPUT
NOT
ONLY
THE
PLAINTEXT
ELEMENTS
BUT
ALSO
THE
LEVELS
RELATIVE
TO
WHICH
THEY
NEED
TO
BE
ENCODED
DEFINITION
JIGSAW
SPECIFIER
A
JIGSAW
SPECIFIER
IS
A
TUPLE
K
A
WHERE
K
Z
ARE
PARAMETERS
AND
A
IS
A
PROBABILISTIC
CIRCUIT
WITH
THE
FOLLOWING
BEHAVIOR
ON
INPUT
A
PRIME
NUMBER
P
A
OUTPUTS
THE
PRIME
P
AND
AN
ORDERED
SET
OF
PAIRS
A
WHERE
EACH
AI
ZP
AND
EACH
SI
K
FOR
A
POLYNOMIAL
Α
WE
SAY
THAT
A
FAMILY
OF
JIGSAW
SPECIFIERS
KΛ
Λ
AΛ
Λ
Z
IS
AN
Α
BOUNDED
JIGSAW
SPECIFIER
FAMILY
IF
KΛ
Λ
AΛ
Α
Λ
WE
NEXT
FORMALIZE
THE
NOTION
OF
A
MULTILINEAR
FORM
THIS
IS
A
PURELY
SYNTACTIC
OBJECT
CORRESPONDING
TO
AN
ARITHMETIC
CIRCUIT
THAT
WE
WANT
TO
COMPUTE
SO
BELOW
WE
DEFINE
FORMS
WITH
GATES
FOR
ADDITION
NEGATION
AND
SUBTRACTION
WE
ALSO
INCLUDE
BELOW
SPECIAL
IGNORE
GATES
THAT
ALLOW
US
TO
HAVE
MORE
POTENTIAL
INPUTS
THAN
THE
NUMBER
OF
REAL
INPUTS
TO
THE
CIRCUIT
AND
THEN
WE
CAN
CHOOSE
ONLY
A
SUBSET
OF
THEM
FOR
THE
ACTUAL
COMPUTATION
DEFINITION
MULTILINEAR
FORM
A
MULTILINEAR
FORM
IS
A
TUPLE
F
K
Π
F
WHERE
K
Z
ARE
PARAMETERS
AND
Π
IS
A
CIRCUIT
WITH
INPUT
WIRES
MADE
OUT
OF
BINARY
ADDITION
GATES
BINARY
MULTIPLICATION
GATES
UNARY
NEGATION
GATES
AND
UNARY
IGNORE
GATES
F
IS
AN
ASSIGNMENT
OF
AN
INDEX
SET
I
K
TO
EVERY
WIRE
OF
Π
A
MULTILINEAR
FORM
MUST
SATISFY
THE
FOLLOWING
CONSTRAINTS
A
FOR
EVERY
GATE
OR
GATE
ALL
THE
INPUTS
AND
OUTPUTS
OF
THAT
GATE
ARE
ASSIGNED
THE
SAME
SET
I
B
FOR
EVERY
GATE
ITS
TWO
INPUTS
ARE
ASSIGNED
DISJOINT
SETS
K
AND
ITS
OUTPUTS
ARE
ASSIGNED
THE
UNION
SET
C
THE
OUT
DEGREE
OF
ALL
GATES
IS
ZERO
AND
D
THE
OUTPUT
WIRE
IS
ASSIGNED
THE
SET
K
A
FORM
F
K
Π
F
IS
A
BOUNDED
FOR
SOME
A
Z
IF
THE
SIZE
OF
THE
CIRCUIT
Π
IS
AT
MOST
A
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
WE
NOTE
THAT
WHAT
MAKES
THIS
FORM
MULTILINEAR
IS
THE
REQUIREMENT
THAT
THE
SETS
CORRESPONDING
TO
THE
INPUT
OF
A
MULTIPLICATION
GATE
BE
DISJOINT
THIS
MEANS
THAT
ANY
INDEX
I
K
CAN
BE
ADDED
ONLY
ONCE
ON
ANY
PATH
FROM
INPUT
TO
OUTPUT
WHICH
IMPLIES
THAT
THE
OUTPUT
MUST
BE
A
MULTILINEAR
IN
THE
INPUTS
MULTILINEAR
FORMS
ARE
MEANT
TO
BE
EVALUATED
ON
THE
OUTPUT
FROM
THE
JIGSAW
SPECIFIER
AS
DEFINED
NEXT
DEFINITION
MULTILINEAR
EVALUATION
LET
X
P
A
BE
THE
OUTPUT
OF
THE
JIGSAW
SPECIFIER
K
A
WITH
EACH
AI
ZP
AND
EACH
SI
K
WE
SAY
THAT
A
MULTILINEAR
FORM
F
K
Π
F
IS
COMPATIBLE
WITH
X
IF
K
K
AND
THE
INPUT
WIRES
OF
Π
ARE
ASSIGNED
THE
SETS
IF
F
IS
COMPATIBLE
WITH
X
THEN
THE
EVALUATION
OF
F
ON
X
DENOTED
F
X
IS
THE
OUTPUT
OF
THE
CIRCUIT
Π
ON
THE
INPUT
A
WE
SAY
THAT
THE
MULTILINEAR
EVALUATION
F
X
SUCCEEDS
IF
THE
FINAL
OUTPUT
IS
WITH
THESE
DEFINITIONS
WE
CAN
NOW
FORMALLY
DEFINE
MULTILINEAR
JIGSAW
PUZZLES
DEFINITION
MULTILINEAR
JIGSAW
PUZZLE
A
MULTILINEAR
JIGSAW
PUZZLE
SCHEME
CONSISTS
OF
TWO
PPT
ALGORITHMS
MJ
P
JGEN
JVER
AS
FOLLOWS
JIGSAW
GENERATOR
THE
GENERATOR
IS
A
PPT
ALGORITHM
THAT
TAKES
AS
INPUT
A
JIGSAW
SPECIFIER
K
A
AND
THE
SECURITY
PARAMETER
Λ
AND
IT
OUTPUTS
A
NUMBER
P
A
PRIVATE
OUTPUT
X
THE
OUTPUT
OF
A
JIGSAW
SPECIFIER
AND
A
PUBLIC
OUTPUT
PUZZLE
P
X
PUZZLE
JGEN
K
A
FOR
EASE
OF
NOTATION
IF
WE
WANT
TO
REFER
ONLY
TO
THE
PUBLIC
OUTPUT
WITH
RESPECT
TO
A
JIGSAW
SPECIFIER
K
A
WE
SOMETIMES
ABUSE
NOTATION
AND
WRITE
PUZZLEA
TO
DENOTE
JUST
THE
PUBLIC
OUTPUT
IN
THE
EXPERIMENT
ABOVE
JIGSAW
VERIFIER
THE
VERIFIER
JVER
IS
A
DETERMINISTIC
POLYNOMIAL
TIME
ALGORITHM
THAT
TAKES
AS
INPUT
THE
PUBLIC
OUTPUT
OF
A
JIGSAW
GENERATOR
PUZZLE
AND
A
MULTILINEAR
FORM
F
K
Π
F
IT
OUTPUTS
EITHER
ACCEPT
OR
REJECT
FOR
A
PARTICULAR
GENERATOR
OUTPUT
P
X
PUZZLE
AND
A
FORM
F
COMPATIBLE
WITH
X
WE
SAY
THAT
THE
VERIFIER
JVER
IS
CORRECT
RELATIVE
TO
P
PUZZLE
F
X
IF
EITHER
F
X
AND
JVER
PUZZLE
F
OR
F
X
AND
JVER
PUZZLE
F
WE
REQUIRE
PERFECT
CORRECTNESS
FOR
THE
SCHEME
NAMELY
THE
VERIFIER
MUST
BE
CORRECT
ON
ALL
FORMS
FOR
ANY
Λ
Z
AND
JIGSAW
SPECIFIER
K
A
ANY
OUTPUT
P
X
PUZZLE
IN
THE
SUPPORT
OF
JGEN
K
A
AND
ANY
FORM
F
K
Π
F
COMPATIBLE
WITH
X
THE
VERIFIER
JVER
MUST
BE
CORRECT
RELATIVE
TO
P
PUZZLE
F
X
SECURITY
IN
THE
MULTILINEAR
JIGSAW
PUZZLE
FRAMEWORK
THE
ABOVE
FORMALIZATION
AND
GUARANTEES
SPEAK
TO
THE
CORRECTNESS
OF
THE
MULTILINEAR
JIGSAW
PUZZLE
FRAMEWORK
FOR
CAPTURING
SECURITY
WE
FIRST
CONSIDER
WHAT
INTUITIVELY
WE
WANT
THE
MULTILINEAR
JIGSAW
PUZZLE
FRAMEWORK
TO
CAPTURE
WE
WANT
IT
TO
BE
THE
CASE
THAT
THE
ONLY
WAY
TO
DISTINGUISH
BETWEEN
TWO
DIFFERENT
JIGSAW
PUZZLES
PUZZLEA
AND
PUZZLEA
IS
FOR
THERE
TO
BE
A
PARTICULAR
MULTILINEAR
FORM
F
THAT
SUCCEEDS
WITH
NOTICEABLY
DIFFERENT
PROBABILITIES
WHEN
EVALUATED
ON
A
VS
A
THUS
WE
WILL
CONSIDER
DISTRIBUTIONS
OVER
PUZZLES
PUZZLEA
AND
PUZZLEA
WHERE
WE
DO
NOT
BELIEVE
THAT
ANY
MULTILINEAR
FORM
DISTINGUISHES
BETWEEN
THESE
PUZZLES
AND
OUR
ASSUMPTIONS
WILL
STATE
THAT
THESE
PUZZLES
ARE
COMPUTATIONALLY
INDISTINGUISHABLE
FROM
EACH
OTHER
THUS
MORE
FORMALLY
HARDNESS
ASSUMPTIONS
IN
THE
MULTILINEAR
JIGSAW
PUZZLE
FRAMEWORK
WILL
REQUIRE
THAT
FOR
TWO
DIFFERENT
POLYNOMIAL
SIZE
FAMILIES
OF
JIGSAW
SPECIFIERS
KΛ
Λ
AΛ
Λ
Z
AND
KΛ
Λ
A
Λ
Λ
Z
THE
PUBLIC
OUTPUT
OF
THE
JIGSAW
GENERATOR
ON
KΛ
Λ
AΛ
WILL
BE
COMPUTATIONALLY
INDISTINGUISHABLE
FROM
THE
PUBLIC
OUTPUT
OF
THE
JIGSAW
GENERATOR
ON
KΛ
Λ
A
Λ
IN
APPENDIX
A
WE
DESCRIBE
HOW
TO
IMPLEMENT
THE
MULTILINEAR
JIGSAW
PUZZLE
FRAMEWORK
USING
A
STRICT
SUBSET
OF
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
BRANCHING
PROGRAMS
FOR
OUR
N
C
INDISTINGUISHABILITY
OBFUSCATION
SCHEME
WE
USE
OBLIVIOUS
MATRIX
BRANCHING
PROGRAMS
AS
THE
UNDERLYING
COMPUTATIONAL
MODEL
THIS
IS
SIMILAR
TO
THE
NOTION
OF
BRANCHING
PROGRAMS
USED
IN
BARRINGTON
THEOREM
WITH
THE
PERMUTATIONS
ENCODED
BY
PERMUTATION
MATRICES
NAMELY
IN
THIS
MODEL
A
BRANCHING
PROGRAM
CONSISTS
OF
A
SEQUENCE
OF
STEPS
WHERE
IN
EACH
STEP
WE
EXAMINE
ONE
INPUT
BIT
AND
DEPENDING
ON
ITS
VALUE
WE
CHOOSE
ONE
OF
TWO
PERMUTATIONS
WE
THEN
MULTIPLY
ALL
THESE
PERMUTATIONS
AND
THE
OUTPUT
OF
THE
COMPUTATION
IS
ONE
IF
THE
RESULTING
PERMUTATION
IS
THE
IDENTITY
SLIGHTLY
MORE
GENERALLY
WE
CAN
SPECIFY
ANY
PAIR
OF
PERMUTATIONS
TO
REPRESENT
THE
OUTPUTS
AND
BARRINGTON
THEOREM
REQUIRES
ONLY
PERMUTATIONS
IN
AND
HENCE
IN
THE
DEFINITION
BELOW
WE
RESTRICT
OURSELVES
TO
ONLY
THIS
CASE
ALSO
BELOW
LET
W
DENOTE
THE
SET
W
DEFINITION
OBLIVIOUS
MATRIX
BRANCHING
PROGRAM
LET
BE
TWO
DISTINCT
PERMUTATION
MATRICES
AN
OBLIVIOUS
MATRIX
BRANCHING
PROGRAM
OF
LENGTH
N
FOR
BIT
INPUTS
IS
A
SEQUENCE
N
BP
INP
I
AI
AI
I
WHERE
THE
AI
B
ARE
PERMUTATION
MATRICES
IN
AND
INP
I
IS
THE
INPUT
BIT
POSITION
EXAMINED
IN
STEP
I
THE
FUNCTION
COMPUTED
BY
THIS
OBLIVIOUS
MATRIX
BRANCHING
PROGRAM
IS
N
IF
I
AI
XINP
I
N
DEF
FBP
X
IF
I
AI
XINP
I
UNDEF
OTHERWISE
IN
THE
REST
OF
THE
PAPER
A
BRANCHING
PROGRAM
WILL
BE
ASSUMED
TO
REFER
TO
AN
OBLIVIOUS
MATRIX
BRANCHING
PROGRAM
THEOREM
SEE
THERE
EXIST
TWO
DISTINCT
CYCLE
PERMUTATION
MATRICES
WHERE
CAN
BE
ASSUMED
TO
THE
IDENTITY
MATRIX
SUCH
THAT
FOR
ANY
DEPTH
D
FAN
IN
BOOLEAN
CIRCUIT
C
THERE
EXISTS
AN
OBLIVIOUS
MATRIX
BRANCHING
PROGRAM
OF
LENGTH
AT
MOST
THAT
COMPUTES
THE
SAME
FUNCTION
AS
THE
CIRCUIT
C
INTUITION
INDISTINGUISHABILITY
OBFUSCATION
CANDIDATE
FOR
TO
HELP
EXPLAIN
THE
ROLE
OF
THE
DIFFERENT
COMPONENTS
IN
OUR
CRYPTOSYSTEM
WE
DESCRIBE
BELOW
A
TRAJECTORY
THAT
BEGINS
WITH
KILIAN
PROTOCOL
FOR
OBLIVIOUS
CIRCUIT
EVALUATION
AND
MODIFY
IT
UNTIL
WE
END
UP
WITH
OUR
OBFUSCATION
CANDIDATE
FOR
CIRCUITS
STARTING
POINT
BARRINGTON
AND
KILIAN
BARRINGTON
THEOREM
HAS
PLAYED
A
MAJOR
ROLE
IN
CRYPTOGRAPHY
BOGG
IN
A
NUTSHELL
BARRINGTON
SHOWED
HOW
TO
TRANSFORM
AN
ARBITRARY
FAN
IN
DEPTH
D
BOOLEAN
CIRCUIT
C
INTO
A
WIDTH
PERMUTATION
BRANCHING
PROGRAM
BP
OF
LENGTH
N
THIS
PROGRAM
IS
DEFINED
BY
A
SEQUENCE
BP
INP
I
AI
AI
NI
WHERE
THE
FUNCTION
INP
N
DESCRIBES
WHAT
INPUT
BIT
IS
EXAMINED
IN
THE
ITH
STEP
AND
THE
AI
B
ARE
PERMUTATIONS
IN
WHICH
WE
CAN
VIEW
AS
PERMUTATION
MATRICES
ON
ANY
PARTICULAR
N
BIT
INPUT
X
THE
EVALUATION
OF
BP
CONSISTS
OF
COMPUTING
THE
PRODUCT
MATRIX
P
I
AI
XINP
I
OUTPUTTING
ONE
IF
P
AND
ZERO
OTHERWISE
LET
US
RECALL
KILIAN
PROTOCOL
IN
WHICH
THE
TWO
PLAYERS
ALICE
AND
BOB
EVALUATE
AN
CIRCUIT
ON
THEIR
JOINT
INPUT
LET
C
X
Y
DENOTE
THAT
CIRCUIT
WITH
ALICE
INPUT
X
AND
BOB
INPUT
Y
AND
X
Y
INVOKING
BARRINGTON
THEOREM
WE
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
GET
A
LENGTH
N
BRANCHING
PROGRAM
BP
THAT
COMPUTES
THE
SAME
FUNCTION
AS
C
ALICE
BEGINS
THE
PROTOCOL
BY
CHOOSING
N
RANDOM
INVERTIBLE
MATRICES
RI
NI
OVER
ZP
COMPUTING
THEIR
INVERSES
AND
THEN
SETTING
A
I
B
RI
AI
B
RI
FOR
ALL
I
N
B
CALL
THE
NEW
PROGRAM
WITH
A
I
B
ALONG
WITH
RN
THE
RANDOMIZED
BRANCHING
PROGRAM
RBP
IT
IS
CLEAR
THAT
RBP
EVALUATES
THE
SAME
FUNCTION
AS
THE
ORIGINAL
BP
DENOTING
THE
JOINT
BIT
INPUT
BY
Χ
X
Y
ALICE
SENDS
TO
BOB
THE
MATRICES
CORRESPONDING
TO
HER
INPUT
X
A
I
ΧINP
I
I
N
INP
I
X
ALONG
WITH
RN
NEXT
THEY
USE
AN
OBLIVIOUS
TRANSFER
PROTOCOL
BY
WHICH
BOB
LEARNS
THE
MATRICES
CORRESPONDING
TO
HIS
INPUT
Y
A
I
ΧINP
I
I
N
INP
I
X
NOW
BOB
CAN
PUT
THE
MATRICES
IN
THE
PROPER
ORDER
TO
COMPUTE
THE
PRODUCT
P
I
N
A
I
ΧINP
I
RN
AND
HENCE
C
X
Y
ALICE
LEARNS
NOTHING
ABOUT
BOB
INPUT
AND
KILIAN
SHOWS
THAT
BOB
DOES
NOT
LEARN
ANYTHING
ABOUT
ALICE
INPUT
SINCE
THE
RANDOMIZATION
HIDES
ALICE
INPUT
PERFECTLY
SCHEME
NUMBER
ONE
KILIAN
PROTOCOL
AS
IS
STARTING
OUR
JOURNEY
FROM
KILIAN
TO
IO
WE
THINK
OF
ALICE
AS
THE
OBFUSCATOR
AND
BOB
AS
THE
EVALUATOR
THE
RANDOMIZED
BRANCHING
PROGRAM
RBP
FOR
A
UNIVERSAL
CIRCUIT
C
X
Y
IN
ITS
EXISTENCE
IS
GUARANTEED
BY
THEOREM
IS
GENERATED
BY
ALICE
THE
X
INPUT
CORRESPONDS
TO
THE
SPECIFIC
CIRCUIT
BEING
OBFUSCATED
AND
Y
THE
INPUT
ON
WHICH
IT
IS
EVALUATED
THE
OBFUSCATION
CONSISTS
OF
THE
MATRICES
CORRESPONDING
TO
ALICE
INPUT
X
A
I
ΧINP
I
I
N
INP
I
X
ALONG
WITH
RN
AND
ALL
THE
MATRIXES
FOR
THE
INPUTS
CORRESPONDING
TO
Y
NAMELY
A
I
B
I
N
B
INP
I
X
BOB
DURING
EVALUATION
CHOOSES
THE
MATRICES
CORRESPONDING
TO
HIS
INPUT
Y
PUTTING
TOGETHER
WITH
THE
MATRICES
CORRESPONDING
TO
INPUT
X
AND
EVALUATES
THE
PROGRAM
OUTPUTTING
C
X
Y
UNSURPRISINGLY
THIS
SCHEME
IS
BROKEN
INFORMALLY
SPEAKING
WE
NEXT
DESCRIBE
THREE
DIFFERENT
KINDS
OF
ATTACKS
AGAINST
THIS
BASIC
SCHEME
PARTIAL
EVALUATION
ATTACKS
A
PARTIAL
EVALUATION
ATTACK
OCCURS
WHEN
THE
ADVERSARY
COMPUTES
PARTIAL
PRODUCTS
A
I
ΧINP
I
A
I
ΧINP
I
A
J
ΧINP
J
AND
A
I
Χ
INP
I
A
I
Χ
INP
I
A
J
Χ
INP
J
CORRESPONDING
TO
TWO
INPUTS
Χ
X
Y
AND
Χ
X
Y
AND
COMPARES
THESE
AGAINST
EACH
OTHER
NOTE
THAT
THE
OUTER
RANDOMIZATION
MATRICES
RI
AND
RJ
WILL
BE
THE
SAME
THIS
WOULD
ALLOW
THE
ADVERSARY
TO
LEARN
WHETHER
TWO
PARTIAL
COMPUTATIONS
IN
THE
BRANCHING
PROGRAM
YIELD
THE
SAME
VALUE
POTENTIALLY
REVEALING
INFORMATION
ABOUT
THE
INPUT
X
MIXED
INPUT
ATTACKS
A
MIXED
INPUT
ATTACK
OCCURS
WHEN
THE
ADVERSARY
PERFORMS
THE
MATRIX
PRODUCT
INVOLVED
IN
A
CORRECT
COMPUTATION
BUT
DOESN
T
RESPECT
THE
INP
FUNCTION
THAT
IS
FOR
DIFFERENT
STEPS
IN
THE
BP
THAT
CONSIDER
THE
SAME
INPUT
BIT
YI
IT
USES
SOME
MATRICES
THAT
CORRESPOND
TO
YI
AND
OTHERS
THAT
CORRESPOND
TO
YI
AGAIN
THIS
COULD
YIELD
INFORMATION
ABOUT
X
BEYOND
JUST
THE
FINAL
OUTPUT
C
X
Y
ATTACKS
THAT
DO
NOT
RESPECT
ALGEBRAIC
STRUCTURE
OR
ARE
NOT
MULTILINEAR
THESE
ATTACKS
MUST
EITHER
FAIL
TO
RESPECT
THE
ALGEBRAIC
STRUCTURE
OF
THE
MATRICES
OVER
ZP
OR
COMPUTE
NONMULTILINEAR
ALGEBRAIC
FUNCTIONS
OVER
THESE
MATRICES
INFORMALLY
SPEAKING
WE
PROVE
IN
A
PARTICULAR
IDEALIZED
GENERIC
MODEL
THAT
ALL
MULTILINEAR
ATTACKS
OVER
MATRICES
MUST
FALL
INTO
ONE
OF
THE
TWO
ATTACK
CATEGORIES
ABOVE
KILIAN
USES
RANDOM
PERMUTATION
MATRICES
FOR
THE
R
BUT
THAT
ASPECT
OF
THE
PROTOCOL
IS
NOT
I
RELEVANT
TO
OUR
DISCUSSION
FOR
EXAMPLE
ISHAI
POINTED
OUT
TO
US
THAT
COMPUTING
MATRIX
INVERSES
A
FUNCTION
OF
ALGEBRAIC
DEGREE
P
CAN
LEAD
TO
SOME
NONTRIVIAL
ATTACKS
ON
THIS
SCHEME
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
DEALING
WITH
OTHER
ATTACKS
USING
MULTILINEAR
JIGSAW
PUZZLES
WE
BEGIN
BY
ADDRESSING
THE
POSSIBILITY
OF
NONMULTILINEAR
ATTACKS
I
E
ATTACKS
THAT
DO
THINGS
OTHER
THAN
EVALUATING
MULTILINEAR
FORMS
ON
THE
GIVEN
ELEMENTS
THIS
IS
PRECISELY
WHERE
MULTILINEAR
JIGSAW
PUZZLES
COME
IN
AS
THEY
GIVE
US
A
WAY
TO
ENCODE
THE
ELEMENTS
IN
THE
EXPONENT
MAKING
IT
HARD
TO
MEANINGFULLY
MANIPULATE
THEM
OTHER
THAN
VIA
THE
PRESCRIBED
OPERATIONS
IN
OUR
CASE
THE
JIGSAW
GENERATOR
WILL
BE
THE
OBFUSCATOR
AND
WILL
GENERATE
A
PUZZLE
SYSTEM
WITH
MULTILINEARITY
PARAMETER
N
WHERE
N
IS
THE
LENGTH
OF
THE
BRANCHING
PROGRAM
TO
BE
OBFUSCATED
RECALL
THAT
THE
JIGSAW
GENERATOR
NEEDS
ACCESS
TO
A
JIGSAW
SPECIFIER
WHICH
WILL
CORRESPOND
TO
THE
PLAINTEXT
MATRICES
AS
ABOVE
IN
PARTICULAR
THE
JIGSAW
SPECIFIER
OUTPUTS
A
PAIR
FOR
EACH
ENTRY
IN
EACH
OF
THE
MATRICES
A
I
B
EACH
ENTRY
OF
THE
ITH
MATRICES
A
I
B
IS
GIVEN
RELATIVE
TO
THE
SINGLETON
INDEX
SET
I
N
THE
JIGSAW
VERIFIER
WILL
BE
USED
WHEN
EVALUATING
THE
PROGRAM
IN
ORDER
TO
DECIDE
IF
THE
RESULTING
MATRIX
IS
THE
IDENTITY
OR
NOT
WE
NOTE
THAT
OBFUSCATION
BY
ENCODING
KILIAN
CONSTRUCTION
IN
THE
EXPONENT
IN
DIFFERENT
ALGEBRAIC
SETTINGS
WAS
CONSIDERED
IN
THE
PAST
AS
PART
OF
UNPUBLISHED
AND
UNSUCCESSFUL
ATTEMPTS
BY
SEVERAL
GROUPS
E
G
AND
HOWEVER
NONE
OF
THESE
WORKS
SUGGESTED
A
PLAUSIBLE
STRUCTURE
WHERE
SUCH
AN
ENCODING
IN
THE
EXPONENT
COULD
BE
DONE
MOREOVER
IT
IS
CLEAR
THAT
ENCODING
IN
THE
EXPONENT
IS
NOT
ENOUGH
BY
ITSELF
TO
GET
A
SECURE
SCHEME
IN
PARTICULAR
IT
DOES
NOT
ADDRESS
PARTIAL
EVALUATION
OR
MIXED
INPUT
ATTACKS
WHICH
WE
CONSIDER
BELOW
DEALING
WITH
PARTIAL
EVALUATION
ATTACKS
BOOKENDS
AND
HIGHER
DIMENSIONAL
MATRICES
NOTE
THAT
ENCODING
THE
MATRICES
IN
THE
MULTILINEAR
JIGSAW
PUZZLE
FRAMEWORK
DOES
NOTHING
TO
PREVENT
PARTIAL
EVALUATION
AND
MIXED
INPUT
ATTACKS
AS
THOSE
ATTACKS
ARISE
EVEN
WHEN
THE
ADVERSARY
RESPECTS
THE
MATRIX
PRODUCT
STRUCTURE
TO
ADDRESS
THE
PARTIAL
EVALUATION
ATTACK
WE
WOULD
LIKE
TO
ADD
SPECIAL
BOOKEND
COMPONENTS
AT
THE
START
AND
END
OF
THE
COMPUTATION
WITHOUT
WHICH
NO
PARTIAL
COMPUTATION
CAN
BE
COMPARED
TO
ANY
OTHER
TO
DO
THIS
FIRST
WE
EMBED
THE
MATRICES
AI
B
INSIDE
HIGHER
DIMENSION
MATRICES
OF
THE
FORM
OBSERVE
THAT
THESE
RANDOM
SCALARS
INDEED
THWART
MIXED
EVALUATION
ATTACKS
FOR
EVERY
INPUT
BIT
YJ
IF
WE
CHOOSE
ALL
THE
ΑI
AND
ALL
THE
Α
I
FOR
INP
I
J
THEN
THE
PRODUCT
MATCHES
AND
WE
COULD
GET
Δ
SIMILARLY
IF
WE
CHOOSE
ALL
THE
ΑI
AND
Α
I
HOWEVER
ANY
ATTEMPT
TO
MIX
AND
MATCH
THESE
MATRICES
WILL
RESULT
IN
TWO
DIFFERENT
RANDOM
PRODUCTS
FOR
THE
PRIMARY
AND
DUMMY
PROGRAMS
WHICH
CANCEL
OUT
ONLY
IF
THE
TWO
EVALUATION
RESULT
IN
THE
SAME
RANDOM
NUMBER
NOTE
THAT
THIS
HAPPENS
ONLY
WITH
A
NEGLIGIBLE
PROBABILITY
ADDITIONAL
SAFEGUARDS
IN
THE
CONSTRUCTION
ABOVE
WE
CHOOSE
TO
SET
THE
NUMBER
M
OF
RANDOM
DIMENSIONS
THAT
ARE
ADDED
TO
THE
MATRICES
TO
MORE
THAN
THE
MULTILINEARITY
PARAMETER
OF
THE
SYSTEM
NAMELY
SET
M
N
WE
NOTE
THAT
WE
DO
NOT
HAVE
ANY
CONCRETE
REASON
WHY
EVEN
SETTING
M
IS
INSECURE
BUT
WE
INCREASE
M
AS
AN
ADDITIONAL
SAFEGUARD
AGAINST
UNANTICIPATED
ATTACKS
BY
DOING
SO
WE
INCREASE
THE
LEVEL
OF
RANDOMNESS
PRESENT
IN
BOTH
THE
DI
B
MATRICES
AND
THE
INDIVIDUAL
RI
MATRICES
TO
BE
WELL
BEYOND
THE
MAXIMUM
MULTILINEARITY
SUPPORTED
BY
THE
MULTILINEAR
JIGSAW
PUZZLE
IN
PARTICULAR
THIS
MEANS
THAT
WRITTEN
AS
FORMAL
POLYNOMIALS
EACH
ENTRY
OF
RI
IS
A
POLYNOMIAL
WITH
A
DEGREE
EXCEEDING
THE
MAXIMUM
MULTILINEARITY
OF
THE
SYSTEM
INTUITIVELY
THIS
GIVES
US
MORE
CONFIDENCE
IN
OUR
ASSUMPTION
BECAUSE
IT
SEEMS
QUITE
IMPLAUSIBLE
THAT
AN
ADVERSARY
THAT
IS
ESSENTIALLY
LIMITED
TO
COMPUTATIONS
THAT
ARE
CLOSE
TO
MULTILINEAR
FORMS
WOULD
BE
ABLE
TO
DETANGLE
SUCH
HIGH
DEGREE
COMPUTATIONS
INVOLVING
SO
MANY
DEGREES
OF
FREEDOM
IN
TERMS
OF
THE
RANDOMNESS
USED
HOWEVER
AGAIN
WE
ARE
NOT
AWARE
OF
ANY
ATTACKS
ON
OUR
SCHEME
EVEN
WITHOUT
THIS
ADDITIONAL
SAFEGUARD
INDISTINGUISHABILITY
OBFUSCATION
CANDIDATE
FOR
IN
THIS
SECTION
WE
DESCRIBE
OUR
INDISTINGUISHABILITY
OBFUSCATION
CANDIDATE
FOR
WE
BEGIN
BY
PRESENTING
A
NOTION
OF
RANDOMIZED
BRANCHING
PROGRAMS
SOMEWHAT
SIMILAR
TO
KILIAN
AND
THEN
BUILD
UPON
THIS
CONSTRUCTION
USING
MULTILINEAR
JIGSAW
PUZZLES
TO
GET
OUR
INDISTINGUISHABILITY
OBFUSCATION
CANDIDATE
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
NOTATION
CONSIDER
A
LENGTH
N
BRANCHING
PROGRAM
OVER
INPUT
VARIABLES
BP
INP
I
AI
AI
I
N
INP
I
AI
B
WHERE
INP
I
IS
THE
POSITION
OF
THE
INPUT
BIT
THAT
IS
EXAMINED
IN
STEP
I
WE
EXTEND
THIS
NOTATION
NATURALLY
TO
A
SET
OF
STEPS
N
NAMELY
INP
INP
I
I
CONVERSELY
FOR
BIT
POSITION
J
WE
DENOTE
BY
IJ
THE
STEPS
IN
THE
BRANCHING
PROGRAM
BP
THAT
EXAMINE
THE
JTH
INPUT
BIT
IJ
I
N
INP
I
J
AND
LET
IJ
IJ
J
J
FOR
J
RANDOMIZED
BRANCHING
PROGRAMS
LIKE
KILIAN
WE
EXPRESS
THE
STEPS
OF
THE
BRANCHING
PROGRAM
IN
TERMS
OF
MATRICES
AND
RANDOMIZE
THE
ITH
MATRIX
BY
ENVELOPING
IT
BY
RANDOM
MATRICES
RI
AND
RI
HOWEVER
IN
OUR
SETTING
WE
ALSO
NEED
SOME
ADDITIONAL
GARBLING
TECHNIQUES
LET
ZP
BE
THE
RING
OVER
WHICH
WE
RANDOMIZE
THE
BRANCHING
PROGRAM
AND
LET
M
WE
GENERATE
A
RANDOMIZED
BRANCHING
PROGRAM
AS
FOLLOWS
ΑI
Α
I
Α
I
I
N
IN
SAMPLE
RANDOM
AND
INDEPENDENT
SCALARS
ΑI
ZP
SUBJECT
TO
THE
CONSTRAINT
THAT
I
IJ
ΑI
I
IJ
Α
I
AND
I
IJ
ΑI
I
IJ
ΑI
FOR
ALL
J
FOR
EVERY
I
N
COMPUTE
TWO
BLOCK
DIAGONAL
MATRICES
DI
DI
WHERE
THE
DIAGONAL
ENTRIES
ARE
CHOSEN
INDEPENDENTLY
AT
RANDOM
AND
THE
BOTTOM
RIGHT
ARE
THE
SCALED
AJ
B
AND
TWO
MORE
DI
WHERE
THE
DIAGONAL
ENTRIES
ARE
MATRICES
DI
RANDOM
AND
THE
BOTTOM
RIGHT
ARE
THE
SCALED
IDENTITY
DI
B
B
DI
B
ΑI
B
I
ΑI
B
AI
B
CHOOSE
VECTORS
AND
T
AND
AND
T
OF
DIMENSION
AS
FOLLOWS
THE
ENTRIES
M
IN
THE
AND
VECTORS
ARE
SET
TO
ZERO
AND
ENTRIES
M
ARE
CHOSEN
INDEPENDENTLY
AT
RANDOM
IN
THE
T
AND
T
VECTORS
THE
ENTRIES
M
ARE
CHOSEN
INDEPENDENT
AT
RANDOM
AND
M
ARE
SET
TO
ZERO
CHOOSE
TWO
PAIRS
OF
RANDOM
VECTORS
AND
T
AND
AND
T
SUCH
THAT
T
T
THE
LAST
FIVE
ENTRIES
IN
ARE
SET
TO
AND
THE
LAST
FIVE
ENTRIES
IN
T
ARE
SET
TO
T
THE
LAST
FIVE
ENTRIES
IN
ARE
SET
TO
AND
THE
LAST
FIVE
ENTRIES
IN
T
ARE
SET
TO
T
M
M
M
M
T
T
T
M
M
M
M
T
T
T
SAMPLE
N
RANDOM
FULL
RANK
MATRICES
OVER
ZP
RN
AND
RN
AND
COMPUTE
THEIR
INVERSES
THE
RANDOMIZED
BRANCHING
PROGRAM
OVER
ZP
IS
THE
FOLLOWING
RN
DP
BP
SR
T
RN
T
R
T
R
N
T
R
I
N
B
D
I
B
D
I
B
RI
DI
B
R
I
I
N
B
I
DI
B
RI
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
WE
REMARK
THAT
THIS
RANDOMIZED
PROGRAM
CONSISTS
IN
ESSENCE
OF
TWO
PARALLEL
PROGRAMS
ONE
EMBEDS
THE
ORIGINAL
BRANCHING
PROGRAM
BP
WITH
ALL
THE
AI
B
AND
THE
OTHER
EMBEDS
A
DUMMY
PROGRAM
OF
THE
SAME
LENGTH
CONSISTING
ONLY
OF
IDENTITY
MATRICES
SO
IT
COMPUTES
THE
CONSTANT
FUNCTION
IN
OUR
CONSTRUCTION
WE
USE
THE
DUMMY
PROGRAM
FOR
THE
PURPOSE
OF
EQUALITY
TEST
THE
ORIGINAL
PROGRAM
OUTPUTS
ON
A
GIVEN
INPUT
ONLY
WHEN
IT
AGREES
WITH
THE
DUMMY
PROGRAM
ON
THAT
INPUT
GARBLED
BRANCHING
PROGRAMS
AND
HARDNESS
ASSUMPTIONS
BELOW
WE
DESCRIBE
A
TRANSFORMATION
FOR
GARBLING
BPS
WITH
FIXED
INPUTS
AND
FORMALLY
DEFINE
OUR
HARDNESS
ASSUMPTION
THAT
SAYS
THAT
THIS
GARBLING
TRANSFORMATION
HAS
GOOD
OBFUSCATION
PROPERTIES
WE
USE
MULTILINEAR
JIGSAW
PUZZLES
AS
SPECIFIED
IN
SECTION
LET
BP
BE
A
LENGTHN
BRANCHING
PROGRAM
COMPUTING
SOME
FUNCTION
F
WE
APPLY
OUR
MULTILINEAR
JIGSAW
PUZZLE
FRAMEWORK
TO
THE
JIGSAW
SPECIFIER
THAT
ON
INPUT
P
RANDOMIZES
THE
BRANCHING
PROGRAM
OVER
ZP
AND
OUTPUTS
A
TUPLE
CORRESPONDING
TO
EACH
ELEMENT
IN
RN
D
P
BP
AS
ABOVE
SPECIFICALLY
IT
PROVIDES
EACH
ELEMENT
OF
THE
STEP
I
MATRICES
AT
THE
LEVEL
OF
THE
SINGLETON
INDEX
SET
I
EACH
ELEMENT
OF
THE
VECTORS
AT
THE
LEVEL
OF
THE
SINGLETON
INDEX
SET
AND
EACH
ELEMENT
OF
THE
VECTORS
T
T
AT
THE
LEVEL
OF
THE
SINGLETON
INDEX
SET
N
WE
DENOTE
THE
RANDOMIZED
AND
ENCODED
PROGRAM
WHICH
IS
THE
PUBLIC
OUTPUT
OF
THE
JIGSAW
GENERATOR
BY
RN
DP
BP
ENCODE
T
ENCODE
N
T
PRMS
ENCODE
T
ENCODE
N
T
I
N
B
ENCODE
I
D
I
B
D
I
B
ENCODE
I
D
I
B
I
N
B
D
I
B
THE
CORRESPONDING
PRIVATE
OUTPUT
OF
THE
JIGSAW
GENERATOR
I
E
PLAINTEXT
IS
P
RN
D
P
BP
ABOVE
ENCODES
A
DENOTES
AN
ENCODING
OF
A
AT
LEVEL
GENERATED
BY
JIGSAW
GENERATOR
NOTE
THAT
THIS
INFORMATION
IS
PROVIDED
TO
IT
BY
THE
JIGSAW
SPECIFIER
FOR
EVERY
INPUT
Χ
TO
THE
ORIGINAL
BRANCHING
PROGRAM
WE
CAN
CHOOSE
THE
CORRESPONDING
MATRICES
FROM
BOTH
THE
PRIMARY
AND
THE
DUMMY
PROGRAMS
AND
TEST
WHETHER
THEY
YIELD
THE
SAME
RESULT
USING
ONLY
THE
ALLOWED
MULTILINEARITY
IN
MORE
DETAIL
FOR
EVERY
INPUT
Χ
WE
CONSIDER
THE
MULTILINEAR
FORM
FΧ
WHICH
IS
DEFINED
AS
D
I
ΧINP
I
T
D
I
ΧINP
I
T
MOD
P
FΧ
RN
D
P
BP
I
I
WE
OBSERVE
THAT
A
IF
BP
Χ
THEN
FΧ
RN
D
P
BP
WITH
PROBABILITY
AND
B
IF
BP
Χ
THEN
FΧ
RN
D
P
BP
EXCEPT
WITH
NEGLIGIBLE
PROBABILITY
WE
KNOW
THAT
BP
Χ
AND
THEREFORE
THE
TWO
TERMS
IN
THE
POLYNOMIAL
FΧ
RN
D
P
BP
ABOVE
DO
NOT
CANCEL
OUT
BUT
THE
POLYNOMIAL
MIGHT
ITSELF
EVALUATE
TO
HOWEVER
THIS
HAPPENS
ONLY
WITH
A
NEGLIGIBLE
PROBABILITY
SINCE
ALL
THE
VARIABLES
IN
THE
POLYNOMIAL
ARE
ASSIGNED
RANDOM
VALUES
GIVEN
RN
D
P
BP
AND
Χ
WE
CAN
USE
THE
JIGSAW
VERIFIER
TO
CHECK
IF
FΧ
RN
D
P
BP
THEREBY
LEARNING
WITH
HIGH
PROBABILITY
THE
OUTPUT
OF
BP
Χ
HARDNESS
ASSUMPTIONS
ROUGHLY
WE
ASSUME
THAT
IF
FOR
TWO
DIFFERENT
WAYS
OF
FIXING
SOME
INPUTS
TO
THE
BRANCHING
PROGRAM
RESULT
IN
THE
SAME
FUNCTION
ON
THE
REMAINING
NONFIXED
INPUTS
THEN
IT
IS
INFEASIBLE
TO
DECIDE
WHICH
OF
THE
TWO
SETS
OF
FIXED
INPUTS
IS
USED
IN
A
GIVEN
GARBLED
PROGRAM
INPUT
FIXING
GIVEN
RN
D
P
BP
AS
ABOVE
AND
A
PARTIAL
ASSIGNMENT
FOR
THE
INPUT
BITS
Σ
J
FOR
J
THE
PARAMETER
FIXING
PROCEDURE
JUST
REMOVES
ALL
THE
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
MATRICES
D
I
B
D
I
B
THAT
ARE
NOT
CONSISTENT
WITH
THAT
PARTIAL
ASSIGNMENT
Σ
I
E
WHERE
I
IJ
AND
B
Σ
INP
I
THUS
WE
HAVE
GARBLE
RN
D
P
BP
J
Σ
PRMS
T
T
D
I
B
I
IJ
B
Σ
INP
I
D
I
B
I
IJ
B
Σ
INP
I
D
I
IJ
B
D
I
B
I
IJ
B
I
B
WE
THINK
OF
A
GARBLED
PROGRAM
RELATIVE
TO
THE
PARTIAL
ASSIGNMENT
J
Σ
AS
A
REPRESENTATION
OF
A
FUNCTION
SPECIFICALLY
THE
FUNCTION
IMPLEMENTED
BY
THE
BRANCHING
PROGRAM
WITH
THE
INPUT
RESTRICTED
ACCORDING
TO
J
Σ
IF
THE
UNDERLYING
PROGRAM
IS
COMPUTING
A
FUNCTION
F
AND
WE
HAVE
A
PARTIAL
ASSIGNMENT
J
Σ
THEN
WE
DENOTE
THE
RESULTING
FUNCTION
BY
F
Σ
DEFINITION
FUNCTIONALLY
EQUIVALENT
ASSIGNMENTS
FIX
A
FUNCTION
F
AND
CONSIDER
THE
TWO
PARTIAL
ASSIGNMENTS
OVER
THE
SAME
INPUT
VARIABLES
J
AND
J
WE
SAY
THAT
THESE
ASSIGNMENTS
ARE
FUNCTIONALLY
EQUIVALENT
RELATIVE
TO
F
IF
F
F
ASSUMPTION
EQUIVALENT
PROGRAM
INDISTINGUISHABILITY
FOR
ANY
LENGTH
N
BRANCHING
PROGRAM
BP
COMPUTING
A
FUNCTION
F
AND
ANY
TWO
PARTIAL
ASSIGNMENTS
ON
THE
SAME
VARIABLES
J
AND
J
IF
THESE
ASSIGNMENTS
ARE
FUNCTIONALLY
EQUIVALENT
RELATIVE
TO
F
THEN
THE
FOLLOWING
TWO
ENSEMBLES
OF
GARBLED
PROGRAM
DISTRIBUTIONS
ARE
COMPUTATIONALLY
INDISTINGUISHABLE
GARBLE
RN
D
P
BP
J
Λ
N
C
GARBLE
RN
D
P
BP
J
Λ
N
WHERE
THE
GARBLING
IS
DONE
USING
A
MULTILINEAR
JIGSAW
PUZZLES
SCHEME
AND
THE
LENGTH
OF
P
IS
AN
APPROPRIATE
POLYNOMIAL
IN
Λ
N
OUR
CANDIDATE
THEOREM
UNDER
THE
EQUIVALENT
PROGRAM
INDISTINGUISHABILITY
ASSUMPTION
ASSUMPTION
THERE
EXISTS
AN
IO
FOR
CIRCUITS
PROOF
FIX
A
CONSTANT
Γ
AND
FOR
EVERY
VALUE
OF
THE
SECURITY
PARAMETER
Λ
LET
CΛ
BE
THE
CLASS
OF
CIRCUITS
OF
DEPTH
Γ
LOG
Λ
AND
SIZE
AT
MOST
Λ
LET
UΛ
BE
A
POLY
SIZED
LOGDEPTH
UNIVERSAL
CIRCUIT
FOR
THIS
CIRCUIT
CLASS
WHERE
UΛ
C
M
C
M
FOR
ALL
C
CΛ
AND
M
N
FURTHERMORE
ALL
CIRCUITS
C
CΛ
CAN
BE
ENCODED
AS
AN
Λ
BIT
STRING
AS
INPUT
TO
U
LET
U
BPΛ
C
M
BE
THE
UNIVERSAL
BRANCHING
PROGRAM
WHICH
WAS
OBTAINED
BY
APPLYING
BARRINGTON
THEOREM
TO
A
UNIVERSAL
CIRCUIT
UΛ
C
M
ITS
EXISTENCE
IS
GUARANTEED
BY
THEOREM
DENOTE
BY
IC
THE
STEPS
IN
THE
PROGRAM
U
BPΛ
THAT
EXAMINE
THE
INPUT
BITS
FROM
THE
C
INPUT
AND
FOR
EACH
PARTICULAR
CIRCUIT
C
DENOTE
BY
IC
ΣC
THE
PARTIAL
ASSIGNMENT
THAT
FIXES
THE
BITS
OF
THAT
CIRCUIT
IN
THE
INPUT
OF
U
BPΛ
THE
OBFUSCATOR
ON
INPUT
CIRCUIT
C
SIMPLY
APPLIES
OUR
GARBLING
METHOD
FROM
SECTION
TO
U
BPΛ
WITH
PARAMETER
FIXING
IC
ΣC
NAMELY
WE
HAVE
IO
Λ
C
GARBLE
RN
D
P
U
BPΛ
IC
ΣC
FUNCTIONALITY
AND
POLYNOMIAL
SLOWDOWN
ARE
OBVIOUS
NOTE
THAT
FOR
ANY
TWO
CIRCUITS
THAT
ARE
OF
THE
SAME
SIZE
AND
COMPUTE
THE
SAME
FUNCTION
WE
HAVE
THAT
U
BP
U
BP
NEXT
ASSUMPTION
DIRECTLY
IMPLIES
THAT
FOR
SUFFICIENTLY
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
LARGE
Λ
THE
DISTRIBUTIONS
IO
Λ
GARBLE
RN
D
P
U
BPΛ
IC
AND
IO
Λ
GARBLE
RN
D
P
U
BPΛ
IC
ARE
COMPUTATIONALLY
INDISTINGUISHABLE
AMPLIFYING
TO
POLY
SIZED
CIRCUIT
INDISTINGUISHABILITY
OBFUSCATION
IN
THIS
SECTION
WE
SHOW
HOW
TO
ACHIEVE
POLY
SIZED
CIRCUIT
INDISTINGUISHABILITY
OBFUSCATION
FROM
AN
INDISTINGUISHABILITY
OBFUSCATOR
FOR
CIRCUITS
IN
IN
ADDITION
TO
IO
OUR
CONSTRUCTION
MAKES
USE
OF
TWO
PRIMITIVES
PERFECTLY
SOUND
NONINTERACTIVE
WITNESS
INDISTINGUISHABLE
PROOFS
AND
LEVELED
HOMOMORPHIC
ENCRYPTION
WE
ALSO
MAKE
USE
OF
THE
FACT
THAT
ANY
POLY
TIME
CIRCUIT
COMPUTATION
CAN
BE
VERIFIED
BY
A
LOW
DEPTH
CIRCUIT
IN
BACKGROUND
MATERIAL
FOR
THESE
PRIMITIVES
CAN
BE
FOUND
IN
APPENDIX
B
WE
LET
HE
KEYGEN
HE
ENC
HE
DEC
HE
EVAL
BE
A
LEVELED
HOMOMORPHIC
ENCRYPTION
SCHEME
FURTHERMORE
WE
ASSUME
THE
DECRYPTION
ALGORITHM
HE
DEC
CAN
BE
REALIZED
BY
A
FAMILY
OF
CIRCUITS
IN
AND
THAT
THE
SYSTEM
HAS
PERFECT
CORRECTNESS
OUR
CONSTRUCTION
CONSIDER
A
FAMILY
OF
CIRCUIT
CLASSES
CΛ
FOR
Λ
N
WHERE
THE
INPUT
SIZE
N
AND
THE
MAXIMUM
CIRCUIT
SIZE
ARE
POLYNOMIAL
FUNCTIONS
OF
Λ
LET
UΛ
BE
A
POLY
SIZED
UNIVERSAL
CIRCUIT
FAMILY
FOR
THESE
CIRCUIT
CLASSES
WHERE
UΛ
C
M
C
M
FOR
ALL
C
CΛ
AND
M
N
FURTHERMORE
ALL
CIRCUITS
C
CΛ
CAN
BE
ENCODED
AS
AN
Λ
A
POLYNOMIAL
FUNCTIONS
OF
Λ
BIT
STRING
AS
INPUT
TO
U
WE
NOTE
THAT
THIS
MAY
REQUIRE
SOME
PADDING
SINCE
CIRCUITS
IN
THE
FAMILY
ARE
NOT
REQUIRED
TO
BE
ALL
OF
THE
SAME
SIZE
WE
SHOW
HOW
TO
BUILD
AN
IO
FOR
SUCH
A
CIRCUIT
CLASS
GIVEN
AN
INDISTINGUISHABILITY
OBFUSCATOR
FOR
CIRCUITS
IN
OUR
CONSTRUCTION
IS
DESCRIBED
BY
AN
OBFUSCATION
ALGORITHM
AND
AN
EVALUATION
ALGORITHM
OBFUSCATE
C
CΛ
THE
OBFUSCATE
ALGORITHM
TAKES
THE
SECURITY
PARAMETER
Λ
AND
A
CIRCUIT
C
AND
COMPUTES
HE
KEYGEN
AND
HE
KEYGEN
ARE
GENERATED
IF
WE
ARE
USING
A
LEVELED
HE
SCHEME
THE
NUMBER
OF
LEVELS
SHOULD
BE
SET
TO
BE
THE
DEPTH
OF
UΛ
ENCRYPT
HE
ENC
C
AND
HE
ENC
C
HERE
WE
ASSUME
THAT
C
IS
ENCODED
IN
A
CANONICAL
FORM
AS
AN
BIT
STRING
FOR
USE
BY
THE
UNIVERSAL
CIRCUIT
UΛ
GENERATE
AN
N
C
OBFUSCATION
FOR
PROGRAM
SKHE
AS
P
SKHE
SEE
FIGURE
THE
OBFUSCATION
COMPONENTS
ARE
OUTPUTED
AS
Σ
P
EVALUATE
Σ
P
M
THE
EVALUATE
ALGORITHM
TAKES
IN
THE
OBFUSCATION
OUTPUT
Σ
AND
PROGRAM
INPUT
M
AND
COMPUTES
THE
FOLLOWING
COMPUTE
HE
EVAL
UΛ
M
AND
HE
EVAL
UΛ
M
TECHNICALLY
WE
COULD
MAKE
DO
WITH
JUST
A
SINGLE
OBFUSCATION
ALGORITHM
THAT
OUTPUTS
A
CIRCUIT
DESCRIPTION
AS
IS
THE
CONVENTION
GIVEN
IN
SECTION
HOWEVER
FOR
THE
EXPOSITION
OF
THIS
CONSTRUCTION
WE
HAVE
THE
OBFUSCATION
ALGORITHM
OUTPUT
CRYPTOGRAPHIC
MATERIAL
THAT
IS
USED
BY
THE
EVALUATION
ALGORITHM
THE
CIRCUIT
U
M
IS
THE
UNIVERSAL
CIRCUIT
WITH
M
HARDWIRED
IN
AS
AN
INPUT
THIS
IN
HARDWIRED
Λ
CIRCUIT
TAKES
IN
AN
BIT
CIRCUIT
DESCRIPTION
C
AS
ITS
INPUT
AND
EVALUATES
TO
U
C
M
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GIVEN
INPUT
M
Φ
SKHE
PROCEEDS
AS
FOLLOWS
CHECK
IF
Φ
IS
A
VALID
LOW
DEPTH
PROOF
FOR
THE
NP
STATEMENT
HE
EVAL
UΛ
M
HE
EVAL
UΛ
M
IF
THE
CHECK
FAILS
OUTPUT
OTHERWISE
OUTPUT
HE
DEC
FIG
GIVEN
INPUT
M
Φ
SKHE
PROCEEDS
AS
FOLLOWS
CHECK
IF
Φ
IS
A
VALID
LOW
DEPTH
PROOF
FOR
THE
NP
STATEMENT
HE
EVAL
UΛ
M
HE
EVAL
UΛ
M
IF
THE
CHECK
FAILS
OUTPUT
OTHERWISE
OUTPUT
HE
DEC
FIG
COMPUTE
A
LOW
DEPTH
PROOF
Φ
THAT
AND
WERE
COMPUTED
CORRECTLY
BACKGROUND
MATERIAL
FOR
LOW
DEPTH
PROOFS
CAN
BE
FOUND
IN
APPENDIX
B
WE
NOTE
THAT
THIS
STATEMENT
FOR
WHICH
PROOF
IS
BEING
GIVEN
IS
IN
P
RUN
P
M
Φ
AND
OUTPUT
THE
RESULT
CORRECTNESS
TO
VERIFY
CORRECTNESS
WE
FIRST
CHECK
THAT
THE
SIZE
OF
THE
CIRCUITS
EVALUATING
SKHE
ARE
IN
STEP
OF
THE
PROGRAM
IS
IN
SINCE
IT
INVOLVES
VERIFICATION
OF
A
LOW
DEPTH
PROOF
AS
DESCRIBED
IN
APPENDIX
B
THE
SECOND
STEP
OF
THE
PROGRAM
IS
ALSO
IN
SINCE
WE
USE
AN
HE
SCHEME
WITH
DECRYPTION
IN
SINCE
BOTH
STEPS
ARE
IN
THE
ENTIRE
CIRCUIT
IS
IN
THE
CORRECTNESS
OF
HE
IMPLIES
THAT
THE
EVALUATED
CIPHERTEXT
WILL
BE
AN
ENCRYPTION
OF
THE
VALUE
U
C
M
C
M
NEXT
THE
CORRECTNESS
OF
THE
IMPLIES
THAT
P
IMPLEMENTS
THE
SAME
FUNCTION
AS
P
THESE
TWO
FACTS
TOGETHER
IMPLY
THE
CORRECTNESS
OF
THE
OBFUSCATION
SCHEME
PROOF
OF
SECURITY
WE
PROVE
THAT
FOR
ALL
CΛ
SUCH
THAT
THEY
ARE
FUNCTIONALLY
EQUIVALENT
THERE
CAN
BE
NO
POLY
TIME
INDISTINGUISHABILITY
ATTACKER
A
THAT
WINS
THE
SECURITY
GAME
FROM
DEFINITION
WITH
NONNEGLIGIBLE
ADVANTAGE
WE
ORGANIZE
OUR
PROOF
INTO
A
SEQUENCE
OF
HYBRIDS
IN
THE
FIRST
HYBRID
THE
CHALLENGER
OBFUSCATES
WE
THEN
GRADUALLY
CHANGE
THE
OBFUSCATION
IN
MULTIPLE
HYBRID
STEPS
INTO
AN
OBFUSCATION
OF
WE
SHOW
THAT
EACH
SUCCESSIVE
HYBRID
EXPERIMENT
IS
INDISTINGUISHABLE
FROM
THE
LAST
THUS
SHOWING
OUR
OBFUSCATOR
TO
HAVE
INDISTINGUISHABILITY
SECURITY
THE
PROOF
HYBRID
STEPS
THEMSELVES
PRIMARILY
WEAVE
BACK
AND
FORTH
BETWEEN
CHANGING
THE
UNDERLYING
CIPHERTEXTS
AND
THE
PROGRAMS
THAT
ARE
USED
IN
A
TWO
KEY
PROOF
TYPE
MANNER
THE
CHANGES
PROGRAM
THAT
WE
WILL
USE
IS
DESCRIBED
IN
FIGURE
SEQUENCE
OF
HYBRIDS
THIS
HYBRID
CORRESPONDS
TO
A
HONEST
EXECUTION
OF
THE
INDISTINGUISHABILITY
OBFUSCATION
GAME
WHERE
IS
OBFUSCATED
THIS
IS
THE
SAME
AS
HYBRID
EXCEPT
WE
SET
HE
ENC
HE
ENC
NOW
AND
ENCRYPT
DIFFERENT
CIRCUITS
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
WE
STILL
GENERATE
HE
ENC
AND
HE
ENC
AS
IN
NOW
P
IS
CREATED
AS
P
SKHE
WE
NOW
GENERATE
HE
ENC
AND
HE
ENC
THE
OBFUSCATED
PROGRAM
P
IS
STILL
CREATED
AS
P
SKHE
WE
STILL
GENERATE
HE
ENC
AND
HE
ENC
AS
IN
NOW
P
IS
CREATED
AS
P
SKHE
NOTE
THAT
THIS
HYBRID
CORRESPONDS
TO
AN
HONEST
EXECUTION
OF
THE
INDISTINGUISHABILITY
OBFUSCATION
GAME
WHERE
IS
OBFUSCATED
PROOFS
OF
HYBRID
ARGUMENTS
CLAIM
IF
OUR
HE
SCHEME
IS
IND
CPA
SECURE
THEN
NO
POLY
TIME
ATTACKER
CAN
DISTINGUISH
WITH
NONNEGLIGIBLE
PROBABILITY
BETWEEN
AND
PROOF
WE
SHOW
THAT
IF
THERE
IS
A
POLY
TIME
ATTACKER
A
THAT
HAS
A
NONNEGLIGIBLE
DIFFERENCE
IN
ADVANTAGE
BETWEEN
AND
THEN
THERE
IS
A
POLY
TIME
ALGORITHM
B
THAT
BREAKS
THE
IND
CPA
SECURITY
OF
OUR
PKE
SCHEME
B
ON
INPUT
BEGINS
BY
RUNNING
A
B
GENERATES
BY
ITSELF
AND
GETS
FROM
THE
IND
CPA
CHALLENGER
NEXT
IT
GIVES
THE
IND
CPA
CHALLENGER
AND
GETS
BACK
A
CIPHERTEXT
G
IT
SETS
G
B
THEN
SETS
HE
ENC
AND
P
IS
CREATED
AS
P
SKHE
NOTE
THAT
ONLY
THE
FIRST
SECRET
KEY
IS
NEEDED
TO
CREATE
P
IF
THE
IND
CPA
CHALLENGER
USED
THE
FIRST
MESSAGE
THEN
WE
ARE
EXACTLY
IN
HYBRID
IF
IT
CHOSE
THE
SECOND
MESSAGE
THEN
WE
ARE
IN
THEREFORE
IF
AN
ATTACKER
CAN
DISTINGUISH
BETWEEN
THE
TWO
HYBRIDS
WITH
NONNEGLIGIBLE
ADVANTAGE
IT
WILL
BREAK
THE
IND
CPA
PROPERTY
OF
THE
HE
SCHEME
CLAIM
IF
THE
FAMILY
IO
DEFINITION
HOLDS
FOR
OUR
INDISTINGUISHABILITY
OBFUSCATOR
THEN
NO
POLY
TIME
ATTACKER
CAN
DISTINGUISH
BETWEEN
AND
PROOF
GIVEN
AN
ATTACKER
A
THAT
CAN
DISTINGUISH
BETWEEN
AND
WE
WILL
DESCRIBE
CONSTRUCTIONS
OF
A
SAMPLER
SAMP
AND
A
DISTINGUISHER
D
OUR
SAMP
WILL
BE
SUCH
THAT
WITH
OVERWHELMING
PROBABILITY
IT
YIELDS
CIRCUITS
AND
WHICH
ARE
FUNCTIONALLY
EQUIVALENT
WHERE
Σ
SAMP
HOWEVER
THE
DISTINGUISHER
D
WILL
HAVE
A
NONNEGLIGIBLE
CHANCE
OF
DISTINGUISHING
BETWEEN
OBFUSCATIONS
OF
AND
EVEN
WHEN
IT
IS
GIVEN
Σ
SAMP
FIRST
GENERATES
THE
TWO
HE
PRIVATE
KEYS
ITSELF
KEEPING
BOTH
SECRET
KEYS
IT
THEN
CREATES
HE
ENC
AND
HE
ENC
NEXT
IT
OUTPUTS
THE
CIRCUITS
SKHE
AND
SKHE
AS
AND
AND
SETS
Σ
OUR
DISTINGUISHER
D
WORKS
AS
FOLLOWS
GIVEN
AN
OBFUSCATION
P
OF
EITHER
OR
AND
Σ
IT
EXECUTES
A
WITH
INPUT
P
D
OUTPUTS
THE
OUTPUT
OF
A
GIVEN
THAT
THE
OUTPUT
OF
IS
EQUIVALENT
TO
THE
OUTPUT
OF
ON
ALL
INPUTS
WE
HAVE
THAT
BOTH
PROGRAMS
SKHE
AND
SKHE
WILL
HAVE
THE
SAME
OUTPUT
ON
ALL
INPUTS
BOTH
INPUTS
WILL
HALT
AND
OUTPUT
IF
THE
CHECK
DOES
NOT
PASS
IF
THE
CHECK
DOES
PASS
THIS
MEANS
THAT
AND
ARE
ENCRYPTIONS
OF
THE
SAME
MESSAGE
THIS
IS
DUE
TO
THE
PERFECT
CORRECTNESS
OF
HE
SCHEME
WITH
THE
FACT
THAT
U
M
U
M
FOR
ALL
M
SINCE
BOTH
OF
THE
PROGRAMS
GIVE
THE
SAME
OUTPUT
ON
ALL
INPUTS
WE
ARE
IN
A
VALID
INSTANCE
OF
THE
ASSUMPTION
IF
THE
CHALLENGER
USED
THE
FIRST
CIRCUIT
SKHE
IN
GENERATION
OF
P
THEN
WE
ARE
EXACTLY
IN
HYBRID
IF
IT
CHOSE
THE
SECOND
CIRCUIT
SKHE
THEN
WE
ARE
IN
THEREFORE
IF
AN
ATTACKER
CAN
DISTINGUISH
BETWEEN
THE
TWO
HYBRIDS
WITH
NONNEGLIGIBLE
ADVANTAGE
IT
WILL
BREAK
THE
INDISTINGUISHABILITY
SECURITY
OF
THE
OBFUSCATOR
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
CLAIM
IF
OUR
HE
SCHEME
IS
IND
CPA
SECURE
THEN
NO
POLY
TIME
ATTACKER
CAN
DISTINGUISH
WITH
NONNEGLIGIBLE
PROBABILITY
BETWEEN
AND
PROOF
THE
PROOF
IS
ANALOGOUS
TO
THE
PROOF
OF
CLAIM
CLAIM
IF
THE
FAMILY
IO
DEFINITION
HOLDS
FOR
OUR
INDISTINGUISHABILITY
OBFUSCATOR
THEN
NO
POLY
TIME
ATTACKER
CAN
DISTINGUISH
BETWEEN
AND
PROOF
THE
PROOF
IS
ANALOGOUS
TO
THE
PROOF
OF
CLAIM
THEOREM
UNDER
THE
ASSUMPTIONS
LISTED
ABOVE
OUR
IO
FOR
POLY
SIZED
CIRCUITS
IS
SECURE
IN
THE
INDISTINGUISHABILITY
GAME
DEFINED
IN
DEFINITION
PROOF
OUR
CLAIMS
SHOW
A
SUCCESSION
OF
FIVE
HYBRIDS
WHERE
NO
POLY
TIME
ATTACKER
CAN
DISTINGUISH
ONE
FROM
THE
NEXT
WITH
NONNEGLIGIBLE
ADVANTAGE
THE
FIRST
HYBRID
CORRESPONDS
TO
OBFUSCATING
CIRCUIT
AND
THE
LAST
HYBRID
CORRESPONDS
TO
OBFUSCATING
THE
CIRCUIT
IN
THE
INDISTINGUISHABILITY
SECURITY
GAME
SECURITY
IN
THE
INDISTINGUISHABILITY
GAME
FOLLOWS
FUNCTIONAL
ENCRYPTION
OUR
SYNTAX
FOR
FUNCTIONAL
ENCRYPTION
ROUGHLY
FOLLOWS
IN
THE
LINE
OF
BONEH
SAHAI
WATERS
EXCEPT
WE
SPECIALIZE
OUR
NOTATION
FOR
THE
CASE
WHERE
THE
PRIVATE
KEY
IS
A
FUNCTION
F
AND
THE
CIPHERTEXT
INPUT
IS
A
MESSAGE
M
THIS
IS
WITHOUT
LOSS
OF
GENERALITY
WHEN
F
CAN
BE
ANY
POLY
SIZED
CIRCUIT
AND
THUS
INCLUDES
A
UNIVERSAL
CIRCUIT
FOR
SECURITY
WE
USE
THE
INDISTINGUISHABILITY
NOTION
WHICH
WAS
THE
FIRST
ONE
CONSIDERED
FOR
FUNCTIONAL
ENCRYPTION
AS
WELL
AS
PREDICATE
ENCRYPTION
INDISTINGUISHABILITY
IS
A
BASIC
NOTION
OF
SECURITY
WHICH
MAY
BE
ENOUGH
FOR
SOME
APPLICATIONS
AND
FURTHERMORE
DE
CARO
ET
AL
CIJ
SHOW
HOW
ONE
CAN
TRANSFORM
A
SYSTEM
WITH
INDISTINGUISHABILITY
SECURITY
INTO
ONE
WITH
MEANINGFUL
STRONG
SIMULATION
SECURITY
IN
PARTICULAR
THE
RESULTING
SCHEME
IS
SIMULATION
SECURE
FOR
A
BOUNDED
NUMBER
OF
ENCRYPTION
AND
NONADAPTIVE
KEY
QUERIES
BUT
AN
UNBOUNDED
NUMBER
OF
ADAPTIVE
KEY
QUERIES
DEFINITION
FUNCTIONAL
ENCRYPTION
A
FUNCTIONAL
ENCRYPTION
SCHEME
FOR
A
CLASS
OF
FUNCTIONS
F
F
Λ
OVER
MESSAGE
SPACE
M
MΛ
CONSISTS
OF
FOUR
ALGORITHMS
F
E
SETUP
KEYGEN
ENCRYPT
DECRYPT
SETUP
A
POLYNOMIAL
TIME
RANDOMIZED
ALGORITHM
THAT
TAKES
THE
UNITARY
REPRESENTATION
OF
THE
SECURITY
PARAMETER
Λ
AND
OUTPUTS
PUBLIC
PARAMETERS
PP
AND
A
MASTER
SECRET
KEY
MSK
KEYGEN
MSK
F
A
POLYNOMIAL
TIME
RANDOMIZED
ALGORITHM
THAT
TAKES
AS
INPUT
THE
MASTER
SECRET
KEY
MSK
AND
A
DESCRIPTION
OF
FUNCTION
F
F
AND
OUTPUTS
A
CORRESPONDING
SECRET
KEY
SKF
ENCRYPT
PP
M
A
POLYNOMIAL
TIME
RANDOMIZED
ALGORITHM
THAT
TAKES
THE
PUBLIC
PARAMETERS
PP
AND
A
MESSAGE
M
M
AND
OUTPUTS
A
CIPHERTEXT
CT
DECRYPT
SKF
CT
A
POLYNOMIAL
TIME
ALGORITHM
THAT
TAKES
A
SECRET
KEY
SKF
AND
CIPHERTEXT
ENCRYPTING
MESSAGE
M
M
AND
OUTPUTS
F
M
A
FUNCTIONAL
ENCRYPTION
SCHEME
FOR
F
IS
CORRECT
IF
THERE
EXISTS
A
NEGLIGIBLE
FUNCTION
Α
SUCH
THAT
FOR
ALL
F
FΛ
AND
ALL
MESSAGES
M
MΛ
PR
PP
MSK
SETUP
DECRYPT
KEYGEN
MSK
F
ENCRYPT
PP
M
F
M
Α
Λ
INDISTINGUISHABILITY
SECURITY
FOR
FUNCTIONAL
ENCRYPTION
WE
DESCRIBE
INDISTINGUISHABILITY
SECURITY
AS
A
MULTIPHASED
GAME
BETWEEN
AN
ATTACKER
A
AND
A
CHALLENGER
SETUP
THE
CHALLENGERS
RUNS
PP
MSK
SETUP
AND
GIVES
PP
TO
A
QUERY
A
ADAPTIVELY
SUBMITS
QUERIES
F
IN
FΛ
AND
IS
GIVEN
SKF
KEYGEN
MSK
F
THIS
STEP
CAN
BE
REPEATED
ANY
POLYNOMIAL
NUMBER
OF
TIMES
BY
THE
ATTACKER
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
CHALLENGE
A
SUBMITS
TWO
MESSAGES
MΛ
SUCH
THAT
F
F
FOR
ALL
F
QUERIED
IN
THE
KEY
QUERY
PHASE
THE
CHALLENGER
SAMPLES
A
RANDOM
BIT
B
AND
GIVES
A
THE
VALUE
ENCRYPT
PP
MB
QUERY
A
CONTINUES
TO
ISSUE
KEY
QUERIES
AS
BEFORE
SUBJECT
TO
THE
SAME
RESTRICTION
THAT
ANY
F
QUERIED
MUST
SATISFY
F
F
GUESS
A
EVENTUALLY
OUTPUTS
A
BIT
B
IN
THE
ADVANTAGE
OF
AN
ALGORITHM
A
IN
THIS
GAME
IS
ADVA
PR
B
B
DEFINITION
A
FUNCTIONAL
ENCRYPTION
SCHEME
IS
INDISTINGUISHABILITY
SECURE
IF
FOR
ALL
POLY
TIME
A
THE
FUNCTION
ADVA
Λ
IS
NEGLIGIBLE
WE
ALSO
CONSIDER
A
WEAKER
SELECTIVE
VARIANT
OF
SECURITY
FOR
INDISTINGUISHABILITY
THE
SELECTIVE
GAME
IS
EQUIVALENT
TO
THE
ADAPTIVE
ONE
WITH
THE
EXCEPTION
THAT
THE
ATTACKER
MUST
DECLARE
THE
CHALLENGE
MESSAGES
IN
AN
INIT
PHASE
THAT
OCCURS
BEFORE
IT
SEES
THE
PUBLIC
PARAMETERS
DEFINITION
A
FUNCTIONAL
ENCRYPTION
SCHEME
IS
SELECTIVELY
INDISTINGUISHABILITY
SECURE
IF
FOR
ALL
POLY
TIME
A
THE
ADVANTAGE
OF
A
IS
NEGLIGIBLE
IN
THE
SELECTIVE
INDISTINGUISHABILITY
SECURITY
GAME
REMARKS
AND
TRANSFORMATIONS
WE
MAKE
A
FEW
REMARKS
ABOUT
THE
ABOVE
DEFINITIONS
FIRST
WE
OBSERVE
THAT
ANY
SYSTEM
THAT
IS
SELECTIVELY
SECURE
CAN
BE
ARGUED
TO
BE
ADAPTIVELY
SECURE
E
G
AS
NOTED
IN
IF
WE
ARE
WILLING
TO
UTILIZE
COMPLEXITY
LEVERAGING
AND
LOSE
A
FACTOR
OF
M
IN
THE
SECURITY
REDUCTION
OUR
CONSTRUCTION
IN
THE
NEXT
SECTION
WILL
USE
THE
SELECTIVE
NOTION
SECOND
OUR
DEFINITION
CONSIDERS
A
SINGLE
CHALLENGE
CIPHERTEXT
HOWEVER
USING
THE
USUAL
HYBRID
METHODS
IT
CAN
BE
SHOWN
THAT
ANY
SYSTEM
INDISTINGUISHABILITY
SECURE
UNDER
THIS
DEFINITION
IS
SECURE
UNDER
A
MULTIPLE
MESSAGE
DEFINITION
SUCH
AS
THAT
USED
IN
CIJ
STATISTICAL
SIMULATION
SOUND
NON
INTERACTIVE
ZERO
KNOWLEDGE
PROOFS
IN
THIS
SECTION
WE
DEFINE
STATISTICAL
SIMULATION
SOUND
NONINTERACTIVE
ZERO
KNOWLEDGE
PROOFS
WHICH
WILL
BE
NEEDED
IN
OUR
CONSTRUCTION
IN
THE
NEXT
SUBSECTION
LET
R
BE
AN
EFFICIENTLY
COMPUTABLE
BINARY
RELATION
FOR
PAIRS
X
W
R
WE
CALL
X
THE
STATEMENT
AND
W
THE
WITNESS
LET
L
BE
THE
LANGUAGE
CONSISTING
OF
STATEMENTS
IN
R
A
NONINTERACTIVE
PROOF
SYSTEM
FOR
A
RELATION
R
CONSISTS
OF
A
COMMON
REFERENCE
STRING
GENERATION
ALGORITHM
K
A
PROVER
P
AND
A
VERIFIER
V
WE
REQUIRE
THAT
THEY
ALL
BE
PROBABILISTIC
POLYNOMIAL
TIME
ALGORITHMS
I
E
WE
ARE
LOOKING
AT
EFFICIENT
PROVER
PROOFS
THE
COMMON
REFERENCE
STRING
GENERATION
ALGORITHM
PRODUCES
A
COMMON
REFERENCE
STRING
Σ
OF
LENGTH
Ω
Λ
THE
PROVER
TAKES
AS
INPUT
Σ
X
W
AND
PRODUCES
A
PROOF
Π
THE
VERIFIER
TAKES
AS
INPUT
Σ
X
Π
AND
OUTPUTS
IF
THE
PROOF
IS
ACCEPTABLE
AND
OTHERWISE
WE
CALL
K
P
V
A
NONINTERACTIVE
PROOF
SYSTEM
FOR
R
IF
IT
HAS
THE
COMPLETENESS
AND
STATISTICAL
SOUNDNESS
PROPERTIES
DESCRIBED
BELOW
PERFECT
COMPLETENESS
A
PROOF
SYSTEM
IS
COMPLETE
IF
AN
HONEST
PROVER
WITH
A
VALID
WITNESS
CAN
CONVINCE
AN
HONEST
VERIFIER
FORMALLY
WE
REQUIRE
THAT
FOR
ALL
X
W
R
FOR
ALL
Σ
K
AND
Π
P
Σ
X
W
WE
HAVE
THAT
V
Σ
X
Π
STATISTICAL
SOUNDNESS
A
PROOF
SYSTEM
IS
SOUND
IF
IT
IS
INFEASIBLE
TO
CONVINCE
AN
HONEST
VERIFIER
WHEN
THE
STATEMENT
IS
FALSE
FOR
ALL
EVEN
UNBOUNDED
ADVERSARIES
A
WE
HAVE
PR
Σ
K
X
Π
A
Σ
V
Σ
X
Π
X
L
NEGL
Λ
COMPUTATIONAL
ZERO
KNOWLEDGE
A
PROOF
SYSTEM
IS
COMPUTATIONAL
ZERO
KNOWLEDGE
IF
THE
PROOFS
DO
NOT
REVEAL
ANY
INFORMATION
ABOUT
THE
WITNESSES
TO
A
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
BOUNDED
ADVERSARY
WE
SAY
A
NONINTERACTIVE
PROOF
K
P
V
IS
COMPUTATIONAL
ZEROKNOWLEDGE
IF
THERE
EXISTS
A
POLYNOMIAL
TIME
SIMULATOR
SIM
WHICH
RETURNS
A
SIMULATED
COMMON
REFERENCE
STRING
TOGETHER
A
SIMULATED
PROOF
FOR
ALL
NONUNIFORM
POLYNOMIAL
TIME
ADVERSARIES
A
WE
HAVE
FOR
ALL
X
W
R
PR
Σ
K
Π
P
Σ
X
W
A
X
Σ
Π
PR
Σ
Π
SIM
X
A
X
Σ
Π
TYPICALLY
IN
THE
ZERO
KNOWLEDGE
LITERATURE
FOR
EXAMPLE
AS
IN
THE
SIMULATED
CRS
IS
REQUIRED
TO
BE
INDEPENDENT
OF
THE
STATEMENT
FOR
WHICH
THE
SIMULATED
PROOF
IS
PROVIDED
THIS
REQUIREMENT
IS
NOT
ESSENTIAL
FOR
US
AND
WE
ONLY
DEFINE
THE
WEAKER
VARIANT
AS
ABOVE
STATISTICAL
SIMULATION
SOUNDNESS
SSS
A
PROOF
SYSTEM
IS
SAID
TO
BE
STATISTICALLY
SIMULATION
SOUND
IF
IT
IS
INFEASIBLE
TO
CONVINCE
AN
HONEST
VERIFIER
OF
A
FALSE
STATEMENT
EVEN
WHEN
THE
ADVERSARY
ITSELF
IS
PROVIDED
WITH
A
SIMULATED
PROOF
FOR
ALL
STATEMENTS
X
WE
HAVE
L
NEGL
Λ
PR
Σ
Π
SIM
X
X
Π
X
X
V
Σ
X
Π
X
WE
NOTE
THAT
THIS
NEW
NOTION
OF
SOUNDNESS
REQUIRES
THAT
EXCEPT
WITH
RESPECT
TO
ONE
PARTICULAR
STATEMENT
TO
BE
SIMULATED
ALL
OTHER
VALID
PROOFS
THAT
EXIST
MUST
BE
ONLY
FOR
TRUE
STATEMENTS
THIS
IS
DIFFERENCE
FROM
SAHAI
SIMULATION
SOUND
NONINTERACTIVE
ZERO
KNOWLEDGE
PROOFS
SAHAI
PROOF
SYSTEM
REQUIRED
THAT
A
COMPUTATIONALLY
BOUNDED
ATTACKER
EVEN
WITH
ACCESS
TO
SIMULATED
PROOFS
CANNOT
COME
UP
WITH
A
PROOF
FOR
FALSE
STATEMENTS
HOWEVER
SUCH
PROOFS
FOR
FALSE
STATEMENTS
MIGHT
STILL
EXIST
IN
OUR
CASE
SUCH
PROOFS
DO
NOT
EXIST
WE
STRESS
THAT
OUR
NEW
PROOF
SYSTEM
IS
NOT
STRONGER
THAN
THE
SAHAI
PROOF
SYSTEM
IN
PARTICULAR
IN
OUR
CASE
THE
SIMULATOR
CAN
GENERATE
SIMULATED
PROOF
FOR
ONLY
ONE
STATEMENT
FIXED
IN
ADVANCE
AND
EVEN
A
BOUNDED
ATTACKER
MIGHT
BE
ABLE
TO
GENERATE
FAKE
PROOFS
FOR
THIS
STATEMENT
REALIZING
STATISTICAL
SIMULATION
SOUNDNESS
CONSTRUCTIONS
OF
NONINTERACTIVE
ZEROKNOWLEDGE
NIZK
PROOF
SYSTEM
ARE
WELL
KNOWN
NOW
WE
WILL
DESCRIBE
HOW
A
NIZK
PROOF
SYSTEM
CAN
BE
USED
TO
REALIZE
A
SSS
NIZK
PROOF
SYSTEM
FORMALLY
USING
A
NIZK
PROOF
SYSTEM
K
P
V
AND
A
NONINTERACTIVE
COMMITMENT
SCHEME
COM
WE
WILL
CONSTRUCT
A
NIZK
PROOF
K
P
V
THAT
IS
ALSO
STATISTICALLY
SIMULATION
SOUND
LET
BE
AN
UPPER
BOUND
ON
THE
LENGTH
OF
THE
STATEMENTS
PROVEN
AND
LET
REPRESENT
A
SPECIAL
STATEMENT
THAT
IS
NEVER
PROVEN
K
GENERATE
Σ
K
AND
C
COM
R
WHERE
R
ARE
THE
RANDOM
COINS
AND
OUTPUT
THE
COMMON
RANDOM
STRING
AS
Σ
Σ
C
P
Σ
Σ
C
X
W
GENERATE
THE
PROOF
Π
AS
P
Σ
X
W
R
WHERE
X
IS
THE
FOLLOWING
STATEMENT
W
R
SUCH
THAT
X
W
R
C
COM
X
R
V
Σ
X
Π
THE
VERIFIER
V
OUTPUTS
V
Σ
X
Π
WHERE
X
IS
THE
STATEMENT
AS
IN
CORRECTNESS
THE
CORRECTNESS
OF
THE
SCHEME
K
P
V
FOLLOWS
DIRECTLY
FROM
THE
CORRECTNESS
OF
K
P
V
ZERO
KNOWLEDGE
WE
WILL
START
BY
DESCRIBING
OUR
SIMULATOR
SIM
ASSUMING
THE
SIMULATOR
SIM
FOR
K
P
V
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
SIM
X
GENERATES
THE
COMMON
RANDOM
STRING
Σ
Σ
C
WHERE
Σ
K
AND
C
COM
X
R
SIM
GENERATES
THE
PROOF
FOR
X
FROM
EQUATION
USING
THE
RANDOMNESS
R
MORE
SPECIFICALLY
IT
JUST
OUTPUTS
P
Σ
X
W
R
THE
ZERO
KNOWLEDGE
PROPERTY
OF
OUR
SIMULATOR
FOLLOWS
FROM
THE
FOLLOWING
SIMPLE
HYBRID
ARGUMENT
THIS
HYBRID
CORRESPONDS
TO
THE
HONEST
GENERATION
OF
THE
PROOF
WE
START
GENERATING
C
AS
A
COMMITMENT
TO
X
RATHER
THAN
INDISTINGUISHABILITY
BETWEEN
HYBRIDS
AND
FOLLOWS
FROM
THE
COMPUTATIONAL
HIDING
PROPERTY
OF
THE
COMMITMENT
SCHEME
WE
START
USING
THE
RANDOMNESS
USED
IN
GENERATION
OF
THE
COMMITMENT
C
FOR
GENERATING
THE
PROOF
RATHER
THAN
THE
REAL
WITNESS
IN
OTHER
WORDS
WE
USE
THE
SIMULATION
STRATEGY
INDISTINGUISHABILITY
BETWEEN
HYBRIDS
AND
FOLLOWS
FROM
THE
ZEROKNOWLEDGE
PROPERTY
OF
K
P
V
STATISTICAL
SIMULATION
SOUNDNESS
SSS
FOLLOWS
DIRECTLY
FROM
THE
STATISTICAL
SOUNDNESS
OF
THE
K
P
V
PROOF
SYSTEM
AND
THE
FACT
THAT
THE
ONLY
FALSE
STATEMENT
FOR
WHICH
AN
ACCEPTABLE
PROOF
EXISTS
IS
X
BECAUSE
THE
COMMITMENT
C
IS
PERFECTLY
BINDING
FUNCTIONAL
ENCRYPTION
FROM
INDISTINGUISHABILITY
OBFUSCATION
WE
NOW
GIVE
OUR
CONSTRUCTION
AND
PROOF
OF
SECURITY
OF
A
FUNCTIONAL
ENCRYPTION
SYSTEM
FROM
AN
INDISTINGUISHABILITY
OBFUSCATOR
IO
IN
ADDITION
TO
AN
IO
OUR
CONSTRUCTION
USES
PUBLIC
KEY
ENCRYPTION
AND
STATISTICALLY
SIMULATION
SOUND
NONINTERACTIVE
ZERO
KNOWLEDGE
PROOFS
SSS
NIZKS
WE
LET
SETUPP
KE
ENCRYPTP
KE
EVALP
KE
DECRYPTP
KE
BE
THE
ALGORITHMS
COMPRISING
OUR
PERFECTLY
CORRECT
ENCRYPTION
SCHEME
OUR
SSS
NIZK
SYSTEM
WILL
CONSIST
OF
ALGORITHMS
SETUPN
IZK
PROVEN
IZK
VERIFYN
IZK
AND
HAS
A
SIMULATOR
SIM
WE
BUILD
A
FUNCTIONAL
ENCRYPTION
SYSTEM
FOR
MESSAGES
OF
LENGTH
N
N
Λ
FOR
MESSAGES
OF
LENGTH
N
AND
SECURITY
PARAMETER
Λ
THE
CIPHERTEXTS
OF
OUR
PKE
SCHEME
WILL
BE
OF
LENGTH
Λ
N
THE
CONSTRUCTION
IS
AS
FOLLOWS
SETUPF
E
THE
SETUPF
E
ALGORITHM
TAKES
THE
SECURITY
PARAMETER
Λ
AND
COMPUTES
THE
FOLLOWING
GENERATE
KE
KE
SETUPP
KE
AND
KE
KE
SETUPP
KE
SET
CRS
SETUPN
IZK
IT
SETS
THE
PUBLIC
PARAMETERS
AND
MASTER
SECRET
KEY
AS
PP
KE
KE
CRS
AND
MSK
KE
KEYGENF
E
MSK
F
OUTPUT
AN
OBFUSCATION
F
KE
CRS
FOR
THE
PROGRAM
F
SKP
KE
CRS
DEFINED
IN
FIGURE
WE
OUTPUT
THE
SECRET
KEY
SKF
AS
THE
OBFUSCATED
PROGRAM
ENCRYPTF
E
PP
M
N
OUTPUT
C
Π
WHERE
ENCRYPTP
KE
KE
M
AND
ENCRYPTP
KE
KE
M
AND
Π
IS
A
NIZK
PROOF
OF
DECRYPTF
E
SKF
C
Π
THE
DECRYPTION
ALGORITHM
RUNS
THE
OBFUSCATED
PROGRAM
SKF
ON
INPUT
Π
AND
OUTPUTS
THE
ANSWER
CORRECTNESS
CORRECTNESS
FOLLOWS
IMMEDIATELY
FROM
THE
CORRECTNESS
OF
THE
IO
PKE
SYSTEM
SSS
NIZK
AND
THE
DESCRIPTION
OF
THE
PROGRAM
TEMPLATE
WE
DESCRIBE
THE
TWO
PROGRAM
CLASSES
IN
THE
FIGURES
BELOW
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GIVEN
INPUT
Π
F
SK
P
KE
CRS
PROCEEDS
AS
FOLLOWS
CHECK
THAT
Π
IS
VALID
NIZK
PROOF
USING
THE
VERIFYNIZK
ALGORITHM
AND
CRS
FOR
THE
NP
STATEMENT
M
ENCRYPTP
KE
KE
M
ENCRYPTP
KE
KE
M
IF
ANY
CHECKS
FAIL
OUTPUT
OTHERWISE
OUTPUT
F
DECRYPTP
KE
KE
FIG
PROOF
OF
SECURITY
WE
NOW
PROVE
THAT
NO
POLY
TIME
ATTACKER
CAN
BREAK
OUR
SYSTEM
IF
OUR
UNDERLYING
ASSUMPTIONS
HOLD
WE
PROVE
SELECTIVE
SECURITY
FOR
THE
FUNCTIONAL
ENCRYPTION
INDISTINGUISHABILITY
GAME
LET
Q
Q
Λ
BE
THE
MAXIMUM
NUMBER
OF
PRIVATE
KEY
QUERIES
A
MAKES
FOR
SIMPLICITY
WE
ASSUME
THAT
AN
ALGORITHM
WILL
ALWAYS
MAKE
EXACTLY
Q
QUERIES
WE
DENOTE
FI
FOR
I
Q
TO
BE
THE
ITH
FUNCTION
QUERIED
IN
THE
INDISTINGUISHABILITY
GAME
BY
THE
RULES
OF
THE
GAME
FI
IS
CONSTRAINED
TO
BE
EQUAL
TO
FI
WHERE
AND
ARE
THE
MESSAGES
DECLARED
BY
A
IN
THE
INIT
PHASE
WE
ORGANIZE
OUR
PROOF
INTO
A
SEQUENCE
OF
HYBRIDS
IN
THE
FIRST
HYBRID
THE
CHALLENGER
ENCRYPTS
WE
THEN
GRADUALLY
CHANGE
THE
ENCRYPTION
IN
MULTIPLE
HYBRID
STEPS
VIA
A
TWO
KEY
TYPE
PROOF
INTO
AN
ENCRYPTION
OF
WE
SHOW
THAT
EACH
SUCCESSIVE
HYBRID
EXPERIMENT
IS
INDISTINGUISHABLE
FROM
THE
LAST
THUS
SHOWING
OUR
OBFUSCATOR
TO
HAVE
INDISTINGUISHABILITY
SECURITY
SEQUENCE
OF
HYBRIDS
THIS
HYBRID
CORRESPONDS
TO
THE
HONEST
EXECUTION
OF
THE
SELECTIVE
INDISTINGUISHABILITY
GAME
GIVEN
IN
DEFINITIONS
AND
WHERE
THE
CHALLENGER
ENCRYPTS
IN
THE
CHALLENGE
CIPHERTEXT
THIS
HYBRID
IS
SIMILAR
TO
WITH
THE
EXCEPTION
OF
HOW
THE
CRS
WHICH
IS
PART
OF
THE
PUBLIC
KEY
AND
THE
PROOF
Π
WHICH
IS
A
PART
OF
THE
CHALLENGE
CIPHERTEXT
ARE
GENERATED
IN
PARTICULAR
IN
THIS
HYBRID
E
E
WHICH
ARE
PARTS
OF
THE
THE
CHALLENGE
CIPHERTEXT
ARE
ENCRYPTED
FIRST
NEXT
SIMULATED
CRS
AND
Π
ARE
GENERATED
BASED
ON
E
E
AS
FOLLOWS
CRS
Π
SIM
M
E
ENCRYPTP
KE
KE
M
E
ENCRYPTP
KE
KE
M
NOTE
THAT
IN
THE
SELECTIVE
SECURITY
GAME
THE
CHALLENGE
CIPHERTEXT
CAN
BE
GIVEN
OUT
SIMULTANEOUSLY
WITH
THE
PUBLIC
PARAMETERS
THIS
HYBRID
IS
IDENTICAL
TO
THE
LAST
HYBRID
WITH
THE
EXCEPTION
THAT
THE
CHALLENGE
CIPHERTEXT
IS
GENERATED
AS
E
ENCRYPTP
KE
KE
AND
E
ENCRYPTP
KE
KE
THE
NIZK
IS
STILL
SIMULATED
I
FOR
I
Q
IN
THIS
SET
OF
HYBRIDS
WE
CHANGE
THE
FORM
OF
THE
SECRET
KEYS
USED
TO
DECRYPT
THE
CIPHERTEXT
IN
I
THE
FIRST
I
PRIVATE
KEYS
REQUESTED
WILL
RESULT
IN
PRIVATE
KEYS
GENERATED
AS
OBFUSCATIONS
OF
THE
PROGRAM
FI
SKP
KE
CRS
DEFINED
IN
FIGURE
THE
REMAINING
I
TO
Q
PRIVATE
KEYS
ARE
GENERATED
USING
THE
PROGRAM
FI
SKP
KE
CRS
AS
IN
WE
OBSERVE
THAT
IS
EQUIVALENT
TO
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GIVEN
INPUT
Π
F
SK
P
KE
CRS
PROCEEDS
AS
FOLLOWS
CHECK
THAT
Π
IS
VALID
NIZK
PROOF
USING
THE
VERIFYNIZK
ALGORITHM
AND
CRS
FOR
THE
NP
STATEMENT
M
ENCRYPTP
KE
KE
M
ENCRYPTP
KE
KE
M
IF
ANY
CHECKS
FAIL
OUTPUT
OTHERWISE
OUTPUT
F
DECRYPTP
KE
KE
FIG
THIS
HYBRID
IS
IDENTICAL
TO
THE
HYBRID
Q
WITH
THE
EXCEPTION
THAT
THE
CHALLENGE
CIPHERTEXT
IS
GENERATED
AS
E
ENCRYPTP
KE
KE
AND
E
ENCRYPTP
KE
KE
THE
NIZK
IS
STILL
SIMULATED
AND
THE
KEYS
ARE
ALL
CREATED
FROM
F
SKP
KE
CRS
I
FOR
I
Q
THE
CHALLENGE
CIPHERTEXT
AND
CRS
IS
FORMED
THE
SAME
AS
IN
IN
THIS
SET
OF
HYBRIDS
WE
CHANGE
THE
FORM
OF
THE
SECRET
KEYS
USED
TO
DECRYPT
THE
CIPHERTEXT
IN
I
THE
FIRST
I
PRIVATE
KEYS
REQUESTED
WILL
RESULT
IN
PRIVATE
KEYS
GENERATED
AS
OBFUSCATIONS
OF
THE
PROGRAM
FI
SKP
KE
CRS
THE
REMAINING
I
TO
Q
PRIVATE
KEYS
ARE
GENERATED
USING
THE
PROGRAM
FI
SKP
KE
CRS
AS
IN
WE
OBSERVE
THAT
IS
EQUIVALENT
TO
THIS
HYBRID
IS
THE
SAME
AS
Q
WITH
THE
EXCEPTION
THAT
THE
CRS
IS
GENERATED
FROM
AN
HONEST
RUN
OF
THE
SETUPN
IZK
ALGORITHM
AND
THAT
THE
NIZK
PROOF
COMPONENT
Π
OF
THE
CHALLENGE
CIPHERTEXT
IS
GENERATED
FROM
THE
WITNESS
THIS
CORRESPONDS
TO
THE
SECURITY
GAME
WHEN
MESSAGE
IS
ENCRYPTED
FOR
THE
CHALLENGE
CIPHERTEXT
PROOFS
OF
HYBRID
ARGUMENTS
CLAIM
IF
OUR
SSS
NIZK
SYSTEM
IS
COMPUTATIONALLY
ZERO
KNOWLEDGE
THEN
NO
POLY
TIME
ATTACKER
CAN
DISTINGUISH
WITH
NONNEGLIGIBLE
PROBABILITY
BETWEEN
AND
PROOF
WE
SHOW
THAT
IF
THERE
IS
A
POLY
TIME
ATTACKER
A
THAT
CAN
DISTINGUISH
BETWEEN
AND
WITH
NONNEGLIGIBLE
ADVANTAGE
THEN
THERE
IS
A
POLY
TIME
ALGORITHM
B
THAT
BREAKS
THE
ZERO
KNOWLEDGE
SECURITY
OF
OUR
NIZK
SCHEME
B
BEGINS
BY
RUNNING
A
AND
RECEIVING
B
GENERATES
BOTH
PUBLIC
KEYS
ITSELF
KEEPING
THE
FIRST
SECRET
KEY
AND
ENCRYPTS
E
ENCRYPTP
KE
KE
AND
E
ENCRYPTP
KE
KE
IT
THEN
SUBMITS
TO
THE
CHALLENGER
THE
STATEMENT
X
M
E
ENCRYPTP
KE
KE
M
E
ENCRYPTP
KE
KE
M
AS
WELL
AS
THE
WITNESS
IT
RECEIVES
BACK
CRS
Π
IT
USES
CRS
CRS
TO
MAKE
THE
PUBLIC
PARAMETERS
AND
SETS
THE
CHALLENGE
CIPHERTEXT
AS
E
E
Π
Π
THE
ATTACKER
A
THEN
MAKES
Q
PRIVATE
KEY
QUERIES
TO
B
ALL
QUERIES
FOR
A
FUNCTION
F
ARE
ANSWERED
BY
OBFUSCATION
PROGRAM
INSTANCES
OF
F
SKP
KE
CRS
FOR
APPROPRIATE
FUNCTION
WITH
KE
HARD
WIRED
INSIDE
IT
IF
THE
ZERO
KNOWLEDGE
CHALLENGER
USED
THE
HONEST
SETUP
ALGORITHM
AND
PROVER
TO
GENERATE
CRS
Π
THEN
WE
ARE
EXACTLY
IN
HYBRID
IF
IT
SIMULATED
THE
PROOF
THEN
WE
ARE
IN
HYBRID
THEREFORE
IF
AN
ATTACKER
CAN
DISTINGUISH
BETWEEN
THE
TWO
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
HYBRIDS
WITH
NONNEGLIGIBLE
ADVANTAGE
IT
WILL
BREAK
THE
ZERO
KNOWLEDGE
PROPERTY
OF
THE
NIZK
SCHEME
CLAIM
IF
OUR
PKE
SYSTEM
IS
IND
CPA
SECURE
THEN
NO
POLY
TIME
ATTACKER
CAN
DISTINGUISH
WITH
NONNEGLIGIBLE
PROBABILITY
BETWEEN
AND
PROOF
WE
SHOW
THAT
IF
THERE
IS
A
POLY
TIME
ATTACKER
A
THAT
CAN
DISTINGUISH
BETWEEN
AND
WITH
NONNEGLIGIBLE
ADVANTAGE
THEN
THERE
IS
A
POLY
TIME
ALGORITHM
B
THAT
BREAKS
THE
IND
CPA
SECURITY
OF
OUR
PKE
SCHEME
B
BEGINS
BY
RUNNING
A
AND
RECEIVING
B
FIRST
GENERATES
THE
FIRST
PUBLIC
KEY
ITSELF
KEEPING
THE
SECRET
KEY
AND
ENCRYPTS
E
ENCRYPTP
KE
KE
IT
THEN
RECEIVES
A
PUBLIC
KEY
FROM
THE
CHALLENGER
AND
DESIGNATES
IT
AS
KE
NEXT
IT
SUBMITS
TO
THE
CHALLENGER
AND
RECEIVES
BACK
E
IT
SETS
E
E
FINALLY
IT
USES
THE
SIMULATION
ALGORITHM
TO
GET
CRS
Π
SIM
M
E
ENCRYPTP
KE
KE
M
E
ENCRYPTP
KE
KE
M
THE
PARAMETERS
AND
CHALLENGE
CIPHERTEXT
ARE
NOW
GIVEN
OUT
AS
PP
KE
KE
CRS
AND
E
E
Π
THE
ATTACKER
A
THEN
MAKES
Q
PRIVATE
KEY
QUERIES
TO
B
ALL
QUERIES
FOR
A
FUNCTION
F
ARE
ANSWERED
BY
OBFUSCATION
PROGRAM
INSTANCES
OF
F
SKP
KE
CRS
FOR
APPROPRIATE
FUNCTION
WITH
SKP
KE
HARD
WIRED
INSIDE
IT
IF
THE
IND
CPA
CHALLENGER
GAVE
AN
ENCRYPTION
OF
THEN
WE
ARE
EXACTLY
IN
HYBRID
IF
IT
GAVE
E
AS
AN
ENCRYPTION
OF
THEN
WE
ARE
IN
HYBRID
THEREFORE
IF
AN
ATTACKER
CAN
DISTINGUISH
BETWEEN
THE
TWO
HYBRIDS
WITH
NONNEGLIGIBLE
ADVANTAGE
IT
WILL
BREAK
THE
IND
CPA
PROPERTY
OF
THE
PKE
SCHEME
CLAIM
IF
THE
FAMILY
IO
DEFINITION
HOLDS
FOR
OUR
INDISTINGUISHABILITY
OBFUSCATOR
AND
THE
SSS
NIZK
HAS
THE
STATISTICAL
SIMULATION
SOUNDNESS
PROPERTY
THEN
NO
POLY
TIME
ATTACKER
CAN
DISTINGUISH
BETWEEN
I
AND
I
FOR
I
Q
PROOF
WE
SHOW
THAT
IF
THERE
IS
A
POLY
TIME
ATTACKER
A
THAT
CAN
DISTINGUISH
BETWEEN
I
AND
I
THEN
WE
WILL
DESCRIBE
CONSTRUCTIONS
OF
A
SAMPLER
SAMP
AND
A
DISTINGUISHER
D
OUR
SAMP
WILL
BE
SUCH
THAT
WITH
OVERWHELMING
PROBABILITY
IT
YIELDS
CIRCUITS
AND
WHICH
ARE
FUNCTIONALLY
EQUIVALENT
WHERE
Σ
SAMP
HOWEVER
THE
DISTINGUISHER
D
WILL
HAVE
A
NONNEGLIGIBLE
CHANCE
OF
DISTINGUISHING
BETWEEN
OBFUSCATIONS
OF
AND
EVEN
WHEN
IT
IS
GIVEN
Σ
SAMP
BEGINS
BY
RUNNING
A
AND
RECEIVING
IT
GENERATES
BOTH
PUBLIC
KEYS
KEEPING
BOTH
SECRET
KEYS
AND
ENCRYPTS
E
ENCRYPTP
KE
KE
AND
E
ENCRYPTP
KE
KE
IT
USES
THE
SIMULATION
ALGORITHM
TO
GET
CRS
Π
SIM
M
E
ENCRYPTP
KE
KE
M
E
ENCRYPTP
KE
KE
M
THE
PARAMETERS
AND
CHALLENGE
CIPHERTEXT
ARE
NOW
GIVEN
TO
A
AS
PP
KE
KE
CRS
AND
E
E
Π
THE
ATTACKER
A
THEN
MAKES
Q
PRIVATE
KEY
QUERIES
FOR
J
I
THE
JTH
PRIVATE
KEY
IS
CREATED
AS
AN
OBFUSCATION
OF
THE
PROGRAM
FJ
SKP
KE
CRS
GIVEN
THE
I
PRIVATE
KEY
QUERY
FI
SAMP
OUTPUTS
FI
SKP
KE
CRS
AND
FI
SKP
KE
CRS
IT
ADDITIONALLY
OUTPUTS
Σ
AS
THE
TRANSCRIPT
OF
ITS
INTERNAL
STATE
AND
THE
INTERACTION
WITH
A
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
OUR
DISTINGUISHER
D
ON
INPUT
THE
OBFUSCATED
CIRCUIT
C
OF
OR
AND
Σ
PROCEEDS
AS
FOLLOWS
D
GIVES
C
AS
THE
I
PRIVATE
KEY
TO
A
FOR
J
I
THE
JTH
PRIVATE
KEY
IS
CREATED
AS
AN
OBFUSCATION
OF
THE
PROGRAM
FJ
SKP
KE
CRS
USING
INFORMATION
FROM
Σ
WE
NOW
CHECK
THAT
WE
ARE
USING
A
VALID
INSTANCE
OF
THE
FAMILY
IO
DEFINITION
IN
SHOWING
THAT
BOTH
PROGRAMS
HAVE
THE
SAME
OUTPUT
ON
EACH
INPUT
WE
BREAK
THESE
DOWN
BY
CASES
ON
THE
INPUT
WE
FIRST
CONSIDER
INPUTS
Π
WHERE
ARE
VALID
ENCRYPTIONS
OF
THE
SAME
MESSAGE
AND
Π
IS
A
PROOF
OF
THIS
THAT
PASSES
VERIFYN
IZK
FOR
THESE
INPUTS
BOTH
CIRCUITS
WILL
PROCEED
TO
THE
SECOND
STEP
WHERE
THEY
DECRYPT
THE
SAME
MESSAGE
M
NO
MATTER
WHAT
KEY
THEY
USE
AND
COMPUTE
THE
SAME
FUNCTION
FI
THUS
THE
OUTPUT
IS
THE
SAME
ON
ALL
INPUTS
OF
THIS
CLASS
THE
SECOND
SETS
OF
INPUTS
WE
CONSIDER
ARE
WHERE
THE
VERIFICATION
CHECK
OF
IN
STEP
DOES
NOT
PASS
IN
THIS
CASE
BOTH
CIRCUITS
OUTPUT
FINALLY
WE
CAN
CONSIDER
CASES
WHERE
THE
VERIFICATION
CHECK
PASSES
BUT
ARE
NOT
VALID
ENCRYPTIONS
OF
THE
SAME
MESSAGE
DUE
TO
THE
STATISTICAL
SIMULATION
SOUNDNESS
PROPERTY
OF
THE
SSS
NIZK
THIS
CAN
ONLY
HAPPEN
IF
E
AND
E
IN
THIS
CASE
DECRYPTING
E
GIVES
AND
DECRYPTING
E
HOWEVER
THE
FIRST
CIRCUIT
OUTPUTS
FI
WHICH
MUST
BE
EQUAL
TO
FI
BY
THE
RULES
OF
THE
GAME
WHICH
IS
THE
OUTPUT
OF
THE
SECOND
CIRCUIT
SINCE
THE
TWO
CIRCUITS
HAVE
THE
SAME
OUTPUT
ON
ALL
INPUTS
THIS
CONSTITUTES
A
VALID
INSTANCE
OF
THE
ASSUMPTION
IF
THE
FAMILY
IO
CHALLENGER
CHOSE
THE
FIRST
PROGRAM
THEN
WE
ARE
EXACTLY
IN
HYBRID
I
IF
IT
CHOSE
THE
SECOND
THEN
WE
ARE
IN
I
THEREFORE
IF
AN
ATTACKER
CAN
DISTINGUISH
BETWEEN
THE
TWO
HYBRIDS
WITH
NONNEGLIGIBLE
ADVANTAGE
IT
WILL
BREAK
THE
FAMILY
IO
DEFINITION
CLAIM
IF
OUR
PKE
SYSTEM
IS
IND
CPA
SECURE
THEN
NO
POLY
TIME
ATTACKER
CAN
DISTINGUISH
WITH
NONNEGLIGIBLE
PROBABILITY
BETWEEN
Q
AND
THE
PROOF
OF
THIS
CLAIM
FOLLOWS
IN
A
DIRECTLY
ANALOGOUS
WAY
TO
THAT
OF
CLAIM
CLAIM
IF
THE
FAMILY
IO
DEFINITION
HOLDS
FOR
OUR
INDISTINGUISHABILITY
OBFUSCATOR
AND
THE
SSS
NIZK
HAS
THE
STATISTICAL
SIMULATION
SOUNDNESS
PROPERTY
THEN
NO
POLY
TIME
ATTACKER
CAN
DISTINGUISH
BETWEEN
I
AND
I
FOR
I
Q
THE
PROOF
OF
THIS
CLAIM
FOLLOWS
IN
A
DIRECTLY
ANALOGOUS
WAY
TO
THAT
OF
CLAIM
CLAIM
IF
OUR
SSS
NIZK
SYSTEM
IS
COMPUTATIONALLY
ZERO
KNOWLEDGE
THEN
NO
POLY
TIME
ATTACKER
CAN
DISTINGUISH
WITH
NONNEGLIGIBLE
PROBABILITY
BETWEEN
Q
AND
THE
PROOF
OF
THIS
CLAIM
FOLLOWS
IN
A
DIRECTLY
ANALOGOUS
WAY
TO
THAT
OF
CLAIM
THEOREM
UNDER
THE
ASSUMPTIONS
LISTED
ABOVE
OUR
FE
SYSTEM
IS
SELECTIVELY
SECURE
IN
THE
INDISTINGUISHABILITY
GAME
FROM
DEFINITIONS
AND
PROOF
OUR
CLAIMS
SHOW
A
SUCCESSION
OF
A
POLYNOMIAL
NUMBER
OF
HYBRID
EXPERIMENTS
WHERE
NO
POLY
TIME
ATTACKER
CAN
DISTINGUISH
ONE
FROM
THE
NEXT
WITH
NONNEGLIGIBLE
ADVANTAGE
THE
FIRST
HYBRID
CORRESPONDS
TO
ENCRYPTING
A
MESSAGE
IN
THE
SELECTIVE
FUNCTIONAL
ENCRYPTION
INDISTINGUISHABILITY
GAME
AND
THE
LAST
HYBRID
CORRESPONDS
TO
ENCRYPTING
THE
MESSAGE
SECURITY
IN
THE
INDISTINGUISHABILITY
GAME
FOLLOWS
APPENDIX
A
MULTILINEAR
JIGSAW
PUZZLE
IMPLEMENTATION
DETAILS
ONE
INSTANTIATION
OF
MULTILINEAR
JIGSAW
PUZZLES
IS
OBTAINED
BY
TAKING
THE
GGH
MULTILINEAR
ENCODING
SCHEMES
AND
ELIMINATING
THOSE
ASPECTS
THAT
ARE
NO
LONGER
NEEDED
NAMELY
THE
ENCODINGS
OF
IN
THE
PUBLIC
PARAMETERS
WE
NOTE
THAT
WE
CAN
ALSO
USE
THE
RECENT
MULTILINEAR
MAPS
OVER
THE
INTEGERS
OF
CORON
LEPOINT
AND
TIBOUCHI
AS
A
BASIS
FOR
OUR
MULTILINEAR
JIGSAW
PUZZLES
WE
PROVIDE
THE
GGH
BASED
INSTANTIATION
HERE
OUR
IMPLEMENTATION
OF
THE
MULTILINEAR
JIGSAW
PUZZLE
FRAMEWORK
HAS
A
DETERMIN
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
ISTIC
JIGSAW
VERIFIER
AND
A
BAD
JIGSAW
PUZZLE
WITHOUT
CORRECTNESS
CAN
BE
EFFICIENTLY
RECOGNIZED
AND
RESAMPLED
SO
AS
TO
PROVIDE
PERFECT
CORRECTNESS
JIGSAW
GENERATOR
ON
INPUT
K
Λ
Π
THE
JIGSAW
GENERATOR
PROCEEDS
AS
FOLLOWS
INSTANCE
GENERATOR
THE
JIGSAW
GENERATOR
FIRST
CHOOSES
A
LARGE
RANDOM
PRIME
Q
WHICH
WILL
BE
THE
OVERALL
MODULUS
USED
SHE
WILL
USE
A
DIMENSION
PARAMETER
M
WHICH
WILL
BE
AN
APPROPRIATE
LARGE
ENOUGH
POWER
OF
TWO
FURTHER
WORK
WILL
BE
DONE
IN
THE
RING
R
Z
X
X
M
AND
THE
RING
RQ
ZQ
X
X
M
R
QR
THE
SIZE
OF
THESE
PARAMETERS
WILL
BE
DISCUSSED
AT
THE
END
OF
THIS
SECTION
THE
FIRST
SEQUENCE
OF
OPERATIONS
THAT
THE
JIGSAW
GENERATOR
PERFORMS
ARE
TO
SET
UP
THE
APPROXIMATE
MULTILINEAR
MAPS
SHE
BEGINS
BY
CHOOSING
SEVERAL
SECRET
POLYNOMIALS
FIRST
SHE
CHOOSES
A
SMALL
RANDOM
POLYNOMIAL
G
R
SUCH
THAT
R
G
IS
A
LARGE
PRIME
P
HERE
SMALL
REFERS
TO
EACH
COEFFICIENT
IN
G
BEING
A
SMALL
INTEGER
WE
WILL
DESCRIBE
EXACTLY
WHAT
SMALL
SHOULD
MEAN
WHEN
WE
LATER
DISCUSS
PARAMETER
SELECTION
THIS
POLYNOMIAL
G
MUST
ALSO
SATISFY
A
TECHNICAL
CONDITION
ENSURING
THAT
G
WHEN
VIEWED
AS
RESIDING
IN
Q
X
X
M
IS
SUFFICIENTLY
SMALL
WE
OMIT
THE
PROOFS
THAT
THESE
CONDITIONS
CAN
BE
SATISFIED
WITH
NOTICEABLE
PROBABILITY
BY
A
RANDOM
CHOICE
OF
SMALL
G
THESE
ARE
FOUND
IN
THEN
SHE
CHOOSES
K
RANDOM
POLYNOMIALS
ZK
RQ
THESE
POLYNOMIALS
ARE
CHOSEN
UNIFORMLY
AND
THEREFORE
ARE
VERY
UNLIKELY
TO
BE
SMALL
THE
JIGSAW
GENERATOR
WILL
IDENTIFY
THE
PLAINTEXT
SPACE
WITH
ZP
IN
OTHER
WORDS
IN
THE
ANALOGY
TO
TRUE
MULTILINEAR
MAPS
THE
UNDERLYING
GROUPS
WILL
BE
OF
PRIME
ORDER
P
FURTHERMORE
EACH
LEVEL
OF
THE
MULTILINEAR
MAP
WILL
BE
ASSOCIATED
WITH
A
SUBSET
OF
THE
SET
K
K
AGAIN
TO
MAKE
THE
ANALOGY
COMPLETE
WE
WILL
THINK
OF
HAVING
GROUPS
GS
FOR
EVERY
SUBSET
K
AND
THERE
WILL
BE
A
BILINEAR
MAP
FROM
GS
GS
GS
FOR
EVERY
DISJOINT
PAIR
OF
SETS
K
ENCODING
NEXT
THE
JIGSAW
GENERATOR
IS
READY
TO
CREATE
THE
PUZZLE
PIECES
WHICH
ARE
ENCODINGS
OF
VARIOUS
ELEMENTS
OF
ZP
AT
DIFFERENT
LEVELS
TO
CREATE
AN
ENCODING
ENCODES
A
OF
AN
ELEMENT
A
ZP
AT
THE
LEVEL
K
THE
PUZZLE
MAKER
DOES
THE
FOLLOWING
FIRST
SHE
REDUCES
A
MODULO
G
TO
CREATE
A
SMALL
POLYNOMIAL
A
A
MOD
G
IN
R
THEN
SHE
COMPUTES
IN
RQ
THE
FOLLOWING
A
E
G
ENCODES
A
I
ZI
WHERE
E
IS
CHOSEN
SO
THAT
A
E
G
IS
DISCRETE
GAUSSIAN
CENTERED
AT
THE
ORIGIN
AND
SO
THAT
THE
RESULTING
E
IS
SMALL
ONCE
AGAIN
WE
WILL
DISCUSS
EXACTLY
WHAT
SMALL
MEANS
HERE
WHEN
WE
DISCUSS
SETTINGS
OF
PARAMETERS
WE
THINK
OF
E
AS
BEING
A
CRUCIAL
NOISE
TERM
FOR
ACHIEVING
SECURITY
WE
REFER
THE
READER
TO
FOR
DETAILS
ON
A
BASED
MORE
SOPHISTICATED
SAMPLING
PROCEDURE
THE
VARIOUS
PUZZLE
PIECES
GENERATED
BY
THE
JIGSAW
GENERATOR
WILL
BE
GIVEN
TO
THE
JIGSAW
VERIFIER
ZERO
TEST
GENERATION
THE
FINAL
STEP
OF
THE
JIGSAW
GENERATOR
IS
TO
CREATE
A
ZERO
TESTING
PARAMETER
THAT
WILL
ALLOW
THE
JIGSAW
VERIFIER
TO
KNOW
WHEN
HE
HAS
SOLVED
THE
PUZZLE
BY
CREATING
A
NONTRIVIAL
ENCODING
OF
AT
THE
HIGHEST
LEVEL
K
THIS
WILL
BE
USED
TO
ALLOW
THE
JIGSAW
VERIFIER
TO
CHECK
IF
TWO
ELEMENTS
AT
THE
HIGHEST
LEVEL
ARE
EQUAL
TO
EACH
OTHER
BY
SUBTRACTING
AND
THEN
USING
THE
ZERO
TEST
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
THE
JIGSAW
GENERATOR
NOW
CREATES
THE
ZERO
TESTING
ELEMENT
BY
PERFORMING
THE
FOLLOWING
COMPUTATION
IN
RQ
H
PZT
K
I
ZI
G
HERE
H
IS
A
RANDOM
MID
SIZE
POLYNOMIAL
CHOSEN
FROM
A
DISCRETE
GAUSSIAN
IN
R
WHOSE
COEFFICIENTS
ARE
OF
SIZE
ROUGHLY
Q
INTUITIVELY
SINCE
AN
ENCODING
OF
AT
LEVEL
K
IS
E
G
I
ZI
BY
MULTIPLYING
IT
BY
PZT
ONE
IS
LEFT
WITH
H
E
WHICH
WILL
BE
SMALL
BY
TESTING
IF
THIS
PRODUCT
IS
SMALL
THE
PUZZLE
SOLVER
WILL
KNOW
WHETHER
IT
HAS
SUCCESSFULLY
CREATED
AN
ENCODING
OF
AT
THE
FINAL
LEVEL
THE
PROOF
OF
THIS
FACT
IS
OMITTED
AND
CAN
BE
FOUND
IN
WHEN
SHE
IS
DONE
SHE
SENDS
PRMS
PZT
AND
THE
VARIOUS
PUZZLE
PIECES
A
K
A
ENCODINGS
SHE
HAS
CREATED
TO
THE
JIGSAW
VERIFIER
THE
JIGSAW
GENERATOR
PLAYS
NO
FURTHER
ROLE
JIGSAW
VERIFIER
THE
VERIFIER
IS
GIVEN
THE
SYSTEM
PARAMETERS
PRMS
K
M
Q
P
PZT
A
VALID
FORM
Π
AND
INPUTS
FOR
Π
IN
UN
IF
THE
OUTPUT
WIRE
IS
NOT
ASSOCIATED
WITH
K
THEN
THE
VERIFIER
OUTPUTS
IF
IT
IS
ASSOCIATED
WITH
K
THEN
THE
VERIFIER
JUST
EVALUATES
Π
ON
THESE
INPUTS
USING
RQ
OPERATIONS
AND
THEN
USES
THE
ZERO
TEST
PARAMETER
TO
CHECK
IF
THE
OUTPUT
IS
AN
ENCODING
OF
ZERO
NAMELY
EVERY
GATE
IN
THE
FORM
Π
IS
REPLACED
BY
THE
OPERATIONS
IN
RQ
RESPECTIVELY
APPLIED
TO
THE
INPUT
ELEMENTS
TO
THIS
GATE
EXPLAINED
BELOW
DENOTE
THE
ELEMENT
AT
THE
OUTPUT
WIRE
BY
U
THE
PROPERTIES
OF
THE
ENCODING
SCHEME
ENSURE
THAT
IT
IS
OF
THE
FORM
U
A
I
K
ZI
RQ
WHERE
A
Q
AND
A
G
IF
AND
ONLY
IF
THE
UNDERLYING
COMPUTATION
IN
ZP
YIELDS
A
ZERO
THE
VERIFIER
MULTIPLIES
THE
OUTPUT
ENCODING
BY
THE
ZERO
TEST
PARAMETER
TO
GET
W
U
PZT
RQ
AND
OUTPUT
IF
W
Q
AND
OTHERWISE
NOW
WE
GIVE
MORE
DETAILS
ON
THE
THE
ALGORITHM
USED
BY
THE
JIGSAW
VERIFIER
ADDITION
AT
SAME
LEVEL
GIVEN
TWO
ENCODINGS
Α
ENCODES
A
AND
Β
ENCODES
B
AT
THE
SAME
LEVEL
OBSERVE
THE
FOLLOWING
COMPUTATION
OVER
RQ
Α
Β
A
B
E
G
I
ZI
WE
WILL
CHOOSE
PARAMETERS
SO
THAT
ANY
POLYNOMIAL
NUMBER
OF
ADDITIONS
WILL
KEEP
THE
TERM
E
FROM
GROWING
TOO
LARGE
THUS
WE
SEE
THAT
ADDITION
YIELDS
ANOTHER
VALID
ENCODING
AT
THE
SAME
LEVEL
MULTIPLICATION
JUMPING
LEVELS
GIVEN
TWO
ENCODINGS
Α
ENCODES
A
AND
Β
ENCODET
B
AT
DISJOINT
LEVEL
SETS
T
K
OBSERVE
THE
FOLLOWING
COMPUTATION
OVER
RQ
Α
Β
A
B
E
G
I
T
ZI
WE
WILL
CHOOSE
PARAMETERS
SO
THAT
THE
TERM
E
WILL
NOT
GROW
TOO
LARGE
AS
LONG
AS
THE
LEVEL
SETS
AND
T
ARE
DISJOINT
THUS
WE
SEE
THAT
MULTIPLICATION
YIELDS
ANOTHER
VALID
ENCODING
AT
A
DIFFERENT
LEVEL
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
THE
ENCODINGS
ARE
DESIGNED
SO
THAT
ONLY
THESE
OPERATIONS
ARE
MEANINGFUL
OTHER
OPERATIONS
SUCH
AS
ADDITION
ACROSS
DIFFERENT
LEVELS
OR
DIVISION
OF
ENCODINGS
WILL
PRODUCE
JUNK
SIMILARLY
MULTIPLICATION
SO
THAT
THE
FINAL
LEVEL
CONTAINS
ANY
ELEMENT
WITH
MULTIPLICITY
MORE
THAN
ONE
WILL
PRODUCE
AN
ENCODING
THAT
ESSENTIALLY
CANNOT
BE
DISTINGUISHED
FROM
A
RANDOM
SEE
FOR
FURTHER
DETAILS
FINALLY
THE
JIGSAW
VERIFIER
WILL
YIELD
SOME
CONCRETE
ENCODED
VALUE
U
AT
THE
HIGHEST
LEVEL
K
AT
WHICH
POINT
IT
WILL
THEN
INVOKE
THE
ZERO
TESTING
PROCEDURE
ZERO
TESTING
THE
PROCEDURE
ISZERO
PRMS
PZT
U
JUST
MULTIPLIES
V
U
PZT
IN
RQ
AND
TESTS
IF
V
IS
SMALL
ENOUGH
E
G
IF
IT
HAS
CANONICAL
EMBEDDING
OF
EUCLIDEAN
NORM
SMALLER
THAN
Q
IF
THE
ZERO
TEST
PASSES
THE
JIGSAW
VERIFIER
OUTPUTS
OTHERWISE
IT
OUTPUTS
SETTING
PARAMETERS
IF
WE
THINK
OF
THE
DIMENSIONALITY
M
AS
BEING
AN
EFFECTIVE
SECURITY
PARAMETER
THEN
TO
ACHIEVE
THE
LEVEL
OF
SECURITY
AND
FUNCTIONALITY
THAT
WE
NEED
WE
CAN
SET
K
MΔ
AND
Q
OF
SIZE
APPROXIMATELY
M
WHERE
Δ
AND
ARE
SUITABLY
CHOSEN
CONSTANTS
Δ
THE
DEFINITION
OF
SMALL
FOR
THE
SIZE
OF
G
Δ
AND
THE
NOISE
TERM
E
ABOVE
WILL
BE
THAT
EACH
COEFFICIENT
SHOULD
BE
SMALLER
THAN
M
APPENDIX
B
ADDITIONAL
BACKGROUND
IN
THIS
SECTION
WE
FIRST
GIVE
BACKGROUND
ON
TWO
CRYPTOGRAPHIC
PRIMITIVES
USED
IN
SECTION
NONINTERACTIVE
AND
PERFECTLY
BINDING
COMMITMENTS
LEVELED
HOMOMORPHIC
ENCRYPTION
IN
ADDITION
WE
DESCRIBE
HOW
ANY
NP
PROOFS
THAT
ARE
VERIFIABLE
IN
BY
A
FAMILY
OF
POLYNOMIAL
SIZED
CIRUITS
CAN
BE
TRANSFORMED
INTO
A
PROOF
THAT
IS
VERIFIABLE
BY
A
FAMILY
OF
CIRCUITS
BELONGING
TO
B
NONINTERACTIVE
AND
PERFECTLY
BINDING
COMMITMENTS
WE
LET
COM
DENOTE
THE
COMMITMENT
FUNCTION
OF
A
NONINTERACTIVE
COMMITMENT
SCHEME
COM
TAKES
AS
INPUT
A
BIT
B
AND
RANDOMNESS
R
Λ
AND
OUTPUTS
A
COMMITMENT
C
COM
B
R
COMMITMENT
SCHEMES
MUST
SATISFY
TWO
PROPERTIES
HIDING
AND
BINDING
COMPUTATIONAL
HIDING
HIDING
MEANS
THAT
NO
COMPUTATIONALLY
BOUNDED
ADVERSARY
CAN
DISTINGUISH
AS
TO
WHICH
BIT
IS
LOCKED
IN
THE
COMMITMENT
LET
A
BE
ANY
NONUNIFORM
ADVERSARY
RUNNING
IN
TIME
POLY
Λ
WE
SAY
THAT
THE
COMMITMENT
SCHEME
IS
COMPUTATIONALLY
HIDING
IF
B
NEGL
Λ
PR
B
B
C
COM
B
R
B
A
C
PERFECTLY
BINDING
INTUITIVELY
SPEAKING
BINDING
REQUIRES
THAT
NO
EVEN
UNBOUNDED
ADVERSARY
CAN
OPEN
THE
COMMITMENT
IN
TWO
DIFFERENT
WAYS
HERE
WE
DEFINE
THE
STRONGEST
VARIANT
KNOWN
AS
PERFECTLY
BINDING
FORMALLY
WE
REQUIRE
THAT
THERE
DO
NOT
EXIST
VALUES
SUCH
THAT
COM
COM
FOR
SIMPLICITY
OF
EXPOSITION
IN
WHAT
FOLLOWS
WE
WILL
ASSUME
THAT
RANDOM
COINS
ARE
AN
IMPLICIT
INPUT
TO
THE
COMMITMENT
FUNCTION
WE
WILL
ALSO
NATURALLY
EXTEND
THE
COMMITMENT
FUNCTION
COM
TO
COMMIT
TO
STRINGS
INSTEAD
OF
JUST
BITS
FOR
SIMPLICITY
OF
EXPOSITION
IN
THE
PRESENTATION
OF
OUR
RESULTS
IN
THIS
MANUSCRIPT
WE
USE
A
NONINTERACTIVE
PERFECTLY
BINDING
STRING
COMMITMENT
WHICH
CAN
BE
BASED
ON
ANY
TO
ONE
WAY
FUNCTION
IT
IS
EASY
TO
SEE
THAT
ALL
THE
CONSTRUCTIONS
IN
THIS
WORK
CAN
IN
FACT
BE
BUILT
USING
NAOR
ROUND
COMMITMENT
SCHEME
WHICH
CAN
BE
BASED
ON
ANY
ONE
WAY
FUNCTION
B
LEVELED
HOMOMORPHIC
ENCRYPTION
HERE
WE
GIVE
THE
DEFINITION
OF
A
LEVELED
HOMOMORPHIC
ENCRYPTION
SCHEME
FOLLOWING
A
HOMOMORPHIC
ENCRYPTION
SCHEME
HE
IS
A
TUPLE
OF
PPT
ALGORITHMS
HE
KEYGEN
HE
ENC
HE
DEC
HE
EVAL
THE
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
MESSAGE
SPACE
RM
OF
HE
IS
SOME
RING
AND
OUR
COMPUTATIONAL
MODEL
WILL
BE
ARITHMETIC
CIRCUITS
OVER
THIS
RING
WITH
ADDITION
AND
MULTIPLICATION
GATES
HE
KEYGEN
TAKES
THE
SECURITY
PARAMETER
AND
A
DEPTH
PARAMETER
ON
THE
DEPTH
L
OF
THE
COMPUTATION
DESIRED
AND
OUTPUTS
A
SECRET
KEY
SK
AND
A
PUBLIC
KEY
PK
HE
ENC
TAKES
THE
PUBLIC
KEY
PK
A
MESSAGE
Μ
AND
OUTPUTS
A
CIPHERTEXT
C
THAT
ENCRYPTS
Μ
HE
DEC
TAKES
THE
SECRET
KEY
SK
AND
A
CIPHERTEXT
C
AND
OUTPUTS
A
MESSAGE
Μ
HE
EVAL
TAKES
THE
PUBLIC
KEY
PK
AN
ARITHMETIC
CIRCUIT
F
OF
DEPTH
LESS
THAN
L
OVER
RM
AND
CIPHERTEXTS
C
WHERE
IS
THE
NUMBER
OF
INPUTS
TO
F
AND
OUTPUTS
A
CIPHERTEXT
CF
DEFINITION
WE
SAY
THAT
A
HOMOMORPHIC
ENCRYPTION
HAS
PERFECT
CORRECTNESS
FOR
A
CIRCUIT
FAMILY
F
IF
FOR
ALL
F
F
AND
FOR
ALL
Μ
RM
IT
HOLDS
THAT
IF
SK
PK
WERE
PROPERLY
GENERATED
BY
HE
KEYGEN
WITH
SECURITY
PARAMETER
Λ
AND
IF
CI
HE
ENCPK
ΜI
FOR
ALL
I
AND
CF
HE
EVALPK
F
C
THEN
PR
HE
DECSK
CF
F
Μ
WE
SAY
THAT
THE
SCHEME
COMPACTLY
EVALUATES
THE
FAMILY
IF
IN
ADDITION
THE
RUNNING
TIME
OF
THE
DECRYPTION
CIRCUIT
ONLY
DEPENDS
ON
Λ
AND
NOT
ON
ITS
INPUT
WE
USE
STANDARD
SEMANTIC
SECURITY
SECURITY
UNDER
CHOSEN
PLAINTEXT
ATTACK
AS
OUR
SECURITY
NOTION
DEFINITION
A
HOMOMORPHIC
SCHEME
IS
SECURE
IF
ANY
POLYNOMIAL
TIME
ADVERSARY
THAT
FIRST
GETS
A
PROPERLY
GENERATED
PK
AND
THEN
SPECIFIES
RM
AND
FINALLY
GETS
HE
ENCPK
ΜB
FOR
A
RANDOM
B
CANNOT
GUESS
THE
VALUE
OF
B
WITH
PROBABILITY
NEGL
Λ
GENTRY
ALSO
SHOWED
THAT
SEMANTICALLY
SECURE
LEVELED
HOMOMORPHIC
ENCRYPTION
SCHEMES
EXISTS
ASSUMING
THE
HARDNESS
OF
CERTAIN
LATTICE
PROBLEMS
FOLLOW
UP
SCHEME
SCHEMES
HAVE
BEEN
CONSTRUCTED
BASED
ON
THE
APPROXIMATE
GCD
PROBLEM
THE
LEARNING
WITH
ERRORS
LWE
PROBLEM
THE
RING
LEARNING
WITH
ERRORS
RLWE
PROBLEM
AND
THE
NTRU
PROBLEM
IN
ALL
SUCH
SCHEMES
THAT
WE
KNOW
OF
DEC
IS
IN
B
LOW
DEPTH
PROOFS
LET
R
BE
AN
EFFICIENTLY
COMPUTABLE
BINARY
RELATION
FOR
PAIRS
X
W
R
WE
CALL
X
THE
STATEMENT
AND
W
THE
WITNESS
LET
L
BE
THE
LANGUAGE
CONSISTING
OF
STATEMENTS
IN
R
A
NONINTERACTIVE
PROOF
WITH
PERFECT
COMPLETENESS
AND
PERFECT
SOUNDNESS
FOR
A
RELATION
R
CONSISTS
OF
AN
EFFICIENT
PROVER
P
AND
A
VERIFIER
V
SUCH
THAT
THE
FOLLOWING
HOLDS
PERFECT
COMPLETENESS
A
PROOF
SYSTEM
IS
PERFECTLY
COMPLETE
IF
AN
HONEST
PROVER
WITH
A
VALID
WITNESS
CAN
ALWAYS
CONVINCE
AN
HONEST
VERIFIER
FOR
ALL
X
W
R
WE
HAVE
PR
Π
P
X
W
V
X
Π
PERFECT
SOUNDNESS
A
PROOF
SYSTEM
IS
PERFECTLY
SOUND
IF
IT
IS
INFEASIBLE
TO
CONVINCE
AN
HONEST
VERIFIER
WHEN
THE
STATEMENT
IS
FALSE
FOR
ALL
X
L
AND
WE
HAVE
Π
SUCH
THAT
V
X
Π
FURTHERMORE
WE
SAY
THAT
A
NONINTERACTIVE
PROOF
IS
LOW
DEPTH
IF
THE
VERIFIER
V
CAN
BE
IMPLEMENTED
IN
WE
NOTE
THAT
LOW
DEPTH
PROOFS
ARE
USEFUL
EVEN
FOR
STATEMENTS
IN
P
WE
STRESS
THAT
UNLIKE
THE
PROOF
SYSTEMS
IN
SECTION
THIS
PROOF
SYSTEM
DOES
NOT
NEED
A
COMMON
RANDOM
STRING
WE
NEXT
SKETCH
A
VERY
SIMPLE
CONSTRUCTION
OF
A
LOW
DEPTH
NONINTERACTIVE
PROOF
THE
PROVER
P
EXECUTES
THE
NP
VERIFICATION
CIRCUIT
ON
THE
WITNESS
AND
GENERATES
THE
PROOF
AS
THE
SEQUENTIAL
CONCATENATION
IN
SOME
SPECIFIED
ORDER
OF
THE
BIT
VALUES
ASSIGNED
TO
THE
INDIVIDUAL
WIRES
OF
THE
CIRCUIT
THE
VERIFIER
V
PROCEEDS
BY
CHECKING
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
CONSISTENCY
OF
THE
VALUES
ASSIGNED
TO
THE
INTERNAL
WIRES
OF
THE
CIRCUIT
FOR
EACH
GATE
IN
PARTICULAR
FOR
EACH
GATE
IN
THE
NP
VERIFICATION
CIRCUIT
THE
VERIFIER
CHECKS
IF
THE
WIRE
VALES
PROVIDED
IN
THE
PROOF
REPRESENT
A
CORRECT
EVALUATION
OF
THE
GATE
SINCE
THE
VERIFICATION
CORRESPONDING
TO
EACH
GATE
CAN
BE
DONE
INDEPENDENT
OF
EVERY
OTHER
GATE
AND
IN
CONSTANT
DEPTH
WE
HAVE
THAT
V
ITSELF
IS
IN
APPENDIX
C
SECURITY
OF
OUR
ASSUMPTION
IN
THIS
SECTION
WE
PROVIDE
EVIDENCE
THAT
THAT
OUR
HARDNESS
ASSUMPTION
ASSUMPTION
DOES
NOT
FALL
PREY
TO
A
CLASS
OF
SIMPLE
ATTACKS
BELOW
WE
DEFINE
A
GENERIC
MODEL
THAT
WE
TERM
THE
GENERIC
COLORED
MATRIX
MODEL
CAPTURING
ATTACKS
WHERE
THE
ADVERSARY
ONLY
MULTIPLIES
MATRICES
IN
THE
CORRECT
ORDER
AND
PROVE
THAT
ASSUMPTION
HOLDS
UNCONDITIONALLY
IN
THIS
MODEL
LATER
IN
SECTION
C
WE
DISCUSS
WHY
WE
THINK
THAT
THE
GENERIC
COLORED
MATRIX
MODEL
CAPTURES
THE
MOST
NATURAL
ATTACKS
AGAINST
OUR
SCHEME
C
GENERIC
COLORED
MATRIX
MODEL
ROUGHLY
THE
GENERIC
COLORED
MATRIX
MODEL
CONSIDERS
ATTACKS
IN
WHICH
THE
ADVERSARY
IS
PROVIDED
WITH
MATRICES
IN
SOME
SPECIFIC
ORDER
AND
IS
ONLY
ALLOWED
TO
ADD
MULTIPLY
THEM
IN
WAYS
THAT
RESPECT
THIS
ORDER
AND
TO
CHECK
FOR
EQUALITY
THE
ORDER
IS
SPECIFIED
BY
ASSIGNING
EACH
MATRIX
A
LEFT
COLOR
AND
A
RIGHT
COLOR
PERMITTING
ONLY
ADDITION
OF
MATRICES
OF
MATCHING
COLORS
AND
ONLY
MULTIPLICATION
OF
MATRICES
WHERE
THE
RIGHT
COLOR
OF
ONE
MATCHES
THE
LEFT
COLOR
OF
THE
OTHER
IN
MORE
DETAIL
A
MATRIX
IN
THIS
MODEL
IS
ASSOCIATED
WITH
LEFT
AND
RIGHT
COLORS
LC
RC
AND
AN
OPAQUE
HANDLE
H
THE
COLORS
ARE
JUST
ARBITRARY
STRINGS
AND
BELOW
WE
USE
SIMPLE
INDEXES
FOR
THE
HANDLES
I
E
THE
FIRST
MATRIX
THAT
THE
ADVERSARY
SEES
HAS
HANDLE
THE
SECOND
HAS
HANDLE
ETC
THE
ADVERSARY
IN
THIS
MODEL
IS
GIVEN
IT
IS
THE
PRIME
NUMBER
P
THAT
DEFINES
THE
FIELD
ZP
AND
FOR
EVERY
MATRIX
A
ZM
N
P
GIVEN
THE
TUPLE
M
LC
N
RC
H
BUT
NOT
THE
MATRIX
A
ITSELF
THE
ADVERSARY
IS
INTERACTING
WITH
A
STATEFUL
REPRESENTATION
ORACLE
THAT
KEEPS
TRACK
OF
THE
CORRESPONDENCE
BETWEEN
MATRICES
AND
THEIR
HANDLES
AND
LET
THE
ADVERSARY
PERFORM
GENERIC
COMPUTATION
ON
THESE
MATRICES
GIVEN
THE
PRIME
P
THE
REPRESENTATION
ORACLE
CHOOSES
AN
INITIAL
SET
OF
COLORED
MATRICES
AND
ASSIGNS
TO
THEM
THE
HANDLES
INSERTS
INTO
ITS
DATABASE
THE
RECORDS
AI
MI
LCI
NI
RCI
I
I
SENDS
TO
THE
ADVERSARY
THE
PRIME
P
AND
REPRESENTATIONS
MI
LCI
NI
RCI
I
I
WITHOUT
THE
MATRICES
THEMSELVES
AND
THEN
PROCESSES
QUERIES
FROM
THE
ADVERSARY
AS
FOLLOWS
ADDITION
WHEN
THE
ADVERSARY
MAKES
A
QUERY
ADD
H
H
THE
REPRESENTATION
ORACLE
LOOKS
UP
IN
THE
DATABASE
THE
RECORDS
CORRESPONDING
TO
THE
TWO
HANDLES
H
H
IF
SUCH
RECORDS
EXIST
LET
US
DENOTE
THEM
BY
A
M
LC
N
RC
H
AND
A
M
LC
N
RC
H
IF
THEY
HAVE
THE
SAME
DIMENSIONS
AND
COLORS
M
LC
M
LC
AND
N
RC
N
RC
THEN
THE
REPRESENTATION
ORACLE
COMPUTES
THEIR
MODULAR
SUM
A
A
A
MOD
P
IF
THE
DATABASE
ALREADY
CONTAINS
THE
MATRIX
A
WITH
DIMENSIONS
AND
COLORS
M
LC
N
RC
THEN
THE
ORACLE
RETURNS
THE
HANDLE
OF
THAT
MATRIX
OTHERWISE
THE
ORACLE
ASSIGNS
TO
THIS
MATRIX
THE
NEXT
AVAILABLE
HANDLE
INDEX
H
INSERTS
INTO
THE
DATABASE
A
RECORD
FOR
A
M
LC
N
RC
H
AND
RETURNS
H
TO
THE
ADVERSARY
MULTIPLICATION
WHEN
THE
ADVERSARY
MAKES
A
QUERY
MULT
H
H
THE
REPRESENTATION
ORACLE
LOOKS
UP
IN
THE
DATABASE
THE
RECORDS
CORRESPONDING
TO
THE
TWO
HANDLES
H
H
IF
SUCH
RECORDS
EXIST
LET
US
DENOTE
THEM
BY
A
M
LC
N
RC
H
AND
A
M
LC
N
RC
H
IF
THEY
HAVE
MATCHING
DIMENSIONS
AND
COLORS
NAMELY
N
RC
M
LC
THEN
THE
REPRESENTATION
ORACLE
COMPUTES
THEIR
MODULAR
PRODUCT
A
A
A
ZM
N
IF
THE
DATABASE
ALREADY
CONTAINS
THE
MATRIX
A
WITH
DIMENP
SIONS
AND
COLORS
M
LC
N
RC
THEN
THE
ORACLE
RETURNS
THE
HANDLE
OF
THAT
MATRIX
OTHERWISE
THE
ORACLE
ASSIGNS
TO
THIS
MATRIX
THE
NEXT
AVAILABLE
HANDLE
INDEX
H
IN
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
SERTS
INTO
THE
DATABASE
A
RECORD
FOR
A
M
LC
N
RC
H
AND
RETURNS
H
TO
THE
ADVERSARY
C
EQUIVALENT
PROGRAM
INDISTINGUISHABILITY
IN
THE
COLORED
MATRIX
MODEL
WE
NOW
PROCEED
TO
SHOW
THAT
ASSUMPTION
WHEN
PORTED
TO
THE
GENERIC
COLORED
MATRIX
MODEL
HOLDS
UNCONDITIONALLY
SPECIFICALLY
AN
ADVERSARY
THAT
GETS
T
HANDLES
FROM
THE
REPRESENTATION
ORACLE
HAS
AT
MOST
O
P
ADVANTAGE
IN
DISTINGUISHING
ANY
TWO
EQUIVALENT
PROGRAMS
RECALL
THE
STRUCTURE
OF
THE
RANDOMIZED
BRANCHING
PROGRAMS
IN
OUR
CONSTRUCTION
AS
EXPLAINED
IN
RN
DP
BP
SR
T
RN
T
I
N
B
D
I
B
RI
DI
B
R
I
R
T
R
N
T
R
I
N
B
D
I
B
R
I
DI
B
I
OUR
ANALYSIS
IN
THIS
GENERIC
MODEL
EXAMINES
ONLY
ADVERSARY
STRATEGIES
THAT
CANCEL
OUT
THE
RANDOMIZING
MATRICES
RI
RI
WHICH
MEANS
THAT
THESE
MATRICES
MUST
BE
MULTIPLIED
IN
ORDER
HENCE
IN
OUR
MODEL
WE
ASSIGN
TO
THE
MATRICES
D
I
B
LEFT
COLOR
I
AND
RIGHT
COLOR
I
AND
SIMILARLY
THE
MATRICES
D
I
B
ARE
ASSIGNED
THE
DISTINCT
LEFT
COLOR
I
AND
RIGHT
COLOR
I
THE
ROW
VECTORS
AND
BOTH
ARE
ASSIGNED
THE
LEFT
COLOR
AND
THEY
ARE
ASSIGNED
THE
RIGHT
COLORS
AND
RESPECTIVELY
SIMILARLY
THE
COLUMN
VECTORS
T
T
ARE
ASSIGNED
LEFT
COLORS
N
AND
N
RESPECTIVELY
AND
THEY
ARE
BOTH
ASSIGNED
THE
RIGHT
COLOR
N
THE
REPRESENTATION
ORACLE
IN
OUR
MODEL
ON
INPUT
A
PRIME
P
BRANCHING
PROGRAM
BP
AND
A
PARTIAL
INPUT
ASSIGNMENT
J
Σ
CHOOSES
THE
MATRICES
AND
VECTORS
AS
ABOVE
USING
THE
PROCEDURE
DESCRIBED
IN
SECTION
THEN
DISCARDS
THE
MATRICES
THAT
ARE
INCOMPATIBLE
WITH
THE
PARTIAL
ASSIGNMENT
J
Σ
AND
INTERACTS
WITH
THE
ADVERSARY
USING
THE
REMAINING
MATRICES
DENOTING
N
THE
INITIAL
DATABASE
OF
THE
REPRESENTATION
ORACLE
CONSISTS
OF
THE
FOLLOWING
MATRICES
AND
THEIR
REPRESENTATION
DB
P
BP
J
Σ
LC
N
RC
H
LC
N
RC
H
N
LC
N
RC
N
H
T
N
LC
N
RC
N
H
T
D
N
LC
I
N
RC
I
H
I
I
B
Σ
INP
I
J
I
B
D
N
LC
I
N
RC
I
H
I
I
B
J
I
B
D
I
B
N
LC
I
N
RC
I
H
I
IJ
B
Σ
INP
I
D
I
B
N
LC
I
N
RC
I
H
I
IJ
B
WHERE
THE
HANDLES
ARE
JUST
ALL
THE
INDEXES
DB
THE
ADVERSARY
IS
GIVEN
AS
INPUT
THE
REPRESENTATION
WITHOUT
THE
MATRICES
THEMSELVES
AND
THEN
IT
INTERACTS
WITH
THE
REPRESENTATION
ORACLE
AS
ABOVE
WE
DENOTE
THE
TOTAL
NUMBER
OF
HANDLES
THAT
THE
REPRESENTATION
ORACLE
SENDS
TO
THE
ADVERSARY
BY
T
THESE
INCLUDE
THE
INITIAL
DB
HANDLES
THAT
ARE
GIVEN
TO
THE
ADVERSARY
AS
INPUT
AND
ALL
THE
HANDLES
THAT
ARE
SENT
IN
REPLY
TO
THE
ADVERSARY
QUERIES
THE
VIEW
OF
THE
ADVERSARY
A
IN
THIS
INTERACTION
IS
DENOTED
BY
VIEWA
P
BP
J
Σ
T
STAGED
IN
THIS
MODEL
OUR
HARDNESS
ASSUMPTION
CAN
NOW
BE
STATED
AS
THE
FOLLOWING
THEOREM
THEOREM
FOR
ANY
PRIME
P
BRANCHING
PROGRAM
BP
AND
TWO
FUNCTIONALLYEQUIVALENT
PARTIAL
INPUT
ASSIGNMENTS
J
Σ
AND
J
Σ
AND
ANY
GENERIC
COLORED
MATRIXMODEL
ADVERSARY
A
THAT
RECEIVES
AT
MOST
T
HANDLES
FROM
THE
REPRESENTATION
ORACLE
THE
STATISTICAL
DISTANCE
BETWEEN
THE
VIEWS
VIEWA
P
BP
J
Σ
T
AND
VIEWA
P
BP
J
Σ
T
IS
BOUNDED
BELOW
O
NT
P
NOTE
THAT
WITHIN
THE
GENERIC
COLORED
MATRIX
MODEL
THE
ABOVE
CLAIM
IS
UNCONDITIONAL
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
C
SECURITY
PROOF
TO
PROVE
THEOREM
WE
DESCRIBE
AN
INFORMATION
THEORETIC
SIMULATION
STRATEGY
THAT
CAN
SIMULATE
THE
QUERIES
OR
IN
OTHER
WORDS
THE
VIEW
OF
THE
ADVERSARY
WITHOUT
KNOWLEDGE
OF
Σ
BUT
JUST
WITH
ORACLE
ACCESS
TO
THE
FUNCTION
BP
Σ
SINCE
THE
SIMULATION
RELIES
JUST
ON
BP
Σ
WHICH
ARE
IDENTICAL
OVER
THE
TWO
CHOICES
OF
Σ
Σ
THE
SIMULATION
IN
THE
TWO
SETTINGS
MUST
BE
IDENTICAL
AND
SINCE
IT
IS
A
GOOD
SIMULATION
IN
BOTH
CASES
THE
THEOREM
FOLLOWS
WE
NOTE
THAT
THE
OUR
SIMULATION
STRATEGY
WILL
BE
INEFFICIENT
AND
AS
A
CONSEQUENCE
WE
DO
NOT
GET
VIRTUAL
BACK
BOX
SECURITY
NONCOMMUTATIVE
FORMAL
POLYNOMIALS
WE
INTRODUCE
SOME
USEFUL
NOTATION
FOR
DESCRIBING
OUR
SIMULATION
STRATEGY
THE
SIMULATION
STRATEGY
MUST
KEEP
TRACK
OF
THE
COMPUTATION
THAT
THE
ADVERSARY
IS
PERFORMING
OVER
THE
REPRESENTATIONS
THAT
ARE
GIVEN
TO
IT
AND
IT
DOES
THAT
USING
NONCOMMUTATIVE
FORMAL
POLYNOMIALS
NCFPS
A
NONCOMMUTATIVE
FORMAL
POLYNOMIAL
OVER
THE
SET
OF
VARIABLES
V
VT
IS
OF
THE
FORM
I
CI
VITI
WHERE
CI
ZP
IS
A
CONSTANT
AND
VITI
IS
THE
ITH
MONOMIAL
AND
TI
DENOTES
THE
NUMBER
OF
VARIABLES
IN
THE
MONOMIAL
SPECIFICALLY
THE
ITI
ONES
THE
ADDITION
SUBTRACTION
AND
MULTIPLICATION
OF
ANY
TWO
NCFPS
IS
ALSO
A
NCFP
LET
T
T
DI
B
DI
B
DENOTE
THE
VARIABLES
CORRESPONDING
TO
THE
REPRESENTATIONS
THAT
ARE
GIVEN
TO
THE
ADVERSARY
AT
INITIALIZATION
AND
THEN
ANY
HANDLE
THAT
THE
ADVERSARY
GETS
DURING
THE
INTERACTION
MUST
CORRESPOND
TO
A
NCFP
IN
THESE
VARIABLES
SIMULATION
THE
SIMULATOR
GETS
AS
INPUT
THE
PRIME
P
THE
LENGTH
N
OF
THE
BRANCHING
PROGRAM
BP
AND
THE
SET
J
OF
FIXED
INPUT
BITS
BUT
NOT
THE
ACTUAL
INPUT
ASSIGNMENT
Σ
OR
Σ
AND
IT
HAS
ACCESS
TO
THE
FUNCTION
BP
Σ
BP
Σ
THE
SIMULATOR
MAINTAINS
A
DATABASE
P
OF
NCFPS
IN
THE
VARIABLES
ABOVE
EACH
STORED
IN
CANONICAL
SUM
OF
MONOMIALS
FORM
WHERE
THE
MONOMIALS
ARE
IN
LEXICOGRAPHIC
ORDER
ALONG
WITH
THEIR
REPRESENTATIONS
INITIALLY
THE
DATABASE
CONSISTS
OF
ONLY
THE
SINGLE
VARIABLE
TERMS
AND
THE
ADVERSARY
IS
GIVEN
THE
CORRESPONDING
CORRESPONDING
TO
T
T
DI
B
DI
B
REPRESENTATION
THEREAFTER
THE
SIMULATOR
INTERACTS
WITH
THE
ADVERSARY
PLAYING
THE
ROLE
OF
THE
REPRESENTATION
ORACLE
AS
FOLLOWS
ADDITION
WHEN
THE
ADVERSARY
MAKES
A
QUERY
ADD
H
H
THE
SIMULATOR
CHECKS
ITS
DATABASE
TO
FIND
THE
RECORDS
CORRESPONDING
TO
THESE
TWO
HANDLES
IF
THESE
RECORDS
EXIST
WE
DENOTE
THEM
BY
P
LC
M
N
RC
H
AND
P
LC
M
N
RC
H
WHERE
P
P
ARE
NCFPS
IF
BOTH
RECORDS
EXIST
AND
THEY
SATISFY
LC
M
LC
M
N
RC
N
RC
THEN
THE
SIMULATOR
COMPUTES
THE
NCFP
P
P
P
WITH
SCALAR
ARITHMETIC
MODULO
P
OTHERWISE
THE
SIMULATOR
RETURNS
THE
SIMULATOR
NEXT
CHECKS
IF
A
RECORD
FOR
P
LC
M
N
RC
H
EXISTS
IN
THE
DATABASE
AND
OTHERWISE
IT
INSERTS
SUCH
RECORD
TO
THE
DATABASE
USING
THE
NEXT
AVAILABLE
INDEX
FOR
H
FINALLY
THE
SIMULATOR
RETURNS
H
TO
THE
ADVERSARY
MULTIPLICATION
WHEN
THE
ADVERSARY
MAKES
A
QUERY
MULT
H
H
THE
REPRESENTATION
ORACLE
LOOKS
UP
IN
THE
DATABASE
THE
RECORDS
CORRESPONDING
TO
THE
TWO
HANDLES
H
H
IF
SUCH
RECORDS
EXIST
LET
US
DENOTE
THEM
BY
P
M
LC
N
RC
H
AND
P
M
LC
N
RC
H
IF
THEY
HAVE
MATCHING
DIMENSIONS
AND
COLORS
NAMELY
N
RC
M
LC
THEN
THE
REPRESENTATION
ORACLE
COMPUTES
THEIR
PRODUCT
P
P
P
IF
THEY
DO
NOT
EXIST
OR
ARE
NOT
MATCHING
THEN
THE
SIMULATOR
RETURNS
IF
LC
AND
RC
N
WHICH
MEANS
THAT
THIS
IS
A
MATRIX
CORRESPONDING
TO
PRODUCTS
THAT
INCLUDES
THE
BOOKEND
VECTORS
THEN
THE
SIMULATOR
PERFORMS
AN
ADDITIONAL
STEP
TO
ENSURE
CONSISTENCY
NOTE
THAT
BECAUSE
OF
THE
COLOR
CONSISTENCY
RE
QUIREMENTS
ALL
OF
THE
MONOMIALS
IN
P
MUST
BE
OF
THE
FORM
EITHER
C
NI
D
I
BI
T
N
T
FOR
SOME
BITS
BN
BUT
CANNOT
HAVE
A
MIX
OF
PRIMED
OR
C
I
D
I
B
I
AND
NONPRIMED
VARIABLES
MOREOVER
FOR
ALL
I
IJ
WE
MUST
HAVE
BI
Σ
INP
I
SINCE
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
FOR
THESE
STEPS
WE
ONLY
GIVE
OUT
ONE
MATRIX
IN
THE
PRIMAL
PROGRAM
AND
ONE
IN
THE
DUMMY
PROGRAM
CORRESPONDING
TO
THE
BIT
Σ
INP
I
CONSIDERING
THE
SEQUENCE
OF
BITS
B
BN
WE
SAY
THAT
THIS
IT
IS
CONSISTENT
WITH
THE
PROGRAM
BP
IF
THERE
EXISTS
AN
INPUT
Χ
SUCH
THAT
BI
ΧINP
I
FOR
ALL
I
MOREOVER
IN
THIS
CASE
WE
SOMETIMES
SAY
THAT
B
IS
CONSISTENT
WITH
Χ
IN
OTHER
WORDS
IF
WE
HAVE
TWO
STEPS
I
I
WITH
INP
I
INP
I
BUT
BI
BI
THEN
WE
SAY
THAT
B
IS
INCONSISTENT
WITH
THE
PROGRAM
BP
AND
OTHERWISE
IT
IS
CONSISTENT
THE
SAME
TERMINOLOGY
IS
EXTENDED
TO
THE
MONOMIALS
A
MONOMIAL
C
NI
D
I
BI
T
OR
N
T
IS
CONSISTENT
WITH
Χ
IF
BN
IS
CONSISTENT
WITH
Χ
AND
C
I
D
I
B
I
INCONSISTENT
OTHERWISE
IF
LC
AND
RC
N
THEN
THE
SIMULATOR
GOES
OVER
ALL
THE
MONOMIALS
N
IN
P
IF
IT
FINDS
ANY
MONOMIAL
THAT
IS
A
MADE
UP
OF
NONPRIMED
VARIABLES
C
I
D
I
BI
T
AND
B
IS
CONSISTENT
WITH
SOME
Χ
SUCH
THAT
BP
Χ
THEN
THE
SIMULATOR
REPLACES
N
T
IF
THERE
IS
ALREADY
A
THAT
MONOMIAL
BY
ITS
PRIMED
COUNTERPART
C
I
D
I
B
I
MONOMIAL
FOR
THESE
PRIMED
VARIABLES
THEN
IT
ADDS
THE
TWO
CONSTANTS
NOTE
THAT
THE
SIMULATOR
CAN
CHECK
THE
TWO
CONDITIONS
A
AND
B
ABOVE
SINCE
IT
KNOWS
THE
BRANCHING
PROGRAM
BP
AND
IT
HAS
ACCESS
TO
AN
ORACLE
FOR
BP
Σ
DENOTE
THE
RESULTING
NCFP
AFTER
ALL
THE
SUBSTITUTIONS
IF
ANY
BY
P
IF
LC
OR
RC
N
THEN
NO
SUBSTITUTIONS
ARE
MADE
AND
WE
HAVE
P
P
IF
THE
DATABASE
DOES
NOT
ALREADY
HAVE
A
RECORD
FOR
P
LC
M
N
RC
H
THEN
THE
SIMULATOR
INSERTS
ONE
USING
THE
NEXT
AVAILABLE
HANDLE
INDEX
H
THE
SIMULATOR
RETURNS
H
TO
THE
ADVERSARY
INTUITION
NOTE
THAT
A
CONSISTENT
MONOMIAL
MADE
OUT
OF
NONPRIMED
VARIABLES
CORRESPONDS
TO
THE
EVALUATION
OF
THE
PRIMARY
PROGRAM
ON
SOME
INPUT
Χ
AND
THE
COUNTERPART
MONOMIAL
OF
PRIMED
VARIABLES
CORRESPONDS
TO
THE
EVALUATION
OF
THE
DUMMY
PROGRAM
ON
THE
SAME
INPUT
BY
CONSTRUCTION
IF
BP
Χ
THEN
THESE
TWO
EVALUATIONS
YIELD
THE
SAME
ELEMENT
OF
ZP
EVEN
THOUGH
AS
NCFPS
THEY
CORRESPOND
TO
DIFFERENT
TERMS
IN
THE
SIMULATION
WE
THEREFORE
IDENTIFY
THESE
TWO
TERMS
AND
ONLY
KEEP
ONE
OF
THEM
THE
CHOICE
TO
KEEP
THE
DUMMY
TERM
IS
ARBITRARY
WE
JUST
AS
WELL
COULD
HAVE
KEPT
THE
PRIMAL
TERM
INSTEAD
WE
NOTE
THAT
SIMULATOR
ABOVE
USES
SUPERPOLYNOMIAL
TIME
AND
SPACE
BUT
THIS
IS
IRRELEVANT
SINCE
THE
STATEMENT
WE
ARE
PROVING
IS
AN
UNCONDITIONAL
PROBABILITY
STATEMENT
C
PROOF
THAT
THE
SIMULATION
WORKS
NOW
WE
NEED
TO
ARGUE
THAT
THE
VIEW
OF
THE
ADVERSARY
A
WHEN
INTERACTING
WITH
THE
SIMULATION
STRATEGY
ABOVE
IS
CLOSE
TO
ITS
VIEW
WHEN
INTERACTING
WITH
THE
REPRESENTATION
ORACLE
REGARDLESS
OF
WHETHER
THE
EXECUTION
USES
J
Σ
OR
J
Σ
IT
IS
CLEAR
BY
CONSTRUCTION
THAT
WHENEVER
THE
SIMULATOR
RETURNS
AN
EXISTING
HANDLE
FROM
ITS
DATABASE
I
E
THE
LATEST
QUERY
RETURNS
THE
SAME
NCFP
AS
A
PREVIOUS
ONE
THEN
ALSO
THE
REPRESENTATION
ORACLE
MUST
RETURN
THE
SAME
EXISTING
HANDLE
SINCE
ALSO
THE
ACTUAL
MATRIX
MUST
BE
THE
SAME
IN
THIS
CASE
IT
IS
LEFT
TO
SHOW
THAT
WHEN
THE
SIMULATOR
RETURNS
A
NEW
HANDLE
CORRESPONDING
TO
A
NEW
NCFP
THEN
WITH
HIGH
PROBABILITY
ALSO
THE
REPRESENTATION
ORACLE
WOULD
HAVE
RETURNED
A
NEW
HANDLE
CORRESPONDING
TO
A
NEW
ACTUAL
MATRIX
MODULO
P
FOR
THE
ARGUMENTS
BELOW
RECALL
AGAIN
THAT
THE
COLORING
CONSTRAINTS
RESTRICT
WHAT
MONOMIALS
WE
COULD
HAVE
IN
THE
NCFPS
IN
P
SPECIFICALLY
THE
VARIABLES
CAN
ONLY
APPEAR
IN
A
SPECIFIC
ORDER
IN
PARTICULAR
CAN
ONLY
BE
FOLLOWED
BY
OR
SIMILARLY
FOR
EACH
I
N
DI
AND
DI
CAN
ONLY
BE
FOLLOWED
BY
DI
OR
DI
FINALLY
DN
AND
DN
CAN
ONLY
BE
FOLLOWED
BY
T
SIMILAR
CONSTRAINTS
ARE
ALSO
TRUE
FOR
THE
PRIMED
VARIABLES
THIS
IMPLIES
THAT
PRIMED
AND
NONPRIMED
VARIABLES
CANNOT
BE
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
MULTIPLIED
AND
THEY
CAN
ONLY
BE
ADDED
FOR
TERMS
THAT
INCLUDE
THE
BOOKENDS
AND
T
OR
AND
T
WE
PARTITION
THE
ARGUMENT
INTO
TWO
CASES
ONE
FOR
QUERIES
THAT
RETURN
A
MATRIX
WITH
COLORS
LC
RC
N
AND
THE
OTHER
FOR
ALL
THE
OTHER
QUERIES
WE
BEGIN
WITH
THE
LATTER
CASE
NCFPS
WITH
LC
OR
RC
N
THIS
CASE
CORRESPONDS
ROUGHLY
TO
THE
PARTIAL
EVALUATION
ATTACKS
FROM
SECTION
CONSIDER
A
QUERY
MADE
BY
THE
ADVERSARY
THAT
RESULTS
IN
A
MATRIX
WITH
LEFT
COLOR
LC
I
E
I
OR
I
FOR
I
OR
RIGHT
COLOR
RC
N
I
E
RC
J
OR
RC
J
FOR
J
N
BELOW
WE
PROVIDE
THE
DETAILS
FOR
THE
NONPRIMED
CASE
LC
AND
RC
N
TREATMENT
OF
THE
OTHER
CASES
IS
ANALOGOUS
RECALL
THAT
WE
CONSIDER
HERE
A
QUERY
THAT
RESULTS
IN
A
NEW
FORMAL
POLYNOMIAL
DIFFERENT
THAN
THE
FORMAL
POLYNOMIALS
IN
ALL
PREVIOUS
QUERIES
WE
DENOTE
THE
PREVIOUS
NCFPS
THAT
THE
SIMULATOR
HAS
IN
ITS
DATABASE
BEFORE
THAT
QUERY
BY
PR
AND
THE
NEW
NCFP
GENERATED
BY
THE
QUERY
IS
DENOTED
BY
P
OUR
GOAL
IS
TO
SHOW
THAT
WITH
HIGH
PROBABILITY
OVER
THE
CHOICES
OF
THE
REPRESENTATION
ORACLE
THE
ACTUAL
MATRIX
THAT
RESULT
IS
ALSO
DIFFERENT
FROM
THE
MATRICES
IN
ALL
THE
PREVIOUS
QUERIES
THIS
WOULD
IMPLY
THAT
IN
BOTH
THE
SIMULATION
AND
THE
REAL
EXECUTION
THE
ADVERSARY
WILL
GET
A
NEW
HANDLE
IN
REPLY
TO
THIS
QUERY
FOR
THE
CASE
LC
I
AND
RC
J
N
THE
COLORING
CONSTRAINTS
IMPLY
THAT
ALL
THE
VARIABLES
IN
P
MUST
BE
NONPRIMED
AND
ALSO
THAT
P
DOES
NOT
INCLUDE
THE
VARIABLES
OR
T
THUS
P
DESCRIBES
AN
N
N
MATRIX
OF
THE
FORM
C
RI
DRJ
WHERE
D
IS
MOSTLY
DIAGONAL
EXCEPT
IN
THE
BOTTOM
QUADRANT
AND
THE
R
ARE
INVERTIBLE
MATRICES
FIX
ANY
ONE
OF
THE
PREVIOUS
NCFPS
PK
AND
WE
HAVE
TWO
SUBCASES
P
AND
PK
ARE
COLORED
DIFFERENTLY
THIS
IS
THE
EASY
CASE
BY
DEFINITION
OF
THE
MODEL
THE
HANDLE
THAT
IS
RETURNED
TO
THE
ADVERSARY
FOR
THIS
QUERY
IN
BOTH
THE
SIMULATION
AND
THE
REAL
EXECUTION
IS
DIFFERENT
THAN
WHAT
WAS
RETURNED
FOR
PK
P
AND
PK
HAVE
THE
SAME
LEFT
AND
RIGHT
COLORS
HENCE
ALSO
PK
IS
OF
THE
FORM
CK
RI
DK
RJ
NOTE
THAT
THE
SCALARS
C
CK
ZP
ARE
COMPLETELY
DETERMINED
BY
THE
QUERIES
OF
THE
ADVERSARY
AND
ARE
INDEPENDENT
OF
THE
RANDOM
CHOICES
OF
THE
REPRESENTATION
ORACLE
IN
THE
REAL
EXECUTION
AND
THE
MATRICES
RI
AND
RJ
ARE
THE
SAME
FOR
P
AND
PK
IT
FOLLOWS
THAT
THE
ACTUAL
MATRICES
IN
THE
REAL
EXECUTION
ARE
EQUAL
IF
AND
ONLY
IF
C
D
CK
DK
MOD
P
NOTE
NOW
THAT
THE
MATRICES
C
D
AND
CK
DK
CAN
THEMSELVES
BE
EXPRESSED
AS
FORMAL
MULTILINEAR
POLYNOMIALS
OVER
ZP
IN
THE
VARIABLES
DI
B
AND
THESE
POLYNOMIALS
HAVE
DEGREE
AT
MOST
N
AND
MUST
DIFFER
AS
FORMAL
POLYNOMIALS
SINCE
P
AND
PK
DIFFER
MOREOVER
SINCE
THE
DI
B
ARE
ALL
DIAGONAL
EXCEPT
THE
BOTTOM
RIGHT
QUADRANT
THEN
THE
TOP
LEFT
ENTRIES
IN
C
D
AND
CK
DK
CAN
BE
EXPRESSED
AS
THE
SAME
FORMAL
POLYNOMIALS
IN
THE
TOP
LEFT
ENTRIES
OF
THE
DI
B
SINCE
IN
OUR
CONSTRUCTION
ALL
THESE
TOP
LEFT
ENTRIES
ARE
CHOSEN
INDEPENDENTLY
AT
RANDOM
IN
ZP
WE
CONCLUDE
THAT
THE
TOP
LEFT
ENTRY
IN
THE
MATRIX
C
D
CK
DK
MOD
P
IS
OBTAINED
AS
THE
EVALUATION
OF
A
NONZERO
MULTILINEAR
POLYNOMIAL
OF
DEGREE
AT
MOST
N
IN
VARIABLES
THAT
ARE
CHOSEN
UNIFORMLY
IN
ZP
THE
SCHWARTZ
ZIPPEL
LEMMA
IMPLIES
THAT
THIS
ENTRY
IS
NONZERO
EXCEPT
WITH
PROBABILITY
BOUNDED
BELOW
N
P
HENCE
THE
PROBABILITY
THAT
THE
ACTUAL
MATRICES
CORRESPONDING
TO
P
PK
ARE
EQUAL
IS
ALSO
BOUNDED
BELOW
N
P
ALL
THE
OTHER
SUBCASES
ARE
TREATED
MOSTLY
THE
SAME
THE
NONPRIMED
CASE
LC
AND
RC
N
IS
IDENTICAL
TO
ABOVE
EXCEPT
THAT
HERE
WE
CONSIDER
THE
FIRST
ENTRY
IN
THE
COLUMN
VECTORS
C
DT
AND
CK
DK
T
THE
NONPRIMED
CASE
LC
AND
RC
N
IS
SIMILAR
BUT
WE
CONSIDER
THE
M
ENTRY
IN
THE
ROW
VECTORS
C
SD
AND
CK
SDK
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
NOTE
THAT
THE
FIRST
ENTRY
IS
IDENTICALLY
ZERO
BY
CONSTRUCTION
FINALLY
TREATMENT
OF
THE
PRIMED
VARIABLES
IS
IDENTICAL
TO
THEIR
NONPRIMED
COUNTERPARTS
NCFPS
WITH
LC
AND
RC
N
THIS
CASE
CORRESPONDS
ROUGHLY
TO
THE
MIXED
INPUT
ATTACKS
FROM
SECTION
IN
THIS
CASE
THE
FORMAL
POLYNOMIAL
P
CORRESPOND
N
D
I
BI
T
TO
A
MATRIX
AND
ALL
THE
TERMS
IN
P
ARE
EITHER
OF
THE
FORM
X
C
I
N
OR
X
C
I
D
I
BI
T
FOR
A
SCALAR
C
ZP
AND
BITS
BI
RECALL
THAT
THE
STRUCTURE
OF
AND
T
CANCELS
OUT
ALL
THE
RANDOM
DIAGONAL
ENTRIES
IN
EXCEPT
THE
BOTTOM
RIGHT
QUADRANT
HENCE
THE
ACTUAL
THE
D
I
B
AND
D
I
B
MATRIX
CORRESPONDING
TO
EVERY
SUCH
TERM
THEREFORE
DEPENDS
ONLY
ON
THE
PERMUTATION
MATRIX
IN
THE
BOTTOM
QUADRANT
THE
RANDOM
SCALARS
ΑI
BI
OR
Α
I
BI
AND
THE
T
OR
T
SPECIFICALLY
A
TERM
OF
PRIMED
VARIABLES
CORRESPONDS
TO
VECTORS
Ρ
WHERE
Ρ
T
AND
A
TERM
OF
NONPRIMED
VARIABLES
CORRESPONDS
Α
I
N
I
BI
TO
I
N
ΑI
BI
I
N
AI
BI
T
BELOW
WE
REFER
TO
THE
SET
OF
STEPS
IJ
IN
THE
PROGRAM
BP
WHICH
ARE
THE
STEPS
THAT
EXAMINE
THE
INPUT
BIT
ΧJ
AS
THE
JTH
BLOCK
OF
STEPS
A
MONOMIAL
X
AS
ABOVE
IS
CONSISTENT
WITH
THE
JTH
BLOCK
IF
FOR
ALL
I
IJ
WE
HAVE
BI
OR
FOR
ALL
I
IJ
WE
HAVE
BI
OTHERWISE
IF
FOR
SOME
STEPS
I
IJ
WE
HAVE
BI
AND
FOR
OTHERS
BI
WE
CALL
THIS
MONOMIAL
INCONSISTENT
WITH
THE
JTH
BLOCK
CLEARLY
A
MONOMIAL
IS
CONSISTENT
WITH
SOME
INPUT
Χ
IF
AND
ONLY
IF
IT
IS
CONSISTENT
WITH
ALL
THE
BLOCKS
J
AT
RANDOM
SUBJECT
TO
THE
CONNEXT
RECALL
THAT
THE
ΑI
B
AND
Α
I
B
WERE
CHOSEN
STRAINT
THAT
FOR
EVERY
J
AND
B
WE
HAVE
I
IJ
ΑI
B
I
IJ
Α
I
B
BELOW
IT
WILL
BE
CONVENIENT
TO
CONSIDER
THE
FOLLOWING
PROCEDURE
FOR
CHOOSING
THESE
SCALARS
DENOTING
K
IJ
AND
IJ
IK
FOR
B
WE
DRAW
RANDOM
SCALARS
ΓG
B
ZP
FOR
G
AND
THEN
FOR
H
K
SET
ΑIH
B
B
B
AND
Α
IH
B
B
B
WITH
INDEX
ARITHMETIC
MODULO
NOTE
THAT
B
B
IT
IS
EASY
TO
SEE
THAT
THIS
PROCESS
INDEED
GENERATES
THE
UNIFORM
DISTRIBUTION
SUBJECT
TO
THE
CONSTRAINT
ABOVE
WITH
THIS
PROCEDURE
FOR
EVERY
CONCRETE
CHOICE
OF
THE
VECTORS
T
AND
T
WE
CAN
EXPRESS
THE
SCALAR
CORRESPONDING
TO
EACH
NCFP
MONOMIAL
X
AS
A
FORMAL
MONOMIAL
IN
THE
Γ
BELOW
WE
PROVE
THAT
FOR
ANY
TWO
DISTINCT
NCFPS
P
P
IT
HOLDS
WITH
HIGH
PROBABILITY
OVER
THE
CHOICE
OF
THE
VECTORS
THAT
THE
CORRESPONDING
FORMAL
POLYNOMIALS
IN
THE
Γ
ARE
ALSO
BE
DISTINCT
APPLYING
THE
SCHWARTZ
ZIPPEL
LEMMA
AGAIN
WE
CONCLUDE
THAT
THE
SCALARS
THAT
CORRESPOND
TO
P
PK
ARE
DIFFERENT
WITH
HIGH
PROBABILITY
A
KEY
LEMMA
THAT
WE
USE
IS
THE
FOLLOWING
LEMMA
STRADDLING
LEMMA
FIX
AN
INTEGER
K
AND
CONSIDER
DRAWING
RANDOM
SCALARS
ΓJ
ZQ
FOR
J
AND
FOR
I
K
SETTING
ΑI
AND
Α
I
WITH
INDEX
ARITHMETIC
MODULO
NOTE
THAT
ALSO
FIX
TWO
SUBSETS
I
I
K
WITH
I
K
AND
THEN
WE
HAVE
THAT
I
I
ΑI
AND
I
I
ΑI
ARE
DISTINCT
FORMAL
MULTILINEAR
MONOMIALS
IN
THE
VARIABLES
PROOF
IT
IS
CLEAR
THAT
THE
TWO
PRODUCTS
ARE
INDEED
MULTILINEAR
MONOMIALS
IN
THE
Γ
IT
REMAINS
TO
SHOW
THAT
THEY
ARE
DISTINCT
TWO
CASE
ARISE
EITHER
I
I
OR
I
I
IF
I
I
THEN
SINCE
I
IS
A
NONEMPTY
SET
STRICTLY
CONTAINED
IN
K
THERE
MUST
EXISTS
AN
INDEX
J
I
SUCH
THAT
J
MOD
K
I
I
THIS
IMPLIES
THAT
I
I
ΑI
CONTAINS
BUT
I
I
ΑI
DOES
NOT
EXISTS
J
SUCH
THAT
EITHER
J
I
I
OR
J
I
I
IN
THE
FIRST
CASE
IF
I
I
THERE
WE
GET
BUT
I
I
ΑI
DOES
NOT
AND
IN
THE
SECOND
THAT
I
I
ΑI
CONTAINS
Γ
CASE
I
I
ΑI
CONTAINS
BUT
I
I
ΑI
DOES
NOT
ARMED
WITH
LEMMA
WE
CAN
NOW
FINALLY
PRESENT
OUR
ANALYSIS
LET
P
P
BE
TWO
FIXED
DISTINCT
NCFPS
IN
THE
DATABASE
OF
THE
SIMULATOR
AT
THE
END
OF
THE
SIMULATION
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
BOTH
WITH
COLORS
LC
RC
N
AND
WE
PROVE
THAT
THE
SCALAR
CORRESPONDING
TO
Δ
P
P
IN
THE
REAL
EXECUTION
OF
THE
REPRESENTATION
ORACLE
IS
NONZERO
EXCEPT
WITH
PROBABILITY
AT
MOST
P
SINCE
Δ
IS
A
NONZERO
NCFP
THEN
LET
X
BE
A
MONOMIAL
IN
Δ
WE
ANALYZE
TWO
CASES
WHERE
X
IS
EITHER
A
CONSISTENT
MONOMIAL
OR
AN
INCONSISTENT
ONE
INCONSISTENT
MONOMIALS
FOR
AN
INCONSISTENT
MONOMIAL
ASSUME
THAT
IT
IS
MADE
N
UP
OF
NONPRIMED
VARIABLES
X
C
I
D
I
BI
T
THE
CASE
FOR
PRIMED
VARIABLES
IS
SYMMETRIC
AS
ARGUED
ABOVE
THE
SCALAR
CORRESPONDING
TO
THIS
TERM
CAN
ALSO
BE
DESCRIBED
AS
C
ΑI
BI
ΨT
C
BI
BI
ΨT
I
N
I
N
FOR
SOME
PERMUTATION
MATRIX
Ψ
FOR
EVERY
CONCRETE
CHOICE
OF
ΨT
THIS
GIVES
A
SINGLE
MONOMIAL
IN
THE
Γ
WITH
COEFFICIENT
WHICH
IS
NONZERO
EXCEPT
WITH
PROBABILITY
O
P
WE
CLAIM
THAT
NO
OTHER
MONOMIAL
IN
THE
NCFP
Δ
CORRESPONDS
TO
THE
SAME
PRODUCT
OF
Γ
IT
IS
EASY
TO
SEE
THAT
NO
OTHER
MONOMIAL
OF
NONPRIMED
VARIABLES
IN
Δ
CAN
CORRESPOND
TO
THE
SAME
Γ
SINCE
EVERY
OTHER
NONPRIMED
MONOMIAL
MUST
CORRESPOND
TO
SOME
B
I
BI
FOR
SOME
I
N
AND
THUS
INCLUDE
ΑI
B
I
B
I
B
I
RATHER
THAN
ΑI
BI
BI
BI
TO
SEE
THAT
ALSO
NO
PRIMED
MONOMIAL
CAN
CORRESPOND
TO
THE
SAME
PRODUCT
WE
USE
LEMMA
ABOVE
SINCE
X
IS
AN
INCONSISTENT
TERMS
IT
IS
IN
PARTICULAR
INCONSISTENT
WITH
SOME
BLOCK
J
THIS
MEANS
THAT
THE
PRODUCT
OF
D
CONTAINS
BOTH
D
I
FOR
SOME
I
IJ
AND
D
I
FOR
SOME
OTHER
I
IJ
HENCE
THE
CORRESPONDING
PRODUCT
OF
THE
Α
CONTAINS
SOME
OF
THE
ΑI
FOR
I
IJ
BUT
NOT
ALL
OF
THEM
WE
CAN
THEREFORE
APPLY
LEMMA
USING
THE
SET
OF
STEPS
WHERE
WE
USE
ΑI
AS
OUR
NONEMPTY
PROPER
SUBSET
I
THE
LEMMA
THEN
TELLS
US
THAT
NO
PRODUCT
OF
THE
Α
I
B
CAN
YIELD
THE
SAME
PRODUCT
OF
Γ
WHICH
IS
WHAT
WE
NEEDED
TO
SHOW
SINCE
NO
OTHER
TERM
IN
Δ
HAS
THE
SAME
MONOMIAL
IN
THE
Γ
IT
MEANS
IN
PARTICULAR
THAT
THE
STANDARD
FORMAL
POLYNOMIAL
IN
THE
Γ
MUST
BE
NONZERO
WHENEVER
ΨT
SINCE
NOTHING
CAN
CANCEL
OUT
THIS
MONOMIAL
CONSISTENT
MONOMIALS
ASSUMING
THAT
Δ
CONSISTS
ONLY
OF
CONSISTENT
MONOMIALS
LET
X
BE
ONE
OF
THESE
MONOMIALS
AND
LET
Χ
BE
THE
INPUT
THAT
X
IS
CONSISTENT
WITH
OBSERVE
THAT
IF
BP
Χ
THEN
IT
MEANS
THAT
X
IS
MADE
UP
OF
PRIMED
VARIABLES
SINCE
NONPRIMED
MONOMIALS
THAT
ARE
CONSISTENT
WITH
ACCEPTED
INPUTS
ARE
REPLACED
BY
THE
SIMULATOR
WITH
THEIR
PRIMED
COUNTERPARTS
IN
THIS
CASE
WE
AGAIN
ARGUE
THAT
THAT
THERE
IS
NO
OTHER
TERM
IN
Δ
THAT
CORRESPONDS
TO
THE
SAME
PRODUCT
OF
Γ
AS
X
SINCE
EVERY
OTHER
PRIMED
OR
NONPRIMED
MONOMIAL
MUST
HAVE
SOME
ΑI
BI
IN
AT
LEAST
ONE
STEP
WHERE
X
HAS
ΑI
BI
IN
OTHER
WORDS
EVERY
OTHER
MONOMIAL
IS
CONSISTENT
WITH
A
DIFFERENT
INPUT
AND
HENCE
THE
PRODUCT
OF
THE
ΑI
B
VALUES
FOR
THAT
INPUT
WILL
BE
DIFFERENT
IT
REMAINS
TO
EXAMINE
THE
CASE
WHERE
X
IS
CONSISTENT
WITH
AN
INPUT
Χ
SUCH
THAT
BP
Χ
IN
THIS
CASE
Δ
CAN
PERHAPS
CONTAIN
ANOTHER
TERM
CORRESPONDING
TO
THE
T
AND
THE
SAME
PRODUCT
OF
Γ
I
E
ONE
PRIMED
MONOMIAL
X
C
NI
D
I
Χ
INP
I
N
ONE
NONPRIMED
X
C
I
D
I
ΧINP
I
T
WE
ASSUME
WITHOUT
LOSS
OF
GENERALITY
THAT
BOTH
TERMS
EXIST
WITH
AT
LEAST
ONE
OF
C
C
NONZERO
DENOTING
BI
ΧINP
I
THE
UNIQUE
TERM
IN
Δ
WITH
THE
PRODUCT
OF
ALL
THE
Γ
CORRESPONDING
TO
X
X
IS
THEREFORE
Γ
BI
Γ
BI
C
T
C
Π
T
I
N
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
GARG
GENTRY
HALEVI
RAYKOVA
SAHAI
AND
WATERS
WHERE
Π
IS
THE
RESULTANT
NONIDENTITY
PERMUTATION
MATRIX
WHEN
THE
OUTPUT
OF
BP
IS
ZERO
SINCE
Π
IS
A
PERMUTATION
MATRIX
DIFFERENT
FROM
THE
IDENTITY
AND
SINCE
AT
LEAST
ONE
OF
C
C
IS
NONZERO
THE
EXPRESSION
C
T
C
Π
T
IS
NONZERO
EXCEPT
WITH
PROBABILITY
O
P
TO
BE
PRECISE
FOR
EVERY
PERMUTATION
Π
I
AND
EVERY
C
C
ZP
NOT
BOTH
ZERO
WE
HAVE
P
PR
C
T
C
Π
T
P
WHERE
THE
PROBABILITY
IS
TAKEN
OVER
THE
CHOICE
OF
THE
VECTORS
T
T
SUCH
THAT
T
T
THE
BOUNDS
FOLLOW
FROM
THE
FACTS
THAT
ONCE
T
HAVE
BEEN
CHOSEN
THE
VALUES
T
CAN
BE
CHOSEN
IN
A
WAY
SUCH
THAT
THE
EXPRESSION
EVALUATES
TO
WITH
PROBABILITY
P
AND
THAT
IF
EITHER
C
OR
C
IS
ZERO
THEN
THE
EXPRESSION
IS
WITH
PROBABILITY
P
TAKING
UNION
BOUND
GIVES
THE
ABOVE
INEQUALITY
WE
AGAIN
CONCLUDE
THAT
EXCEPT
WITH
SMALL
PROBABILITY
OVER
THE
CHOICE
OF
THE
VECTORS
THE
FORMAL
POLYNOMIAL
IN
THE
Γ
MUST
BE
NONZERO
COMPLETING
THE
PROOF
WE
HAVE
SHOWN
THAT
FOR
EVERY
NONZERO
NCFP
Δ
IT
HOLDS
WITH
PROBABILITY
AT
LEAST
O
P
OVER
THE
CHOICE
OF
THE
VECTORS
T
AND
T
THAT
THE
CORRESPONDING
FORMAL
POLYNOMIAL
IN
THE
Γ
IS
ALSO
NONZERO
SINCE
THE
LATTER
FORMAL
POLYNOMIAL
HAS
DEGREE
IS
FOLLOWS
FROM
THE
SCHWARTZ
ZIPPEL
LEMMA
THAT
THE
ACTUAL
SCALAR
CORRESPONDING
TO
Δ
IS
NONZERO
WITH
PROBABILITY
AT
LEAST
O
N
P
WE
THUS
CONCLUDE
THAT
FOR
ANY
PAIR
OF
DISTINCT
NCFPS
THAT
THE
SIMULATOR
HAS
IN
ITS
DATABASE
THE
REPRESENTATION
ORACLE
WILL
HAVE
DISTINCT
MATRICES
EXCEPT
WITH
PROBABILITY
NO
MORE
THAN
O
N
P
AS
THERE
ARE
T
SUCH
NCFPS
THE
PROBABILITY
THAT
ANY
PAIR
OF
THEM
CAUSES
A
COLLISION
IS
AT
MOST
O
N
P
O
T
N
P
AND
AS
LONG
AS
THERE
ARE
NO
COLLISIONS
THE
VIEW
OF
THE
ADVERSARY
IN
THE
SIMULATED
EXECUTION
IS
IDENTICAL
TO
ITS
VIEW
IN
THE
REAL
ONE
THIS
COMPETES
THE
PROOF
OF
THEOREM
C
JUSTIFICATION
FOR
THE
MODEL
WE
NOW
DESCRIBE
OUR
INTUITION
FOR
WHY
ATTACKS
UNDER
THE
GENERIC
COLORED
MATRIX
MODEL
CONSTITUTE
THE
MOST
NATURAL
CLASS
OF
ATTACKS
AGAINST
OUR
OBFUSCATION
SCHEME
OUR
RESULTS
IN
THIS
MODEL
SHOULD
BE
VIEWED
AS
ENSURING
THAT
OUR
SCHEME
CANNOT
BE
BROKEN
BY
LINEAR
ALGEBRA
WE
NOTE
HOWEVER
THAT
AT
PRESENT
WE
ARE
NOT
AWARE
OF
ANY
PLAUSIBLE
ATTACK
ON
THE
SCHEME
THAT
DOES
NOT
FIT
IN
THIS
MODEL
EXCEPT
OF
COURSE
LATTICE
REDUCTION
ATTACKS
ON
THE
UNDERLYING
GGH
ENCODING
SCHEME
RECALL
THAT
IN
OUR
SCHEME
WE
GIVE
OUT
GGH
TYPE
ENCODING
OF
THE
ELEMENTS
OF
THE
MATRICES
D
I
B
AND
VECTORS
T
WHICH
ARE
COMPUTED
AS
D
I
B
RI
DI
B
RI
AND
T
RN
T
FOR
RANDOMLY
CHOSEN
RI
THE
ELEMENTS
OF
D
I
B
ARE
ENCODED
RELATIVE
TO
A
GGH
DENOMINATOR
ZI
THE
VECTORS
T
ARE
ENCODED
RELATIVE
TO
ZN
RESPECTIVELY
AND
THE
ZERO
TEST
PARAMETER
IS
GIVEN
RELATIVE
TO
A
PRODUCT
OF
ALL
THE
ZI
REGARDING
PLAUSIBLE
ATTACKS
ON
THE
SCHEME
WE
NOTE
THE
FOLLOWING
POINTS
USING
THE
ZERO
TEST
PARAMETER
TO
CANCEL
OUT
THE
ZI
REQUIRES
AN
ELEMENT
WHICH
IS
ENCODED
RELATIVE
TO
THE
PRODUCT
OF
ALL
OF
THEM
AND
OBTAINING
SUCH
AN
ELEMENT
FROM
THE
GIVEN
PUBLIC
PARAMETERS
BOILS
DOWN
ESSENTIALLY
TO
COMPUTING
A
MULTILINEAR
FUNCTION
WITH
EACH
TERM
HAVING
EXACTLY
ONE
ELEMENT
ENCODED
RELATIVE
TO
EACH
ZI
NOTE
THAT
THE
PRESENCE
OF
NOISE
IN
THE
NUMERATOR
SEEMS
TO
EFFECTIVELY
DESTROY
THE
UTILITY
OF
PERFORMING
ANY
HIGHER
DEGREE
COMPUTATIONS
SUCH
AS
BUILDING
A
TERM
WHICH
IS
DEGREE
TWO
IN
EACH
ZI
IN
THE
DENOMINATOR
AND
THEN
ATTEMPTING
TO
COMPUTE
A
SQUARE
ROOT
TRYING
TO
MIX
AND
MATCH
ELEMENTS
FROM
DIFFERENT
MATRICES
VECTORS
OR
TO
MULTIPLY
THESE
MATRICES
OUT
OF
ORDER
MAKES
IT
SEEMINGLY
IMPOSSIBLE
TO
ELIMINATE
THE
RANDOM
RI
COPYRIGHT
BY
SIAM
UNAUTHORIZED
REPRODUCTION
OF
THIS
ARTICLE
IS
PROHIBITED
DOWNLOADED
TO
REDISTRIBUTION
SUBJECT
TO
SIAM
LICENSE
OR
COPYRIGHT
SEE
HTTP
WWW
SIAM
ORG
JOURNALS
OJSA
PHP
INDISTIGUISHABILITY
OBFUSCATION
AND
FUNC
ENCRYPTION
AT
THE
SAME
TIME
IT
SEEMS
THAT
GGH
SPECIFIC
ATTACKS
SUCH
AS
THE
WEAK
DISCRETE
LOGARITHM
ATTACK
FROM
ARE
NOT
APPLICABLE
TO
OUR
SCHEME
SINCE
THIS
SCHEME
DOES
NOT
PROVIDE
ENCODING
OF
KNOWN
CONSTANTS
SUCH
AS
ZERO
OR
ONE
THAT
ARE
NEEDED
IN
SUCH
ATTACKS
ALTHOUGH
A
NONTRIVIAL
ENCODING
OF
ZERO
RELATIVE
TO
THE
PRODUCT
OF
ALL
THE
ZI
IS
OBTAINED
AS
PART
OF
THE
COMPUTATION
IT
IS
NOT
CLEAR
HOW
AN
ATTACKER
CAN
COMPUTE
A
LOWER
LEVEL
ENCODING
OF
ZERO
RELATIVE
TO
JUST
PART
OF
THE
ZI
AS
REQUIRED
THOSE
ATTACKS
GIVEN
THESE
DIFFICULTIES
IN
DEVISING
ATTACKS
THAT
DO
NOT
RESPECT
THE
MATRIX
STRUCTURE
OR
THEIR
ORDER
WE
THEREFORE
DEVISED
THE
GENERIC
COLORED
MATRIX
MODEL
TO
ISOLATE
AND
ANALYZE
THE
ATTACKS
THAT
DO
RESPECT
THIS
STRUCTURE
A
LARGE
BODY
OF
WORK
HAS
BEEN
DEVOTED
TO
THE
STUDY
OF
FAST
RANDOMIZED
APPROXIMATION
ALGORITHMS
FOR
PROBLEMS
IN
NUMERICAL
LINEAR
ALGEBRA
SEVERAL
WELL
STUDIED
PROBLEMS
IN
THIS
AREA
INCLUDE
LEAST
SQUARES
REGRESSION
LOW
RANK
APPROXIMATION
AND
APPROXIMATE
COMPUTATION
OF
LEVERAGE
SCORES
THESE
PROBLEMS
HAVE
MANY
APPLICATIONS
IN
DATA
MINING
AZAR
ET
AL
RECOMMENDATION
SYSTEMS
DRINEAS
ET
AL
INFORMATION
RETRIEVAL
PAPADIMITRIOU
ET
AL
WEB
SEARCH
ACHLIOPTAS
ET
AL
KLEINBERG
CLUSTERING
DRINEAS
ET
AL
MCSHERRY
AND
LEARNING
MIXTURES
OF
DISTRIBUTIONS
KANNAN
ET
AL
ACHLIOPTAS
AND
MCSHERRY
THE
USE
OF
RANDOMIZATION
AND
APPROXIMATION
ALLOWS
ONE
TO
SOLVE
THESE
PROBLEMS
MUCH
FASTER
THAN
WITH
DETERMINISTIC
METHODS
FOR
EXAMPLE
IN
THE
OVERCONSTRAINED
LEAST
SQUARES
REGRESSION
PROBLEM
WE
ARE
GIVEN
AN
N
D
MATRIX
A
OF
RANK
R
AS
INPUT
N
D
TOGETHER
WITH
AN
N
COLUMN
VECTOR
B
THE
GOAL
IS
TO
OUTPUT
A
VECTOR
X
SO
THAT
WITH
HIGH
PROBABILITY
AX
B
Ε
MINX
AX
B
FOR
SOME
SMALL
ENOUGH
Ε
THE
MINIMIZING
VECTOR
X
CAN
BE
EXPRESSED
IN
TERMS
OF
THE
MOORE
PENROSE
PSEUDOINVERSE
A
OF
A
NAMELY
X
A
B
THE
PSEUDOINVERSE
IS
DISCUSSED
IN
DEFINITION
SEE
SECTION
FOR
SOME
NOTATION
AND
BACKGROUND
IF
A
HAS
FULL
COLUMN
RANK
THIS
SIMPLIFIES
TO
X
A
A
A
B
THIS
MINIMIZER
CAN
BE
COMPUTED
DETERMINISTICALLY
IN
O
TIME
BUT
WITH
RANDOMIZATION
AND
APPROXIMATION
THIS
PROBLEM
CAN
BE
SOLVED
IN
O
ND
LOG
D
POLY
DΕ
TIME
SARLO
DRINEAS
ET
AL
WHICH
IS
MUCH
FASTER
FOR
D
N
AND
NOT
TOO
SMALL
HERE
POLY
DΕ
DENOTES
A
LOW
DEGREE
POLYNOMIAL
IN
DΕ
THE
GENERALIZATION
OF
THIS
PROBLEM
TO
P
REGRESSION
IS
TO
OUTPUT
A
VECTOR
X
SO
THAT
WITH
HIGH
PROBABILITY
AX
B
P
Ε
MINX
AX
B
P
THIS
CAN
BE
SOLVED
EXACTLY
USING
CONVEX
PROGRAMMING
THOUGH
WITH
RANDOMIZATION
AND
APPROXIMATION
IT
IS
POSSIBLE
TO
ACHIEVE
O
ND
LOG
N
POLY
DΕ
TIME
CLARKSON
ET
AL
FOR
ANY
CONSTANT
P
P
ANOTHER
EXAMPLE
IS
LOW
RANK
APPROXIMATION
HERE
WE
ARE
GIVEN
AN
N
N
MATRIX
WHICH
CAN
BE
GENERALIZED
TO
N
D
AND
AN
INPUT
PARAMETER
K
THE
GOAL
IS
TO
FIND
AN
N
N
MATRIX
A
OF
RANK
AT
MOST
K
FOR
WHICH
A
A
F
Ε
A
AK
F
WHERE
N
N
FOR
AN
N
N
MATRIX
B
B
I
J
BI
J
IS
THE
SQUARED
FROBENIUS
NORM
AND
AK
ARGMINRANK
B
K
A
B
F
HERE
AK
CAN
BE
COMPUTED
DETERMINISTICALLY
USING
THE
SINGULAR
VALUE
DECOMPOSITION
IN
O
TIME
HOWEVER
USING
RANDOMIZATION
AND
APPROXIMATION
THIS
PROBLEM
CAN
BE
SOLVED
IN
O
NNZ
A
K
Ε
K
LOG
K
N
POLY
K
Ε
TIME
SARLO
CLARKSON
AND
WOODRUFF
WHERE
NNZ
A
DENOTES
THE
NUMBER
OF
NONZERO
ENTRIES
OF
A
THE
PROBLEM
CAN
ALSO
BE
SOLVED
USING
RANDOMIZATION
AND
APPROXIMATION
IN
O
LOG
N
N
POLY
K
Ε
TIME
SARLO
WHICH
MAY
BE
FASTER
THAN
THE
FORMER
FOR
DENSE
MATRICES
AND
LARGE
K
ANOTHER
PROBLEM
THAT
WE
CONSIDER
IS
APPROXIMATING
THE
LEVERAGE
SCORES
GIVEN
AN
N
D
MATRIX
A
WITH
N
D
ONE
CAN
WRITE
A
U
V
IN
ITS
SINGULAR
VALUE
DECOMPOSITION
WHERE
THE
COLUMNS
OF
U
ARE
THE
LEFT
SINGULAR
VECTORS
IS
A
DIAGONAL
MATRIX
AND
THE
COLUMNS
OF
V
ARE
THE
RIGHT
SINGULAR
VECTORS
ALTHOUGH
U
HAS
ORTHONORMAL
COLUMNS
NOT
MUCH
CAN
BE
IMMEDIATELY
SAID
ABOUT
THE
SQUARED
LENGTHS
UI
OF
ITS
ROWS
THESE
VALUES
ARE
KNOWN
AS
THE
LEVERAGE
SCORES
WHICH
MEASURE
THE
EXTENT
TO
WHICH
THE
SINGULAR
VECTORS
OF
A
ARE
CORRELATED
WITH
THE
STANDARD
BASIS
THE
LEVERAGE
SCORES
ARE
BASIS
INDEPENDENT
SINCE
THEY
ARE
EQUAL
TO
THE
DIAGONAL
ELEMENTS
OF
THE
PROJECTION
MATRIX
ONTO
THE
SPAN
OF
THE
COLUMNS
OF
A
SEE
DRINEAS
ET
AL
FOR
BACKGROUND
ON
LEVERAGE
SCORES
AS
WELL
AS
A
LIST
OF
APPLICATIONS
THE
LEVERAGE
SCORES
WILL
ALSO
PLAY
A
CRUCIAL
ROLE
IN
OUR
WORK
AS
WE
SHALL
SEE
THE
GOAL
OF
APPROXIMATING
THE
LEVERAGE
SCORES
IS
TO
SIMULTANEOUSLY
FOR
EACH
I
N
OUTPUT
A
CONSTANT
FACTOR
APPROXIMATION
TO
UI
USING
RANDOMIZATION
THIS
CAN
BE
SOLVED
IN
O
ND
LOG
N
LOG
D
LOG
N
TIME
DRINEAS
ET
AL
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
THERE
ARE
ALSO
SOLUTIONS
FOR
THESE
PROBLEMS
BASED
ON
SAMPLING
THEY
EITHER
GET
A
WEAKER
ADDITIVE
ERROR
FRIEZE
ET
AL
PAPADIMITRIOU
ET
AL
ACHLIOPTAS
AND
MCSHERRY
DRINEAS
ET
AL
DRINEAS
AND
MAHONEY
RUDELSON
AND
VERSHYNIN
DESHPANDE
ET
AL
OR
THEY
GET
A
BOUNDED
RELATIVE
ERROR
BUT
ARE
SLOW
DESHPANDE
AND
VEMPALA
DRINEAS
ET
AL
MANY
OF
THE
LATTER
ALGORITHMS
WERE
IMPROVED
INDEPENDENTLY
BY
DESHPANDE
AND
VEMPALA
AND
SARLO
AS
WELL
AS
IN
FOLLOW
UP
WORK
DRINEAS
ET
AL
NGUYEN
ET
AL
MAGEN
AND
ZOUZIAS
THERE
ARE
ALSO
SOLUTIONS
BASED
ON
ITERATIVE
AND
CONJUGATE
GRADIENT
METHODS
SEE
FOR
EXAMPLE
TREFETHEN
AND
BAU
OR
ZOUZIAS
AND
FRERIS
AS
RECENT
EXAMPLES
THESE
METHODS
REPEATEDLY
COMPUTE
MATRIX
VECTOR
PRODUCTS
AX
FOR
VARIOUS
VECTORS
X
IN
THE
MOST
COMMON
SETTING
SUCH
PRODUCTS
REQUIRE
NNZ
A
TIME
THUS
THE
WORK
PER
ITERATION
OF
THESE
METHODS
IS
NNZ
A
AND
THE
NUMBER
OF
ITERATIONS
N
THAT
ARE
PERFORMED
DEPENDS
ON
THE
DESIRED
ACCURACY
SPECTRAL
PROPERTIES
OF
A
NUMERICAL
STABILITY
ISSUES
AND
OTHER
CONCERNS
AND
CAN
BE
LARGE
A
RECENT
SURVEY
SUGGESTS
THAT
N
IS
TYPICALLY
K
FOR
KRYLOV
METHODS
SUCH
AS
ARNOLDI
AND
LANCZOS
ITERATIONS
TO
APPROXIMATE
THE
K
LEADING
SINGULAR
VECTORS
HALKO
ET
AL
ONE
CAN
ALSO
USE
SOME
OF
THESE
TECHNIQUES
TOGETHER
FOR
EXAMPLE
BY
FIRST
OBTAINING
A
PRECONDITIONER
USING
THE
JOHNSON
LINDENSTRAUSS
JL
TRANSFORM
JOHNSON
AND
LINDENSTRAUSS
THEN
RUNNING
AN
ITERATIVE
METHOD
WHILE
THESE
RESULTS
ILLUSTRATE
THE
POWER
OF
RANDOMIZATION
AND
APPROXIMATION
THEIR
MAIN
DRAWBACK
IS
THAT
THEY
ARE
NOT
OPTIMAL
FOR
EXAMPLE
FOR
REGRESSION
WE
COULD
HOPE
FOR
O
NNZ
A
POLY
D
Ε
TIME
IDEALLY
WHILE
THE
O
ND
LOG
D
POLY
D
Ε
TIME
ALGORITHM
FOR
LEAST
SQUARES
REGRESSION
IS
ALMOST
OPTIMAL
FOR
DENSE
MATRICES
IF
NNZ
A
ND
SAY
NNZ
A
O
N
AS
COMMONLY
OCCURS
THIS
COULD
BE
MUCH
WORSE
THAN
AN
O
NNZ
A
POLY
D
Ε
TIME
ALGORITHM
SIMILARLY
FOR
LOW
RANK
APPROXIMATION
THE
BEST
KNOWN
ALGORITHMS
THAT
ARE
CONDITION
INDEPENDENT
RUN
IN
O
NNZ
A
K
Ε
K
LOG
K
N
POLY
K
Ε
TIME
WHILE
WE
COULD
HOPE
FOR
O
NNZ
A
POLY
K
Ε
TIME
RESULTS
WE
RESOLVE
THESE
GAPS
BY
ACHIEVING
ALGORITHMS
FOR
LEAST
SQUARES
REGRESSION
LOW
RANK
APPROXIMATION
AND
APPROXIMATE
LEVERAGE
SCORES
WHOSE
TIME
COMPLEXITIES
HAVE
A
LEADING
ORDER
TERM
THAT
IS
O
NNZ
A
SOMETIMES
UP
TO
A
LOG
FACTOR
WITH
CONSTANT
FACTORS
THAT
ARE
INDEPENDENT
OF
ANY
NUMERICAL
PROPERTIES
OF
A
OUR
RESULTS
ARE
AS
FOLLOWS
LEAST
SQUARES
REGRESSION
WE
PRESENT
SEVERAL
ALGORITHMS
FOR
AN
N
D
MATRIX
A
WITH
RANK
R
AND
GIVEN
Ε
ONE
HAS
A
RUNTIME
BOUND
OF
O
NNZ
A
LOG
N
Ε
R
R
R
LOG
Ε
STATED
IN
THEOREM
NOTE
THE
LOGARITHMIC
DEPENDENCE
ON
Ε
A
VARIATION
OF
THIS
ALGORITHM
HAS
AN
O
NNZ
A
LOG
Ε
D
LOG
Ε
RUNTIME
ANOTHER
HAS
A
RUNTIME
OF
O
NNZ
A
O
Ε
STATED
IN
THEOREM
NOTE
THAT
THE
DEPENDENCE
ON
NNZ
A
IS
LINEAR
HERE
O
F
F
LOG
O
F
WE
ALSO
GIVE
AN
ALGORITHM
FOR
GENERALIZED
MULTIPLE
RESPONSE
REGRESSION
WHERE
MIN
X
AX
B
F
IS
FOUND
FOR
B
RN
D
IN
TIME
O
NNZ
A
LOG
N
R
R
D
Ε
RD
R
R
LOG
N
SEE
THEOREM
WE
ALSO
NOTE
IMPROVED
RESULTS
FOR
CONSTRAINED
REGRESSION
SECTION
LOW
RANK
APPROXIMATION
WE
ACHIEVE
A
RUNTIME
OF
O
NNZ
A
N
POLY
K
LOG
N
Ε
TO
FIND
AN
ORTHONORMAL
L
W
RN
K
AND
DIAGONAL
D
RK
K
MATRIX
WITH
A
LDW
F
WITHIN
Ε
OF
THE
ERROR
OF
THE
BEST
RANK
K
APPROXIMATION
MORE
SPECIFICALLY
THEOREM
GIVES
A
TIME
BOUND
OF
O
NNZ
A
O
Ε
Ε
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
K
L
CLARKSON
AND
D
P
WOODRUFF
NOTE
THAT
LDW
IS
NOT
THE
TRUNCATED
SINGULAR
VALUE
DECOMPOSITION
BUT
HAS
THE
SAME
STRUCTURE
WE
USE
DIFFERENT
NOTATION
THAN
THE
USUAL
U
V
AS
A
REMINDER
OF
THIS
DISTINCTION
APPROXIMATE
LEVERAGE
SCORES
FOR
ANY
FIXED
CONSTANT
Ε
WE
SIMULTANEOUSLY
Ε
APPROXIMATE
ALL
N
LEVERAGE
SCORES
IN
O
NNZ
A
LOG
N
R
R
R
LOG
N
TIME
THIS
CAN
BE
GENERALIZED
TO
SUBCONSTANT
Ε
TO
ACHIEVE
O
NNZ
A
LOG
N
POLY
R
Ε
TIME
HOWEVER
IN
THE
APPLICATIONS
WE
ARE
AWARE
OF
SUCH
AS
CORESETS
FOR
REGRESSION
DASGUPTA
ET
AL
Ε
IS
TYPICALLY
CONSTANT
IN
THE
APPLICATIONS
OF
THIS
A
GENERAL
Ε
CAN
BE
ACHIEVED
BY
OVERSAMPLING
DRINEAS
ET
AL
DASGUPTA
ET
AL
P
REGRESSION
FOR
P
WE
ACHIEVE
A
RUNTIME
OF
O
NNZ
A
LOG
N
POLY
RΕ
IN
THEOREM
AS
AN
IMMEDIATE
COROLLARY
OF
OUR
RESULTS
AND
A
RECENT
CONNECTION
BETWEEN
AND
P
REGRESSION
GIVEN
IN
CLARKSON
ET
AL
FOR
P
THE
NNZ
A
LOG
N
TERM
CAN
BE
IMPROVED
TO
NNZ
A
AS
STATED
EARLIER
TECHNIQUES
ALL
OF
OUR
RESULTS
ARE
ACHIEVED
BY
IMPROVING
THE
TIME
COMPLEXITY
OF
COMPUTING
WHAT
IS
KNOWN
AS
A
SUBSPACE
EMBEDDING
FOR
A
GIVEN
N
D
MATRIX
A
CALL
RN
RT
A
SUBSPACE
EMBEDDING
MATRIX
FOR
A
IF
FOR
ALL
X
RD
AX
Ε
AX
THAT
IS
EMBEDS
THE
COLUMN
SPACE
COLSPACE
A
AX
X
RD
INTO
RT
WHILE
APPROXIMATELY
PRESERVING
THE
NORMS
OF
ALL
VECTORS
IN
THAT
SUBSPACE
THE
SUBSPACE
EMBEDDING
PROBLEM
IS
TO
FIND
SUCH
AN
EMBEDDING
MATRIX
OBLIVIOUSLY
THAT
IS
TO
DESIGN
A
DISTRIBUTION
Π
OVER
LINEAR
MAPS
RN
RT
SUCH
THAT
FOR
ANY
FIXED
N
D
MATRIX
A
IF
WE
CHOOSE
Π
THEN
WITH
LARGE
PROBABILITY
IS
AN
EMBEDDING
MATRIX
FOR
A
THE
GOAL
IS
TO
MINIMIZE
T
AS
A
FUNCTION
OF
N
D
AND
Ε
WHILE
ALSO
ALLOWING
THE
MATRIX
MATRIX
PRODUCT
A
TO
BE
COMPUTED
QUICKLY
A
CLOSELY
RELATED
CONSTRUCTION
EASILY
DERIVED
FROM
A
SUBSPACE
EMBEDDING
IS
AN
AFFINE
EMBEDDING
INVOLVING
AN
ADDITIONAL
MATRIX
B
RN
D
SUCH
THAT
AX
B
F
AX
B
F
D
D
FOR
ALL
X
R
SEE
SECTION
THESE
AFFINE
EMBEDDINGS
ARE
USED
FOR
OUR
LOW
RANK
APPROXIMATION
RESULTS
AND
IMMEDIATELY
IMPLY
APPROXIMATION
ALGORITHMS
FOR
CONSTRAINED
REGRESSION
WHEN
EMBEDDING
MATRIX
IS
A
FAST
JOHNSON
LINDENSTRAUSS
TRANSFORM
AILON
AND
CHAZELLE
ONE
CAN
SET
T
O
D
AND
ACHIEVE
O
ND
LOG
T
TIME
FOR
D
Γ
FOR
ANY
CONSTANT
Γ
ONE
CAN
ALSO
TAKE
TO
BE
A
SUBSAMPLED
RANDOMIZED
HADAMARD
TRANSFORM
SRHT
SEE
E
G
LEMMA
OF
BOUTSIDIS
AND
GITTENS
AND
SET
T
O
Ε
LOG
D
D
LOG
N
TO
ACHIEVE
O
ND
LOG
T
TIME
THESE
WERE
THE
FASTEST
KNOWN
SUBSPACE
EMBEDDINGS
ACHIEVING
ANY
VALUE
OF
T
NOT
DEPENDING
POLYNOMIALLY
ON
N
OUR
MAIN
RESULT
IMPROVES
THIS
TO
ACHIEVE
T
POLY
D
Ε
FOR
MATRICES
FOR
WHICH
A
CAN
BE
COMPUTED
IN
NNZ
A
TIME
GIVEN
OUR
NEW
SUBSPACE
EMBEDDING
WE
PLUG
IT
INTO
KNOWN
METHODS
OF
SOLVING
THE
LINEAR
ALGEBRA
PROBLEMS
PRESENTED
EARLIER
GIVEN
A
SUBSPACE
EMBEDDING
AS
A
BLACK
BOX
IN
FACT
OUR
SUBSPACE
EMBEDDING
IS
NOTHING
OTHER
THAN
THE
COUNTSKETCH
MATRIX
IN
THE
DATA
STREAM
LITERATURE
CHARIKAR
ET
AL
SEE
ALSO
THORUP
AND
ZHANG
THIS
MATRIX
WAS
ALSO
STUDIED
BY
DASGUPTA
ET
AL
FORMALLY
HAS
A
SINGLE
RANDOMLY
CHOSEN
NONZERO
ENTRY
SH
J
J
IN
EACH
COLUMN
J
FOR
A
RANDOM
MAPPING
H
N
T
HERE
FOR
I
N
H
I
IS
CHOSEN
INDEPENDENTLY
UNIFORMLY
FROM
T
WITH
PROBABILITY
SH
J
J
AND
WITH
PROBABILITY
SH
J
J
WHILE
SUCH
MATRICES
HAVE
BEEN
STUDIED
BEFORE
THE
SURPRISING
FACT
IS
THAT
THEY
ACTUALLY
PROVIDE
SUBSPACE
EMBEDDINGS
THE
USUAL
WAY
OF
PROVING
THAT
A
RANDOM
Π
IS
A
SUBSPACE
EMBEDDING
IS
TO
SHOW
THAT
FOR
ANY
FIXED
VECTOR
Y
RD
PR
SY
Ε
Y
EXP
D
ONE
THEN
PUTS
A
NET
SEE
E
G
ARORA
ET
AL
ON
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
THE
UNIT
VECTORS
IN
THE
COLUMN
SPACE
COLSPACE
A
AND
ARGUES
BY
A
UNION
BOUND
THAT
SY
Ε
Y
FOR
ALL
NET
POINTS
Y
THIS
THEN
IMPLIES
FOR
A
NET
THAT
IS
SUFFICIENTLY
FINE
AND
USING
THE
LINEARITY
OF
THE
MAPPING
THAT
SY
Ε
Y
FOR
ALL
VECTORS
Y
COLSPACE
A
WE
STRESS
THAT
OUR
CHOICE
OF
MATRICES
DOES
NOT
PRESERVE
THE
NORMS
OF
AN
ARBITRARY
SET
OF
EXP
D
VECTORS
WITH
HIGH
PROBABILITY
THUS
THIS
APPROACH
CANNOT
WORK
FOR
OUR
CHOICE
OF
MATRICES
WE
INSTEAD
CRITICALLY
USE
THAT
THESE
EXP
D
VECTORS
ALL
COME
FROM
A
D
DIMENSIONAL
SUBSPACE
I
E
COLSPACE
A
AND
THEREFORE
HAVE
A
VERY
SPECIAL
STRUCTURE
THE
STRUCTURAL
FACT
WE
USE
IS
THAT
FOR
ANY
Α
THERE
IS
A
FIXED
SET
H
OF
SIZE
D
Α
THAT
DEPENDS
ONLY
ON
THE
SUBSPACE
SUCH
THAT
FOR
ANY
UNIT
VECTOR
Y
COLSPACE
A
H
CONTAINS
THE
INDICES
OF
ALL
COORDINATES
OF
Y
LARGER
THAN
Α
IN
MAGNITUDE
IT
IS
USEFUL
TO
THINK
OF
Α
AS
ABOUT
D
THE
KEY
PROPERTY
HERE
IS
THAT
THE
SET
H
IS
INDEPENDENT
OF
Y
OR
IN
OTHER
WORDS
ONLY
A
SMALL
SET
OF
COORDINATES
COULD
EVER
BE
LARGE
AS
WE
RANGE
OVER
ALL
UNIT
VECTORS
IN
THE
SUBSPACE
THE
SET
H
SELECTS
EXACTLY
THE
SET
OF
LARGE
LEVERAGE
SCORES
OF
THE
COLUMNS
SPACE
COLSPACE
A
GIVEN
THIS
OBSERVATION
BY
SETTING
T
K
H
FOR
A
LARGE
ENOUGH
CONSTANT
K
RECALL
THAT
H
IS
THE
CARDINALITY
OF
H
WE
HAVE
THAT
WITH
PROBABILITY
K
THERE
ARE
NO
TWO
DISTINCT
J
J
WITH
J
J
H
FOR
WHICH
H
J
H
J
THAT
IS
WE
AVOID
THE
BIRTHDAY
PARADOX
AND
THE
COORDINATES
IN
H
ARE
PERFECTLY
HASHED
WITH
LARGE
PROBABILITY
CALL
THIS
EVENT
E
WHICH
WE
CONDITION
ON
GIVEN
A
UNIT
VECTOR
Y
IN
THE
SUBSPACE
WE
CAN
WRITE
IT
AS
Y
H
Y
L
WHERE
Y
H
CONSISTS
OF
Y
WITH
THE
COORDINATES
IN
N
H
REPLACED
WITH
WHILE
Y
L
CONSISTS
OF
Y
WITH
THE
COORDINATES
IN
H
REPLACED
WITH
WE
SEEK
TO
BOUND
SY
SY
H
SY
L
SY
H
SY
L
SINCE
E
OCCURS
WE
HAVE
THE
ISOMETRY
SY
H
Y
H
NOW
Y
L
Α
THUS
WE
CAN
APPLY
THEOREM
OF
DASGUPTA
ET
AL
WHICH
SHOWS
THAT
FOR
MAPPINGS
OF
OUR
FORM
IF
THE
INPUT
VECTOR
HAS
SMALL
INFINITY
NORM
THEN
PRESERVES
THE
NORM
OF
THE
VECTOR
UP
TO
AN
ADDITIVE
O
Ε
FACTOR
WITH
HIGH
PROBABILITY
HERE
IT
SUFFICES
TO
SET
Α
POLY
D
Ε
FINALLY
WE
CAN
BOUND
SY
H
SY
L
AS
FOLLOWS
DEFINE
G
N
H
TO
BE
THE
SET
OF
COORDINATES
J
FOR
WHICH
H
J
H
J
FOR
A
COORDINATE
J
H
THAT
IS
THOSE
COORDINATES
IN
N
H
THAT
COLLIDE
WITH
AN
ELEMENT
OF
H
THEN
SY
H
SY
L
SY
H
SY
L
WHERE
Y
L
IS
A
VECTOR
THAT
AGREES
WITH
Y
L
ON
COORDINATES
J
G
AND
IS
ON
THE
REMAINING
COORDINATES
BY
CAUCHY
SCHWARZ
THIS
IS
AT
MOST
SY
H
SY
L
WE
HAVE
ALREADY
ARGUED
THAT
SY
H
Y
H
FOR
UNIT
VECTORS
Y
MOREOVER
WE
CAN
AGAIN
APPLY
THEOREM
OF
DASGUPTA
ET
AL
TO
BOUND
SY
L
SINCE
CONDITIONED
ON
THE
COORDINATES
OF
Y
L
HASHING
TO
THE
SET
OF
ITEMS
THAT
THE
COORDINATES
OF
Y
H
HASH
TO
THEY
ARE
OTHERWISE
RANDOM
THUS
WE
AGAIN
HAVE
A
MAPPING
OF
OUR
FORM
WITH
A
SMALLER
T
AND
APPLIED
TO
A
SMALLER
N
APPLIED
TO
A
VECTOR
WITH
A
SMALL
INFINITY
NORM
THEREFORE
SY
L
L
O
Ε
Y
WITH
HIGH
PROBABILITY
FINALLY
BY
BERNSTEIN
BOUNDS
SINCE
THE
COORDINATES
OF
Y
L
ARE
SMALL
AND
T
IS
SUFFICIENTLY
LARGE
Y
L
Ε
WITH
HIGH
PROBABILITY
HENCE
CONDITIONED
ON
EVENT
E
SY
Ε
Y
WITH
PROBABILITY
EXP
D
AND
WE
CAN
COMPLETE
THE
ARGUMENT
BY
UNION
BOUNDING
OVER
A
SUFFICIENTLY
FINE
NET
WE
NOTE
THAT
AN
INSPIRATION
FOR
THIS
WORK
COMES
FROM
WORK
ON
ESTIMATING
NORMS
IN
A
DATA
STREAM
WITH
EFFICIENT
UPDATE
TIME
BY
DESIGNING
SEPARATE
DATA
STRUCTURES
FOR
THE
HEAVY
AND
LIGHT
COMPONENTS
OF
A
VECTOR
NELSON
AND
WOODRUFF
KANE
ET
AL
A
KEY
CONCEPT
HERE
IS
TO
CHARACTERIZE
THE
HEAVINESS
OF
COORDINATES
IN
A
VECTOR
SPACE
IN
TERMS
OF
ITS
LEVERAGE
SCORES
OPTIMIZING
THE
ADDITIVE
TERM
THE
APPROACH
OUTLINED
EARLY
ALREADY
ILLUSTRATES
THE
MAIN
IDEA
BEHIND
OUR
SUBSPACE
EMBEDDING
PROVIDING
THE
FIRST
KNOWN
SUBSPACE
EMBEDDING
THAT
CAN
BE
IMPLEMENTED
IN
NNZ
A
TIME
THIS
IS
SUFFICIENT
TO
ACHIEVE
OUR
NUMERICAL
LINEAR
ALGEBRA
RESULTS
IN
TIME
O
NNZ
A
POLY
D
Ε
FOR
REGRESSION
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
K
L
CLARKSON
AND
D
P
WOODRUFF
AND
O
NNZ
A
N
POLY
K
LOG
N
Ε
FOR
LOW
RANK
APPROXIMATION
HOWEVER
FOR
SOME
APPLICATIONS
D
K
OR
Ε
MAY
ALSO
BE
LARGE
THUS
IT
IS
IMPORTANT
TO
ACHIEVE
A
SMALL
DEGREE
IN
THE
ADDITIVE
POLY
D
Ε
AND
N
POLY
K
LOG
N
Ε
FACTORS
THE
NUMBER
OF
ROWS
OF
THE
MATRIX
IS
T
POLY
D
Ε
AND
THE
SIMPLEST
ANALYSIS
DESCRIBED
EARLIER
WOULD
GIVE
ROUGHLY
T
D
Ε
WE
NOW
SHOW
HOW
TO
OPTIMIZE
THIS
THE
FIRST
IDEA
FOR
BRINGING
THIS
DOWN
IS
THAT
THE
ANALYSIS
OF
DASGUPTA
ET
AL
CAN
ITSELF
BE
TIGHTENED
BY
APPLYING
IT
ON
VECTORS
COMING
FROM
A
SUBSPACE
INSTEAD
OF
ON
A
SET
OF
ARBITRARY
VECTORS
THIS
INVOLVES
OBSERVING
THAT
IN
THE
ANALYSIS
OF
DASGUPTA
ET
AL
IF
ON
INPUT
VECTOR
Y
AND
FOR
EVERY
I
T
J
H
J
I
IS
SMALL
THEN
THE
REMAINDER
SINCE
OUR
OF
THE
ANALYSIS
OF
DASGUPTA
ET
AL
DOES
NOT
REQUIRE
THAT
Y
BE
SMALL
VECTORS
COME
FROM
A
SUBSPACE
IT
SUFFICES
TO
SHOW
THAT
FOR
EVERY
I
T
J
H
J
I
U
J
IS
SMALL
WHERE
U
J
IS
THE
JTH
LEVERAGE
SCORE
OF
A
THEREFORE
WE
DO
NOT
NEED
TO
PERFORM
THIS
ANALYSIS
FOR
EACH
Y
BUT
CAN
CONDITION
ON
A
SINGLE
EVENT
THIS
EFFECTIVELY
ALLOWS
US
TO
INCREASE
Α
IN
THE
EARLIER
OUTLINE
THEREBY
REDUCING
THE
SIZE
OF
H
AS
WELL
AS
THE
SIZE
OF
T
SINCE
WE
HAVE
T
H
IN
FACT
WE
INSTEAD
FOLLOW
A
SIMPLER
AND
SLIGHTLY
TIGHTER
ANALYSIS
OF
KANE
AND
NELSON
BASED
ON
THE
HANSON
WRIGHT
INEQUALITY
ANOTHER
IDEA
IS
THAT
THE
ESTIMATION
OF
Y
H
THE
CONTRIBUTION
FROM
THE
HEAVY
COORDINATES
IS
INEFFICIENT
SINCE
IT
REQUIRES
A
PERFECT
HASHING
OF
THE
COORDINATES
WHICH
CAN
BE
OPTIMIZED
TO
REDUCE
THE
ADDITIVE
TERM
TO
Ε
POLYLOG
D
Ε
IN
THE
WORST
CASE
THERE
ARE
D
LEVERAGE
SCORES
OF
VALUE
ABOUT
OF
VALUE
ABOUT
OF
VALUE
ABOUT
AND
SO
ON
WHILE
THE
TOP
D
LEVERAGE
SCORES
NEED
TO
BE
PERFECTLY
HASHED
E
G
IF
A
CONTAINS
THE
D
D
IDENTITY
MATRIX
AS
A
SUBMATRIX
IT
IS
NOT
NECESSARY
THAT
THE
LEVERAGE
SCORES
OF
SMALLER
VALUE
YET
STILL
LARGER
THAN
D
BE
PERFECTLY
HASHED
ALLOWING
A
SMALL
NUMBER
OF
COLLISIONS
IS
OKAY
PROVIDED
THAT
ALL
VECTORS
IN
THE
SUBSPACE
HAVE
A
SMALL
NORM
ON
THESE
COLLISIONS
WHICH
JUST
CORRESPONDS
TO
THE
SPECTRAL
NORM
OF
A
SUBMATRIX
OF
A
THIS
GIVES
AN
ADDITIVE
TERM
OF
Ε
POLYLOG
D
Ε
INSTEAD
OF
O
Ε
THIS
REFINEMENT
IS
DISCUSSED
IN
SECTION
THERE
IS
YET
ANOTHER
WAY
TO
OPTIMIZE
THE
ADDITIVE
TERM
TO
ROUGHLY
LOG
N
WHICH
IS
USEFUL
IN
ITS
OWN
RIGHT
SINCE
THE
ERROR
PROBABILITY
OF
THE
MAPPING
CAN
NOW
BE
MADE
VERY
LOW
NAMELY
POLY
N
THIS
LOW
ERROR
PROBABILITY
BOUND
IS
NEEDED
FOR
OUR
APPLICATION
TO
P
REGRESSION
SEE
SECTION
BY
STANDARD
BALLS
AND
BINS
ANALYSES
IF
WE
HAVE
O
LOG
N
BINS
AND
BALLS
THEN
WITH
HIGH
PROBABILITY
EACH
BIN
WILL
CONTAIN
O
LOG
N
BALLS
WE
THUS
MAKE
T
ROUGHLY
O
LOG
N
AND
THINK
OF
HAVING
O
LOG
N
BINS
IN
EACH
BIN
I
O
LOG
N
HEAVY
COORDINATES
J
WILL
SATISFY
H
J
I
THEN
WE
APPLY
A
SEPARATE
JL
TRANSFORM
ON
THE
COORDINATES
THAT
HASH
TO
EACH
BIN
I
THIS
JL
TRANSFORM
MAPS
A
VECTOR
Z
RN
TO
AN
O
LOG
N
DIMENSIONAL
VECTOR
Z
FOR
WHICH
Z
Ε
Z
WITH
PROBABILITY
AT
LEAST
POLY
N
SINCE
THERE
ARE
ONLY
O
LOG
N
HEAVY
COORDINATES
MAPPING
TO
A
GIVEN
BIN
WE
CAN
PUT
A
NET
ON
ALL
VECTORS
ON
SUCH
COORDINATES
OF
SIZE
ONLY
POLY
N
WE
CAN
DO
THIS
FOR
EACH
OF
THE
O
LOG
N
BINS
AND
TAKE
A
UNION
BOUND
IT
FOLLOWS
THAT
THE
NORM
OF
THE
VECTOR
OF
COORDINATES
THAT
HASH
TO
EACH
BIN
IS
PRESERVED
AND
SO
THE
ENTIRE
VECTOR
Y
H
OF
HEAVY
COORDINATES
HAS
ITS
NORM
PRESERVED
BY
A
RESULT
OF
KANE
AND
NELSON
THE
JL
TRANSFORM
CAN
BE
IMPLEMENTED
IN
O
LOG
N
Ε
TIME
GIVING
TOTAL
TIME
O
NNZ
A
LOG
N
Ε
WHICH
REDUCES
T
TO
ROUGHLY
O
LOG
N
WE
ALSO
NOTE
THAT
FOR
APPLICATIONS
SUCH
AS
LEAST
SQUARES
REGRESSION
IT
SUFFICES
TO
SET
Ε
TO
BE
A
CONSTANT
IN
THE
SUBSPACE
EMBEDDING
SINCE
WE
CAN
USE
AN
APPROACH
IN
DRINEAS
ET
AL
AND
DASGUPTA
ET
AL
WHICH
GIVEN
CONSTANT
FACTOR
APPROXIMATIONS
TO
ALL
OF
THE
LEVERAGE
SCORES
CAN
THEN
ACHIEVE
A
Ε
APPROXIMATION
TO
LEAST
SQUARES
REGRESSION
BY
SLIGHTLY
OVERSAMPLING
ROWS
OF
THE
ADJOINED
MATRIX
A
B
PROPORTIONAL
TO
ITS
LEVERAGE
SCORES
AND
SOLVING
THE
INDUCED
SUBPROBLEM
THIS
RESULTS
IN
A
BETTER
DEPENDENCE
ON
Ε
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
WE
CAN
ALSO
COMPOSE
OUR
SUBSPACE
EMBEDDING
WITH
A
FAST
JL
TRANSFORM
AILON
AND
CHAZELLE
TO
FURTHER
REDUCE
T
TO
THE
OPTIMAL
VALUE
OF
ABOUT
D
SINCE
A
ALREADY
HAS
SMALL
DIMENSIONS
APPLYING
A
FAST
JL
TRANSFORM
IS
NOW
EFFICIENT
FINALLY
WE
CAN
USE
A
RECENT
RESULT
OF
CHEUNG
ET
AL
TO
REPLACE
MOST
DEPENDENCIES
ON
D
IN
OUR
RUNTIMES
FOR
REGRESSION
WITH
A
DEPENDENCE
ON
THE
RANK
R
OF
A
WHICH
MAY
BE
SMALLER
NOTE
THAT
WHEN
A
MATRIX
A
IS
INPUT
THAT
HAS
LEVERAGE
SCORES
THAT
ARE
ROUGHLY
EQUAL
TO
EACH
OTHER
THEN
THE
SET
H
OF
HEAVY
COORDINATES
IS
EMPTY
SUCH
A
LEVERAGE
SCORE
CONDITION
IS
ASSUMED
FOR
EXAMPLE
IN
THE
ANALYSIS
OF
MATRIX
COMPLETION
ALGORITHMS
FOR
SUCH
MATRICES
THE
SKETCHING
DIMENSION
CAN
BE
MADE
Ε
LOG
D
Ε
SLIGHTLY
IMPROVING
OUR
Ε
POLYLOG
D
Ε
DIMENSION
PRESENTED
EARLIER
RECENT
RELATED
WORK
IN
THE
FIRST
VERSION
OF
OUR
TECHNICAL
REPORT
ON
THESE
IDEAS
JULY
THE
ADDITIVE
POLY
K
D
Ε
TERMS
WERE
NOT
OPTIMIZED
IN
THE
SECOND
VERSION
THE
ADDITIVE
TERMS
WERE
MORE
REFINED
AND
RESULTS
ON
P
REGRESSION
FOR
GENERAL
P
WERE
GIVEN
BUT
THE
ANALYSIS
OF
SPARSE
EMBEDDINGS
IN
SECTION
WAS
ABSENT
IN
THE
THIRD
VERSION
WE
REFINED
THE
DEPENDENCE
STILL
FURTHER
WITH
THE
PARTITIONING
IN
SECTION
RECENTLY
A
NUMBER
OF
AUTHORS
HAVE
TOLD
US
OF
FOLLOW
UP
WORK
ALL
BUILDING
ON
OUR
INITIAL
TECHNICAL
REPORT
MILLER
AND
PENG
SHOWED
THAT
REGRESSION
CAN
BE
DONE
WITH
THE
ADDITIVE
TERM
SHARPENED
TO
SUBCUBIC
DEPENDENCE
ON
D
AND
WITH
LINEAR
DEPENDENCE
ON
NNZ
A
MORE
FUNDAMENTALLY
THEY
SHOWED
THAT
A
SUBSPACE
EMBEDDING
CAN
BE
FOUND
IN
O
NNZ
A
DΩ
Α
Ε
TIME
TO
DIMENSION
O
Α
LOG
D
NNZ
A
D
Ε
HERE
Ω
IS
THE
EXPONENT
FOR
ASYMPTOTICALLY
FAST
MATRIX
MULTIPLICATION
AND
Α
IS
AN
ARBITRARY
CONSTANT
SOME
CONSTANT
FACTORS
HERE
ARE
INCREASING
IN
Α
NELSON
AND
NGUYEN
OBTAINED
SIMILAR
RESULTS
FOR
REGRESSION
AND
SHOWED
THAT
SPARSE
EMBEDDINGS
CAN
EMBED
INTO
DIMENSION
O
IN
O
NNZ
A
TIME
THIS
CONSIDERABLY
IMPROVED
ON
OUR
DIMENSION
BOUND
FOR
THAT
RUNTIME
AT
THAT
POINT
OUR
SECOND
VERSION
ALTHOUGH
OUR
CURRENT
BOUND
IS
WITHIN
POLYLOG
D
Ε
OF
THEIR
RESULT
THEY
ALSO
SHOWED
A
DIMENSION
BOUND
OF
O
Α
FOR
Α
WITH
WORK
O
F
Α
NNZ
A
Ε
FOR
A
PARTICULAR
FUNCTION
OF
Α
THEIR
ANALYSIS
TECHNIQUES
ARE
QUITE
DIFFERENT
FROM
OURS
BOTH
OF
THESE
PAPERS
USE
FAST
MATRIX
MULTIPLICATION
TO
ACHIEVE
SUBCUBIC
DEPENDENCE
ON
D
IN
APPLICATIONS
OUR
CUBIC
TERM
INVOLVES
A
JL
TRANSFORM
WHICH
MAY
HAVE
FAVORABLE
PROPERTIES
IN
PRACTICE
REGARDING
SUBSPACE
EMBEDDINGS
TO
DIMENSIONS
NEAR
LINEAR
IN
D
NOTE
THAT
BY
COMPUTING
LEVERAGE
SCORES
AND
THEN
SAMPLING
BASED
ON
THOSE
SCORES
WE
CAN
OBTAIN
SUBSPACE
EMBEDDINGS
TO
O
DΕ
LOG
D
DIMENSIONS
IN
O
NNZ
A
LOG
N
O
R
TIME
THIS
MAY
BE
INCOMPARABLE
TO
THE
RESULTS
JUST
MENTIONED
FOR
WHICH
THE
RUNTIMES
INCREASE
AS
Α
POSSIBLY
SIGNIFICANTLY
PAUL
ET
AL
IMPLEMENTED
OUR
SUBSPACE
EMBEDDINGS
AND
FOUND
THAT
IN
THE
TECHTC
MATRICES
A
COLLECTION
OF
SPARSE
MATRICES
OF
DOCUMENT
TERM
DATA
WITH
AN
AVERAGE
OF
TO
ROWS
AND
COLUMNS
OUR
SUBSPACE
EMBEDDINGS
AS
USED
FOR
THE
PROJECTION
STEP
IN
THEIR
SVM
CLASSIFIER
ARE
ABOUT
TIMES
FASTER
THAN
THE
FAST
JL
TRANSFORM
WHILE
MAINTAINING
THE
SAME
CLASSIFICATION
ACCURACY
DESPITE
THIS
LARGE
IMPROVEMENT
IN
THE
TIME
FOR
PROJECTING
THE
DATA
FURTHER
RESEARCH
IS
NEEDED
FOR
SVM
CLASSIFICATION
AS
THE
JL
TRANSFORM
EMPIRICALLY
POSSESSES
ADDITIONAL
PROPERTIES
IMPORTANT
FOR
SVM
THAT
MAKE
IT
FASTER
TO
CLASSIFY
THE
PROJECTED
DATA
EVEN
THOUGH
THE
TIME
TO
PROJECT
THE
DATA
USING
OUR
METHOD
IS
FASTER
MENG
AND
MAHONEY
IMPROVED
ON
THE
FIRST
VERSION
OF
OUR
ADDITIVE
TERMS
FOR
SUBSPACE
EMBEDDINGS
AND
SHOWED
THAT
THESE
IDEAS
CAN
ALSO
BE
APPLIED
TO
P
REGRESSION
FOR
P
OUR
WORK
ON
THIS
IN
SECTION
ACHIEVES
P
AND
WAS
DONE
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
K
L
CLARKSON
AND
D
P
WOODRUFF
INDEPENDENTLY
WE
NOTE
THAT
OUR
ALGORITHMS
FOR
P
REGRESSION
REQUIRE
CONSTRUCTIONS
OF
EMBEDDINGS
THAT
ARE
SUCCESSFUL
WITH
HIGH
PROBABILITY
AS
WE
OBTAIN
FOR
GENERALIZED
EMBEDDINGS
THUS
SOME
OF
THE
CONSTRUCTIONS
IN
MILLER
AND
PENG
AND
NELSON
AND
NGUYEN
AS
WELL
AS
OUR
NONGENERALIZED
EMBEDDINGS
WILL
NOT
YIELD
SUCH
P
RESULTS
AFTER
THE
CONFERENCE
PUBLICATION
OF
THIS
ARTICLE
SEVERAL
ADDITIONAL
PAPERS
ON
THE
TOPIC
HAVE
APPEARED
IN
THE
LAST
YEAR
WOODRUFF
AND
ZHANG
SHOW
HOW
TO
OBTAIN
O
NNZ
A
TIME
EMBEDDINGS
FOR
ALL
P
NORMS
P
INTO
THE
NORM
WITH
EMBEDDING
DIMENSION
MAX
P
POLY
D
ROWS
AND
POLY
D
DISTORTION
THIS
ULTIMATELY
RESULTS
IN
O
NNZ
A
LOG
N
POLY
D
Ε
TIME
FOR
THE
P
REGRESSION
PROBLEMS
AS
WE
ACHIEVE
BUT
THE
SPACE
COMPLEXITY
OF
THE
ALGORITHM
IS
LOWER
DUE
TO
THE
LOWER
EMBEDDING
DIMENSION
WHICH
IS
THE
FIRST
WORK
TO
OBTAIN
A
DIMENSION
SMALLER
THAN
N
POLY
D
FOR
P
WHILE
THE
FOLLOW
UP
WORKS
MENG
AND
MAHONEY
NELSON
AND
NGUYEN
HAVE
SIMPLER
PROOFS
OF
OUR
SUBSPACE
EMBEDDING
RESULTS
WE
BELIEVE
THAT
OUR
ORIGINAL
TECHNIQUE
OF
SEPARATING
COORDINATES
INTO
HEAVY
AND
LIGHT
IS
STILL
VALUABLE
AS
IT
IS
CURRENTLY
THE
ONLY
KNOWN
WAY
OF
OBTAINING
O
NNZ
A
TIME
SUBSPACE
EMBEDDINGS
FOR
P
MENG
AND
MAHONEY
WOODRUFF
AND
ZHANG
FOR
P
IT
ALSO
CAPTURES
THE
INTUITION
ON
THE
STRUCTURE
OF
THE
SUBSPACE
VECTORS
THAT
WAS
USED
TO
ORIGINALLY
DISCOVER
THESE
RESULTS
AND
PROVIDES
AN
EMBEDDING
OF
ANY
SET
OF
EXP
D
VECTORS
THAT
HAVE
A
FIXED
SMALL
SET
OF
HEAVY
COORDINATES
NOT
ONLY
THOSE
THAT
COME
FROM
A
SUBSPACE
AVRON
ET
AL
SHOW
HOW
TO
USE
OUR
SPARSE
EMBEDDING
MATRICES
TOGETHER
WITH
ADDITIONAL
VANDERMONDE
LIKE
ASSUMPTIONS
ON
THE
STRUCTURE
OF
A
TO
ACHIEVE
THE
FASTEST
KNOWN
ALGORITHMS
FOR
POLYNOMIAL
FITTING
YANG
ET
AL
HAVE
FURTHER
EXTENDED
THEIR
AFOREMENTIONED
WORK
MENG
AND
MAHONEY
TO
OBTAIN
THE
FIRST
O
NNZ
A
TIME
ALGORITHMS
FOR
QUANTILE
REGRESSION
NELSON
AND
NGUYEN
HAVE
STUDIED
THE
PROBLEM
OF
OBTAINING
TRADE
OFFS
ON
THE
SPARSITY
REQUIRED
OF
SUBSPACE
EMBEDDINGS
VERSUS
THE
EMBEDDING
DIMENSION
AVRON
ET
AL
SHOW
HOW
TO
COMBINE
A
FAST
MULTIPLICATION
ALGORITHM
OF
PAGH
FOR
APPLYING
OUR
SUBSPACE
EMBEDDINGS
TO
THE
POLYNOMIAL
KERNEL
EXPANSION
K
A
OF
AN
UNDERLYING
MATRIX
A
IN
TIME
THAT
ONLY
DEPENDS
ON
O
NNZ
A
RATHER
THAN
ON
NNZ
K
A
RECENTLY
THE
SECOND
AUTHOR
HAS
WRITTEN
A
SURVEY
ON
THIS
TOPIC
WOODRUFF
WHICH
DISCUSSES
A
NUMBER
OF
THE
WORKS
COVERED
EARLIER
IN
THIS
ARTICLE
AND
OTHER
MORE
RECENT
WORKS
OUTLINE
WE
FORMALLY
DEFINE
OUR
SPARSE
EMBEDDING
CONSTRUCTION
IN
SECTION
WE
THEN
INTRODUCE
BASIC
NOTATION
AND
DEFINITIONS
IN
SECTION
AND
PRESENT
A
BASIC
ANALYSIS
IN
SECTION
A
MORE
REFINED
ANALYSIS
IS
GIVEN
IN
SECTION
IN
SECTION
GENERALIZED
EMBEDDINGS
WITH
HIGH
PROBABILITY
GUARANTEES
ARE
DISCUSSED
IN
THESE
SECTIONS
WE
GENERALLY
FOLLOW
THE
FRAMEWORK
PRESENTED
EARLIER
SPLITTING
COORDINATES
OF
COLUMN
SPACE
VECTORS
INTO
SETS
OF
LARGE
AND
SMALL
ONES
ANALYZING
EACH
SUCH
SET
SEPARATELY
THEN
BRINGING
THESE
ANALYSES
TOGETHER
SHIFTING
TO
APPLICATIONS
WE
DISCUSS
LEVERAGE
SCORE
APPROXIMATION
IN
SECTION
AND
REGRESSION
IN
SECTION
INCLUDING
THE
USE
OF
LEVERAGE
SCORES
AND
THE
ALGORITHMIC
MACHINERY
USED
TO
ESTIMATE
THEM
CONSIDERING
AFFINE
EMBEDDINGS
IN
SECTION
CONSTRAINED
REGRESSION
IN
SECTION
AND
ITERATIVE
METHODS
IN
SECTION
OUR
LOW
RANK
APPROXIMATION
ALGORITHMS
ARE
GIVEN
IN
SECTION
IN
WHICH
WE
USE
CONSTRUCTIONS
AND
ANALYSIS
BASED
ON
LEVERAGE
SCORES
AND
REGRESSION
IN
SECTION
WE
APPLY
GENERALIZED
SPARSE
EMBEDDINGS
TO
P
REGRESSION
IN
SECTION
WE
GIVE
SOME
PRELIMINARY
EXPERIMENTAL
RESULTS
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
SPARSE
EMBEDDINGS
DEFINITION
SPARSE
EMBEDDINGS
FOR
A
PARAMETER
T
WE
DEFINE
A
RANDOM
LINEAR
MAP
D
RN
RT
AS
FOLLOWS
H
N
T
IS
A
RANDOM
MAP
SO
THAT
FOR
EACH
I
N
H
I
T
FOR
T
T
WITH
PROBABILITY
T
T
N
IS
A
T
N
BINARY
MATRIX
WITH
H
I
I
AND
ALL
REMAINING
ENTRIES
D
IS
AN
N
N
RANDOM
DIAGONAL
MATRIX
WITH
EACH
DIAGONAL
ENTRY
INDEPENDENTLY
CHOSEN
TO
BE
OR
WITH
EQUAL
PROBABILITY
WE
WILL
REFER
TO
A
MATRIX
OF
THE
FORM
D
AS
A
SPARSE
EMBEDDING
MATRIX
NOTATION
ASSUMPTIONS
BACKGROUND
GENERAL
NOTATION
DEFINITION
O
WE
USE
THE
STANDARD
ASYMPTOTIC
NOTATION
O
F
X
F
X
LOG
O
F
X
FOR
A
FUNCTION
F
OF
X
WE
LET
POLY
X
DENOTE
X
O
AS
X
DEFINITION
INDICATOR
FOR
AN
EVENT
P
LET
P
DENOTE
WHEN
P
HOLDS
AND
OTHERWISE
DEFINITION
SET
CARDINALITY
FOR
A
FINITE
SET
H
WE
LET
H
DENOTE
THE
NUMBER
OF
ELEMENTS
OF
H
DEFINITION
FOR
REAL
VALUES
A
B
C
WE
USE
A
B
C
TO
DENOTE
THE
CONDITION
B
C
A
B
C
AND
EXTEND
THIS
WITH
THE
DISTRIBUTION
OF
MULTIPLICATION
OVER
THUS
FOR
E
A
E
B
C
IF
AND
ONLY
IF
E
B
C
A
E
B
C
MATRIX
NOTATION
ASSUMPTIONS
AND
BACKGROUND
THROUGHOUT
THIS
ARTICLE
A
RN
D
IS
AN
N
D
MATRIX
WITH
N
D
WE
ASSUME
THAT
A
HAS
NO
ROWS
OR
COLUMNS
CONTAINING
ONLY
ZEROS
SO
THAT
THE
NUMBER
OF
NONZERO
ENTRIES
OF
A
IS
AT
LEAST
N
WE
LET
R
DENOTE
THE
RANK
OF
A
DEFINITION
N
AI
AJ
NNZ
FOR
INTEGER
N
LET
N
N
LET
AI
DENOTE
THE
ITH
ROW
OF
A
AND
A
J
DENOTE
ITS
JTH
COLUMN
LET
NNZ
A
DENOTE
THE
NUMBER
OF
NONZERO
ENTRIES
OF
A
DEFINITION
NORMS
FOR
A
VECTOR
Y
RN
AND
P
THE
P
NORM
Y
P
I
N
YI
P
P
WE
MAY
OMIT
THE
SUBSCRIPT
FOR
THE
EUCLIDEAN
NORM
LET
A
F
DE
NOTE
ITS
FROBENIUS
NORM
I
N
J
D
AI
J
LET
A
SUPX
RD
AX
X
DENOTE
THE
SPECTRAL
NORM
OF
A
DEFINITION
COLSPACE
TR
LET
COLSPACE
A
DENOTE
THE
COLUMN
SPACE
OF
A
COLSPACE
A
AX
X
RD
I
E
THE
RANGE
OF
A
FOR
SQUARE
A
THE
TRACE
TR
A
I
N
AI
I
DEFINITION
RANK
SVD
PSEUDOINVERSE
BEST
RANK
K
THE
RANK
OF
A
RANK
A
IS
THE
DIMENSION
OF
ITS
COLUMN
SPACE
IT
IS
KNOWN
THAT
RANK
A
RANK
A
AS
SHOWN
BY
ECKART
AND
YOUNG
GOLUB
AND
VAN
LOAN
FOR
ANY
A
RN
D
OF
RANK
R
THERE
IS
U
RN
R
V
RD
R
AND
RK
R
CALLED
THE
SINGULAR
VALUE
DECOMPOSITION
SVD
OF
A
SUCH
THAT
A
U
V
WITH
U
AND
V
HAVING
ORTHONORMAL
COLUMNS
AND
A
DIAGONAL
MATRIX
WITH
POSITIVE
ENTRIES
ΣI
I
I
THE
SINGULAR
VALUES
OF
A
THIS
IS
THE
SO
CALLED
THIN
OR
ECONOMICAL
SVD
ALTERNATIVELY
U
AND
V
ARE
SQUARE
WITH
RN
D
AND
HAVING
SOME
DIAGONAL
ENTRIES
THAT
ARE
ZERO
THE
COLUMNS
OF
THE
SVD
ARE
PERMUTED
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
K
L
CLARKSON
AND
D
P
WOODRUFF
SO
THAT
THE
MOORE
PENROSE
PSEUDOINVERSE
OF
A
DENOTED
A
IS
V
U
WHERE
IS
THE
DIAGONAL
MATRIX
WITH
DIAGONAL
ENTRIES
ΣI
I
R
THE
BEST
RANK
K
APPROXIMATION
TO
A
IS
THE
MATRIX
AK
ARGMINRANK
Y
K
Y
A
F
WE
MAY
ALSO
WRITE
A
K
FOR
THIS
MATRIX
IT
IS
KNOWN
THAT
A
K
U
K
V
WHERE
K
IS
EQUAL
TO
IN
ITS
TOP
K
ENTRIES
AND
ZERO
THEREAFTER
WE
WILL
NEED
THE
UPPER
BOUND
PART
OF
KHINTCHINE
INEQUALITY
USING
A
CONSTANT
FACTOR
FOLLOWING
FROM
HAAGERUP
BOUND
HAAGERUP
LEMMA
KHINTCHINE
FOR
INTEGERS
N
P
AND
X
RN
LET
AI
N
BE
RANDOM
WITH
EACH
AI
INDEPENDENT
AND
EQUAL
TO
AND
WITH
EQUAL
PROBABILITY
THEN
E
A
X
P
P
C
P
X
WHERE
C
P
O
P
AS
P
BERNSTEIN
INEQUALITY
THE
FOLLOWING
VARIATION
OF
BERNSTEIN
WILL
BE
HELPFUL
LEMMA
FOR
L
T
AND
INDEPENDENT
RANDOM
VARIABLES
XI
T
WITH
V
I
VAR
XI
IF
V
LT
THEN
PR
XI
E
XI
LT
EXP
L
I
I
PROOF
HERE
BERNSTEIN
INEQUALITY
SAYS
THAT
FOR
YI
XI
E
XI
SO
THAT
E
VAR
XI
V
AND
YI
T
LOG
PR
YI
Z
V
ZT
I
BY
THE
QUADRATIC
FORMULA
THE
LATTER
IS
NO
MORE
THAN
L
WHEN
LT
Z
LT
WHICH
HOLDS
FOR
Z
LT
AND
V
LT
NOTATION
FOR
MATRIX
A
DEFINITION
U
U
LET
U
RN
R
HAVE
COLUMNS
THAT
FORM
AN
ORTHONORMAL
BASIS
FOR
THE
COLUMN
SPACE
COLSPACE
A
THE
U
OF
THE
SVD
A
U
V
COULD
BE
SUCH
A
BASIS
FOR
EXAMPLE
FOR
UN
THE
ROWS
OF
U
LET
UI
UI
THROUGHOUT
WE
LET
MIN
I
UI
T
AND
MAX
I
J
I
U
J
IT
WILL
BE
CONVENIENT
TO
REGARD
THE
ROWS
OF
A
AND
U
TO
BE
REARRANGED
SO
THAT
THE
UI
ARE
IN
NONINCREASING
ORDER
THUS
IS
LARGEST
OF
COURSE
THIS
ORDER
IS
UNKNOWN
AND
UNUSED
BY
OUR
ALGORITHMS
DEFINITION
YA
B
FOR
Y
RN
AND
A
B
N
LET
YA
B
DENOTE
THE
VECTOR
WITH
ITH
COORDINATE
EQUAL
TO
YI
WHEN
I
A
B
AND
ZERO
OTHERWISE
ANALYSIS
HANDLING
VECTORS
WITH
SMALL
ENTRIES
WE
BEGIN
THE
ANALYSIS
BY
CONSIDERING
YS
N
FOR
FIXED
UNIT
VECTORS
Y
COLSPACE
A
SINCE
Y
THERE
MUST
BE
A
UNIT
VECTOR
X
SO
THAT
Y
U
X
THUS
BY
CAUCHY
SCHWARTZ
SEE
WIKIPEDIA
ENTRY
ON
BERNSTEIN
INEQUALITIES
PROBABILITY
THEORY
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
YI
UI
X
UI
THIS
IMPLIES
THAT
YS
N
US
WE
EXTEND
THIS
TO
ALL
UNIT
VECTORS
IN
SUBSEQUENT
SECTIONS
WE
SHOW
AN
EMBEDDING
PROPERTY
FOR
YS
N
STATED
IN
LEMMA
TO
PROVE
THE
LEMMA
WE
NEED
THE
FOLLOWING
STANDARD
BALLS
AND
BINS
ANALYSIS
SIMILAR
TO
LEMMA
OF
DASGUPTA
ET
AL
LEMMA
FOR
ΔH
T
T
AND
MIN
I
UI
T
LET
EH
BE
THE
EVENT
THAT
W
MAX
UI
J
T
I
H
J
I
WHERE
W
T
LOG
T
ΔH
R
T
IF
T
US
N
T
LOG
T
ΔH
THEN
PR
EH
ΔH
PROOF
WE
WILL
APPLY
LEMMA
TO
PROVE
THAT
THE
BOUND
HOLDS
FOR
FIXED
J
T
WITH
FAILURE
PROBABILITY
ΔH
T
THEN
APPLY
A
UNION
BOUND
LET
XI
DENOTE
THE
RANDOM
VARIABLE
UI
H
I
J
I
WE
HAVE
THAT
XI
T
E
X
I
UI
T
R
T
AND
V
I
E
XI
I
UI
T
US
N
T
APPLYING
LEMMA
WITH
L
LOG
T
ΔH
GIVES
PR
XI
T
LOG
T
ΔH
R
T
EXP
LOG
T
ΔH
ΔH
T
I
WHEN
US
N
T
LT
OR
T
US
N
LT
WE
WILL
USE
THE
FOLLOWING
THEOREM
FROM
HANSON
AND
WRIGHT
RECALL
THAT
TR
B
I
N
BI
I
FOR
B
RN
N
THEOREM
HANSON
AND
WRIGHT
LET
Z
RN
BE
A
VECTOR
OF
I
I
D
RANDOM
VALUES
FOR
ANY
SYMMETRIC
B
RN
N
AND
E
Z
BZ
TR
B
C
Q
WHERE
Q
MAX
B
F
B
AND
C
IS
A
UNIVERSAL
CONSTANT
LEMMA
FOR
W
AS
IN
LEMMA
SUPPOSE
THAT
THE
EVENT
EH
HOLDS
THEN
FOR
UNIT
VECTOR
Y
COLSPACE
A
AND
ANY
W
WITH
FAILURE
PROBABILITY
Δ
L
E
DYS
N
YS
N
KL
W
LOG
Δ
L
WHERE
KL
IS
AN
ABSOLUTE
CONSTANT
PROOF
WE
WILL
USE
THEOREM
TO
PROVE
A
BOUND
ON
THE
TH
MOMENT
OF
DY
FOR
LARGE
NOTE
THAT
DY
CAN
BE
WRITTEN
AS
Z
BZ
WHERE
Z
HAS
ENTRIES
FROM
THE
DIAGONAL
OF
D
AND
B
RN
N
HAS
BII
YI
YI
H
I
H
I
HERE
TR
B
YS
N
OUR
ANALYSIS
USES
SOME
IDEAS
FROM
THE
PROOFS
FOR
LEMMAS
AND
OF
KANE
AND
NELSON
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
K
L
CLARKSON
AND
D
P
WOODRUFF
SINCE
BY
ASSUMPTION
EVENT
EH
OF
LEMMA
OCCURS
AND
FOR
UNIT
Y
COLSPACE
A
UI
FOR
ALL
I
WE
HAVE
FOR
J
T
THAT
I
H
J
I
W
THUS
YI
YI
H
I
H
I
B
I
I
I
I
H
H
I
I
W
I
N
W
FOR
B
OBSERVE
THAT
FOR
GIVEN
J
T
Z
J
R
WITH
Z
J
I
YI
H
I
J
I
IS
AN
EIGENVECTOR
OF
B
WITH
EIGENVALUE
Z
J
AND
THE
SET
OF
SUCH
EIGENVECTORS
SPANS
THE
COLUMN
SPACE
OF
B
IT
FOLLOWS
THAT
W
B
MAX
Z
J
N
J
I
H
J
I
PUTTING
THIS
AND
EQUATION
INTO
THE
Q
OF
THEOREM
WE
HAVE
THAT
Q
MAX
B
F
B
MAX
W
W
W
WHERE
WE
USED
W
BY
A
MARKOV
BOUND
APPLIED
TO
Z
BZ
TR
B
WITH
LOG
Δ
L
PR
DYS
N
YS
N
EC
W
E
Δ
L
HANDLING
VECTORS
WITH
LARGE
ENTRIES
A
SMALL
NUMBER
OF
ENTRIES
CAN
BE
HANDLED
DIRECTLY
LEMMA
FOR
GIVEN
LET
EB
DENOTE
THE
EVENT
THAT
H
I
H
I
FOR
ALL
I
I
THEN
Δ
B
PR
E
B
T
GIVEN
EVENT
E
B
WE
HAVE
THAT
FOR
ANY
Y
PROOF
SINCE
PR
H
I
H
I
T
THE
PROBABILITY
THAT
SOME
SUCH
I
I
HAS
H
I
H
I
IS
AT
MOST
T
THE
LAST
CLAIM
FOLLOWS
BY
A
UNION
BOUND
HANDLING
ALL
VECTORS
WE
HAVE
SEEN
THAT
D
PRESERVES
THE
NORMS
FOR
VECTORS
WITH
SMALL
ENTRIES
LEMMA
AND
LARGE
ENTRIES
LEMMA
BEFORE
PROVING
A
GENERAL
BOUND
WE
NEED
TO
PROVE
A
BOUND
ON
THE
CROSS
TERMS
LEMMA
FOR
W
AS
IN
LEMMA
SUPPOSE
THAT
THE
EVENT
EH
AND
E
B
HOLD
THEN
FOR
UNIT
VECTOR
Y
COLSPACE
A
WITH
FAILURE
PROBABILITY
AT
MOST
ΔC
D
DYS
N
KC
W
LOG
ΔC
FOR
AN
ABSOLUTE
CONSTANT
KC
PROOF
WITH
THE
EVENT
E
B
FOR
EACH
I
THERE
IS
AT
MOST
ONE
I
WITH
H
I
H
I
LET
ZI
YI
DI
I
AND
ZI
OTHERWISE
WE
HAVE
THE
FOLLOWING
FOR
INTEGER
P
USING
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
KHINTCHINE
INEQUALITY
LEMMA
E
D
DYS
N
P
P
P
P
E
YI
DII
ZI
I
CP
I
CP
I
I
H
I
I
C
P
W
WHERE
C
P
O
P
AND
THE
LAST
INEQUALITY
USES
THE
ASSUMPTION
THAT
EH
HOLDS
AND
I
YI
PUTTING
P
LOG
ΔC
AND
APPLYING
THE
MARKOV
INEQUALITY
WE
HAVE
THAT
PR
D
DYS
N
EC
P
W
EXP
P
ΔC
THEREFORE
WITH
FAILURE
PROBABILITY
AT
MOST
ΔC
WE
HAVE
THAT
D
DYS
N
KC
W
LOG
ΔC
FOR
AN
ABSOLUTE
CONSTANT
KC
LEMMA
SUPPOSE
THAT
THE
EVENTS
EH
AND
E
B
HOLD
AND
W
IS
AS
IN
LEMMA
THEN
FOR
Δ
Y
THERE
IS
AN
ABSOLUTE
CONSTANT
KY
SUCH
THAT
IF
W
KY
LOG
Δ
Y
THEN
FOR
UNIT
VECTOR
Y
COLSPACE
A
WITH
FAILURE
PROBABILITY
Δ
Y
DY
Ε
Y
WHEN
Δ
Y
PROOF
ASSUMING
EH
AND
E
B
WE
APPLY
LEMMAS
AND
AND
HAVE
WITH
FAILURE
PROBABILITY
AT
MOST
Δ
L
ΔC
DY
Y
DYS
N
YS
N
D
DYS
N
DYS
N
YS
N
D
DYS
N
KL
W
LOG
Δ
L
W
LOG
ΔC
KY
KL
KC
FOR
THE
GIVEN
W
PUTTING
Δ
L
ΔC
Δ
Y
AND
ASSUMING
Δ
Y
THUS
KY
KL
KC
SUFFICES
LEMMA
SUPPOSE
THAT
ΔSUB
L
IS
AN
R
DIMENSIONAL
SUBSPACE
OF
RN
AND
B
R
RK
IS
A
LINEAR
MAP
IF
FOR
ANY
FIXED
X
L
BX
Ε
X
WITH
PROBABILITY
AT
LEAST
ΔSUB
THEN
THERE
IS
A
CONSTANT
KSUB
FOR
WHICH
WITH
PROBABILITY
AT
LEAST
R
ΔSUB
KSUB
FOR
ALL
X
L
BX
Ε
X
N
PROOF
WE
WILL
NEED
THE
FOLLOWING
STANDARD
LEMMAS
FOR
MAKING
A
NET
ARGUMENT
LET
SR
BE
THE
UNIT
SPHERE
IN
RR
AND
LET
E
BE
THE
SET
OF
POINTS
IN
SR
DEFINED
BY
Γ
E
W
W
ZR
W
R
WHERE
ZR
IS
THE
R
DIMENSIONAL
INTEGER
LATTICE
AND
Γ
IS
A
PARAMETER
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
K
L
CLARKSON
AND
D
P
WOODRUFF
FACT
LEMMA
OF
ARORA
ET
AL
E
ECR
FOR
C
FACT
LEMMA
OF
ARORA
ET
AL
FOR
ANY
R
R
MATRIX
J
IF
FOR
EVERY
U
V
E
Ε
WE
HAVE
THAT
U
JV
Ε
THEN
FOR
EVERY
UNIT
VECTOR
W
WE
HAVE
THAT
W
JW
Γ
LET
U
RN
R
BE
SUCH
THAT
THE
COLUMNS
ARE
ORTHONORMAL
AND
THE
COLUMN
SPACE
EQUALS
L
LET
IR
BE
THE
R
R
IDENTITY
MATRIX
DEFINE
J
U
T
BT
BU
IR
CONSIDER
THE
SET
E
IN
FACT
AND
FACT
THEN
FOR
ANY
X
Y
E
WE
HAVE
BY
THE
STATEMENT
OF
THE
LEMMA
THAT
WITH
PROBABILITY
AT
LEAST
BU
X
Ε
U
X
BU
Y
Ε
U
Y
AND
BU
X
Y
Ε
U
X
Y
Ε
U
X
U
Y
U
X
U
Y
SINCE
U
X
AND
U
Y
IT
FOLLOWS
THAT
X
JY
Ε
BY
FACT
FOR
Γ
AND
SUFFICIENTLY
LARGE
KSUB
WE
HAVE
BY
A
UNION
BOUND
THAT
WITH
PROBABILITY
AT
LEAST
R
ΔSUB
KSUB
X
JY
Ε
FOR
EVERY
X
Y
E
THUS
WITH
THIS
PROBABILITY
BY
FACT
T
W
JW
Ε
FOR
EVERY
UNIT
VECTOR
W
WHICH
BY
DEFINITION
OF
J
MEANS
THAT
FOR
ALL
Y
L
BY
Ε
Y
THE
FOLLOWING
IS
OUR
MAIN
THEOREM
IN
THIS
SECTION
THEOREM
THERE
IS
T
O
R
R
SUCH
THAT
WITH
PROBABILITY
AT
LEAST
D
IS
A
SUBSPACE
EMBEDDING
MATRIX
FOR
A
THAT
IS
FOR
ALL
Y
COLSPACE
A
DY
Ε
Y
THE
EMBEDDING
D
CAN
BE
APPLIED
IN
O
NNZ
A
TIME
FOR
MIN
I
UI
T
WHERE
T
IS
A
PARAMETER
IN
R
LOG
R
IT
SUFFICES
IF
T
MAX
R
T
PROOF
FOR
SUITABLE
T
T
AND
WITH
FAILURE
PROBABILITY
AT
MOST
ΔH
Δ
B
EVENTS
EH
AND
E
B
BOTH
HOLD
CONDITIONED
ON
THIS
AND
ASSUMING
THAT
W
IS
SUFFICIENTLY
SMALL
AS
IN
LEMMA
WE
HAVE
WITH
FAILURE
PROBABILITY
Δ
Y
FOR
ANY
FIXED
Y
COLSPACE
A
THAT
R
DY
Ε
Y
THUS
BY
LEMMA
WITH
FAILURE
PROBABILITY
ΔH
Δ
B
Δ
Y
KSUB
R
DY
Y
FOR
ALL
Y
COLSPACE
A
WE
NEED
ΔH
Δ
B
Δ
Y
KSUB
AND
THE
PARAMETER
CONDITIONS
OF
LEMMAS
LEMMA
AND
LEMMA
HOLDING
LISTING
THESE
CONDITIONS
R
ΔH
Δ
B
Δ
Y
KSUB
WHERE
Δ
B
CAN
BE
SET
TO
BE
T
US
T
T
US
N
LOG
T
ΔH
T
LN
Δ
Y
W
CORRESPONDING
TO
THE
CONDITION
W
OF
LEMMA
SINCE
WE
SET
Δ
Y
Δ
L
E
W
T
LOG
T
ΔH
R
T
KY
LOG
Δ
Y
R
WE
PUT
Δ
Y
KSUB
30
ΔH
30
AND
REQUIRE
THAT
T
30
FOR
THE
LAST
CONDITION
IT
SUFFICES
THAT
T
O
R
LOG
T
AND
T
R
THE
LAST
CONDITION
IMPLIES
THE
FOURTH
CONDITION
FOR
SMALL
ENOUGH
CONSTANT
Ε
ALSO
SINCE
US
N
I
I
UI
T
RT
THE
BOUND
FOR
T
IMPLIES
THAT
T
O
R
LOG
T
SUFFICES
FOR
CONDITION
THUS
WHEN
THE
LEVERAGE
SCORES
ARE
SUCH
THAT
IS
SMALL
T
CAN
BE
O
R
LOG
R
SINCE
I
UI
R
R
T
SUFFICES
THUS
T
O
R
T
O
R
R
SUFFICES
FOR
THE
CONDITIONS
OF
THE
THEOREM
PARTITIONING
LEVERAGE
SCORES
IN
THIS
SECTION
WE
FURTHER
OPTIMIZE
THE
LOW
ORDER
ADDITIVE
POLY
R
TERM
ARISING
IN
THE
ANALYSIS
IN
THE
PREVIOUS
SECTION
BY
REFINING
THE
ANALYSIS
FOR
LARGE
LEVERAGE
SCORES
THOSE
LARGER
THAN
A
THRESHOLD
T
IN
R
LOG
R
WE
PARTITION
THE
SCORES
INTO
GROUPS
THAT
ARE
EQUAL
UP
TO
A
CONSTANT
FACTOR
AND
ANALYZE
THE
ERROR
RESULTING
FROM
THE
RELATIVELY
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
SMALL
NUMBER
OF
COLLISIONS
THAT
MAY
OCCUR
ALSO
USING
THE
LEVERAGE
SCORES
TO
BOUND
THE
ERROR
IN
WHAT
FOLLOWS
WE
HAVE
NOT
OPTIMIZED
THE
POLY
LOG
R
Ε
FACTORS
LET
Q
T
O
LOG
R
Ε
WHERE
WE
ASSUME
THAT
T
IS
A
POWER
OF
WE
PARTITION
THE
LEVERAGE
SCORES
UI
WITH
UI
T
INTO
GROUPS
G
J
J
Q
WHERE
G
J
I
J
UI
J
N
UI
R
AND
Β
J
T
WE
HAVE
FOR
ALL
J
THAT
LET
Β
J
J
AND
N
J
G
J
SINCE
I
N
J
R
Β
J
R
T
WE
MAY
ALSO
USE
G
J
TO
REFER
TO
THE
COLLECTION
OF
ROWS
OF
U
WITH
LEVERAGE
SCORES
IN
G
J
FOR
GIVEN
HASH
FUNCTION
H
AND
CORRESPONDING
LET
G
J
G
J
DENOTE
THE
COLLISION
INDICES
OF
G
J
THOSE
I
G
J
SUCH
THAT
H
I
H
I
FOR
SOME
I
G
J
LET
KJ
G
J
FIRST
WE
BOUND
THE
SPECTRAL
NORM
OF
A
SUBMATRIX
OF
THE
ORTHOGONAL
BASIS
U
OF
COLSPACE
A
WHERE
THE
SUBMATRIX
COMPRISES
ROWS
OF
G
J
THE
SPECTRAL
NORM
CONSIDER
A
MATRIX
B
RN
J
R
WITH
B
AND
EACH
ROW
OF
B
HAS
SQUARED
EUCLIDEAN
NORM
AT
LEAST
Β
J
AND
AT
MOST
J
FOR
SOME
J
Q
WE
WANT
TO
BOUND
THE
SPECTRAL
NORM
OF
THE
MATRIX
B
WHOSE
ROWS
COMPRISE
THOSE
ROWS
OF
U
IN
THE
COLLISION
SET
G
J
WE
LET
T
R
BE
THE
NUMBER
OF
HASH
BUCKETS
THIS
CAN
BE
CHOSEN
SO
THAT
T
R
T
N
J
NJ
THE
EXPECTED
NUMBER
OF
COLLISIONS
IN
THE
T
BUCKETS
IS
E
G
J
T
LET
D
J
BE
THE
EVENT
THAT
THE
NUMBER
KJ
G
J
OF
SUCH
COLLISIONS
IN
THE
T
BUCKETS
IS
AT
MOST
T
Q
LET
D
J
D
J
BY
A
MARKOV
AND
A
UNION
BOUND
PR
D
WE
WILL
ASSUME
THAT
D
OCCURS
WHILE
EACH
ROW
IN
B
HAS
SOME
INDEPENDENT
PROBABILITY
OF
PARTICIPATING
IN
A
COLLISION
WE
FIRST
ANALYZE
A
SAMPLING
SCHEME
WITH
REPLACEMENT
WE
GENERATE
INDEPENDENT
RANDOM
MATRICES
H
M
FOR
M
J
FOR
A
PARAMETER
J
KJ
BY
PICKING
I
N
J
UNIFORMLY
AT
RANDOM
AND
LETTING
H
M
BI
BI
NOTE
THAT
E
H
M
B
B
NJ
LEMMA
FIX
J
Q
ASSUME
EVENT
D
FOR
KJ
THERE
IS
J
KJ
Q
SO
THAT
WITH
FAILURE
PROBABILITY
AT
MOST
R
R
T
N
J
T
H
M
O
Q
M
J
TO
PROVE
THIS
LEMMA
WE
WILL
USE
A
SPECIAL
CASE
OF
THE
VERSION
OF
MATRIX
BERNSTEIN
INEQUALITIES
DESCRIBED
BY
RECHT
FACT
PARAPHRASE
OF
THEOREM
RECHT
LET
BE
AN
INTEGER
PARAMETER
FOR
M
LET
HM
RR
R
BE
INDEPENDENT
SYMMETRIC
ZERO
MEAN
RANDOM
MATRICES
SUPPOSE
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
K
L
CLARKSON
AND
D
P
WOODRUFF
THAT
ΡM
E
HM
HM
AND
M
MAXM
HM
THEN
FOR
ANY
Τ
Τ
Τ
LOG
H
LOG
PR
M
M
M
ΡM
MΤ
PROOF
OF
LEMMA
WE
APPLY
FACT
WITH
J
KJ
Q
AND
HM
H
M
E
H
M
SO
THAT
E
HM
HM
ΡM
B
B
B
B
BB
B
I
I
I
N
J
I
N
J
J
NJ
NJ
ALSO
M
HM
J
BY
EQUATION
NJ
N
J
APPLYING
FACT
WITH
THESE
BOUNDS
FOR
ΡM
AND
M
WE
HAVE
THAT
Τ
LOG
HM
Τ
LOG
PR
M
J
M
J
ΡM
MΤ
LOG
LOG
Τ
J
NJ
NJ
Τ
J
Τ
O
R
T
O
Q
NJ
Τ
FOR
N
J
T
Q
SETTING
IF
N
J
T
Q
THEN
KJ
BY
THE
ASSUMPTION
THAT
EVENT
D
HOLDS
Τ
R
T
GIVES
A
PROBABILITY
BOUND
OF
R
USING
N
J
T
Q
WE
THEREFORE
HAVE
THAT
WITH
PROBABILITY
AT
LEAST
R
J
O
R
T
B
B
H
M
N
J
M
J
O
R
T
N
J
T
WHERE
WE
USE
THAT
B
AND
USE
AGAIN
J
N
J
O
N
J
T
THE
LEMMA
FOLLOWS
WE
CAN
NOW
PROVE
THE
FOLLOWING
LEMMA
LEMMA
WITH
PROBABILITY
O
FOR
ALL
LEVERAGE
SCORE
GROUPS
G
J
AND
FOR
U
AN
ORTHONORMAL
BASIS
OF
COLSPACE
A
THE
SUBMATRIX
B
J
OF
U
CONSISTING
OF
ROWS
IN
G
J
THAT
IS
THOSE
IN
G
J
THAT
COLLIDE
IN
A
HASH
BUCKET
WITH
ANOTHER
ROW
IN
G
J
UNDER
HAS
SQUARED
SPECTRAL
NORM
O
R
T
N
J
T
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
PROOF
WITH
PROBABILITY
CONDITION
D
HOLDS
CONDITION
ON
THIS
EVENT
SO
THAT
FOR
J
WITH
N
J
T
Q
THE
NUMBER
OF
COLLISIONS
KJ
IS
ZERO
AND
THE
CONCLUSION
HOLDS
VACUOUSLY
NOW
CONSIDER
A
J
Q
FOR
WHICH
N
J
T
Q
Q
SINCE
N
J
T
FROM
EQUATION
WE
HAVE
THAT
J
KJ
Q
T
O
Q
N
J
O
Q
J
WHEN
SAMPLING
WITH
REPLACEMENT
THE
EXPECTED
NUMBER
OF
DISTINCT
ITEMS
IS
J
J
NJ
J
O
NJ
NJ
BY
A
STANDARD
APPLICATION
OF
AZUMA
INEQUALITY
USING
THAT
J
Q
IS
SUFFICIENTLY
LARGE
WE
HAVE
THAT
THE
NUMBER
OF
DISTINCT
ITEMS
IS
AT
LEAST
J
WITH
PROBABILITY
AT
LEAST
R
BY
A
UNION
BOUND
WITH
PROBABILITY
O
FOR
ALL
J
Q
USING
N
J
T
Q
R
AT
LEAST
J
DISTINCT
ITEMS
ARE
SAMPLED
WHEN
SAMPLING
J
ITEMS
WITH
REPLACEMENT
FROM
G
J
SINCE
J
KJ
O
Q
IT
FOLLOWS
THAT
AT
LEAST
KJ
DISTINCT
ITEMS
ARE
SAMPLED
FROM
EACH
G
J
BY
LEMMA
FOR
A
FIXED
J
Q
WE
HAVE
THAT
THE
SUBMATRIX
OF
U
CONSISTING
OF
THE
J
SAMPLED
ROWS
IN
G
J
HAS
SQUARED
SPECTRAL
NORM
O
R
T
N
J
T
WITH
PROBABILITY
AT
LEAST
R
NOTE
THAT
M
J
H
M
IS
THE
SQUARE
OF
THE
SPECTRAL
NORM
OF
THE
SUBMATRIX
OF
U
CONSISTING
OF
THE
J
SAMPLED
ROWS
FROM
G
J
SINCE
THE
PROBABILITY
OF
THIS
EVENT
IS
AT
LEAST
R
FOR
A
FIXED
J
Q
WE
CAN
CONCLUDE
THAT
IT
HOLDS
FOR
ALL
J
Q
SIMULTANEOUSLY
WITH
PROBABILITY
O
FINALLY
USING
THAT
THE
SPECTRAL
NORM
OF
A
SUBMATRIX
OF
A
MATRIX
IS
AT
MOST
THAT
OF
THE
MATRIX
WE
HAVE
THAT
FOR
EACH
J
THE
SQUARED
SPECTRAL
NORM
OF
A
SUBMATRIX
OF
KJ
RANDOM
DISTINCT
ROWS
AMONG
THE
J
SAMPLED
ROWS
OF
G
J
FROM
U
IS
AT
MOST
O
R
T
N
J
T
WITHIN
GROUP
ERRORS
LET
L
J
RN
DENOTE
THE
SET
OF
VECTORS
Y
SO
THAT
YI
FOR
I
NOT
IN
THE
COLLISION
SET
G
J
AND
THERE
IS
SOME
UNIT
Y
COLSPACE
A
SUCH
THAT
YI
YI
FOR
I
G
J
NOTE
THAT
THE
ERROR
FOR
SUCH
VECTORS
IS
THE
SAME
AS
THAT
FOR
THE
CORRESPONDING
SET
OF
VECTORS
WITH
ZEROS
OUTSIDE
OF
G
J
IN
THIS
SECTION
WE
PROVE
THE
FOLLOWING
THEOREM
THEOREM
THERE
IS
AN
ABSOLUTE
CONSTANT
C
FOR
WHICH
FOR
ANY
PARAMETERS
P
AND
FOR
SPARSE
EMBEDDING
DIMENSION
T
O
P
R
Ε
LOG
R
Ε
FOR
ALL
UNIT
Y
COLSPACE
A
J
Q
SY
J
C
WITH
FAILURE
PROBABILITY
AT
MOST
O
LOG
R
WHERE
Y
J
DENOTES
THE
MEMBER
OF
L
J
DERIVED
FROM
Y
PROOF
FOR
Y
L
J
THE
ERROR
IN
ESTIMATING
Y
BY
USING
Y
D
DY
CONTRIBUTED
BY
COLLISIONS
AMONG
COORDINATES
YI
FOR
I
G
J
IS
YI
YI
DII
DI
I
ΚJ
T
T
I
I
H
T
G
J
AND
WE
NEED
A
BOUND
ON
THIS
QUANTITY
THAT
HOLDS
WITH
HIGH
PROBABILITY
BY
A
STANDARD
BALLS
AND
BINS
ANALYSIS
EVERY
BUCKET
HAS
O
LOG
T
O
Q
COLLISIONS
WITH
HIGH
PROBABILITY
SINCE
N
J
T
FROM
EQUATION
WE
ASSUME
THIS
EVENT
THE
SQUARED
EUCLIDEAN
NORM
OF
THE
VECTOR
OF
ALL
YI
THAT
APPEAR
IN
THE
SUMMANDS
THAT
IS
WITH
I
G
J
IS
AT
MOST
O
R
T
N
J
T
BY
LEMMA
THUS
THE
SQUARED
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
K
L
CLARKSON
AND
D
P
WOODRUFF
EUCLIDEAN
NORM
OF
THE
VECTOR
COMPRISING
ALL
SUMMANDS
IN
EQUATION
IS
AT
MOST
ΓJ
T
T
I
I
H
T
G
J
T
T
I
H
T
G
J
O
Q
Β
J
O
Β
J
R
T
N
J
T
O
Β
J
R
T
R
T
USING
EQUATION
BY
KHINTCHINE
INEQUALITY
LEMMA
FOR
P
P
P
E
ΚJ
O
P
Γ
J
O
P
Β
J
R
T
R
T
THEREFORE
Κ
J
IS
LESS
THAN
THE
LAST
QUANTITY
WITH
FAILURE
PROBABILITY
AT
MOST
P
PUTTING
P
K
J
MIN
R
KJ
WITH
FAILURE
PROBABILITY
AT
MOST
KJ
FOR
ANY
FIXED
VECTOR
Y
L
J
THE
SQUARED
ERROR
IN
ESTIMATING
Y
USING
THE
SKETCH
OF
Y
IS
AT
MOST
O
K
J
Β
J
R
T
R
T
ASSUMING
THE
EVENT
D
FROM
THE
EARLIER
SECTION
WE
HAVE
THAT
K
J
MIN
R
Q
Q
T
WE
HAVE
THAT
K
J
T
T
AND
R
K
J
Β
J
R
T
R
T
MIN
Β
J
R
R
T
ΒJT
USING
EQUATION
PUTTING
THESE
BOUNDS
ON
THE
TERMS
TOGETHER
THE
SQUARED
ERROR
IS
O
R
T
OR
FOR
T
SO
THAT
THE
ERROR
IS
O
Q
SINCE
THE
DIMENSION
OF
L
J
IS
BOUNDED
BY
K
J
IT
FOLLOWS
FROM
THE
NET
ARGUMENT
OF
LEMMA
THAT
FOR
ALL
Y
L
J
SY
Y
O
Q
THUS
THE
TOTAL
ERROR
FOR
UNIT
Y
COLSPACE
A
IS
O
HANDLING
THE
CROSS
TERMS
TO
COMPLETE
THE
OPTIMIZATION
WE
MUST
ALSO
HANDLE
THE
ERROR
DUE
TO
CROSS
TERMS
LET
BE
AN
ARBITRARY
PARAMETER
FOR
J
J
Q
LET
THE
EVENT
E
J
J
BE
N
N
THAT
THE
NUMBER
OF
BINS
CONTAINING
BOTH
AN
ITEM
IN
G
J
AND
IN
G
J
IS
AT
MOST
J
LET
E
J
J
E
J
J
THE
EVENT
THAT
NO
PAIR
OF
GROUPS
HAS
TOO
MANY
INTERGROUP
COLLISIONS
LEMMA
PR
E
PROOF
FIX
A
J
J
Q
THEN
THE
EXPECTED
NUMBER
OF
BINS
CONTAINING
AN
N
NN
N
ITEM
IN
BOTH
G
J
AND
IN
G
J
IS
AT
MOST
T
TJ
TJ
J
T
J
THUS
BY
A
MARKOV
BOUND
THE
N
N
NUMBER
OF
BINS
CONTAINING
AN
ITEM
IN
BOTH
G
J
AND
G
J
IS
AT
MOST
J
WITH
PROBABILITY
AT
LEAST
THE
LEMMA
FOLLOWS
BY
A
UNION
BOUND
OVER
THE
CHOICES
OF
J
J
IN
THE
REMAINDER
OF
THE
ANALYSIS
WE
SET
T
P
R
Ε
FOR
A
PARAMETER
P
Q
LET
F
BE
THE
EVENT
THAT
NO
BIN
CONTAINS
MORE
THAN
CQ
ELEMENTS
OF
I
G
J
WHERE
C
IS
AN
ABSOLUTE
CONSTANT
LEMMA
PR
F
R
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
Q
Q
Q
PROOF
OBSERVE
THAT
I
G
J
I
N
J
R
I
J
BY
STANDARD
BALLSAND
BINS
ANALYSIS
WITH
THE
GIVEN
T
WITH
P
WITH
PROBABILITY
AT
LEAST
R
NO
BIN
CONTAINS
MORE
THAN
CQ
ELEMENTS
FOR
A
CONSTANT
C
LEMMA
CONDITION
ON
EVENTS
E
AND
F
OCCURRING
CONSIDER
ANY
UNIT
VECTOR
Y
AX
J
IN
THE
COLUMN
SPACE
OF
A
CONSIDER
ANY
J
J
Q
DEFINE
THE
VECTOR
Y
J
YI
YI
FOR
J
I
G
J
AND
YI
OTHERWISE
THEN
SY
J
SY
J
O
PROOF
SINCE
E
OCCURS
THE
NUMBER
OF
BINS
CONTAINING
BOTH
AN
ITEM
IN
G
J
AND
G
J
IS
AT
MOST
N
J
N
J
CALL
THIS
SET
OF
BINS
MOREOVER
SINCE
F
OCCURS
FOR
EACH
BIN
I
THERE
ARE
AT
MOST
CQ
ELEMENTS
FROM
G
J
IN
THE
BIN
AND
AT
MOST
CQ
ELEMENTS
FROM
G
J
IN
THE
BIN
THUS
FOR
ANY
D
WE
HAVE
USING
N
J
Β
J
R
FOR
ALL
J
THAT
SY
J
SY
J
N
J
N
J
CQ
CQ
Β
J
Β
J
THE
FOLLOWING
IS
OUR
MAIN
THEOREM
CONCERNING
CROSS
TERMS
IN
THIS
SECTION
THEOREM
THERE
IS
AN
ABSOLUTE
CONSTANT
C
FOR
WHICH
FOR
ANY
PARAMETERS
P
AND
FOR
SPARSE
EMBEDDING
DIMENSION
T
O
P
R
Ε
R
THE
EVENT
Y
AX
WITH
Y
SY
J
SY
J
J
J
Q
OCCURS
WITH
FAILURE
PROBABILITY
AT
MOST
R
WHERE
Y
J
Y
J
ARE
AS
DEFINED
IN
LEMMA
PROOF
THE
THEOREM
FOLLOWS
AT
ONCE
BY
COMBINING
LEMMA
LEMMA
AND
LEMMA
PUTTING
IT
TOGETHER
PUTTING
THE
BOUNDS
FOR
WITHIN
GROUP
AND
CROSS
TERM
ERRORS
TOGETHER
AND
REPLACING
THE
USE
OF
LEMMA
IN
THE
PROOF
OF
THEOREM
WE
HAVE
THE
FOLLOWING
THEOREM
THEOREM
THERE
IS
AN
ABSOLUTE
CONSTANT
C
FOR
WHICH
FOR
ANY
PARAMETERS
P
AND
FOR
SPARSE
EMBEDDING
DIMENSION
T
O
P
R
Ε
R
Ε
FOR
ALL
UNIT
Y
COLSPACE
A
SY
C
WITH
FAILURE
PROBABILITY
AT
MOST
O
LOG
R
GENERALIZED
SPARSE
EMBEDDING
MATRICES
AS
DISCUSSED
IN
THE
INTRODUCTION
WE
CAN
USE
SMALL
JL
TRANSFORMS
WITHIN
EACH
HASH
BUCKET
TO
OBTAIN
THE
FOLLOWING
THEOREM
WHERE
THE
TERM
IN
THE
RUNTIME
DEPENDENT
ON
NNZ
A
IS
MORE
EXPENSIVE
BUT
THE
QUALITY
BOUNDS
HOLD
WITH
HIGH
PROBABILITY
SUCH
GENERALIZED
SPARSE
EMBEDDING
MATRICES
SATISFY
THE
FOLLOWING
THEOREM
THEOREM
FOR
GIVEN
Δ
WITH
PROBABILITY
AT
LEAST
Δ
FOR
T
O
RΕ
LOG
R
ΕΔ
R
LOG
ΕΔ
A
GENERALIZED
SPARSE
EMBEDDING
MATRIX
GIVEN
IN
SECTION
IS
AN
EMBEDDING
MATRIX
FOR
A
THAT
IS
FOR
ALL
Y
COLSPACE
A
SY
Ε
Y
CAN
BE
APPLIED
TO
A
IN
O
NNZ
A
LOG
R
Δ
TIME
IN
THIS
SECTION
WE
INTRODUCE
THE
VERSION
OF
JL
TRANSFORMS
THAT
WE
WILL
USE
GIVE
OUR
CONSTRUCTION
IN
SECTION
THEN
AS
BEFORE
ANALYZE
VECTORS
WITH
SMALL
ENTRIES
WITH
LARGE
ENTRIES
AND
THE
CROSS
TERMS
WE
THEN
CONCLUDE
THE
SECTION
WITH
THE
PROOF
OF
THEOREM
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
K
L
CLARKSON
AND
D
P
WOODRUFF
JOHNSON
LINDENSTRAUSS
TRANSFORMS
WE
START
WITH
A
THEOREM
OF
KANE
AND
NELSON
RESTATED
HERE
IN
OUR
NOTATION
WE
ALSO
PRESENT
A
SIMPLE
COROLLARY
THAT
WE
NEED
CONCERNING
VERY
LOW
DIMENSIONAL
SUBSPACES
LET
Ε
A
Ε
LOG
R
Ε
AND
V
Ε
LET
B
RN
RVA
BE
DEFINED
AS
FOLLOWS
WE
VIEW
B
MEANING
WE
STACK
THE
ROWS
ON
TOP
OF
EACH
AS
THE
CONCATENATION
OTHER
OF
MATRICES
A
A
A
DA
EACH
I
DI
BEING
A
LINEAR
MAP
FROM
RN
TO
RV
WHICH
IS
AN
INDEPENDENTLY
CHOSEN
SPARSE
EMBEDDING
MATRIX
OF
SECTION
WITH
ASSOCIATED
HASH
FUNCTION
HI
N
V
THEOREM
KANE
AND
NELSON
FOR
ANY
Δ
KN
Ε
THERE
ARE
A
Ε
LOG
Δ
KN
AND
V
Ε
FOR
WHICH
FOR
ANY
FIXED
X
RN
A
RANDOMLY
CHOSEN
B
OF
THE
FORM
ABOVE
SATISFIES
BX
Ε
X
WITH
PROBABILITY
AT
LEAST
Δ
KN
COROLLARY
LET
Δ
SUPPOSE
THAT
L
IS
AN
O
LOG
R
ΕΔ
DIMENSIONAL
SUBSPACE
OF
RN
LET
CSUBKN
BE
ANY
CONSTANT
THEN
FOR
ANY
Ε
THERE
ARE
A
Ε
LOG
R
ΕΔ
AND
V
Ε
SUCH
THAT
WITH
FAILURE
PROBABILITY
AT
MOST
Ε
RΔ
CSUBKN
BY
Ε
Y
FOR
ALL
Y
L
PROOF
WE
USE
THEOREM
TOGETHER
WITH
LEMMA
FOR
THE
LATTER
WE
NEED
THAT
FOR
ANY
FIXED
Y
L
BY
Ε
Y
WITH
PROBABILITY
AT
LEAST
ΔSUB
BY
THEOREM
WE
HAVE
THIS
FOR
ΔSUB
ΔΕ
R
C
KN
FOR
AN
ARBITRARILY
LARGE
CONSTANT
C
KN
THUS
BY
LEMMA
THERE
IS
A
CONSTANT
KSUB
SO
THAT
WITH
PROBABILITY
AT
LEAST
KSUB
O
LOG
R
ΕΔ
ΔΕ
R
C
KN
ΔΕ
R
CSUBKN
FOR
ALL
Y
L
BY
Ε
Y
HERE
WE
USE
THAT
C
KN
CAN
BE
MADE
ARBITRARILY
LARGE
INDEPENDENT
OF
KSUB
THE
CONSTRUCTION
WE
NOW
DEFINE
A
GENERALIZED
SPARSE
EMBEDDING
MATRIX
LET
A
RN
D
WITH
RANK
R
LET
A
Ε
LOG
R
ΕΔ
AND
V
Ε
BE
SUCH
THAT
THEOREM
AND
COROLLARY
APPLY
WITH
PARAMETERS
A
AND
V
FOR
A
SUFFICIENTLY
LARGE
CONSTANT
CSUBKN
FURTHER
LET
Q
CT
RΕ
R
LOG
ΔΕ
WHERE
CT
IS
A
SUFFICIENTLY
LARGE
ABSOLUTE
CONSTANT
AND
LET
T
AVQ
LET
H
N
Q
Q
BE
A
RANDOM
HASH
FUNCTION
FOR
I
Q
DEFINE
AI
H
I
NOTE
THAT
I
AI
N
WE
CHOOSE
INDEPENDENT
MATRICES
B
B
Q
WITH
EACH
B
I
AS
IN
THEOREM
WITH
PARAMETERS
A
AND
V
HERE
B
I
IS
A
VA
AI
MATRIX
FINALLY
LET
P
BE
AN
N
N
PERMUTATION
MATRIX
WHICH
WHEN
APPLIED
TO
A
MATRIX
A
MAPS
THE
ROWS
OF
A
IN
THE
SET
H
TO
THE
SET
OF
ROWS
MAPS
THE
ROWS
OF
A
IN
THE
SET
H
TO
THE
SET
OF
ROWS
AND
FOR
A
GENERAL
I
Q
MAPS
THE
SET
OF
ROWS
OF
A
IN
THE
SET
H
I
TO
THE
SET
OF
ROWS
AI
AI
THE
MAP
IS
DEFINED
TO
BE
THE
PRODUCT
OF
A
BLOCK
DIAGONAL
MATRIX
AND
THE
MATRIX
P
B
B
P
B
Q
LEMMA
A
CAN
BE
COMPUTED
IN
O
NNZ
A
LOG
R
ΕΔ
Ε
TIME
PROOF
AS
P
IS
A
PERMUTATION
MATRIX
P
A
CAN
BE
COMPUTED
IN
O
NNZ
A
TIME
AND
HAS
THE
SAME
NUMBER
OF
NONZERO
ENTRIES
OF
A
FOR
EACH
NONZERO
ENTRY
OF
P
A
WE
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
MULTIPLY
IT
BY
B
I
FOR
SOME
I
WHICH
TAKES
O
A
O
LOG
R
ΕΔ
Ε
TIME
THUS
THE
TOTAL
TIME
TO
COMPUTE
A
IS
O
NNZ
A
LOG
R
ΕΔ
Ε
ANALYSIS
WE
ADAPT
THE
ANALYSIS
GIVEN
FOR
SPARSE
EMBEDDING
MATRICES
TO
GENERALIZED
SPARSE
EMBEDDING
MATRICES
AGAIN
LET
U
RN
R
HAVE
COLUMNS
THAT
FORM
AN
ORTHONORMAL
BASIS
FOR
THE
COLUMN
SPACE
COLSPACE
A
LET
UN
BE
THE
ROWS
OF
U
AND
LET
UI
UI
FOR
Δ
WE
SET
THE
PARAMETER
T
O
R
CT
Q
LOG
T
Δ
LOG
R
ΕΔ
R
LOG
ΕΔ
WHERE
CT
IS
A
SUFFICIENTLY
LARGE
ABSOLUTE
CONSTANT
VECTORS
WITH
SMALL
ENTRIES
LET
MIN
I
UI
T
AND
FOR
Y
COLSPACE
A
OF
AT
MOST
UNIT
NORM
LET
Y
YS
N
SINCE
UI
THIS
IMPLIES
THAT
Y
T
SINCE
P
IS
A
PERMUTATION
MATRIX
WE
HAVE
THAT
PY
T
IN
THIS
CASE
WE
CAN
REDUCE
THE
ANALYSIS
TO
THAT
OF
A
SPARSE
EMBEDDING
MATRIX
OBSERVE
I
I
I
THAT
THE
MATRIX
B
I
RVA
AI
IS
THE
CONCATENATION
OF
MATRICES
I
A
DA
WHERE
I
I
EACH
J
D
J
RV
AI
IS
A
SPARSE
EMBEDDING
MATRIX
NOW
FIX
A
VALUE
J
A
AND
CONSIDER
THE
BLOCK
DIAGONAL
MATRIX
N
J
RQV
AI
NJ
J
DJ
P
J
DJ
Q
Q
J
DJ
LEMMA
N
J
IS
A
RANDOM
SPARSE
EMBEDDING
MATRIX
WITH
QV
T
A
ROWS
AND
N
COLUMNS
PROOF
N
J
HAS
A
SINGLE
NONZERO
ENTRY
IN
EACH
COLUMN
AND
THE
VALUE
OF
THIS
NONZERO
ENTRY
IS
RANDOM
IN
THEREFORE
IT
REMAINS
TO
SHOW
THAT
THE
DISTRIBUTION
OF
LOCATIONS
OF
THE
NONZERO
ENTRIES
OF
N
J
IS
THE
SAME
AS
THAT
IN
A
SPARSE
EMBEDDING
MATRIX
THIS
FOLLOWS
FROM
THE
DISTRIBUTION
OF
THE
VALUES
AQ
AND
THE
DEFINITION
OF
P
J
LEMMA
LET
Δ
FOR
J
A
LET
EH
BE
THE
EVENT
EH
OF
LEMMA
APPLIED
TO
MATRIX
N
J
WITH
ΔH
Δ
A
AND
W
T
LOG
QV
ΔH
R
QV
CT
Q
SUPPOSE
J
THAT
J
A
EH
HOLDS
THIS
EVENT
HAS
PROBABILITY
AT
LEAST
Δ
THEN
THERE
IS
AN
ABSOLUTE
CONSTANT
KL
SUCH
THAT
WITH
FAILURE
PROBABILITY
AT
MOST
Δ
L
SYS
N
YS
N
KL
W
LOG
A
Δ
L
PROOF
WE
APPLY
LEMMA
WITH
N
J
THE
SPARSE
EMBEDDING
MATRIX
D
AND
QV
THE
NUMBER
OF
ROWS
OF
N
J
TAKING
ON
THE
ROLE
OF
T
IN
LEMMA
SO
THAT
THE
PARAMETER
W
T
LOG
QV
ΔH
R
QV
AS
IN
THE
LEMMA
STATEMENT
SINCE
T
AVQ
QV
ΔH
T
Δ
THUS
W
R
CT
Q
R
QV
CT
Q
SINCE
US
N
RT
IT
SUFFICES
FOR
LEMMA
IF
QV
IS
AT
LEAST
T
LOG
T
ΔH
Q
OR
V
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
K
L
CLARKSON
AND
D
P
WOODRUFF
J
WITH
ΔH
Δ
A
BY
A
UNION
BOUND
J
A
EH
OCCURS
WITH
FAILURE
PROBABILITY
Δ
AS
CLAIMED
WE
HAVE
FOR
GIVEN
N
J
THAT
WITH
FAILURE
PROBABILITY
Δ
L
A
N
J
YS
N
YS
N
KL
W
LOG
A
Δ
L
APPLYING
A
UNION
BOUND
AND
USING
N
J
YS
N
A
A
SYS
N
J
THE
RESULT
FOLLOWS
VECTORS
WITH
LARGE
ENTRIES
AGAIN
LET
MIN
I
UI
T
SINCE
HAVE
THAT
I
UI
R
WE
R
T
CT
Q
LOG
T
Δ
THE
FOLLOWING
IS
A
STANDARD
NONWEIGHTED
BALLS
AND
BINS
ANALYSIS
LEMMA
SUPPOSE
THAT
THE
PREVIOUSLY
DEFINED
CONSTANT
CT
IS
SUFFICIENTLY
LARGE
LET
ENW
BE
THE
EVENT
THAT
H
I
CT
LOG
R
ΕΔ
FOR
ALL
I
Q
THEN
PR
ENW
Δ
R
PROOF
FOR
ANY
GIVEN
I
Q
E
H
I
Q
CT
LOG
T
Δ
O
LOG
R
Δ
THUS
BY
A
CHERNOFF
BOUND
FOR
A
CONSTANT
CT
PR
H
I
CT
LOG
R
ΕΔ
E
LOG
R
ΕΔ
Δ
RQ
THE
LEMMA
NOW
FOLLOWS
BY
A
UNION
BOUND
OVER
ALL
I
Q
LEMMA
ASSUME
THAT
ENW
HOLDS
LET
ES
BE
THE
EVENT
THAT
FOR
ALL
Y
COLSPACE
A
Ε
THEN
PR
ES
Δ
R
PROOF
FOR
I
Q
LET
LI
BE
THE
AT
MOST
CT
LOG
R
ΕΔ
DIMENSIONAL
SUBSPACE
THAT
IS
THE
RESTRICTION
OF
THE
COLUMN
SPACE
COLSPACE
A
TO
COORDINATES
J
WITH
H
J
I
AND
J
BY
COROLLARY
FOR
ANY
FIXED
I
WITH
PROBABILITY
AT
LEAST
ΔΕ
R
CSUBKN
FOR
ALL
Y
LI
SY
Ε
Y
BY
A
UNION
BOUND
AND
SUFFICIENTLY
LARGE
CSUBKN
THIS
HOLDS
FOR
ALL
I
Q
WITH
PROBABILITY
AT
LEAST
Q
ΔΕ
R
CSUBKN
Δ
R
THIS
CONDITION
IMPLIES
ES
SINCE
CAN
BE
EXPRESSED
AS
I
Q
Y
I
WHERE
EACH
Y
I
LI
AND
LETTING
B
I
DENOTE
THE
VA
ROWS
OF
CORRESPONDING
TO
ENTRIES
FROM
B
I
B
I
Y
I
I
Q
Ε
Y
I
I
Q
Ε
A
RESCALING
TO
Ε
COMPLETES
THE
PROOF
CROSS
TERMS
NOW
CONSIDER
ANY
UNIT
VECTOR
Y
IN
COLSPACE
A
AND
WRITE
IT
AS
YS
N
WE
SEEK
TO
BOUND
SYS
N
FOR
NOTATIONAL
CONVENIENCE
DEFINE
THE
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
BLOCK
DIAGONAL
MATRIX
N
J
TO
BE
THE
MATRIX
J
DJ
J
DJ
N
J
Q
Q
J
DJ
P
THEN
A
AJ
N
J
NOTE
THAT
SINCE
THE
SET
OF
NONZERO
ROWS
OF
N
J
AND
N
J
ARE
DISJOINT
FOR
J
J
A
N
J
N
J
YS
N
SYS
N
A
J
A
N
J
N
J
YS
N
A
J
WHERE
BY
LEMMA
EACH
N
J
IS
A
SPARSE
EMBEDDING
MATRIX
WITH
QV
T
A
ROWS
AND
N
COLUMNS
J
LEMMA
FOR
W
AS
IN
LEMMA
AND
ASSUMING
EVENTS
AJ
EH
ENW
AND
ES
THERE
IS
ABSOLUTE
CONSTANT
KC
SUCH
THAT
WITH
FAILURE
PROBABILITY
ΔC
SYS
N
KC
W
LOG
A
ΔC
PROOF
WE
GENERALIZE
LEMMA
SLIGHTLY
TO
BOUND
EACH
SUMMAND
N
J
N
J
YS
N
FOR
A
GIVEN
J
AND
FOR
EACH
I
LET
ZM
J
YI
DI
I
I
H
J
M
I
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
K
L
CLARKSON
AND
D
P
WOODRUFF
WHERE
H
J
IS
THE
HASH
FUNCTION
FOR
J
P
WE
HAVE
FOR
INTEGER
P
USING
KHINTCHINE
INEQUALITY
LEMMA
P
E
N
J
N
J
YS
N
P
P
P
J
E
YI
DII
ZH
J
I
I
CP
J
I
C
P
I
WHERE
V
J
M
H
J
ZM
I
H
J
M
I
C
PW
V
J
M
H
J
M
AND
C
P
P
P
O
P
AND
THE
LAST
INEQUALITY
J
EH
HOLDS
PUTTING
P
LOG
A
ΔC
AND
APPLYING
THE
MARKOV
USES
THE
ASSUMPTION
THAT
INEQUALITY
WE
HAVE
FOR
ALL
J
A
THAT
PR
N
J
N
J
YS
N
EC
P
W
V
J
A
EXP
P
ΔC
MOREOVER
J
A
V
J
WHICH
UNDER
ES
IS
AT
MOST
Ε
Ε
THEREFORE
WITH
FAILURE
PROBABILITY
AT
MOST
ΔC
WE
HAVE
THAT
SYS
N
KC
W
LOG
A
ΔC
FOR
AN
ABSOLUTE
CONSTANT
KC
PUTTING
IT
ALL
TOGETHER
WE
ARE
READY
TO
PROVE
THEOREM
WHICH
WE
RESTATE
HERE
FOR
CONVENIENCE
THEOREM
RESTATEMENT
OF
THEOREM
FOR
GIVEN
Δ
WITH
PROBABILITY
AT
LEAST
Δ
FOR
T
O
RΕ
LOG
R
ΕΔ
R
LOG
ΕΔ
A
GENERALIZED
SPARSE
EMBEDDING
MATRIX
GIVEN
IN
SECTION
IS
AN
EMBEDDING
MATRIX
FOR
A
THAT
IS
FOR
ALL
Y
COLSPACE
A
SY
Ε
Y
CAN
BE
APPLIED
TO
A
IN
O
NNZ
A
LOG
R
Δ
TIME
PROOF
OF
THEOREM
NOTE
THAT
T
AVQ
O
Ε
LOG
R
ΕΔ
Ε
CT
RΕ
R
LOG
ΕΔ
J
YIELDING
THE
BOUND
CLAIMED
FROM
LEMMA
EVENT
J
A
EH
OCCURS
WITH
FAILURE
PROBABILITY
AT
MOST
Δ
FROM
LEMMAS
AND
THE
JOINT
OCCURRENCE
OF
ENW
AND
ES
HOLDS
WITH
FAILURE
PROBABILITY
AT
MOST
R
Δ
GIVEN
THESE
EVENTS
FROM
LEMMAS
AND
WE
HAVE
WITH
FAILURE
PROBABILITY
AT
MOST
Δ
L
ΔC
THAT
SY
Y
SYS
N
YS
N
SYS
N
Ε
KL
W
LOG
A
Δ
L
W
LOG
A
ΔC
WHERE
W
CT
Q
R
SETTING
ΔC
Δ
L
Δ
KSUB
WHERE
KSUB
IS
FROM
LEMMA
AND
RECALLING
THAT
A
O
Ε
LOG
R
ΕΔ
WE
HAVE
THAT
W
LOG
A
Δ
L
O
R
LOG
ΕΔ
LOG
A
Δ
L
CT
CT
Q
CT
R
LOG
ΕΔ
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
25
FOR
ABSOLUTE
CONSTANT
CT
USING
LEMMA
WE
HAVE
THAT
WITH
FAILURE
PROBABILITY
AT
R
R
MOST
Δ
Δ
KSUB
KSUB
SY
Y
Ε
CT
KL
Ε
FOR
SUITABLE
CHOICE
OF
CT
ADJUSTING
Δ
BY
A
CONSTANT
FACTOR
GIVES
THE
RESULT
APPROXIMATING
LEVERAGE
SCORES
LET
A
RN
D
WITH
RANK
R
LET
U
RN
R
BE
AN
ORTHONORMAL
BASIS
FOR
COLSPACE
A
IN
DRINEAS
ET
AL
IT
WAS
SHOWN
HOW
TO
OBTAIN
A
Ε
APPROXIMATION
UI
TO
THE
LEVERAGE
SCORE
UI
FOR
ALL
I
N
FOR
A
CONSTANT
Ε
IN
TIME
O
ND
LOG
N
O
LOG
N
LOG
D
IN
THIS
SECTION
WE
IMPROVE
THE
RUNTIME
OF
THIS
TASK
AS
FOLLOWS
WE
STATE
THE
RUNTIME
FOR
CONSTANT
Ε
THOUGH
FOR
GENERAL
Ε
THE
RUNTIME
WOULD
BE
O
NNZ
A
LOG
N
POLY
RΕ
LOG
N
THEOREM
FOR
ANY
CONSTANT
Ε
THERE
IS
AN
ALGORITHM
WHICH
WITH
PROBABILITY
AT
LEAST
OUTPUTS
A
VECTOR
U
U
N
SO
THAT
FOR
ALL
I
N
UI
Ε
UI
THE
RUNTIME
IS
O
NNZ
A
LOG
N
R
R
R
LOG
N
THE
SUCCESS
PROBABILITY
CAN
BE
AMPLIFIED
BY
INDEPENDENT
REPETITION
AND
TAKING
THE
COORDINATE
WISE
MEDIAN
OF
THE
VECTORS
U
ACROSS
THE
REPETITIONS
PROOF
WE
FIRST
RUN
THE
ALGORITHM
OF
THEOREM
AND
THEOREM
OF
CHEUNG
ET
AL
THE
FIRST
THEOREM
GIVES
AN
ALGORITHM
THAT
OUTPUTS
THE
RANK
R
OF
A
WHILE
THE
SECOND
THEOREM
GIVES
AN
ALGORITHM
THAT
ALSO
OUTPUTS
THE
INDICES
IR
OF
LINEARLY
INDEPENDENT
COLUMNS
OF
A
THE
ALGORITHM
TAKES
O
NNZ
A
LOG
D
O
R
TIME
AND
SUCCEEDS
WITH
PROBABILITY
AT
LEAST
O
LOG
D
THUS
IN
WHAT
FOLLOWS
WE
CAN
ASSUME
THAT
A
HAS
FULL
RANK
WE
FOLLOW
THE
SAME
PROCEDURE
AS
ALGORITHM
IN
DRINEAS
ET
AL
USING
OUR
IMPROVED
SUBSPACE
EMBEDDING
THE
PROOF
OF
DRINEAS
ET
AL
PROCEEDS
BY
CHOOSING
A
SUBSPACE
EMBEDDING
COMPUTING
A
THEN
COMPUTING
A
CHANGE
OF
BASIS
MATRIX
R
SO
THAT
AR
HAS
ORTHONORMAL
COLUMNS
THE
ANALYSIS
THERE
THEN
SHOWS
THAT
THE
ROW
NORMS
AR
I
ARE
EQUAL
TO
UI
Ε
TO
OBTAIN
THESE
ROW
NORMS
QUICKLY
AN
R
O
LOG
N
JOHNSON
LINDENSTRAUSS
MATRIX
IS
SAMPLED
ONE
FIRST
COMPUTES
R
FOLLOWED
BY
A
R
USING
A
FAST
JOHNSON
LINDENSTRAUSS
TRANSFORM
ONE
CAN
COMPUTE
A
IN
O
NR
LOG
N
TIME
HAS
O
R
LOG
NLOG
R
ROWS
ONE
CAN
COMPUTE
THE
R
R
MATRIX
R
IN
O
R
LOG
N
LOG
R
TIME
BY
COMPUTING
A
QR
FACTORIZATION
COMPUTING
R
CAN
BE
DONE
IN
O
R
LOG
N
TIME
AND
COMPUTING
A
R
CAN
BE
DONE
IN
O
NNZ
A
LOG
N
TIME
OUR
ONLY
CHANGE
TO
THIS
PROCEDURE
IS
TO
USE
A
DIFFERENT
MATRIX
WHICH
IS
THE
COMPOSITION
OF
OUR
SUBSPACE
EMBEDDING
MATRIX
OF
THEOREM
WITH
PARAMETER
T
O
R
LOG
R
TOGETHER
WITH
A
FAST
JOHNSON
LINDENSTRAUSS
TRANSFORM
F
THAT
IS
WE
SET
F
HERE
F
IS
AN
O
R
R
T
MATRIX
SEE
SECTION
OF
DRINEAS
ET
AL
FOR
AN
INSTANTIATION
OF
F
THEN
A
CAN
BE
COMPUTED
IN
O
NNZ
A
LOG
R
TIME
BY
LEMMA
MOREOVER
F
A
CAN
BE
COMPUTED
IN
O
T
R
LOG
R
O
R
R
TIME
ONE
CAN
THEN
COMPUTE
THE
MATRIX
R
ABOVE
IN
O
R
R
TIME
BY
COMPUTING
A
QR
FACTORIZATION
OF
F
A
THEN
ONE
CAN
COMPUTE
R
IN
O
R
LOG
N
TIME
AND
COMPUTING
A
R
CAN
BE
DONE
IN
O
NNZ
A
LOG
N
TIME
THUS
THE
TOTAL
TIME
IS
O
NNZ
A
LOG
N
R
R
R
LOG
N
TIME
NOTE
THAT
BY
THEOREM
WITH
PROBABILITY
AT
LEAST
SY
Ε
Y
FOR
ALL
Y
COLSPACE
A
AND
BY
LEMMA
OF
DRINEAS
ET
AL
WITH
PROBABILITY
AT
LEAST
F
SY
Ε
SY
FOR
ALL
Y
COLSPACE
A
THEREFORE
F
AX
Ε
AX
FOR
ALL
X
RD
WITH
PROBABILITY
AT
LEAST
THERE
IS
ALSO
A
SMALL
N
PROBABILITY
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
K
L
CLARKSON
AND
D
P
WOODRUFF
OF
FAILURE
THAT
AR
I
Ε
AR
I
FOR
SOME
VALUE
OF
I
THUS
THE
OVERALL
SUCCESS
PROBABILITY
IS
AT
LEAST
THE
REST
OF
THE
CORRECTNESS
PROOF
IS
IDENTICAL
TO
THE
ANALYSIS
IN
DRINEAS
ET
AL
LEAST
SQUARES
REGRESSION
LET
A
RN
D
AND
B
RN
BE
A
MATRIX
AND
VECTOR
FOR
THE
REGRESSION
PROBLEM
MINX
AX
B
WE
ASSUME
THAT
N
D
AGAIN
LET
R
BE
THE
RANK
OF
A
WE
SHOW
THAT
WITH
PROBABILITY
AT
LEAST
WE
CAN
FIND
AN
X
FOR
WHICH
AX
B
Ε
MIN
AX
B
X
WE
WILL
GIVE
SEVERAL
DIFFERENT
ALGORITHMS
FIRST
WE
GIVE
AN
ALGORITHM
SHOWING
THAT
THE
DEPENDENCE
ON
NNZ
A
CAN
BE
LINEAR
NEXT
WE
SHIFT
TO
THE
GENERALIZED
CASE
WITH
MULTIPLE
RIGHT
HAND
SIDES
AND
AFTER
SOME
ANALYTICAL
PRELIMINARIES
GIVE
AN
ALGORITHM
BASED
ON
SAMPLING
USING
LEVERAGE
SCORES
FINALLY
WE
DISCUSS
AFFINE
EMBEDDINGS
CONSTRAINED
REGRESSION
AND
ITERATIVE
METHODS
THEOREM
THE
REGRESSION
PROBLEM
CAN
BE
SOLVED
UP
TO
A
Ε
FACTOR
WITH
PROBABILITY
AT
LEAST
IN
O
NNZ
A
O
Ε
D
Ε
TIME
PROOF
BY
THEOREM
APPLIED
TO
THE
COLUMN
SPACE
COLSPACE
A
B
WHERE
A
B
IS
A
ADJOINED
WITH
THE
VECTOR
B
IT
SUFFICES
TO
COMPUTE
DA
AND
DB
AND
OUTPUT
ARGMINX
DAX
DB
WE
USE
THE
FACT
THAT
D
R
AND
APPLY
THEOREM
WITH
T
O
Ε
D
Ε
THE
THEOREM
IMPLIES
THAT
WITH
PROBABILITY
AT
LEAST
ALL
VECTORS
Y
IN
THE
SPACE
SPANNED
BY
THE
COLUMNS
OF
A
AND
B
HAVE
THEIR
NORMS
PRESERVED
UP
TO
A
Ε
FACTOR
NOTE
THAT
DA
AND
DB
CAN
BE
COMPUTED
IN
O
NNZ
A
TIME
NOW
WE
HAVE
A
REGRESSION
PROBLEM
WITH
D
O
Ε
D
Ε
ROWS
AND
D
COLUMNS
USING
THE
FAST
JOHNSON
LINDENSTRAUSS
TRANSFORM
THIS
CAN
BE
SOLVED
IN
O
D
D
LOG
D
Ε
Ε
LOG
D
TIME
SEE
THEOREM
OF
SARLO
THE
SUCCESS
PROBABILITY
IS
AT
LEAST
THIS
IS
O
Ε
D
Ε
TIME
OUR
REMAINING
ALGORITHMS
WILL
BE
STATED
FOR
GENERALIZED
REGRESSION
GENERALIZED
REGRESSION
AND
AFFINE
EMBEDDINGS
THE
REGRESSION
PROBLEM
CAN
BE
SLIGHTLY
GENERALIZED
TO
MIN
AX
B
F
X
WHERE
X
AND
B
ARE
MATRICES
RATHER
THAN
VECTORS
THIS
PROBLEM
ALSO
CALLED
MULTIPLERESPONSE
REGRESSION
IS
IMPORTANT
IN
THE
ANALYSIS
OF
OUR
LOW
RANK
APPROXIMATION
ALGORITHMS
AND
IS
ALSO
OF
INDEPENDENT
INTEREST
MOREOVER
WHILE
AN
ANALYSIS
INVOLVING
THE
EMBEDDING
OF
A
B
IS
NOT
SIGNIFICANTLY
DIFFERENT
THAN
FOR
AN
EMBEDDING
INVOLVING
A
ALONE
THIS
IS
NOT
TRUE
FOR
A
B
DIFFERENT
TECHNIQUES
MUST
BE
CONSIDERED
THIS
SECTION
PROVIDES
THE
THEOREMS
NEEDED
FOR
ANALYZING
ALGORITHMS
FOR
GENERALIZED
REGRESSION
AS
WELL
AS
A
GENERAL
RESULT
FOR
AFFINE
EMBEDDINGS
PRELIMINARIES
WE
COLLECT
A
FEW
STANDARD
LEMMAS
AND
FACTS
IN
THIS
SECTION
THERE
IS
A
FORM
OF
SKETCHING
MATRIX
THAT
RELIES
ON
SAMPLING
BASED
ON
LEVERAGE
SCORES
IT
WILL
BE
CONVENIENT
TO
DEFINE
IT
USING
SAMPLING
WITH
REPLACEMENT
FOR
GIVEN
SKETCHING
DIMENSION
T
FOR
M
T
LET
RT
N
HAVE
SM
ZM
TPZM
WHERE
PI
UI
AND
ZM
I
WITH
PROBABILITY
PI
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
THE
FOLLOWING
FACT
IS
DUE
TO
RUDELSON
BUT
HAS
SINCE
SEEN
MANY
PROOFS
AND
FOLLOWS
READILY
FROM
NONCOMMUTATIVE
BERNSTEIN
INEQUALITIES
RECHT
WHICH
ARE
VERY
SIMILAR
TO
MATRIX
BERNSTEIN
INEQUALITIES
ZOUZIAS
FACT
LEVERAGE
SCORE
EMBEDDINGS
FOR
RANK
R
A
RN
D
WITH
ROW
LEVERAGE
SCORES
UI
THERE
IS
T
O
RΕ
LOG
R
SUCH
THAT
LEVERAGE
SCORE
SKETCHING
MATRIX
RT
N
IS
AN
EMBEDDING
MATRIX
FOR
A
LEMMA
APPROXIMATE
MATRIX
MULTIPLICATION
FOR
A
AND
B
MATRICES
WITH
N
ROWS
WHERE
AHAS
N
COLUMNS
AND
GIVEN
THERE
IS
T
SO
THAT
FOR
A
T
N
GENERALIZED
SPARSE
EMBEDDING
MATRIX
OR
T
N
FAST
JL
MATRIX
OR
T
LOG
ND
N
SUBSAMPLED
RANDOMIZED
HADAMARD
MATRIX
OR
LEVERAGE
SCORE
SKETCHING
MATRIX
FOR
A
UNDER
THE
CONDITION
THAT
A
HAS
ORTHONORMAL
COLUMNS
PR
A
SB
A
B
F
A
B
Δ
FOR
ANY
FIXED
Δ
PROOF
FOR
A
GENERALIZED
SPARSE
EMBEDDING
MATRIX
AS
IN
SECTION
WITH
PARAMETER
V
FIRST
SUPPOSE
THAT
V
SO
THAT
IS
THE
EMBEDDING
MATRIX
OF
SECTION
LET
X
A
SB
AB
THEN
XI
J
A
I
SB
J
A
I
B
J
WHERE
A
I
IS
THE
ITH
COLUMN
OF
A
AND
B
J
IS
THE
JTH
COLUMN
OF
B
THORUP
AND
ZHANG
HAVE
SHOWN
THAT
E
XI
J
AND
VAR
XI
J
O
T
A
I
B
J
CONSEQUENTLY
E
XI
J
VAR
XI
J
O
T
A
I
B
J
FROM
WHICH
FOR
AN
APPROPRIATE
T
THE
LEMMA
FOLLOWS
BY
CHEBYSHEV
INEQUALITY
FOR
V
XI
J
VT
I
T
V
X
I
J
SEE
EQUATION
SO
THAT
VAR
XI
J
V
VAR
X
I
J
A
I
B
J
A
I
B
J
T
I
T
T
AND
SIMILARLY
THE
LEMMA
FOLLOWS
FOR
THE
SPARSE
EMBEDDING
MATRICES
THE
RESULT
FOR
FAST
JL
MATRICES
WAS
SHOWN
BY
SARLO
AND
FOR
SUBSAMPLED
HADAMARD
BY
DRINEAS
ET
AL
PROOF
OF
LEMMA
THE
CLAIM
ALSO
FOLLOWS
FROM
NORM
PRESERVING
PROPERTIES
OF
THESE
TRANSFORMS
SEE
KANE
AND
NELSON
FOR
LEVERAGE
SCORE
SAMPLING
FIRST
NOTE
THAT
ZM
I
A
SB
A
B
AI
BI
T
PI
I
N
M
T
WE
HAVE
THAT
E
A
SB
A
B
AND
USING
THE
INDEPENDENCE
OF
THE
ZM
THE
SECOND
MOMENT
OF
A
SB
A
B
F
IS
THE
EXPECTATION
OF
TR
A
SB
A
B
A
SB
A
B
TR
BI
AI
AI
BI
I
I
N
M
T
WHICH
IS
ZM
I
ZM
I
PI
PI
TR
BI
AI
AI
BI
B
AA
B
PI
M
T
I
N
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
K
L
CLARKSON
AND
D
P
WOODRUFF
OR
USING
THE
CYCLIC
PROPERTY
OF
THE
TRACE
THE
FACT
THAT
PI
AI
A
AND
THE
FACT
THAT
TR
B
AA
B
A
B
F
A
B
AI
BI
TR
B
AA
B
A
B
T
PI
T
I
N
THUS
THE
LEMMA
FOLLOWS
FOR
LARGE
ENOUGH
T
IN
O
Ε
BY
CHEBYSHEV
INEQUALITY
FACT
4
GIVEN
N
D
MATRIX
A
OF
RANK
K
Γ
FOR
Γ
AND
AN
M
N
FAST
JL
MATRIX
WITH
M
K
IS
A
SUBSPACE
EMBEDDING
FOR
A
WITH
FAILURE
PROBABILITY
AT
MOST
Δ
FOR
ANY
FIXED
Δ
AND
REQUIRES
O
ND
LOG
N
TIME
TO
APPLY
TO
A
A
SIMILAR
FACT
HOLDS
FOR
SUBSAMPLED
HADAMARD
TRANSFORMS
FACT
PYTHAGOREAN
THEOREM
IF
C
AND
D
MATRICES
WITH
THE
SAME
NUMBER
OF
ROWS
AND
COLUMNS
THEN
C
D
IMPLIES
THAT
C
D
C
D
FACT
NORMAL
EQUATIONS
GIVEN
N
D
MATRIX
C
AND
N
D
MATRIX
D
CONSIDER
THE
PROBLEM
MIN
C
X
D
X
RD
D
THE
SOLUTION
TO
THIS
PROBLEM
IS
X
C
D
WHERE
C
IS
THE
MOORE
PENROSE
INVERSE
OF
C
DEFINITION
MOREOVER
C
C
X
D
THUS
IF
C
IS
ANY
VECTOR
IN
THE
COLUMN
SPACE
OF
C
THEN
C
C
X
D
USING
FACT
FOR
ANY
X
C
X
D
C
X
X
C
X
D
GENERALIZED
REGRESSION
CONDITIONS
THE
MAIN
THEOREM
IN
THIS
SECTION
IS
THE
FOLLOWING
IT
COULD
BE
REGARDED
AS
A
GENERALIZATION
OF
LEMMA
OF
DRINEAS
ET
AL
THEOREM
SUPPOSE
THAT
A
AND
B
ARE
MATRICES
WITH
N
ROWS
AND
A
HAS
RANK
AT
MOST
R
SUPPOSE
THAT
IS
A
T
N
MATRIX
AND
THE
EVENT
OCCURS
THAT
SATISFIES
LEMMA
WITH
ERROR
PARAMETER
R
AND
THAT
IS
A
SUBSPACE
EMBEDDING
FOR
A
WITH
ERROR
PARAMETER
THEN
IF
Y
IS
THE
SOLUTION
TO
MIN
AY
B
MIN
AY
B
Y
AND
Y
IS
THE
SOLUTION
TO
Y
THEN
AY
B
F
AY
B
F
BEFORE
PROVING
THEOREM
WE
WILL
NEED
THE
FOLLOWING
LEMMA
LEMMA
FOR
A
B
Y
AND
Y
AS
IN
THEOREM
ASSUME
THAT
A
HAS
ORTHONORMAL
COLUMNS
THEN
A
Y
Y
F
Ε
B
AY
F
PROOF
THE
PROOF
IS
IN
THE
APPENDIX
PROOF
OF
THEOREM
LET
A
HAVE
THE
THIN
SVD
A
U
V
SINCE
U
IS
A
BASIS
FOR
COLSPACE
A
THERE
ARE
X
AND
X
SO
THAT
U
X
B
AY
B
AND
U
X
B
AY
B
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
THEREFORE
U
X
B
F
Ε
U
X
B
F
IMPLIES
THE
THEOREM
WE
CAN
ASSUME
WITHOUT
LOSS
OF
GENERALITY
THAT
A
HAS
ORTHONORMAL
COLUMNS
WITH
THIS
ASSUMPTION
AND
USING
THE
PYTHAGOREAN
THEOREM
FACT
WITH
THE
NORMAL
EQUATIONS
FACT
THEN
LEMMA
AY
B
F
AY
B
A
Y
Y
F
AY
B
AY
B
AY
B
AND
TAKING
SQUARE
ROOTS
AND
ADJUSTING
Ε
BY
A
CONSTANT
FACTOR
COMPLETES
THE
PROOF
4
GENERALIZED
REGRESSION
ALGORITHM
OUR
MAIN
ALGORITHM
FOR
REGRESSION
IS
GIVEN
IN
THE
PROOF
OF
THE
FOLLOWING
THEOREM
THEOREM
GIVEN
A
RN
D
OF
RANK
R
AND
B
RN
D
THE
REGRESSION
PROBLEM
MINY
AY
B
F
CAN
BE
SOLVED
UP
TO
Ε
RELATIVE
ERROR
WITH
PROBABILITY
AT
LEAST
IN
TIME
O
NNZ
A
LOG
N
R
RΕ
RD
R
R
D
Ε
LOG
N
AND
OBTAINING
A
CORESET
OF
SIZE
O
R
Ε
LOG
R
PROOF
WE
ESTIMATE
THE
LEVERAGE
SCORES
OF
A
TO
RELATIVE
ERROR
USING
THE
ALGORITHM
OF
THEOREM
WHICH
HAS
THE
SIDE
EFFECT
OF
FINDING
R
INDEPENDENT
COLUMNS
OF
A
SO
THAT
WE
CAN
ASSUME
THAT
D
R
IF
U
IS
A
BASIS
FOR
COLSPACE
A
THEN
FOR
ANY
X
THERE
IS
A
Y
SO
THAT
U
X
AY
AND
VICE
VERSA
SO
THAT
CONDITIONS
SATISFIED
BY
U
X
ARE
SATISFIED
BY
AY
THAT
IS
WE
CAN
AND
WILL
HEREAFTER
ASSUME
THAT
A
HAS
R
ORTHONORMAL
COLUMNS
WHEN
CONSIDERING
PRODUCTS
AY
WE
CONSTRUCT
A
LEVERAGE
SCORE
SKETCHING
MATRIX
FOR
A
WITH
T
O
R
Ε
R
LOG
R
SO
THAT
LEMMA
IS
SATISFIED
FOR
ERROR
PARAMETER
AT
MOST
Ε
R
WITH
THIS
T
WILL
ALSO
BE
AN
Ε
EMBEDDING
MATRIX
WITH
Ε
USING
LEMMA
THESE
CONDITIONS
AND
THEOREM
IMPLY
THAT
THE
SOLUTION
Y
TO
MINY
AY
B
F
HAS
AY
B
F
Ε
MIN
AY
B
F
Y
THE
RUNTIME
IS
THAT
FOR
COMPUTING
THE
LEVERAGE
SCORES
PLUS
THE
TIME
NEEDED
FOR
FINDING
Y
WHICH
CAN
BE
DONE
BY
COMPUTING
A
QR
FACTORIZATION
OF
AAND
THEN
COMPUTING
R
Q
SB
WHICH
REQUIRES
R
Ε
LOG
R
R
Ε
LOG
R
D
R
D
AND
THE
COST
BOUND
FOLLOWS
5
AFFINE
EMBEDDINGS
WE
ALSO
USE
AFFINE
EMBEDDINGS
FOR
WHICH
A
STRONGER
CONDITION
THAN
THEOREM
IS
SATISFIED
THEOREM
SUPPOSE
THAT
AAND
B
ARE
MATRICES
WITH
N
ROWS
AND
AHAS
RANK
AT
MOST
R
SUPPOSE
THAT
IS
A
T
N
MATRIX
AND
THE
EVENT
OCCURS
THAT
SATISFIES
LEMMA
WITH
ERROR
PARAMETER
Ε
R
AND
THAT
IS
A
SUBSPACE
EMBEDDING
FOR
A
WITH
ERROR
PARAMETER
Ε
LET
X
BE
THE
SOLUTION
OF
MIN
X
AX
B
F
AND
B
AX
B
FOR
ALL
X
OF
APPROPRIATE
SHAPE
AX
B
B
F
AX
B
B
F
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
30
K
L
CLARKSON
AND
D
P
WOODRUFF
FOR
Ε
THUS
IS
AN
AFFINE
EMBEDDING
WITH
RELATIVE
ERROR
UP
TO
AN
ADDITIVE
CONSTANT
I
E
A
WEAK
EMBEDDING
IF
ALSO
B
F
Ε
B
F
THEN
AX
B
AX
B
AND
IS
A
AFFINE
EMBEDDING
NOTE
THAT
EVEN
WHEN
ONLY
THE
WEAKER
FIRST
STATEMENT
HOLDS
THE
SKETCH
STILL
CAN
BE
USED
FOR
OPTIMIZATION
SINCE
ADDING
A
CONSTANT
TO
THE
OBJECTIVE
FUNCTION
OF
AN
OPTIMIZATION
DOES
NOT
CHANGE
THE
SOLUTION
PROOF
IF
U
IS
A
BASIS
FOR
COLSPACE
A
THEN
FOR
ANY
X
THERE
IS
A
Y
SO
THAT
U
X
AY
AND
VICE
VERSA
SO
THAT
CONDITIONS
SATISFIED
BY
U
X
ARE
SATISFIED
BY
AY
WE
CAN
AND
WILL
HEREAFTER
ASSUME
THAT
A
HAS
R
ORTHONORMAL
COLUMNS
USING
THE
FACT
THAT
W
TR
W
W
FOR
ANY
W
THE
EMBEDDING
PROPERTY
THE
FACT
THAT
A
F
R
AND
THE
MATRIX
PRODUCT
APPROXIMATION
CONDITION
OF
LEMMA
AX
B
B
F
A
X
X
AX
B
B
F
A
X
X
TR
X
X
A
B
A
X
X
Ε
A
X
X
X
X
F
B
F
THE
NORMAL
EQUATIONS
FACT
IMPLY
THAT
AX
B
A
X
X
B
F
AND
USING
THE
OBSERVATION
THAT
A
B
FOR
A
B
R
AX
B
B
F
AX
B
B
F
Ε
A
X
X
X
X
F
B
F
Ε
A
X
X
F
B
F
A
X
X
B
F
AX
B
AND
THE
FIRST
STATEMENT
OF
THE
THEOREM
FOLLOWS
WHEN
B
F
Ε
B
F
THE
SECOND
STATEMENT
FOLLOWS
SINCE
THEN
AX
B
AX
B
Ε
B
F
AX
B
USING
B
F
AX
B
F
FOR
ALL
X
TO
APPLY
THIS
THEOREM
TO
SPARSE
EMBEDDINGS
WE
WILL
NEED
THE
FOLLOWING
LEMMA
LEMMA
LET
A
BE
AN
N
D
MATRIX
LET
RT
N
BE
A
RANDOMLY
CHOSEN
SPARSE
EMBEDDING
MATRIX
FOR
AN
APPROPRIATE
T
Ε
THEN
WITH
PROBABILITY
AT
LEAST
A
Ε
A
PROOF
SEE
THE
APPENDIX
LEMMA
LET
A
BE
AN
N
D
MATRIX
LET
RT
N
BE
A
SAMPLED
RANDOMIZED
HADAMARD
TRANSFORM
SRHT
MATRIX
FOR
AN
APPROPRIATE
T
Ε
LOG
N
THEN
WITH
PROBABILITY
AT
LEAST
A
Ε
A
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
PROOF
SEE
THE
APPENDIX
THEOREM
LET
A
AND
B
BE
MATRICES
WITH
N
ROWS
AND
A
HAS
RANK
AT
MOST
R
THE
FOLLOWING
CONDITIONS
HOLD
WITH
FIXED
NONZERO
PROBABILITY
IF
IS
A
T
N
SRHT
MATRIX
THERE
IS
T
O
Ε
N
LOG
R
R
LOG
N
SUCH
THAT
IS
AN
Ε
AFFINE
EMBEDDING
FOR
A
AND
B
IF
IS
A
T
N
SPARSE
EMBEDDING
THERE
IS
T
O
Ε
R
Ε
SUCH
THAT
IS
AN
Ε
AFFINE
EMBEDDING
IF
IS
A
T
N
LEVERAGE
SCORE
SAMPLING
MATRIX
THERE
IS
T
O
Ε
LOG
R
SUCH
THAT
IS
A
WEAK
Ε
AFFINE
EMBEDDING
IF
THE
ROW
NORMS
OF
B
ARE
AVAILABLE
A
MODIFIED
LEVERAGE
SCORE
SAMPLER
IS
AN
Ε
EMBEDDING
HERE
B
IS
AS
IN
THEOREM
NOTE
THAT
NONE
OF
THE
DIMENSIONS
T
DEPEND
ON
THE
NUMBER
OF
COLUMNS
OF
B
PROOF
TO
APPLY
THEOREM
10
WE
NEED
EACH
GIVEN
SKETCHING
MATRIX
TO
SATISFY
CONDITIONS
ON
MULTIPLICATIVE
ERROR
SUBSPACE
EMBEDDING
AND
PRESERVATION
OF
B
F
AS
IN
THAT
THEOREM
WE
CAN
ASSUME
WITHOUT
LOSS
OF
GENERALITY
THAT
A
HAS
R
ORTHONORMAL
COLUMNS
REGARDING
THE
MULTIPLICATIVE
ERROR
BOUND
OF
R
LEMMA
TELLS
US
THAT
SRHT
ACHIEVES
THIS
BOUND
FOR
T
O
LOG
N
Ε
AND
THE
OTHER
TWO
NEED
T
O
Ε
R
REGARDING
SUBSPACE
EMBEDDING
AS
NOTED
IN
THE
INTRODUCTION
AN
SRHT
MATRIX
ACHIEVES
THIS
FOR
T
O
Ε
LOG
R
R
LOG
N
A
SPARSE
EMBEDDING
REQUIRES
T
O
Ε
R
Ε
AS
IN
THEOREM
4
AND
LEVERAGE
SCORE
SAMPLERS
NEED
T
O
Ε
LOG
R
AS
MENTIONED
IN
FACT
REGARDING
PRESERVATION
OF
THE
NORM
OF
B
LEMMA
12
GIVES
THE
CLAIM
FOR
SRHT
MATRICES
AND
LEMMA
GIVES
THE
CLAIM
FOR
SPARSE
EMBEDDINGS
WHERE
THE
A
OF
THOSE
LEMMAS
IS
B
THUS
THE
CONDITIONS
ARE
SATISFIED
FOR
THEOREM
10
TO
YIELD
THE
CLAIMS
FOR
SRHT
AND
FOR
SPARSE
EMBEDDINGS
AND
FOR
THE
WEAK
CONDITION
FOR
LEVERAGE
SCORE
SAMPLERS
WE
GIVE
ONLY
A
TERSE
VERSION
OF
THE
ARGUMENT
FOR
THE
LAST
STATEMENT
OF
THE
THEOREM
WHEN
THE
SQUARED
ROW
NORMS
BI
B
I
F
OF
B
ARE
AVAILABLE
A
SAMPLER
THAT
PICKS
ROW
THAT
ROW
WITH
TPI
WILL
YIELD
I
WITH
PROBABILITY
PI
MIN
TBI
B
F
AND
SCALES
A
MATRIX
WHOSE
FROBENIUS
NORM
WILL
BE
T
B
F
WITH
HIGH
PROBABILITY
IF
THE
LEVERAGE
SCORE
SAMPLER
PICKS
ROWS
WITH
PROBABILITY
QI
CREATE
A
NEW
SAMPLER
THAT
PICKS
ROWS
WITH
PROBABILITY
PI
PI
QI
AND
SCALES
BY
TPI
THE
RESULTING
SAMPLER
WILL
SATISFY
THE
NORM
PRESERVING
PROPERTY
FOR
B
AND
ALSO
SATISFY
THE
SAME
PROPERTIES
AS
THE
LEVERAGE
SCORE
SAMPLER
UP
TO
A
CONSTANT
FACTOR
THE
RESULTING
SAMPLER
IS
THUS
AN
O
Ε
AFFINE
EMBEDDING
AFFINE
EMBEDDINGS
AND
CONSTRAINED
REGRESSION
FROM
CONDITION
AN
AFFINE
EMBEDDING
CAN
BE
USED
TO
REDUCE
THE
WORK
NEEDED
TO
ACHIEVE
SMALL
ERROR
IN
REGRESSION
PROBLEMS
EVEN
WHEN
THERE
ARE
CONSTRAINTS
ON
X
WE
CONSIDER
THE
CONSTRAINT
X
THAT
THE
ENTRIES
OF
X
ARE
NONNEGATIVE
THE
PROBLEM
MIN
X
AX
B
FOR
B
RN
N
AND
A
RN
D
ARISES
AMONG
OTHER
PLACES
AS
A
SUBROUTINE
IN
FINDING
A
NONNEGATIVE
APPROXIMATE
FACTORIZATION
OF
B
FOR
AN
AFFINE
EMBEDDING
MIN
AX
B
Ε
MIN
AX
B
X
X
YIELDING
AN
IMMEDIATE
REDUCTION
YIELDING
A
SOLUTION
WITH
RELATIVE
ERROR
Ε
JUST
SOLVE
THE
SKETCHED
VERSION
OF
THE
PROBLEM
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
32
K
L
CLARKSON
AND
D
P
WOODRUFF
FROM
THEOREM
SUITABLE
SKETCHING
MATRICES
FOR
CONSTRAINED
REGRESSION
INCLUDE
A
SPARSE
EMBEDDING
AN
SRHT
MATRIX
OR
A
LEVERAGE
SCORE
SAMPLER
THE
LAST
MAY
NOT
NEED
THE
CONDITION
OF
PRESERVING
THE
NORM
OF
B
IF
A
HIGH
ACCURACY
SOLVER
IS
USED
FOR
THE
SKETCHED
SOLUTION
OR
IF
OTHERWISE
THE
ADDITIVE
CONSTANT
IS
NOT
AN
OBSTACLE
FOR
THAT
SOLVER
SINCE
IT
IS
IMMEDIATE
THAT
AFFINE
EMBEDDINGS
CAN
BE
COMPOSED
TO
OBTAIN
AN
AFFINE
EMBEDDING
WITH
A
CONSTANT
FACTOR
LOSS
THE
MOST
EFFICIENT
APPROACH
MIGHT
BE
TO
USE
A
SKETCH
THAT
FIRST
APPLIES
A
SPARSE
EMBEDDING
AND
THEN
APPLIES
AN
SRHT
MATRIX
RESULTING
IN
A
SKETCHED
PROBLEM
WITH
O
Ε
LOG
R
Ε
ROWS
AND
WHERE
COMPUTING
THE
SKETCH
TAKES
O
NNZ
A
NNZ
B
O
Ε
D
D
TIME
FOR
B
RN
D
WHEN
R
IS
UNKNOWN
THE
UPPER
BOUND
R
D
CAN
BE
USED
FOR
LOW
RANK
APPROXIMATION
DISCUSSED
IN
SECTION
WE
REQUIRE
X
TO
SATISFY
A
RANK
CONDITION
THE
SAME
TECHNIQUES
APPLY
ITERATIVE
METHODS
FOR
REGRESSION
A
CLASSICAL
APPROACH
TO
FINDING
MIN
X
AX
B
F
IS
TO
SOLVE
THE
NORMAL
EQUATIONS
FACT
A
AX
A
B
VIA
GAUSSIAN
ELIMINATION
FOR
A
RN
R
AND
B
RN
D
THIS
RE
QUIRES
O
MIN
R
NNZ
B
D
NNZ
A
TO
FORM
A
B
O
R
NNZ
A
TO
FORM
A
A
AND
O
R
R
D
TO
SOLVE
THE
RESULTING
LINEAR
SYSTEMS
ANOTHER
METHOD
IS
TO
FACTOR
A
QW
WHERE
Q
HAS
ORTHONORMAL
COLUMNS
AND
W
IS
UPPER
TRIANGULATION
THIS
TYPICALLY
TRADES
A
SLOWDOWN
FOR
A
HIGHER
QUALITY
SOLUTION
ANOTHER
APPROACH
TO
REGRESSION
IS
TO
APPLY
AN
ITERATIVE
METHOD
FROM
THE
GENERAL
CLASS
OF
KRYLOV
CG
LIKE
METHODS
TO
A
PRECONDITIONED
VERSION
OF
THE
PROBLEM
IN
SUCH
METHODS
AN
ESTIMATE
X
M
OF
A
SOLUTION
IS
MAINTAINED
FOR
ITERATIONS
M
USING
DATA
OBTAINED
FROM
PREVIOUS
ITERATIONS
THE
CONVERGENCE
OF
THESE
METHODS
DEPENDS
ON
THE
CONDITION
NUMBER
Κ
A
A
SUPX
X
AX
INF
X
X
AX
FROM
THE
INPUT
MATRIX
A
CLASSICAL
RESULT
LUENBERGER
AND
YE
VIA
MENG
ET
AL
OR
THEOREM
10
GOLUB
AND
VAN
LOAN
IS
THAT
M
A
X
M
X
Κ
A
A
Κ
A
A
A
X
X
THUS
THE
RUNTIME
OF
CG
LIKE
METHODS
SUCH
AS
CGNR
GOLUB
AND
VAN
LOAN
DEPENDS
ON
THE
UNKNOWN
CONDITION
NUMBER
THE
RUNTIME
PER
ITERATION
IS
THE
TIME
NEEDED
TO
COMPUTE
MATRIX
VECTOR
PRODUCTS
AX
AND
A
V
PLUS
O
N
D
FOR
VECTOR
ARITHMETIC
OR
O
NNZ
A
PRECONDITIONING
REDUCES
THE
NUMBER
OF
ITERATIONS
NEEDED
FOR
A
GIVEN
ACCURACY
SUPPOSE
THAT
FOR
NONSINGULAR
MATRIX
R
THE
CONDITION
NUMBER
Κ
R
A
AR
IS
SMALL
THEN
A
CG
LIKE
METHOD
APPLIED
TO
AR
WOULD
CONVERGE
QUICKLY
MOREOVER
FOR
ITERATE
Y
M
THAT
HAS
ERROR
Α
M
ARY
M
B
SMALL
THE
CORRESPONDING
X
RY
M
WOULD
HAVE
AX
B
Α
M
THE
RUNTIME
PER
ITERATION
WOULD
HAVE
AN
ADDITIONAL
O
FOR
COMPUTING
PRODUCTS
INVOLVING
R
CONSIDER
THE
MATRIX
R
OBTAINED
FOR
LEVERAGE
SCORE
APPROXIMATION
IN
SECTION
WHERE
A
SUBSPACE
EMBEDDING
MATRIX
IS
APPLIED
TO
A
AND
R
IS
COMPUTED
SO
THAT
AR
HAS
ORTHONORMAL
COLUMNS
SINCE
IS
A
SUBSPACE
EMBEDDING
MATRIX
TO
CONSTANT
ACCURACY
FOR
ALL
UNIT
X
RD
ARX
ARX
IT
FOLLOWS
THAT
THE
CONDITION
NUMBER
Κ
R
A
AR
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
THAT
IS
AR
IS
VERY
WELL
CONDITIONED
PLUGGING
THIS
BOUND
INTO
EQUATION
AFTER
M
ITERATIONS
AR
X
M
X
IS
AT
MOST
TIMES
ITS
STARTING
VALUE
THUS
STARTING
WITH
A
SOLUTION
X
WITH
RELATIVE
ERROR
AT
MOST
AND
APPLYING
LOG
Ε
ITERATIONS
OF
A
CG
LIKE
METHOD
WITH
E
THE
RELATIVE
ERROR
IS
REDUCED
TO
Ε
AND
THE
WORK
IS
O
NNZ
A
R
LOG
Ε
WHERE
WE
ASSUME
THAT
D
HAS
BEEN
REDUCED
TO
R
AS
IN
THE
LEVERAGE
COMPUTATION
PLUS
THE
WORK
TO
FIND
R
WE
HAVE
THE
FOLLOWING
THEOREM
THEOREM
THE
REGRESSION
PROBLEM
CAN
BE
SOLVED
UP
TO
A
Ε
FACTOR
WITH
PROBABILITY
AT
LEAST
IN
O
NNZ
A
LOG
N
Ε
R
R
R
LOG
Ε
TIME
NOTE
THAT
ONLY
THE
MATRIX
R
FROM
THE
LEVERAGE
SCORE
COMPUTATION
IS
NEEDED
NOT
THE
LEVERAGE
SCORES
THUS
THE
NNZ
A
TERM
IN
THE
RUNTIME
NEED
NOT
HAVE
A
LOG
N
FACTOR
HOWEVER
SINCE
REDUCING
A
TO
R
COLUMNS
REQUIRES
THAT
FACTOR
THE
RESULTING
RUNTIME
WITHOUT
THAT
FACTOR
IS
O
NNZ
A
LOG
Ε
LOG2
D
LOG
Ε
AND
DEPENDS
ON
D
THE
MATRIX
AR
IS
SO
WELL
CONDITIONED
THAT
A
SIMPLE
ITERATIVE
IMPROVEMENT
SCHEME
HAS
THE
SAME
RUNTIME
UP
TO
A
CONSTANT
FACTOR
AGAIN
START
WITH
A
SOLUTION
X
WITH
RELATIVE
ERROR
AT
MOST
AND
FOR
M
LET
X
M
X
M
R
A
B
ARX
M
THEN
USING
THE
NORMAL
EQUATIONS
AR
X
M
X
AR
X
M
R
A
B
ARX
M
X
AR
ARR
A
AR
X
M
X
U
V
X
M
X
WHERE
AR
U
V
IS
THE
SVD
OF
AR
FOR
ALL
UNIT
X
RD
ARX
THUS
WE
HAVE
THAT
ALL
SINGULAR
VALUES
ΣI
OF
AR
ARE
AND
THE
DIAGONAL
ENTRIES
OF
ARE
ALL
AT
MOST
ΣI
0
ΣI
0
FOR
0
THUS
AR
X
M
X
AR
X
M
X
AND
BY
CHOOSING
0
SAY
O
LOG
Ε
ITERATIONS
SUFFICE
FOR
THIS
SCHEME
ALSO
TO
ATTAIN
Ε
RELATIVE
ERROR
THIS
SCHEME
CAN
BE
READILY
EXTENDED
TO
GENERALIZED
MULTIPLE
RESPONSE
REGRESSION
USING
THE
ITERATION
X
M
X
M
R
A
B
ARX
M
THE
INITIALIZATION
COST
THEN
INCLUDES
THAT
OF
COMPUTING
A
B
WHICH
IS
O
MIN
R
NNZ
B
D
NNZ
A
WHERE
AGAIN
B
N
D
R
THE
PRODUCT
A
A
USED
IMPLICITLY
PER
ITERATION
COULD
BE
COMPUTED
IN
O
R
NNZ
A
AND
THEN
APPLIED
PER
ITERATION
IN
TIME
D
R
OR
APPLIED
EACH
ITERATION
IN
TIME
D
NNZ
A
THAT
IS
THIS
METHOD
IS
NEVER
MUCH
WORSE
THAN
CG
LIKE
METHODS
BUT
COMPARABLE
IN
RUNTIME
WHEN
D
R
WHEN
D
R
IT
IS
A
LITTLE
WORSE
IN
ASYMPTOTIC
RUNTIME
THAN
SOLVING
THE
NORMAL
EQUATIONS
LOW
RANK
APPROXIMATION
THIS
SECTION
GIVES
ALGORITHMS
FOR
LOW
RANK
APPROXIMATION
UNDERSTOOD
USING
GENERALIZED
REGRESSION
ANALYSIS
AS
IN
EARLIER
WORK
SUCHAS
SARLO
AND
CLARKSON
AND
WOODRUFF
LET
K
A
A
K
F
WHERE
A
K
DENOTES
THE
BEST
RANK
K
APPROXIMATION
TO
A
WE
SEEK
LOW
RANK
MATRICES
WHOSE
DISTANCE
TO
A
IS
WITHIN
Ε
OF
K
WE
GIVE
AN
ALGORITHM
FOR
FINDING
SUCH
MATRICES
AND
PROVE
THE
FOLLOWING
THEOREM
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
K
L
CLARKSON
AND
D
P
WOODRUFF
THEOREM
FOR
A
RN
N
THERE
IS
AN
ALGORITHM
THAT
WITH
FAILURE
PROBABILITY
10
FINDS
MATRICES
L
W
RN
K
WITH
ORTHONORMAL
COLUMNS
AND
DIAGONAL
D
RK
K
SO
THAT
A
LDW
F
Ε
K
THE
ALGORITHM
RUNS
IN
TIME
O
NNZ
A
O
Ε
4
Ε
5
WE
WILL
APPLY
EMBEDDING
MATRICES
COMPOSED
OF
PRODUCTS
OF
SUCH
MATRICES
THUS
WE
NEED
TO
CHECK
THAT
THIS
OPERATION
PRESERVES
THE
PROPERTIES
THAT
WE
NEED
FACT
8
IF
RT
N
APPROXIMATES
MATRIX
PRODUCTS
AND
IS
A
SUBSPACE
EMBEDDING
WITH
ERROR
AND
FAILURE
PROBABILITY
Δ
AND
RT
T
APPROXIMATES
MATRIX
PRODUCTS
WITH
ERROR
AND
FAILURE
PROBABILITY
Δ
THEN
APPROXIMATES
MATRIX
PRODUCTS
WITH
ERROR
O
AND
FAILURE
PROBABILITY
AT
MOST
Δ
Δ
PROOF
THIS
FOLLOWS
FROM
TWO
APPLICATIONS
OF
LEMMA
TOGETHER
WITH
THE
OBSERVATION
THAT
AX
AX
FOR
BASIS
VECTORS
X
IMPLIES
THAT
A
F
A
F
FACT
8
3
IF
RT
N
IS
A
SUBSPACE
EMBEDDING
WITH
ERROR
AND
FAILURE
PROBABILITY
Δ
AND
RT
T
IS
A
SUBSPACE
EMBEDDING
WITH
ERROR
AND
FAILURE
PROBABILITY
Δ
THEN
IS
A
SUBSPACE
EMBEDDING
WITH
ERROR
O
AND
FAILURE
PROBABILITY
AT
MOST
Δ
Δ
THE
FOLLOWING
LEMMA
IMPLIES
A
REGRESSION
ALGORITHM
THAT
IS
LINEAR
IN
NNZ
A
BUT
HAS
A
WORSE
DEPENDENCE
IN
ITS
ADDITIVE
TERM
LEMMA
8
4
LET
A
RN
D
OF
RANK
R
B
RN
D
AND
C
D
D
FOR
R
RT
N
A
SPARSE
EMBEDDING
MATRIX
RT
T
A
SAMPLED
RANDOMIZED
HADAMARD
MATRIX
THERE
IS
T
O
R
LOG7
R
RΕ
AND
T
O
RΕ
LOG
R
Ε
SUCH
THAT
FOR
R
R
X
ARGMIN
X
R
AX
B
F
HAS
AX
B
F
Ε
MIN
X
AX
B
F
THE
OPERATOR
R
CAN
BE
APPLIED
IN
O
NNZ
A
NNZ
B
TC
LOG
T
TIME
WE
ARE
NOW
READY
TO
DESCRIBE
THE
ALGORITHM
PROMISED
BY
THEOREM
8
COMPUTE
AR
AND
AN
ORTHONORMAL
BASIS
U
FOR
COLSPACE
AR
WHERE
R
IS
AS
IN
LEMMA
8
4
WITH
R
K
COMPUTE
SU
AND
A
FOR
THE
PRODUCT
OF
A
V
V
SRHT
MATRIX
WITH
A
V
N
SPARSE
EMBEDDING
WHERE
V
Ε
4
K2
LOG7
K
Ε
AND
V
Ε
3
K
LOG2
K
Ε
INSTEAD
OF
THIS
AFFINE
EMBEDDING
CONSTRUCTION
AN
ALTERNATIVE
MIGHT
USE
LEVERAGE
SCORE
SAMPLING
WHERE
EVEN
THE
WEAKER
CLAIM
OF
THEOREM
WOULD
BE
ENOUGH
V
3
COMPUTE
THE
SVD
OF
SU
U
U
A
K
WHERE
AGAIN
Z
K
DENOTES
THE
BEST
4
COMPUTE
THE
SVD
U
DW
OF
V
RANK
K
APPROXIMATION
TO
MATRIX
Z
5
RETURN
L
U
U
D
AND
W
PROOF
OF
THEOREM
8
RUNTIME
COMPUTING
AR
IN
THE
FIRST
STEP
TAKES
O
NNZ
A
O
NK
K
Ε
TIME
THEN
O
N
K
Ε
TO
COMPUTE
THE
N
O
Ε
K
LOG
K
Ε
MATRIX
U
COMPUTING
SU
AND
A
REQUIRES
O
NNZ
A
O
Ε
4
TIME
COMPUTING
THE
SVD
OF
THE
O
KΕ
3
O
KΕ
MATRIX
SU
REQUIRES
O
Ε
5
COMPUTING
U
A
REQUIRES
O
Ε
4
TIME
COMPUTING
THE
SVD
OF
THE
O
KΕ
N
MATRIX
OF
THE
NEXT
STEP
REQUIRES
O
Ε
TIME
AS
DOES
COMPUTING
U
U
CORRECTNESS
APPLY
LEMMA
8
4
WITH
A
OF
THAT
LEMMA
MAPPING
TO
A
K
AND
B
MAPPING
TO
A
TAKING
TRANSPOSES
THIS
IMPLIES
THAT
WITH
SMALL
FIXED
FAILURE
PROBABILITY
Y
AR
AK
R
HAS
Y
AK
A
F
MIN
Y
AK
A
F
K
Y
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
THUS
MIN
X
RANK
X
K
AR
X
A
F
AR
AK
R
AK
A
F
K
SINCE
U
IS
A
BASIS
FOR
COLSPACE
AR
Ε
MIN
X
RANK
X
K
U
X
A
F
Ε
MIN
X
RANK
X
K
AR
X
A
F
WITH
THE
GIVEN
CONSTRUCTION
OF
THEOREM
7
13
APPLIES
TWICE
WITH
AR
TAKING
THE
ROLE
OF
A
AND
A
TAKING
THE
ROLE
OF
B
SO
THAT
IS
AN
Ε
AFFINE
EMBEDDING
AFTER
ADJUSTING
CONSTANTS
IT
FOLLOWS
THAT
FOR
X
ARGMIN
X
RANK
X
K
U
X
A
F
U
X
A
F
Ε
Ε
MIN
U
X
A
F
MIN
AR
X
A
F
X
RANK
X
K
X
RANK
X
K
Ε
K
USING
EQUATION
FROM
LEMMA
4
3
OF
CLARKSON
AND
WOODRUFF
THE
SOLUTION
TO
MIN
X
RANK
X
K
U
X
A
F
IS
X
U
A
K
WHERE
THIS
DENOTES
THE
BEST
RANK
K
APPROXIMATION
TO
U
A
IT
FOLLOWS
X
IS
A
SOLUTION
TO
MIN
X
RANK
X
K
S
U
X
A
F
MOREOVER
THE
RANK
K
THAT
X
V
MATRIX
U
X
LDW
HAS
LDW
A
F
Ε
K
AND
L
D
AND
W
HAVE
THE
PROPERTIES
PROMISED
P
REGRESSION
FOR
ANY
P
LET
A
RN
D
AND
B
RN
BE
A
MATRIX
AND
VECTOR
FOR
THE
REGRESSION
PROBLEM
MINX
AX
B
P
WE
ASSUME
THAT
N
D
LET
R
BE
THE
RANK
OF
A
WE
SHOW
THAT
WITH
PROBABILITY
AT
LEAST
3
WE
CAN
QUICKLY
FIND
AN
X
FOR
WHICH
AX
B
P
Ε
MIN
AX
B
P
X
HERE
P
IS
ANY
CONSTANT
IN
THIS
THEOREM
IS
AN
IMMEDIATE
COROLLARY
OF
THEOREM
5
AND
THE
CONSTRUCTION
GIVEN
IN
SECTION
3
OF
CLARKSON
ET
AL
WHICH
SHOWS
HOW
TO
SOLVE
P
REGRESSION
GIVEN
A
SUBSPACE
EMBEDDING
FOR
AS
A
BLACK
BOX
WE
REVIEW
THE
CONSTRUCTION
OF
CLARKSON
ET
AL
LATER
FOR
COMPLETENESS
A
KEY
CONCEPT
FOR
THESE
METHODS
IS
THAT
OF
THE
Α
Β
P
WELL
CONDITIONED
BASIS
FOR
COLSPACE
A
FOR
P
AN
ORTHONORMAL
BASIS
IS
WELL
CONDITIONED
THE
DEFINITION
USES
THE
ENTRYWISE
NORM
WHICH
FOR
A
IS
A
I
J
AI
J
P
P
DEFINITION
WELL
CONDITIONED
BASIS
FOR
THE
P
NORM
AN
N
D
MATRIX
U
IS
AN
Α
Β
P
WELL
CONDITIONED
BASIS
FOR
THE
COLUMN
SPACE
OF
A
IF
USING
M
X
X
P
U
Α
AND
FOR
ALL
X
RD
X
Q
Β
U
X
P
WHERE
P
Q
FOR
EASE
OF
NOTATION
WE
WILL
JUST
SAY
THAT
U
IS
A
WELL
CONDITIONED
BASIS
FOR
A
IF
Α
Β
DO
P
WHERE
P
IS
UNDERSTOOD
FROM
CONTEXT
AS
IN
THE
PROOF
OF
THEOREM
IN
O
NNZ
A
LOG
D
O
R
3
TIME
WE
CAN
REPLACE
THE
INPUT
MATRIX
A
WITH
A
NEW
MATRIX
WITH
THE
SAME
COLUMN
SPACE
OF
A
AND
FULL
COLUMN
RANK
WHERE
R
IS
RANK
OF
A
WE
THEREFORE
ASSUME
THAT
A
HAS
FULL
RANK
IN
WHAT
FOLLOWS
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
K
L
CLARKSON
AND
D
P
WOODRUFF
LET
W
R
LOG
N
R
LOG
N
AND
ASSUME
THAT
W
N
SPLIT
A
INTO
N
W
MATRICES
AN
W
EACH
W
R
SO
THAT
AI
IS
THE
SUBMATRIX
OF
A
INDEXED
BY
THE
ITH
BLOCK
OF
W
ROWS
WE
INVOKE
THEOREM
5
WITH
THE
PARAMETERS
N
W
R
Ε
AND
Δ
100N
CHOOSING
A
GENERALIZED
SPARSE
EMBEDDING
MATRIX
S
WITH
T
O
R
LOG
N
R
LOG
N
ROWS
THEOREM
5
HAS
THE
GUARANTEE
THAT
FOR
EACH
FIXED
I
S
AI
IS
A
SUBSPACE
EMBEDDING
WITH
PROBABILITY
AT
LEAST
Δ
IT
FOLLOWS
BY
A
UNION
BOUND
THAT
WITH
PROBABILITY
AT
LEAST
FOR
ALL
I
N
W
S
AI
IS
A
SUBSPACE
EMBEDDING
WE
CONDITION
ON
THIS
EVENT
OCCURRING
CONSIDER
THE
MATRIX
F
RNT
W
N
WHICH
IS
A
BLOCK
DIAGONAL
MATRIX
COMPRISING
N
W
BLOCKS
ALONG
THE
DIAGONAL
EACH
BLOCK
IS
THE
T
W
MATRIX
S
GIVEN
EARLIER
S
S
F
S
WE
WILL
NEED
THE
FOLLOWING
THEOREM
THEOREM
THEOREM
5
OF
DASGUPTA
ET
AL
RESTATED
LET
A
BE
AN
N
R
MATRIX
AND
LET
P
THEN
THERE
EXISTS
AN
Α
Β
P
WELL
CONDITIONED
BASIS
FOR
THE
COLUMN
SPACE
OF
A
SUCH
THAT
IF
P
THEN
Α
R
P
AND
Β
IF
P
THEN
Α
R
AND
Β
AND
IF
P
THEN
Α
R
P
AND
Β
R
P
AN
R
R
CHANGE
OF
BASIS
MATRIX
U
FOR
WHICH
A
U
IS
A
WELL
CONDITIONED
BASIS
CAN
BE
COMPUTED
IN
O
NR
5
LOG
N
TIME
WE
USE
THE
FOLLOWING
ALGORITHM
CONDITION
A
GIVEN
A
MATRIX
A
RN
R
COMPUTE
F
A
APPLY
THEOREM
2
TO
F
A
TO
OBTAIN
AN
R
R
CHANGE
OF
BASIS
MATRIX
U
SO
THAT
FAU
IS
AN
Α
Β
P
WELL
CONDITIONED
BASIS
OF
THE
COLUMN
SPACE
OF
MATRIX
F
A
3
OUTPUT
AU
RΓ
P
WHERE
Γ
P
P
2
FOR
P
2
AND
Γ
P
2
P
FOR
P
2
THE
FOLLOWING
LEMMA
IS
THE
ANALOG
OF
THAT
IN
CLARKSON
ET
AL
PROVED
FOR
THE
FAST
JOHNSON
LINDENSTAUSS
TRANSFORM
HOWEVER
THE
PROOF
IN
CLARKSON
ET
AL
ONLY
USED
THAT
THE
FAST
JOHNSON
LINDENSTRAUSS
TRANSFORM
IS
A
SUBSPACE
EMBEDDING
WE
STATE
IT
HERE
WITH
OUR
NEW
PARAMETERS
AND
GIVE
THE
ANALOGOUS
PROOF
IN
THE
APPENDIX
FOR
COMPLETENESS
LEMMA
3
WITH
PROBABILITY
AT
LEAST
THE
OUTPUT
AU
RΓ
P
OF
CONDITION
A
IS
GUARANTEED
TO
BE
A
BASIS
THAT
IS
Α
Β
TW
P
2
P
WELL
CONDITIONED
THAT
IS
AN
Α
Β
POLY
MAX
R
LOG
N
P
WELL
CONDITIONED
BASIS
THE
TIME
TO
COMPUTE
U
IS
O
NNZ
A
LOG
N
POLY
RΕ
THE
FOLLOWING
TEXT
IS
FROM
CLARKSON
ET
AL
WE
STATE
IT
HERE
FOR
COMPLETENESS
A
WELL
CONDITIONED
BASIS
CAN
BE
USED
TO
SOLVE
P
REGRESSION
PROBLEMS
VIA
AN
ALGORITHM
BASED
ON
SAMPLING
THE
ROWS
OF
A
WITH
PROBABILITIES
PROPORTIONAL
TO
THE
NORMS
OF
THE
ROWS
OF
THE
CORRESPONDING
WELL
CONDITIONED
BASIS
THIS
ENTAILS
USING
FOR
SPEED
A
SECOND
PROJECTION
2
APPLIED
TO
AU
ON
THE
RIGHT
TO
ESTIMATE
THE
ROW
NORMS
WHERE
2
CAN
BE
AN
O
R
O
LOG
N
MATRIX
OF
I
I
D
NORMAL
RANDOM
VARIABLES
WHICH
IS
THE
SAME
AS
IS
DONE
IN
DRINEAS
ET
AL
THIS
ALLOWS
FAST
ESTIMATION
OF
THE
2
NORMS
OF
THE
ROWS
OF
AU
HOWEVER
WE
NEED
THE
P
NORMS
OF
THOSE
ROWS
WHICH
WE
THUS
KNOW
UP
TO
A
FACTOR
OF
R
2
P
WE
USE
THESE
NORM
ESTIMATES
IN
THE
SAMPLING
ALGORITHM
OF
DASGUPTA
ET
AL
AS
DISCUSSED
FOR
THE
RUNTIME
BOUND
OF
THAT
ARTICLE
THEOREM
7
THIS
ALGORITHM
SAMPLES
A
NUMBER
OF
ROWS
PROPORTIONAL
TO
R
ΑΒ
P
WHEN
AN
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
LOW
RANK
APPROXIMATION
AND
REGRESSION
IN
INPUT
SPARSITY
TIME
FIG
A
PARETO
CURVE
OF
ERROR
AS
A
FUNCTION
OF
THE
SIZE
OF
R
Α
Β
P
WELL
CONDITIONED
BASIS
IS
AVAILABLE
THIS
FACTOR
TOGETHER
WITH
A
SAMPLE
COMPLEXITY
INCREASE
OF
R
P
2
P
R
P
2
NEEDED
TO
COMPENSATE
FOR
ERROR
DUE
TO
USING
2
GIVES
A
SAMPLE
COMPLEXITY
INCREASE
FOR
OUR
ALGORITHM
OVER
THAT
OF
DASGUPTA
ET
AL
OF
A
FACTOR
OF
R
P
2
R
P
TW
P
2
MAX
R
LOG
N
O
P
WHILE
THE
LEADING
TERM
IN
THE
COMPLEXITY
FOR
N
R
IS
REDUCED
FROM
O
NR
5
LOG
N
TO
O
NNZ
A
LOG
N
OBSERVE
THAT
IF
R
LOG
N
THEN
POLY
RΕ
LOG
N
IS
LESS
THAN
N
LOG
N
WHICH
IS
O
NNZ
A
LOG
N
THUS
THE
OVERALL
TIME
COMPLEXITY
IS
O
NNZ
A
LOG
N
POLY
RΕ
WE
ADJUST
THEOREM
4
OF
DASGUPTA
ET
AL
AND
OBTAIN
THE
FOLLOWING
THEOREM
9
4
GIVEN
0
A
CONSTANT
P
A
RN
D
AND
B
RN
THERE
IS
A
SAMPLING
ALGORITHM
FOR
P
REGRESSION
THAT
CONSTRUCTS
A
CORESET
SPECIFIED
BY
A
DIAGONAL
SAMPLING
MATRIX
D
AND
A
SOLUTION
VECTOR
X
RD
THAT
MINIMIZES
THE
WEIGHTED
REGRESSION
OBJECTIVE
D
AX
B
P
THE
SOLUTION
X
SATISFIES
WITH
PROBABILITY
AT
LEAST
2
THE
RELATIVE
ERROR
BOUND
THAT
AX
B
P
AX
B
P
FOR
ALL
X
RD
FURTHER
WITH
PROBABILITY
O
THE
ENTIRE
ALGORITHM
TO
CONSTRUCT
X
RUNS
IN
TIME
O
NNZ
A
LOG
N
POLY
RΕ
10
PRELIMINARY
EXPERIMENTS
SOME
PRELIMINARY
EXPERIMENTS
SHOW
THAT
A
LOW
RANK
APPROXIMATION
TECHNIQUE
THAT
IS
A
SIMPLIFIED
VERSION
OF
THESE
ALGORITHMS
IS
PROMISING
AND
IN
PRACTICE
MAY
PERFORM
MUCH
BETTER
THAN
THE
GENERAL
BOUNDS
OF
OUR
RESULTS
JOURNAL
OF
THE
ACM
VOL
NO
ARTICLE
PUBLICATION
DATE
JANUARY
K
L
CLARKSON
AND
D
P
WOODRUFF
FIG
2
A
PARETO
CURVE
OF
COND
SU
AS
A
FUNCTION
OF
THE
SIZE
OF
S
RELATIVE
TO
R
HERE
WE
APPLY
THE
ALGORITHM
OF
THEOREM
8
EXCEPT
THAT
WE
SKIP
THE
RANDOMIZED
HADAMARD
AND
SIMPLY
USE
A
SPARSE
EMBEDDING
R
AND
LEVERAGE
SCORE
SAMPLING
WE
COMPARE
THE
FROBENIUS
ERROR
OF
THE
RESULTING
LDW
WITH
THAT
OF
THE
BEST
RANK
K
APPROXIMATION
IN
OUR
EXPERIMENTS
THE
MATRICES
TESTED
ARE
N
D
THE
RESULTING
LOW
RANK
APPROXIMATION
WAS
TESTED
FOR
TR
THE
NUMBER
OF
COLUMNS
OF
R
TAKING
VALUES
OF
THE
FORM
6Z
0
5
FOR
INTEGER
Z
WHILE
TR
D
5
THE
NUMBER
TS
OF
ROWS
OF
S
WAS
CHOSEN
SUCH
THAT
THE
CONDITION
NUMBER
OF
SU
WAS
AT
MOST
2
SINCE
U
HAS
ORTHOGONAL
COLUMNS
ITS
CONDITION
NUMBER
IS
1
THUS
A
LARGE
ENOUGH
LEVERAGE
SCORE
SAMPLE
WILL
HAVE
THIS
PROPERTY
FOR
SUCH
TR
AND
TS
WE
TOOK
THE
RATIO
RE
OF
THE
FROBENIUS
NORM
OF
THE
ERROR
TO
THE
FROBENIUS
NORM
OF
THE
ERROR
OF
THE
BEST
RANK
K
APPROXIMATION
WHERE
K
TOOK
VALUES
OF
THE
FORM
1
6
J
FOR
INTEGERS
J
0
WITH
K
TR
2
THE
RESULTING
POINTS
K
TR
RE
1
WERE
GENERATED
FOR
ALL
TEST
MATRICES
FOR
THREE
INDEPENDENT
TRIALS
RESULTING
IN
A
SET
OF
POINTS
P
THE
TEST
MATRICES
ARE
FROM
THE
UNIVERSITY
OF
FLORIDA
SPARSE
MATRIX
COLLECTION
ESSENTIALLY
MOST
OF
THOSE
WITH
AT
MOST
NONZERO
ENTRIES
AND
WITH
N
UP
TO
ABOUT
THERE
WERE
MATRICES
TESTED
FROM
SUBCOLLECTIONS
OF
MATRICES
EACH
SUCH
SUBCOLLECTION
REPRESENTING
A
PARTICULAR
APPLICATION
AREA
THE
CURVE
IN
FIGURE
1
REPRESENTS
THE
RESULTS
OF
THESE
TESTS
IN
WHICH
FOR
A
PARTICULAR
POINT
X
Y
ON
THE
CURVE
AT
MOST
ONE
PERCENT
OF
POINTS
T
KR
RE
1
P
GAVE
A
RESULT
WHERE
K
TR
X
BUT
RE
1
Y
FIGURE
2
SHOWS
A
SIMILAR
CURVE
FOR
THE
POINTS
TR
TS
COND
SU
1
THUS
THE
NECESSARY
RATIO
TR
TS
SO
THAT
COND
SU
1
2
AS
FOR
THE
RESULTS
IN
FIGURE
1
NEED
BE
NO
SMALLER
THAN
ABOUT
1
110
JOURNAL
OF
THE
ACM
VOL
NO
6
ARTICLE
PUBLICATION
DATE
JANUARY
THE
LEMMA
NOW
FOLLOWS
BY
CHEBYSHEV
S
INEQUALITY
FOR
APPROPRIATE
T
Ε
2
PROOF
OF
LEMMA
7
12
LEMMA
OF
BOUTSIDIS
AND
GITTENS
SHOWS
THAT
S
A
F
1
Ε
A
F
WITH
ARBITRARILY
LOW
FAILURE
PROBABILITY
THE
OTHER
DIRECTION
FOLLOWS
FROM
A
SIMILAR
ARGUMENT
BRIEFLY
THE
EXPECTATION
OF
S
A
IS
A
BY
CONSTRUCTION
AND
LEMMA
OF
BOUTSIDIS
AND
GITTENS
IMPLIES
THAT
WITH
ARBITRARILY
SMALL
FAILURE
PROBABILITY
ALL
ROWS
OF
S
A
WILL
HAVE
A
SQUARED
NORM
AT
MOST
Β
ΑT
A
WHERE
Α
IS
A
VALUE
IN
O
LOG
N
ASSUMING
THAT
THIS
BOUND
HOLDS
IT
FOLLOWS
FROM
HOEFFDING
S
INEQUALITY
THAT
THE
PROBABILITY
THAT
S
A
A
Ε
A
IS
AT
MOST
2
EXP
2
Ε
A
2
TΒ
2
OR
2
EXP
T
Α
2
SO
THAT
T
Ε
2
LOG
N
2
SUFFICES
TO
MAKE
THE
FAILURE
PROBABILITY
AT
MOST
1
10
PROOF
OF
LEMMA
9
3
THIS
IS
ALMOST
EXACTLY
THE
SAME
AS
IN
CLARKSON
ET
AL
WE
SIMPLY
ADJUST
NOTATION
AND
PARAMETERS
APPLYING
THEOREM
5
1
WE
HAVE
THAT
WITH
PROBABILITY
AT
LEAST
1
1
FOR
ALL
X
RR
IF
WE
CONSIDER
Y
AX
AND
WRITE
P
WELL
CONDITIONED
BASIS
THE
TIME
TO
COMTHUS
AU
RΓ
P
IS
AN
Α
Β
TW
PUTE
F
A
IS
O
NNZ
A
LOG
N
BY
THEOREM
5
1
NOTE
THAT
F
A
IS
AN
NT
W
N
MATRIX
WHICH
IS
O
N
R
5
R
THUS
THE
TIME
TO
COMPUTE
U
FROM
F
A
IS
O
N
R
5
R
5
LOG
N
O
NNZ
A
LOG
N
SINCE
NNZ
A
N
